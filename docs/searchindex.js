Search.setIndex({"docnames": ["README", "auto/ase2sprkkr", "auto/ase2sprkkr.ase", "auto/ase2sprkkr.ase.visualise", "auto/ase2sprkkr.ase.visualise.view", "auto/ase2sprkkr.bindings", "auto/ase2sprkkr.bindings.es_finder", "auto/ase2sprkkr.bindings.es_finder.EmptySpheresResult", "auto/ase2sprkkr.bindings.es_finder.add_empty_spheres", "auto/ase2sprkkr.bindings.es_finder.empty_spheres", "auto/ase2sprkkr.bindings.spglib", "auto/ase2sprkkr.bindings.spglib.SpacegroupInfo", "auto/ase2sprkkr.bindings.spglib.possibly_equivalent_sites", "auto/ase2sprkkr.common", "auto/ase2sprkkr.common.alternative_types", "auto/ase2sprkkr.common.alternative_types.allowed_types", "auto/ase2sprkkr.common.alternative_types.normalize_type", "auto/ase2sprkkr.common.alternative_types.normalize_type_map", "auto/ase2sprkkr.common.alternative_types.types_alternatives", "auto/ase2sprkkr.common.configuration", "auto/ase2sprkkr.common.configuration.Configuration", "auto/ase2sprkkr.common.configuration_containers", "auto/ase2sprkkr.common.configuration_containers.BaseSection", "auto/ase2sprkkr.common.configuration_containers.ConfigurationContainer", "auto/ase2sprkkr.common.configuration_containers.CustomSection", "auto/ase2sprkkr.common.configuration_containers.RootConfigurationContainer", "auto/ase2sprkkr.common.configuration_containers.Section", "auto/ase2sprkkr.common.configuration_definitions", "auto/ase2sprkkr.common.configuration_definitions.BaseDefinition", "auto/ase2sprkkr.common.configuration_definitions.ConfigurationRootDefinition", "auto/ase2sprkkr.common.configuration_definitions.ContainerDefinition", "auto/ase2sprkkr.common.configuration_definitions.SectionDefinition", "auto/ase2sprkkr.common.configuration_definitions.ValueDefinition", "auto/ase2sprkkr.common.configuration_definitions.add_excluded_names_condition", "auto/ase2sprkkr.common.configuration_definitions.unique_dict", "auto/ase2sprkkr.common.decorators", "auto/ase2sprkkr.common.decorators.add_called_class_as_argument", "auto/ase2sprkkr.common.decorators.add_to_signature", "auto/ase2sprkkr.common.decorators.cache", "auto/ase2sprkkr.common.decorators.cached_class_property", "auto/ase2sprkkr.common.decorators.cached_property", "auto/ase2sprkkr.common.decorators.class_property", "auto/ase2sprkkr.common.doc", "auto/ase2sprkkr.common.doc.process_input_parameters_definition", "auto/ase2sprkkr.common.doc.verbatim", "auto/ase2sprkkr.common.formats", "auto/ase2sprkkr.common.formats.fortran_format", "auto/ase2sprkkr.common.grammar", "auto/ase2sprkkr.common.grammar.White", "auto/ase2sprkkr.common.grammar.addConditionEx", "auto/ase2sprkkr.common.grammar.addParseActionEx", "auto/ase2sprkkr.common.grammar.delimitedList", "auto/ase2sprkkr.common.grammar.end_of_file", "auto/ase2sprkkr.common.grammar.generate_grammar", "auto/ase2sprkkr.common.grammar.line_end", "auto/ase2sprkkr.common.grammar.optional_line_end", "auto/ase2sprkkr.common.grammar.optional_quote", "auto/ase2sprkkr.common.grammar.replace_whitechars", "auto/ase2sprkkr.common.grammar.separator", "auto/ase2sprkkr.common.grammar.separator_pattern", "auto/ase2sprkkr.common.grammar_types", "auto/ase2sprkkr.common.grammar_types.Array", "auto/ase2sprkkr.common.grammar_types.BaseMixed", "auto/ase2sprkkr.common.grammar_types.BaseRealWithUnits", "auto/ase2sprkkr.common.grammar_types.BaseString", "auto/ase2sprkkr.common.grammar_types.Bool", "auto/ase2sprkkr.common.grammar_types.Complex", "auto/ase2sprkkr.common.grammar_types.Date", "auto/ase2sprkkr.common.grammar_types.DefKeyword", "auto/ase2sprkkr.common.grammar_types.Energy", "auto/ase2sprkkr.common.grammar_types.Flag", "auto/ase2sprkkr.common.grammar_types.GrammarType", "auto/ase2sprkkr.common.grammar_types.Integer", "auto/ase2sprkkr.common.grammar_types.Keyword", "auto/ase2sprkkr.common.grammar_types.LineString", "auto/ase2sprkkr.common.grammar_types.Mixed", "auto/ase2sprkkr.common.grammar_types.Number", "auto/ase2sprkkr.common.grammar_types.ObjectNumber", "auto/ase2sprkkr.common.grammar_types.PotMixed", "auto/ase2sprkkr.common.grammar_types.QString", "auto/ase2sprkkr.common.grammar_types.Range", "auto/ase2sprkkr.common.grammar_types.Real", "auto/ase2sprkkr.common.grammar_types.RealWithUnits", "auto/ase2sprkkr.common.grammar_types.Separator", "auto/ase2sprkkr.common.grammar_types.Sequence", "auto/ase2sprkkr.common.grammar_types.SetOf", "auto/ase2sprkkr.common.grammar_types.String", "auto/ase2sprkkr.common.grammar_types.Table", "auto/ase2sprkkr.common.grammar_types.TypedGrammarType", "auto/ase2sprkkr.common.grammar_types.Unsigned", "auto/ase2sprkkr.common.grammar_types.boolean", "auto/ase2sprkkr.common.grammar_types.compare_numpy_values", "auto/ase2sprkkr.common.grammar_types.complex_number", "auto/ase2sprkkr.common.grammar_types.date", "auto/ase2sprkkr.common.grammar_types.energy", "auto/ase2sprkkr.common.grammar_types.flag", "auto/ase2sprkkr.common.grammar_types.format_for_type", "auto/ase2sprkkr.common.grammar_types.integer", "auto/ase2sprkkr.common.grammar_types.line_string", "auto/ase2sprkkr.common.grammar_types.mixed", "auto/ase2sprkkr.common.grammar_types.pot_mixed", "auto/ase2sprkkr.common.grammar_types.qstring", "auto/ase2sprkkr.common.grammar_types.real", "auto/ase2sprkkr.common.grammar_types.recognized_set_types", "auto/ase2sprkkr.common.grammar_types.separator", "auto/ase2sprkkr.common.grammar_types.set_of_integers", "auto/ase2sprkkr.common.grammar_types.set_of_reals", "auto/ase2sprkkr.common.grammar_types.string", "auto/ase2sprkkr.common.grammar_types.type_from_default_value", "auto/ase2sprkkr.common.grammar_types.type_from_set_map", "auto/ase2sprkkr.common.grammar_types.type_from_type", "auto/ase2sprkkr.common.grammar_types.type_from_type_map", "auto/ase2sprkkr.common.grammar_types.type_from_value", "auto/ase2sprkkr.common.grammar_types.unsigned", "auto/ase2sprkkr.common.init_tests", "auto/ase2sprkkr.common.init_tests.TestCase", "auto/ase2sprkkr.common.init_tests.patch_package", "auto/ase2sprkkr.common.misc", "auto/ase2sprkkr.common.misc.OrderedDict", "auto/ase2sprkkr.common.misc.as_integer", "auto/ase2sprkkr.common.misc.copy_list", "auto/ase2sprkkr.common.misc.njit", "auto/ase2sprkkr.common.misc.numpy_index", "auto/ase2sprkkr.common.no_output", "auto/ase2sprkkr.common.no_output.NoOutput", "auto/ase2sprkkr.common.options", "auto/ase2sprkkr.common.options.CustomOption", "auto/ase2sprkkr.common.options.DangerousValue", "auto/ase2sprkkr.common.options.Option", "auto/ase2sprkkr.common.process_output_reader", "auto/ase2sprkkr.common.process_output_reader.AsyncioFileReader", "auto/ase2sprkkr.common.process_output_reader.BaseProcessOutputReader", "auto/ase2sprkkr.common.test", "auto/ase2sprkkr.common.test.init_tests", "auto/ase2sprkkr.common.test.init_tests.TestCase", "auto/ase2sprkkr.common.test.test_common", "auto/ase2sprkkr.common.test.test_common.CommonTest", "auto/ase2sprkkr.common.test.test_grammar_types", "auto/ase2sprkkr.common.test.test_grammar_types.GrammarTest", "auto/ase2sprkkr.common.unique_values", "auto/ase2sprkkr.common.unique_values.UniqueValuesMapping", "auto/ase2sprkkr.input_parameters", "auto/ase2sprkkr.input_parameters.definitions", "auto/ase2sprkkr.input_parameters.definitions.arpes", "auto/ase2sprkkr.input_parameters.definitions.arpes.input_parameters", "auto/ase2sprkkr.input_parameters.definitions.dos", "auto/ase2sprkkr.input_parameters.definitions.dos.input_parameters", "auto/ase2sprkkr.input_parameters.definitions.phagen", "auto/ase2sprkkr.input_parameters.definitions.phagen.input_parameters", "auto/ase2sprkkr.input_parameters.definitions.scf", "auto/ase2sprkkr.input_parameters.definitions.scf.input_parameters", "auto/ase2sprkkr.input_parameters.definitions.sections", "auto/ase2sprkkr.input_parameters.definitions.sections.CONTROL", "auto/ase2sprkkr.input_parameters.definitions.sections.CPA", "auto/ase2sprkkr.input_parameters.definitions.sections.ENERGY", "auto/ase2sprkkr.input_parameters.definitions.sections.MODE", "auto/ase2sprkkr.input_parameters.definitions.sections.SCF", "auto/ase2sprkkr.input_parameters.definitions.sections.SITES", "auto/ase2sprkkr.input_parameters.definitions.sections.STRCONST", "auto/ase2sprkkr.input_parameters.definitions.sections.TASK", "auto/ase2sprkkr.input_parameters.definitions.sections.TAU", "auto/ase2sprkkr.input_parameters.input_parameters", "auto/ase2sprkkr.input_parameters.input_parameters.InputParameters", "auto/ase2sprkkr.input_parameters.input_parameters.resolve_executable_postfix", "auto/ase2sprkkr.input_parameters.input_parameters_definitions", "auto/ase2sprkkr.input_parameters.input_parameters_definitions.InputParametersDefinition", "auto/ase2sprkkr.input_parameters.input_parameters_definitions.InputSectionDefinition", "auto/ase2sprkkr.input_parameters.input_parameters_definitions.InputValueDefinition", "auto/ase2sprkkr.input_parameters.test", "auto/ase2sprkkr.input_parameters.test.init_tests", "auto/ase2sprkkr.input_parameters.test.init_tests.TestCase", "auto/ase2sprkkr.input_parameters.test.test_definitions", "auto/ase2sprkkr.input_parameters.test.test_definitions.TestDefinitions", "auto/ase2sprkkr.input_parameters.test.test_input_parameters", "auto/ase2sprkkr.input_parameters.test.test_input_parameters.TestInputParameters", "auto/ase2sprkkr.outputs", "auto/ase2sprkkr.outputs.output_definitions", "auto/ase2sprkkr.outputs.output_definitions.OutputNonameValueDefinition", "auto/ase2sprkkr.outputs.output_definitions.OutputSectionDefinition", "auto/ase2sprkkr.outputs.output_definitions.OutputValueDefinition", "auto/ase2sprkkr.outputs.output_definitions.OutputValueEqualDefinition", "auto/ase2sprkkr.outputs.readers", "auto/ase2sprkkr.outputs.readers.default", "auto/ase2sprkkr.outputs.readers.default.DefaultOutputReader", "auto/ase2sprkkr.outputs.readers.default.DefaultResult", "auto/ase2sprkkr.outputs.readers.scf", "auto/ase2sprkkr.outputs.readers.scf.ScfOutputReader", "auto/ase2sprkkr.outputs.readers.scf.ScfResult", "auto/ase2sprkkr.outputs.task_result", "auto/ase2sprkkr.outputs.task_result.OutputReader", "auto/ase2sprkkr.outputs.task_result.TaskResult", "auto/ase2sprkkr.outputs.test", "auto/ase2sprkkr.outputs.test.init_tests", "auto/ase2sprkkr.outputs.test.init_tests.TestCase", "auto/ase2sprkkr.outputs.test.test_output", "auto/ase2sprkkr.outputs.test.test_output.TestOutput", "auto/ase2sprkkr.physics", "auto/ase2sprkkr.physics.lattice_data", "auto/ase2sprkkr.physics.lattice_data.LatticeData", "auto/ase2sprkkr.physics.winger_seitz_radii", "auto/ase2sprkkr.physics.winger_seitz_radii.winger_seitz_radii", "auto/ase2sprkkr.potentials", "auto/ase2sprkkr.potentials.custom_potential_section", "auto/ase2sprkkr.potentials.custom_potential_section.CustomPotentialSection", "auto/ase2sprkkr.potentials.custom_potential_section.CustomPotentialSectionDefinition", "auto/ase2sprkkr.potentials.custom_potential_section.CustomSectionToken", "auto/ase2sprkkr.potentials.custom_potential_section.SectionString", "auto/ase2sprkkr.potentials.definitions", "auto/ase2sprkkr.potentials.definitions.potential", "auto/ase2sprkkr.potentials.definitions.potential.potential_definition", "auto/ase2sprkkr.potentials.definitions.sections", "auto/ase2sprkkr.potentials.definitions.sections._sections", "auto/ase2sprkkr.potentials.definitions.sections.global_system_parameter", "auto/ase2sprkkr.potentials.definitions.sections.global_system_parameter.GlobalSystemParameter", "auto/ase2sprkkr.potentials.definitions.sections.global_system_parameter.GlobalSystemParameterDefinition", "auto/ase2sprkkr.potentials.definitions.sections.global_system_parameter.section", "auto/ase2sprkkr.potentials.definitions.sections.lattice", "auto/ase2sprkkr.potentials.definitions.sections.lattice.LatticeSection", "auto/ase2sprkkr.potentials.definitions.sections.lattice.LatticeSectionDefinition", "auto/ase2sprkkr.potentials.definitions.sections.lattice.section", "auto/ase2sprkkr.potentials.definitions.sections.mesh_information", "auto/ase2sprkkr.potentials.definitions.sections.mesh_information.MeshInformationSection", "auto/ase2sprkkr.potentials.definitions.sections.mesh_information.MeshInformationSectionDefinition", "auto/ase2sprkkr.potentials.definitions.sections.mesh_information.section", "auto/ase2sprkkr.potentials.definitions.sections.occupation", "auto/ase2sprkkr.potentials.definitions.sections.occupation.OccupationSection", "auto/ase2sprkkr.potentials.definitions.sections.occupation.OccupationSectionDefinition", "auto/ase2sprkkr.potentials.definitions.sections.occupation.section", "auto/ase2sprkkr.potentials.definitions.sections.reference_system", "auto/ase2sprkkr.potentials.definitions.sections.reference_system.ReferenceSystemSection", "auto/ase2sprkkr.potentials.definitions.sections.reference_system.ReferenceSystemSectionDefinition", "auto/ase2sprkkr.potentials.definitions.sections.reference_system.section", "auto/ase2sprkkr.potentials.definitions.sections.sites", "auto/ase2sprkkr.potentials.definitions.sections.sites.SitesSection", "auto/ase2sprkkr.potentials.definitions.sections.sites.SitesSectionDefinition", "auto/ase2sprkkr.potentials.definitions.sections.sites.section", "auto/ase2sprkkr.potentials.definitions.sections.types", "auto/ase2sprkkr.potentials.definitions.sections.types.TypesSection", "auto/ase2sprkkr.potentials.definitions.sections.types.TypesSectionDefinition", "auto/ase2sprkkr.potentials.definitions.sections.types.section", "auto/ase2sprkkr.potentials.potential_definitions", "auto/ase2sprkkr.potentials.potential_definitions.ASEArraySectionDefinition", "auto/ase2sprkkr.potentials.potential_definitions.PotSectionDefinition", "auto/ase2sprkkr.potentials.potential_definitions.PotValueDefinition", "auto/ase2sprkkr.potentials.potential_definitions.PotentialDefinition", "auto/ase2sprkkr.potentials.potential_definitions.Separator", "auto/ase2sprkkr.potentials.potential_sections", "auto/ase2sprkkr.potentials.potential_sections.ASEArraySection", "auto/ase2sprkkr.potentials.potential_sections.PotentialSection", "auto/ase2sprkkr.potentials.potential_sections.UniqueListSection", "auto/ase2sprkkr.potentials.potentials", "auto/ase2sprkkr.potentials.potentials.Potential", "auto/ase2sprkkr.potentials.test", "auto/ase2sprkkr.potentials.test.init_tests", "auto/ase2sprkkr.potentials.test.init_tests.TestCase", "auto/ase2sprkkr.potentials.test.test_custom_section", "auto/ase2sprkkr.potentials.test.test_custom_section.TestCustomSection", "auto/ase2sprkkr.potentials.test.test_potential", "auto/ase2sprkkr.potentials.test.test_potential.TestPotential", "auto/ase2sprkkr.potentials.test.test_structure", "auto/ase2sprkkr.potentials.test.test_structure.TestStructure", "auto/ase2sprkkr.sprkkr", "auto/ase2sprkkr.sprkkr.atomic_types", "auto/ase2sprkkr.sprkkr.atomic_types.AtomicType", "auto/ase2sprkkr.sprkkr.calculator", "auto/ase2sprkkr.sprkkr.calculator.FilenameTemplator", "auto/ase2sprkkr.sprkkr.calculator.SPRKKR", "auto/ase2sprkkr.sprkkr.configuration", "auto/ase2sprkkr.sprkkr.configuration.ConfigurationFile", "auto/ase2sprkkr.sprkkr.configuration.ConfigurationFileDefinition", "auto/ase2sprkkr.sprkkr.configuration.ConfigurationSection", "auto/ase2sprkkr.sprkkr.configuration.ConfigurationSectionDefinition", "auto/ase2sprkkr.sprkkr.configuration.ConfigurationSectionTrait", "auto/ase2sprkkr.sprkkr.configuration.ConfigurationValue", "auto/ase2sprkkr.sprkkr.configuration.ConfigurationValueDefinition", "auto/ase2sprkkr.sprkkr.configuration.CustomConfigurationSection", "auto/ase2sprkkr.sprkkr.configuration.CustomConfigurationValue", "auto/ase2sprkkr.sprkkr.io_data", "auto/ase2sprkkr.sprkkr.io_data.BaseIoData", "auto/ase2sprkkr.sprkkr.io_data.ReadIoData", "auto/ase2sprkkr.sprkkr.io_data.WriteIoData", "auto/ase2sprkkr.sprkkr.io_data.unique_mapping", "auto/ase2sprkkr.sprkkr.occupations", "auto/ase2sprkkr.sprkkr.occupations.Occupation", "auto/ase2sprkkr.sprkkr.radial_meshes", "auto/ase2sprkkr.sprkkr.radial_meshes.ExponentialMesh", "auto/ase2sprkkr.sprkkr.radial_meshes.Mesh", "auto/ase2sprkkr.sprkkr.reference_systems", "auto/ase2sprkkr.sprkkr.reference_systems.ReferenceSystem", "auto/ase2sprkkr.sprkkr.sites", "auto/ase2sprkkr.sprkkr.sites.Site", "auto/ase2sprkkr.sprkkr.sprkkr_atoms", "auto/ase2sprkkr.sprkkr.sprkkr_atoms.SPRKKRAtoms", "auto/ase2sprkkr.sprkkr.sprkkr_grammar_types", "auto/ase2sprkkr.sprkkr.sprkkr_grammar_types.AtomicType", "auto/ase2sprkkr.sprkkr.sprkkr_grammar_types.Site", "auto/ase2sprkkr.sprkkr.structure", "auto/ase2sprkkr.sprkkr.structure.AtomData", "auto/ase2sprkkr.sprkkr.structure.LayerData", "auto/ase2sprkkr.sprkkr.structure.floatjm", "auto/ase2sprkkr.sprkkr.structure.structure_file_to_atoms", "auto/ase2sprkkr.sprkkr.sysfile", "auto/ase2sprkkr.sprkkr.sysfile.sysfile_content", "auto/ase2sprkkr.sprkkr.sysfile.write_sysfile", "auto/ase2sprkkr.sprkkr.test", "auto/ase2sprkkr.sprkkr.test.init_tests", "auto/ase2sprkkr.sprkkr.test.init_tests.TestCase", "auto/ase2sprkkr.sprkkr.test.test_calculator", "auto/ase2sprkkr.sprkkr.test.test_calculator.CalculatorTest", "auto/ase2sprkkr.sprkkr.test.test_sites", "auto/ase2sprkkr.sprkkr.test.test_sites.SitesTest", "auto/ase2sprkkr.sprkkr.test.test_sprkkr_atoms", "auto/ase2sprkkr.sprkkr.test.test_sprkkr_atoms.SPRKKRAtomsTest", "auto/ase2sprkkr.sprkkr.test.test_sysfile", "auto/ase2sprkkr.sprkkr.test.test_sysfile.SysfileTest", "auto/ase2sprkkr.tools", "auto/ase2sprkkr.tools.a2s_visualise_in_struct", "auto/ase2sprkkr.tools.a2s_visualise_in_struct.visualise", "auto/ase2sprkkr.tools.test", "auto/ase2sprkkr.tools.test.init_tests", "auto/ase2sprkkr.tools.test.init_tests.TestCase", "auto/ase2sprkkr.tools.test.test_tools", "auto/ase2sprkkr.tools.test.test_tools.CommonTest", "auto/ase2sprkkr.version", "auto/modules", "changelog", "how-to-install", "index", "installation", "introduction", "philosophy", "usage"], "filenames": ["README.rst", "auto/ase2sprkkr.rst", "auto/ase2sprkkr.ase.rst", "auto/ase2sprkkr.ase.visualise.rst", "auto/ase2sprkkr.ase.visualise.view.rst", "auto/ase2sprkkr.bindings.rst", "auto/ase2sprkkr.bindings.es_finder.rst", "auto/ase2sprkkr.bindings.es_finder.EmptySpheresResult.rst", "auto/ase2sprkkr.bindings.es_finder.add_empty_spheres.rst", "auto/ase2sprkkr.bindings.es_finder.empty_spheres.rst", "auto/ase2sprkkr.bindings.spglib.rst", "auto/ase2sprkkr.bindings.spglib.SpacegroupInfo.rst", "auto/ase2sprkkr.bindings.spglib.possibly_equivalent_sites.rst", "auto/ase2sprkkr.common.rst", "auto/ase2sprkkr.common.alternative_types.rst", "auto/ase2sprkkr.common.alternative_types.allowed_types.rst", "auto/ase2sprkkr.common.alternative_types.normalize_type.rst", "auto/ase2sprkkr.common.alternative_types.normalize_type_map.rst", "auto/ase2sprkkr.common.alternative_types.types_alternatives.rst", "auto/ase2sprkkr.common.configuration.rst", "auto/ase2sprkkr.common.configuration.Configuration.rst", "auto/ase2sprkkr.common.configuration_containers.rst", "auto/ase2sprkkr.common.configuration_containers.BaseSection.rst", "auto/ase2sprkkr.common.configuration_containers.ConfigurationContainer.rst", "auto/ase2sprkkr.common.configuration_containers.CustomSection.rst", "auto/ase2sprkkr.common.configuration_containers.RootConfigurationContainer.rst", "auto/ase2sprkkr.common.configuration_containers.Section.rst", "auto/ase2sprkkr.common.configuration_definitions.rst", "auto/ase2sprkkr.common.configuration_definitions.BaseDefinition.rst", "auto/ase2sprkkr.common.configuration_definitions.ConfigurationRootDefinition.rst", "auto/ase2sprkkr.common.configuration_definitions.ContainerDefinition.rst", "auto/ase2sprkkr.common.configuration_definitions.SectionDefinition.rst", "auto/ase2sprkkr.common.configuration_definitions.ValueDefinition.rst", "auto/ase2sprkkr.common.configuration_definitions.add_excluded_names_condition.rst", "auto/ase2sprkkr.common.configuration_definitions.unique_dict.rst", "auto/ase2sprkkr.common.decorators.rst", "auto/ase2sprkkr.common.decorators.add_called_class_as_argument.rst", "auto/ase2sprkkr.common.decorators.add_to_signature.rst", "auto/ase2sprkkr.common.decorators.cache.rst", "auto/ase2sprkkr.common.decorators.cached_class_property.rst", "auto/ase2sprkkr.common.decorators.cached_property.rst", "auto/ase2sprkkr.common.decorators.class_property.rst", "auto/ase2sprkkr.common.doc.rst", "auto/ase2sprkkr.common.doc.process_input_parameters_definition.rst", "auto/ase2sprkkr.common.doc.verbatim.rst", "auto/ase2sprkkr.common.formats.rst", "auto/ase2sprkkr.common.formats.fortran_format.rst", "auto/ase2sprkkr.common.grammar.rst", "auto/ase2sprkkr.common.grammar.White.rst", "auto/ase2sprkkr.common.grammar.addConditionEx.rst", "auto/ase2sprkkr.common.grammar.addParseActionEx.rst", "auto/ase2sprkkr.common.grammar.delimitedList.rst", "auto/ase2sprkkr.common.grammar.end_of_file.rst", "auto/ase2sprkkr.common.grammar.generate_grammar.rst", "auto/ase2sprkkr.common.grammar.line_end.rst", "auto/ase2sprkkr.common.grammar.optional_line_end.rst", "auto/ase2sprkkr.common.grammar.optional_quote.rst", "auto/ase2sprkkr.common.grammar.replace_whitechars.rst", "auto/ase2sprkkr.common.grammar.separator.rst", "auto/ase2sprkkr.common.grammar.separator_pattern.rst", "auto/ase2sprkkr.common.grammar_types.rst", "auto/ase2sprkkr.common.grammar_types.Array.rst", "auto/ase2sprkkr.common.grammar_types.BaseMixed.rst", "auto/ase2sprkkr.common.grammar_types.BaseRealWithUnits.rst", "auto/ase2sprkkr.common.grammar_types.BaseString.rst", "auto/ase2sprkkr.common.grammar_types.Bool.rst", "auto/ase2sprkkr.common.grammar_types.Complex.rst", "auto/ase2sprkkr.common.grammar_types.Date.rst", "auto/ase2sprkkr.common.grammar_types.DefKeyword.rst", "auto/ase2sprkkr.common.grammar_types.Energy.rst", "auto/ase2sprkkr.common.grammar_types.Flag.rst", "auto/ase2sprkkr.common.grammar_types.GrammarType.rst", "auto/ase2sprkkr.common.grammar_types.Integer.rst", "auto/ase2sprkkr.common.grammar_types.Keyword.rst", "auto/ase2sprkkr.common.grammar_types.LineString.rst", "auto/ase2sprkkr.common.grammar_types.Mixed.rst", "auto/ase2sprkkr.common.grammar_types.Number.rst", "auto/ase2sprkkr.common.grammar_types.ObjectNumber.rst", "auto/ase2sprkkr.common.grammar_types.PotMixed.rst", "auto/ase2sprkkr.common.grammar_types.QString.rst", "auto/ase2sprkkr.common.grammar_types.Range.rst", "auto/ase2sprkkr.common.grammar_types.Real.rst", "auto/ase2sprkkr.common.grammar_types.RealWithUnits.rst", "auto/ase2sprkkr.common.grammar_types.Separator.rst", "auto/ase2sprkkr.common.grammar_types.Sequence.rst", "auto/ase2sprkkr.common.grammar_types.SetOf.rst", "auto/ase2sprkkr.common.grammar_types.String.rst", "auto/ase2sprkkr.common.grammar_types.Table.rst", "auto/ase2sprkkr.common.grammar_types.TypedGrammarType.rst", "auto/ase2sprkkr.common.grammar_types.Unsigned.rst", "auto/ase2sprkkr.common.grammar_types.boolean.rst", "auto/ase2sprkkr.common.grammar_types.compare_numpy_values.rst", "auto/ase2sprkkr.common.grammar_types.complex_number.rst", "auto/ase2sprkkr.common.grammar_types.date.rst", "auto/ase2sprkkr.common.grammar_types.energy.rst", "auto/ase2sprkkr.common.grammar_types.flag.rst", "auto/ase2sprkkr.common.grammar_types.format_for_type.rst", "auto/ase2sprkkr.common.grammar_types.integer.rst", "auto/ase2sprkkr.common.grammar_types.line_string.rst", "auto/ase2sprkkr.common.grammar_types.mixed.rst", "auto/ase2sprkkr.common.grammar_types.pot_mixed.rst", "auto/ase2sprkkr.common.grammar_types.qstring.rst", "auto/ase2sprkkr.common.grammar_types.real.rst", "auto/ase2sprkkr.common.grammar_types.recognized_set_types.rst", "auto/ase2sprkkr.common.grammar_types.separator.rst", "auto/ase2sprkkr.common.grammar_types.set_of_integers.rst", "auto/ase2sprkkr.common.grammar_types.set_of_reals.rst", "auto/ase2sprkkr.common.grammar_types.string.rst", "auto/ase2sprkkr.common.grammar_types.type_from_default_value.rst", "auto/ase2sprkkr.common.grammar_types.type_from_set_map.rst", "auto/ase2sprkkr.common.grammar_types.type_from_type.rst", "auto/ase2sprkkr.common.grammar_types.type_from_type_map.rst", "auto/ase2sprkkr.common.grammar_types.type_from_value.rst", "auto/ase2sprkkr.common.grammar_types.unsigned.rst", "auto/ase2sprkkr.common.init_tests.rst", "auto/ase2sprkkr.common.init_tests.TestCase.rst", "auto/ase2sprkkr.common.init_tests.patch_package.rst", "auto/ase2sprkkr.common.misc.rst", "auto/ase2sprkkr.common.misc.OrderedDict.rst", "auto/ase2sprkkr.common.misc.as_integer.rst", "auto/ase2sprkkr.common.misc.copy_list.rst", "auto/ase2sprkkr.common.misc.njit.rst", "auto/ase2sprkkr.common.misc.numpy_index.rst", "auto/ase2sprkkr.common.no_output.rst", "auto/ase2sprkkr.common.no_output.NoOutput.rst", "auto/ase2sprkkr.common.options.rst", "auto/ase2sprkkr.common.options.CustomOption.rst", "auto/ase2sprkkr.common.options.DangerousValue.rst", "auto/ase2sprkkr.common.options.Option.rst", "auto/ase2sprkkr.common.process_output_reader.rst", "auto/ase2sprkkr.common.process_output_reader.AsyncioFileReader.rst", "auto/ase2sprkkr.common.process_output_reader.BaseProcessOutputReader.rst", "auto/ase2sprkkr.common.test.rst", "auto/ase2sprkkr.common.test.init_tests.rst", "auto/ase2sprkkr.common.test.init_tests.TestCase.rst", "auto/ase2sprkkr.common.test.test_common.rst", "auto/ase2sprkkr.common.test.test_common.CommonTest.rst", "auto/ase2sprkkr.common.test.test_grammar_types.rst", "auto/ase2sprkkr.common.test.test_grammar_types.GrammarTest.rst", "auto/ase2sprkkr.common.unique_values.rst", "auto/ase2sprkkr.common.unique_values.UniqueValuesMapping.rst", "auto/ase2sprkkr.input_parameters.rst", "auto/ase2sprkkr.input_parameters.definitions.rst", "auto/ase2sprkkr.input_parameters.definitions.arpes.rst", "auto/ase2sprkkr.input_parameters.definitions.arpes.input_parameters.rst", "auto/ase2sprkkr.input_parameters.definitions.dos.rst", "auto/ase2sprkkr.input_parameters.definitions.dos.input_parameters.rst", "auto/ase2sprkkr.input_parameters.definitions.phagen.rst", "auto/ase2sprkkr.input_parameters.definitions.phagen.input_parameters.rst", "auto/ase2sprkkr.input_parameters.definitions.scf.rst", "auto/ase2sprkkr.input_parameters.definitions.scf.input_parameters.rst", "auto/ase2sprkkr.input_parameters.definitions.sections.rst", "auto/ase2sprkkr.input_parameters.definitions.sections.CONTROL.rst", "auto/ase2sprkkr.input_parameters.definitions.sections.CPA.rst", "auto/ase2sprkkr.input_parameters.definitions.sections.ENERGY.rst", "auto/ase2sprkkr.input_parameters.definitions.sections.MODE.rst", "auto/ase2sprkkr.input_parameters.definitions.sections.SCF.rst", "auto/ase2sprkkr.input_parameters.definitions.sections.SITES.rst", "auto/ase2sprkkr.input_parameters.definitions.sections.STRCONST.rst", "auto/ase2sprkkr.input_parameters.definitions.sections.TASK.rst", "auto/ase2sprkkr.input_parameters.definitions.sections.TAU.rst", "auto/ase2sprkkr.input_parameters.input_parameters.rst", "auto/ase2sprkkr.input_parameters.input_parameters.InputParameters.rst", "auto/ase2sprkkr.input_parameters.input_parameters.resolve_executable_postfix.rst", "auto/ase2sprkkr.input_parameters.input_parameters_definitions.rst", "auto/ase2sprkkr.input_parameters.input_parameters_definitions.InputParametersDefinition.rst", "auto/ase2sprkkr.input_parameters.input_parameters_definitions.InputSectionDefinition.rst", "auto/ase2sprkkr.input_parameters.input_parameters_definitions.InputValueDefinition.rst", "auto/ase2sprkkr.input_parameters.test.rst", "auto/ase2sprkkr.input_parameters.test.init_tests.rst", "auto/ase2sprkkr.input_parameters.test.init_tests.TestCase.rst", "auto/ase2sprkkr.input_parameters.test.test_definitions.rst", "auto/ase2sprkkr.input_parameters.test.test_definitions.TestDefinitions.rst", "auto/ase2sprkkr.input_parameters.test.test_input_parameters.rst", "auto/ase2sprkkr.input_parameters.test.test_input_parameters.TestInputParameters.rst", "auto/ase2sprkkr.outputs.rst", "auto/ase2sprkkr.outputs.output_definitions.rst", "auto/ase2sprkkr.outputs.output_definitions.OutputNonameValueDefinition.rst", "auto/ase2sprkkr.outputs.output_definitions.OutputSectionDefinition.rst", "auto/ase2sprkkr.outputs.output_definitions.OutputValueDefinition.rst", "auto/ase2sprkkr.outputs.output_definitions.OutputValueEqualDefinition.rst", "auto/ase2sprkkr.outputs.readers.rst", "auto/ase2sprkkr.outputs.readers.default.rst", "auto/ase2sprkkr.outputs.readers.default.DefaultOutputReader.rst", "auto/ase2sprkkr.outputs.readers.default.DefaultResult.rst", "auto/ase2sprkkr.outputs.readers.scf.rst", "auto/ase2sprkkr.outputs.readers.scf.ScfOutputReader.rst", "auto/ase2sprkkr.outputs.readers.scf.ScfResult.rst", "auto/ase2sprkkr.outputs.task_result.rst", "auto/ase2sprkkr.outputs.task_result.OutputReader.rst", "auto/ase2sprkkr.outputs.task_result.TaskResult.rst", "auto/ase2sprkkr.outputs.test.rst", "auto/ase2sprkkr.outputs.test.init_tests.rst", "auto/ase2sprkkr.outputs.test.init_tests.TestCase.rst", "auto/ase2sprkkr.outputs.test.test_output.rst", "auto/ase2sprkkr.outputs.test.test_output.TestOutput.rst", "auto/ase2sprkkr.physics.rst", "auto/ase2sprkkr.physics.lattice_data.rst", "auto/ase2sprkkr.physics.lattice_data.LatticeData.rst", "auto/ase2sprkkr.physics.winger_seitz_radii.rst", "auto/ase2sprkkr.physics.winger_seitz_radii.winger_seitz_radii.rst", "auto/ase2sprkkr.potentials.rst", "auto/ase2sprkkr.potentials.custom_potential_section.rst", "auto/ase2sprkkr.potentials.custom_potential_section.CustomPotentialSection.rst", "auto/ase2sprkkr.potentials.custom_potential_section.CustomPotentialSectionDefinition.rst", "auto/ase2sprkkr.potentials.custom_potential_section.CustomSectionToken.rst", "auto/ase2sprkkr.potentials.custom_potential_section.SectionString.rst", "auto/ase2sprkkr.potentials.definitions.rst", "auto/ase2sprkkr.potentials.definitions.potential.rst", "auto/ase2sprkkr.potentials.definitions.potential.potential_definition.rst", "auto/ase2sprkkr.potentials.definitions.sections.rst", "auto/ase2sprkkr.potentials.definitions.sections._sections.rst", "auto/ase2sprkkr.potentials.definitions.sections.global_system_parameter.rst", "auto/ase2sprkkr.potentials.definitions.sections.global_system_parameter.GlobalSystemParameter.rst", "auto/ase2sprkkr.potentials.definitions.sections.global_system_parameter.GlobalSystemParameterDefinition.rst", "auto/ase2sprkkr.potentials.definitions.sections.global_system_parameter.section.rst", "auto/ase2sprkkr.potentials.definitions.sections.lattice.rst", "auto/ase2sprkkr.potentials.definitions.sections.lattice.LatticeSection.rst", "auto/ase2sprkkr.potentials.definitions.sections.lattice.LatticeSectionDefinition.rst", "auto/ase2sprkkr.potentials.definitions.sections.lattice.section.rst", "auto/ase2sprkkr.potentials.definitions.sections.mesh_information.rst", "auto/ase2sprkkr.potentials.definitions.sections.mesh_information.MeshInformationSection.rst", "auto/ase2sprkkr.potentials.definitions.sections.mesh_information.MeshInformationSectionDefinition.rst", "auto/ase2sprkkr.potentials.definitions.sections.mesh_information.section.rst", "auto/ase2sprkkr.potentials.definitions.sections.occupation.rst", "auto/ase2sprkkr.potentials.definitions.sections.occupation.OccupationSection.rst", "auto/ase2sprkkr.potentials.definitions.sections.occupation.OccupationSectionDefinition.rst", "auto/ase2sprkkr.potentials.definitions.sections.occupation.section.rst", "auto/ase2sprkkr.potentials.definitions.sections.reference_system.rst", "auto/ase2sprkkr.potentials.definitions.sections.reference_system.ReferenceSystemSection.rst", "auto/ase2sprkkr.potentials.definitions.sections.reference_system.ReferenceSystemSectionDefinition.rst", "auto/ase2sprkkr.potentials.definitions.sections.reference_system.section.rst", "auto/ase2sprkkr.potentials.definitions.sections.sites.rst", "auto/ase2sprkkr.potentials.definitions.sections.sites.SitesSection.rst", "auto/ase2sprkkr.potentials.definitions.sections.sites.SitesSectionDefinition.rst", "auto/ase2sprkkr.potentials.definitions.sections.sites.section.rst", "auto/ase2sprkkr.potentials.definitions.sections.types.rst", "auto/ase2sprkkr.potentials.definitions.sections.types.TypesSection.rst", "auto/ase2sprkkr.potentials.definitions.sections.types.TypesSectionDefinition.rst", "auto/ase2sprkkr.potentials.definitions.sections.types.section.rst", "auto/ase2sprkkr.potentials.potential_definitions.rst", "auto/ase2sprkkr.potentials.potential_definitions.ASEArraySectionDefinition.rst", "auto/ase2sprkkr.potentials.potential_definitions.PotSectionDefinition.rst", "auto/ase2sprkkr.potentials.potential_definitions.PotValueDefinition.rst", "auto/ase2sprkkr.potentials.potential_definitions.PotentialDefinition.rst", "auto/ase2sprkkr.potentials.potential_definitions.Separator.rst", "auto/ase2sprkkr.potentials.potential_sections.rst", "auto/ase2sprkkr.potentials.potential_sections.ASEArraySection.rst", "auto/ase2sprkkr.potentials.potential_sections.PotentialSection.rst", "auto/ase2sprkkr.potentials.potential_sections.UniqueListSection.rst", "auto/ase2sprkkr.potentials.potentials.rst", "auto/ase2sprkkr.potentials.potentials.Potential.rst", "auto/ase2sprkkr.potentials.test.rst", "auto/ase2sprkkr.potentials.test.init_tests.rst", "auto/ase2sprkkr.potentials.test.init_tests.TestCase.rst", "auto/ase2sprkkr.potentials.test.test_custom_section.rst", "auto/ase2sprkkr.potentials.test.test_custom_section.TestCustomSection.rst", "auto/ase2sprkkr.potentials.test.test_potential.rst", "auto/ase2sprkkr.potentials.test.test_potential.TestPotential.rst", "auto/ase2sprkkr.potentials.test.test_structure.rst", "auto/ase2sprkkr.potentials.test.test_structure.TestStructure.rst", "auto/ase2sprkkr.sprkkr.rst", "auto/ase2sprkkr.sprkkr.atomic_types.rst", "auto/ase2sprkkr.sprkkr.atomic_types.AtomicType.rst", "auto/ase2sprkkr.sprkkr.calculator.rst", "auto/ase2sprkkr.sprkkr.calculator.FilenameTemplator.rst", "auto/ase2sprkkr.sprkkr.calculator.SPRKKR.rst", "auto/ase2sprkkr.sprkkr.configuration.rst", "auto/ase2sprkkr.sprkkr.configuration.ConfigurationFile.rst", "auto/ase2sprkkr.sprkkr.configuration.ConfigurationFileDefinition.rst", "auto/ase2sprkkr.sprkkr.configuration.ConfigurationSection.rst", "auto/ase2sprkkr.sprkkr.configuration.ConfigurationSectionDefinition.rst", "auto/ase2sprkkr.sprkkr.configuration.ConfigurationSectionTrait.rst", "auto/ase2sprkkr.sprkkr.configuration.ConfigurationValue.rst", "auto/ase2sprkkr.sprkkr.configuration.ConfigurationValueDefinition.rst", "auto/ase2sprkkr.sprkkr.configuration.CustomConfigurationSection.rst", "auto/ase2sprkkr.sprkkr.configuration.CustomConfigurationValue.rst", "auto/ase2sprkkr.sprkkr.io_data.rst", "auto/ase2sprkkr.sprkkr.io_data.BaseIoData.rst", "auto/ase2sprkkr.sprkkr.io_data.ReadIoData.rst", "auto/ase2sprkkr.sprkkr.io_data.WriteIoData.rst", "auto/ase2sprkkr.sprkkr.io_data.unique_mapping.rst", "auto/ase2sprkkr.sprkkr.occupations.rst", "auto/ase2sprkkr.sprkkr.occupations.Occupation.rst", "auto/ase2sprkkr.sprkkr.radial_meshes.rst", "auto/ase2sprkkr.sprkkr.radial_meshes.ExponentialMesh.rst", "auto/ase2sprkkr.sprkkr.radial_meshes.Mesh.rst", "auto/ase2sprkkr.sprkkr.reference_systems.rst", "auto/ase2sprkkr.sprkkr.reference_systems.ReferenceSystem.rst", "auto/ase2sprkkr.sprkkr.sites.rst", "auto/ase2sprkkr.sprkkr.sites.Site.rst", "auto/ase2sprkkr.sprkkr.sprkkr_atoms.rst", "auto/ase2sprkkr.sprkkr.sprkkr_atoms.SPRKKRAtoms.rst", "auto/ase2sprkkr.sprkkr.sprkkr_grammar_types.rst", "auto/ase2sprkkr.sprkkr.sprkkr_grammar_types.AtomicType.rst", "auto/ase2sprkkr.sprkkr.sprkkr_grammar_types.Site.rst", "auto/ase2sprkkr.sprkkr.structure.rst", "auto/ase2sprkkr.sprkkr.structure.AtomData.rst", "auto/ase2sprkkr.sprkkr.structure.LayerData.rst", "auto/ase2sprkkr.sprkkr.structure.floatjm.rst", "auto/ase2sprkkr.sprkkr.structure.structure_file_to_atoms.rst", "auto/ase2sprkkr.sprkkr.sysfile.rst", "auto/ase2sprkkr.sprkkr.sysfile.sysfile_content.rst", "auto/ase2sprkkr.sprkkr.sysfile.write_sysfile.rst", "auto/ase2sprkkr.sprkkr.test.rst", "auto/ase2sprkkr.sprkkr.test.init_tests.rst", "auto/ase2sprkkr.sprkkr.test.init_tests.TestCase.rst", "auto/ase2sprkkr.sprkkr.test.test_calculator.rst", "auto/ase2sprkkr.sprkkr.test.test_calculator.CalculatorTest.rst", "auto/ase2sprkkr.sprkkr.test.test_sites.rst", "auto/ase2sprkkr.sprkkr.test.test_sites.SitesTest.rst", "auto/ase2sprkkr.sprkkr.test.test_sprkkr_atoms.rst", "auto/ase2sprkkr.sprkkr.test.test_sprkkr_atoms.SPRKKRAtomsTest.rst", "auto/ase2sprkkr.sprkkr.test.test_sysfile.rst", "auto/ase2sprkkr.sprkkr.test.test_sysfile.SysfileTest.rst", "auto/ase2sprkkr.tools.rst", "auto/ase2sprkkr.tools.a2s_visualise_in_struct.rst", "auto/ase2sprkkr.tools.a2s_visualise_in_struct.visualise.rst", "auto/ase2sprkkr.tools.test.rst", "auto/ase2sprkkr.tools.test.init_tests.rst", "auto/ase2sprkkr.tools.test.init_tests.TestCase.rst", "auto/ase2sprkkr.tools.test.test_tools.rst", "auto/ase2sprkkr.tools.test.test_tools.CommonTest.rst", "auto/ase2sprkkr.version.rst", "auto/modules.rst", "changelog.rst", "how-to-install.rst", "index.rst", "installation.rst", "introduction.rst", "philosophy.rst", "usage.rst"], "titles": ["ASE2SPRKKR", "ase2sprkkr", "ase", "visualise", "view", "bindings", "es_finder", "EmptySpheresResult", "add_empty_spheres", "empty_spheres", "spglib", "SpacegroupInfo", "possibly_equivalent_sites", "common", "alternative_types", "allowed_types", "normalize_type", "normalize_type_map", "types_alternatives", "configuration", "Configuration", "configuration_containers", "BaseSection", "ConfigurationContainer", "CustomSection", "RootConfigurationContainer", "Section", "configuration_definitions", "BaseDefinition", "ConfigurationRootDefinition", "ContainerDefinition", "SectionDefinition", "ValueDefinition", "add_excluded_names_condition", "unique_dict", "decorators", "add_called_class_as_argument", "add_to_signature", "cache", "cached_class_property", "cached_property", "class_property", "doc", "process_input_parameters_definition", "verbatim", "formats", "fortran_format", "grammar", "White", "addConditionEx", "addParseActionEx", "delimitedList", "end_of_file", "generate_grammar", "line_end", "optional_line_end", "optional_quote", "replace_whitechars", "separator", "separator_pattern", "grammar_types", "Array", "BaseMixed", "BaseRealWithUnits", "BaseString", "Bool", "Complex", "Date", "DefKeyword", "Energy", "Flag", "GrammarType", "Integer", "Keyword", "LineString", "Mixed", "Number", "ObjectNumber", "PotMixed", "QString", "Range", "Real", "RealWithUnits", "Separator", "Sequence", "SetOf", "String", "Table", "TypedGrammarType", "Unsigned", "boolean", "compare_numpy_values", "complex_number", "date", "energy", "flag", "format_for_type", "integer", "line_string", "mixed", "pot_mixed", "qstring", "real", "recognized_set_types", "separator", "set_of_integers", "set_of_reals", "string", "type_from_default_value", "type_from_set_map", "type_from_type", "type_from_type_map", "type_from_value", "unsigned", "init_tests", "TestCase", "patch_package", "misc", "OrderedDict", "as_integer", "copy_list", "njit", "numpy_index", "no_output", "NoOutput", "options", "CustomOption", "DangerousValue", "Option", "process_output_reader", "AsyncioFileReader", "BaseProcessOutputReader", "test", "init_tests", "TestCase", "test_common", "CommonTest", "test_grammar_types", "GrammarTest", "unique_values", "UniqueValuesMapping", "input_parameters", "definitions", "arpes", "input_parameters", "dos", "input_parameters", "phagen", "input_parameters", "scf", "input_parameters", "sections", "CONTROL", "CPA", "ENERGY", "MODE", "SCF", "SITES", "STRCONST", "TASK", "TAU", "input_parameters", "InputParameters", "resolve_executable_postfix", "input_parameters_definitions", "InputParametersDefinition", "InputSectionDefinition", "InputValueDefinition", "test", "init_tests", "TestCase", "test_definitions", "TestDefinitions", "test_input_parameters", "TestInputParameters", "outputs", "output_definitions", "OutputNonameValueDefinition", "OutputSectionDefinition", "OutputValueDefinition", "OutputValueEqualDefinition", "readers", "default", "DefaultOutputReader", "DefaultResult", "scf", "ScfOutputReader", "ScfResult", "task_result", "OutputReader", "TaskResult", "test", "init_tests", "TestCase", "test_output", "TestOutput", "physics", "lattice_data", "LatticeData", "winger_seitz_radii", "winger_seitz_radii", "potentials", "custom_potential_section", "CustomPotentialSection", "CustomPotentialSectionDefinition", "CustomSectionToken", "SectionString", "definitions", "potential", "potential_definition", "sections", "_sections", "global_system_parameter", "GlobalSystemParameter", "GlobalSystemParameterDefinition", "section", "lattice", "LatticeSection", "LatticeSectionDefinition", "section", "mesh_information", "MeshInformationSection", "MeshInformationSectionDefinition", "section", "occupation", "OccupationSection", "OccupationSectionDefinition", "section", "reference_system", "ReferenceSystemSection", "ReferenceSystemSectionDefinition", "section", "sites", "SitesSection", "SitesSectionDefinition", "section", "types", "TypesSection", "TypesSectionDefinition", "section", "potential_definitions", "ASEArraySectionDefinition", "PotSectionDefinition", "PotValueDefinition", "PotentialDefinition", "Separator", "potential_sections", "ASEArraySection", "PotentialSection", "UniqueListSection", "potentials", "Potential", "test", "init_tests", "TestCase", "test_custom_section", "TestCustomSection", "test_potential", "TestPotential", "test_structure", "TestStructure", "sprkkr", "atomic_types", "AtomicType", "calculator", "FilenameTemplator", "SPRKKR", "configuration", "ConfigurationFile", "ConfigurationFileDefinition", "ConfigurationSection", "ConfigurationSectionDefinition", "ConfigurationSectionTrait", "ConfigurationValue", "ConfigurationValueDefinition", "CustomConfigurationSection", "CustomConfigurationValue", "io_data", "BaseIoData", "ReadIoData", "WriteIoData", "unique_mapping", "occupations", "Occupation", "radial_meshes", "ExponentialMesh", "Mesh", "reference_systems", "ReferenceSystem", "sites", "Site", "sprkkr_atoms", "SPRKKRAtoms", "sprkkr_grammar_types", "AtomicType", "Site", "structure", "AtomData", "LayerData", "floatjm", "structure_file_to_atoms", "sysfile", "sysfile_content", "write_sysfile", "test", "init_tests", "TestCase", "test_calculator", "CalculatorTest", "test_sites", "SitesTest", "test_sprkkr_atoms", "SPRKKRAtomsTest", "test_sysfile", "SysfileTest", "tools", "a2s_visualise_in_struct", "visualise", "test", "init_tests", "TestCase", "test_tools", "CommonTest", "version", "ase2sprkkr", "Changelog", "More about installing of the ASE2SPRKKR package", "ASE2SPRKKR software package", "Installation of the package using package managers", "Usefull links", "ASE2SPR-KKR\u2019s philosophy for the developers", "How to use ASE2SPRKKR"], "terms": {"provid": [0, 1, 9, 11, 32, 61, 66, 85, 140, 167, 177, 179, 180, 197, 198, 204, 243, 245, 274, 283, 290, 327, 329, 331], "an": [0, 8, 14, 20, 22, 23, 27, 28, 30, 32, 34, 50, 52, 55, 56, 58, 59, 62, 64, 65, 70, 71, 73, 74, 75, 77, 78, 79, 80, 83, 84, 86, 87, 88, 108, 115, 119, 126, 128, 134, 136, 138, 162, 165, 167, 170, 172, 174, 177, 179, 180, 193, 195, 203, 204, 206, 241, 243, 244, 245, 251, 254, 256, 258, 260, 263, 266, 268, 274, 283, 285, 289, 290, 291, 292, 306, 308, 310, 312, 314, 320, 322, 325, 326, 327, 328, 329, 330, 331], "interfac": [0, 1, 130, 266, 327, 329], "allow": [0, 9, 15, 20, 22, 23, 25, 28, 52, 61, 63, 66, 67, 69, 72, 76, 77, 81, 82, 85, 89, 143, 145, 147, 149, 162, 164, 240, 242, 251, 268, 292, 294, 295, 325, 327, 329, 330, 331], "spr": [0, 1, 141, 142, 151, 161, 162, 163, 175, 181, 186, 201, 207, 250, 251, 261, 264, 266, 267, 274, 284, 286, 292, 293, 315, 326, 327, 328, 329, 330, 331], "kkr": [0, 1, 141, 142, 151, 161, 162, 163, 175, 181, 186, 201, 207, 250, 251, 261, 264, 266, 267, 274, 284, 286, 292, 293, 315, 326, 327, 328, 329, 331], "electron": [0, 1, 143, 200, 263, 292, 327, 329], "structur": [0, 1, 4, 8, 9, 11, 28, 164, 240, 261, 266, 292, 297, 298, 299, 300, 324, 325, 327, 329, 331], "calcul": [0, 1, 128, 143, 145, 147, 149, 162, 183, 184, 186, 187, 189, 190, 261, 265, 266, 292, 324, 327, 329, 330], "within": [0, 327, 329], "atom": [0, 4, 8, 9, 11, 12, 128, 143, 145, 147, 149, 190, 198, 203, 213, 217, 225, 229, 233, 241, 247, 248, 249, 251, 262, 263, 266, 268, 272, 273, 276, 280, 282, 283, 285, 289, 290, 291, 292, 294, 295, 297, 300, 302, 303, 325, 327, 329, 330], "simul": [0, 327, 329], "environ": [0, 163, 266, 326, 327, 328, 329, 331], "abbrevi": [0, 327, 329], "ASE": [0, 1, 8, 11, 217, 225, 233, 241, 247, 251, 266, 272, 290, 292, 300, 325, 327, 329, 330, 331], "python": [0, 11, 16, 48, 61, 62, 63, 64, 65, 66, 70, 71, 73, 74, 75, 78, 79, 80, 83, 84, 85, 86, 87, 88, 109, 110, 111, 112, 206, 325, 326, 327, 328, 329, 330, 331], "tool": [0, 316, 317, 318, 319, 320, 321, 322, 324, 326, 327, 328, 329], "integr": [0, 143, 145, 147, 149, 327, 329], "variou": [0, 35, 47, 60, 117, 162, 197, 198, 266, 327, 329, 330, 331], "onlin": [0, 326, 327, 328, 329], "version": [0, 165, 266, 291, 324, 326, 327, 328, 329, 330, 331], "thi": [0, 1, 5, 14, 19, 20, 21, 23, 28, 29, 30, 31, 32, 36, 48, 61, 62, 63, 64, 65, 66, 67, 70, 71, 72, 73, 74, 75, 76, 78, 79, 80, 81, 83, 84, 85, 86, 87, 88, 89, 91, 111, 127, 128, 131, 140, 143, 145, 147, 149, 162, 164, 165, 166, 167, 175, 176, 177, 178, 179, 180, 186, 187, 188, 189, 196, 197, 198, 199, 203, 204, 206, 210, 213, 214, 217, 218, 222, 225, 226, 230, 233, 234, 238, 240, 242, 243, 244, 245, 246, 248, 251, 264, 266, 267, 268, 269, 271, 272, 274, 290, 291, 292, 293, 296, 316, 327, 329, 330, 331], "github": [0, 11, 326, 327, 328, 329, 331], "repositori": [0, 326, 327, 328, 329, 331], "manual": [0, 251, 327, 329, 330, 331], "The": [0, 9, 11, 20, 23, 26, 28, 29, 30, 31, 32, 36, 37, 39, 41, 46, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 73, 74, 75, 77, 78, 79, 80, 83, 84, 85, 86, 87, 88, 91, 103, 110, 111, 123, 124, 125, 126, 128, 131, 140, 142, 143, 145, 147, 149, 154, 156, 157, 158, 160, 161, 162, 165, 166, 167, 177, 178, 179, 180, 187, 189, 203, 204, 205, 206, 207, 221, 226, 229, 237, 241, 242, 243, 244, 245, 247, 248, 249, 251, 265, 266, 268, 269, 271, 272, 273, 274, 276, 283, 289, 290, 292, 325, 326, 327, 328, 331], "simplest": [0, 326, 328], "wai": [0, 28, 32, 61, 65, 66, 67, 71, 78, 83, 84, 87, 110, 143, 145, 147, 149, 162, 167, 177, 179, 180, 204, 243, 245, 266, 274, 326, 328, 330], "i": [0, 4, 9, 11, 12, 15, 16, 20, 22, 23, 25, 26, 28, 29, 30, 31, 32, 33, 34, 36, 37, 39, 41, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 85, 86, 87, 88, 89, 91, 96, 108, 110, 115, 119, 120, 121, 122, 123, 124, 127, 128, 130, 131, 134, 140, 143, 145, 147, 149, 162, 163, 165, 166, 167, 170, 176, 177, 178, 179, 180, 187, 189, 193, 200, 202, 203, 204, 205, 206, 207, 208, 214, 217, 218, 222, 225, 226, 230, 233, 234, 238, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 254, 263, 266, 268, 269, 271, 272, 274, 279, 283, 290, 292, 294, 295, 296, 306, 316, 320, 325, 326, 328, 330, 331], "them": [0, 1, 20, 21, 23, 128, 162, 211, 283, 292, 326, 328], "either": [0, 21, 23, 28, 30, 31, 71, 77, 79, 80, 128, 140, 162, 217, 225, 233, 248, 263, 266, 283, 290, 326, 328, 330, 331], "c": [0, 11, 23, 34, 123, 124, 143, 149, 200, 265, 266, 326, 328, 331], "In": [0, 21, 25, 32, 48, 128, 130, 167, 177, 179, 180, 200, 203, 204, 207, 243, 245, 246, 266, 267, 274, 293, 326, 328, 330, 331], "some": [0, 9, 20, 22, 23, 29, 32, 61, 65, 66, 67, 71, 78, 83, 84, 87, 115, 128, 134, 170, 177, 193, 217, 225, 233, 248, 254, 266, 268, 273, 280, 292, 306, 320, 326, 328, 330, 331], "system": [0, 143, 145, 147, 149, 214, 230, 249, 290, 326, 328, 331], "util": [0, 36, 128, 296, 326, 328, 330], "python3": [0, 326, 328], "call": [0, 20, 36, 38, 71, 75, 78, 87, 119, 128, 162, 213, 217, 225, 233, 248, 251, 266, 268, 292, 326, 328, 330, 331], "pip3": [0, 326, 328], "If": [0, 4, 9, 11, 20, 22, 23, 28, 29, 30, 31, 32, 36, 37, 61, 63, 66, 71, 73, 85, 96, 110, 115, 122, 128, 134, 140, 162, 163, 166, 167, 170, 177, 178, 179, 180, 187, 193, 204, 217, 225, 233, 243, 244, 245, 247, 248, 251, 254, 263, 266, 269, 271, 272, 274, 283, 290, 292, 306, 320, 326, 328, 330, 331], "you": [0, 32, 37, 62, 63, 80, 167, 251, 326, 328, 331], "can": [0, 6, 11, 20, 22, 23, 25, 28, 29, 30, 31, 32, 36, 39, 41, 60, 61, 62, 63, 66, 68, 69, 70, 71, 73, 75, 76, 77, 78, 84, 85, 87, 91, 108, 110, 111, 126, 127, 128, 131, 140, 162, 166, 167, 177, 178, 179, 180, 187, 189, 202, 204, 217, 225, 226, 233, 242, 243, 244, 245, 247, 248, 251, 263, 266, 268, 269, 271, 273, 274, 282, 283, 290, 292, 296, 325, 326, 328, 330, 331], "linux": [0, 326, 328], "distribut": [0, 326, 328], "e": [0, 11, 12, 14, 15, 16, 20, 22, 23, 25, 26, 27, 28, 30, 32, 37, 46, 61, 66, 70, 71, 73, 75, 84, 85, 87, 103, 110, 127, 128, 142, 143, 145, 147, 149, 162, 167, 177, 179, 180, 187, 189, 200, 202, 204, 205, 206, 213, 214, 217, 218, 222, 225, 226, 230, 233, 234, 238, 242, 243, 245, 247, 248, 249, 251, 263, 265, 266, 268, 272, 274, 283, 290, 292, 326, 328, 330, 331], "g": [0, 11, 14, 20, 25, 27, 28, 30, 32, 61, 66, 70, 71, 73, 75, 84, 85, 87, 103, 110, 127, 128, 142, 147, 149, 162, 167, 177, 179, 180, 187, 189, 204, 213, 217, 225, 233, 243, 245, 247, 248, 249, 251, 263, 265, 266, 268, 272, 274, 283, 292, 326, 328, 330, 331], "debian": [0, 326, 328], "ubuntu": [0, 326, 328], "apt": [0, 326, 328], "zypper": [0, 326, 328], "opensus": [0, 326, 328], "For": [0, 11, 128, 143, 145, 147, 149, 165, 214, 218, 222, 226, 230, 234, 238, 241, 242, 264, 266, 278, 292, 326, 328, 331], "instruct": [0, 326, 328], "see": [0, 11, 28, 29, 32, 41, 71, 84, 109, 110, 140, 143, 145, 147, 149, 162, 165, 167, 177, 179, 180, 198, 204, 214, 218, 222, 226, 230, 234, 238, 241, 242, 243, 245, 247, 265, 266, 274, 283, 292, 316, 326, 328, 330, 331], "anaconda": [0, 326, 328], "http": [0, 11, 63, 200, 264, 266, 326, 328, 330, 331], "doc": [0, 20, 43, 44, 288, 316, 324, 326, 328, 330], "com": [0, 63, 326, 328, 331], "howev": [0, 28, 29, 32, 34, 61, 62, 63, 65, 66, 67, 70, 71, 72, 73, 74, 75, 78, 79, 81, 84, 85, 86, 87, 89, 91, 128, 131, 140, 167, 177, 179, 180, 189, 204, 206, 243, 245, 274, 290, 292, 326, 328, 330, 331], "user": [0, 22, 23, 24, 28, 29, 30, 31, 32, 61, 62, 66, 71, 73, 77, 82, 84, 87, 88, 126, 166, 167, 177, 178, 179, 180, 204, 243, 244, 245, 269, 271, 274, 326, 327, 328, 331], "unexperienc": [0, 326, 328], "simpler": [0, 326, 328], "recommend": [0, 326, 328], "do": [0, 20, 23, 25, 28, 29, 30, 32, 37, 48, 61, 63, 65, 66, 67, 71, 78, 83, 84, 87, 127, 140, 142, 143, 146, 147, 149, 162, 251, 266, 268, 272, 324, 325, 326, 328, 331], "want": [0, 37, 51, 131, 189, 326, 328, 331], "public": [0, 326, 328], "develop": [0, 187, 266, 326, 327, 328], "3": [0, 48, 63, 85, 140, 143, 145, 147, 149, 198, 200, 266, 325, 326, 328, 331], "7": [0, 9, 115, 134, 147, 149, 170, 193, 198, 200, 254, 264, 306, 320, 326, 327, 328], "check": [0, 20, 22, 23, 49, 62, 64, 65, 70, 71, 73, 74, 75, 78, 79, 80, 83, 84, 86, 87, 88, 128, 206, 268, 283, 325, 326, 328, 331], "ase": [0, 3, 4, 264, 266, 291, 292, 324, 326, 328, 331], "mendeleev": [0, 263, 326, 328], "spglib": [0, 11, 12, 292, 324, 326, 328], "pypars": [0, 28, 47, 48, 49, 50, 53, 71, 202, 205, 326, 328, 330], "clone": [0, 326, 328, 331], "checkout": [0, 326, 328], "origin": [0, 53, 147, 149, 326, 328], "releas": [0, 326, 328], "first": [0, 20, 23, 25, 30, 36, 37, 68, 122, 143, 145, 149, 251, 266, 268, 283, 285, 326, 328, 330, 331], "line": [0, 28, 30, 32, 71, 73, 74, 98, 245, 266, 297, 326, 328, 330, 331], "fetch": [0, 326, 328], "second": [0, 147, 149, 326, 328, 330], "one": [0, 11, 12, 28, 30, 32, 51, 61, 68, 69, 71, 73, 80, 98, 125, 128, 140, 143, 145, 147, 149, 166, 167, 177, 178, 179, 180, 204, 213, 217, 225, 233, 242, 243, 245, 248, 266, 272, 274, 280, 282, 283, 292, 296, 326, 328, 330, 331], "out": [0, 131, 162, 189, 266, 325, 326, 328, 331], "product": [0, 326, 328], "current": [0, 28, 32, 131, 162, 189, 266, 290, 326, 328, 330, 331], "earlier": [0, 326, 328, 331], "download": [0, 326, 328], "run": [0, 4, 131, 162, 165, 189, 190, 266, 316, 326, 327, 328], "altern": [0, 17, 18, 23, 28, 29, 30, 31, 32, 166, 167, 177, 178, 179, 180, 204, 243, 244, 245, 266, 269, 271, 274, 326, 328], "master": [0, 326, 328], "branch": [0, 326, 328], "bleed": [0, 326, 328], "edg": [0, 326, 328], "just": [0, 11, 19, 20, 28, 29, 30, 31, 32, 37, 61, 66, 71, 79, 85, 86, 96, 120, 140, 143, 145, 147, 149, 167, 177, 179, 180, 203, 204, 205, 243, 245, 247, 266, 274, 279, 292, 301, 323, 326, 328, 330, 331], "add": [0, 23, 28, 30, 33, 36, 37, 43, 49, 50, 61, 65, 66, 67, 71, 78, 83, 84, 87, 266, 283, 325, 326, 328, 331], "src": [0, 120, 326, 328], "directori": [0, 131, 162, 183, 184, 186, 187, 189, 190, 266, 326, 328], "your": [0, 37, 63, 326, 328, 331], "pythonpath": [0, 326, 328], "describ": [0, 11, 12, 28, 30, 71, 77, 162, 165, 166, 167, 178, 242, 244, 261, 292, 326, 328, 330, 331], "below": [0, 326, 328], "To": [0, 20, 28, 36, 62, 75, 78, 128, 292, 326, 328, 330, 331], "have": [0, 11, 22, 28, 32, 37, 46, 61, 63, 66, 71, 75, 76, 78, 84, 85, 87, 115, 128, 134, 136, 138, 142, 164, 167, 170, 172, 174, 177, 178, 179, 180, 193, 195, 204, 240, 243, 245, 254, 256, 258, 260, 266, 271, 274, 292, 306, 308, 310, 312, 314, 320, 322, 325, 326, 328, 331], "built": [0, 326, 328, 330], "follow": [0, 37, 264, 266, 326, 328, 330, 331], "m": [0, 63, 67, 198, 326, 328], "upgrad": [0, 326, 328], "possibl": [0, 22, 23, 32, 70, 71, 73, 75, 76, 89, 128, 129, 140, 143, 145, 147, 149, 162, 180, 292, 325, 326, 328, 330, 331], "alreadi": [0, 36, 51, 127, 140, 292, 326, 328, 331], "wide": [0, 326, 328], "activ": [0, 326, 328], "virtual": [0, 292, 326, 328], "l": [0, 63, 143, 145, 149, 326, 328], "dist": [0, 326, 328], "whl": [0, 326, 328], "sort": [0, 326, 328], "tail": [0, 326, 328], "n": [0, 30, 130, 140, 165, 166, 178, 200, 204, 205, 206, 242, 244, 263, 283, 285, 326, 328], "1": [0, 7, 9, 11, 30, 34, 46, 69, 85, 87, 124, 140, 143, 145, 147, 149, 198, 200, 283, 285, 290, 326, 327, 328, 330, 331], "all": [0, 4, 15, 20, 23, 28, 30, 32, 70, 71, 74, 75, 128, 131, 177, 187, 205, 211, 251, 265, 266, 283, 292, 326, 328, 331], "stuff": [0, 20, 162, 177, 196, 268, 326, 328, 330], "after": [0, 23, 28, 32, 37, 62, 64, 65, 70, 71, 73, 74, 75, 78, 79, 80, 83, 84, 86, 87, 88, 128, 147, 149, 163, 177, 206, 217, 225, 233, 247, 248, 326, 328, 331], "make": [0, 7, 23, 62, 80, 116, 128, 129, 140, 283, 292, 325, 326, 328, 331], "clean": [0, 29, 30, 283, 301, 326, 328], "up": [0, 29, 30, 36, 74, 143, 145, 147, 149, 202, 205, 301, 326, 328, 330], "publish": [0, 326, 328], "io": [0, 11, 326, 328, 330], "ar": [0, 9, 11, 15, 20, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 52, 69, 71, 75, 78, 87, 103, 108, 109, 115, 128, 134, 140, 143, 161, 162, 165, 166, 167, 170, 176, 177, 178, 179, 180, 187, 189, 193, 200, 202, 203, 204, 207, 242, 243, 244, 245, 246, 247, 251, 254, 265, 266, 267, 268, 269, 271, 274, 277, 280, 283, 286, 292, 293, 306, 320, 325, 326, 328, 330, 331], "open": [0, 22, 32, 162, 266, 326, 328], "index": [0, 28, 118, 122, 128, 140, 264, 290, 326, 327, 328], "html": [0, 11, 266, 326, 328], "offlin": [0, 326, 328], "contain": [0, 5, 11, 14, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 30, 32, 46, 60, 63, 71, 126, 128, 142, 143, 145, 147, 149, 161, 162, 164, 165, 167, 175, 176, 177, 179, 180, 187, 188, 196, 197, 199, 203, 204, 207, 210, 213, 214, 217, 218, 221, 222, 225, 226, 229, 230, 233, 234, 237, 238, 240, 241, 242, 243, 244, 245, 247, 248, 249, 251, 264, 266, 268, 270, 272, 273, 274, 275, 276, 280, 291, 292, 296, 300, 301, 326, 328, 330, 331], "part": [0, 22, 27, 28, 128, 131, 143, 145, 147, 149, 176, 178, 202, 326, 328, 330], "gener": [0, 28, 29, 36, 43, 71, 128, 196, 213, 217, 225, 233, 246, 248, 266, 292, 325, 326, 327, 328, 330], "docstr": [0, 42, 43, 325, 326, 328], "regener": [0, 326, 328], "sphinx": [0, 326, 328], "toolbox": [0, 326, 328], "pandoc": [0, 326, 328], "readm": [0, 326, 328], "md": [0, 326, 328], "need": [0, 11, 32, 36, 127, 167, 266, 280, 326, 328, 330, 331], "offici": [0, 326, 328], "miss": [0, 20, 28, 29, 30, 31, 32, 166, 167, 177, 178, 179, 180, 204, 243, 244, 245, 268, 269, 271, 274, 326, 328], "attribut": [0, 14, 23, 28, 32, 35, 47, 60, 71, 87, 140, 142, 143, 145, 147, 149, 151, 177, 199, 208, 266, 292, 325, 326, 328, 331], "when": [0, 9, 28, 29, 31, 32, 87, 115, 127, 128, 134, 136, 138, 170, 172, 174, 177, 193, 195, 217, 225, 233, 248, 254, 256, 258, 260, 266, 283, 292, 306, 308, 310, 312, 314, 320, 322, 326, 328, 330, 331], "so": [0, 28, 29, 30, 31, 61, 62, 63, 65, 66, 67, 71, 78, 80, 83, 84, 87, 103, 120, 127, 128, 162, 164, 166, 178, 196, 226, 240, 242, 244, 248, 265, 269, 271, 280, 283, 292, 325, 326, 328, 330, 331], "till": [0, 326, 328], "pullrequest": [0, 326, 328, 331], "correct": [0, 28, 302, 326, 328, 331], "behavior": [0, 28, 31, 32, 177, 326, 328], "merg": [0, 23, 140, 325, 326, 328], "pleas": [0, 165, 292, 301, 326, 328, 331], "fork": [0, 326, 328], "lokik": [0, 326, 328], "feel": [0, 326, 328, 331], "free": [0, 200, 326, 328, 331], "pull": [0, 326, 328], "request": [0, 11, 266, 326, 328, 331], "post": [0, 326, 328, 331], "issu": [0, 326, 328, 331], "full": [1, 2, 3, 4, 5, 6, 8, 9, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 27, 33, 34, 35, 36, 37, 38, 40, 42, 43, 44, 45, 46, 47, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 68, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 116, 117, 119, 120, 121, 122, 123, 125, 129, 132, 133, 135, 137, 139, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 163, 164, 168, 169, 171, 173, 175, 176, 181, 182, 185, 188, 191, 192, 194, 196, 197, 199, 200, 201, 202, 207, 208, 209, 210, 211, 212, 216, 220, 224, 228, 232, 236, 240, 246, 250, 252, 253, 255, 257, 259, 261, 262, 264, 267, 268, 272, 277, 281, 282, 284, 287, 289, 291, 293, 296, 299, 300, 301, 302, 303, 304, 305, 307, 309, 311, 313, 315, 316, 317, 318, 319, 321, 323], "name": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 40, 42, 43, 44, 45, 46, 47, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 65, 67, 68, 70, 71, 72, 74, 75, 79, 81, 83, 84, 85, 86, 87, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 119, 120, 121, 122, 123, 125, 128, 129, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 185, 187, 188, 191, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 214, 216, 218, 220, 221, 222, 224, 226, 228, 229, 230, 232, 234, 236, 237, 238, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 264, 265, 266, 267, 269, 271, 274, 277, 281, 282, 283, 284, 287, 289, 291, 292, 293, 296, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 325, 330, 331], "descript": [1, 2, 3, 5, 6, 10, 11, 13, 14, 19, 21, 27, 28, 29, 30, 31, 32, 35, 42, 45, 47, 60, 62, 63, 64, 65, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 83, 86, 88, 89, 114, 117, 123, 125, 129, 132, 133, 135, 137, 139, 141, 142, 143, 145, 147, 149, 151, 161, 164, 166, 167, 168, 169, 171, 173, 175, 176, 178, 181, 182, 185, 188, 191, 192, 194, 196, 197, 199, 201, 202, 204, 206, 207, 208, 210, 212, 216, 220, 224, 228, 232, 236, 240, 244, 246, 250, 252, 253, 255, 257, 259, 261, 262, 264, 267, 269, 271, 274, 277, 282, 284, 287, 289, 291, 293, 294, 295, 296, 301, 304, 305, 307, 309, 311, 313, 315, 316, 318, 319, 321, 323], "root": [1, 20, 29, 268, 269], "packag": [1, 5, 6, 13, 116, 117, 175, 207, 210, 292, 323, 329, 331], "import": [1, 63, 116, 128, 211, 290, 331], "few": [1, 31, 47, 86, 266, 330], "most": [1, 115, 119, 134, 170, 193, 204, 254, 290, 306, 320, 331], "us": [1, 4, 9, 11, 13, 20, 23, 28, 29, 30, 31, 32, 36, 46, 47, 61, 62, 63, 64, 65, 66, 70, 71, 73, 74, 75, 77, 78, 79, 80, 83, 84, 85, 86, 87, 88, 105, 106, 114, 115, 117, 127, 128, 133, 134, 136, 138, 140, 143, 145, 147, 149, 151, 162, 166, 167, 169, 170, 172, 174, 176, 177, 178, 179, 180, 187, 188, 189, 192, 193, 195, 204, 206, 207, 210, 213, 217, 225, 233, 243, 244, 245, 248, 249, 251, 253, 254, 256, 258, 260, 261, 263, 264, 265, 266, 268, 269, 270, 271, 274, 275, 277, 278, 280, 283, 284, 290, 291, 292, 296, 301, 305, 306, 308, 310, 312, 314, 319, 320, 322, 327, 329, 330], "object": [1, 7, 11, 12, 20, 22, 23, 26, 27, 28, 29, 30, 31, 32, 37, 48, 62, 63, 64, 65, 70, 71, 73, 74, 75, 76, 77, 78, 79, 80, 83, 84, 86, 87, 88, 108, 115, 119, 120, 126, 128, 134, 139, 140, 144, 146, 148, 150, 153, 154, 155, 156, 157, 158, 160, 161, 162, 166, 170, 177, 178, 186, 187, 193, 197, 203, 205, 206, 209, 213, 217, 225, 233, 244, 247, 248, 249, 250, 251, 254, 266, 269, 271, 272, 273, 274, 276, 277, 278, 279, 283, 290, 292, 297, 300, 302, 306, 320, 330], "shortcut": [1, 266], "modul": [1, 2, 5, 6, 9, 10, 13, 14, 19, 21, 27, 35, 43, 47, 60, 63, 114, 117, 123, 125, 129, 132, 133, 135, 137, 139, 141, 142, 143, 145, 147, 149, 151, 161, 164, 168, 169, 171, 173, 175, 176, 181, 182, 185, 188, 191, 192, 194, 196, 197, 199, 201, 202, 207, 208, 210, 211, 212, 216, 220, 224, 228, 232, 236, 240, 246, 250, 252, 253, 255, 257, 259, 261, 262, 267, 277, 282, 284, 287, 289, 291, 293, 296, 301, 304, 305, 307, 309, 311, 313, 315, 318, 319, 321, 324, 327, 330], "ase2sprkkr": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 325, 328, 329, 330], "function": [3, 6, 9, 10, 14, 24, 27, 28, 30, 32, 35, 36, 37, 42, 45, 47, 60, 62, 64, 65, 70, 71, 73, 74, 75, 78, 79, 80, 83, 84, 86, 87, 88, 114, 117, 122, 123, 124, 126, 128, 131, 151, 161, 164, 187, 189, 206, 210, 213, 217, 225, 226, 233, 240, 242, 248, 251, 265, 266, 277, 281, 296, 301, 316, 331], "visualis": [4, 296, 316, 324, 325, 331], "repeat": [4, 28, 32, 331], "none": [4, 9, 11, 12, 20, 22, 23, 24, 25, 26, 28, 29, 30, 31, 32, 37, 39, 41, 50, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 85, 86, 87, 88, 89, 96, 126, 127, 128, 131, 140, 162, 165, 166, 167, 177, 178, 179, 180, 187, 203, 204, 206, 213, 217, 221, 225, 229, 233, 237, 243, 244, 245, 247, 248, 249, 251, 263, 266, 268, 269, 270, 271, 272, 273, 274, 275, 276, 283, 290, 292, 294, 295, 331], "scale_radii": 4, "0": [4, 7, 9, 11, 46, 63, 69, 112, 119, 128, 131, 140, 143, 145, 147, 149, 266, 283, 290, 300, 327, 330, 331], "5": [4, 23, 128, 140, 143, 145, 147, 149, 198, 200, 331], "rotat": [4, 143], "bond": 4, "fals": [4, 11, 12, 20, 22, 23, 25, 28, 29, 30, 31, 32, 37, 61, 62, 64, 65, 66, 70, 71, 73, 74, 75, 78, 79, 80, 83, 84, 85, 86, 87, 88, 108, 110, 128, 131, 140, 143, 145, 147, 149, 162, 163, 166, 167, 177, 178, 179, 180, 204, 206, 243, 244, 245, 251, 266, 269, 271, 272, 274, 283, 292, 331], "graph": 4, "termin": 4, "block": 4, "sourc": [4, 8, 9, 11, 12, 16, 20, 22, 23, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 43, 44, 46, 48, 49, 50, 51, 53, 57, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 91, 96, 108, 110, 112, 115, 116, 118, 119, 120, 121, 122, 124, 126, 127, 128, 130, 131, 134, 136, 138, 140, 152, 159, 162, 163, 165, 166, 167, 170, 172, 174, 177, 178, 179, 180, 183, 184, 186, 187, 189, 190, 193, 195, 198, 203, 204, 205, 206, 211, 213, 214, 217, 218, 221, 222, 225, 226, 229, 230, 233, 234, 237, 238, 241, 242, 243, 244, 245, 247, 248, 249, 251, 254, 256, 258, 260, 263, 265, 266, 268, 269, 270, 271, 272, 273, 274, 275, 276, 278, 279, 280, 281, 283, 285, 286, 288, 290, 292, 294, 295, 297, 298, 299, 300, 302, 303, 306, 308, 310, 312, 314, 317, 320, 322, 327, 331], "viewer": 4, "paramet": [4, 9, 11, 12, 20, 22, 23, 24, 25, 28, 29, 30, 31, 32, 37, 43, 46, 52, 54, 55, 56, 58, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 96, 110, 124, 127, 128, 131, 140, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 159, 161, 162, 163, 165, 166, 167, 176, 177, 178, 179, 180, 187, 189, 204, 206, 213, 214, 217, 218, 222, 225, 226, 230, 233, 234, 238, 241, 242, 243, 244, 245, 247, 248, 249, 251, 263, 266, 268, 269, 271, 272, 273, 274, 276, 283, 285, 290, 292, 294, 295, 300, 303, 325, 327, 330], "option": [4, 9, 11, 12, 19, 20, 23, 27, 28, 30, 32, 46, 56, 62, 63, 64, 65, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 86, 87, 88, 89, 110, 126, 127, 131, 140, 142, 143, 145, 147, 149, 162, 164, 166, 167, 177, 178, 179, 180, 202, 203, 204, 206, 240, 242, 243, 245, 251, 264, 266, 267, 272, 273, 274, 276, 283, 292, 294, 295, 324, 325, 330, 331], "union": [4, 20, 23, 30, 32, 62, 63, 64, 65, 67, 69, 70, 71, 72, 74, 75, 76, 77, 78, 79, 80, 81, 83, 86, 88, 89, 110, 124, 128, 140, 163, 167, 177, 179, 180, 204, 206, 243, 245, 266, 274, 294, 295], "int": [4, 9, 14, 15, 16, 17, 18, 30, 63, 67, 69, 72, 76, 77, 81, 89, 109, 110, 111, 124, 131, 140, 189, 263, 266, 283, 285, 292, 294, 295, 300], "tupl": [4, 11, 28, 29, 30, 61, 66, 71, 85, 103, 131, 189, 198], "along": 4, "ax": [4, 187], "x": [4, 34, 39, 41, 63, 149, 331], "y": [4, 34, 67, 149, 200], "z": [4, 79, 86, 149], "given": [4, 9, 11, 12, 15, 16, 20, 23, 24, 25, 28, 30, 32, 33, 46, 49, 50, 60, 61, 62, 63, 64, 65, 66, 70, 71, 73, 74, 75, 77, 78, 79, 80, 83, 84, 85, 86, 87, 88, 96, 110, 111, 115, 123, 124, 126, 128, 134, 140, 149, 162, 163, 167, 170, 177, 179, 180, 187, 193, 198, 204, 206, 226, 242, 243, 245, 247, 248, 251, 254, 263, 266, 268, 272, 274, 281, 283, 286, 290, 292, 300, 302, 306, 320, 330, 331], "same": [4, 11, 12, 20, 30, 32, 37, 85, 115, 128, 130, 134, 140, 162, 170, 176, 193, 254, 265, 266, 268, 272, 283, 290, 292, 306, 320, 330, 331], "number": [4, 7, 9, 11, 12, 32, 46, 60, 63, 67, 69, 72, 77, 81, 82, 87, 89, 92, 115, 120, 128, 134, 140, 143, 145, 147, 149, 167, 170, 177, 179, 180, 193, 198, 204, 213, 217, 225, 233, 243, 245, 248, 249, 251, 254, 263, 266, 272, 274, 283, 290, 292, 293, 294, 295, 300, 306, 320, 324, 325, 331], "axi": 4, "float": [4, 9, 11, 15, 17, 18, 46, 63, 81, 82, 87, 94, 109, 111, 119, 187, 283, 285, 292, 300], "rel": [4, 116, 162, 189], "size": [4, 9, 241, 325], "site": [4, 8, 9, 128, 143, 145, 147, 149, 233, 234, 235, 251, 262, 263, 272, 280, 282, 283, 285, 292, 293, 324, 325, 331], "str": [4, 9, 20, 22, 23, 24, 25, 28, 29, 30, 31, 32, 46, 52, 54, 55, 56, 58, 61, 62, 63, 64, 65, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 85, 86, 87, 88, 89, 96, 110, 111, 128, 140, 162, 163, 165, 166, 167, 177, 178, 179, 180, 187, 204, 206, 221, 226, 229, 237, 241, 242, 243, 244, 245, 248, 249, 251, 263, 266, 268, 269, 271, 272, 274, 283, 294, 295, 300, 303], "exampl": [4, 36, 37, 39, 41, 63, 266, 331], "x90": 4, "y90": 4, "z90": 4, "show": [4, 20, 28, 30, 32, 187], "between": [4, 115, 134, 140, 143, 170, 193, 198, 254, 306, 320, 330], "bool": [4, 11, 12, 15, 17, 18, 20, 22, 23, 25, 28, 30, 32, 60, 62, 63, 64, 67, 69, 70, 71, 72, 74, 75, 76, 77, 78, 79, 80, 81, 83, 86, 88, 89, 90, 110, 111, 127, 128, 140, 162, 163, 165, 167, 177, 179, 180, 204, 206, 241, 242, 243, 245, 266, 272, 274, 290, 292, 294, 295, 324, 325], "subprocess": 4, "achiev": 4, "nonblock": 4, "wrapper": [5, 10], "routin": [5, 20, 45, 47, 62, 64, 65, 70, 71, 73, 74, 75, 78, 79, 80, 83, 84, 86, 87, 88, 114, 117, 131, 133, 169, 192, 201, 206, 253, 268, 272, 292, 305, 319, 330], "other": [5, 21, 23, 28, 68, 71, 140, 162, 165, 177, 187, 214, 218, 222, 226, 230, 234, 238, 241, 242, 249, 266, 292, 330, 331], "physic": [5, 9, 197, 198, 199, 200, 324], "code": [5, 116, 301, 327, 331], "librari": [5, 263], "bind": [6, 7, 8, 9, 10, 11, 12, 230, 324], "class": [6, 7, 10, 11, 12, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 35, 36, 39, 40, 41, 47, 48, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 103, 109, 110, 111, 114, 115, 117, 118, 123, 124, 125, 126, 127, 128, 129, 130, 131, 133, 134, 135, 136, 137, 138, 139, 140, 161, 162, 164, 165, 166, 167, 169, 170, 171, 172, 173, 174, 176, 177, 178, 179, 180, 182, 183, 184, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 197, 198, 202, 203, 204, 205, 206, 212, 213, 214, 216, 217, 218, 220, 221, 222, 224, 225, 226, 228, 229, 230, 232, 233, 234, 236, 237, 238, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 253, 254, 255, 256, 257, 258, 259, 260, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 319, 320, 321, 322, 325, 330, 331], "hierarchi": [6, 7, 10, 11, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 35, 39, 41, 47, 48, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 114, 115, 117, 118, 123, 124, 125, 126, 127, 128, 129, 130, 131, 133, 134, 135, 136, 137, 138, 139, 140, 161, 162, 164, 165, 166, 167, 169, 170, 171, 172, 173, 174, 176, 177, 178, 179, 180, 182, 183, 184, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 197, 198, 202, 203, 204, 205, 206, 212, 213, 214, 216, 217, 218, 220, 221, 222, 224, 225, 226, 228, 229, 230, 232, 233, 234, 236, 237, 238, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 253, 254, 255, 256, 257, 258, 259, 260, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 319, 320, 321, 322], "emptyspheresresult": [6, 324], "determin": [6, 20, 28, 32, 110, 115, 134, 162, 165, 167, 170, 177, 179, 180, 189, 193, 204, 243, 245, 254, 263, 266, 274, 283, 290, 292, 306, 320, 330, 331], "ideal": 6, "posit": [6, 7, 9, 28, 29, 30, 31, 37, 71, 87, 143, 145, 147, 149, 166, 177, 178, 225, 233, 244, 266, 269, 271, 290, 292], "empti": [6, 8, 9, 70, 266, 331], "sphere": [6, 8, 9, 200, 266], "fill": [6, 9], "gap": 6, "primit": [6, 9, 10, 198, 331], "cell": [6, 9, 10, 11, 198, 217, 266, 292, 331], "es_find": [7, 8, 9, 324], "radii": [7, 8, 9, 199, 200, 325], "constructor": [7, 11, 20, 22, 23, 24, 25, 26, 28, 29, 30, 31, 32, 39, 41, 48, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 115, 118, 124, 126, 127, 128, 130, 131, 134, 136, 138, 140, 162, 165, 166, 167, 170, 172, 174, 177, 178, 179, 180, 183, 184, 186, 187, 189, 190, 193, 195, 198, 203, 204, 205, 206, 213, 214, 217, 218, 221, 222, 225, 226, 229, 230, 233, 234, 237, 238, 241, 242, 243, 244, 245, 247, 248, 249, 251, 254, 256, 258, 260, 263, 265, 266, 268, 269, 270, 271, 272, 273, 274, 275, 276, 278, 279, 280, 283, 285, 286, 288, 290, 292, 294, 295, 297, 298, 306, 308, 310, 312, 314, 320, 322, 331], "__init__": [7, 11, 20, 22, 23, 24, 25, 26, 28, 29, 30, 31, 32, 39, 41, 48, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 115, 118, 124, 126, 127, 128, 130, 131, 134, 136, 138, 140, 162, 165, 166, 167, 170, 172, 174, 177, 178, 179, 180, 183, 184, 186, 187, 189, 190, 193, 195, 198, 203, 204, 205, 206, 213, 214, 217, 218, 221, 222, 225, 226, 229, 230, 233, 234, 237, 238, 241, 242, 243, 244, 245, 247, 248, 249, 251, 254, 256, 258, 260, 263, 265, 266, 268, 269, 270, 271, 272, 273, 274, 275, 276, 278, 279, 280, 283, 285, 286, 288, 290, 292, 294, 295, 297, 298, 306, 308, 310, 312, 314, 320, 322], "_asdict": 7, "return": [7, 11, 12, 16, 20, 22, 23, 24, 26, 28, 29, 30, 31, 32, 36, 39, 41, 46, 52, 54, 55, 56, 58, 61, 62, 63, 64, 65, 66, 67, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 85, 86, 87, 88, 89, 96, 108, 110, 122, 126, 128, 131, 140, 152, 159, 162, 163, 165, 166, 167, 178, 179, 180, 187, 189, 198, 206, 217, 225, 226, 233, 242, 243, 244, 248, 266, 281, 283, 290, 302, 330, 331], "new": [7, 37, 87, 108, 128, 162, 187, 217, 225, 233, 248, 264, 266, 283, 292, 331], "dict": [7, 9, 11, 23, 28, 96, 110, 140, 187, 266, 279, 283, 290, 292], "which": [7, 11, 23, 26, 27, 30, 32, 63, 70, 71, 75, 84, 127, 162, 187, 189, 251, 266, 272, 283, 290, 296, 330, 331], "map": [7, 11, 16, 17, 18, 109, 111, 140, 198, 203], "field": [7, 63, 143, 145, 147, 149], "valu": [7, 9, 11, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 39, 41, 46, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 94, 100, 103, 108, 111, 112, 119, 125, 126, 127, 128, 131, 140, 142, 143, 145, 147, 149, 152, 159, 162, 164, 166, 167, 177, 178, 179, 180, 187, 189, 203, 204, 206, 213, 217, 225, 229, 230, 233, 240, 242, 243, 244, 245, 247, 248, 249, 251, 263, 265, 266, 268, 269, 271, 272, 273, 274, 276, 283, 294, 295, 325, 330, 331], "_field_default": 7, "_field": 7, "classmethod": [7, 24, 29, 30, 31, 75, 78, 126, 162, 165, 244, 251, 263], "_make": 7, "iter": [7, 9, 124, 140, 147, 149, 187, 266, 281, 330, 331], "from": [7, 11, 12, 20, 23, 24, 25, 28, 29, 30, 31, 32, 34, 36, 39, 41, 61, 62, 66, 68, 71, 73, 75, 77, 78, 84, 87, 88, 91, 108, 110, 112, 115, 116, 126, 128, 134, 140, 162, 164, 165, 166, 167, 170, 176, 177, 178, 179, 180, 187, 193, 204, 211, 217, 225, 229, 233, 240, 243, 244, 245, 247, 248, 249, 251, 254, 263, 266, 268, 269, 271, 272, 274, 281, 292, 297, 300, 306, 320, 325, 327, 330, 331], "sequenc": [7, 30, 60, 71, 324], "_replac": 7, "kwd": 7, "replac": [7, 23, 36, 140, 265, 266, 283, 292, 331], "specifi": [7, 28, 63, 69, 115, 134, 136, 138, 143, 145, 147, 149, 162, 170, 172, 174, 189, 193, 195, 254, 256, 258, 260, 266, 306, 308, 310, 312, 314, 320, 322, 331], "alia": [7, 20, 31, 32, 63, 64, 65, 67, 70, 71, 72, 76, 81, 88, 89, 165, 166, 178, 183, 186, 214, 215, 218, 219, 221, 222, 223, 226, 227, 229, 230, 231, 234, 235, 237, 238, 239, 241, 242, 244, 271, 274, 294, 295], "kwarg": [8, 23, 29, 30, 32, 37, 61, 66, 68, 73, 82, 84, 85, 87, 118, 131, 162, 165, 177, 179, 180, 183, 186, 187, 189, 214, 218, 222, 226, 230, 234, 238, 241, 242, 243, 244, 266, 269, 278, 279, 292], "updat": [8, 11, 249, 251, 266, 273, 283, 290, 292, 330, 331], "sprkkr": [8, 13, 22, 128, 142, 143, 145, 147, 149, 161, 162, 164, 165, 166, 167, 201, 202, 203, 204, 207, 212, 213, 214, 216, 217, 218, 220, 221, 222, 224, 225, 226, 228, 229, 230, 232, 233, 234, 236, 237, 238, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 262, 263, 264, 265, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 324, 327, 331], "ad": [8, 9, 23, 37, 71, 126, 242, 266, 325, 330], "shphere": 8, "accord": [8, 22, 23, 24, 25, 26, 71, 140, 142, 143, 145, 147, 149, 162, 213, 217, 221, 225, 229, 233, 237, 247, 248, 249, 251, 266, 268, 270, 272, 275, 283, 290, 292, 300, 330, 331], "empty_spher": [8, 266, 324], "result": [8, 11, 21, 24, 27, 28, 29, 30, 32, 36, 37, 51, 62, 63, 64, 65, 70, 71, 73, 74, 75, 77, 78, 79, 80, 83, 84, 85, 86, 87, 88, 108, 110, 128, 131, 140, 143, 145, 147, 149, 152, 159, 162, 165, 167, 176, 177, 179, 180, 181, 184, 187, 189, 190, 204, 206, 243, 244, 245, 266, 274, 281, 292, 315, 325, 327, 330], "overlap_matrix": 9, "18": [9, 198], "radii_ratios_map": 9, "max_es_overlap": 9, "24": [9, 198], "adjust_overlap": 9, "28": [9, 198, 200], "min_es_radiu": 9, "2": [9, 34, 67, 85, 87, 112, 140, 143, 145, 147, 149, 198, 200, 245, 300, 327, 331], "max_es_radiu": 9, "symmetrize_threshold": 9, "max_iter": 9, "100": [9, 198, 290], "grid": [9, 143, 145, 147, 149], "arrai": [9, 14, 23, 32, 60, 66, 71, 75, 78, 84, 85, 87, 91, 103, 105, 106, 115, 122, 128, 134, 140, 143, 145, 147, 149, 167, 170, 177, 179, 180, 187, 193, 204, 241, 243, 245, 247, 254, 274, 290, 292, 306, 320, 324, 325, 330, 331], "48": [9, 198], "verbos": [9, 20, 28, 30, 32, 143, 145, 147, 149, 331], "comput": [9, 10, 28, 39, 140, 143, 145, 147, 149, 187, 261, 283, 286, 292, 327], "best": 9, "coverag": 9, "vacuum": [9, 263, 290, 300], "pseudoatom": [9, 290], "extend": [9, 292], "true": [9, 11, 20, 22, 23, 25, 28, 29, 30, 31, 32, 37, 61, 62, 64, 65, 66, 70, 71, 73, 74, 75, 78, 79, 80, 83, 84, 85, 86, 87, 88, 124, 127, 128, 140, 143, 162, 163, 165, 166, 167, 177, 178, 179, 180, 204, 205, 206, 230, 241, 242, 243, 244, 245, 251, 266, 268, 269, 271, 272, 274, 283, 292, 331], "numpi": [9, 14, 15, 16, 17, 18, 61, 65, 70, 71, 72, 75, 78, 81, 84, 87, 91, 103, 115, 134, 140, 170, 193, 254, 306, 320, 330], "ndarrai": [9, 61, 66, 85, 103, 140, 292], "todo": [9, 147, 288, 296, 301], "defin": [9, 20, 26, 28, 30, 36, 37, 63, 82, 128, 162, 165, 208, 264, 289, 327, 330], "ratio": 9, "chemic": [9, 200, 263, 283, 290, 331], "element": [9, 33, 47, 71, 110, 263, 283, 290], "It": [9, 23, 28, 29, 30, 31, 32, 62, 64, 65, 70, 71, 73, 74, 75, 78, 79, 80, 83, 84, 86, 87, 88, 108, 126, 131, 140, 143, 145, 147, 149, 162, 166, 178, 189, 206, 244, 251, 263, 266, 269, 271, 290, 331], "dimensionless": 9, "onli": [9, 20, 23, 30, 32, 39, 63, 70, 71, 75, 109, 127, 128, 143, 162, 176, 178, 266, 290, 292, 296, 325, 330, 331], "matter": 9, "default": [9, 20, 23, 26, 28, 29, 30, 31, 32, 37, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 78, 79, 80, 81, 83, 84, 85, 86, 87, 88, 89, 108, 110, 115, 124, 128, 134, 140, 142, 152, 159, 162, 165, 166, 167, 170, 177, 178, 179, 180, 183, 184, 193, 204, 206, 243, 244, 245, 254, 265, 266, 268, 269, 271, 272, 274, 283, 286, 288, 290, 292, 306, 320, 324, 325, 330, 331], "walu": 9, "winger": [9, 199, 200], "seitz": [9, 199, 200], "winger_seitz_radii": [9, 324], "thei": [9, 11, 27, 28, 29, 30, 31, 32, 37, 115, 129, 131, 134, 140, 164, 166, 167, 170, 177, 178, 179, 180, 189, 193, 202, 204, 217, 225, 233, 240, 243, 244, 245, 248, 254, 266, 269, 271, 274, 306, 320, 325, 330, 331], "supplement": 9, "max": [9, 63, 67, 69, 72, 76, 77, 81, 82, 89, 294, 295], "overlap": 9, "maximum": [9, 143, 149], "radiu": [9, 143, 145, 147, 149, 200], "shpere": 9, "minimum": [9, 143], "symetrize_threshold": 9, "threshold": [9, 147, 149, 292], "symmetr": [9, 292], "find": [9, 23, 25, 140, 266, 283], "algorithm": [9, 147, 149], "output": [9, 46, 61, 65, 66, 67, 70, 71, 75, 78, 83, 84, 87, 108, 123, 124, 128, 129, 131, 143, 145, 147, 149, 162, 165, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 201, 206, 266, 324, 325, 327, 331], "spacegroupinfo": [10, 292, 324], "symmetri": [10, 11, 143, 145, 147, 149, 198, 290, 292, 331], "spacegroup": [11, 292], "dataset": [11, 143, 145, 147, 149], "equivalent_sit": 11, "carri": [11, 71], "inform": [11, 28, 29, 30, 31, 32, 36, 43, 71, 166, 178, 197, 198, 222, 244, 264, 269, 271, 292, 300, 331], "about": [11, 30, 36, 43, 161, 197, 198, 264, 292, 300, 327], "sprkkr_atom": [11, 266, 292, 300, 324, 330, 331], "sprkkratom": [11, 213, 217, 225, 233, 247, 248, 249, 266, 272, 290, 291, 300, 324, 330, 331], "uniquevaluesmap": [11, 12, 139, 281, 324], "desrib": [11, 27], "crystal": [11, 143], "dictionari": [11, 20, 23, 28, 29, 30, 34, 128, 140, 200, 266, 290, 330], "mani": [11, 330, 331], "recomput": [11, 292], "obtain": [11, 32, 71, 176, 327, 330, 331], "equival": [11, 12, 139, 140, 290, 292], "type": [11, 12, 15, 16, 17, 18, 20, 22, 23, 24, 25, 28, 30, 32, 34, 46, 52, 54, 55, 56, 58, 60, 61, 62, 64, 65, 66, 67, 69, 70, 71, 72, 73, 74, 75, 77, 78, 79, 80, 81, 83, 84, 85, 86, 87, 88, 89, 90, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 126, 127, 128, 131, 140, 143, 145, 147, 149, 152, 159, 162, 165, 166, 167, 177, 178, 179, 180, 187, 189, 198, 200, 203, 204, 206, 217, 225, 226, 233, 237, 238, 239, 242, 243, 244, 245, 248, 249, 251, 263, 266, 268, 272, 273, 274, 276, 280, 282, 283, 290, 292, 294, 295, 300, 327, 330], "properti": [11, 20, 26, 28, 29, 30, 31, 32, 37, 39, 41, 71, 77, 80, 84, 87, 108, 128, 162, 187, 189, 190, 198, 217, 221, 225, 229, 233, 237, 247, 248, 249, 251, 263, 265, 266, 280, 283, 289, 290, 292, 327, 330], "allow_chang": 11, "old": [11, 37, 301, 331], "info": [11, 20, 28, 29, 30, 31, 32, 128, 162, 166, 167, 178, 204, 244, 266, 269, 271, 274, 331], "been": [11, 22, 127, 217, 225, 233, 248, 266, 325, 331], "construct": [11, 189], "without": [11, 23, 71, 79, 86, 327, 330], "static": [11, 23, 30, 61, 71, 75, 78, 84, 87, 115, 130, 134, 140, 165, 166, 170, 193, 198, 242, 251, 254, 283, 286, 288, 292, 297, 306, 320], "compute_spacegroup_info": 11, "atomic_numb": [11, 12, 263, 292], "consider_old": [11, 12, 292], "precis": [11, 274], "1e": [11, 147, 149, 292], "05": [11, 143, 147, 149, 200, 292], "angular_precis": 11, "creat": [11, 20, 22, 23, 24, 25, 26, 28, 29, 30, 32, 34, 60, 62, 64, 65, 70, 71, 73, 74, 75, 78, 79, 80, 83, 84, 86, 87, 88, 108, 115, 134, 136, 138, 140, 152, 159, 162, 167, 170, 172, 174, 193, 195, 206, 213, 217, 221, 225, 229, 233, 237, 247, 248, 249, 251, 254, 256, 258, 260, 266, 268, 270, 272, 275, 280, 281, 283, 290, 292, 297, 300, 306, 308, 310, 312, 314, 320, 322, 330, 331], "suit": [11, 62, 80], "from_atom": [11, 251, 331], "method": [11, 20, 23, 29, 30, 31, 35, 36, 37, 39, 41, 61, 62, 64, 65, 66, 67, 70, 71, 73, 74, 75, 78, 79, 80, 83, 84, 86, 87, 88, 91, 115, 128, 134, 136, 138, 140, 143, 145, 147, 149, 162, 170, 172, 174, 193, 195, 206, 254, 256, 258, 260, 266, 283, 290, 292, 306, 308, 310, 312, 314, 320, 322, 330, 331], "relat": [11, 162, 189, 196], "document": [11, 28, 30, 32, 143, 145, 147, 149, 165, 214, 218, 222, 226, 230, 234, 238, 241, 242, 244, 247, 266, 325, 329, 331], "member": [11, 22, 23, 24, 25, 26, 28, 29, 30, 31, 32, 109, 140, 162, 166, 167, 177, 178, 179, 180, 204, 213, 217, 221, 225, 229, 233, 237, 243, 244, 245, 247, 248, 249, 251, 268, 269, 270, 271, 274, 275], "slightli": 11, "differ": [11, 20, 23, 25, 32, 63, 115, 128, 134, 167, 170, 193, 217, 225, 226, 233, 242, 248, 251, 254, 264, 266, 290, 306, 320, 325, 330, 331], "list": [11, 12, 30, 32, 37, 51, 61, 66, 71, 85, 103, 120, 140, 162, 164, 167, 177, 179, 180, 187, 204, 221, 229, 237, 240, 243, 245, 249, 266, 274, 280, 292], "overriden": [11, 71, 266], "forc": [11, 30, 266], "partiali": [11, 331], "break": 11, "real": [11, 60, 63, 69, 75, 78, 82, 106, 111, 112, 128, 143, 145, 147, 149, 263, 324], "ones": [11, 16, 17, 189, 217, 225, 233, 248, 331], "treat": 11, "label": [11, 266], "toler": [11, 147, 149], "unprecis": 11, "angular": [11, 143], "coordin": [11, 143, 149], "occup": [12, 225, 226, 227, 290, 292, 324, 331], "etc": [12, 20, 26, 28, 30, 32, 61, 65, 66, 67, 71, 78, 83, 84, 87, 119, 143, 187, 213, 217, 225, 233, 248, 249, 251, 265, 266, 272, 325, 330], "common": [14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 149, 161, 162, 164, 165, 166, 167, 169, 170, 171, 172, 173, 174, 176, 177, 178, 179, 180, 182, 183, 185, 186, 188, 189, 192, 193, 194, 195, 202, 203, 204, 206, 212, 213, 214, 216, 217, 218, 220, 221, 222, 224, 225, 226, 228, 229, 230, 232, 233, 234, 236, 237, 238, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 253, 254, 255, 256, 257, 258, 259, 260, 267, 268, 269, 270, 271, 273, 274, 275, 276, 293, 294, 295, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 319, 320, 321, 322, 324, 327, 331], "helper": [14, 296, 297], "data": [14, 20, 22, 23, 25, 28, 30, 32, 87, 167, 176, 177, 179, 180, 187, 198, 204, 221, 229, 237, 241, 243, 245, 247, 249, 250, 251, 261, 268, 272, 273, 274, 279, 283, 290, 292, 297, 300, 325, 330], "deal": 14, "problem": [14, 20, 23, 25, 28, 60, 143, 145, 147, 149, 331], "own": [14, 20, 23, 25, 32, 126, 128, 203, 273, 276, 290, 331], "datatyp": [14, 64, 65, 67, 70, 72, 76, 81, 88], "thu": [14, 23, 36, 128, 162, 189, 292, 330, 331], "mai": [14, 331], "what": [14, 32, 61, 62, 63, 65, 67, 70, 71, 72, 73, 74, 79, 81, 84, 86, 87, 89, 167, 177, 179, 180, 187, 204, 206, 243, 245, 266, 274], "seem": 14, "alternative_typ": [15, 16, 17, 18, 324], "int64": [15, 16, 17, 18, 72, 119], "float64": [15, 17, 18, 81], "complex": [15, 17, 18, 60, 92, 111, 119, 143, 324, 325], "complex128": [15, 17, 18], "bool_": [15, 17, 18, 65, 70], "datetim": [15, 17, 18, 67, 265], "datetime64": [15, 17, 18], "content": [15, 22, 23, 26, 28, 29, 163, 202, 203, 204, 205, 302, 330, 331], "types_altern": [15, 324], "primari": 15, "itself": [15, 280, 286], "canon": [16, 17, 109], "intern": [16, 128, 198], "standard": [16, 26, 90, 92, 93, 94, 95, 97, 98, 99, 100, 101, 102, 104, 105, 106, 107, 111, 113, 143, 145, 147, 149, 164, 166, 178, 240, 242, 244, 266, 330], "doctest": [16, 112, 140], "np": [16, 61, 66, 85, 119, 140, 143, 162, 200, 266, 331], "set": [18, 20, 22, 23, 28, 29, 30, 31, 32, 37, 53, 61, 62, 63, 64, 65, 66, 67, 68, 70, 71, 72, 73, 74, 76, 77, 79, 81, 83, 84, 85, 86, 87, 88, 89, 108, 110, 116, 128, 140, 143, 145, 147, 149, 166, 167, 177, 178, 179, 180, 187, 204, 206, 213, 217, 225, 229, 233, 243, 244, 245, 247, 248, 249, 251, 266, 268, 269, 271, 272, 274, 283, 290, 292, 327, 330], "base": [19, 20, 23, 25, 28, 30, 31, 63, 64, 71, 76, 87, 140, 190, 267, 278, 286, 327], "both": [19, 27, 32, 60, 167, 177, 179, 180, 204, 243, 245, 274, 330, 331], "section": [19, 20, 21, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32, 58, 59, 83, 126, 128, 143, 145, 147, 149, 152, 153, 154, 155, 156, 157, 158, 159, 160, 164, 165, 166, 177, 178, 202, 203, 204, 205, 206, 207, 211, 212, 213, 214, 216, 217, 218, 220, 221, 222, 224, 225, 226, 228, 229, 230, 232, 233, 234, 236, 237, 238, 240, 241, 242, 244, 245, 246, 247, 248, 249, 251, 266, 267, 269, 270, 271, 272, 275, 280, 324, 325, 330, 331], "definit": [20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 71, 126, 128, 141, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 162, 164, 167, 176, 177, 179, 180, 203, 204, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 243, 244, 245, 247, 248, 249, 251, 266, 268, 270, 271, 273, 274, 275, 276, 284, 285, 290, 324, 325, 330, 331], "two": [20, 80, 115, 131, 134, 140, 170, 193, 198, 254, 290, 297, 306, 320, 325, 330, 331], "configuration_definit": [20, 24, 26, 28, 29, 30, 31, 32, 33, 34, 164, 165, 166, 167, 176, 177, 178, 179, 180, 202, 204, 212, 214, 216, 218, 220, 222, 224, 226, 228, 230, 232, 234, 236, 238, 240, 241, 242, 243, 244, 245, 267, 269, 271, 274, 324, 330], "basedefinit": [20, 24, 27, 29, 30, 31, 32, 164, 165, 166, 167, 176, 177, 178, 179, 180, 202, 204, 212, 214, 216, 218, 220, 222, 224, 226, 228, 230, 232, 234, 236, 238, 240, 241, 242, 243, 244, 245, 267, 269, 271, 274, 324], "configuration_contain": [20, 22, 23, 24, 25, 26, 128, 161, 162, 212, 213, 216, 217, 220, 221, 224, 225, 228, 229, 232, 233, 236, 237, 246, 247, 248, 249, 250, 251, 267, 268, 270, 275, 324, 330], "configurationcontain": [20, 21, 22, 24, 25, 26, 128, 161, 162, 212, 213, 216, 217, 220, 221, 224, 225, 228, 229, 232, 233, 236, 237, 246, 247, 248, 249, 250, 251, 267, 268, 270, 275, 324, 330], "_definit": 20, "": [20, 23, 28, 30, 32, 44, 61, 63, 75, 78, 84, 87, 91, 128, 143, 147, 149, 177, 187, 200, 241, 263, 266, 280], "instanc": [20, 27, 28, 29, 32, 71, 87, 90, 92, 93, 94, 95, 97, 98, 99, 100, 101, 102, 104, 105, 106, 107, 108, 110, 113, 115, 128, 134, 136, 138, 140, 165, 170, 172, 174, 193, 195, 244, 254, 256, 258, 260, 306, 308, 310, 312, 314, 320, 322], "_contain": 20, "parent": [20, 24, 37, 126], "hold": [20, 21, 62, 142, 162, 187, 203, 250, 251, 274, 292, 325, 330, 331], "_get_path": 20, "include_root": 20, "dot": [20, 266, 331], "delimit": [20, 28, 29, 30, 31, 51, 61, 85, 165, 166, 178, 204, 242, 244], "path": [20, 162, 189, 266, 331], "item": [20, 28, 30, 32, 71, 84, 122, 128, 140, 178, 242, 244, 280, 283, 285], "tree": [20, 330], "energi": [20, 60, 75, 78, 128, 143, 145, 147, 149, 187, 266, 324, 331], "control": [20, 143, 145, 147, 149, 159, 325], "ha": [20, 22, 28, 29, 30, 31, 32, 36, 37, 71, 87, 96, 108, 127, 162, 166, 167, 177, 178, 179, 180, 187, 202, 204, 217, 225, 233, 243, 244, 245, 248, 249, 266, 269, 271, 274, 292, 325, 330, 331], "_get_root_contain": 20, "repres": [20, 60, 65, 263, 290], "whole": [20, 29, 30, 36, 330], "file": [20, 21, 22, 23, 25, 27, 28, 29, 30, 31, 32, 52, 58, 59, 70, 71, 75, 78, 87, 90, 94, 95, 98, 99, 100, 101, 104, 124, 126, 127, 128, 130, 131, 141, 143, 145, 147, 149, 151, 152, 154, 156, 157, 158, 159, 160, 161, 162, 164, 165, 166, 167, 175, 176, 177, 178, 179, 180, 187, 188, 189, 203, 204, 209, 213, 214, 217, 218, 222, 225, 226, 230, 233, 234, 238, 240, 242, 243, 244, 245, 246, 248, 250, 251, 266, 267, 268, 269, 270, 271, 273, 274, 275, 276, 277, 279, 280, 291, 296, 297, 300, 316, 327], "as_dict": [20, 23, 128, 283], "only_chang": [20, 23, 128], "basic": [20, 23, 30, 32, 128, 268, 331], "self": [20, 23, 28, 36, 37, 49, 50, 128, 131, 140, 149, 189, 251, 266, 292, 331], "case": [20, 29, 32, 71, 114, 115, 128, 133, 134, 135, 136, 137, 138, 143, 145, 147, 149, 169, 170, 171, 172, 173, 174, 192, 193, 194, 195, 204, 253, 254, 255, 256, 257, 258, 259, 260, 292, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 319, 320, 321, 322, 331], "redefin": [20, 28, 29, 31, 32, 62, 71, 75, 78, 80, 87, 128, 131, 167, 177, 249], "descend": [20, 23, 28, 30, 32, 62, 75, 76, 77, 78, 110, 128, 131, 167, 177, 189, 249, 266, 330], "chang": [20, 23, 28, 32, 128, 147, 167, 177, 179, 180, 204, 243, 245, 266, 274, 292, 327, 330, 331], "mean": [20, 23, 32, 61, 62, 64, 65, 66, 70, 71, 73, 74, 75, 78, 79, 80, 83, 84, 85, 86, 87, 88, 128, 162, 165, 167, 177, 179, 180, 204, 206, 243, 245, 266, 268, 272, 274, 331], "non": [20, 23, 128, 140, 143, 145, 147, 149, 266, 292, 330, 331], "expert": [20, 23, 28, 29, 30, 31, 32, 128, 143, 145, 147, 149, 166, 167, 177, 178, 179, 180, 204, 243, 244, 245, 269, 271, 274, 325], "to_dict": 20, "print": [20, 28, 29, 30, 31, 36, 37, 46, 62, 64, 65, 70, 71, 73, 74, 75, 78, 79, 80, 83, 84, 86, 87, 88, 143, 145, 147, 149, 162, 166, 178, 206, 242, 244, 266, 269, 271, 325, 331], "save": [20, 22, 23, 25, 71, 128, 131, 266, 268, 272, 273, 330, 331], "help": [20, 28, 29, 30, 31, 128, 166, 178, 244, 269, 271, 331], "show_hidden": [20, 28, 30, 32], "save_to_fil": [20, 268, 330], "valid": [20, 22, 23, 30, 32, 61, 62, 63, 64, 65, 66, 70, 71, 73, 74, 75, 76, 77, 78, 79, 80, 83, 84, 86, 87, 88, 89, 127, 128, 206, 230, 268, 272, 325], "format": [20, 28, 29, 30, 46, 62, 63, 64, 65, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 86, 87, 88, 89, 96, 108, 110, 126, 128, 143, 145, 147, 149, 164, 165, 166, 167, 178, 203, 206, 207, 208, 209, 240, 242, 244, 268, 273, 276, 294, 295, 324, 330, 331], "_save_to_fil": [20, 22, 23, 25, 128, 268], "implement": [20, 23, 25, 29, 36, 62, 71, 80, 268, 330, 331], "specif": [20, 264, 268, 293, 330, 331], "read": [20, 25, 28, 30, 71, 129, 162, 165, 176, 186, 189, 202, 204, 205, 217, 225, 226, 233, 242, 247, 248, 249, 251, 266, 268, 277, 278, 279, 296, 297, 300, 327], "rais": [20, 22, 23, 34, 49, 50, 115, 119, 134, 136, 138, 170, 172, 174, 193, 195, 254, 256, 258, 260, 268, 306, 308, 310, 312, 314, 320, 322], "except": [20, 22, 23, 34, 49, 50, 71, 266, 268], "error": [20, 61, 62, 63, 64, 65, 66, 70, 71, 73, 74, 75, 76, 77, 78, 79, 80, 83, 84, 86, 87, 88, 89, 131, 184, 187, 189, 190, 206, 268, 292, 327, 330], "complet": [20, 71, 268, 331], "string": [20, 23, 28, 30, 32, 46, 60, 61, 62, 63, 64, 65, 66, 67, 68, 70, 71, 72, 73, 74, 75, 78, 79, 80, 81, 83, 84, 87, 88, 89, 98, 101, 111, 143, 145, 147, 149, 152, 159, 162, 203, 204, 206, 266, 268, 272, 283, 290, 324, 331], "select": [20, 162, 268, 330], "basesect": [21, 24, 26, 212, 213, 216, 217, 220, 221, 224, 225, 228, 229, 232, 233, 236, 237, 246, 247, 248, 249, 267, 270, 275, 324], "configur": [21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 60, 70, 71, 75, 125, 126, 128, 161, 162, 164, 165, 166, 167, 177, 178, 179, 180, 202, 203, 204, 212, 213, 214, 216, 217, 218, 220, 221, 222, 224, 225, 226, 228, 229, 230, 232, 233, 234, 236, 237, 238, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 268, 269, 270, 271, 272, 273, 274, 275, 276, 324, 325, 327], "customsect": [21, 205, 206, 267, 275, 324], "rootconfigurationcontain": [21, 161, 162, 250, 251, 267, 268, 324], "task": [21, 24, 26, 28, 29, 30, 31, 43, 126, 128, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 154, 156, 157, 158, 160, 161, 162, 165, 166, 167, 178, 181, 186, 190, 203, 244, 266, 269, 271, 273, 276, 325, 327, 330], "potenti": [21, 26, 30, 71, 78, 87, 90, 94, 98, 100, 104, 126, 128, 143, 145, 147, 149, 164, 165, 176, 178, 187, 189, 202, 203, 204, 205, 206, 207, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 252, 253, 254, 255, 256, 257, 258, 259, 260, 266, 272, 273, 276, 277, 278, 279, 280, 292, 297, 300, 324, 327], "abl": [21, 27, 36, 266, 292], "write": [21, 22, 25, 27, 32, 71, 128, 162, 204, 206, 213, 217, 225, 226, 233, 242, 248, 249, 251, 266, 277, 278, 280, 301, 327], "pars": [21, 22, 23, 27, 28, 29, 30, 32, 49, 50, 60, 62, 64, 65, 70, 71, 73, 74, 75, 78, 79, 80, 83, 84, 86, 87, 88, 127, 131, 162, 165, 178, 186, 202, 206, 244, 330], "A": [22, 23, 26, 28, 29, 30, 31, 36, 37, 46, 61, 62, 63, 65, 67, 68, 70, 71, 73, 74, 75, 78, 80, 81, 82, 84, 90, 92, 93, 94, 95, 97, 98, 99, 100, 101, 102, 104, 105, 106, 107, 110, 113, 115, 127, 128, 134, 140, 162, 166, 170, 178, 190, 193, 198, 241, 244, 245, 246, 247, 248, 254, 266, 269, 271, 286, 292, 297, 306, 320, 327, 330], "its": [22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 37, 71, 87, 126, 128, 131, 143, 145, 147, 149, 162, 166, 177, 178, 200, 203, 213, 217, 221, 225, 229, 233, 237, 241, 244, 247, 248, 249, 251, 266, 268, 269, 270, 271, 273, 275, 276, 280, 283, 330, 331], "has_any_valu": [22, 247], "ani": [22, 23, 28, 33, 34, 62, 63, 64, 65, 67, 69, 70, 71, 72, 74, 75, 76, 77, 78, 79, 80, 81, 83, 86, 87, 88, 89, 105, 106, 140, 143, 145, 147, 149, 202, 206, 266, 272, 294, 295, 325, 330, 331], "otherwis": [22, 23, 25, 110, 162, 187, 251, 266, 271, 331], "why": [22, 23, 61, 62, 63, 64, 66, 70, 71, 73, 75, 76, 77, 78, 83, 84, 87, 88, 89, 91, 128, 272], "fail": [22, 23, 36, 49, 50, 115, 134, 170, 193, 254, 306, 320, 331], "dure": [22, 23, 71, 187, 217, 225, 226, 233, 242, 248, 249, 273, 277, 278, 279, 280, 283, 331], "input": [22, 23, 25, 30, 43, 58, 59, 70, 71, 75, 95, 99, 101, 110, 140, 141, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 154, 156, 157, 158, 159, 160, 161, 162, 165, 166, 176, 189, 201, 251, 266, 325, 327, 330], "requir": [22, 23, 25, 28, 29, 30, 31, 32, 54, 71, 127, 128, 162, 166, 167, 177, 178, 179, 180, 204, 214, 218, 222, 226, 230, 234, 238, 241, 242, 243, 244, 245, 251, 266, 269, 271, 272, 274, 327, 330, 331], "enforc": [22, 23, 71, 128], "parser": [22, 23, 63, 175, 181, 188], "skip": [22, 23, 71, 283, 330], "where": [22, 140, 162, 266, 290, 300, 331], "should": [22, 23, 29, 37, 61, 62, 64, 65, 66, 67, 70, 71, 73, 74, 75, 77, 78, 79, 80, 83, 84, 86, 87, 88, 96, 127, 128, 142, 162, 187, 189, 196, 206, 213, 217, 225, 226, 233, 242, 248, 249, 266, 271, 273, 274, 290, 292, 331], "written": [22, 28, 30, 32, 167, 177, 179, 180, 204, 242, 243, 245, 266, 274, 330], "something_have_been_written": 22, "group": [23, 63], "_member": [23, 166], "form": [23, 28, 32, 61, 62, 63, 66, 67, 71, 73, 77, 84, 87, 88, 96, 167, 177, 179, 180, 204, 243, 245, 250, 251, 274, 330, 331], "obj": [23, 292], "_interactive_memb": 23, "hidden": [23, 28, 29, 30, 31, 32, 166, 167, 177, 178, 179, 180, 204, 243, 244, 245, 269, 271, 274], "acces": 23, "via": [23, 331], "sanit": 23, "whitespac": [23, 52, 79, 86], "special": [23, 36, 37, 79, 83, 86, 143, 145, 147, 149, 245, 279, 330, 331], "charact": [23, 30], "underscor": 23, "These": [23, 161, 247, 330], "notat": [23, 46, 198, 266, 331], "t": [23, 65, 143, 145, 147, 149, 167, 205, 206, 243, 265, 266, 290, 292, 331], "shape": 23, "_get_memb": 23, "search": [23, 327, 330], "interactive_memb": 23, "clear": [23, 25, 128, 251], "do_not_check_requir": [23, 128], "eras": 23, "reset": [23, 203, 248, 251, 266, 290, 331], "subcontain": 23, "argument": [23, 28, 30, 32, 34, 36, 37, 39, 41, 62, 64, 65, 70, 71, 73, 74, 75, 78, 79, 80, 83, 84, 86, 87, 88, 128, 162, 187, 206, 266, 272, 283, 292, 325, 331], "pass": [23, 25, 32, 62, 64, 65, 70, 71, 73, 74, 75, 78, 79, 80, 83, 84, 86, 87, 88, 108, 131, 187, 206, 217, 225, 233, 248, 251, 266, 292, 325, 330, 331], "throw": [23, 71, 266], "prevent": 23, "neverthenless": 23, "anywai": [23, 61, 66, 85], "previou": [23, 28, 30, 31, 32, 177], "get": [23, 128, 162, 211, 247, 266, 331], "unknown": [23, 30, 71, 75, 78, 128, 203, 205, 244, 266, 302], "child": [23, 30, 31, 37, 166, 178, 242, 244], "try": [23, 266], "conain": 23, "mix": [23, 32, 46, 60, 62, 71, 80, 100, 126, 127, 128, 131, 147, 149, 162, 167, 177, 179, 180, 189, 203, 204, 243, 245, 273, 274, 276, 324], "usag": [23, 116, 123, 124, 128, 327], "input_paramet": [23, 128, 142, 143, 145, 147, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 183, 184, 186, 187, 189, 190, 210, 266, 277, 324, 327], "niter": [23, 147, 149], "ne": [23, 143, 145, 147, 149, 200, 331], "10": [23, 48, 143, 198, 300], "unkwnown": 23, "how": [23, 28, 29, 30, 32, 61, 63, 65, 66, 67, 71, 78, 83, 84, 87, 110, 167, 177, 179, 180, 204, 242, 243, 245, 266, 274, 283, 327, 330], "handl": [23, 36, 37, 53, 266, 296], "known": [23, 143, 145, 147, 149, 177, 178, 266, 331], "custom": [23, 24, 30, 31, 61, 62, 66, 75, 78, 80, 85, 143, 145, 147, 149, 165, 166, 178, 202, 204, 205, 206, 242, 266, 275, 276, 330, 331], "keyword": [23, 60, 266, 324, 325], "syntax": [23, 27, 266], "syntact": [23, 71, 266], "sugar": [23, 266], "remove_memb": 23, "remov": [23, 24, 30, 32, 126, 283], "previous": [23, 162, 292], "nest": [23, 28, 61, 75, 78, 84, 87, 91], "transform": [23, 34, 61, 65, 66, 67, 71, 77, 78, 83, 84, 87, 128, 330], "well": 23, "to_str": 23, "_find_valu": [23, 128], "sought": [23, 266], "exist": [23, 247, 266, 283, 290, 331], "_interactive_member_nam": 23, "kei": [23, 34, 118, 140, 200], "_add": 23, "is_chang": [23, 128], "could": [23, 29, 71, 87, 262, 263], "probabl": [23, 189, 283, 290], "factori": [24, 126, 165, 166], "definition_typ": 24, "signatur": [24, 37], "callabl": [24, 32, 62, 63, 64, 65, 67, 69, 70, 71, 72, 74, 75, 76, 77, 78, 79, 80, 81, 83, 86, 88, 89, 128, 206, 266, 294, 295], "addit": [25, 28, 29, 30, 31, 32, 61, 65, 66, 67, 71, 73, 78, 83, 84, 87, 166, 178, 244, 251, 266, 269, 271, 272, 292], "capabl": [25, 330, 331], "read_from_fil": [25, 30, 131, 251], "clear_first": [25, 251], "allow_danger": [25, 28, 29, 30, 32, 162, 251], "present": [25, 28, 32, 71, 177, 251, 266, 267, 290, 293, 331], "preserv": [25, 63, 251], "load": [25, 251, 331], "dangerous_valu": [25, 251], "constraint": [25, 28, 251], "violat": [25, 251], "whose": [26, 28, 30, 37, 65, 202, 205, 217, 225, 233, 248, 249, 266], "predefind": 26, "sectiondefinit": [26, 27, 164, 166, 176, 178, 212, 214, 216, 218, 220, 222, 224, 226, 228, 230, 232, 234, 236, 238, 240, 241, 242, 267, 271, 324], "containerdefinit": [26, 27, 29, 31, 164, 165, 166, 176, 178, 212, 214, 216, 218, 220, 222, 224, 226, 228, 230, 232, 234, 236, 238, 240, 241, 242, 244, 267, 269, 271, 324], "configurationrootdefinit": [27, 164, 165, 240, 244, 267, 269, 324], "valuedefinit": [27, 71, 87, 126, 128, 164, 167, 176, 177, 179, 180, 202, 203, 204, 240, 243, 245, 267, 273, 274, 276, 324], "alternative_nam": [28, 29, 30, 31, 32, 166, 167, 177, 178, 179, 180, 204, 230, 243, 244, 245, 269, 271, 274], "is_opt": [28, 29, 30, 31, 32, 166, 167, 177, 178, 179, 180, 204, 243, 244, 245, 269, 271, 274], "is_hidden": [28, 29, 30, 31, 32, 166, 167, 177, 178, 179, 180, 204, 243, 244, 245, 269, 271, 274], "is_expert": [28, 29, 30, 31, 32, 166, 167, 177, 178, 179, 180, 204, 243, 244, 245, 269, 271, 274], "name_in_grammar": [28, 29, 30, 31, 32, 71, 87, 166, 167, 177, 178, 179, 180, 204, 243, 244, 245, 269, 271, 274], "write_alternative_nam": [28, 230], "denot": [28, 29, 30, 31, 32, 166, 167, 177, 178, 179, 180, 204, 243, 244, 245, 269, 271, 274, 292, 331], "boolean": [28, 29, 30, 31, 65, 70, 95, 166, 178, 244, 266, 269, 271, 324], "pot": [28, 29, 30, 31, 166, 178, 244, 269, 271, 296, 331], "offer": [28, 29, 30, 31, 130, 166, 178, 244, 269, 271], "usual": [28, 29, 30, 31, 115, 134, 166, 170, 178, 193, 244, 254, 269, 271, 306, 320], "anoth": [28, 29, 30, 31, 36, 140, 166, 178, 213, 217, 225, 233, 244, 248, 269, 271, 280], "direct": [28, 29, 30, 31, 149, 166, 178, 244, 247, 269, 271], "sens": [28, 29, 30, 31, 166, 178, 244, 269, 271], "somewhat": [28, 29, 30, 31, 32, 166, 167, 177, 178, 179, 180, 204, 243, 244, 245, 269, 271, 274], "variabl": [28, 29, 30, 31, 70, 71, 75, 143, 163, 166, 178, 244, 249, 266, 269, 271, 331], "recogn": [28, 29, 30, 31, 63, 103, 166, 178, 244, 269, 271], "short": [28, 29, 30, 31, 166, 178, 244, 269, 271], "messag": [28, 29, 30, 31, 49, 50, 61, 62, 63, 64, 65, 66, 70, 71, 73, 74, 75, 76, 77, 78, 79, 80, 83, 84, 86, 87, 88, 89, 166, 178, 206, 244, 269, 271, 331], "perex": [28, 29, 30, 31, 166, 178, 244, 269, 271], "result_class": [28, 31, 32, 165, 183, 186, 189, 214, 218, 222, 226, 230, 234, 238, 241, 242, 244, 271, 274], "ommit": [28, 70, 71, 75], "expect": [28, 32, 109, 177], "locat": [28, 32, 177, 330, 331], "By": [28, 32, 61, 62, 63, 65, 67, 70, 71, 72, 73, 74, 79, 81, 84, 86, 87, 89, 177, 206, 266, 290], "instanti": [28, 32, 71, 75, 78, 162, 177, 330], "_info": [28, 166, 167], "text": [28, 87, 297, 331], "_descript": [28, 166, 167], "longer": 28, "sai": 28, "much": 28, "create_object": [28, 30], "grammar": [28, 29, 30, 31, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 73, 74, 79, 81, 84, 85, 86, 87, 89, 90, 92, 93, 94, 95, 97, 98, 99, 100, 101, 102, 104, 105, 106, 107, 108, 109, 110, 112, 113, 127, 176, 205, 206, 244, 324, 330], "global": [28, 214], "state": [28, 53, 143, 251, 271, 272], "danger": [28, 128, 162, 325], "fulfil": 28, "_description_indent": 28, "level": [28, 30, 143], "indent": [28, 30, 32], "prefix": [28, 29, 30, 32, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 85, 86, 87, 88, 89, 167, 177, 179, 180, 204, 206, 243, 245, 274, 294, 295], "also": [28, 30, 32, 140, 161, 167, 177, 179, 180, 204, 243, 245, 263, 274, 292, 330, 331], "detail": [28, 30, 32], "includ": [28, 30, 292], "each": [28, 30, 32, 60, 120, 142, 187, 292, 330, 331], "begin": [28, 30, 32, 266], "commonli": [28, 29, 30, 32, 71, 87, 127], "space": [28, 30, 32, 143, 145, 149, 180, 244], "_tuple_with_my_nam": [28, 29], "expr": [28, 29, 51, 57], "has_valu": [28, 71, 83], "is_numbered_arrai": [28, 32, 167, 177, 179, 180, 204, 243, 245, 274], "expres": 28, "express": [28, 61, 62, 63, 65, 67, 70, 71, 72, 73, 74, 79, 81, 84, 86, 87, 89, 206], "separ": [28, 59, 60, 71, 202, 205, 206, 240, 324, 330], "grammar_typ": [28, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 202, 206, 293, 294, 295, 324, 330], "do_not_skip_whitespaces_before_nam": [28, 166], "_get_copy_arg": 28, "copi": [28, 30, 32, 71, 110, 120, 263, 266, 283, 285, 288, 290], "_copy_excluded_arg": 28, "can_be_rep": [28, 32], "deriv": [29, 32, 167, 177, 179, 180, 204, 243, 245, 274], "kind": 29, "better": [29, 115, 134, 170, 193, 254, 306, 320], "fix": [29, 30, 32, 48, 143, 167, 177, 178, 179, 180, 204, 242, 243, 244, 245, 274, 325], "purpos": [29, 296], "from_dict": 29, "def": [29, 36, 37, 39, 41], "recurs": 29, "custom_value_nam": [29, 31], "custom_sect": 29, "appear": [29, 30, 31, 32, 60, 70, 167, 177, 179, 180, 204, 243, 245, 274], "parse_return": [29, 30], "val": [29, 30, 61, 65, 66, 67, 71, 78, 83, 84, 256], "return_value_onli": [29, 30], "unpack": [29, 30, 128], "unnecessari": [29, 30], "There": [29, 178, 244, 290, 330, 331], "_grammar": [29, 30, 32, 62, 63, 65, 67, 70, 71, 72, 74, 79, 81, 83, 84, 86, 87, 89, 206], "tweak": 29, "ignor": [29, 162, 266], "comment": 29, "would": [29, 162], "onc": [29, 39, 120], "has_hidden_memb": [30, 31, 166, 178, 271], "force_ord": [30, 31, 166, 178, 242, 244, 271], "inputparamet": [30, 31, 128, 161, 165, 266, 324, 325, 330], "value_name_format": [30, 32, 242], "_dict_from_named_valu": 30, "arg": [30, 37, 82, 118, 162, 177, 179, 180, 183, 186, 189, 217, 225, 233, 241, 242, 243, 248, 266, 278, 279, 292], "auxiliari": 30, "order": [30, 32, 167, 177, 178, 179, 180, 204, 226, 242, 243, 244, 245, 248, 274, 290, 330], "configuration_type_nam": [30, 165, 244], "runtim": [30, 32, 43, 165, 244, 325], "data_descript": [30, 32], "additional_data_descript": [30, 32], "children": 30, "even": [30, 37, 61, 62, 63, 65, 67, 70, 71, 72, 73, 74, 79, 81, 84, 86, 87, 89, 119, 206, 325], "modifi": [30, 37, 266, 331], "all_member_nam": 30, "_values_grammar": 30, "delimited_custom_value_grammar": [30, 31], "custom_name_charact": [30, 244], "abcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyz0123456789_": [30, 244], "custom_member_grammar": 30, "value_nam": 30, "_first_section_is_fix": 30, "ve": 30, "unord": 30, "parse_fil": 30, "whole_str": [30, 71], "async": [30, 71, 130, 131, 183, 186], "parse_from_stream": [30, 71], "stream": [30, 71, 206, 330], "up_to": [30, 71], "start": [30, 71, 140, 147, 149, 331], "asyncio": [30, 129, 130, 330], "typic": [31, 140, 280], "custom_valu": 31, "_generic_info": [31, 32, 165, 244], "default_valu": [32, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 85, 86, 87, 88, 89, 128, 167, 177, 179, 180, 204, 206, 243, 245, 274, 294, 295], "fixed_valu": [32, 167, 177, 179, 180, 204, 243, 245, 274], "name_format": [32, 167, 177, 179, 180, 204, 243, 245, 274], "grammartyp": [32, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 110, 127, 167, 177, 179, 180, 202, 204, 206, 243, 245, 272, 274, 293, 294, 295, 324, 325], "anyt": [32, 167, 177, 179, 180, 204, 243, 245, 274], "alternativelli": [32, 167, 177, 179, 180, 204, 243, 245, 274], "still": [32, 61, 75, 78, 84, 87, 91, 128, 167, 177, 179, 180, 204, 243, 245, 274, 331], "condit": [32, 33, 49, 62, 63, 64, 65, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 86, 87, 88, 89, 167, 177, 179, 180, 204, 206, 243, 245, 274, 294, 295], "met": [32, 167, 177, 179, 180, 204, 243, 245, 274], "omit": [32, 167, 177, 179, 180, 204, 243, 245, 274], "access": [32, 36, 39, 41, 71, 84, 128, 167, 177, 179, 180, 204, 243, 245, 266, 274, 290, 292], "end": [32, 36, 52, 74, 167, 177, 179, 180, 204, 206, 243, 245, 274], "export": [32, 167, 177, 179, 180, 204, 243, 245, 274, 331], "Such": [32, 71, 167, 177, 179, 180, 204, 243, 245, 274], "spars": [32, 167, 177, 179, 180, 204, 243, 245, 274], "ouput": [32, 167, 177, 179, 180, 204, 243, 245, 266, 274], "name1": [32, 167, 177, 179, 180, 204, 243, 245, 274], "name2": [32, 167, 177, 179, 180, 204, 243, 245, 274], "conf": [32, 128, 167, 177, 179, 180, 204, 243, 245, 274], "name_value_delimit": [32, 167, 177, 179, 180, 204, 243, 245, 274], "note": [32, 115, 134, 143, 167, 170, 177, 179, 180, 193, 204, 243, 245, 254, 274, 306, 320, 327, 330], "type_from_type_map": [32, 167, 324], "guess": [32, 108, 110, 147, 149, 167, 263], "formated_nam": 32, "more": [32, 71, 115, 134, 143, 145, 147, 149, 170, 193, 254, 264, 274, 280, 282, 283, 306, 320, 325, 327], "here": [32, 61, 65, 66, 67, 71, 78, 83, 84, 87, 128, 208, 279], "thing": [32, 36], "choic": [32, 71, 73], "effect": [32, 140, 292], "explan": [32, 162], "accept": [32, 63, 80, 87, 103, 128, 272, 325, 331], "retriev": [32, 217, 225, 233], "convert_and_valid": 32, "get_valu": 32, "dangerousvalu": [32, 125, 128, 324], "duplicit": 34, "moreov": [34, 36, 162], "b": [34, 36, 61, 71, 75, 78, 84, 87, 91, 115, 130, 134, 140, 170, 193, 200, 254, 306, 320], "subdictionari": 34, "cached_class_properti": [35, 41, 324], "class_properti": [35, 39, 324], "mainli": 35, "decor": [36, 37, 38, 39, 40, 41, 324], "lost": 36, "As": [36, 200], "consequ": 36, "execut": [36, 115, 134, 136, 138, 161, 162, 163, 165, 170, 172, 174, 190, 193, 195, 254, 256, 258, 260, 266, 306, 308, 310, 312, 314, 320, 322, 330, 331], "super": 36, "appli": [36, 62, 64, 65, 70, 71, 73, 74, 75, 78, 79, 80, 83, 84, 86, 87, 88, 108, 110, 206], "veri": 36, "tricki": 36, "style": 36, "situat": 36, "__set_name__": 36, "lose": 36, "recov": 36, "descriptor": [36, 123, 124], "protocol": 36, "speed": [36, 149], "know": 36, "everyth": 36, "func": [36, 37, 40], "wrap": 36, "cl": [36, 39, 41, 200, 331], "ab": 36, "prepend": 37, "self_nam": 37, "keyword_onli": 37, "new_param": 37, "f": [37, 65, 71, 200, 206, 331], "param": [37, 126, 128, 162, 203, 273, 276], "alter": [37, 71, 85, 266, 331], "retain": [37, 71, 120, 128], "user_funct": 38, "simpl": [38, 62, 80], "lightweight": 38, "unbound": 38, "sometim": [38, 61, 62, 63, 65, 67, 70, 71, 72, 73, 74, 79, 81, 84, 86, 87, 89, 127, 162, 206], "memoiz": 38, "convert": [39, 41, 46, 61, 62, 63, 64, 65, 66, 67, 70, 71, 73, 74, 75, 77, 78, 79, 80, 83, 84, 86, 87, 88, 110, 206, 266, 292], "singl": [39, 41, 128, 330], "directli": [39, 41, 128, 331], "cls_properti": [39, 41], "some_cached_valu": 39, "another_cls_properti": 39, "another_cached_valu": 39, "cach": [41, 63, 280, 281, 324], "desir": [41, 61, 62, 63, 65, 67, 70, 71, 72, 73, 74, 79, 81, 84, 86, 87, 89, 206, 283], "some_valu": 41, "enrich": [42, 71, 84], "12e": 46, "lead": [46, 143, 145, 147, 149, 331], "zero": [46, 87, 89, 115, 134, 140, 170, 193, 247, 254, 263, 266, 283, 286, 306, 320], "fortran": [46, 123, 124], "scientif": 46, "1000000000000e": 46, "00": 46, "14": [46, 143, 198, 200], "6e": 46, "1000000e": 46, "01": [46, 145], "white": [47, 324], "core": [47, 48, 202, 205, 263], "token": [47, 48, 63, 71, 202, 205], "parserel": [47, 48, 52, 54, 55, 56, 58, 61, 65, 67, 70, 72, 74, 79, 81, 83, 85, 86, 89, 165, 166, 167, 178, 179, 180, 202, 205, 206, 243, 244], "abc": [47, 48, 187, 202, 205, 264, 266], "whitechar": 48, "pp": [48, 63], "respect": [48, 143], "default_white_char": 48, "_abc_impl": [48, 205, 266], "_abc": [48, 205, 266], "_abc_data": [48, 205, 266], "parseel": 49, "pa": [50, 200], "action": [50, 71], "parseelemenet": 50, "delim": 51, "suppress": [51, 56, 58, 61, 83, 123, 124, 166, 178, 206, 244], "eof": 52, "newlin": [53, 54, 55, 165, 166, 178, 204, 206, 242, 244], "restor": 53, "optin": 55, "quot": [56, 79, 101], "pattern": [59, 205, 330], "basemix": [60, 75, 78, 80, 324], "baserealwithunit": [60, 69, 82, 324], "typedgrammartyp": [60, 63, 64, 65, 67, 69, 70, 72, 74, 76, 77, 79, 81, 82, 86, 89, 293, 294, 295, 324], "basestr": [60, 74, 79, 86, 324], "setof": [60, 66, 75, 78, 103, 105, 106, 109, 324], "date": [60, 63, 266, 324, 331], "flag": [60, 71, 75, 108, 143, 145, 147, 149, 167, 324, 325], "integ": [60, 75, 77, 78, 89, 105, 110, 111, 112, 113, 119, 128, 140, 143, 145, 147, 149, 266, 283, 290, 324, 331], "linestr": [60, 78, 98, 324], "objectnumb": [60, 293, 294, 295, 324], "unsign": [60, 77, 293, 294, 295, 324], "potmix": [60, 100, 243, 324], "qstring": [60, 75, 324], "rang": [60, 140, 143, 324], "realwithunit": [60, 324], "tabl": [60, 71, 187, 198, 324], "definitionfil": 60, "length": [61, 66, 85, 87, 105, 106, 140, 143, 147, 149, 292], "max_length": [61, 66, 85], "min_length": [61, 66, 85], "as_list": [61, 66, 85], "min_": [61, 66, 85], "minim": [61, 63, 66, 67, 69, 72, 76, 77, 81, 82, 85, 89, 143, 145, 147, 149, 294, 295], "maxim": [61, 63, 66, 67, 69, 72, 76, 77, 81, 82, 85, 89, 143, 145, 147, 149, 294, 295], "sp": [61, 149, 166], "tab": [61, 166, 331], "delimiter_str": [61, 85], "_set_convert_act": 61, "grammar_nam": [61, 62, 63, 65, 67, 70, 71, 72, 73, 74, 79, 81, 84, 86, 87, 89, 206], "human": [61, 62, 63, 65, 67, 70, 71, 72, 73, 74, 79, 81, 84, 86, 87, 89, 206], "readabl": [61, 62, 63, 65, 67, 70, 71, 72, 73, 74, 79, 81, 84, 86, 87, 89, 206], "setnam": [61, 62, 63, 65, 67, 70, 71, 72, 73, 74, 79, 81, 84, 86, 87, 89, 206], "shorter": [61, 62, 63, 65, 67, 70, 71, 72, 73, 74, 79, 81, 84, 86, 87, 89, 206], "_string": [61, 65, 66, 67, 71, 78, 83, 84, 87], "postfix": [61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 86, 87, 88, 89, 162, 163, 206, 266, 294, 295], "actual": [61, 65, 66, 67, 71, 78, 83, 84, 87, 140, 266, 330, 331], "_valid": [61, 62, 63, 64, 66, 70, 71, 73, 76, 77, 83, 84, 87, 88, 89], "cannon": [61, 62, 66, 71, 73, 77, 84, 87, 88], "is_the_same_valu": [61, 71, 75, 78, 84, 87], "cannot": [61, 75, 78, 84, 87, 91, 119, 217, 225, 233, 248], "compar": [61, 71, 75, 78, 84, 87, 91, 115, 134, 170, 193, 254, 306, 320], "far": [61, 75, 78, 84, 87, 91, 325], "perfect": [61, 75, 78, 84, 87, 91], "after_convert": [62, 63, 64, 65, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 86, 87, 88, 89, 206, 294, 295], "variant": [62, 75, 78, 99, 100, 105, 106], "anyth": [62, 131, 189, 266, 330], "befor": [62, 64, 65, 70, 71, 73, 74, 75, 78, 79, 80, 83, 84, 86, 87, 88, 206, 213, 217, 225, 226, 233, 242, 248, 331], "invalid": [62, 64, 65, 70, 71, 73, 74, 75, 78, 79, 80, 83, 84, 86, 87, 88, 206], "interpret": [62, 64, 65, 70, 71, 73, 74, 75, 78, 79, 80, 83, 84, 86, 87, 88, 119, 162, 206, 266, 331], "explain": [62, 64, 65, 70, 71, 73, 74, 75, 78, 79, 80, 83, 84, 86, 87, 88, 206], "enter": [62, 64, 65, 70, 71, 73, 74, 75, 78, 79, 80, 83, 84, 86, 87, 88, 206], "string_typ": [62, 75, 78], "param_nam": [62, 63, 71, 84, 85, 87], "get_typ": [62, 80], "actuali": [62, 80], "min": [63, 67, 69, 72, 76, 77, 81, 82, 89, 294, 295], "unit": [63, 69, 82, 292], "append": [63, 162, 163, 266, 292], "automat": [63, 115, 134, 170, 193, 254, 283, 292, 306, 320, 330, 331], "grammar_cach": 63, "_grammar_unit": 63, "match": 63, "regular": [63, 143, 145, 147, 149], "stdlib": 63, "re": [63, 67, 200, 205], "regex": [63, 330], "p": [63, 67, 143, 200, 266, 331], "parseresult": 63, "instead": [63, 71, 147, 149, 266, 292], "wish": 63, "build": [63, 331], "compil": [63, 121, 162, 205, 331], "wa": [63, 128, 292], "realnum": 63, "r": [63, 205, 206], "d": [63, 67, 265, 331], "ref": 63, "stackoverflow": 63, "question": 63, "267399": 63, "roman": 63, "numer": 63, "4": [63, 67, 119, 140, 143, 162, 198, 200, 264, 266, 331], "cm": [63, 200], "cd": [63, 200], "xc": 63, "xl": 63, "ix": 63, "iv": 63, "v": [63, 147, 149, 200], "year": 63, "month": 63, "dai": 63, "9": [63, 198, 200], "numpy_typ": [63, 65, 67, 70, 71, 72, 81, 87, 89], "datatype_nam": [63, 64, 65, 67, 70, 72, 76, 88, 89], "allowed_typ": [64, 65, 67, 70, 72, 74, 76, 81, 88, 324], "letter": 65, "type_nam": [65, 67], "_grammar_nam": [66, 83], "dd": 67, "mm": 67, "yyyi": 67, "take": [68, 73, 74, 77, 161], "predefin": [68, 73, 131, 189, 210, 331], "rydberg": 69, "ev": [69, 128, 143, 145, 147, 149], "ry": [69, 128, 143, 145, 147, 149], "07349864494991327": 69, "convers": 69, "factor": 69, "missing_valu": [70, 71, 75], "configuraion": [70, 71, 75], "can_be_ommit": [70, 71, 75], "ommis": [70, 71, 75], "do_not_output_the_opt": [70, 71, 75], "yield": 71, "pair": [71, 128, 330], "confus": 71, "opposit": [71, 292], "absenc": 71, "On": [71, 331], "hand": 71, "identifi": [71, 87, 140, 177, 178, 283], "dtype": [71, 87], "descendatn": 71, "particular": 71, "comparison": [71, 115, 134, 170, 193, 254, 306, 320], "Not": [71, 302], "equal": [71, 115, 134, 140, 143, 170, 193, 200, 254, 283, 290, 292, 306, 320], "sign": [71, 72, 97], "assign": [71, 187], "transform_grammar": [71, 85], "chanc": [71, 85], "overrid": [71, 266], "subclass": [71, 131, 189], "rare": 71, "incomplet": 71, "set_from_atom": [71, 251, 272, 294, 295], "_valueerror": 71, "error_messag": 71, "parameternam": 71, "propper": [71, 206, 213, 217, 225, 233, 248, 265, 301], "stdout": [71, 124, 131, 162, 183, 186, 266], "abil": [71, 84], "additional_descript": [71, 73], "doe": [71, 73, 115, 134, 136, 138, 170, 172, 174, 193, 195, 254, 256, 258, 260, 292, 306, 308, 310, 312, 314, 320, 322, 330, 331], "fit": [71, 73], "multilin": [71, 73], "type_valid": 71, "typenam": 71, "suffici": 71, "ok": 71, "skipto": 74, "lineend": [74, 166], "stringend": 74, "_initi": [75, 78], "later": [75, 78, 266, 331], "abstract": 77, "reffer": 77, "give": [77, 143, 145, 147, 149], "care": [77, 161], "te": [77, 200], "word": 79, "char": [79, 86], "w": [79, 86, 200, 266], "fnumber": 81, "insid": 83, "format_al": [84, 87, 108, 110], "allowed_valu": 84, "column": [87, 187], "header": [87, 245], "free_head": 87, "21": [87, 198], "17": [87, 198, 200, 331], "16": [87, 198], "numbering_label": 87, "numbering_format": 87, "row_condit": 87, "named_result": 87, "optionali": 87, "iq": 87, "irefq": 87, "imq": 87, "noq": 87, "itoq": 87, "conc": 87, "000": 87, "featureless": 87, "number_of_collumn": 87, "zero_data": 87, "row": 87, "appropri": [96, 111, 266], "format_for_the_typ": 96, "default_format": 96, "array_lik": 103, "type_map": [108, 110, 112], "becom": 108, "left": [108, 143, 163, 266], "unless": 108, "ordereddict": [109, 111, 117, 324], "collect": [109, 117, 118, 139, 140, 187], "normalize_typ": [109, 324], "descendatnt": 110, "format_for_typ": [110, 324], "gue": 112, "testcas": [114, 116, 133, 135, 136, 137, 138, 169, 171, 172, 173, 174, 192, 194, 195, 253, 255, 256, 257, 258, 259, 260, 305, 307, 308, 309, 310, 311, 312, 313, 314, 319, 321, 322, 324], "unittest": [114, 115, 133, 134, 135, 136, 137, 138, 169, 170, 171, 172, 173, 174, 192, 193, 194, 195, 253, 254, 255, 256, 257, 258, 259, 260, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 319, 320, 321, 322], "test": [114, 115, 116, 133, 134, 135, 136, 137, 138, 169, 170, 171, 172, 173, 174, 192, 193, 194, 195, 253, 254, 255, 256, 257, 258, 259, 260, 302, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 319, 320, 321, 322, 324, 325, 331], "init_test": [115, 116, 134, 135, 136, 137, 138, 170, 171, 172, 173, 174, 193, 194, 195, 254, 255, 256, 257, 258, 259, 260, 306, 307, 308, 309, 310, 311, 312, 313, 314, 320, 321, 322, 324], "methodnam": [115, 134, 136, 138, 170, 172, 174, 193, 195, 254, 256, 258, 260, 306, 308, 310, 312, 314, 320, 322], "runtest": [115, 134, 136, 138, 170, 172, 174, 193, 195, 254, 256, 258, 260, 306, 308, 310, 312, 314, 320, 322], "useful": [115, 134, 170, 193, 254, 306, 320], "assert": [115, 134, 170, 193, 254, 306, 320], "valueerror": [115, 134, 136, 138, 170, 172, 174, 193, 195, 254, 256, 258, 260, 306, 308, 310, 312, 314, 320, 322], "assertasyncequ": [115, 134, 170, 193, 254, 306, 320], "assertasyncrais": [115, 134, 170, 193, 254, 306, 320], "assertalmostequ": [115, 134, 170, 193, 254, 306, 320], "unequ": [115, 134, 170, 193, 254, 306, 320], "round": [115, 134, 170, 193, 254, 306, 320], "decim": [115, 134, 170, 193, 254, 306, 320], "place": [115, 134, 170, 193, 254, 262, 263, 283, 306, 320, 331], "than": [115, 134, 170, 193, 226, 242, 248, 254, 306, 320], "delta": [115, 134, 170, 193, 254, 306, 320], "signific": [115, 134, 170, 193, 254, 306, 320], "digit": [115, 134, 170, 193, 254, 306, 320], "measur": [115, 134, 170, 193, 254, 306, 320], "almost": [115, 134, 170, 193, 254, 306, 320], "runasync": [115, 134, 170, 193, 254, 306, 320], "corr": [115, 134, 170, 193, 254, 306, 320], "setup": [115, 134, 170, 193, 254, 306, 320], "regist": [115, 134, 170, 193, 254, 306, 320], "work": [116, 149, 327], "__package__": 116, "els": 116, "__name__": 116, "thorough": 117, "misc": [118, 119, 120, 121, 122, 324], "first_item": 118, "typeerror": 119, "traceback": 119, "recent": 119, "last": [119, 187, 266], "uniqu": [120, 140, 249], "fce": [121, 281], "mock": 121, "numba": [121, 122], "jit": 121, "avail": [121, 140, 292, 325, 331], "occur": [122, 290, 330], "instal": [122, 325, 327], "acceler": 122, "nooutput": [123, 324], "context": [123, 124], "manag": [123, 124, 327, 331], "no_output": [124, 324], "fd": 124, "customopt": [125, 202, 203, 267, 276, 324], "store": [125, 127, 128, 162, 213, 217, 221, 225, 229, 233, 237, 248, 249, 279, 292, 331], "me": 126, "my": [126, 211, 331], "value_definit": 126, "value_typ": 127, "encapsul": 127, "overcam": 127, "too": [127, 162, 266], "strict": [127, 140], "enfor": 127, "satisfi": 127, "stringifi": 127, "again": [127, 162, 330], "write_valu": 127, "im": [128, 143, 145, 147, 149, 331], "set_danger": 128, "1j": 128, "is_danger": 128, "whether": [128, 140, 165, 266, 292], "bypass": 128, "proper": [128, 162], "completli": 128, "sinc": [128, 266], "underlin": 128, "dummi": [128, 266, 330], "compatibil": 128, "_post_set": 128, "modif": [128, 331], "_check_array_access": 128, "_set_item": 128, "saniti": 128, "_getitem": 128, "_unpack_valu": 128, "potention": 128, "_pack_valu": 128, "translat": [128, 198], "call_hook": 128, "value_and_chang": 128, "is_it_the_default_valu": 128, "wildcard": 128, "get_path": 128, "asynciofileread": [129, 324], "baseprocessoutputread": [129, 165, 182, 183, 185, 186, 188, 189, 324], "reader": [129, 130, 182, 183, 184, 185, 186, 187, 189, 324, 330, 331], "process": [129, 131, 162, 165, 189, 226, 242, 247, 248, 265, 266, 315, 325, 331], "emploi": [129, 266, 330], "stdio": 129, "stderr": [129, 131], "concur": 129, "process_output_read": [130, 131, 162, 165, 182, 183, 185, 186, 188, 189, 324], "filenam": [130, 162, 187, 251, 265, 266, 300, 302, 303, 331], "buffers": 130, "8192": 130, "mimic": 130, "streamread": 130, "fact": [130, 203, 204], "synchron": 130, "close": 130, "readlin": 130, "separator_shift": 130, "sep": 130, "readuntil": 130, "asyn": 131, "read_error": [131, 189], "read_output": [131, 183, 186, 189, 330], "run_subprocess": 131, "wait": [131, 189], "postprocess": [131, 189, 330, 331], "intend": [131, 189], "cmd": 131, "outfil": 131, "print_output": [131, 162, 266], "return_cod": [131, 184, 187, 190], "commontest": [135, 321], "test_common": [136, 324], "test_asyncio_file_read": 136, "grammartest": 137, "test_grammar_typ": [138, 324], "test_is_the_same_valu": 138, "test_typ": 138, "_test_typ": 138, "solv": [139, 325], "unique_valu": [140, 324], "value_to_class_id": 140, "distinct": 140, "criterion": 140, "from_valu": 140, "id": [140, 264], "eq": 140, "revers": 140, "start_from": 140, "iter_uniqu": 140, "len_of_uniqu": 140, "unlik": [140, 272, 292], "tag": 140, "len": [140, 266, 331], "_create_map": 140, "uniquevalu": 140, "is_equivalent_to": 140, "regardless": [140, 162], "are_equival": 140, "is_equival": 140, "normal": [140, 283], "noth": [140, 279], "unique_values_map": 140, "inputparameterss": [142, 164, 240], "configurt": 142, "arp": [142, 144, 162, 324, 325, 331], "scf": [142, 147, 150, 162, 186, 187, 266, 324, 325, 330, 331], "angl": 143, "resolv": 143, "photoemiss": 143, "spectroscopi": [143, 264], "adsi": [143, 145, 147, 149, 152], "fixedvalu": [143, 145, 147, 149], "potfil": [143, 145, 147, 149], "isn": [143, 145, 147, 149], "necessari": [143, 145, 147, 149, 251, 292, 331], "krw": [143, 145, 147, 149], "affect": [143, 145, 147, 149], "amount": [143, 145, 147, 149], "nonmag": [143, 145, 147, 149], "consid": [143, 145, 147, 149, 292], "magnet": [143, 145, 147, 149, 247], "higher": [143, 145, 147, 149], "faster": [143, 145, 147, 149], "tau": [143, 145, 147, 149, 331], "bzint": [143, 145, 147, 149], "anyof": [143, 145, 147, 149], "point": [143, 145, 147, 149], "weyl": [143, 145, 147, 149], "sampl": [143, 145, 147, 149], "less": [143, 145, 147, 149], "ran": [143, 145, 147, 149], "dom": [143, 145, 147, 149], "k": [143, 145, 147, 149, 200], "vari": [143, 145, 147, 149], "quadrat": [143, 145, 147, 149], "tween": [143, 145, 147, 149], "imaginari": [143, 145, 147, 149], "nktab": [143, 145, 147, 149, 331], "good": [143, 145, 147, 149], "compromis": [143, 145, 147, 149], "concern": [143, 145, 147, 149], "accuraci": [143, 145, 147, 149], "effici": [143, 145, 147, 149], "adjust": [143, 145, 147, 149], "mesh": [143, 145, 147, 149, 213, 217, 221, 222, 225, 233, 248, 249, 280, 284, 285, 290, 292, 324], "250": [143, 145, 147, 149], "nkmin": [143, 145, 147, 149], "300": [143, 145, 147, 149, 198], "nkmax": [143, 145, 147, 149], "500": [143, 145, 147, 149], "cluster": [143, 145, 147, 149, 266, 331], "nshlclu": [143, 145, 147, 149], "shell": [143, 145, 147, 149, 162, 331], "around": [143, 145, 147, 149, 330], "central": [143, 145, 147, 149], "clurad": [143, 145, 147, 149], "multipl": [143, 145, 147, 149], "alat": [143, 145, 147, 149], "iqcntr": [143, 145, 147, 149], "center": [143, 145, 147, 149, 198], "basi": [143, 145, 147, 149], "itcntr": [143, 145, 147, 149], "atomictyp": [143, 145, 147, 149, 237, 262, 283, 290, 293, 324], "occupi": [143, 145, 147, 149], "nlout": [143, 145, 147, 149], "\u03c4": [143, 145, 147, 149], "matrix": [143, 145, 147, 149], "lmax": [143, 145, 147, 149], "mol": [143, 145, 147, 149], "molecular": [143, 145, 147, 149], "eminev": 143, "window": 143, "fermi": 143, "emaxev": 143, "eworkev": 143, "inner": 143, "bulk": [143, 200, 300, 327], "imv_ini_ev": 143, "initi": [143, 292], "imv_fin_ev": 143, "final": 143, "nl": [143, 145, 149], "angula": [143, 145, 149], "momentum": [143, 145, 149], "cutoff": [143, 145, 149], "discard": [143, 145, 149], "strver": 143, "iq_at_surf": 143, "miller_hkl": 143, "ntmp": 143, "tmpmin": 143, "11": [143, 198, 325], "ctmpmax": 143, "vibra": 143, "cnvibra": 143, "spec_ph": 143, "theta": 143, "45": [143, 198, 200], "phi": 143, "pol_p": 143, "polar": [143, 149], "light": [143, 149], "ephot": 143, "6675": 143, "photon": 143, "alq": 143, "align": 143, "vector": [143, 149], "pol": 143, "ellipsi": 143, "delq": 143, "phase": [143, 330], "shift": 143, "90": [143, 198], "circular": 143, "npol": 143, "unpolar": 143, "dichroism": 143, "rcp": 143, "ellipt": 143, "depend": [143, 162, 292], "icirc": 143, "lcp": 143, "ddad": 143, "ldad": 143, "arbitrari": [143, 149], "linear": 143, "idreh": 143, "linearli": 143, "right": 143, "ifsp": 143, "theta_fix": 143, "spec_el": 143, "scatter": 143, "nt": 143, "azimuth": 143, "pol_": 143, "pz": 143, "spol": 143, "pspin": 143, "typ": 143, "diagram": 143, "scan": 143, "orthonorm": 143, "project": 143, "stereograph": 143, "pe": 143, "xp": 143, "nx": 143, "ny": 143, "istr": 143, "beam": 143, "h": [143, 200], "pol0": 143, "pol0l": 143, "laboratori": 143, "q1": 143, "0j": 143, "amplitud": 143, "photoelectron": 143, "spin": [143, 147, 149], "q2": 143, "q3": 143, "q4": 143, "spec_str": 143, "n_laydbl": 143, "nlat_g_vec": 143, "57": [143, 198, 200], "n_layer": 143, "120": [143, 198], "surf_bar": 143, "25": [143, 198, 200], "transp_bar": 143, "input_parameters_definit": [144, 146, 148, 150, 153, 154, 155, 156, 157, 158, 160, 162, 165, 166, 167, 324], "inputparametersdefinit": [144, 146, 148, 150, 162, 164, 324], "emin": [145, 147, 149], "lowest": [145, 147, 149], "emax": 145, "32": [147, 149, 198, 200], "200": [147, 149, 198], "cycl": [147, 149, 331], "vxc": [147, 149], "vwn": [147, 149], "mjw": [147, 149], "vbh": [147, 149], "pbe": [147, 149], "vosko": [147, 149], "wilk": [147, 149], "nusair": [147, 149], "janak": [147, 149], "william": [147, 149], "moruzzigit": [147, 149], "von": [147, 149], "barth": [147, 149], "hedin": [147, 149], "perdew": [147, 149], "burk": [147, 149], "ernzendorf": [147, 149], "gga": [147, 149], "alg": [147, 149], "broyden2": [147, 149], "tchebi": [147, 149], "broyden": [147, 149], "tchebychev": [147, 149], "efguess": [147, 149], "tol": [147, 149], "istbri": [147, 149], "itdept": [147, 149], "40": [147, 149, 198], "depth": [147, 149], "histori": [147, 149], "qion": [147, 149], "ionic": [147, 149], "charg": [147, 149, 187, 266, 331], "qt": [147, 149], "mspin": [147, 149], "moment": [147, 149, 331], "\u03bc_": [147, 149], "usevmatt": [147, 149], "mattheissconstruct": [147, 149], "densiti": [147, 149, 187], "someth": [147, 249], "meaningful": 147, "phagen": [148, 162, 266, 324, 331], "consist": [149, 331], "strconst": 149, "eta": 149, "ewald": 149, "rmax": 149, "converg": [149, 187, 330, 331], "gmax": 149, "reciproc": 149, "cpa": 149, "20": [149, 198], "0001": 149, "stop": 149, "mode": [149, 162, 230, 266], "srel": 149, "scalar": 149, "relativist": 149, "mdir": [149, 325], "magnetis": 149, "cartesian": 149, "normalis": 149, "scale": [149, 213, 217, 225, 233, 248, 325], "soc": 149, "strength": 149, "orbit": 149, "coupl": 149, "inputsectiondefinit": [152, 153, 154, 155, 156, 157, 158, 159, 160, 164, 165, 324], "configurationfil": [161, 162, 250, 251, 267, 324], "configurationsectiontrait": [161, 162, 212, 213, 216, 217, 220, 221, 224, 225, 228, 229, 232, 233, 236, 237, 246, 247, 248, 249, 250, 251, 267, 268, 270, 275, 324], "suppli": [161, 266, 283, 331], "inputfil": 162, "outputfil": 162, "task_nam": 162, "_default_mpi_runn": 162, "default_mpi_runn": 162, "mpi": [162, 165, 266, 327], "runner": [162, 266, 331], "autodetect": [162, 266], "mpi_runn": 162, "mpirun": [162, 266, 331], "suitabl": 162, "found": [162, 266, 283], "command": [162, 189], "is_mpi": 162, "Will": 162, "run_process": 162, "input_fil": [162, 266, 331], "output_fil": [162, 266, 331], "executable_postfix": [162, 266], "paamet": 162, "binari": 162, "infrom": 162, "postfixi": 162, "processoutputread": 162, "result_read": [162, 165], "attach": 162, "ruther": 162, "read_output_from_fil": 162, "executable_param": 162, "stdin": 162, "popen": 162, "set_opt": 162, "is_it_a_input_parameters_nam": 162, "create_input_paramet": 162, "default_paramet": 162, "from_fil": [162, 251, 331], "fullfil": 162, "sprkkr_executable_suffix": [163, 266, 331], "configurationfiledefinit": [164, 165, 240, 244, 267, 324], "configurationsectiondefinit": [164, 166, 212, 214, 216, 218, 220, 222, 224, 226, 228, 230, 232, 234, 236, 238, 240, 241, 242, 267, 324], "inputvaluedefinit": [164, 166, 324], "configurationvaluedefinit": [164, 167, 202, 204, 240, 243, 245, 267, 324], "simlilar": [164, 240], "share": [164, 240, 290, 292, 330, 331], "kkrscf": [165, 190], "child_class": [165, 166, 178, 242, 244], "custom_class": [165, 166, 178, 242, 244], "grammar_of_delimit": [165, 166, 167, 178, 179, 180, 206, 242, 243, 244], "printabl": 165, "custom_value_grammar": [165, 244], "ouptut": [166, 178, 242, 266], "wordstart": [166, 178, 179], "_copy_arg": [166, 167], "type_of_danger": [167, 243], "testdefinit": 171, "test_definit": [172, 324], "testinputparamet": 173, "test_input_paramet": [174, 324], "test_section_delimiter_valu": 174, "test_custom_valu": 174, "test_dangerous_valu": 174, "test_input_parameters_definit": 174, "outputnonamevaluedefinit": [176, 324], "outputvaluedefinit": [176, 177, 178, 180, 324], "outputsectiondefinit": [176, 186, 324], "outputvalueequaldefinit": [176, 324], "although": 176, "approach": 176, "output_definit": [177, 178, 179, 180, 186, 324], "defaultoutputread": 182, "task_result": [182, 183, 184, 185, 186, 187, 189, 190, 324], "outputread": [182, 183, 185, 186, 188, 324, 330], "defaultresult": [182, 183], "taskresult": [182, 184, 185, 187, 188, 324], "scfoutputread": [185, 330], "scfresult": [185, 186, 331], "atoms_conf_typ": 186, "potential_filenam": [187, 266, 331], "further": [187, 189, 266, 280, 327, 331], "hopefulli": 187, "wavefunct": [187, 331], "total": 187, "coverg": 187, "iteration_valu": 187, "etot": 187, "last_iter": [187, 331], "plot": 187, "logscal": 187, "err": 187, "render": 187, "screen": 187, "matplotlib": 187, "inputparametersresult": 189, "produc": 189, "belong": [189, 290], "wich": 189, "testoutput": 194, "test_output": [195, 324], "lattic": [196, 197, 198, 217, 218, 219], "geometri": [196, 217, 292], "latticedata": [197, 324], "lattice_data": [198, 324], "ap": 198, "c_i": 198, "cf": [198, 200], "o_h": 198, "ci": 198, "cp": 198, "hp": 198, "d_6h": 198, "hr": 198, "d_3d": 198, "mp": 198, "c_2h": 198, "oF": 198, "d_2h": 198, "oi": 198, "op": 198, "o": [198, 200, 274], "ti": [198, 200], "d_4h": 198, "tp": 198, "cell_symmetri": 198, "triclin": 198, "13": [198, 200, 331], "cubic": 198, "face": 198, "m3m": 198, "bodi": 198, "12": [198, 242], "hexagon": 198, "6": [198, 200, 266, 327, 331], "mmm": 198, "trigon": 198, "3m": 198, "monoclin": 198, "orthoromb": 198, "tetragon": 198, "8": [198, 200, 264, 331], "pearson": 198, "symbol": [198, 200, 263, 283, 290, 292, 331], "international_numbers_to_ap": 198, "15": 198, "27": [198, 200], "39": [198, 200], "41": 198, "43": 198, "50": 198, "55": [198, 200], "61": [198, 200], "73": [198, 200], "74": 198, "77": [198, 200], "19": 198, "80": [198, 200], "81": [198, 200], "84": [198, 200], "22": [198, 200], "87": 198, "23": [198, 200], "88": [198, 200], "89": [198, 200], "26": 198, "93": [198, 200], "99": [198, 200], "102": 198, "29": 198, "108": 198, "30": 198, "114": 198, "31": [198, 200], "126": 198, "33": 198, "129": 198, "34": 198, "135": 198, "35": 198, "138": 198, "36": 198, "145": 198, "37": [198, 200], "147": 198, "38": 198, "150": 198, "156": 198, "162": 198, "168": 198, "42": 198, "174": 198, "177": 198, "44": [198, 200], "180": 198, "183": 198, "46": [198, 200], "186": 198, "47": 198, "192": 198, "193": 198, "49": 198, "195": 198, "198": 198, "51": 198, "204": 198, "52": [198, 200], "210": 198, "53": 198, "216": 198, "54": 198, "222": 198, "228": 198, "56": [198, 200], "231": 198, "234": 198, "58": 198, "240": 198, "59": 198, "247": 198, "60": 198, "249": 198, "255": 198, "62": [198, 200], "257": 198, "63": [198, 200], "263": 198, "64": [198, 200, 331], "269": 198, "65": [198, 200], "275": 198, "66": [198, 200], "278": 198, "67": [198, 200], "281": 198, "68": 198, "287": 198, "69": 198, "299": 198, "70": 198, "71": [198, 200], "302": 198, "72": 198, "303": 198, "306": 198, "308": 198, "75": [198, 200], "314": 198, "76": [198, 200], "315": 198, "316": 198, "78": [198, 200], "317": 198, "79": [198, 200], "318": 198, "319": 198, "320": 198, "82": [198, 200], "321": 198, "83": [198, 200], "322": 198, "323": 198, "85": [198, 200], "324": 198, "86": [198, 200], "326": 198, "328": 198, "329": 198, "331": 198, "332": 198, "91": [198, 200], "333": 198, "92": 198, "334": 198, "335": 198, "94": [198, 200], "336": 198, "95": [198, 200], "337": 198, "96": [198, 200], "338": 198, "97": 198, "339": 198, "98": [198, 200], "340": 198, "341": 198, "342": 198, "101": 198, "343": 198, "344": 198, "103": 198, "345": 198, "104": 198, "346": 198, "105": 198, "347": 198, "106": 198, "348": 198, "107": 198, "349": 198, "350": 198, "109": 198, "351": 198, "110": 198, "352": 198, "111": 198, "353": 198, "112": 198, "354": 198, "113": 198, "355": 198, "356": 198, "115": 198, "357": 198, "116": 198, "358": 198, "117": 198, "359": 198, "118": 198, "360": 198, "119": 198, "361": 198, "362": 198, "121": 198, "363": 198, "122": 198, "364": 198, "123": 198, "365": 198, "124": 198, "366": 198, "125": 198, "368": 198, "370": 198, "127": 198, "371": 198, "128": 198, "372": 198, "374": 198, "130": 198, "376": 198, "131": 198, "377": 198, "132": 198, "378": 198, "133": 198, "380": 198, "134": 198, "382": 198, "383": 198, "136": 198, "384": 198, "137": 198, "386": 198, "388": 198, "139": 198, "389": 198, "140": 198, "390": 198, "141": 198, "392": 198, "142": 198, "394": 198, "143": 198, "396": 198, "144": 198, "398": 198, "400": 198, "146": 198, "401": 198, "404": 198, "148": 198, "405": 198, "149": 198, "407": 198, "408": 198, "151": 198, "409": 198, "152": 198, "410": 198, "153": 198, "411": 198, "154": 198, "412": 198, "155": 198, "414": 198, "415": 198, "157": 198, "416": 198, "158": 198, "417": 198, "159": 198, "418": 198, "160": 198, "419": 198, "161": 198, "422": 198, "423": 198, "163": 198, "424": 198, "164": 198, "425": 198, "165": 198, "426": 198, "166": 198, "428": 198, "167": 198, "430": 198, "431": 198, "169": 198, "432": 198, "170": 198, "433": 198, "171": 198, "434": 198, "172": 198, "435": 198, "173": 198, "436": 198, "437": 198, "175": 198, "438": 198, "176": 198, "439": 198, "440": 198, "178": 198, "441": 198, "179": 198, "442": 198, "443": 198, "181": 198, "444": 198, "182": 198, "445": 198, "446": 198, "184": 198, "447": 198, "185": 198, "448": 198, "449": 198, "187": 198, "450": 198, "188": 198, "451": 198, "189": 198, "452": 198, "190": 198, "453": 198, "191": 198, "454": 198, "455": 198, "456": 198, "194": 198, "457": 198, "458": 198, "196": 198, "459": 198, "197": 198, "460": 198, "461": 198, "199": 198, "462": 198, "463": 198, "201": 198, "465": 198, "202": 198, "466": 198, "203": 198, "468": 198, "469": 198, "205": 198, "470": 198, "206": 198, "471": 198, "207": 198, "472": 198, "208": 198, "473": 198, "209": 198, "474": 198, "475": 198, "211": 198, "476": 198, "212": 198, "477": 198, "213": 198, "478": 198, "214": 198, "479": 198, "215": 198, "480": 198, "481": 198, "217": 198, "482": 198, "218": 198, "483": 198, "219": 198, "484": 198, "220": 198, "485": 198, "221": 198, "486": 198, "488": 198, "223": 198, "489": 198, "224": 198, "491": 198, "225": 198, "492": 198, "226": 198, "493": 198, "227": 198, "494": 198, "229": 198, "498": 198, "230": 198, "499": 198, "perlov": 198, "bravais_number_from_pearson_symbol": 198, "pearson_symbol": 198, "ac": 200, "ag": 200, "al": 200, "am": 200, "At": 200, "au": 200, "ba": 200, "Be": 200, "bi": 200, "bk": 200, "br": [200, 331], "ca": 200, "ce": 200, "co": 200, "cr": 200, "cu": 200, "dy": 200, "er": 200, "eu": 200, "fe": [200, 263], "fm": 200, "fr": 200, "ga": 200, "gd": 200, "ge": 200, "he": 200, "hf": 200, "hg": 200, "ho": 200, "ir": 200, "kr": 200, "la": 200, "li": [200, 331], "04": 200, "lu": 200, "mg": 200, "mn": 200, "mo": 200, "na": 200, "nb": 200, "03": 200, "nd": 200, "ni": 200, "02": 200, "pb": 200, "14351193885013": 200, "pd": 200, "pm": 200, "po": 200, "pr": 200, "pt": 200, "pu": 200, "ra": 200, "rb": 200, "rh": 200, "rn": 200, "ru": 200, "sb": 200, "sc": 200, "se": 200, "si": 200, "sm": 200, "sn": 200, "sr": 200, "ta": 200, "tb": 200, "tc": 200, "th": [200, 283], "tl": 200, "tm": 200, "u": [200, 331], "vc": 200, "xe": 200, "yb": 200, "zn": 200, "zr": 200, "en": [200, 264, 330], "wikipedia": 200, "org": 200, "wiki": [200, 266], "wigner": 200, "e2": 200, "93seitz_radiu": 200, "volum": 200, "per": [200, 266], "materi": [200, 327], "custompotentialsect": [202, 244, 324], "customconfigurationvalu": [202, 203, 267, 324], "custompotentialsectiondefinit": [202, 324], "customsectiontoken": [202, 324], "sectionstr": [202, 324], "custom_potential_sect": [203, 204, 205, 206, 324], "_depends_on": [203, 247, 248], "_set_from_atom": [203, 213, 217, 225, 229, 233, 247, 248, 249, 272, 273, 276], "io_data": [203, 229, 249, 251, 272, 273, 276, 278, 279, 280, 281, 294, 295, 324], "_update_atom": [203, 217, 225, 233, 247, 248, 249, 283], "mandatori": [204, 214, 218, 222, 226, 230, 234, 238, 241, 242, 247], "obvious": 204, "let": [205, 330], "dotal": 205, "parseimpl": 205, "instr": 205, "loc": 205, "doaction": 205, "delimiter_pattern": 206, "potential_fil": [208, 266, 331], "potentialdefinit": [209, 240, 251, 324], "globalsystemparamet": [212, 214], "potential_sect": [212, 213, 216, 217, 220, 221, 224, 225, 228, 229, 232, 233, 236, 237, 247, 248, 249, 324], "potentialsect": [212, 213, 216, 217, 220, 221, 224, 225, 228, 229, 232, 233, 236, 237, 242, 246, 247, 249, 324], "configurationsect": [212, 213, 216, 217, 220, 221, 224, 225, 228, 229, 232, 233, 236, 237, 246, 247, 248, 249, 267, 271, 324], "globalsystemparameterdefinit": [212, 215], "potential_definit": [212, 214, 216, 218, 220, 222, 224, 226, 228, 230, 232, 234, 236, 238, 241, 242, 243, 244, 245, 251, 324, 330], "potsectiondefinit": [212, 214, 216, 218, 220, 222, 224, 226, 228, 230, 232, 234, 236, 238, 240, 241, 244, 324], "global_system_paramet": [213, 214, 215, 331], "write_io_data": [213, 217, 221, 225, 229, 233, 237, 248, 249], "writeiodata": [213, 217, 225, 233, 248, 249, 251, 272, 273, 276, 277, 324], "reus": [213, 217, 225, 233, 248], "constant": [213, 217, 225, 233, 248, 330], "latticesect": [216, 218], "latticesectiondefinit": [216, 219], "read_io_data": [217, 225, 233, 248, 249], "readiodata": [217, 225, 233, 248, 249, 277, 324], "mechan": [217, 225, 233, 248], "independ": [217, 225, 233, 248], "testabl": [217, 225, 233, 248], "obejct": [217, 225, 233, 248], "adapt": [217, 225, 233, 248], "meshinformationsect": [220, 222], "uniquelistsect": [220, 221, 228, 229, 236, 237, 246, 324], "meshinformationsectiondefinit": [220, 223], "mesh_inform": [221, 222, 223], "_value_nam": [221, 229, 237, 249], "_value_class": [221, 229, 237, 249], "exponentialmesh": [221, 284, 290, 324], "occupationsect": [224, 226], "occupationsectiondefinit": [224, 227], "depends_on": [226, 241, 242], "prerequisit": [226, 242, 248], "referencesystemsect": [228, 230], "referencesystemsectiondefinit": [228, 231], "reference_system": [229, 230, 231, 280, 288, 290, 324], "referencesystem": [229, 287, 290, 324], "refer": [230, 249, 280, 290], "FOR": 230, "tight": 230, "sitessect": [232, 234], "sitessectiondefinit": [232, 235], "typessect": [236, 238], "typessectiondefinit": [236, 239], "asearraysectiondefinit": [240, 324], "potvaluedefinit": [240, 242, 245, 324], "array_nam": [241, 247], "setarrai": 241, "predecessor": 241, "asearraysect": [241, 246, 324], "star": 245, "_counter": 245, "divid": [246, 283, 330], "_": 247, "accordingli": [247, 249, 330, 331], "self_value_class": 249, "from_tupl": 249, "being": 251, "make_complet": 251, "update_atom": [251, 283, 290], "time": [251, 266, 272, 331], "creation": [251, 272], "frozen": [251, 272], "testcustomsect": 255, "test_custom_sect": [256, 324], "assertnon": 256, "testpotenti": 257, "test_potenti": [258, 324], "test_grammar": 258, "test_exampl": 258, "test_sequ": 258, "test_reset": 258, "teststructur": 259, "test_structur": [260, 324], "test_lattic": 260, "atomic_typ": [263, 283, 290, 324], "n_core": 263, "n_valenc": 263, "n_semicor": 263, "n_electron": 263, "pseudoel": 263, "valenc": [263, 292], "attempt": 263, "third": [263, 330], "parti": 263, "done": [263, 330, 331], "semicor": [263, 292], "_mendeleev_modul": 263, "_check_n_electron": 263, "_clear_symbol_cach": 263, "to_tupl": [263, 283, 285, 288], "to_atomic_typ": 263, "is_vacuum": [263, 290], "filenametempl": [264, 266], "getpropertiesmixin": [264, 266], "understood": 264, "msspec": 264, "link": 264, "olymp": 264, "cup": 264, "uni": 264, "muenchen": 264, "de": 264, "php": 264, "com_cont": 264, "view": [264, 324, 331], "articl": 264, "3asprkkr": 264, "catid": 264, "3asoftwar": 264, "itemid": 264, "lang": 264, "placehold": [265, 266, 331], "rememb": 265, "counter": [265, 266, 331], "_get": 265, "lambda": 265, "restart": 266, "auto": 266, "easier": 266, "dto": 266, "perform": [266, 330], "mostli": [266, 330], "templat": [266, 331], "temporari": 266, "suffix": [266, 331], "save_input": [266, 331], "slash": [266, 331], "hostnam": [266, 331], "implemented_properti": 266, "skrkkr_executable_postfix": 266, "environment": [266, 331], "pathnam": 266, "meth": [266, 331], "tak": 266, "inputpamat": 266, "bewar": 266, "option_nam": 266, "ambigu": 266, "associ": [266, 283, 331], "explicitli": 266, "_advance_count": 266, "advanc": [266, 331], "_open_fil": 266, "allow_temporari": 266, "create_subdir": 266, "unchang": 266, "filema": 266, "return_fil": 266, "combin": 266, "stress": 266, "dipol": 266, "magmom": 266, "calcualtor": 266, "don": 266, "input_filenam": 266, "output_filenam": 266, "executable_postifx": 266, "contructor": 266, "system_chang": 266, "pbc": 266, "initial_charg": 266, "initial_magmom": 266, "alwai": [266, 292], "fysik": 266, "dtu": 266, "dk": 266, "six": 266, "insert": 266, "like": [266, 283, 325], "shown": 266, "kkrgen": 266, "kkrspec": 266, "kkrch": 266, "run_xband": 266, "xband": [266, 301, 302], "copy_with_potenti": 266, "potential_object": 266, "configurationvalu": [267, 274, 324], "customconfigurationsect": [267, 324], "node": [269, 330], "non_underscor": 272, "baseiodata": [277, 279, 280, 324], "iodata": 277, "serv": 277, "intermedi": 277, "storag": 277, "futur": 278, "yet": [279, 331], "while": [280, 292, 330, 331], "demand": 280, "dct": 283, "alloi": 283, "underli": 283, "enumer": 283, "_find_kei": 283, "correspond": [283, 290, 330], "identif": 283, "orderd": 283, "replace_typ": 283, "primary_atomic_typ": 283, "largest": 283, "primary_atomic_numb": 283, "main": [283, 331], "primary_symbol": [283, 290], "_normal": 283, "except_from": 283, "sum": 283, "multipli": [283, 285], "remaind": 283, "among": [283, 292], "total_occup": 283, "to_occup": 283, "radial": [284, 285, 286], "radial_mesh": [285, 286, 324], "r1": 285, "dx": 285, "jrmt": 285, "rmt": 285, "jrw": 285, "rw": 285, "r_n": 285, "r_": 285, "vref": 288, "rmtref": 288, "spatial": [290, 292], "fraction": 290, "captur": 290, "partial": 290, "occpanc": 290, "atomictypeslookup": 290, "enhanc": 291, "sites_array_nam": 292, "sprkkr_sites_data": 292, "promote_ase_atom": [292, 330, 331], "usabl": 292, "bit": [292, 301], "ugli": 292, "hack": 292, "__class__": 292, "extra": 292, "promot": [292, 331], "_init": 292, "compute_sites_symmetri": [292, 331], "symmetry_precis": 292, "_site": 292, "ident": 292, "firstli": 292, "nearli": 292, "won": 292, "newli": [292, 331], "get_spacegroup": 292, "_init_sit": 292, "metod": 292, "cancel_sites_symmetri": 292, "cancel": 292, "uniq": 292, "fulli": [292, 302], "made": [292, 331], "reflect": [292, 331], "set_sit": 292, "spacegroup_info": 292, "setter": [292, 331], "spacegoup_info": 292, "reset_sprkkr_potenti": 292, "sprkkr_grammar_typ": [294, 295, 324], "atomdata": [296, 324], "layerdata": [296, 324], "a2s_visualise_in_struct": [296, 317, 324, 325, 331], "structure_file_to_atom": [296, 324], "surfac": [296, 300, 331], "in_structur": [296, 297, 300, 331], "inp": [296, 297, 299, 300, 316, 331], "implementaion": 296, "from_text": 297, "get_symbol": 297, "n_bulk": 300, "vacuum_height": 300, "repetit": 300, "height": 300, "abov": [300, 330, 331], "thy": 301, "legaci": 301, "caution": 301, "sysfil": [302, 303, 324], "thoroughli": 302, "nor": [302, 331], "guarant": 302, "calculatortest": 307, "test_calcul": [308, 324], "test_run": 308, "sitestest": 309, "test_sit": [310, 324], "test_vacuum": 310, "test_occup": [310, 312], "sprkkratomstest": 311, "test_sprkkr_atom": [312, 324], "test_extend": 312, "test_atom": 312, "test_symmetri": 312, "sysfiletest": 313, "test_sysfil": [314, 324], "script": [315, 325, 330, 331], "sctipt": 316, "in_struct": 316, "test_tool": [322, 324], "add_empty_spher": 324, "possibly_equivalent_sit": 324, "normalize_type_map": 324, "add_excluded_names_condit": 324, "unique_dict": 324, "cached_properti": 324, "add_called_class_as_argu": 324, "add_to_signatur": 324, "process_input_parameters_definit": 324, "verbatim": 324, "fortran_format": 324, "optional_line_end": 324, "line_end": 324, "end_of_fil": 324, "separator_pattern": 324, "optional_quot": 324, "addconditionex": 324, "addparseactionex": 324, "delimitedlist": 324, "generate_grammar": 324, "replace_whitechar": 324, "line_str": 324, "complex_numb": 324, "set_of_integ": 324, "set_of_r": 324, "pot_mix": 324, "recognized_set_typ": 324, "type_from_set_map": 324, "defkeyword": 324, "compare_numpy_valu": 324, "type_from_default_valu": 324, "type_from_typ": 324, "type_from_valu": 324, "patch_packag": 324, "as_integ": 324, "copy_list": 324, "njit": 324, "numpy_index": 324, "resolve_executable_postfix": 324, "unique_map": 324, "floatjm": 324, "sysfile_cont": 324, "write_sysfil": 324, "move": 325, "switch": 325, "pytest": 325, "fixi": 325, "now": 325, "refactor": 325, "abus": 325, "basesometh": 325, "descirpt": 325, "were": [325, 331], "introduc": 325, "mdir1": 325, "mdir2": 325, "support": [325, 330, 331], "bundl": 327, "contribut": 327, "report": 327, "git": [327, 331], "pip": [327, 331], "conda": [327, 331], "One": 327, "step": [327, 330], "bug": 327, "philosophi": 327, "program": 327, "changelog": 327, "beta1": 327, "architectur": 327, "page": 327, "leav": 330, "basevaluedefinit": 330, "Their": 330, "basecontainerdefinit": 330, "relationship": 330, "subpackag": 330, "miscellan": 330, "mod": 330, "prescrib": 330, "possibli": 330, "simpli": 330, "rest": 330, "oop": 330, "ancestor": 330, "sprkrr": 330, "readthedoc": 330, "latest": 330, "input_prameters_definit": 330, "basetyp": 330, "exact": 330, "invok": 330, "sh": 331, "encourag": 331, "somewher": 331, "bash": 331, "kkrscf8": 331, "rc": 331, "topic": 331, "aim": 331, "primarili": 331, "limit": 331, "assum": 331, "experienc": 331, "analyz": 331, "bellow": 331, "sever": 331, "sprkkr_command_suffix": 331, "licl": 331, "rocksalt": 331, "indistinguish": 331, "lower": 331, "queri": 331, "interoper": 331, "receiv": 331, "choos": 331, "we": 331, "avoid": 331, "conflict": 331, "through": 331, "acess": 331, "interact": 331, "input_paramt": 331, "uppercas": 331, "least": 331, "my_custom_sect": 331, "my_custom_valu": 331, "necess": 331, "usecas": 331, "subseuent": 331, "an_input_fil": 331, "a_potential_fil": 331, "cours": 331, "my_potential_fil": 331, "irel": 331, "accep": 331, "temp": 331, "interperet": 331, "cf4": 331, "duplic": 331, "therefor": 331, "logic": 331, "behind": 331, "scene": 331, "latter": 331, "indic": 331, "thereaft": 331, "batch": 331, "detect": 331, "mpirunn": 331, "openmpi": 331, "mpich": 331, "subdirectori": 331, "visualise_in_struct": 331, "py": 331, "must": 331, "our": 331, "featur": 331, "highli": 331, "appreci": 331}, "objects": {"": [[1, 0, 0, "-", "ase2sprkkr"]], "ase2sprkkr": [[2, 0, 0, "-", "ase"], [5, 0, 0, "-", "bindings"], [13, 0, 0, "-", "common"], [141, 0, 0, "-", "input_parameters"], [175, 0, 0, "-", "outputs"], [196, 0, 0, "-", "physics"], [201, 0, 0, "-", "potentials"], [261, 0, 0, "-", "sprkkr"], [315, 0, 0, "-", "tools"], [323, 0, 0, "-", "version"]], "ase2sprkkr.ase": [[3, 0, 0, "-", "visualise"]], "ase2sprkkr.ase.visualise": [[4, 1, 1, "", "view"]], "ase2sprkkr.bindings": [[6, 0, 0, "-", "es_finder"], [10, 0, 0, "-", "spglib"]], "ase2sprkkr.bindings.es_finder": [[7, 2, 1, "", "EmptySpheresResult"], [8, 1, 1, "", "add_empty_spheres"], [9, 1, 1, "", "empty_spheres"]], "ase2sprkkr.bindings.es_finder.EmptySpheresResult": [[7, 3, 1, "", "__init__"], [7, 3, 1, "", "_asdict"], [7, 4, 1, "", "_field_defaults"], [7, 4, 1, "", "_fields"], [7, 3, 1, "", "_make"], [7, 3, 1, "", "_replace"], [7, 4, 1, "", "positions"], [7, 4, 1, "", "radii"]], "ase2sprkkr.bindings.spglib": [[11, 2, 1, "", "SpacegroupInfo"], [12, 1, 1, "", "possibly_equivalent_sites"]], "ase2sprkkr.bindings.spglib.SpacegroupInfo": [[11, 3, 1, "", "__init__"], [11, 3, 1, "", "compute_spacegroup_info"], [11, 5, 1, "", "dataset"], [11, 5, 1, "", "equivalent_sites"], [11, 3, 1, "", "from_atoms"], [11, 3, 1, "", "number"], [11, 3, 1, "", "recompute"]], "ase2sprkkr.common": [[14, 0, 0, "-", "alternative_types"], [19, 0, 0, "-", "configuration"], [21, 0, 0, "-", "configuration_containers"], [27, 0, 0, "-", "configuration_definitions"], [35, 0, 0, "-", "decorators"], [42, 0, 0, "-", "doc"], [45, 0, 0, "-", "formats"], [47, 0, 0, "-", "grammar"], [60, 0, 0, "-", "grammar_types"], [114, 0, 0, "-", "init_tests"], [117, 0, 0, "-", "misc"], [123, 0, 0, "-", "no_output"], [125, 0, 0, "-", "options"], [129, 0, 0, "-", "process_output_reader"], [132, 0, 0, "-", "test"], [139, 0, 0, "-", "unique_values"]], "ase2sprkkr.common.alternative_types": [[15, 6, 1, "", "allowed_types"], [16, 1, 1, "", "normalize_type"], [17, 6, 1, "", "normalize_type_map"], [18, 6, 1, "", "types_alternatives"]], "ase2sprkkr.common.configuration": [[20, 2, 1, "", "Configuration"]], "ase2sprkkr.common.configuration.Configuration": [[20, 3, 1, "", "__init__"], [20, 4, 1, "", "_container"], [20, 4, 1, "", "_definition"], [20, 3, 1, "", "_get_path"], [20, 3, 1, "", "_get_root_container"], [20, 3, 1, "", "as_dict"], [20, 5, 1, "", "doc"], [20, 3, 1, "", "help"], [20, 5, 1, "", "info"], [20, 5, 1, "", "name"], [20, 3, 1, "", "save_to_file"], [20, 3, 1, "", "show"], [20, 3, 1, "", "to_dict"]], "ase2sprkkr.common.configuration_containers": [[22, 2, 1, "", "BaseSection"], [23, 2, 1, "", "ConfigurationContainer"], [24, 2, 1, "", "CustomSection"], [25, 2, 1, "", "RootConfigurationContainer"], [26, 2, 1, "", "Section"]], "ase2sprkkr.common.configuration_containers.BaseSection": [[22, 3, 1, "", "__init__"], [22, 3, 1, "", "_save_to_file"], [22, 3, 1, "", "has_any_value"], [22, 3, 1, "", "validate"]], "ase2sprkkr.common.configuration_containers.ConfigurationContainer": [[23, 3, 1, "", "__init__"], [23, 3, 1, "", "_add"], [23, 3, 1, "", "_find_value"], [23, 3, 1, "", "_get_member"], [23, 3, 1, "", "_interactive_member_name"], [23, 4, 1, "", "_interactive_members"], [23, 4, 1, "", "_members"], [23, 3, 1, "", "_save_to_file"], [23, 3, 1, "", "add"], [23, 3, 1, "", "as_dict"], [23, 3, 1, "", "clear"], [23, 3, 1, "", "get"], [23, 3, 1, "", "is_changed"], [23, 3, 1, "", "members"], [23, 3, 1, "", "remove_member"], [23, 3, 1, "", "set"], [23, 3, 1, "", "to_string"], [23, 3, 1, "", "validate"]], "ase2sprkkr.common.configuration_containers.CustomSection": [[24, 3, 1, "", "__init__"], [24, 3, 1, "", "factory"], [24, 3, 1, "", "remove"]], "ase2sprkkr.common.configuration_containers.RootConfigurationContainer": [[25, 3, 1, "", "__init__"], [25, 3, 1, "", "_save_to_file"], [25, 3, 1, "", "find"], [25, 3, 1, "", "read_from_file"]], "ase2sprkkr.common.configuration_containers.Section": [[26, 3, 1, "", "__init__"], [26, 5, 1, "", "definition"]], "ase2sprkkr.common.configuration_definitions": [[28, 2, 1, "", "BaseDefinition"], [29, 2, 1, "", "ConfigurationRootDefinition"], [30, 2, 1, "", "ContainerDefinition"], [31, 2, 1, "", "SectionDefinition"], [32, 2, 1, "", "ValueDefinition"], [33, 1, 1, "", "add_excluded_names_condition"], [34, 1, 1, "", "unique_dict"]], "ase2sprkkr.common.configuration_definitions.BaseDefinition": [[28, 3, 1, "", "__init__"], [28, 4, 1, "", "_copy_excluded_args"], [28, 4, 1, "", "_description"], [28, 4, 1, "", "_description_indentation"], [28, 3, 1, "", "_get_copy_args"], [28, 4, 1, "", "_info"], [28, 3, 1, "", "_tuple_with_my_name"], [28, 4, 1, "", "alternative_names"], [28, 3, 1, "", "can_be_repeated"], [28, 3, 1, "", "create_object"], [28, 3, 1, "", "description"], [28, 4, 1, "", "do_not_skip_whitespaces_before_name"], [28, 3, 1, "", "grammar"], [28, 3, 1, "", "info"], [28, 4, 1, "", "is_hidden"], [28, 4, 1, "", "name"], [28, 4, 1, "", "name_in_grammar"], [28, 4, 1, "", "result_class"]], "ase2sprkkr.common.configuration_definitions.ConfigurationRootDefinition": [[29, 3, 1, "", "__init__"], [29, 3, 1, "", "_grammar"], [29, 3, 1, "", "_tuple_with_my_name"], [29, 4, 1, "", "custom_value_name"], [29, 3, 1, "", "from_dict"], [29, 4, 1, "", "name_in_grammar"], [29, 3, 1, "", "parse_return"], [29, 5, 1, "", "sections"]], "ase2sprkkr.common.configuration_definitions.ContainerDefinition": [[30, 3, 1, "", "__init__"], [30, 3, 1, "", "_dict_from_named_values"], [30, 3, 1, "", "_first_section_is_fixed"], [30, 3, 1, "", "_grammar"], [30, 3, 1, "", "_values_grammar"], [30, 3, 1, "", "additional_data_description"], [30, 3, 1, "", "all_member_names"], [30, 4, 1, "", "configuration_type_name"], [30, 3, 1, "", "copy"], [30, 3, 1, "", "create_object"], [30, 3, 1, "", "custom_member_grammar"], [30, 4, 1, "", "custom_name_characters"], [30, 3, 1, "", "data_description"], [30, 3, 1, "", "delimited_custom_value_grammar"], [30, 4, 1, "", "force_order"], [30, 3, 1, "", "members"], [30, 3, 1, "", "names"], [30, 3, 1, "", "parse"], [30, 3, 1, "", "parse_file"], [30, 3, 1, "", "parse_from_stream"], [30, 3, 1, "", "parse_return"], [30, 3, 1, "", "read_from_file"], [30, 3, 1, "", "remove"], [30, 4, 1, "", "validate"], [30, 4, 1, "", "value_name_format"]], "ase2sprkkr.common.configuration_definitions.SectionDefinition": [[31, 3, 1, "", "__init__"], [31, 3, 1, "", "_generic_info"], [31, 4, 1, "", "custom_value_name"], [31, 3, 1, "", "delimited_custom_value_grammar"], [31, 4, 1, "", "result_class"], [31, 5, 1, "", "values"]], "ase2sprkkr.common.configuration_definitions.ValueDefinition": [[32, 3, 1, "", "__init__"], [32, 3, 1, "", "_generic_info"], [32, 3, 1, "", "_grammar"], [32, 3, 1, "", "additional_data_description"], [32, 3, 1, "", "can_be_repeated"], [32, 3, 1, "", "convert_and_validate"], [32, 3, 1, "", "copy"], [32, 3, 1, "", "data_description"], [32, 5, 1, "", "formated_name"], [32, 3, 1, "", "get_value"], [32, 4, 1, "", "name_in_grammar"], [32, 3, 1, "", "remove"], [32, 4, 1, "", "result_class"], [32, 4, 1, "", "type_from_type_map"], [32, 3, 1, "", "validate"], [32, 5, 1, "", "value_name_format"], [32, 3, 1, "", "write"]], "ase2sprkkr.common.decorators": [[36, 1, 1, "", "add_called_class_as_argument"], [37, 1, 1, "", "add_to_signature"], [38, 1, 1, "", "cache"], [39, 2, 1, "", "cached_class_property"], [40, 2, 1, "", "cached_property"], [41, 2, 1, "", "class_property"]], "ase2sprkkr.common.decorators.cached_class_property": [[39, 3, 1, "", "__init__"]], "ase2sprkkr.common.decorators.class_property": [[41, 3, 1, "", "__init__"]], "ase2sprkkr.common.doc": [[43, 1, 1, "", "process_input_parameters_definition"], [44, 1, 1, "", "verbatim"]], "ase2sprkkr.common.formats": [[46, 1, 1, "", "fortran_format"]], "ase2sprkkr.common.grammar": [[48, 2, 1, "", "White"], [49, 1, 1, "", "addConditionEx"], [50, 1, 1, "", "addParseActionEx"], [51, 1, 1, "", "delimitedList"], [52, 6, 1, "", "end_of_file"], [53, 1, 1, "", "generate_grammar"], [54, 6, 1, "", "line_end"], [55, 6, 1, "", "optional_line_end"], [56, 6, 1, "", "optional_quote"], [57, 1, 1, "", "replace_whitechars"], [58, 6, 1, "", "separator"], [59, 6, 1, "", "separator_pattern"]], "ase2sprkkr.common.grammar.White": [[48, 3, 1, "", "__init__"], [48, 4, 1, "", "_abc_impl"]], "ase2sprkkr.common.grammar_types": [[61, 2, 1, "", "Array"], [62, 2, 1, "", "BaseMixed"], [63, 2, 1, "", "BaseRealWithUnits"], [64, 2, 1, "", "BaseString"], [65, 2, 1, "", "Bool"], [66, 2, 1, "", "Complex"], [67, 2, 1, "", "Date"], [68, 1, 1, "", "DefKeyword"], [69, 2, 1, "", "Energy"], [70, 2, 1, "", "Flag"], [71, 2, 1, "", "GrammarType"], [72, 2, 1, "", "Integer"], [73, 2, 1, "", "Keyword"], [74, 2, 1, "", "LineString"], [75, 2, 1, "", "Mixed"], [76, 2, 1, "", "Number"], [77, 2, 1, "", "ObjectNumber"], [78, 2, 1, "", "PotMixed"], [79, 2, 1, "", "QString"], [80, 2, 1, "", "Range"], [81, 2, 1, "", "Real"], [82, 2, 1, "", "RealWithUnits"], [83, 2, 1, "", "Separator"], [84, 2, 1, "", "Sequence"], [85, 2, 1, "", "SetOf"], [86, 2, 1, "", "String"], [87, 2, 1, "", "Table"], [88, 2, 1, "", "TypedGrammarType"], [89, 2, 1, "", "Unsigned"], [90, 6, 1, "", "boolean"], [91, 1, 1, "", "compare_numpy_values"], [92, 6, 1, "", "complex_number"], [93, 6, 1, "", "date"], [94, 6, 1, "", "energy"], [95, 6, 1, "", "flag"], [96, 1, 1, "", "format_for_type"], [97, 6, 1, "", "integer"], [98, 6, 1, "", "line_string"], [99, 6, 1, "", "mixed"], [100, 6, 1, "", "pot_mixed"], [101, 6, 1, "", "qstring"], [102, 6, 1, "", "real"], [103, 6, 1, "", "recognized_set_types"], [104, 6, 1, "", "separator"], [105, 6, 1, "", "set_of_integers"], [106, 6, 1, "", "set_of_reals"], [107, 6, 1, "", "string"], [108, 1, 1, "", "type_from_default_value"], [109, 6, 1, "", "type_from_set_map"], [110, 1, 1, "", "type_from_type"], [111, 6, 1, "", "type_from_type_map"], [112, 1, 1, "", "type_from_value"], [113, 6, 1, "", "unsigned"]], "ase2sprkkr.common.grammar_types.Array": [[61, 3, 1, "", "__init__"], [61, 3, 1, "", "_set_convert_action"], [61, 3, 1, "", "_string"], [61, 3, 1, "", "_validate"], [61, 3, 1, "", "convert"], [61, 4, 1, "", "delimiter"], [61, 4, 1, "", "delimiter_str"], [61, 3, 1, "", "grammar_name"], [61, 3, 1, "", "is_the_same_value"]], "ase2sprkkr.common.grammar_types.BaseMixed": [[62, 3, 1, "", "__init__"], [62, 3, 1, "", "_grammar"], [62, 3, 1, "", "_validate"], [62, 3, 1, "", "convert"], [62, 3, 1, "", "get_type"], [62, 3, 1, "", "grammar_name"], [62, 4, 1, "", "string_type"], [62, 4, 1, "", "type"]], "ase2sprkkr.common.grammar_types.BaseRealWithUnits": [[63, 3, 1, "", "__init__"], [63, 3, 1, "", "_grammar"], [63, 3, 1, "", "_grammar_units"], [63, 3, 1, "", "_validate"], [63, 4, 1, "", "datatype_name"], [63, 4, 1, "", "grammar_cache"], [63, 3, 1, "", "grammar_name"], [63, 4, 1, "", "numpy_type"]], "ase2sprkkr.common.grammar_types.BaseString": [[64, 3, 1, "", "__init__"], [64, 3, 1, "", "_validate"], [64, 4, 1, "", "allowed_types"], [64, 4, 1, "", "datatype"], [64, 4, 1, "", "datatype_name"]], "ase2sprkkr.common.grammar_types.Bool": [[65, 4, 1, "", "I"], [65, 3, 1, "", "__init__"], [65, 4, 1, "", "_grammar"], [65, 3, 1, "", "_string"], [65, 4, 1, "", "allowed_types"], [65, 4, 1, "", "datatype"], [65, 4, 1, "", "datatype_name"], [65, 3, 1, "", "grammar_name"], [65, 4, 1, "", "numpy_type"], [65, 4, 1, "", "type_name"]], "ase2sprkkr.common.grammar_types.Complex": [[66, 4, 1, "", "I"], [66, 3, 1, "", "__init__"], [66, 3, 1, "", "_grammar_name"], [66, 3, 1, "", "_string"], [66, 3, 1, "", "_validate"], [66, 3, 1, "", "convert"]], "ase2sprkkr.common.grammar_types.Date": [[67, 4, 1, "", "I"], [67, 3, 1, "", "__init__"], [67, 4, 1, "", "_grammar"], [67, 3, 1, "", "_string"], [67, 4, 1, "", "allowed_types"], [67, 4, 1, "", "datatype"], [67, 4, 1, "", "datatype_name"], [67, 3, 1, "", "grammar_name"], [67, 4, 1, "", "numpy_type"], [67, 4, 1, "", "type_name"]], "ase2sprkkr.common.grammar_types.Energy": [[69, 4, 1, "", "I"], [69, 3, 1, "", "__init__"], [69, 4, 1, "", "units"]], "ase2sprkkr.common.grammar_types.Flag": [[70, 4, 1, "", "I"], [70, 3, 1, "", "__init__"], [70, 4, 1, "", "_grammar"], [70, 3, 1, "", "_validate"], [70, 4, 1, "", "allowed_types"], [70, 4, 1, "", "datatype"], [70, 4, 1, "", "datatype_name"], [70, 3, 1, "", "grammar_name"], [70, 3, 1, "", "missing_value"], [70, 4, 1, "", "numpy_type"], [70, 3, 1, "", "str"]], "ase2sprkkr.common.grammar_types.GrammarType": [[71, 3, 1, "", "__init__"], [71, 3, 1, "", "_string"], [71, 3, 1, "", "_validate"], [71, 3, 1, "", "_valueError"], [71, 3, 1, "", "additional_description"], [71, 3, 1, "", "convert"], [71, 3, 1, "", "copy"], [71, 4, 1, "", "default_value"], [71, 3, 1, "", "enrich"], [71, 4, 1, "", "format"], [71, 3, 1, "", "grammar"], [71, 3, 1, "", "grammar_name"], [71, 4, 1, "", "has_value"], [71, 3, 1, "", "is_the_same_value"], [71, 3, 1, "", "missing_value"], [71, 4, 1, "", "name_in_grammar"], [71, 4, 1, "", "numpy_type"], [71, 3, 1, "", "parse"], [71, 3, 1, "", "parse_from_stream"], [71, 4, 1, "", "postfix"], [71, 4, 1, "", "prefix"], [71, 3, 1, "", "print"], [71, 3, 1, "", "read"], [71, 3, 1, "", "string"], [71, 3, 1, "", "transform_grammar"], [71, 3, 1, "", "type_validation"], [71, 3, 1, "", "validate"], [71, 3, 1, "", "write"]], "ase2sprkkr.common.grammar_types.Integer": [[72, 4, 1, "", "I"], [72, 3, 1, "", "__init__"], [72, 4, 1, "", "_grammar"], [72, 4, 1, "", "allowed_types"], [72, 4, 1, "", "datatype"], [72, 4, 1, "", "datatype_name"], [72, 3, 1, "", "grammar_name"], [72, 4, 1, "", "numpy_type"]], "ase2sprkkr.common.grammar_types.Keyword": [[73, 3, 1, "", "__init__"], [73, 3, 1, "", "_validate"], [73, 3, 1, "", "additional_description"], [73, 3, 1, "", "convert"], [73, 3, 1, "", "grammar_name"]], "ase2sprkkr.common.grammar_types.LineString": [[74, 4, 1, "", "I"], [74, 3, 1, "", "__init__"], [74, 4, 1, "", "_grammar"], [74, 4, 1, "", "allowed_types"], [74, 3, 1, "", "grammar_name"]], "ase2sprkkr.common.grammar_types.Mixed": [[75, 4, 1, "", "I"], [75, 3, 1, "", "__init__"], [75, 3, 1, "", "_initialize"], [75, 3, 1, "", "is_the_same_value"], [75, 3, 1, "", "missing_value"], [75, 4, 1, "", "string_type"], [75, 4, 1, "", "types"]], "ase2sprkkr.common.grammar_types.Number": [[76, 3, 1, "", "__init__"], [76, 3, 1, "", "_validate"], [76, 4, 1, "", "allowed_types"], [76, 4, 1, "", "datatype"], [76, 4, 1, "", "datatype_name"]], "ase2sprkkr.common.grammar_types.ObjectNumber": [[77, 3, 1, "", "__init__"], [77, 3, 1, "", "_validate"], [77, 3, 1, "", "convert"]], "ase2sprkkr.common.grammar_types.PotMixed": [[78, 4, 1, "", "I"], [78, 3, 1, "", "__init__"], [78, 3, 1, "", "_initialize"], [78, 3, 1, "", "_string"], [78, 3, 1, "", "is_the_same_value"], [78, 4, 1, "", "string_type"], [78, 4, 1, "", "types"]], "ase2sprkkr.common.grammar_types.QString": [[79, 4, 1, "", "I"], [79, 3, 1, "", "__init__"], [79, 4, 1, "", "_grammar"], [79, 3, 1, "", "grammar_name"]], "ase2sprkkr.common.grammar_types.Range": [[80, 3, 1, "", "__init__"], [80, 3, 1, "", "get_type"], [80, 5, 1, "", "types"]], "ase2sprkkr.common.grammar_types.Real": [[81, 4, 1, "", "I"], [81, 3, 1, "", "__init__"], [81, 4, 1, "", "_grammar"], [81, 4, 1, "", "allowed_types"], [81, 4, 1, "", "datatype"], [81, 3, 1, "", "grammar_name"], [81, 4, 1, "", "numpy_type"]], "ase2sprkkr.common.grammar_types.RealWithUnits": [[82, 3, 1, "", "__init__"]], "ase2sprkkr.common.grammar_types.Separator": [[83, 4, 1, "", "I"], [83, 3, 1, "", "__init__"], [83, 4, 1, "", "_grammar"], [83, 3, 1, "", "_grammar_name"], [83, 3, 1, "", "_string"], [83, 3, 1, "", "_validate"], [83, 4, 1, "", "has_value"]], "ase2sprkkr.common.grammar_types.Sequence": [[84, 3, 1, "", "__init__"], [84, 3, 1, "", "_grammar"], [84, 3, 1, "", "_string"], [84, 3, 1, "", "_validate"], [84, 3, 1, "", "convert"], [84, 3, 1, "", "enrich"], [84, 3, 1, "", "grammar_name"], [84, 3, 1, "", "is_the_same_value"]], "ase2sprkkr.common.grammar_types.SetOf": [[85, 3, 1, "", "__init__"], [85, 4, 1, "", "delimiter"], [85, 4, 1, "", "delimiter_str"], [85, 3, 1, "", "transform_grammar"]], "ase2sprkkr.common.grammar_types.String": [[86, 4, 1, "", "I"], [86, 3, 1, "", "__init__"], [86, 4, 1, "", "_grammar"], [86, 3, 1, "", "grammar_name"]], "ase2sprkkr.common.grammar_types.Table": [[87, 3, 1, "", "__init__"], [87, 3, 1, "", "_grammar"], [87, 3, 1, "", "_string"], [87, 3, 1, "", "_validate"], [87, 3, 1, "", "convert"], [87, 3, 1, "", "grammar_name"], [87, 3, 1, "", "is_the_same_value"], [87, 4, 1, "", "name_in_grammar"], [87, 3, 1, "", "number_of_collumns"], [87, 5, 1, "", "numpy_type"], [87, 3, 1, "", "zero_data"]], "ase2sprkkr.common.grammar_types.TypedGrammarType": [[88, 3, 1, "", "__init__"], [88, 3, 1, "", "_validate"], [88, 4, 1, "", "allowed_types"], [88, 3, 1, "", "convert"], [88, 4, 1, "", "datatype"], [88, 4, 1, "", "datatype_name"]], "ase2sprkkr.common.grammar_types.Unsigned": [[89, 4, 1, "", "I"], [89, 3, 1, "", "__init__"], [89, 4, 1, "", "_grammar"], [89, 3, 1, "", "_validate"], [89, 4, 1, "", "datatype_name"], [89, 3, 1, "", "grammar_name"], [89, 4, 1, "", "numpy_type"]], "ase2sprkkr.common.init_tests.TestCase": [[115, 3, 1, "", "__init__"], [115, 3, 1, "", "assertAlmostEqual"], [115, 3, 1, "", "assertAsyncEqual"], [115, 3, 1, "", "assertAsyncRaises"], [115, 3, 1, "", "runAsync"], [115, 3, 1, "", "setUp"]], "ase2sprkkr.common.init_tests": [[116, 1, 1, "", "patch_package"]], "ase2sprkkr.common.misc": [[118, 2, 1, "", "OrderedDict"], [119, 1, 1, "", "as_integer"], [120, 1, 1, "", "copy_list"], [121, 1, 1, "", "njit"], [122, 1, 1, "", "numpy_index"]], "ase2sprkkr.common.misc.OrderedDict": [[118, 3, 1, "", "__init__"], [118, 3, 1, "", "first_item"], [118, 3, 1, "", "index"]], "ase2sprkkr.common.no_output": [[124, 2, 1, "", "NoOutput"]], "ase2sprkkr.common.no_output.NoOutput": [[124, 3, 1, "", "__init__"]], "ase2sprkkr.common.options": [[126, 2, 1, "", "CustomOption"], [127, 2, 1, "", "DangerousValue"], [128, 2, 1, "", "Option"]], "ase2sprkkr.common.options.CustomOption": [[126, 3, 1, "", "__init__"], [126, 3, 1, "", "factory"], [126, 3, 1, "", "remove"]], "ase2sprkkr.common.options.DangerousValue": [[127, 3, 1, "", "__init__"], [127, 3, 1, "", "write_value"]], "ase2sprkkr.common.options.Option": [[128, 3, 1, "", "__init__"], [128, 3, 1, "", "_check_array_access"], [128, 3, 1, "", "_find_value"], [128, 3, 1, "", "_getitem"], [128, 3, 1, "", "_pack_value"], [128, 3, 1, "", "_post_set"], [128, 3, 1, "", "_save_to_file"], [128, 3, 1, "", "_set_item"], [128, 3, 1, "", "_unpack_value"], [128, 3, 1, "", "as_dict"], [128, 3, 1, "", "clear"], [128, 5, 1, "", "default_value"], [128, 3, 1, "", "get"], [128, 3, 1, "", "get_path"], [128, 3, 1, "", "is_changed"], [128, 3, 1, "", "is_dangerous"], [128, 3, 1, "", "is_it_the_default_value"], [128, 5, 1, "", "name"], [128, 5, 1, "", "result"], [128, 3, 1, "", "set"], [128, 3, 1, "", "set_dangerous"], [128, 3, 1, "", "validate"], [128, 3, 1, "", "value_and_changed"]], "ase2sprkkr.common.process_output_reader": [[130, 2, 1, "", "AsyncioFileReader"], [131, 2, 1, "", "BaseProcessOutputReader"]], "ase2sprkkr.common.process_output_reader.AsyncioFileReader": [[130, 3, 1, "", "__init__"], [130, 3, 1, "", "close"], [130, 3, 1, "", "readline"], [130, 3, 1, "", "readuntil"], [130, 3, 1, "", "separator_shifts"]], "ase2sprkkr.common.process_output_reader.BaseProcessOutputReader": [[131, 3, 1, "", "__init__"], [131, 3, 1, "", "read_error"], [131, 3, 1, "", "read_from_file"], [131, 3, 1, "", "read_output"], [131, 3, 1, "", "result"], [131, 3, 1, "", "run"], [131, 3, 1, "", "run_subprocess"]], "ase2sprkkr.common.test": [[133, 0, 0, "-", "init_tests"], [135, 0, 0, "-", "test_common"], [137, 0, 0, "-", "test_grammar_types"]], "ase2sprkkr.common.test.init_tests": [[134, 2, 1, "", "TestCase"]], "ase2sprkkr.common.test.init_tests.TestCase": [[134, 3, 1, "", "__init__"], [134, 3, 1, "", "assertAlmostEqual"], [134, 3, 1, "", "assertAsyncEqual"], [134, 3, 1, "", "assertAsyncRaises"], [134, 3, 1, "", "runAsync"], [134, 3, 1, "", "setUp"]], "ase2sprkkr.common.test.test_common": [[136, 2, 1, "", "CommonTest"]], "ase2sprkkr.common.test.test_common.CommonTest": [[136, 3, 1, "", "__init__"], [136, 3, 1, "", "test_asyncio_file_reader"], [136, 3, 1, "", "test_common"]], "ase2sprkkr.common.test.test_grammar_types": [[138, 2, 1, "", "GrammarTest"]], "ase2sprkkr.common.test.test_grammar_types.GrammarTest": [[138, 3, 1, "", "__init__"], [138, 3, 1, "", "_test_types"], [138, 3, 1, "", "test_is_the_same_value"], [138, 3, 1, "", "test_types"]], "ase2sprkkr.common.unique_values": [[140, 2, 1, "", "UniqueValuesMapping"]], "ase2sprkkr.common.unique_values.UniqueValuesMapping": [[140, 3, 1, "", "__init__"], [140, 3, 1, "", "_create_mapping"], [140, 3, 1, "", "are_equivalent"], [140, 3, 1, "", "from_values"], [140, 3, 1, "", "indexes"], [140, 3, 1, "", "is_equivalent_to"], [140, 3, 1, "", "iter_unique"], [140, 3, 1, "", "len_of_unique"], [140, 4, 1, "", "mapping"], [140, 3, 1, "", "merge"], [140, 3, 1, "", "normalize"], [140, 4, 1, "", "value_to_class_id"]], "ase2sprkkr.input_parameters": [[142, 0, 0, "-", "definitions"], [161, 0, 0, "-", "input_parameters"], [164, 0, 0, "-", "input_parameters_definitions"], [168, 0, 0, "-", "test"]], "ase2sprkkr.input_parameters.definitions": [[143, 0, 0, "-", "arpes"], [145, 0, 0, "-", "dos"], [147, 0, 0, "-", "phagen"], [149, 0, 0, "-", "scf"], [151, 0, 0, "-", "sections"]], "ase2sprkkr.input_parameters.definitions.arpes": [[144, 6, 1, "", "input_parameters"]], "ase2sprkkr.input_parameters.definitions.dos": [[146, 6, 1, "", "input_parameters"]], "ase2sprkkr.input_parameters.definitions.phagen": [[148, 6, 1, "", "input_parameters"]], "ase2sprkkr.input_parameters.definitions.scf": [[150, 6, 1, "", "input_parameters"]], "ase2sprkkr.input_parameters.definitions.sections": [[152, 1, 1, "", "CONTROL"], [153, 6, 1, "", "CPA"], [154, 6, 1, "", "ENERGY"], [155, 6, 1, "", "MODE"], [156, 6, 1, "", "SCF"], [157, 6, 1, "", "SITES"], [158, 6, 1, "", "STRCONST"], [159, 1, 1, "", "TASK"], [160, 6, 1, "", "TAU"]], "ase2sprkkr.input_parameters.input_parameters": [[162, 2, 1, "", "InputParameters"], [163, 1, 1, "", "resolve_executable_postfix"]], "ase2sprkkr.input_parameters.input_parameters.InputParameters": [[162, 3, 1, "", "__init__"], [162, 4, 1, "", "_default_mpi_runner"], [162, 3, 1, "", "calculate"], [162, 3, 1, "", "create"], [162, 3, 1, "", "create_input_parameters"], [162, 3, 1, "", "default_mpi_runner"], [162, 3, 1, "", "default_parameters"], [162, 4, 1, "", "definitions"], [162, 3, 1, "", "executable_params"], [162, 3, 1, "", "from_file"], [162, 3, 1, "", "is_it_a_input_parameters_name"], [162, 3, 1, "", "is_mpi"], [162, 3, 1, "", "mpi_runner"], [162, 3, 1, "", "read_output_from_file"], [162, 3, 1, "", "result_reader"], [162, 3, 1, "", "run_process"], [162, 3, 1, "", "set_option"], [162, 5, 1, "", "task_name"]], "ase2sprkkr.input_parameters.input_parameters_definitions": [[165, 2, 1, "", "InputParametersDefinition"], [166, 2, 1, "", "InputSectionDefinition"], [167, 2, 1, "", "InputValueDefinition"]], "ase2sprkkr.input_parameters.input_parameters_definitions.InputParametersDefinition": [[165, 3, 1, "", "__init__"], [165, 3, 1, "", "_generic_info"], [165, 4, 1, "", "child_class"], [165, 4, 1, "", "configuration_type_name"], [165, 3, 1, "", "custom_class"], [165, 3, 1, "", "custom_value_grammar"], [165, 4, 1, "", "delimiter"], [165, 4, 1, "", "grammar_of_delimiter"], [165, 4, 1, "", "result_class"]], "ase2sprkkr.input_parameters.input_parameters_definitions.InputSectionDefinition": [[166, 3, 1, "", "__init__"], [166, 4, 1, "", "_copy_args"], [166, 4, 1, "", "child_class"], [166, 3, 1, "", "custom_class"], [166, 4, 1, "", "delimiter"], [166, 4, 1, "", "do_not_skip_whitespaces_before_name"], [166, 4, 1, "", "grammar_of_delimiter"]], "ase2sprkkr.input_parameters.input_parameters_definitions.InputValueDefinition": [[167, 3, 1, "", "__init__"], [167, 4, 1, "", "_copy_args"], [167, 4, 1, "", "grammar_of_delimiter"], [167, 4, 1, "", "name_value_delimiter"], [167, 4, 1, "", "prefix"], [167, 4, 1, "", "type_from_type_map"], [167, 4, 1, "", "type_of_dangerous"]], "ase2sprkkr.input_parameters.test": [[169, 0, 0, "-", "init_tests"], [171, 0, 0, "-", "test_definitions"], [173, 0, 0, "-", "test_input_parameters"]], "ase2sprkkr.input_parameters.test.init_tests": [[170, 2, 1, "", "TestCase"]], "ase2sprkkr.input_parameters.test.init_tests.TestCase": [[170, 3, 1, "", "__init__"], [170, 3, 1, "", "assertAlmostEqual"], [170, 3, 1, "", "assertAsyncEqual"], [170, 3, 1, "", "assertAsyncRaises"], [170, 3, 1, "", "runAsync"], [170, 3, 1, "", "setUp"]], "ase2sprkkr.input_parameters.test.test_definitions": [[172, 2, 1, "", "TestDefinitions"]], "ase2sprkkr.input_parameters.test.test_definitions.TestDefinitions": [[172, 3, 1, "", "__init__"], [172, 3, 1, "", "test_definitions"]], "ase2sprkkr.input_parameters.test.test_input_parameters": [[174, 2, 1, "", "TestInputParameters"]], "ase2sprkkr.input_parameters.test.test_input_parameters.TestInputParameters": [[174, 3, 1, "", "__init__"], [174, 3, 1, "", "test_custom_value"], [174, 3, 1, "", "test_dangerous_value"], [174, 3, 1, "", "test_input_parameters_definition"], [174, 3, 1, "", "test_section_delimiter_value"]], "ase2sprkkr.outputs": [[176, 0, 0, "-", "output_definitions"], [181, 0, 0, "-", "readers"], [188, 0, 0, "-", "task_result"], [191, 0, 0, "-", "test"]], "ase2sprkkr.outputs.output_definitions": [[177, 2, 1, "", "OutputNonameValueDefinition"], [178, 2, 1, "", "OutputSectionDefinition"], [179, 2, 1, "", "OutputValueDefinition"], [180, 2, 1, "", "OutputValueEqualDefinition"]], "ase2sprkkr.outputs.output_definitions.OutputNonameValueDefinition": [[177, 3, 1, "", "__init__"], [177, 4, 1, "", "name_in_grammar"]], "ase2sprkkr.outputs.output_definitions.OutputSectionDefinition": [[178, 3, 1, "", "__init__"], [178, 4, 1, "", "child_class"], [178, 4, 1, "", "custom_class"], [178, 4, 1, "", "delimiter"], [178, 4, 1, "", "force_order"], [178, 4, 1, "", "grammar_of_delimiter"], [178, 4, 1, "", "name_in_grammar"]], "ase2sprkkr.outputs.output_definitions.OutputValueDefinition": [[179, 3, 1, "", "__init__"], [179, 4, 1, "", "grammar_of_delimiter"], [179, 4, 1, "", "prefix"]], "ase2sprkkr.outputs.output_definitions.OutputValueEqualDefinition": [[180, 3, 1, "", "__init__"], [180, 4, 1, "", "grammar_of_delimiter"], [180, 4, 1, "", "name_value_delimiter"]], "ase2sprkkr.outputs.readers": [[182, 0, 0, "-", "default"], [185, 0, 0, "-", "scf"]], "ase2sprkkr.outputs.readers.default": [[183, 2, 1, "", "DefaultOutputReader"], [184, 2, 1, "", "DefaultResult"]], "ase2sprkkr.outputs.readers.default.DefaultOutputReader": [[183, 3, 1, "", "__init__"], [183, 3, 1, "", "read_output"], [183, 4, 1, "", "result_class"]], "ase2sprkkr.outputs.readers.default.DefaultResult": [[184, 3, 1, "", "__init__"]], "ase2sprkkr.outputs.readers.scf": [[186, 2, 1, "", "ScfOutputReader"], [187, 2, 1, "", "ScfResult"]], "ase2sprkkr.outputs.readers.scf.ScfOutputReader": [[186, 3, 1, "", "__init__"], [186, 4, 1, "", "atoms_conf_type"], [186, 3, 1, "", "read_output"], [186, 4, 1, "", "result_class"]], "ase2sprkkr.outputs.readers.scf.ScfResult": [[187, 3, 1, "", "__init__"], [187, 5, 1, "", "calculator"], [187, 5, 1, "", "converged"], [187, 5, 1, "", "energy"], [187, 3, 1, "", "iteration_values"], [187, 5, 1, "", "iterations"], [187, 5, 1, "", "last_iteration"], [187, 3, 1, "", "plot"], [187, 5, 1, "", "potential"], [187, 5, 1, "", "potential_filename"]], "ase2sprkkr.outputs.task_result": [[189, 2, 1, "", "OutputReader"], [190, 2, 1, "", "TaskResult"]], "ase2sprkkr.outputs.task_result.OutputReader": [[189, 3, 1, "", "__init__"], [189, 4, 1, "", "calculator"], [189, 4, 1, "", "directory"], [189, 4, 1, "", "input_parameters"], [189, 3, 1, "", "result"]], "ase2sprkkr.outputs.task_result.TaskResult": [[190, 3, 1, "", "__init__"], [190, 5, 1, "", "atoms"]], "ase2sprkkr.outputs.test": [[192, 0, 0, "-", "init_tests"], [194, 0, 0, "-", "test_output"]], "ase2sprkkr.outputs.test.init_tests": [[193, 2, 1, "", "TestCase"]], "ase2sprkkr.outputs.test.init_tests.TestCase": [[193, 3, 1, "", "__init__"], [193, 3, 1, "", "assertAlmostEqual"], [193, 3, 1, "", "assertAsyncEqual"], [193, 3, 1, "", "assertAsyncRaises"], [193, 3, 1, "", "runAsync"], [193, 3, 1, "", "setUp"]], "ase2sprkkr.outputs.test.test_output": [[195, 2, 1, "", "TestOutput"]], "ase2sprkkr.outputs.test.test_output.TestOutput": [[195, 3, 1, "", "__init__"], [195, 3, 1, "", "test_output"]], "ase2sprkkr.physics": [[197, 0, 0, "-", "lattice_data"], [199, 0, 0, "-", "winger_seitz_radii"]], "ase2sprkkr.physics.lattice_data": [[198, 2, 1, "", "LatticeData"]], "ase2sprkkr.physics.lattice_data.LatticeData": [[198, 3, 1, "", "__init__"], [198, 3, 1, "", "bravais_number_from_pearson_symbol"], [198, 4, 1, "", "cell_symmetries"], [198, 4, 1, "", "international_numbers_to_AP"], [198, 4, 1, "", "symmetries"]], "ase2sprkkr.physics.winger_seitz_radii": [[200, 6, 1, "", "winger_seitz_radii"]], "ase2sprkkr.potentials": [[202, 0, 0, "-", "custom_potential_section"], [207, 0, 0, "-", "definitions"], [240, 0, 0, "-", "potential_definitions"], [246, 0, 0, "-", "potential_sections"], [250, 0, 0, "-", "potentials"], [252, 0, 0, "-", "test"]], "ase2sprkkr.potentials.custom_potential_section": [[203, 2, 1, "", "CustomPotentialSection"], [204, 2, 1, "", "CustomPotentialSectionDefinition"], [205, 2, 1, "", "CustomSectionToken"], [206, 2, 1, "", "SectionString"]], "ase2sprkkr.potentials.custom_potential_section.CustomPotentialSection": [[203, 3, 1, "", "__init__"], [203, 3, 1, "", "_depends_on"], [203, 3, 1, "", "_set_from_atoms"], [203, 3, 1, "", "_update_atoms"], [203, 3, 1, "", "reset"]], "ase2sprkkr.potentials.custom_potential_section.CustomPotentialSectionDefinition": [[204, 3, 1, "", "__init__"], [204, 4, 1, "", "mandatory"], [204, 4, 1, "", "name_value_delimiter"], [204, 4, 1, "", "prefix"]], "ase2sprkkr.potentials.custom_potential_section.CustomSectionToken": [[205, 3, 1, "", "__init__"], [205, 4, 1, "", "_abc_impl"], [205, 4, 1, "", "name"], [205, 3, 1, "", "parseImpl"], [205, 4, 1, "", "pattern"]], "ase2sprkkr.potentials.custom_potential_section.SectionString": [[206, 4, 1, "", "I"], [206, 3, 1, "", "__init__"], [206, 4, 1, "", "_grammar"], [206, 4, 1, "", "delimiter_pattern"], [206, 3, 1, "", "grammar_name"], [206, 4, 1, "", "grammar_of_delimiter"], [206, 3, 1, "", "write"]], "ase2sprkkr.potentials.definitions": [[208, 0, 0, "-", "potential"], [210, 0, 0, "-", "sections"]], "ase2sprkkr.potentials.definitions.potential": [[209, 6, 1, "", "potential_definition"]], "ase2sprkkr.potentials.definitions.sections": [[211, 1, 1, "", "_sections"], [212, 0, 0, "-", "global_system_parameter"], [216, 0, 0, "-", "lattice"], [220, 0, 0, "-", "mesh_information"], [224, 0, 0, "-", "occupation"], [228, 0, 0, "-", "reference_system"], [232, 0, 0, "-", "sites"], [236, 0, 0, "-", "types"]], "ase2sprkkr.potentials.definitions.sections.global_system_parameter": [[213, 2, 1, "", "GlobalSystemParameter"], [214, 2, 1, "", "GlobalSystemParameterDefinition"], [215, 4, 1, "", "section"]], "ase2sprkkr.potentials.definitions.sections.global_system_parameter.GlobalSystemParameter": [[213, 3, 1, "", "__init__"], [213, 3, 1, "", "_set_from_atoms"]], "ase2sprkkr.potentials.definitions.sections.global_system_parameter.GlobalSystemParameterDefinition": [[214, 3, 1, "", "__init__"], [214, 4, 1, "", "result_class"]], "ase2sprkkr.potentials.definitions.sections.lattice": [[217, 2, 1, "", "LatticeSection"], [218, 2, 1, "", "LatticeSectionDefinition"], [219, 4, 1, "", "section"]], "ase2sprkkr.potentials.definitions.sections.lattice.LatticeSection": [[217, 3, 1, "", "__init__"], [217, 3, 1, "", "_set_from_atoms"], [217, 3, 1, "", "_update_atoms"]], "ase2sprkkr.potentials.definitions.sections.lattice.LatticeSectionDefinition": [[218, 3, 1, "", "__init__"], [218, 4, 1, "", "result_class"]], "ase2sprkkr.potentials.definitions.sections.mesh_information": [[221, 2, 1, "", "MeshInformationSection"], [222, 2, 1, "", "MeshInformationSectionDefinition"], [223, 4, 1, "", "section"]], "ase2sprkkr.potentials.definitions.sections.mesh_information.MeshInformationSection": [[221, 3, 1, "", "__init__"], [221, 4, 1, "", "_value_class"], [221, 4, 1, "", "_value_name"]], "ase2sprkkr.potentials.definitions.sections.mesh_information.MeshInformationSectionDefinition": [[222, 3, 1, "", "__init__"], [222, 4, 1, "", "result_class"]], "ase2sprkkr.potentials.definitions.sections.occupation": [[225, 2, 1, "", "OccupationSection"], [226, 2, 1, "", "OccupationSectionDefinition"], [227, 4, 1, "", "section"]], "ase2sprkkr.potentials.definitions.sections.occupation.OccupationSection": [[225, 3, 1, "", "__init__"], [225, 3, 1, "", "_set_from_atoms"], [225, 3, 1, "", "_update_atoms"]], "ase2sprkkr.potentials.definitions.sections.occupation.OccupationSectionDefinition": [[226, 3, 1, "", "__init__"], [226, 3, 1, "", "depends_on"], [226, 4, 1, "", "result_class"]], "ase2sprkkr.potentials.definitions.sections.reference_system": [[229, 2, 1, "", "ReferenceSystemSection"], [230, 2, 1, "", "ReferenceSystemSectionDefinition"], [231, 4, 1, "", "section"]], "ase2sprkkr.potentials.definitions.sections.reference_system.ReferenceSystemSection": [[229, 3, 1, "", "__init__"], [229, 3, 1, "", "_set_from_atoms"], [229, 4, 1, "", "_value_class"], [229, 4, 1, "", "_value_name"]], "ase2sprkkr.potentials.definitions.sections.reference_system.ReferenceSystemSectionDefinition": [[230, 3, 1, "", "__init__"], [230, 4, 1, "", "result_class"], [230, 3, 1, "", "validate"]], "ase2sprkkr.potentials.definitions.sections.sites": [[233, 2, 1, "", "SitesSection"], [234, 2, 1, "", "SitesSectionDefinition"], [235, 4, 1, "", "section"]], "ase2sprkkr.potentials.definitions.sections.sites.SitesSection": [[233, 3, 1, "", "__init__"], [233, 3, 1, "", "_set_from_atoms"], [233, 3, 1, "", "_update_atoms"]], "ase2sprkkr.potentials.definitions.sections.sites.SitesSectionDefinition": [[234, 3, 1, "", "__init__"], [234, 4, 1, "", "result_class"]], "ase2sprkkr.potentials.definitions.sections.types": [[237, 2, 1, "", "TypesSection"], [238, 2, 1, "", "TypesSectionDefinition"], [239, 4, 1, "", "section"]], "ase2sprkkr.potentials.definitions.sections.types.TypesSection": [[237, 3, 1, "", "__init__"], [237, 4, 1, "", "_value_class"], [237, 4, 1, "", "_value_name"]], "ase2sprkkr.potentials.definitions.sections.types.TypesSectionDefinition": [[238, 3, 1, "", "__init__"], [238, 4, 1, "", "result_class"]], "ase2sprkkr.potentials.potential_definitions": [[241, 2, 1, "", "ASEArraySectionDefinition"], [242, 2, 1, "", "PotSectionDefinition"], [243, 2, 1, "", "PotValueDefinition"], [244, 2, 1, "", "PotentialDefinition"], [245, 2, 1, "", "Separator"]], "ase2sprkkr.potentials.potential_definitions.ASEArraySectionDefinition": [[241, 3, 1, "", "__init__"], [241, 3, 1, "", "depends_on"], [241, 4, 1, "", "result_class"]], "ase2sprkkr.potentials.potential_definitions.PotSectionDefinition": [[242, 3, 1, "", "__init__"], [242, 4, 1, "", "child_class"], [242, 3, 1, "", "custom_class"], [242, 4, 1, "", "delimiter"], [242, 3, 1, "", "depends_on"], [242, 4, 1, "", "force_order"], [242, 3, 1, "", "grammar_of_delimiter"], [242, 4, 1, "", "result_class"], [242, 4, 1, "", "value_name_format"]], "ase2sprkkr.potentials.potential_definitions.PotValueDefinition": [[243, 3, 1, "", "__init__"], [243, 4, 1, "", "grammar_of_delimiter"], [243, 4, 1, "", "name_value_delimiter"], [243, 4, 1, "", "prefix"], [243, 4, 1, "", "type_of_dangerous"]], "ase2sprkkr.potentials.potential_definitions.PotentialDefinition": [[244, 3, 1, "", "__init__"], [244, 3, 1, "", "_generic_info"], [244, 4, 1, "", "child_class"], [244, 4, 1, "", "configuration_type_name"], [244, 4, 1, "", "custom_class"], [244, 4, 1, "", "custom_name_characters"], [244, 3, 1, "", "custom_value_grammar"], [244, 4, 1, "", "delimiter"], [244, 4, 1, "", "force_order"], [244, 4, 1, "", "grammar_of_delimiter"], [244, 4, 1, "", "result_class"]], "ase2sprkkr.potentials.potential_definitions.Separator": [[245, 3, 1, "", "__init__"], [245, 4, 1, "", "_counter"]], "ase2sprkkr.potentials.potential_sections": [[247, 2, 1, "", "ASEArraySection"], [248, 2, 1, "", "PotentialSection"], [249, 2, 1, "", "UniqueListSection"]], "ase2sprkkr.potentials.potential_sections.ASEArraySection": [[247, 3, 1, "", "__init__"], [247, 3, 1, "", "_depends_on"], [247, 3, 1, "", "_set_from_atoms"], [247, 3, 1, "", "_update_atoms"], [247, 3, 1, "", "has_any_value"]], "ase2sprkkr.potentials.potential_sections.PotentialSection": [[248, 3, 1, "", "__init__"], [248, 3, 1, "", "_depends_on"], [248, 3, 1, "", "_set_from_atoms"], [248, 3, 1, "", "_update_atoms"], [248, 3, 1, "", "reset"]], "ase2sprkkr.potentials.potential_sections.UniqueListSection": [[249, 3, 1, "", "__init__"], [249, 3, 1, "", "_set_from_atoms"], [249, 3, 1, "", "_update_atoms"], [249, 4, 1, "", "_value_class"], [249, 4, 1, "", "_value_name"]], "ase2sprkkr.potentials.potentials": [[251, 2, 1, "", "Potential"]], "ase2sprkkr.potentials.potentials.Potential": [[251, 3, 1, "", "__init__"], [251, 5, 1, "", "atoms"], [251, 3, 1, "", "from_atoms"], [251, 3, 1, "", "from_file"], [251, 3, 1, "", "make_complete"], [251, 4, 1, "", "potential_definition"], [251, 3, 1, "", "read_from_file"], [251, 3, 1, "", "reset"], [251, 3, 1, "", "set_from_atoms"], [251, 3, 1, "", "update_atoms"]], "ase2sprkkr.potentials.test": [[253, 0, 0, "-", "init_tests"], [255, 0, 0, "-", "test_custom_section"], [257, 0, 0, "-", "test_potential"], [259, 0, 0, "-", "test_structure"]], "ase2sprkkr.potentials.test.init_tests": [[254, 2, 1, "", "TestCase"]], "ase2sprkkr.potentials.test.init_tests.TestCase": [[254, 3, 1, "", "__init__"], [254, 3, 1, "", "assertAlmostEqual"], [254, 3, 1, "", "assertAsyncEqual"], [254, 3, 1, "", "assertAsyncRaises"], [254, 3, 1, "", "runAsync"], [254, 3, 1, "", "setUp"]], "ase2sprkkr.potentials.test.test_custom_section": [[256, 2, 1, "", "TestCustomSection"]], "ase2sprkkr.potentials.test.test_custom_section.TestCustomSection": [[256, 3, 1, "", "__init__"], [256, 3, 1, "", "assertNone"], [256, 3, 1, "", "test_custom_section"]], "ase2sprkkr.potentials.test.test_potential": [[258, 2, 1, "", "TestPotential"]], "ase2sprkkr.potentials.test.test_potential.TestPotential": [[258, 3, 1, "", "__init__"], [258, 3, 1, "", "test_examples"], [258, 3, 1, "", "test_grammar"], [258, 3, 1, "", "test_potential"], [258, 3, 1, "", "test_reset"], [258, 3, 1, "", "test_sequence"]], "ase2sprkkr.potentials.test.test_structure": [[260, 2, 1, "", "TestStructure"]], "ase2sprkkr.potentials.test.test_structure.TestStructure": [[260, 3, 1, "", "__init__"], [260, 3, 1, "", "test_lattice"]], "ase2sprkkr.sprkkr": [[262, 0, 0, "-", "atomic_types"], [264, 0, 0, "-", "calculator"], [267, 0, 0, "-", "configuration"], [277, 0, 0, "-", "io_data"], [282, 0, 0, "-", "occupations"], [284, 0, 0, "-", "radial_meshes"], [287, 0, 0, "-", "reference_systems"], [289, 0, 0, "-", "sites"], [291, 0, 0, "-", "sprkkr_atoms"], [293, 0, 0, "-", "sprkkr_grammar_types"], [296, 0, 0, "-", "structure"], [301, 0, 0, "-", "sysfile"], [304, 0, 0, "-", "test"]], "ase2sprkkr.sprkkr.atomic_types": [[263, 2, 1, "", "AtomicType"]], "ase2sprkkr.sprkkr.atomic_types.AtomicType": [[263, 3, 1, "", "__init__"], [263, 3, 1, "", "_check_n_electrons"], [263, 3, 1, "", "_clear_symbol_cache"], [263, 4, 1, "", "_mendeleev_module"], [263, 5, 1, "", "atomic_number"], [263, 3, 1, "", "copy"], [263, 3, 1, "", "is_vacuum"], [263, 5, 1, "", "mendeleev"], [263, 5, 1, "", "n_core"], [263, 5, 1, "", "n_electrons"], [263, 5, 1, "", "n_semicore"], [263, 5, 1, "", "n_valence"], [263, 5, 1, "", "symbol"], [263, 3, 1, "", "to_atomic_type"], [263, 3, 1, "", "to_tuple"]], "ase2sprkkr.sprkkr.calculator": [[265, 2, 1, "", "FilenameTemplator"], [266, 2, 1, "", "SPRKKR"]], "ase2sprkkr.sprkkr.calculator.FilenameTemplator": [[265, 3, 1, "", "__init__"], [265, 3, 1, "", "_get"], [265, 4, 1, "", "replacements"]], "ase2sprkkr.sprkkr.calculator.SPRKKR": [[266, 3, 1, "", "__init__"], [266, 4, 1, "", "_abc_impl"], [266, 3, 1, "", "_advance_counter"], [266, 3, 1, "", "_open_file"], [266, 5, 1, "", "atoms"], [266, 3, 1, "", "calculate"], [266, 3, 1, "", "copy_with_potential"], [266, 4, 1, "", "empty_spheres"], [266, 4, 1, "", "executable_postfix"], [266, 3, 1, "", "get"], [266, 4, 1, "", "implemented_properties"], [266, 4, 1, "", "input_file"], [266, 5, 1, "", "input_parameters"], [266, 3, 1, "", "kkrch"], [266, 3, 1, "", "kkrgen"], [266, 3, 1, "", "kkrspec"], [266, 4, 1, "", "mpi"], [266, 4, 1, "", "output_file"], [266, 3, 1, "", "phagen"], [266, 5, 1, "", "potential"], [266, 4, 1, "", "potential_file"], [266, 5, 1, "", "potential_object"], [266, 3, 1, "", "run"], [266, 3, 1, "", "run_xband"], [266, 3, 1, "", "save_input"], [266, 3, 1, "", "scf"], [266, 3, 1, "", "set"]], "ase2sprkkr.sprkkr.configuration": [[268, 2, 1, "", "ConfigurationFile"], [269, 2, 1, "", "ConfigurationFileDefinition"], [270, 2, 1, "", "ConfigurationSection"], [271, 2, 1, "", "ConfigurationSectionDefinition"], [272, 2, 1, "", "ConfigurationSectionTrait"], [273, 2, 1, "", "ConfigurationValue"], [274, 2, 1, "", "ConfigurationValueDefinition"], [275, 2, 1, "", "CustomConfigurationSection"], [276, 2, 1, "", "CustomConfigurationValue"]], "ase2sprkkr.sprkkr.configuration.ConfigurationFile": [[268, 3, 1, "", "__init__"], [268, 3, 1, "", "save_to_file"]], "ase2sprkkr.sprkkr.configuration.ConfigurationFileDefinition": [[269, 3, 1, "", "__init__"]], "ase2sprkkr.sprkkr.configuration.ConfigurationSection": [[270, 3, 1, "", "__init__"]], "ase2sprkkr.sprkkr.configuration.ConfigurationSectionDefinition": [[271, 3, 1, "", "__init__"], [271, 4, 1, "", "result_class"]], "ase2sprkkr.sprkkr.configuration.ConfigurationSectionTrait": [[272, 3, 1, "", "__init__"], [272, 3, 1, "", "_set_from_atoms"], [272, 3, 1, "", "set_from_atoms"]], "ase2sprkkr.sprkkr.configuration.ConfigurationValue": [[273, 3, 1, "", "__init__"], [273, 3, 1, "", "_set_from_atoms"]], "ase2sprkkr.sprkkr.configuration.ConfigurationValueDefinition": [[274, 3, 1, "", "__init__"], [274, 4, 1, "", "result_class"]], "ase2sprkkr.sprkkr.configuration.CustomConfigurationSection": [[275, 3, 1, "", "__init__"]], "ase2sprkkr.sprkkr.configuration.CustomConfigurationValue": [[276, 3, 1, "", "__init__"], [276, 3, 1, "", "_set_from_atoms"]], "ase2sprkkr.sprkkr.io_data": [[278, 2, 1, "", "BaseIoData"], [279, 2, 1, "", "ReadIoData"], [280, 2, 1, "", "WriteIoData"], [281, 1, 1, "", "unique_mapping"]], "ase2sprkkr.sprkkr.io_data.BaseIoData": [[278, 3, 1, "", "__init__"]], "ase2sprkkr.sprkkr.io_data.ReadIoData": [[279, 3, 1, "", "__init__"]], "ase2sprkkr.sprkkr.io_data.WriteIoData": [[280, 3, 1, "", "__init__"], [280, 5, 1, "", "meshes"], [280, 5, 1, "", "reference_systems"], [280, 5, 1, "", "sites"], [280, 5, 1, "", "types"]], "ase2sprkkr.sprkkr.occupations": [[283, 2, 1, "", "Occupation"]], "ase2sprkkr.sprkkr.occupations.Occupation": [[283, 3, 1, "", "__init__"], [283, 3, 1, "", "_find_key"], [283, 3, 1, "", "_normalize"], [283, 3, 1, "", "_update_atoms"], [283, 3, 1, "", "add"], [283, 5, 1, "", "as_dict"], [283, 3, 1, "", "atomic_type"], [283, 3, 1, "", "atomic_types"], [283, 3, 1, "", "check"], [283, 3, 1, "", "clean"], [283, 3, 1, "", "copy"], [283, 3, 1, "", "items"], [283, 5, 1, "", "primary_atomic_number"], [283, 5, 1, "", "primary_atomic_type"], [283, 5, 1, "", "primary_symbol"], [283, 3, 1, "", "replace_type"], [283, 3, 1, "", "set"], [283, 3, 1, "", "to_occupation"], [283, 3, 1, "", "to_tuple"], [283, 5, 1, "", "total_occupation"]], "ase2sprkkr.sprkkr.radial_meshes": [[285, 2, 1, "", "ExponentialMesh"], [286, 2, 1, "", "Mesh"]], "ase2sprkkr.sprkkr.radial_meshes.ExponentialMesh": [[285, 3, 1, "", "__init__"], [285, 3, 1, "", "copy"], [285, 3, 1, "", "to_tuple"]], "ase2sprkkr.sprkkr.radial_meshes.Mesh": [[286, 3, 1, "", "__init__"], [286, 3, 1, "", "default"]], "ase2sprkkr.sprkkr.reference_systems": [[288, 2, 1, "", "ReferenceSystem"]], "ase2sprkkr.sprkkr.reference_systems.ReferenceSystem": [[288, 3, 1, "", "__init__"], [288, 3, 1, "", "copy"], [288, 3, 1, "", "default"], [288, 3, 1, "", "to_tuple"]], "ase2sprkkr.sprkkr.sites": [[290, 2, 1, "", "Site"]], "ase2sprkkr.sprkkr.sites.Site": [[290, 3, 1, "", "__init__"], [290, 5, 1, "", "atomic_types"], [290, 3, 1, "", "copy"], [290, 3, 1, "", "index"], [290, 3, 1, "", "is_vacuum"], [290, 5, 1, "", "occupation"], [290, 5, 1, "", "primary_symbol"], [290, 3, 1, "", "reset"], [290, 3, 1, "", "update_atoms"]], "ase2sprkkr.sprkkr.sprkkr_atoms": [[292, 2, 1, "", "SPRKKRAtoms"]], "ase2sprkkr.sprkkr.sprkkr_atoms.SPRKKRAtoms": [[292, 3, 1, "", "__init__"], [292, 3, 1, "", "_init"], [292, 3, 1, "", "_init_sites"], [292, 3, 1, "", "cancel_sites_symmetry"], [292, 3, 1, "", "compute_sites_symmetry"], [292, 3, 1, "", "extend"], [292, 5, 1, "", "potential"], [292, 3, 1, "", "promote_ase_atoms"], [292, 3, 1, "", "reset_sprkkr_potential"], [292, 3, 1, "", "set_sites"], [292, 5, 1, "", "sites"], [292, 4, 1, "", "sites_array_name"], [292, 5, 1, "", "spacegroup_info"], [292, 5, 1, "", "symmetry"]], "ase2sprkkr.sprkkr.sprkkr_grammar_types": [[294, 2, 1, "", "AtomicType"], [295, 2, 1, "", "Site"]], "ase2sprkkr.sprkkr.sprkkr_grammar_types.AtomicType": [[294, 4, 1, "", "I"], [294, 3, 1, "", "__init__"], [294, 3, 1, "", "set_from_atoms"], [294, 4, 1, "", "type"]], "ase2sprkkr.sprkkr.sprkkr_grammar_types.Site": [[295, 4, 1, "", "I"], [295, 3, 1, "", "__init__"], [295, 3, 1, "", "set_from_atoms"], [295, 4, 1, "", "type"]], "ase2sprkkr.sprkkr.structure": [[297, 2, 1, "", "AtomData"], [298, 2, 1, "", "LayerData"], [299, 1, 1, "", "floatjm"], [300, 1, 1, "", "structure_file_to_atoms"]], "ase2sprkkr.sprkkr.structure.AtomData": [[297, 3, 1, "", "__init__"], [297, 3, 1, "", "from_text"], [297, 3, 1, "", "get_symbol"]], "ase2sprkkr.sprkkr.structure.LayerData": [[298, 3, 1, "", "__init__"]], "ase2sprkkr.sprkkr.sysfile": [[302, 1, 1, "", "sysfile_content"], [303, 1, 1, "", "write_sysfile"]], "ase2sprkkr.sprkkr.test": [[305, 0, 0, "-", "init_tests"], [307, 0, 0, "-", "test_calculator"], [309, 0, 0, "-", "test_sites"], [311, 0, 0, "-", "test_sprkkr_atoms"], [313, 0, 0, "-", "test_sysfile"]], "ase2sprkkr.sprkkr.test.init_tests": [[306, 2, 1, "", "TestCase"]], "ase2sprkkr.sprkkr.test.init_tests.TestCase": [[306, 3, 1, "", "__init__"], [306, 3, 1, "", "assertAlmostEqual"], [306, 3, 1, "", "assertAsyncEqual"], [306, 3, 1, "", "assertAsyncRaises"], [306, 3, 1, "", "runAsync"], [306, 3, 1, "", "setUp"]], "ase2sprkkr.sprkkr.test.test_calculator": [[308, 2, 1, "", "CalculatorTest"]], "ase2sprkkr.sprkkr.test.test_calculator.CalculatorTest": [[308, 3, 1, "", "__init__"], [308, 3, 1, "", "test_calculator"], [308, 3, 1, "", "test_run"]], "ase2sprkkr.sprkkr.test.test_sites": [[310, 2, 1, "", "SitesTest"]], "ase2sprkkr.sprkkr.test.test_sites.SitesTest": [[310, 3, 1, "", "__init__"], [310, 3, 1, "", "test_occupancy"], [310, 3, 1, "", "test_vacuum"]], "ase2sprkkr.sprkkr.test.test_sprkkr_atoms": [[312, 2, 1, "", "SPRKKRAtomsTest"]], "ase2sprkkr.sprkkr.test.test_sprkkr_atoms.SPRKKRAtomsTest": [[312, 3, 1, "", "__init__"], [312, 3, 1, "", "test_atoms"], [312, 3, 1, "", "test_extend"], [312, 3, 1, "", "test_occupancy"], [312, 3, 1, "", "test_symmetry"]], "ase2sprkkr.sprkkr.test.test_sysfile": [[314, 2, 1, "", "SysfileTest"]], "ase2sprkkr.sprkkr.test.test_sysfile.SysfileTest": [[314, 3, 1, "", "__init__"], [314, 3, 1, "", "test"]], "ase2sprkkr.tools": [[316, 0, 0, "-", "a2s_visualise_in_struct"], [318, 0, 0, "-", "test"]], "ase2sprkkr.tools.a2s_visualise_in_struct": [[317, 1, 1, "", "visualise"]], "ase2sprkkr.tools.test": [[319, 0, 0, "-", "init_tests"], [321, 0, 0, "-", "test_tools"]], "ase2sprkkr.tools.test.init_tests": [[320, 2, 1, "", "TestCase"]], "ase2sprkkr.tools.test.init_tests.TestCase": [[320, 3, 1, "", "__init__"], [320, 3, 1, "", "assertAlmostEqual"], [320, 3, 1, "", "assertAsyncEqual"], [320, 3, 1, "", "assertAsyncRaises"], [320, 3, 1, "", "runAsync"], [320, 3, 1, "", "setUp"]], "ase2sprkkr.tools.test.test_tools": [[322, 2, 1, "", "CommonTest"]], "ase2sprkkr.tools.test.test_tools.CommonTest": [[322, 3, 1, "", "__init__"], [322, 3, 1, "", "test"]]}, "objtypes": {"0": "py:module", "1": "py:function", "2": "py:class", "3": "py:method", "4": "py:attribute", "5": "py:property", "6": "py:data"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "function", "Python function"], "2": ["py", "class", "Python class"], "3": ["py", "method", "Python method"], "4": ["py", "attribute", "Python attribute"], "5": ["py", "property", "Python property"], "6": ["py", "data", "Python data"]}, "titleterms": {"ase2sprkkr": [0, 1, 324, 326, 327, 331], "useful": [0, 327, 329], "link": [0, 327, 329], "instal": [0, 326, 328, 331], "packag": [0, 326, 327, 328, 330], "us": [0, 326, 328, 331], "manag": [0, 326, 328], "further": [0, 326, 328], "note": [0, 326, 328, 331], "from": [0, 326, 328], "git": [0, 326, 328], "sourc": [0, 326, 328], "code": [0, 326, 328], "requir": [0, 326, 328], "obtain": [0, 326, 328], "without": [0, 326, 328], "pip": [0, 326, 328], "conda": [0, 326, 328], "build": [0, 326, 328], "wheel": [0, 326, 328], "One": [0, 326, 328], "step": [0, 326, 328], "document": [0, 326, 327, 328], "how": [0, 326, 328, 331], "contribut": [0, 326, 328, 331], "report": [0, 326, 328, 331], "bug": [0, 326, 328], "ase": 2, "visualis": [3, 317], "view": 4, "bind": 5, "es_find": 6, "emptyspheresresult": 7, "add_empty_spher": 8, "empty_spher": 9, "spglib": 10, "spacegroupinfo": 11, "possibly_equivalent_sit": 12, "common": [13, 330], "alternative_typ": 14, "allowed_typ": 15, "normalize_typ": 16, "normalize_type_map": 17, "types_altern": 18, "configur": [19, 20, 267, 330], "configuration_contain": 21, "basesect": 22, "configurationcontain": 23, "todo": [23, 302], "customsect": 24, "rootconfigurationcontain": 25, "section": [26, 151, 210, 215, 219, 223, 227, 231, 235, 239], "configuration_definit": 27, "basedefinit": 28, "configurationrootdefinit": 29, "containerdefinit": 30, "sectiondefinit": 31, "valuedefinit": 32, "add_excluded_names_condit": 33, "unique_dict": 34, "decor": 35, "add_called_class_as_argu": 36, "add_to_signatur": 37, "cach": 38, "cached_class_properti": 39, "cached_properti": 40, "class_properti": 41, "doc": 42, "process_input_parameters_definit": 43, "verbatim": 44, "format": 45, "fortran_format": 46, "grammar": 47, "white": 48, "addconditionex": 49, "addparseactionex": 50, "delimitedlist": 51, "end_of_fil": 52, "generate_grammar": 53, "line_end": 54, "optional_line_end": 55, "optional_quot": 56, "replace_whitechar": 57, "separ": [58, 83, 104, 245], "separator_pattern": 59, "grammar_typ": 60, "arrai": 61, "basemix": 62, "baserealwithunit": 63, "basestr": 64, "bool": 65, "complex": 66, "date": [67, 93], "defkeyword": 68, "energi": [69, 94, 154], "flag": [70, 95], "grammartyp": 71, "integ": [72, 97], "keyword": 73, "linestr": 74, "mix": [75, 99], "number": 76, "objectnumb": 77, "potmix": 78, "qstring": [79, 101], "rang": 80, "real": [81, 102], "realwithunit": 82, "sequenc": 84, "setof": 85, "string": [86, 107], "tabl": [87, 327], "typedgrammartyp": 88, "unsign": [89, 113], "boolean": 90, "compare_numpy_valu": 91, "complex_numb": 92, "format_for_typ": 96, "line_str": 98, "pot_mix": 100, "recognized_set_typ": 103, "set_of_integ": 105, "set_of_r": 106, "type_from_default_valu": 108, "type_from_set_map": 109, "type_from_typ": 110, "type_from_type_map": 111, "type_from_valu": 112, "init_test": [114, 133, 169, 192, 253, 305, 319], "testcas": [115, 134, 170, 193, 254, 306, 320], "patch_packag": 116, "misc": 117, "ordereddict": 118, "as_integ": 119, "copy_list": 120, "njit": 121, "numpy_index": 122, "no_output": 123, "nooutput": 124, "option": [125, 128], "customopt": 126, "dangerousvalu": 127, "process_output_read": 129, "asynciofileread": 130, "baseprocessoutputread": 131, "test": [132, 168, 191, 252, 304, 318], "test_common": 135, "commontest": [136, 322], "test_grammar_typ": 137, "grammartest": 138, "unique_valu": 139, "uniquevaluesmap": 140, "input_paramet": [141, 144, 146, 148, 150, 161, 330, 331], "definit": [142, 207], "arp": 143, "do": 145, "phagen": 147, "scf": [149, 156, 185], "control": 152, "cpa": 153, "mode": 155, "site": [157, 232, 289, 290, 295], "strconst": 158, "task": [159, 331], "tau": 160, "inputparamet": [162, 331], "resolve_executable_postfix": 163, "input_parameters_definit": 164, "inputparametersdefinit": 165, "inputsectiondefinit": 166, "inputvaluedefinit": 167, "test_definit": 171, "testdefinit": 172, "test_input_paramet": 173, "testinputparamet": 174, "output": [175, 330], "output_definit": 176, "outputnonamevaluedefinit": 177, "outputsectiondefinit": 178, "outputvaluedefinit": 179, "outputvalueequaldefinit": 180, "reader": 181, "default": 182, "defaultoutputread": 183, "defaultresult": 184, "scfoutputread": 186, "scfresult": 187, "task_result": 188, "outputread": 189, "taskresult": 190, "test_output": 194, "testoutput": 195, "physic": 196, "lattice_data": 197, "latticedata": 198, "winger_seitz_radii": [199, 200], "potenti": [201, 208, 250, 251, 330, 331], "custom_potential_sect": 202, "custompotentialsect": 203, "custompotentialsectiondefinit": 204, "customsectiontoken": 205, "sectionstr": 206, "potential_definit": [209, 240], "_section": 211, "global_system_paramet": 212, "globalsystemparamet": 213, "globalsystemparameterdefinit": 214, "lattic": 216, "latticesect": 217, "latticesectiondefinit": 218, "mesh_inform": 220, "meshinformationsect": 221, "meshinformationsectiondefinit": 222, "occup": [224, 282, 283], "occupationsect": 225, "occupationsectiondefinit": 226, "reference_system": [228, 287], "referencesystemsect": 229, "referencesystemsectiondefinit": 230, "sitessect": 233, "sitessectiondefinit": 234, "type": [236, 331], "typessect": 237, "typessectiondefinit": 238, "asearraysectiondefinit": 241, "potsectiondefinit": 242, "potvaluedefinit": 243, "potentialdefinit": 244, "potential_sect": 246, "asearraysect": 247, "potentialsect": 248, "uniquelistsect": 249, "test_custom_sect": 255, "testcustomsect": 256, "test_potenti": 257, "testpotenti": 258, "test_structur": 259, "teststructur": 260, "sprkkr": [261, 266, 330], "atomic_typ": 262, "atomictyp": [263, 294], "calcul": [264, 331], "modul": [264, 323], "filenametempl": 265, "configurationfil": 268, "configurationfiledefinit": 269, "configurationsect": 270, "configurationsectiondefinit": 271, "configurationsectiontrait": 272, "configurationvalu": 273, "configurationvaluedefinit": 274, "customconfigurationsect": 275, "customconfigurationvalu": 276, "io_data": 277, "baseiodata": 278, "readiodata": 279, "writeiodata": 280, "unique_map": 281, "radial_mesh": 284, "exponentialmesh": 285, "mesh": 286, "referencesystem": 288, "sprkkr_atom": 291, "sprkkratom": 292, "sprkkr_grammar_typ": 293, "structur": [296, 330], "atomdata": 297, "layerdata": 298, "floatjm": 299, "structure_file_to_atom": 300, "sysfil": 301, "sysfile_cont": 302, "write_sysfil": 303, "test_calcul": 307, "calculatortest": 308, "test_sit": 309, "sitestest": 310, "test_sprkkr_atom": 311, "sprkkratomstest": 312, "test_sysfil": 313, "sysfiletest": 314, "tool": [315, 330, 331], "a2s_visualise_in_struct": 316, "test_tool": 321, "version": [323, 325], "changelog": 325, "1": 325, "0": 325, "6": 325, "7": 325, "2": 325, "beta1": 325, "user": 325, "interfac": 325, "architectur": 325, "chang": 325, "more": [326, 331], "about": [326, 331], "softwar": 327, "content": 327, "class": 327, "indic": 327, "ase2spr": 330, "kkr": 330, "": 330, "philosophi": 330, "develop": 330, "The": 330, "base": 330, "read": [330, 331], "file": [330, 331], "write": 330, "run": [330, 331], "program": 330, "usag": 331, "comput": 331, "bulk": 331, "materi": 331, "defin": 331, "properti": 331, "result": 331, "set": 331, "input": 331, "paramet": 331, "work": 331, "object": 331, "subsequ": 331, "gener": 331, "A": 331, "atom": 331, "mpi": 331, "bundl": 331, "error": 331}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 6, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.todo": 2, "sphinx.ext.viewcode": 1, "sphinx": 56}})