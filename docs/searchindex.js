Search.setIndex({"docnames": ["README", "auto/ase2sprkkr", "auto/ase2sprkkr.bindings", "auto/ase2sprkkr.bindings.spglib", "auto/ase2sprkkr.bindings.spglib.compute_spacegroup", "auto/ase2sprkkr.bindings.spglib.equivalent_sites_for_spacegroup", "auto/ase2sprkkr.bindings.spglib.possibly_equivalent_sites", "auto/ase2sprkkr.bindings.spglib.spacegroup_dataset", "auto/ase2sprkkr.common", "auto/ase2sprkkr.common.base_configuration", "auto/ase2sprkkr.common.base_configuration.BaseConfiguration", "auto/ase2sprkkr.common.configuration_containers", "auto/ase2sprkkr.common.configuration_containers.BaseSection", "auto/ase2sprkkr.common.configuration_containers.ConfigurationContainer", "auto/ase2sprkkr.common.configuration_containers.CustomSection", "auto/ase2sprkkr.common.configuration_containers.RootConfigurationContainer", "auto/ase2sprkkr.common.configuration_containers.Section", "auto/ase2sprkkr.common.configuration_definitions", "auto/ase2sprkkr.common.configuration_definitions.BaseContainerDefinition", "auto/ase2sprkkr.common.configuration_definitions.BaseDefinition", "auto/ase2sprkkr.common.configuration_definitions.BaseSectionDefinition", "auto/ase2sprkkr.common.configuration_definitions.BaseValueDefinition", "auto/ase2sprkkr.common.configuration_definitions.ConfDefinition", "auto/ase2sprkkr.common.configuration_definitions.add_excluded_names_condition", "auto/ase2sprkkr.common.configuration_definitions.unique_dict", "auto/ase2sprkkr.common.formats", "auto/ase2sprkkr.common.formats.fortran_format", "auto/ase2sprkkr.common.grammar", "auto/ase2sprkkr.common.grammar.White", "auto/ase2sprkkr.common.grammar.addConditionEx", "auto/ase2sprkkr.common.grammar.addParseActionEx", "auto/ase2sprkkr.common.grammar.delimitedList", "auto/ase2sprkkr.common.grammar.end_of_file", "auto/ase2sprkkr.common.grammar.generate_grammar", "auto/ase2sprkkr.common.grammar.line_end", "auto/ase2sprkkr.common.grammar.optional_line_end", "auto/ase2sprkkr.common.grammar.optional_quote", "auto/ase2sprkkr.common.grammar.replace_whitechars", "auto/ase2sprkkr.common.grammar.separator", "auto/ase2sprkkr.common.grammar.separator_pattern", "auto/ase2sprkkr.common.grammar_types", "auto/ase2sprkkr.common.grammar_types.Array", "auto/ase2sprkkr.common.grammar_types.BaseMixed", "auto/ase2sprkkr.common.grammar_types.BaseRealWithUnits", "auto/ase2sprkkr.common.grammar_types.BaseString", "auto/ase2sprkkr.common.grammar_types.BaseType", "auto/ase2sprkkr.common.grammar_types.Bool", "auto/ase2sprkkr.common.grammar_types.Date", "auto/ase2sprkkr.common.grammar_types.DefKeyword", "auto/ase2sprkkr.common.grammar_types.Energy", "auto/ase2sprkkr.common.grammar_types.Flag", "auto/ase2sprkkr.common.grammar_types.Integer", "auto/ase2sprkkr.common.grammar_types.Keyword", "auto/ase2sprkkr.common.grammar_types.LineString", "auto/ase2sprkkr.common.grammar_types.Mixed", "auto/ase2sprkkr.common.grammar_types.PotMixed", "auto/ase2sprkkr.common.grammar_types.QString", "auto/ase2sprkkr.common.grammar_types.Range", "auto/ase2sprkkr.common.grammar_types.Real", "auto/ase2sprkkr.common.grammar_types.RealWithUnits", "auto/ase2sprkkr.common.grammar_types.Separator", "auto/ase2sprkkr.common.grammar_types.Sequence", "auto/ase2sprkkr.common.grammar_types.SetOf", "auto/ase2sprkkr.common.grammar_types.String", "auto/ase2sprkkr.common.grammar_types.Table", "auto/ase2sprkkr.common.grammar_types.Unsigned", "auto/ase2sprkkr.common.grammar_types.boolean", "auto/ase2sprkkr.common.grammar_types.energy", "auto/ase2sprkkr.common.grammar_types.flag", "auto/ase2sprkkr.common.grammar_types.format_for_type", "auto/ase2sprkkr.common.grammar_types.integer", "auto/ase2sprkkr.common.grammar_types.line_string", "auto/ase2sprkkr.common.grammar_types.mixed", "auto/ase2sprkkr.common.grammar_types.normalize_type", "auto/ase2sprkkr.common.grammar_types.normalize_type_map", "auto/ase2sprkkr.common.grammar_types.pot_mixed", "auto/ase2sprkkr.common.grammar_types.qstring", "auto/ase2sprkkr.common.grammar_types.real", "auto/ase2sprkkr.common.grammar_types.separator", "auto/ase2sprkkr.common.grammar_types.string", "auto/ase2sprkkr.common.grammar_types.type_from_default_value", "auto/ase2sprkkr.common.grammar_types.type_from_set_map", "auto/ase2sprkkr.common.grammar_types.type_from_type", "auto/ase2sprkkr.common.grammar_types.type_from_type_map", "auto/ase2sprkkr.common.grammar_types.type_from_value", "auto/ase2sprkkr.common.grammar_types.unsigned", "auto/ase2sprkkr.common.init_tests", "auto/ase2sprkkr.common.init_tests.TestCase", "auto/ase2sprkkr.common.init_tests.patch_package", "auto/ase2sprkkr.common.misc", "auto/ase2sprkkr.common.misc.OrderedDict", "auto/ase2sprkkr.common.misc.add_to_signature", "auto/ase2sprkkr.common.misc.class_property", "auto/ase2sprkkr.common.misc.copy_list", "auto/ase2sprkkr.common.misc.lazy_value", "auto/ase2sprkkr.common.misc.njit", "auto/ase2sprkkr.common.misc.numpy_index", "auto/ase2sprkkr.common.no_output", "auto/ase2sprkkr.common.no_output.NoOutput", "auto/ase2sprkkr.common.options", "auto/ase2sprkkr.common.options.CustomOption", "auto/ase2sprkkr.common.options.Option", "auto/ase2sprkkr.common.process_output_reader", "auto/ase2sprkkr.common.process_output_reader.AsyncioFileReader", "auto/ase2sprkkr.common.process_output_reader.BaseProcessOutputReader", "auto/ase2sprkkr.common.test", "auto/ase2sprkkr.common.test.init_tests", "auto/ase2sprkkr.common.test.init_tests.TestCase", "auto/ase2sprkkr.common.test.test_common", "auto/ase2sprkkr.common.test.test_common.CommonTest", "auto/ase2sprkkr.common.test.test_grammar_types", "auto/ase2sprkkr.common.test.test_grammar_types.GrammarTest", "auto/ase2sprkkr.common.unique_values", "auto/ase2sprkkr.common.unique_values.UniqueValuesMapping", "auto/ase2sprkkr.input_parameters", "auto/ase2sprkkr.input_parameters.definitions", "auto/ase2sprkkr.input_parameters.definitions.arpes", "auto/ase2sprkkr.input_parameters.definitions.arpes.input_parameters", "auto/ase2sprkkr.input_parameters.definitions.dos", "auto/ase2sprkkr.input_parameters.definitions.dos.input_parameters", "auto/ase2sprkkr.input_parameters.definitions.phagen", "auto/ase2sprkkr.input_parameters.definitions.phagen.input_parameters", "auto/ase2sprkkr.input_parameters.definitions.scf", "auto/ase2sprkkr.input_parameters.definitions.scf.input_parameters", "auto/ase2sprkkr.input_parameters.definitions.sections", "auto/ase2sprkkr.input_parameters.definitions.sections.CONTROL", "auto/ase2sprkkr.input_parameters.definitions.sections.ENERGY", "auto/ase2sprkkr.input_parameters.definitions.sections.SCF", "auto/ase2sprkkr.input_parameters.definitions.sections.SITES", "auto/ase2sprkkr.input_parameters.definitions.sections.TASK", "auto/ase2sprkkr.input_parameters.definitions.sections.TAU", "auto/ase2sprkkr.input_parameters.input_parameters", "auto/ase2sprkkr.input_parameters.input_parameters.InputParameters", "auto/ase2sprkkr.input_parameters.input_parameters.resolve_executable_postfix", "auto/ase2sprkkr.input_parameters.input_parameters_definitions", "auto/ase2sprkkr.input_parameters.input_parameters_definitions.InputParametersDefinition", "auto/ase2sprkkr.input_parameters.input_parameters_definitions.SectionDefinition", "auto/ase2sprkkr.input_parameters.input_parameters_definitions.ValueDefinition", "auto/ase2sprkkr.input_parameters.test", "auto/ase2sprkkr.input_parameters.test.init_tests", "auto/ase2sprkkr.input_parameters.test.init_tests.TestCase", "auto/ase2sprkkr.input_parameters.test.test_definitions", "auto/ase2sprkkr.input_parameters.test.test_definitions.TestDefinitions", "auto/ase2sprkkr.input_parameters.test.test_input_parameters", "auto/ase2sprkkr.input_parameters.test.test_input_parameters.TestInputParameters", "auto/ase2sprkkr.outputs", "auto/ase2sprkkr.outputs.output_definitions", "auto/ase2sprkkr.outputs.output_definitions.OutputNonameValueDefinition", "auto/ase2sprkkr.outputs.output_definitions.OutputSectionDefinition", "auto/ase2sprkkr.outputs.output_definitions.OutputValueDefinition", "auto/ase2sprkkr.outputs.output_definitions.OutputValueEqualDefinition", "auto/ase2sprkkr.outputs.readers", "auto/ase2sprkkr.outputs.readers.default", "auto/ase2sprkkr.outputs.readers.default.DefaultOutputReader", "auto/ase2sprkkr.outputs.readers.default.DefaultResult", "auto/ase2sprkkr.outputs.readers.scf", "auto/ase2sprkkr.outputs.readers.scf.ScfOutputReader", "auto/ase2sprkkr.outputs.readers.scf.ScfResult", "auto/ase2sprkkr.outputs.task_result", "auto/ase2sprkkr.outputs.task_result.OutputReader", "auto/ase2sprkkr.outputs.task_result.TaskResult", "auto/ase2sprkkr.outputs.test", "auto/ase2sprkkr.outputs.test.init_tests", "auto/ase2sprkkr.outputs.test.init_tests.TestCase", "auto/ase2sprkkr.outputs.test.test_output", "auto/ase2sprkkr.outputs.test.test_output.TestOutput", "auto/ase2sprkkr.physics", "auto/ase2sprkkr.physics.lattice_data", "auto/ase2sprkkr.physics.lattice_data.LatticeData", "auto/ase2sprkkr.potentials", "auto/ase2sprkkr.potentials.custom_potential_section", "auto/ase2sprkkr.potentials.custom_potential_section.CustomPotentialSection", "auto/ase2sprkkr.potentials.custom_potential_section.CustomPotentialSectionDefinition", "auto/ase2sprkkr.potentials.custom_potential_section.CustomSectionToken", "auto/ase2sprkkr.potentials.custom_potential_section.SectionString", "auto/ase2sprkkr.potentials.definitions", "auto/ase2sprkkr.potentials.definitions.potential", "auto/ase2sprkkr.potentials.definitions.potential.potential_definition", "auto/ase2sprkkr.potentials.definitions.sections", "auto/ase2sprkkr.potentials.definitions.sections._sections", "auto/ase2sprkkr.potentials.definitions.sections.global_system_parameter", "auto/ase2sprkkr.potentials.definitions.sections.global_system_parameter.GlobalSystemParameter", "auto/ase2sprkkr.potentials.definitions.sections.global_system_parameter.GlobalSystemParameterDefinition", "auto/ase2sprkkr.potentials.definitions.sections.global_system_parameter.section", "auto/ase2sprkkr.potentials.definitions.sections.lattice", "auto/ase2sprkkr.potentials.definitions.sections.lattice.LatticeSection", "auto/ase2sprkkr.potentials.definitions.sections.lattice.LatticeSectionDefinition", "auto/ase2sprkkr.potentials.definitions.sections.lattice.section", "auto/ase2sprkkr.potentials.definitions.sections.mesh_information", "auto/ase2sprkkr.potentials.definitions.sections.mesh_information.MeshInformationSection", "auto/ase2sprkkr.potentials.definitions.sections.mesh_information.MeshInformationSectionDefinition", "auto/ase2sprkkr.potentials.definitions.sections.mesh_information.section", "auto/ase2sprkkr.potentials.definitions.sections.occupation", "auto/ase2sprkkr.potentials.definitions.sections.occupation.OccupationSection", "auto/ase2sprkkr.potentials.definitions.sections.occupation.OccupationSectionDefinition", "auto/ase2sprkkr.potentials.definitions.sections.occupation.section", "auto/ase2sprkkr.potentials.definitions.sections.reference_system", "auto/ase2sprkkr.potentials.definitions.sections.reference_system.ReferenceSystemSection", "auto/ase2sprkkr.potentials.definitions.sections.reference_system.ReferenceSystemSectionDefinition", "auto/ase2sprkkr.potentials.definitions.sections.reference_system.section", "auto/ase2sprkkr.potentials.definitions.sections.sites", "auto/ase2sprkkr.potentials.definitions.sections.sites.SitesSection", "auto/ase2sprkkr.potentials.definitions.sections.sites.SitesSectionDefinition", "auto/ase2sprkkr.potentials.definitions.sections.sites.section", "auto/ase2sprkkr.potentials.definitions.sections.types", "auto/ase2sprkkr.potentials.definitions.sections.types.TypesSection", "auto/ase2sprkkr.potentials.definitions.sections.types.TypesSectionDefinition", "auto/ase2sprkkr.potentials.definitions.sections.types.section", "auto/ase2sprkkr.potentials.io_data", "auto/ase2sprkkr.potentials.io_data.BaseIoData", "auto/ase2sprkkr.potentials.io_data.ReadIoData", "auto/ase2sprkkr.potentials.io_data.WriteIoData", "auto/ase2sprkkr.potentials.io_data.unique_mapping", "auto/ase2sprkkr.potentials.potential_definitions", "auto/ase2sprkkr.potentials.potential_definitions.ASEArraySectionDefinition", "auto/ase2sprkkr.potentials.potential_definitions.PotSectionDefinition", "auto/ase2sprkkr.potentials.potential_definitions.PotValueDefinition", "auto/ase2sprkkr.potentials.potential_definitions.PotentialDefinition", "auto/ase2sprkkr.potentials.potential_definitions.Separator", "auto/ase2sprkkr.potentials.potential_sections", "auto/ase2sprkkr.potentials.potential_sections.ASEArraySection", "auto/ase2sprkkr.potentials.potential_sections.PotentialSection", "auto/ase2sprkkr.potentials.potential_sections.UniqueListSection", "auto/ase2sprkkr.potentials.potentials", "auto/ase2sprkkr.potentials.potentials.Potential", "auto/ase2sprkkr.potentials.test", "auto/ase2sprkkr.potentials.test.init_tests", "auto/ase2sprkkr.potentials.test.init_tests.TestCase", "auto/ase2sprkkr.potentials.test.test_custom_section", "auto/ase2sprkkr.potentials.test.test_custom_section.TestCustomSection", "auto/ase2sprkkr.potentials.test.test_potential", "auto/ase2sprkkr.potentials.test.test_potential.TestPotential", "auto/ase2sprkkr.potentials.test.test_structure", "auto/ase2sprkkr.potentials.test.test_structure.TestStructure", "auto/ase2sprkkr.sprkkr", "auto/ase2sprkkr.sprkkr.atomic_types", "auto/ase2sprkkr.sprkkr.atomic_types.AtomicType", "auto/ase2sprkkr.sprkkr.calculator", "auto/ase2sprkkr.sprkkr.calculator.FilenameTemplator", "auto/ase2sprkkr.sprkkr.calculator.SPRKKR", "auto/ase2sprkkr.sprkkr.occupations", "auto/ase2sprkkr.sprkkr.occupations.Occupation", "auto/ase2sprkkr.sprkkr.radial_meshes", "auto/ase2sprkkr.sprkkr.radial_meshes.ExponentialMesh", "auto/ase2sprkkr.sprkkr.radial_meshes.Mesh", "auto/ase2sprkkr.sprkkr.reference_systems", "auto/ase2sprkkr.sprkkr.reference_systems.ReferenceSystem", "auto/ase2sprkkr.sprkkr.sites", "auto/ase2sprkkr.sprkkr.sites.Site", "auto/ase2sprkkr.sprkkr.sprkkr_atoms", "auto/ase2sprkkr.sprkkr.sprkkr_atoms.SPRKKRAtoms", "auto/ase2sprkkr.sprkkr.structure", "auto/ase2sprkkr.sprkkr.structure.AtomData", "auto/ase2sprkkr.sprkkr.structure.LayerData", "auto/ase2sprkkr.sprkkr.structure.floatjm", "auto/ase2sprkkr.sprkkr.structure.structure_file_to_atoms", "auto/ase2sprkkr.sprkkr.sysfile", "auto/ase2sprkkr.sprkkr.sysfile.sysfile_content", "auto/ase2sprkkr.sprkkr.sysfile.write_sysfile", "auto/ase2sprkkr.sprkkr.test", "auto/ase2sprkkr.sprkkr.test.init_tests", "auto/ase2sprkkr.sprkkr.test.init_tests.TestCase", "auto/ase2sprkkr.sprkkr.test.test_calculator", "auto/ase2sprkkr.sprkkr.test.test_calculator.CalculatorTest", "auto/ase2sprkkr.sprkkr.test.test_sprkkr_atoms", "auto/ase2sprkkr.sprkkr.test.test_sprkkr_atoms.SPRKKRAtomsTest", "auto/ase2sprkkr.sprkkr.test.test_sysfile", "auto/ase2sprkkr.sprkkr.test.test_sysfile.SysfileTest", "auto/ase2sprkkr.tools", "auto/ase2sprkkr.tools.a2s_visualise_in_struct", "auto/ase2sprkkr.tools.a2s_visualise_in_struct.visualise", "auto/ase2sprkkr.version", "auto/modules", "how-to-install", "index", "installation", "introduction", "philosophy", "usage"], "filenames": ["README.rst", "auto/ase2sprkkr.rst", "auto/ase2sprkkr.bindings.rst", "auto/ase2sprkkr.bindings.spglib.rst", "auto/ase2sprkkr.bindings.spglib.compute_spacegroup.rst", "auto/ase2sprkkr.bindings.spglib.equivalent_sites_for_spacegroup.rst", "auto/ase2sprkkr.bindings.spglib.possibly_equivalent_sites.rst", "auto/ase2sprkkr.bindings.spglib.spacegroup_dataset.rst", "auto/ase2sprkkr.common.rst", "auto/ase2sprkkr.common.base_configuration.rst", "auto/ase2sprkkr.common.base_configuration.BaseConfiguration.rst", "auto/ase2sprkkr.common.configuration_containers.rst", "auto/ase2sprkkr.common.configuration_containers.BaseSection.rst", "auto/ase2sprkkr.common.configuration_containers.ConfigurationContainer.rst", "auto/ase2sprkkr.common.configuration_containers.CustomSection.rst", "auto/ase2sprkkr.common.configuration_containers.RootConfigurationContainer.rst", "auto/ase2sprkkr.common.configuration_containers.Section.rst", "auto/ase2sprkkr.common.configuration_definitions.rst", "auto/ase2sprkkr.common.configuration_definitions.BaseContainerDefinition.rst", "auto/ase2sprkkr.common.configuration_definitions.BaseDefinition.rst", "auto/ase2sprkkr.common.configuration_definitions.BaseSectionDefinition.rst", "auto/ase2sprkkr.common.configuration_definitions.BaseValueDefinition.rst", "auto/ase2sprkkr.common.configuration_definitions.ConfDefinition.rst", "auto/ase2sprkkr.common.configuration_definitions.add_excluded_names_condition.rst", "auto/ase2sprkkr.common.configuration_definitions.unique_dict.rst", "auto/ase2sprkkr.common.formats.rst", "auto/ase2sprkkr.common.formats.fortran_format.rst", "auto/ase2sprkkr.common.grammar.rst", "auto/ase2sprkkr.common.grammar.White.rst", "auto/ase2sprkkr.common.grammar.addConditionEx.rst", "auto/ase2sprkkr.common.grammar.addParseActionEx.rst", "auto/ase2sprkkr.common.grammar.delimitedList.rst", "auto/ase2sprkkr.common.grammar.end_of_file.rst", "auto/ase2sprkkr.common.grammar.generate_grammar.rst", "auto/ase2sprkkr.common.grammar.line_end.rst", "auto/ase2sprkkr.common.grammar.optional_line_end.rst", "auto/ase2sprkkr.common.grammar.optional_quote.rst", "auto/ase2sprkkr.common.grammar.replace_whitechars.rst", "auto/ase2sprkkr.common.grammar.separator.rst", "auto/ase2sprkkr.common.grammar.separator_pattern.rst", "auto/ase2sprkkr.common.grammar_types.rst", "auto/ase2sprkkr.common.grammar_types.Array.rst", "auto/ase2sprkkr.common.grammar_types.BaseMixed.rst", "auto/ase2sprkkr.common.grammar_types.BaseRealWithUnits.rst", "auto/ase2sprkkr.common.grammar_types.BaseString.rst", "auto/ase2sprkkr.common.grammar_types.BaseType.rst", "auto/ase2sprkkr.common.grammar_types.Bool.rst", "auto/ase2sprkkr.common.grammar_types.Date.rst", "auto/ase2sprkkr.common.grammar_types.DefKeyword.rst", "auto/ase2sprkkr.common.grammar_types.Energy.rst", "auto/ase2sprkkr.common.grammar_types.Flag.rst", "auto/ase2sprkkr.common.grammar_types.Integer.rst", "auto/ase2sprkkr.common.grammar_types.Keyword.rst", "auto/ase2sprkkr.common.grammar_types.LineString.rst", "auto/ase2sprkkr.common.grammar_types.Mixed.rst", "auto/ase2sprkkr.common.grammar_types.PotMixed.rst", "auto/ase2sprkkr.common.grammar_types.QString.rst", "auto/ase2sprkkr.common.grammar_types.Range.rst", "auto/ase2sprkkr.common.grammar_types.Real.rst", "auto/ase2sprkkr.common.grammar_types.RealWithUnits.rst", "auto/ase2sprkkr.common.grammar_types.Separator.rst", "auto/ase2sprkkr.common.grammar_types.Sequence.rst", "auto/ase2sprkkr.common.grammar_types.SetOf.rst", "auto/ase2sprkkr.common.grammar_types.String.rst", "auto/ase2sprkkr.common.grammar_types.Table.rst", "auto/ase2sprkkr.common.grammar_types.Unsigned.rst", "auto/ase2sprkkr.common.grammar_types.boolean.rst", "auto/ase2sprkkr.common.grammar_types.energy.rst", "auto/ase2sprkkr.common.grammar_types.flag.rst", "auto/ase2sprkkr.common.grammar_types.format_for_type.rst", "auto/ase2sprkkr.common.grammar_types.integer.rst", "auto/ase2sprkkr.common.grammar_types.line_string.rst", "auto/ase2sprkkr.common.grammar_types.mixed.rst", "auto/ase2sprkkr.common.grammar_types.normalize_type.rst", "auto/ase2sprkkr.common.grammar_types.normalize_type_map.rst", "auto/ase2sprkkr.common.grammar_types.pot_mixed.rst", "auto/ase2sprkkr.common.grammar_types.qstring.rst", "auto/ase2sprkkr.common.grammar_types.real.rst", "auto/ase2sprkkr.common.grammar_types.separator.rst", "auto/ase2sprkkr.common.grammar_types.string.rst", "auto/ase2sprkkr.common.grammar_types.type_from_default_value.rst", "auto/ase2sprkkr.common.grammar_types.type_from_set_map.rst", "auto/ase2sprkkr.common.grammar_types.type_from_type.rst", "auto/ase2sprkkr.common.grammar_types.type_from_type_map.rst", "auto/ase2sprkkr.common.grammar_types.type_from_value.rst", "auto/ase2sprkkr.common.grammar_types.unsigned.rst", "auto/ase2sprkkr.common.init_tests.rst", "auto/ase2sprkkr.common.init_tests.TestCase.rst", "auto/ase2sprkkr.common.init_tests.patch_package.rst", "auto/ase2sprkkr.common.misc.rst", "auto/ase2sprkkr.common.misc.OrderedDict.rst", "auto/ase2sprkkr.common.misc.add_to_signature.rst", "auto/ase2sprkkr.common.misc.class_property.rst", "auto/ase2sprkkr.common.misc.copy_list.rst", "auto/ase2sprkkr.common.misc.lazy_value.rst", "auto/ase2sprkkr.common.misc.njit.rst", "auto/ase2sprkkr.common.misc.numpy_index.rst", "auto/ase2sprkkr.common.no_output.rst", "auto/ase2sprkkr.common.no_output.NoOutput.rst", "auto/ase2sprkkr.common.options.rst", "auto/ase2sprkkr.common.options.CustomOption.rst", "auto/ase2sprkkr.common.options.Option.rst", "auto/ase2sprkkr.common.process_output_reader.rst", "auto/ase2sprkkr.common.process_output_reader.AsyncioFileReader.rst", "auto/ase2sprkkr.common.process_output_reader.BaseProcessOutputReader.rst", "auto/ase2sprkkr.common.test.rst", "auto/ase2sprkkr.common.test.init_tests.rst", "auto/ase2sprkkr.common.test.init_tests.TestCase.rst", "auto/ase2sprkkr.common.test.test_common.rst", "auto/ase2sprkkr.common.test.test_common.CommonTest.rst", "auto/ase2sprkkr.common.test.test_grammar_types.rst", "auto/ase2sprkkr.common.test.test_grammar_types.GrammarTest.rst", "auto/ase2sprkkr.common.unique_values.rst", "auto/ase2sprkkr.common.unique_values.UniqueValuesMapping.rst", "auto/ase2sprkkr.input_parameters.rst", "auto/ase2sprkkr.input_parameters.definitions.rst", "auto/ase2sprkkr.input_parameters.definitions.arpes.rst", "auto/ase2sprkkr.input_parameters.definitions.arpes.input_parameters.rst", "auto/ase2sprkkr.input_parameters.definitions.dos.rst", "auto/ase2sprkkr.input_parameters.definitions.dos.input_parameters.rst", "auto/ase2sprkkr.input_parameters.definitions.phagen.rst", "auto/ase2sprkkr.input_parameters.definitions.phagen.input_parameters.rst", "auto/ase2sprkkr.input_parameters.definitions.scf.rst", "auto/ase2sprkkr.input_parameters.definitions.scf.input_parameters.rst", "auto/ase2sprkkr.input_parameters.definitions.sections.rst", "auto/ase2sprkkr.input_parameters.definitions.sections.CONTROL.rst", "auto/ase2sprkkr.input_parameters.definitions.sections.ENERGY.rst", "auto/ase2sprkkr.input_parameters.definitions.sections.SCF.rst", "auto/ase2sprkkr.input_parameters.definitions.sections.SITES.rst", "auto/ase2sprkkr.input_parameters.definitions.sections.TASK.rst", "auto/ase2sprkkr.input_parameters.definitions.sections.TAU.rst", "auto/ase2sprkkr.input_parameters.input_parameters.rst", "auto/ase2sprkkr.input_parameters.input_parameters.InputParameters.rst", "auto/ase2sprkkr.input_parameters.input_parameters.resolve_executable_postfix.rst", "auto/ase2sprkkr.input_parameters.input_parameters_definitions.rst", "auto/ase2sprkkr.input_parameters.input_parameters_definitions.InputParametersDefinition.rst", "auto/ase2sprkkr.input_parameters.input_parameters_definitions.SectionDefinition.rst", "auto/ase2sprkkr.input_parameters.input_parameters_definitions.ValueDefinition.rst", "auto/ase2sprkkr.input_parameters.test.rst", "auto/ase2sprkkr.input_parameters.test.init_tests.rst", "auto/ase2sprkkr.input_parameters.test.init_tests.TestCase.rst", "auto/ase2sprkkr.input_parameters.test.test_definitions.rst", "auto/ase2sprkkr.input_parameters.test.test_definitions.TestDefinitions.rst", "auto/ase2sprkkr.input_parameters.test.test_input_parameters.rst", "auto/ase2sprkkr.input_parameters.test.test_input_parameters.TestInputParameters.rst", "auto/ase2sprkkr.outputs.rst", "auto/ase2sprkkr.outputs.output_definitions.rst", "auto/ase2sprkkr.outputs.output_definitions.OutputNonameValueDefinition.rst", "auto/ase2sprkkr.outputs.output_definitions.OutputSectionDefinition.rst", "auto/ase2sprkkr.outputs.output_definitions.OutputValueDefinition.rst", "auto/ase2sprkkr.outputs.output_definitions.OutputValueEqualDefinition.rst", "auto/ase2sprkkr.outputs.readers.rst", "auto/ase2sprkkr.outputs.readers.default.rst", "auto/ase2sprkkr.outputs.readers.default.DefaultOutputReader.rst", "auto/ase2sprkkr.outputs.readers.default.DefaultResult.rst", "auto/ase2sprkkr.outputs.readers.scf.rst", "auto/ase2sprkkr.outputs.readers.scf.ScfOutputReader.rst", "auto/ase2sprkkr.outputs.readers.scf.ScfResult.rst", "auto/ase2sprkkr.outputs.task_result.rst", "auto/ase2sprkkr.outputs.task_result.OutputReader.rst", "auto/ase2sprkkr.outputs.task_result.TaskResult.rst", "auto/ase2sprkkr.outputs.test.rst", "auto/ase2sprkkr.outputs.test.init_tests.rst", "auto/ase2sprkkr.outputs.test.init_tests.TestCase.rst", "auto/ase2sprkkr.outputs.test.test_output.rst", "auto/ase2sprkkr.outputs.test.test_output.TestOutput.rst", "auto/ase2sprkkr.physics.rst", "auto/ase2sprkkr.physics.lattice_data.rst", "auto/ase2sprkkr.physics.lattice_data.LatticeData.rst", "auto/ase2sprkkr.potentials.rst", "auto/ase2sprkkr.potentials.custom_potential_section.rst", "auto/ase2sprkkr.potentials.custom_potential_section.CustomPotentialSection.rst", "auto/ase2sprkkr.potentials.custom_potential_section.CustomPotentialSectionDefinition.rst", "auto/ase2sprkkr.potentials.custom_potential_section.CustomSectionToken.rst", "auto/ase2sprkkr.potentials.custom_potential_section.SectionString.rst", "auto/ase2sprkkr.potentials.definitions.rst", "auto/ase2sprkkr.potentials.definitions.potential.rst", "auto/ase2sprkkr.potentials.definitions.potential.potential_definition.rst", "auto/ase2sprkkr.potentials.definitions.sections.rst", "auto/ase2sprkkr.potentials.definitions.sections._sections.rst", "auto/ase2sprkkr.potentials.definitions.sections.global_system_parameter.rst", "auto/ase2sprkkr.potentials.definitions.sections.global_system_parameter.GlobalSystemParameter.rst", "auto/ase2sprkkr.potentials.definitions.sections.global_system_parameter.GlobalSystemParameterDefinition.rst", "auto/ase2sprkkr.potentials.definitions.sections.global_system_parameter.section.rst", "auto/ase2sprkkr.potentials.definitions.sections.lattice.rst", "auto/ase2sprkkr.potentials.definitions.sections.lattice.LatticeSection.rst", "auto/ase2sprkkr.potentials.definitions.sections.lattice.LatticeSectionDefinition.rst", "auto/ase2sprkkr.potentials.definitions.sections.lattice.section.rst", "auto/ase2sprkkr.potentials.definitions.sections.mesh_information.rst", "auto/ase2sprkkr.potentials.definitions.sections.mesh_information.MeshInformationSection.rst", "auto/ase2sprkkr.potentials.definitions.sections.mesh_information.MeshInformationSectionDefinition.rst", "auto/ase2sprkkr.potentials.definitions.sections.mesh_information.section.rst", "auto/ase2sprkkr.potentials.definitions.sections.occupation.rst", "auto/ase2sprkkr.potentials.definitions.sections.occupation.OccupationSection.rst", "auto/ase2sprkkr.potentials.definitions.sections.occupation.OccupationSectionDefinition.rst", "auto/ase2sprkkr.potentials.definitions.sections.occupation.section.rst", "auto/ase2sprkkr.potentials.definitions.sections.reference_system.rst", "auto/ase2sprkkr.potentials.definitions.sections.reference_system.ReferenceSystemSection.rst", "auto/ase2sprkkr.potentials.definitions.sections.reference_system.ReferenceSystemSectionDefinition.rst", "auto/ase2sprkkr.potentials.definitions.sections.reference_system.section.rst", "auto/ase2sprkkr.potentials.definitions.sections.sites.rst", "auto/ase2sprkkr.potentials.definitions.sections.sites.SitesSection.rst", "auto/ase2sprkkr.potentials.definitions.sections.sites.SitesSectionDefinition.rst", "auto/ase2sprkkr.potentials.definitions.sections.sites.section.rst", "auto/ase2sprkkr.potentials.definitions.sections.types.rst", "auto/ase2sprkkr.potentials.definitions.sections.types.TypesSection.rst", "auto/ase2sprkkr.potentials.definitions.sections.types.TypesSectionDefinition.rst", "auto/ase2sprkkr.potentials.definitions.sections.types.section.rst", "auto/ase2sprkkr.potentials.io_data.rst", "auto/ase2sprkkr.potentials.io_data.BaseIoData.rst", "auto/ase2sprkkr.potentials.io_data.ReadIoData.rst", "auto/ase2sprkkr.potentials.io_data.WriteIoData.rst", "auto/ase2sprkkr.potentials.io_data.unique_mapping.rst", "auto/ase2sprkkr.potentials.potential_definitions.rst", "auto/ase2sprkkr.potentials.potential_definitions.ASEArraySectionDefinition.rst", "auto/ase2sprkkr.potentials.potential_definitions.PotSectionDefinition.rst", "auto/ase2sprkkr.potentials.potential_definitions.PotValueDefinition.rst", "auto/ase2sprkkr.potentials.potential_definitions.PotentialDefinition.rst", "auto/ase2sprkkr.potentials.potential_definitions.Separator.rst", "auto/ase2sprkkr.potentials.potential_sections.rst", "auto/ase2sprkkr.potentials.potential_sections.ASEArraySection.rst", "auto/ase2sprkkr.potentials.potential_sections.PotentialSection.rst", "auto/ase2sprkkr.potentials.potential_sections.UniqueListSection.rst", "auto/ase2sprkkr.potentials.potentials.rst", "auto/ase2sprkkr.potentials.potentials.Potential.rst", "auto/ase2sprkkr.potentials.test.rst", "auto/ase2sprkkr.potentials.test.init_tests.rst", "auto/ase2sprkkr.potentials.test.init_tests.TestCase.rst", "auto/ase2sprkkr.potentials.test.test_custom_section.rst", "auto/ase2sprkkr.potentials.test.test_custom_section.TestCustomSection.rst", "auto/ase2sprkkr.potentials.test.test_potential.rst", "auto/ase2sprkkr.potentials.test.test_potential.TestPotential.rst", "auto/ase2sprkkr.potentials.test.test_structure.rst", "auto/ase2sprkkr.potentials.test.test_structure.TestStructure.rst", "auto/ase2sprkkr.sprkkr.rst", "auto/ase2sprkkr.sprkkr.atomic_types.rst", "auto/ase2sprkkr.sprkkr.atomic_types.AtomicType.rst", "auto/ase2sprkkr.sprkkr.calculator.rst", "auto/ase2sprkkr.sprkkr.calculator.FilenameTemplator.rst", "auto/ase2sprkkr.sprkkr.calculator.SPRKKR.rst", "auto/ase2sprkkr.sprkkr.occupations.rst", "auto/ase2sprkkr.sprkkr.occupations.Occupation.rst", "auto/ase2sprkkr.sprkkr.radial_meshes.rst", "auto/ase2sprkkr.sprkkr.radial_meshes.ExponentialMesh.rst", "auto/ase2sprkkr.sprkkr.radial_meshes.Mesh.rst", "auto/ase2sprkkr.sprkkr.reference_systems.rst", "auto/ase2sprkkr.sprkkr.reference_systems.ReferenceSystem.rst", "auto/ase2sprkkr.sprkkr.sites.rst", "auto/ase2sprkkr.sprkkr.sites.Site.rst", "auto/ase2sprkkr.sprkkr.sprkkr_atoms.rst", "auto/ase2sprkkr.sprkkr.sprkkr_atoms.SPRKKRAtoms.rst", "auto/ase2sprkkr.sprkkr.structure.rst", "auto/ase2sprkkr.sprkkr.structure.AtomData.rst", "auto/ase2sprkkr.sprkkr.structure.LayerData.rst", "auto/ase2sprkkr.sprkkr.structure.floatjm.rst", "auto/ase2sprkkr.sprkkr.structure.structure_file_to_atoms.rst", "auto/ase2sprkkr.sprkkr.sysfile.rst", "auto/ase2sprkkr.sprkkr.sysfile.sysfile_content.rst", "auto/ase2sprkkr.sprkkr.sysfile.write_sysfile.rst", "auto/ase2sprkkr.sprkkr.test.rst", "auto/ase2sprkkr.sprkkr.test.init_tests.rst", "auto/ase2sprkkr.sprkkr.test.init_tests.TestCase.rst", "auto/ase2sprkkr.sprkkr.test.test_calculator.rst", "auto/ase2sprkkr.sprkkr.test.test_calculator.CalculatorTest.rst", "auto/ase2sprkkr.sprkkr.test.test_sprkkr_atoms.rst", "auto/ase2sprkkr.sprkkr.test.test_sprkkr_atoms.SPRKKRAtomsTest.rst", "auto/ase2sprkkr.sprkkr.test.test_sysfile.rst", "auto/ase2sprkkr.sprkkr.test.test_sysfile.SysfileTest.rst", "auto/ase2sprkkr.tools.rst", "auto/ase2sprkkr.tools.a2s_visualise_in_struct.rst", "auto/ase2sprkkr.tools.a2s_visualise_in_struct.visualise.rst", "auto/ase2sprkkr.version.rst", "auto/modules.rst", "how-to-install.rst", "index.rst", "installation.rst", "introduction.rst", "philosophy.rst", "usage.rst"], "titles": ["ASE2SPRKKR", "ase2sprkkr", "bindings", "spglib", "compute_spacegroup", "equivalent_sites_for_spacegroup", "possibly_equivalent_sites", "spacegroup_dataset", "common", "base_configuration", "BaseConfiguration", "configuration_containers", "BaseSection", "ConfigurationContainer", "CustomSection", "RootConfigurationContainer", "Section", "configuration_definitions", "BaseContainerDefinition", "BaseDefinition", "BaseSectionDefinition", "BaseValueDefinition", "ConfDefinition", "add_excluded_names_condition", "unique_dict", "formats", "fortran_format", "grammar", "White", "addConditionEx", "addParseActionEx", "delimitedList", "end_of_file", "generate_grammar", "line_end", "optional_line_end", "optional_quote", "replace_whitechars", "separator", "separator_pattern", "grammar_types", "Array", "BaseMixed", "BaseRealWithUnits", "BaseString", "BaseType", "Bool", "Date", "DefKeyword", "Energy", "Flag", "Integer", "Keyword", "LineString", "Mixed", "PotMixed", "QString", "Range", "Real", "RealWithUnits", "Separator", "Sequence", "SetOf", "String", "Table", "Unsigned", "boolean", "energy", "flag", "format_for_type", "integer", "line_string", "mixed", "normalize_type", "normalize_type_map", "pot_mixed", "qstring", "real", "separator", "string", "type_from_default_value", "type_from_set_map", "type_from_type", "type_from_type_map", "type_from_value", "unsigned", "init_tests", "TestCase", "patch_package", "misc", "OrderedDict", "add_to_signature", "class_property", "copy_list", "lazy_value", "njit", "numpy_index", "no_output", "NoOutput", "options", "CustomOption", "Option", "process_output_reader", "AsyncioFileReader", "BaseProcessOutputReader", "test", "init_tests", "TestCase", "test_common", "CommonTest", "test_grammar_types", "GrammarTest", "unique_values", "UniqueValuesMapping", "input_parameters", "definitions", "arpes", "input_parameters", "dos", "input_parameters", "phagen", "input_parameters", "scf", "input_parameters", "sections", "CONTROL", "ENERGY", "SCF", "SITES", "TASK", "TAU", "input_parameters", "InputParameters", "resolve_executable_postfix", "input_parameters_definitions", "InputParametersDefinition", "SectionDefinition", "ValueDefinition", "test", "init_tests", "TestCase", "test_definitions", "TestDefinitions", "test_input_parameters", "TestInputParameters", "outputs", "output_definitions", "OutputNonameValueDefinition", "OutputSectionDefinition", "OutputValueDefinition", "OutputValueEqualDefinition", "readers", "default", "DefaultOutputReader", "DefaultResult", "scf", "ScfOutputReader", "ScfResult", "task_result", "OutputReader", "TaskResult", "test", "init_tests", "TestCase", "test_output", "TestOutput", "physics", "lattice_data", "LatticeData", "potentials", "custom_potential_section", "CustomPotentialSection", "CustomPotentialSectionDefinition", "CustomSectionToken", "SectionString", "definitions", "potential", "potential_definition", "sections", "_sections", "global_system_parameter", "GlobalSystemParameter", "GlobalSystemParameterDefinition", "section", "lattice", "LatticeSection", "LatticeSectionDefinition", "section", "mesh_information", "MeshInformationSection", "MeshInformationSectionDefinition", "section", "occupation", "OccupationSection", "OccupationSectionDefinition", "section", "reference_system", "ReferenceSystemSection", "ReferenceSystemSectionDefinition", "section", "sites", "SitesSection", "SitesSectionDefinition", "section", "types", "TypesSection", "TypesSectionDefinition", "section", "io_data", "BaseIoData", "ReadIoData", "WriteIoData", "unique_mapping", "potential_definitions", "ASEArraySectionDefinition", "PotSectionDefinition", "PotValueDefinition", "PotentialDefinition", "Separator", "potential_sections", "ASEArraySection", "PotentialSection", "UniqueListSection", "potentials", "Potential", "test", "init_tests", "TestCase", "test_custom_section", "TestCustomSection", "test_potential", "TestPotential", "test_structure", "TestStructure", "sprkkr", "atomic_types", "AtomicType", "calculator", "FilenameTemplator", "SPRKKR", "occupations", "Occupation", "radial_meshes", "ExponentialMesh", "Mesh", "reference_systems", "ReferenceSystem", "sites", "Site", "sprkkr_atoms", "SPRKKRAtoms", "structure", "AtomData", "LayerData", "floatjm", "structure_file_to_atoms", "sysfile", "sysfile_content", "write_sysfile", "test", "init_tests", "TestCase", "test_calculator", "CalculatorTest", "test_sprkkr_atoms", "SPRKKRAtomsTest", "test_sysfile", "SysfileTest", "tools", "a2s_visualise_in_struct", "visualise", "version", "ase2sprkkr", "More about installing of the ASE2SPRKKR package", "ASE2SPRKKR software package", "Installation of the package using package managers", "Usefull links", "ASE2SPR-KKR\u2019s philosophy for the developers", "How to use ASE2SPRKKR"], "terms": {"provid": [0, 1, 21, 41, 62, 113, 137, 147, 149, 150, 167, 168, 172, 216, 218, 274, 276, 278], "an": [0, 13, 15, 17, 18, 19, 21, 24, 30, 32, 35, 36, 38, 39, 42, 43, 44, 45, 46, 47, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 64, 65, 80, 87, 100, 107, 109, 111, 132, 137, 140, 142, 144, 147, 149, 150, 163, 165, 171, 172, 174, 214, 216, 217, 218, 224, 227, 229, 231, 233, 236, 239, 243, 247, 248, 249, 250, 261, 263, 265, 267, 273, 274, 275, 276, 277, 278], "interfac": [0, 1, 103, 239, 274, 276], "allow": [0, 32, 41, 49, 62, 134, 213, 215, 274, 276, 277, 278], "spr": [0, 1, 15, 114, 115, 124, 131, 132, 133, 145, 151, 156, 169, 175, 223, 224, 234, 237, 239, 242, 244, 250, 268, 273, 274, 275, 276, 277, 278], "kkr": [0, 1, 15, 114, 115, 124, 131, 132, 133, 145, 151, 156, 169, 175, 223, 224, 234, 237, 239, 242, 244, 250, 268, 273, 274, 275, 276, 278], "electron": [0, 1, 236, 250, 274, 276], "structur": [0, 1, 4, 134, 213, 234, 250, 252, 253, 254, 255, 272, 274, 276, 278], "calcul": [0, 1, 132, 153, 154, 156, 157, 159, 160, 234, 238, 239, 250, 272, 274, 276, 277], "within": [0, 274, 276], "atom": [0, 4, 5, 6, 7, 160, 168, 171, 181, 185, 193, 197, 201, 211, 214, 220, 221, 222, 224, 235, 236, 239, 240, 241, 243, 247, 248, 249, 250, 252, 255, 257, 258, 274, 276, 277], "simul": [0, 274, 276], "environ": [0, 133, 239, 273, 274, 275, 276, 278], "abbrevi": [0, 274, 276], "ASE": [0, 1, 4, 185, 193, 201, 214, 220, 224, 239, 248, 250, 255, 274, 276, 277, 278], "python": [0, 28, 41, 42, 43, 44, 45, 46, 47, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 73, 81, 82, 83, 84, 174, 273, 274, 275, 276, 277, 278], "tool": [0, 269, 270, 272, 273, 274, 275, 276], "integr": [0, 274, 276], "variou": [0, 27, 40, 89, 132, 167, 168, 239, 274, 276, 277, 278], "onlin": [0, 273, 274, 275, 276], "version": [0, 135, 239, 249, 272, 273, 274, 275, 276, 277, 278], "thi": [0, 1, 2, 9, 10, 11, 13, 18, 19, 20, 21, 22, 28, 41, 42, 43, 44, 45, 46, 47, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 83, 104, 113, 132, 134, 135, 136, 137, 145, 146, 147, 148, 149, 150, 156, 157, 158, 159, 166, 167, 168, 171, 172, 174, 178, 181, 182, 185, 186, 190, 193, 194, 198, 201, 202, 206, 213, 215, 216, 217, 218, 219, 221, 224, 237, 239, 249, 250, 251, 269, 274, 276, 277, 278], "github": [0, 273, 274, 275, 276, 278], "repositori": [0, 273, 274, 275, 276, 278], "manual": [0, 224, 274, 276, 277, 278], "The": [0, 4, 10, 13, 16, 18, 19, 20, 21, 22, 26, 41, 42, 43, 44, 45, 46, 47, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 82, 83, 91, 94, 97, 98, 99, 100, 101, 104, 113, 126, 127, 128, 130, 131, 132, 136, 137, 147, 148, 149, 150, 157, 159, 171, 172, 173, 174, 189, 194, 197, 205, 214, 215, 216, 217, 218, 220, 221, 222, 238, 239, 241, 247, 248, 250, 273, 274, 275, 278], "simplest": [0, 273, 275], "wai": [0, 19, 21, 82, 132, 137, 147, 149, 150, 172, 216, 218, 239, 273, 275, 277], "i": [0, 5, 6, 10, 12, 13, 15, 16, 18, 19, 20, 21, 22, 23, 24, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 69, 73, 80, 82, 91, 93, 94, 95, 96, 97, 98, 101, 103, 104, 113, 132, 133, 135, 136, 137, 146, 147, 148, 149, 150, 157, 159, 170, 171, 172, 173, 174, 176, 182, 185, 186, 190, 193, 194, 198, 201, 202, 206, 210, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 236, 239, 248, 250, 251, 269, 273, 275, 277, 278], "them": [0, 1, 11, 132, 179, 250, 273, 275], "either": [0, 11, 13, 18, 19, 20, 45, 56, 57, 132, 185, 193, 201, 221, 236, 239, 273, 275, 277, 278], "c": [0, 13, 97, 98, 238, 239, 273, 275, 278], "In": [0, 11, 15, 28, 103, 171, 219, 239, 273, 275, 277, 278], "some": [0, 22, 45, 60, 61, 87, 107, 140, 147, 163, 185, 193, 201, 211, 221, 227, 239, 250, 261, 273, 275, 277, 278], "system": [0, 182, 198, 222, 248, 273, 275, 278], "util": [0, 251, 273, 275, 277], "python3": [0, 273, 275], "call": [0, 64, 132, 181, 185, 193, 201, 221, 224, 239, 250, 273, 275, 277, 278], "pip3": [0, 273, 275], "If": [0, 5, 13, 18, 19, 20, 21, 22, 41, 45, 62, 69, 82, 91, 96, 113, 132, 133, 136, 137, 147, 148, 149, 150, 157, 172, 185, 193, 201, 216, 217, 218, 220, 221, 236, 239, 241, 248, 250, 273, 275, 277, 278], "you": [0, 91, 224, 273, 275, 278], "can": [0, 4, 15, 18, 19, 20, 21, 22, 40, 41, 42, 43, 45, 48, 49, 50, 52, 54, 61, 62, 64, 80, 82, 83, 92, 100, 104, 113, 132, 136, 137, 147, 148, 149, 150, 157, 159, 170, 172, 185, 193, 194, 201, 215, 216, 217, 218, 220, 221, 224, 236, 239, 240, 241, 250, 251, 273, 275, 277, 278], "linux": [0, 273, 275], "distribut": [0, 273, 275], "e": [0, 4, 6, 10, 12, 13, 15, 16, 17, 26, 41, 45, 50, 54, 60, 61, 62, 64, 73, 82, 91, 132, 157, 170, 173, 174, 181, 182, 185, 186, 190, 193, 194, 198, 201, 202, 206, 215, 220, 221, 222, 224, 236, 238, 239, 241, 248, 250, 273, 275, 277, 278], "g": [0, 4, 10, 15, 17, 41, 45, 50, 54, 60, 61, 62, 64, 82, 132, 157, 181, 185, 193, 201, 220, 221, 222, 224, 236, 238, 239, 241, 250, 273, 275, 277, 278], "debian": [0, 273, 275], "ubuntu": [0, 273, 275], "apt": [0, 273, 275], "zypper": [0, 273, 275], "opensus": [0, 273, 275], "For": [0, 182, 186, 190, 194, 198, 202, 206, 209, 214, 215, 237, 239, 250, 273, 275, 278], "instruct": [0, 273, 275], "see": [0, 22, 45, 61, 81, 82, 132, 135, 168, 182, 186, 190, 194, 198, 202, 206, 214, 215, 220, 238, 239, 250, 269, 273, 275, 277, 278], "anaconda": [0, 273, 275], "http": [0, 237, 239, 273, 275, 277, 278], "doc": [0, 246, 269, 273, 275, 277], "com": [0, 273, 275, 278], "howev": [0, 19, 21, 22, 24, 41, 42, 43, 45, 46, 47, 50, 51, 52, 53, 56, 58, 61, 62, 63, 64, 65, 104, 113, 137, 147, 149, 150, 159, 172, 174, 216, 218, 248, 250, 273, 275, 277, 278], "user": [0, 14, 18, 19, 20, 21, 22, 41, 42, 45, 52, 59, 61, 64, 100, 136, 137, 147, 148, 149, 150, 172, 216, 217, 218, 273, 275, 278], "unexperienc": [0, 273, 275], "simpler": [0, 273, 275], "recommend": [0, 273, 275], "do": [0, 13, 22, 28, 45, 91, 119, 239, 272, 273, 275, 278], "want": [0, 31, 91, 104, 159, 273, 275, 278], "public": [0, 273, 275], "develop": [0, 157, 239, 273, 274, 275], "3": [0, 28, 62, 113, 168, 239, 273, 275, 278], "7": [0, 168, 237, 273, 275], "check": [0, 13, 29, 42, 43, 44, 45, 46, 47, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 64, 65, 174, 241, 273, 275, 278], "ase": [0, 4, 237, 239, 249, 250, 273, 275, 278], "mendeleev": [0, 236, 273, 275], "spglib": [0, 4, 5, 6, 7, 250, 272, 273, 275], "pypars": [0, 19, 27, 28, 29, 30, 33, 45, 170, 173, 273, 275, 277], "clone": [0, 273, 275, 278], "checkout": [0, 273, 275], "origin": [0, 33, 273, 275], "releas": [0, 273, 275], "first": [0, 13, 15, 18, 48, 91, 96, 113, 224, 239, 243, 273, 275, 277, 278], "line": [0, 53, 55, 71, 78, 218, 239, 252, 273, 275, 277, 278], "fetch": [0, 273, 275], "second": [0, 113, 273, 275, 277], "one": [0, 6, 19, 21, 31, 41, 48, 49, 57, 99, 113, 136, 137, 147, 148, 149, 150, 172, 181, 185, 193, 201, 211, 215, 216, 218, 221, 239, 240, 241, 250, 251, 273, 275, 277, 278], "out": [0, 104, 132, 159, 239, 273, 275, 278], "product": [0, 273, 275], "current": [0, 104, 159, 239, 273, 275, 277, 278], "earlier": [0, 273, 275, 278], "download": [0, 273, 275], "run": [0, 104, 132, 135, 160, 239, 269, 273, 274, 275], "altern": [0, 13, 18, 19, 20, 21, 22, 74, 136, 137, 147, 148, 149, 150, 172, 216, 217, 218, 239, 273, 275], "master": [0, 273, 275], "branch": [0, 273, 275], "bleed": [0, 273, 275], "edg": [0, 273, 275], "just": [0, 4, 9, 10, 18, 19, 20, 21, 22, 41, 45, 56, 62, 63, 64, 69, 91, 93, 147, 171, 173, 210, 220, 239, 250, 256, 271, 273, 275, 277, 278], "add": [0, 13, 23, 29, 30, 45, 61, 91, 239, 241, 273, 275, 278], "src": [0, 93, 273, 275], "directori": [0, 104, 132, 239, 273, 275], "your": [0, 91, 273, 275, 278], "pythonpath": [0, 273, 275], "describ": [0, 5, 6, 19, 132, 135, 136, 137, 148, 215, 217, 234, 250, 273, 275, 277, 278], "below": [0, 273, 275], "To": [0, 10, 19, 42, 101, 250, 273, 275, 277, 278], "have": [0, 4, 21, 26, 41, 43, 45, 60, 61, 62, 87, 91, 107, 109, 111, 134, 137, 140, 142, 144, 147, 148, 149, 150, 163, 165, 172, 213, 216, 218, 227, 229, 231, 233, 239, 250, 261, 263, 265, 267, 273, 275, 278], "built": [0, 273, 275, 277], "follow": [0, 91, 237, 239, 273, 275, 277, 278], "m": [0, 47, 168, 273, 275], "upgrad": [0, 273, 275], "possibl": [0, 45, 50, 54, 65, 102, 113, 132, 150, 250, 273, 275, 277, 278], "alreadi": [0, 31, 250, 273, 275, 278], "wide": [0, 273, 275], "activ": [0, 273, 275], "virtual": [0, 250, 273, 275], "l": [0, 273, 275], "dist": [0, 273, 275], "whl": [0, 273, 275], "sort": [0, 273, 275], "tail": [0, 273, 275], "n": [0, 103, 135, 136, 148, 172, 173, 174, 215, 217, 236, 243, 273, 275], "1": [0, 4, 26, 49, 62, 64, 98, 113, 168, 241, 243, 248, 273, 275, 277, 278], "all": [0, 10, 13, 19, 21, 45, 50, 53, 54, 104, 147, 157, 173, 179, 224, 238, 239, 250, 273, 275, 278], "stuff": [0, 132, 147, 166, 273, 275, 277], "after": [0, 13, 19, 21, 42, 43, 44, 45, 46, 47, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 64, 65, 91, 133, 147, 174, 185, 193, 201, 220, 221, 273, 275, 278], "make": [0, 13, 88, 101, 102, 113, 250, 273, 275, 278], "clean": [0, 18, 256, 273, 275], "up": [0, 18, 53, 170, 173, 256, 273, 275, 277], "publish": [0, 273, 275], "io": [0, 273, 275, 277], "ar": [0, 4, 5, 11, 13, 15, 16, 17, 18, 19, 20, 21, 22, 32, 45, 49, 60, 80, 81, 113, 131, 132, 136, 146, 147, 148, 157, 170, 171, 172, 208, 211, 215, 217, 219, 220, 224, 238, 239, 241, 244, 250, 273, 275, 277, 278], "open": [0, 12, 132, 239, 273, 275], "index": [0, 90, 96, 113, 237, 273, 274, 275], "html": [0, 239, 273, 275], "offlin": [0, 273, 275], "contain": [0, 2, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 21, 22, 26, 40, 100, 101, 131, 132, 134, 135, 137, 145, 146, 147, 149, 150, 157, 158, 166, 167, 171, 172, 178, 181, 182, 185, 186, 189, 190, 193, 194, 197, 198, 201, 202, 205, 206, 211, 213, 214, 215, 216, 218, 220, 221, 222, 224, 237, 239, 249, 251, 255, 256, 273, 275, 277, 278], "part": [0, 12, 17, 19, 104, 146, 148, 170, 273, 275, 277], "gener": [0, 19, 22, 166, 181, 185, 193, 201, 219, 221, 239, 250, 273, 274, 275, 277], "docstr": [0, 273, 275], "regener": [0, 273, 275], "sphinx": [0, 273, 275], "toolbox": [0, 273, 275], "pandoc": [0, 273, 275], "readm": [0, 273, 275], "md": [0, 273, 275], "need": [0, 94, 211, 239, 273, 275, 277, 278], "offici": [0, 273, 275], "miss": [0, 18, 19, 20, 22, 136, 148, 217, 273, 275], "attribut": [0, 13, 19, 21, 27, 40, 45, 64, 113, 116, 118, 120, 122, 124, 147, 176, 239, 250, 273, 275, 278], "when": [0, 19, 20, 21, 22, 64, 87, 107, 109, 111, 140, 142, 144, 147, 163, 165, 185, 193, 201, 221, 227, 229, 231, 233, 239, 250, 261, 263, 265, 267, 273, 275, 277, 278], "so": [0, 18, 19, 20, 22, 93, 132, 134, 136, 148, 166, 194, 211, 213, 215, 217, 221, 238, 241, 250, 273, 275, 277, 278], "till": [0, 273, 275], "pullrequest": [0, 273, 275, 278], "correct": [0, 19, 257, 273, 275, 278], "behavior": [0, 19, 20, 21, 147, 273, 275], "merg": [0, 13, 113, 273, 275], "pleas": [0, 250, 256, 273, 275, 278], "fork": [0, 273, 275], "lokik": [0, 273, 275], "feel": [0, 273, 275, 278], "free": [0, 273, 275, 278], "pull": [0, 273, 275], "request": [0, 239, 273, 275, 278], "post": [0, 273, 275, 278], "issu": [0, 273, 275, 278], "full": [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 17, 23, 24, 25, 26, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 48, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 88, 89, 91, 93, 94, 95, 96, 97, 99, 102, 105, 106, 108, 110, 112, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 133, 134, 138, 139, 141, 143, 145, 146, 151, 152, 155, 158, 161, 162, 164, 166, 167, 169, 170, 175, 176, 177, 178, 179, 180, 184, 188, 192, 196, 200, 204, 208, 212, 213, 219, 223, 225, 226, 228, 230, 232, 234, 235, 237, 240, 242, 245, 247, 249, 251, 254, 255, 256, 257, 258, 259, 260, 262, 264, 266, 268, 269, 270, 271], "name": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 45, 46, 47, 48, 50, 51, 53, 54, 56, 58, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 91, 93, 94, 95, 96, 97, 99, 101, 102, 105, 106, 107, 108, 109, 110, 111, 112, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 155, 157, 158, 161, 162, 163, 164, 165, 166, 167, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 182, 184, 186, 188, 189, 190, 192, 194, 196, 197, 198, 200, 202, 204, 205, 206, 208, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237, 238, 239, 240, 241, 242, 245, 247, 249, 250, 251, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 277, 278], "descript": [1, 2, 3, 8, 9, 11, 17, 18, 19, 20, 21, 22, 25, 27, 40, 86, 89, 97, 99, 102, 105, 106, 108, 110, 112, 114, 115, 116, 118, 120, 122, 124, 131, 134, 136, 137, 138, 139, 141, 143, 145, 146, 148, 151, 152, 155, 158, 161, 162, 164, 166, 167, 169, 170, 172, 175, 176, 178, 180, 184, 188, 192, 196, 200, 204, 208, 213, 217, 219, 223, 225, 226, 228, 230, 232, 234, 235, 237, 240, 242, 245, 247, 249, 251, 256, 259, 260, 262, 264, 266, 268, 269, 271], "root": [1, 10, 22], "packag": [1, 2, 8, 88, 89, 145, 178, 250, 271, 276, 278], "import": [1, 88, 179, 278], "few": [1, 20, 27, 63, 239, 277], "most": [1, 278], "us": [1, 5, 8, 13, 18, 19, 20, 21, 22, 26, 27, 41, 42, 43, 44, 45, 46, 47, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 86, 87, 89, 106, 107, 109, 111, 113, 124, 132, 136, 137, 139, 140, 142, 144, 146, 147, 148, 149, 150, 157, 158, 162, 163, 165, 172, 174, 178, 181, 185, 193, 201, 208, 209, 211, 216, 217, 218, 221, 222, 226, 227, 229, 231, 233, 234, 236, 237, 238, 239, 241, 242, 248, 249, 250, 251, 256, 260, 261, 263, 265, 267, 274, 276, 277], "object": [1, 4, 6, 10, 12, 13, 16, 17, 18, 19, 20, 21, 22, 28, 42, 43, 44, 45, 46, 47, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 64, 65, 80, 91, 93, 100, 101, 112, 113, 117, 119, 121, 123, 126, 127, 128, 130, 131, 132, 136, 137, 147, 148, 149, 150, 156, 157, 167, 171, 172, 173, 174, 177, 181, 185, 193, 201, 208, 209, 210, 216, 217, 218, 220, 221, 222, 223, 224, 239, 248, 250, 252, 255, 257, 277], "shortcut": [1, 239], "modul": [1, 2, 8, 9, 11, 17, 27, 40, 86, 89, 97, 99, 102, 105, 106, 108, 110, 112, 114, 115, 116, 118, 120, 122, 124, 131, 134, 138, 139, 141, 143, 145, 146, 151, 152, 155, 158, 161, 162, 164, 166, 167, 169, 170, 175, 176, 178, 179, 180, 184, 188, 192, 196, 200, 204, 208, 213, 219, 223, 225, 226, 228, 230, 232, 234, 235, 240, 242, 245, 247, 249, 251, 256, 259, 260, 262, 264, 266, 268, 272, 274, 277], "ase2sprkkr": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 275, 276, 277], "wrapper": [2, 3], "routin": [2, 25, 27, 42, 43, 44, 45, 46, 47, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 64, 65, 86, 89, 104, 106, 139, 162, 169, 174, 226, 250, 260, 277], "other": [2, 11, 13, 45, 48, 113, 147, 157, 182, 186, 190, 194, 198, 202, 206, 214, 215, 222, 239, 277, 278], "physic": [2, 167, 168, 272], "code": [2, 88, 256, 274, 278], "librari": [2, 236], "bind": [3, 4, 5, 6, 7, 198, 272], "comput": [3, 94, 157, 234, 241, 244, 250, 274], "symmetri": [3, 4, 168, 248, 250, 278], "primit": [3, 168, 278], "cell": [3, 4, 168, 185, 239, 250, 278], "function": [3, 14, 17, 18, 25, 27, 40, 42, 43, 44, 45, 46, 47, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 64, 65, 86, 89, 91, 96, 97, 98, 100, 104, 124, 131, 134, 157, 159, 174, 178, 181, 185, 193, 194, 201, 208, 212, 213, 215, 221, 224, 238, 239, 251, 256, 269, 278], "atomic_numb": [4, 5, 6, 236, 250], "none": [4, 5, 6, 10, 12, 13, 14, 15, 16, 18, 19, 20, 21, 22, 30, 41, 42, 43, 44, 45, 46, 47, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 64, 65, 69, 91, 92, 100, 101, 104, 113, 132, 135, 136, 137, 147, 148, 149, 150, 157, 171, 172, 174, 181, 185, 189, 193, 197, 201, 205, 216, 217, 218, 220, 221, 222, 224, 236, 239, 241, 248, 250, 278], "consider_old": [4, 5, 6, 250], "fals": [4, 5, 6, 10, 12, 13, 18, 19, 20, 21, 22, 41, 42, 43, 44, 45, 46, 47, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 80, 82, 91, 101, 104, 113, 132, 133, 136, 137, 147, 148, 149, 150, 172, 174, 216, 217, 218, 239, 250, 278], "precis": 4, "1e": [4, 250], "05": [4, 250], "angular_precis": 4, "0": [4, 26, 49, 84, 104, 113, 239, 241, 248, 255, 277, 278], "sourc": [4, 5, 6, 7, 10, 12, 13, 14, 15, 16, 18, 19, 20, 21, 22, 23, 24, 26, 28, 29, 30, 31, 33, 37, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 69, 73, 80, 82, 84, 87, 88, 90, 91, 92, 93, 94, 95, 96, 98, 100, 101, 103, 104, 107, 109, 111, 113, 125, 129, 132, 133, 135, 136, 137, 140, 142, 144, 147, 148, 149, 150, 153, 154, 156, 157, 159, 160, 163, 165, 168, 171, 172, 173, 174, 179, 181, 182, 185, 186, 189, 190, 193, 194, 197, 198, 201, 202, 205, 206, 209, 210, 211, 212, 214, 215, 216, 217, 218, 220, 221, 222, 224, 227, 229, 231, 233, 236, 238, 239, 241, 243, 244, 246, 248, 250, 252, 253, 254, 255, 257, 258, 261, 263, 265, 267, 270, 274, 278], "return": [4, 5, 6, 10, 12, 13, 14, 16, 18, 19, 20, 22, 26, 32, 34, 35, 36, 38, 41, 42, 43, 44, 45, 46, 47, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 69, 73, 80, 82, 92, 96, 100, 101, 104, 113, 125, 129, 132, 133, 157, 159, 168, 174, 185, 193, 194, 201, 212, 215, 221, 239, 241, 257, 277, 278], "spacegroup": [4, 5, 250], "suit": 4, "paramet": [4, 5, 6, 10, 12, 13, 14, 15, 18, 19, 20, 21, 22, 26, 32, 34, 35, 36, 38, 41, 42, 43, 44, 45, 46, 47, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 69, 82, 91, 98, 101, 104, 113, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 129, 131, 132, 133, 135, 136, 137, 146, 147, 148, 149, 150, 157, 159, 172, 174, 181, 182, 185, 186, 190, 193, 194, 198, 201, 202, 206, 214, 215, 216, 217, 218, 220, 221, 222, 224, 236, 239, 241, 243, 248, 250, 255, 258, 274, 277], "option": [4, 6, 9, 10, 13, 17, 18, 19, 21, 26, 36, 42, 43, 44, 45, 46, 47, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 64, 65, 82, 100, 104, 115, 132, 134, 136, 137, 147, 148, 149, 150, 170, 171, 172, 174, 213, 215, 216, 218, 237, 239, 250, 272, 277, 278], "list": [4, 6, 31, 41, 62, 91, 93, 113, 132, 134, 157, 189, 197, 205, 211, 213, 222, 239, 250], "number": [4, 6, 26, 64, 93, 113, 168, 181, 185, 193, 201, 221, 222, 236, 239, 241, 248, 250, 255, 278], "overriden": [4, 45, 64, 239], "forc": [4, 18, 239], "partiali": [4, 278], "break": 4, "real": [4, 40, 54, 55, 83, 84, 236, 272], "ones": [4, 73, 74, 185, 193, 201, 221, 278], "thei": [4, 17, 18, 19, 20, 22, 91, 102, 104, 113, 134, 136, 148, 159, 170, 185, 193, 201, 213, 217, 221, 239, 277, 278], "treat": 4, "label": [4, 239], "equival": [4, 5, 6, 112, 113, 248, 250], "class": [4, 5, 6, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 27, 28, 40, 41, 42, 43, 44, 45, 46, 47, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 73, 74, 81, 82, 83, 86, 87, 89, 90, 92, 97, 98, 99, 100, 101, 102, 103, 104, 106, 107, 108, 109, 110, 111, 112, 113, 131, 132, 134, 135, 136, 137, 139, 140, 141, 142, 143, 144, 146, 147, 148, 149, 150, 152, 153, 154, 155, 156, 157, 158, 159, 160, 162, 163, 164, 165, 167, 168, 170, 171, 172, 173, 174, 180, 181, 182, 184, 185, 186, 188, 189, 190, 192, 193, 194, 196, 197, 198, 200, 201, 202, 204, 205, 206, 208, 209, 210, 211, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 226, 227, 228, 229, 230, 231, 232, 233, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 260, 261, 262, 263, 264, 265, 266, 267, 277, 278], "bool": [4, 6, 12, 13, 15, 18, 21, 40, 42, 43, 44, 45, 47, 49, 50, 51, 53, 54, 55, 56, 57, 58, 60, 63, 65, 66, 68, 74, 83, 113, 132, 133, 135, 137, 147, 149, 150, 172, 174, 214, 215, 216, 218, 224, 239, 250, 272], "float": [4, 26, 43, 58, 59, 64, 67, 74, 81, 83, 157, 241, 243, 250, 255], "toler": 4, "unprecis": 4, "angular": 4, "coordin": 4, "dataset": 4, "type": [4, 6, 10, 12, 13, 14, 19, 21, 26, 32, 34, 35, 36, 38, 40, 41, 42, 43, 44, 45, 46, 47, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 100, 101, 104, 125, 129, 132, 137, 147, 149, 150, 157, 159, 168, 171, 172, 174, 185, 193, 194, 201, 205, 206, 207, 211, 215, 216, 217, 218, 221, 222, 236, 239, 240, 241, 248, 250, 255, 274, 277], "dict": [4, 13, 69, 82, 113, 157, 210, 239, 241, 248, 250], "given": [5, 6, 13, 14, 15, 18, 21, 23, 26, 29, 30, 40, 41, 42, 43, 44, 45, 46, 47, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 69, 73, 82, 83, 97, 98, 100, 101, 113, 132, 133, 137, 147, 149, 150, 157, 168, 172, 174, 194, 212, 215, 216, 218, 220, 221, 236, 239, 241, 244, 248, 250, 255, 257, 277, 278], "creat": [5, 10, 12, 13, 14, 15, 16, 18, 19, 21, 22, 24, 40, 42, 43, 44, 45, 46, 47, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 64, 65, 80, 87, 107, 109, 111, 125, 129, 132, 137, 140, 142, 144, 147, 149, 150, 163, 165, 172, 174, 181, 185, 189, 193, 197, 201, 205, 211, 212, 216, 218, 220, 221, 222, 224, 227, 229, 231, 233, 239, 248, 250, 252, 255, 261, 263, 265, 267, 277, 278], "compute_spacegroup": [5, 272], "precomput": 5, "taken": 5, "from": [5, 6, 13, 14, 15, 18, 20, 21, 22, 24, 41, 42, 45, 48, 52, 61, 64, 80, 82, 84, 88, 92, 100, 113, 132, 134, 135, 137, 146, 147, 149, 150, 157, 172, 179, 185, 193, 197, 201, 212, 213, 216, 218, 220, 221, 222, 224, 236, 239, 252, 255, 274, 277, 278], "otherwis": [5, 12, 13, 15, 82, 132, 157, 224, 239, 278], "addit": [5, 15, 18, 19, 20, 22, 136, 148, 217, 224, 239, 250], "determin": [5, 10, 19, 82, 132, 135, 236, 239, 241, 248, 250, 277, 278], "same": [6, 62, 91, 94, 103, 113, 132, 146, 238, 239, 248, 250, 277, 278], "occup": [6, 193, 194, 195, 248, 250, 272, 278], "etc": [6, 10, 16, 19, 157, 181, 185, 193, 201, 221, 222, 238, 239, 277], "uniquevaluesmap": [6, 112, 212, 272], "sprkkr": [8, 12, 101, 115, 132, 134, 169, 175, 213, 219, 235, 236, 237, 238, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 272, 274, 278], "common": [9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 131, 132, 134, 135, 136, 137, 139, 140, 141, 142, 143, 144, 146, 147, 148, 149, 150, 152, 153, 155, 156, 158, 159, 162, 163, 164, 165, 170, 171, 172, 174, 180, 181, 182, 184, 185, 186, 188, 189, 190, 192, 193, 194, 196, 197, 198, 200, 201, 202, 204, 205, 206, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 226, 227, 228, 229, 230, 231, 232, 233, 260, 261, 262, 263, 264, 265, 266, 267, 272, 274, 278], "hierarchi": [9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 27, 28, 40, 41, 42, 43, 44, 45, 46, 47, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 86, 87, 89, 90, 92, 97, 98, 99, 100, 101, 102, 103, 104, 106, 107, 108, 109, 110, 111, 112, 113, 131, 132, 134, 135, 136, 137, 139, 140, 141, 142, 143, 144, 146, 147, 148, 149, 150, 152, 153, 154, 155, 156, 157, 158, 159, 160, 162, 163, 164, 165, 167, 168, 170, 171, 172, 173, 174, 180, 181, 182, 184, 185, 186, 188, 189, 190, 192, 193, 194, 196, 197, 198, 200, 201, 202, 204, 205, 206, 208, 209, 210, 211, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 226, 227, 228, 229, 230, 231, 232, 233, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 260, 261, 262, 263, 264, 265, 266, 267], "baseconfigur": [9, 11, 12, 13, 14, 15, 16, 17, 99, 100, 101, 131, 132, 170, 171, 180, 181, 184, 185, 188, 189, 192, 193, 196, 197, 200, 201, 204, 205, 219, 220, 221, 222, 223, 224, 272], "base": [9, 10, 13, 15, 18, 19, 20, 43, 44, 45, 64, 113, 160, 209, 244, 274], "both": [9, 17, 40, 277, 278], "configur": [9, 10, 11, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 40, 45, 50, 54, 99, 100, 131, 132, 136, 137, 147, 148, 149, 150, 172, 216, 217, 218, 224, 274], "valu": [9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21, 22, 23, 24, 26, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 67, 80, 83, 84, 94, 99, 100, 101, 104, 113, 115, 125, 129, 132, 134, 136, 137, 147, 148, 149, 150, 157, 159, 171, 172, 174, 181, 185, 193, 197, 198, 201, 213, 215, 216, 217, 218, 220, 221, 222, 224, 236, 238, 239, 241, 277, 278], "section": [9, 10, 11, 12, 13, 14, 15, 17, 18, 19, 20, 21, 22, 38, 39, 60, 100, 101, 125, 126, 127, 128, 129, 130, 134, 135, 136, 147, 148, 170, 171, 172, 173, 174, 179, 180, 181, 182, 184, 185, 186, 188, 189, 190, 192, 193, 194, 196, 197, 198, 200, 201, 202, 204, 205, 206, 211, 213, 214, 215, 217, 218, 219, 220, 221, 222, 224, 239, 272, 277, 278], "base_configur": [10, 11, 12, 13, 14, 15, 16, 99, 100, 101, 131, 132, 170, 171, 180, 181, 184, 185, 188, 189, 192, 193, 196, 197, 200, 201, 204, 205, 219, 220, 221, 222, 223, 224, 272], "definit": [10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 45, 100, 101, 114, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 132, 134, 146, 171, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 213, 214, 216, 217, 220, 221, 222, 224, 239, 242, 243, 248, 272, 277, 278], "constructor": [10, 12, 13, 14, 15, 16, 18, 19, 20, 21, 22, 28, 41, 42, 43, 44, 45, 46, 47, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 87, 90, 92, 98, 100, 101, 103, 104, 107, 109, 111, 113, 132, 135, 136, 137, 140, 142, 144, 147, 148, 149, 150, 153, 154, 156, 157, 159, 160, 163, 165, 168, 171, 172, 173, 174, 181, 182, 185, 186, 189, 190, 193, 194, 197, 198, 201, 202, 205, 206, 209, 210, 211, 214, 215, 216, 217, 218, 220, 221, 222, 224, 227, 229, 231, 233, 236, 238, 239, 241, 243, 244, 246, 248, 250, 252, 253, 261, 263, 265, 267, 278], "__init__": [10, 12, 13, 14, 15, 16, 18, 19, 20, 21, 22, 28, 41, 42, 43, 44, 45, 46, 47, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 87, 90, 92, 98, 100, 101, 103, 104, 107, 109, 111, 113, 132, 135, 136, 137, 140, 142, 144, 147, 148, 149, 150, 153, 154, 156, 157, 159, 160, 163, 165, 168, 171, 172, 173, 174, 181, 182, 185, 186, 189, 190, 193, 194, 197, 198, 201, 202, 205, 206, 209, 210, 211, 214, 215, 216, 217, 218, 220, 221, 222, 224, 227, 229, 231, 233, 236, 238, 239, 241, 243, 244, 246, 248, 250, 252, 253, 261, 263, 265, 267], "set": [10, 12, 13, 18, 19, 20, 21, 22, 33, 41, 42, 43, 45, 46, 47, 48, 50, 51, 52, 53, 56, 58, 61, 62, 63, 64, 65, 80, 82, 88, 91, 101, 113, 136, 137, 147, 148, 149, 150, 157, 172, 174, 181, 185, 193, 197, 201, 216, 217, 218, 220, 221, 222, 224, 239, 241, 250, 274, 277], "configuration_definit": [10, 14, 16, 18, 19, 20, 21, 22, 23, 24, 134, 135, 136, 137, 146, 147, 148, 149, 150, 170, 172, 180, 182, 184, 186, 188, 190, 192, 194, 196, 198, 200, 202, 204, 206, 213, 214, 215, 216, 217, 218, 272, 277], "basedefinit": [10, 14, 17, 18, 20, 21, 22, 134, 135, 136, 137, 146, 147, 148, 149, 150, 170, 172, 180, 182, 184, 186, 188, 190, 192, 194, 196, 198, 200, 202, 204, 206, 213, 214, 215, 216, 217, 218, 272], "item": [10, 18, 45, 61, 96, 113, 148, 211, 215, 217, 241, 243], "own": [10, 13, 15, 100, 101, 171, 278], "_definit": 10, "": [10, 13, 18, 19, 21, 113, 147, 157, 211, 214, 236, 239], "instanc": [10, 17, 19, 22, 64, 66, 67, 68, 70, 71, 72, 75, 76, 77, 78, 79, 80, 82, 85, 87, 107, 109, 111, 113, 140, 142, 144, 163, 165, 217, 227, 229, 231, 233, 261, 263, 265, 267], "_contain": 10, "parent": [10, 14, 91, 100], "hold": [10, 11, 42, 132, 157, 171, 223, 224, 250, 277, 278], "configuration_contain": [10, 12, 13, 14, 15, 16, 101, 131, 132, 180, 181, 184, 185, 188, 189, 192, 193, 196, 197, 200, 201, 204, 205, 219, 220, 221, 222, 223, 224, 272, 277], "configurationcontain": [10, 11, 12, 14, 15, 16, 101, 131, 132, 180, 181, 184, 185, 188, 189, 192, 193, 196, 197, 200, 201, 204, 205, 219, 220, 221, 222, 223, 224, 272, 277], "_get_path": 10, "include_root": 10, "dot": [10, 239, 278], "delimit": [10, 18, 19, 20, 22, 31, 41, 62, 135, 136, 148, 172, 215, 217], "path": [10, 239, 278], "tree": [10, 277], "energi": [10, 40, 54, 55, 157, 239, 272, 278], "control": [10, 129], "ha": [10, 12, 18, 19, 20, 21, 22, 64, 69, 80, 91, 132, 136, 137, 147, 148, 149, 150, 157, 170, 172, 185, 193, 201, 216, 217, 218, 221, 222, 239, 250, 277, 278], "_get_root_contain": 10, "repres": [10, 40, 46, 236], "whole": [10, 22, 277], "problem": [10, 13, 15, 19, 40, 278], "file": [10, 11, 12, 13, 15, 17, 18, 19, 20, 21, 22, 32, 38, 39, 45, 50, 54, 55, 60, 66, 67, 68, 71, 72, 75, 76, 78, 98, 100, 101, 103, 104, 114, 124, 125, 126, 127, 128, 129, 130, 131, 132, 134, 135, 136, 137, 145, 146, 147, 148, 149, 150, 157, 158, 171, 172, 177, 181, 182, 185, 186, 190, 193, 194, 198, 201, 202, 206, 208, 210, 211, 213, 215, 216, 217, 218, 219, 221, 223, 224, 239, 249, 251, 252, 255, 269, 274], "properti": [10, 16, 18, 19, 20, 21, 22, 45, 57, 61, 64, 80, 91, 92, 101, 132, 157, 159, 160, 168, 185, 189, 193, 197, 201, 205, 211, 220, 221, 222, 224, 236, 238, 239, 241, 247, 248, 250, 274, 277], "defin": [10, 16, 18, 19, 59, 91, 101, 132, 176, 237, 247, 274, 277], "str": [10, 13, 14, 15, 18, 19, 20, 21, 22, 26, 32, 34, 35, 36, 38, 41, 42, 43, 44, 45, 46, 47, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 69, 82, 83, 101, 113, 132, 133, 135, 136, 137, 147, 148, 149, 150, 157, 172, 174, 189, 194, 197, 205, 214, 215, 216, 217, 218, 221, 222, 224, 236, 239, 255, 258], "as_dict": [10, 13, 101, 241], "self": [10, 13, 19, 29, 30, 91, 101, 104, 159, 239, 250, 278], "case": [10, 22, 86, 87, 101, 106, 107, 108, 109, 110, 111, 139, 140, 141, 142, 143, 144, 162, 163, 164, 165, 226, 227, 228, 229, 230, 231, 232, 233, 250, 260, 261, 262, 263, 264, 265, 266, 267, 278], "dictionari": [10, 13, 18, 22, 24, 101, 113, 239, 277], "redefin": [10, 19, 20, 21, 22, 42, 45, 101, 104, 147, 222], "descend": [10, 13, 19, 21, 42, 82, 101, 104, 147, 159, 222, 239, 277], "to_dict": 10, "alia": [10, 20, 21, 43, 45, 46, 51, 58, 65, 135, 136, 148, 153, 156, 182, 183, 186, 187, 189, 190, 191, 194, 195, 197, 198, 199, 202, 203, 205, 206, 207, 214, 215, 217], "method": [10, 13, 18, 20, 22, 42, 43, 44, 45, 46, 47, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 64, 65, 87, 91, 92, 101, 107, 109, 111, 132, 140, 142, 144, 163, 165, 174, 227, 229, 231, 233, 239, 250, 261, 263, 265, 267, 277, 278], "show": [10, 157], "print": [10, 18, 19, 20, 22, 26, 42, 43, 44, 45, 46, 47, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 64, 65, 91, 132, 136, 148, 174, 215, 217, 239, 278], "save": [10, 12, 13, 15, 104, 224, 239, 277, 278], "basesect": [11, 14, 16, 180, 181, 184, 185, 188, 189, 192, 193, 196, 197, 200, 201, 204, 205, 219, 220, 221, 222, 272], "customsect": [11, 173, 174, 272], "rootconfigurationcontain": [11, 131, 132, 223, 224, 272], "task": [11, 14, 16, 18, 19, 20, 22, 100, 101, 114, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 130, 131, 132, 135, 136, 137, 148, 151, 156, 160, 171, 217, 239, 274, 277], "potenti": [11, 16, 45, 55, 60, 66, 67, 71, 75, 78, 100, 101, 134, 146, 148, 157, 170, 171, 172, 173, 174, 175, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 225, 226, 227, 228, 229, 230, 231, 232, 233, 239, 250, 252, 255, 272, 274], "abl": [11, 17, 239, 250], "write": [11, 12, 15, 17, 21, 45, 101, 132, 174, 181, 185, 193, 194, 201, 208, 209, 211, 215, 221, 222, 224, 239, 256, 274], "result": [11, 14, 17, 18, 19, 22, 31, 42, 43, 44, 45, 46, 47, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 80, 82, 91, 104, 113, 125, 129, 132, 135, 146, 151, 154, 157, 159, 160, 174, 212, 217, 239, 250, 268, 274, 277], "pars": [11, 17, 18, 19, 22, 29, 30, 40, 42, 43, 44, 45, 46, 47, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 64, 65, 104, 132, 148, 156, 170, 174, 217, 277], "A": [12, 13, 16, 18, 19, 20, 22, 26, 41, 42, 43, 45, 46, 47, 48, 50, 52, 53, 54, 55, 57, 58, 59, 61, 66, 67, 68, 70, 71, 72, 75, 76, 77, 78, 79, 82, 85, 87, 91, 101, 107, 113, 136, 140, 148, 160, 163, 168, 214, 217, 218, 219, 220, 221, 227, 239, 244, 250, 252, 261, 274, 277], "its": [12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 45, 60, 91, 100, 101, 104, 132, 136, 147, 148, 171, 181, 185, 189, 193, 197, 201, 205, 211, 214, 217, 220, 221, 222, 224, 239, 277, 278], "member": [12, 13, 14, 15, 16, 18, 20, 22, 81, 113, 132, 136, 148, 181, 185, 189, 193, 197, 201, 205, 217, 220, 221, 222, 224], "accord": [12, 13, 14, 15, 16, 113, 132, 181, 185, 189, 193, 197, 201, 205, 220, 221, 222, 224, 239, 248, 255, 277, 278], "has_any_valu": [12, 220], "true": [12, 13, 15, 18, 19, 20, 21, 22, 41, 42, 43, 44, 45, 46, 47, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 91, 101, 113, 132, 133, 135, 136, 137, 147, 148, 149, 150, 172, 173, 174, 198, 214, 215, 216, 217, 218, 224, 239, 250, 278], "ani": [12, 13, 19, 23, 24, 42, 43, 44, 45, 46, 47, 49, 50, 51, 53, 54, 55, 56, 57, 58, 60, 63, 64, 65, 113, 170, 174, 239, 277, 278], "save_to_fil": [12, 13, 15, 101, 224, 277], "valid": [12, 13, 15, 18, 21, 41, 42, 43, 44, 45, 46, 47, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 64, 65, 101, 174, 198, 224], "content": [12, 13, 16, 19, 22, 133, 170, 171, 172, 173, 257, 277, 278], "where": [12, 132, 239, 248, 255, 278], "data": [12, 15, 18, 19, 64, 146, 157, 168, 189, 197, 205, 210, 214, 220, 222, 223, 224, 234, 250, 252, 255, 277], "should": [12, 13, 22, 42, 43, 44, 45, 46, 47, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 64, 65, 69, 91, 132, 157, 159, 166, 174, 181, 185, 193, 194, 201, 215, 221, 222, 239, 248, 250, 278], "written": [12, 18, 19, 21, 137, 147, 149, 150, 172, 215, 216, 218, 239, 277], "group": 13, "_member": 13, "form": [13, 41, 42, 45, 47, 52, 61, 64, 69, 149, 150, 223, 224, 277, 278], "obj": [13, 250], "_interactive_memb": 13, "non": [13, 113, 239, 250, 277, 278], "hidden": [13, 18, 19, 20, 21, 22, 136, 137, 147, 148, 149, 150, 172, 216, 217, 218], "acces": 13, "via": [13, 278], "sanit": 13, "whitespac": [13, 32, 56, 63], "special": [13, 56, 60, 63, 91, 210, 218, 277, 278], "charact": [13, 18], "replac": [13, 238, 239, 250, 278], "underscor": 13, "These": [13, 131, 220, 277], "notat": [13, 26, 168, 239, 278], "t": [13, 46, 137, 173, 174, 216, 238, 239, 248, 250, 278], "shape": 13, "_get_memb": 13, "It": [13, 18, 19, 20, 22, 42, 43, 44, 45, 46, 47, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 64, 65, 80, 100, 104, 113, 132, 136, 148, 159, 174, 217, 224, 236, 239, 278], "search": [13, 274, 277], "interactive_memb": 13, "clear": [13, 15, 101, 224], "do_not_check_requir": [13, 101], "eras": 13, "reset": [13, 171, 221, 224, 239, 248, 278], "default": [13, 16, 18, 19, 20, 21, 22, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 80, 82, 91, 98, 113, 115, 125, 129, 132, 135, 136, 137, 147, 148, 149, 150, 153, 154, 172, 174, 216, 217, 218, 238, 239, 244, 246, 248, 250, 272, 277, 278], "ad": [13, 91, 100, 136, 215, 239, 277], "subcontain": 13, "argument": [13, 18, 24, 42, 43, 44, 45, 46, 47, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 64, 65, 91, 92, 94, 101, 132, 157, 174, 239, 250, 278], "pass": [13, 42, 43, 44, 45, 46, 47, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 64, 65, 80, 104, 157, 174, 185, 193, 201, 221, 239, 250, 277, 278], "requir": [13, 19, 21, 34, 137, 147, 149, 150, 172, 182, 186, 190, 194, 198, 202, 206, 214, 215, 216, 218, 239, 274, 277, 278], "without": [13, 45, 56, 63, 274, 277], "except": [13, 15, 24, 29, 30, 45, 224, 239], "throw": [13, 45, 239], "which": [13, 16, 17, 18, 43, 45, 50, 54, 61, 132, 157, 239, 241, 248, 251, 277, 278], "prevent": 13, "neverthenless": 13, "anywai": [13, 41, 62], "previou": [13, 18, 19, 20, 21, 147], "get": [13, 101, 179, 220, 239, 278], "unknown": [13, 18, 45, 54, 55, 101, 171, 173, 217, 239, 257], "find": [13, 15, 113, 239], "child": [13, 18, 20, 91, 148, 215, 217], "try": [13, 239], "conain": 13, "mix": [13, 21, 26, 40, 45, 100, 101, 104, 132, 137, 147, 149, 150, 159, 171, 172, 216, 218, 272], "kwarg": [13, 18, 21, 22, 41, 48, 52, 59, 61, 62, 64, 90, 91, 104, 132, 135, 147, 149, 150, 153, 156, 157, 159, 182, 186, 190, 194, 198, 202, 206, 209, 210, 214, 215, 216, 217, 239, 250], "usag": [13, 88, 97, 98, 274], "input_paramet": [13, 115, 116, 118, 120, 122, 124, 125, 126, 127, 128, 129, 130, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 153, 154, 156, 157, 159, 160, 178, 239, 272, 274], "niter": 13, "5": [13, 168, 278], "ne": [13, 278], "10": [13, 28, 168, 255], "union": [13, 42, 43, 44, 45, 46, 47, 49, 50, 51, 53, 54, 55, 56, 57, 58, 60, 63, 65, 98, 113, 133, 174, 239], "string": [13, 18, 26, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 64, 65, 71, 76, 83, 125, 129, 132, 171, 174, 239, 272, 278], "unkwnown": 13, "how": [13, 18, 19, 21, 22, 82, 137, 147, 149, 150, 172, 215, 216, 218, 239, 274, 277], "handl": [13, 33, 91, 239, 251], "known": [13, 147, 148, 239, 278], "custom": [13, 14, 18, 20, 41, 54, 55, 62, 148, 170, 172, 173, 174, 215, 239, 277, 278], "keyword": [13, 40, 239, 272], "onli": [13, 18, 45, 50, 54, 81, 94, 132, 146, 148, 239, 250, 251, 277, 278], "syntax": [13, 17, 239], "syntact": [13, 45, 239], "sugar": [13, 239], "remove_memb": 13, "remov": [13, 14, 18, 21, 100], "previous": [13, 132, 250], "nest": 13, "transform": [13, 45, 277], "well": 13, "to_str": 13, "_find_valu": [13, 101], "sought": [13, 239], "exist": [13, 220, 239, 248, 278], "static": [13, 18, 87, 103, 107, 113, 132, 135, 136, 137, 140, 148, 149, 150, 163, 168, 174, 215, 216, 217, 224, 227, 241, 244, 246, 250, 252, 261], "_interactive_member_nam": 13, "kei": [13, 24, 90, 113], "arrai": [13, 40, 45, 62, 64, 87, 96, 107, 113, 140, 157, 163, 214, 220, 227, 250, 261, 272, 277, 278], "thu": [13, 132, 250, 277, 278], "_add": 13, "implement": [13, 22, 277, 278], "could": [13, 22, 235, 236], "probabl": [13, 241], "classmethod": [14, 18, 20, 22, 100, 132, 135, 217, 224, 236], "factori": [14, 100], "definition_typ": 14, "signatur": [14, 91], "callabl": [14, 42, 43, 44, 45, 46, 47, 49, 50, 51, 53, 54, 55, 56, 57, 58, 60, 63, 65, 174, 239], "capabl": [15, 277, 278], "read": [15, 18, 19, 22, 45, 102, 132, 135, 146, 156, 170, 172, 173, 185, 193, 194, 201, 208, 209, 210, 215, 220, 221, 222, 224, 239, 251, 252, 255, 274], "format": [15, 18, 19, 22, 26, 42, 43, 44, 45, 46, 47, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 64, 65, 69, 80, 82, 100, 101, 134, 135, 136, 137, 148, 171, 174, 175, 176, 177, 213, 215, 217, 224, 272, 277, 278], "readabl": [15, 41, 42, 43, 45, 46, 47, 50, 51, 52, 53, 56, 58, 61, 63, 64, 65, 174, 224], "rais": [15, 24, 29, 30, 87, 107, 109, 111, 140, 142, 144, 163, 165, 224, 227, 229, 231, 233, 261, 263, 265, 267], "error": [15, 41, 42, 43, 44, 45, 46, 47, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 64, 65, 104, 154, 157, 159, 160, 174, 224, 250, 274, 277], "complet": [15, 224, 278], "read_from_fil": [15, 22, 104, 224], "clear_first": [15, 224], "present": [15, 19, 21, 45, 147, 224, 278], "preserv": [15, 224], "standard": [16, 66, 67, 68, 70, 71, 72, 73, 75, 76, 77, 78, 79, 83, 85, 134, 148, 213, 215, 217, 239, 277], "whose": [16, 18, 19, 46, 91, 170, 173, 185, 193, 201, 221, 222, 239], "predefind": 16, "sectiondefinit": [16, 125, 126, 127, 128, 129, 130, 134, 135, 272], "basecontainerdefinit": [16, 17, 20, 22, 134, 135, 136, 146, 148, 180, 182, 184, 186, 188, 190, 192, 194, 196, 198, 200, 202, 204, 206, 213, 214, 215, 217, 272, 277], "basesectiondefinit": [17, 134, 136, 146, 148, 180, 182, 184, 186, 188, 190, 192, 194, 196, 198, 200, 202, 204, 206, 213, 214, 215, 272], "basevaluedefinit": [17, 45, 60, 134, 137, 146, 147, 149, 150, 170, 172, 213, 216, 218, 272, 277], "confdefinit": [17, 134, 135, 213, 217, 272], "desrib": 17, "alternative_nam": [18, 19, 20, 21, 22, 136, 137, 147, 148, 149, 150, 172, 198, 216, 217, 218], "help": [18, 19, 20, 21, 22, 101, 136, 137, 148, 172, 217, 278], "is_hidden": [18, 19, 20, 21, 22, 136, 137, 147, 148, 149, 150, 172, 216, 217, 218], "has_hidden_memb": [18, 20, 136, 148], "is_opt": [18, 19, 20, 21, 22, 136, 137, 147, 148, 149, 150, 172, 216, 217, 218], "name_in_grammar": [18, 19, 20, 21, 22, 45, 60, 64, 136, 137, 147, 148, 149, 150, 172, 216, 217, 218], "force_ord": [18, 20, 136, 148, 215, 217], "denot": [18, 19, 20, 21, 22, 136, 137, 147, 148, 149, 150, 172, 216, 217, 218, 250, 278], "boolean": [18, 19, 20, 22, 50, 82, 136, 148, 217, 239, 272], "offer": [18, 19, 20, 22, 103, 136, 148, 217], "usual": [18, 19, 20, 22, 136, 148, 217], "anoth": [18, 19, 20, 22, 136, 148, 181, 185, 193, 201, 211, 217, 221], "direct": [18, 19, 20, 22, 136, 148, 217, 220], "sens": [18, 19, 20, 22, 136, 148, 217], "variabl": [18, 19, 20, 22, 45, 50, 54, 133, 136, 148, 217, 222, 239, 278], "recogn": [18, 19, 20, 22, 136, 148, 217], "posit": [18, 19, 20, 22, 45, 60, 91, 136, 147, 148, 193, 201, 217, 239, 248, 250], "pot": [18, 19, 20, 22, 136, 148, 217, 251, 278], "short": [18, 19, 20, 22, 136, 148, 217], "messag": [18, 19, 20, 22, 29, 30, 41, 42, 43, 44, 45, 46, 47, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 64, 65, 136, 148, 174, 217, 278], "perex": [18, 19, 20, 22, 136, 148, 217], "inform": [18, 19, 20, 22, 45, 136, 148, 167, 168, 190, 217, 237, 250, 255, 278], "value_name_format": [18, 21, 215], "_dict_from_named_valu": 18, "arg": [18, 59, 90, 91, 132, 147, 149, 150, 153, 156, 159, 185, 193, 201, 209, 210, 214, 215, 216, 221, 239, 250], "auxiliari": 18, "order": [18, 21, 137, 147, 148, 149, 150, 172, 194, 215, 216, 217, 218, 221, 277], "_init_arg": [18, 137], "copi": [18, 21, 45, 82, 93, 236, 239, 241, 243, 246, 248], "modifi": [18, 91, 239, 278], "create_object": [18, 19], "all_member_nam": 18, "_values_grammar": 18, "_grammar": [18, 21, 22, 42, 43, 46, 47, 50, 51, 53, 56, 58, 60, 61, 63, 64, 65, 174], "input": [18, 38, 39, 50, 54, 68, 72, 76, 82, 113, 114, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 146, 169, 239, 274, 277], "delimited_custom_value_grammar": [18, 20], "grammar": [18, 19, 20, 22, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 49, 50, 51, 52, 53, 56, 58, 61, 62, 63, 64, 65, 66, 68, 70, 71, 72, 75, 76, 77, 78, 79, 80, 81, 82, 84, 85, 146, 172, 173, 174, 217, 272, 277], "custom_name_charact": [18, 217], "abcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyz0123456789_": [18, 217], "appear": [18, 20, 22, 40, 50, 218], "custom_member_grammar": 18, "value_nam": 18, "_first_section_is_fix": 18, "ve": 18, "unord": 18, "sequenc": [18, 40, 45, 272], "fix": [18, 21, 22, 28, 137, 147, 148, 149, 150, 172, 215, 216, 217, 218], "parse_fil": 18, "return_value_onli": [18, 22], "whole_str": [18, 45], "parse_return": [18, 22], "val": [18, 22, 41, 45, 46, 47, 55, 60, 61, 229], "unpack": 18, "unnecessari": 18, "tupl": [18, 19, 22, 41, 45, 62, 104, 113, 159, 168], "async": [18, 45, 103, 104, 153, 156], "parse_from_stream": [18, 45], "stream": [18, 45, 277], "up_to": [18, 45], "start": [18, 45, 113, 278], "asyncio": [18, 102, 103, 277], "write_alternative_nam": [19, 198], "result_class": [19, 20, 21, 135, 153, 156, 159, 182, 186, 190, 194, 198, 202, 206, 214, 215, 217], "ommit": [19, 45, 50, 54], "expect": [19, 21, 81, 147], "locat": [19, 21, 147, 277, 278], "By": [19, 21, 41, 42, 43, 45, 46, 47, 50, 51, 52, 53, 56, 58, 61, 63, 64, 65, 147, 174, 239, 248], "instanti": [19, 21, 45, 64, 132, 147, 277], "chang": [19, 21, 147, 239, 250, 277, 278], "text": [19, 64, 252, 278], "longer": 19, "_tuple_with_my_nam": [19, 22], "expr": [19, 22, 31, 37], "has_valu": [19, 45, 60], "do_not_skip_whitespaces_before_nam": [19, 136], "inputparamet": [20, 131, 135, 239, 272, 277], "typic": [20, 113, 211], "custom_value_nam": [20, 22], "custom_valu": 20, "default_valu": [21, 41, 42, 43, 44, 45, 46, 47, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 137, 147, 149, 150, 172, 174, 216, 218], "fixed_valu": [21, 137, 147, 149, 150, 172, 216, 218], "name_format": [21, 137, 147, 149, 150, 172, 216, 218], "basetyp": [21, 40, 41, 42, 43, 44, 46, 47, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 82, 137, 147, 149, 150, 170, 172, 174, 216, 218, 272, 277], "alternativelli": [21, 137, 147, 149, 150, 172, 216, 218], "still": [21, 137, 147, 149, 150, 172, 216, 218, 278], "conf": [21, 137, 147, 149, 150, 172, 216, 218], "prefix": [21, 22, 42, 43, 44, 45, 46, 47, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 137, 147, 149, 150, 172, 174, 216, 218], "name_value_delimit": [21, 137, 147, 149, 150, 172, 216, 218], "omit": [21, 137, 147, 149, 150, 172, 216, 218], "mean": [21, 41, 42, 43, 44, 45, 46, 47, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 113, 135, 137, 147, 149, 150, 172, 174, 216, 218, 239, 278], "access": [21, 45, 61, 92, 137, 147, 149, 150, 172, 216, 218, 239, 250], "formated_nam": 21, "get_valu": 21, "f": [21, 45, 46, 91, 174, 278], "deriv": 22, "commonli": [22, 45, 60], "kind": 22, "better": [22, 87, 107, 140, 163, 227, 261], "purpos": [22, 251], "from_dict": 22, "def": [22, 91, 92], "recurs": 22, "custom_sect": 22, "There": [22, 148, 172, 217, 277, 278], "tweak": 22, "ignor": [22, 132, 239], "comment": 22, "would": [22, 132], "onc": [22, 93, 94], "element": [23, 27, 45, 82, 236], "condit": [23, 29, 42, 43, 44, 45, 46, 47, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 64, 65, 174], "duplicit": 24, "12e": 26, "lead": [26, 278], "zero": [26, 64, 65, 113, 220, 236, 239, 244], "fortran": [26, 97, 98], "scientif": 26, "1000000000000e": 26, "00": 26, "14": [26, 168], "6e": 26, "1000000e": 26, "01": 26, "convert": [26, 41, 42, 43, 44, 45, 46, 47, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 64, 65, 82, 92, 174, 239, 250], "output": [26, 45, 50, 54, 80, 97, 98, 102, 104, 132, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 169, 239, 272, 274, 278], "white": [27, 272], "core": [27, 28, 170, 173, 236], "token": [27, 28, 45, 170, 173], "parserel": [27, 28, 32, 34, 35, 36, 38, 41, 46, 47, 50, 51, 53, 56, 58, 60, 62, 63, 65, 170, 173, 174], "abc": [27, 28, 157, 170, 173, 237, 239], "whitechar": 28, "pp": 28, "respect": 28, "default_white_char": 28, "_abc_impl": [28, 173, 239], "_abc": [28, 173, 239], "_abc_data": [28, 173, 239], "parseel": 29, "fail": [29, 30, 278], "pa": 30, "action": 30, "parseelemenet": 30, "delim": 31, "suppress": [31, 36, 38, 41, 60, 97, 98], "eof": 32, "end": [32, 53, 174], "newlin": [33, 34, 35, 136, 148, 172, 215], "restor": 33, "state": 33, "optin": 35, "quot": [36, 54, 56, 76], "pattern": [39, 173, 277], "separ": [39, 40, 45, 170, 173, 174, 213, 272, 277], "basemix": [40, 54, 55, 57, 272], "baserealwithunit": [40, 49, 59, 272], "basestr": [40, 53, 56, 63, 272], "date": [40, 239, 272, 278], "flag": [40, 45, 54, 80, 272], "integ": [40, 54, 55, 65, 82, 83, 84, 85, 113, 239, 272, 278], "linestr": [40, 55, 71, 272], "potmix": [40, 75, 272], "qstring": [40, 272], "rang": [40, 272], "realwithunit": [40, 272], "setof": [40, 54, 55, 81, 272], "tabl": [40, 45, 60, 157, 168, 272], "unsign": [40, 272], "definitionfil": 40, "each": [40, 93, 157, 250, 277, 278], "grammar_typ": [41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 170, 174, 272, 277], "length": [41, 62, 64, 113, 250], "max_length": [41, 62], "min_length": [41, 62], "as_list": [41, 62], "numpi": [41, 45, 73, 74, 87, 107, 140, 163, 227, 261, 277], "min_": [41, 62], "minim": [41, 62], "maxim": [41, 62], "np": [41, 62, 73, 113, 132, 239, 278], "ndarrai": [41, 62, 113], "sp": 41, "tab": [41, 278], "delimiter_str": [41, 62], "grammar_nam": [41, 42, 43, 45, 46, 47, 50, 51, 52, 53, 56, 58, 61, 63, 64, 65, 174], "human": [41, 42, 43, 45, 46, 47, 50, 51, 52, 53, 56, 58, 61, 63, 64, 65, 174], "express": [41, 42, 43, 45, 46, 47, 50, 51, 52, 53, 56, 58, 61, 63, 64, 65, 174], "what": [41, 42, 43, 45, 46, 47, 50, 51, 52, 53, 56, 58, 61, 63, 64, 65, 157, 174, 239], "setnam": [41, 42, 43, 45, 46, 47, 50, 51, 52, 53, 56, 58, 61, 63, 64, 65, 174], "sometim": [41, 42, 43, 45, 46, 47, 50, 51, 52, 53, 56, 58, 61, 63, 64, 65, 132, 174], "desir": [41, 42, 43, 45, 46, 47, 50, 51, 52, 53, 56, 58, 61, 63, 64, 65, 174, 241], "even": [41, 42, 43, 45, 46, 47, 50, 51, 52, 53, 56, 58, 61, 63, 64, 65, 91, 174], "shorter": [41, 42, 43, 45, 46, 47, 50, 51, 52, 53, 56, 58, 61, 63, 64, 65, 174], "_string": [41, 45, 46, 47, 55, 60, 61, 64], "_valid": [41, 42, 43, 44, 45, 46, 47, 50, 51, 52, 58, 60, 61, 64, 65], "parse_check": [41, 42, 43, 44, 45, 46, 47, 50, 51, 52, 58, 60, 61, 64, 65], "cannon": [41, 42, 45, 52, 61, 64], "postfix": [42, 43, 44, 45, 46, 47, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 64, 65, 132, 133, 174, 239], "after_convert": [42, 43, 44, 45, 46, 47, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 64, 65, 174], "variant": [42, 54, 55, 72, 75], "anyth": [42, 104, 159, 239, 277], "befor": [42, 43, 44, 45, 46, 47, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 64, 65, 174, 181, 185, 193, 194, 201, 215, 221, 278], "invalid": [42, 43, 44, 45, 46, 47, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 64, 65, 174], "interpret": [42, 43, 44, 45, 46, 47, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 64, 65, 132, 174, 239, 278], "explain": [42, 43, 44, 45, 46, 47, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 64, 65, 174], "appli": [42, 43, 44, 45, 46, 47, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 64, 65, 80, 82, 174], "enter": [42, 43, 44, 45, 46, 47, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 64, 65, 174], "string_typ": [42, 54, 55], "param_nam": [42, 43, 45, 61, 62, 64], "get_typ": [42, 57], "unit": [43, 49, 59, 250], "append": [43, 132, 133, 239], "automat": [43, 250, 277, 278], "grammar_cach": 43, "cach": [43, 94, 211, 212], "_grammar_unit": 43, "numpy_typ": [43, 45, 46, 51, 58, 64, 65], "carri": 45, "Such": [45, 113], "yield": 45, "pair": [45, 101, 277], "dure": [45, 157, 185, 193, 194, 201, 208, 209, 210, 211, 215, 221, 222, 241, 278], "confus": 45, "missing_valu": [45, 50, 54], "opposit": [45, 250], "absenc": 45, "On": [45, 278], "hand": 45, "identifi": [45, 60, 113, 147, 148], "deafault": 45, "descendatn": 45, "transform_grammar": [45, 62], "chanc": [45, 62], "alter": [45, 62, 91, 239, 278], "configuraion": [45, 50, 54], "can_be_ommit": [45, 50, 54], "ommis": [45, 50, 54], "do_not_output_the_opt": [45, 50, 54], "_valueerror": 45, "error_messag": 45, "parameternam": 45, "enrich": [45, 61], "abil": [45, 61], "letter": 46, "dd": 47, "mm": 47, "yyyi": 47, "re": [47, 173], "p": [47, 239, 278], "d": [47, 238, 278], "2": [47, 62, 64, 84, 113, 168, 218, 255, 278], "y": 47, "4": [47, 113, 132, 168, 237, 239, 278], "take": [48, 52, 53, 94, 131], "predefin": [48, 52, 104, 159, 178, 278], "rydberg": 49, "specifi": [49, 87, 107, 109, 111, 132, 140, 142, 144, 159, 163, 165, 227, 229, 231, 233, 239, 261, 263, 265, 267, 278], "ev": 49, "ry": 49, "07349864494991327": 49, "convers": 49, "factor": 49, "empti": [50, 278], "sign": [51, 70], "int": [51, 65, 73, 74, 81, 82, 83, 98, 104, 113, 159, 236, 239, 243, 250, 255], "skipto": 53, "lineend": 53, "stringend": 53, "word": 56, "char": [56, 63], "w": [56, 63, 239], "z": [56, 63], "accept": [57, 64, 278], "two": [57, 104, 113, 168, 248, 252, 277, 278], "fnumber": 58, "insid": 60, "_grammar_nam": 60, "format_al": [61, 64, 80, 82], "allowed_valu": 61, "column": [64, 157], "header": [64, 218], "free_head": 64, "21": [64, 168], "17": [64, 168, 278], "16": [64, 168], "numbering_label": 64, "numbering_format": 64, "row_condit": 64, "named_result": 64, "optionali": 64, "iq": 64, "irefq": 64, "imq": 64, "noq": 64, "itoq": 64, "conc": 64, "000": 64, "new": [64, 80, 91, 101, 132, 157, 185, 193, 201, 221, 237, 239, 250, 278], "featureless": 64, "cannot": [64, 185, 193, 201, 221], "number_of_collumn": 64, "zero_data": 64, "row": 64, "dtype": 64, "appropri": [69, 83, 239], "format_for_the_typ": 69, "default_format": 69, "canon": [73, 74, 81], "map": [73, 74, 81, 83, 113, 168, 171], "intern": [73, 168], "doctest": [73, 84, 113], "int64": [73, 74], "float64": 74, "bool_": 74, "guess": [80, 82, 236], "becom": 80, "left": [80, 133, 239], "unless": 80, "ordereddict": [81, 83, 89, 272], "collect": [81, 89, 90, 112, 113, 157], "normalize_typ": [81, 272], "descendatnt": 82, "format_for_typ": [82, 272], "gue": 84, "testcas": [86, 88, 106, 108, 109, 110, 111, 139, 141, 142, 143, 144, 162, 164, 165, 226, 228, 229, 230, 231, 232, 233, 260, 262, 263, 264, 265, 266, 267, 272], "unittest": [86, 87, 106, 107, 108, 109, 110, 111, 139, 140, 141, 142, 143, 144, 162, 163, 164, 165, 226, 227, 228, 229, 230, 231, 232, 233, 260, 261, 262, 263, 264, 265, 266, 267], "test": [86, 87, 88, 106, 107, 108, 109, 110, 111, 139, 140, 141, 142, 143, 144, 162, 163, 164, 165, 226, 227, 228, 229, 230, 231, 232, 233, 257, 260, 261, 262, 263, 264, 265, 266, 267, 272, 278], "init_test": [87, 88, 107, 108, 109, 110, 111, 140, 141, 142, 143, 144, 163, 164, 165, 227, 228, 229, 230, 231, 232, 233, 261, 262, 263, 264, 265, 266, 267, 272], "methodnam": [87, 107, 109, 111, 140, 142, 144, 163, 165, 227, 229, 231, 233, 261, 263, 265, 267], "runtest": [87, 107, 109, 111, 140, 142, 144, 163, 165, 227, 229, 231, 233, 261, 263, 265, 267], "useful": [87, 107, 140, 163, 227, 261], "assert": [87, 107, 140, 163, 227, 261], "comparison": [87, 107, 140, 163, 227, 261], "execut": [87, 107, 109, 111, 131, 132, 133, 135, 140, 142, 144, 160, 163, 165, 227, 229, 231, 233, 239, 261, 263, 265, 267, 277, 278], "valueerror": [87, 107, 109, 111, 140, 142, 144, 163, 165, 227, 229, 231, 233, 261, 263, 265, 267], "doe": [87, 107, 109, 111, 140, 142, 144, 163, 165, 227, 229, 231, 233, 250, 261, 263, 265, 267, 277, 278], "assertasyncequ": [87, 107, 140, 163, 227, 261], "b": [87, 103, 107, 140, 163, 227, 261], "assertasyncrais": [87, 107, 140, 163, 227, 261], "runasync": [87, 107, 140, 163, 227, 261], "corr": [87, 107, 140, 163, 227, 261], "setup": [87, 107, 140, 163, 227, 261], "regist": [87, 107, 140, 163, 227, 261], "equal": [87, 107, 140, 163, 227, 241, 248, 250, 261], "rel": 88, "work": [88, 274], "__package__": 88, "els": 88, "__name__": 88, "class_properti": [89, 272], "thorough": 89, "misc": [90, 91, 92, 93, 94, 95, 96, 272], "first_item": 90, "func": 91, "prepend": 91, "self_nam": 91, "keyword_onli": 91, "exampl": [91, 92, 239, 278], "new_param": 91, "param": [91, 100, 101, 132, 171], "old": [91, 256, 278], "retain": [91, 93], "decor": [92, 94], "singl": [92, 277], "cl": [92, 278], "directli": [92, 278], "cls_properti": 92, "some_possibly_cached_valu": 92, "x": [92, 278], "uniqu": [93, 113, 222], "fce": [94, 95, 212], "functool": 94, "care": [94, 131], "mock": 95, "numba": [95, 96], "jit": 95, "compil": [95, 132, 173, 278], "avail": [95, 113, 250, 278], "occur": [96, 277], "instal": [96, 274], "acceler": 96, "nooutput": [97, 272], "context": [97, 98], "manag": [97, 98, 274, 278], "descriptor": [97, 98], "no_output": [98, 272], "fd": 98, "iter": [98, 113, 157, 212, 239, 277, 278], "stdout": [98, 104, 132, 153, 156, 239], "customopt": [99, 170, 171, 272], "store": [99, 132, 181, 185, 189, 193, 197, 201, 205, 210, 221, 222, 250, 278], "valuedefinit": [100, 101, 134, 136, 171, 272], "me": 100, "my": [100, 179, 278], "value_definit": 100, "dummi": [101, 239, 277], "compatibil": 101, "get_path": 101, "asynciofileread": [102, 272], "baseprocessoutputread": [102, 135, 152, 153, 155, 156, 158, 159, 272], "reader": [102, 103, 152, 153, 154, 155, 156, 157, 159, 272, 277, 278], "process": [102, 104, 132, 135, 159, 194, 215, 220, 221, 238, 239, 268, 278], "emploi": [102, 239, 277], "stdio": 102, "stderr": [102, 104], "concur": 102, "process_output_read": [103, 104, 132, 135, 152, 153, 155, 156, 158, 159, 272], "filenam": [103, 132, 157, 224, 238, 239, 255, 257, 258, 278], "buffers": 103, "8192": 103, "mimic": 103, "streamread": 103, "fact": [103, 171], "synchron": 103, "close": 103, "readlin": 103, "separator_shift": 103, "sep": 103, "readuntil": 103, "asyn": 104, "read_error": [104, 159], "read_output": [104, 153, 156, 159, 277], "run_subprocess": 104, "wait": [104, 159], "postprocess": [104, 159, 277, 278], "intend": [104, 159], "subclass": [104, 159], "cmd": 104, "outfil": 104, "print_output": [104, 132, 239], "return_cod": [104, 154, 157, 160], "commontest": 108, "test_common": [109, 272], "test_asyncio_file_read": 109, "grammartest": 110, "test_grammar_typ": [111, 272], "test_typ": 111, "_test_typ": 111, "solv": 112, "unique_valu": [113, 272], "value_to_class_id": 113, "effect": [113, 250], "between": [113, 168, 277], "distinct": 113, "criterion": 113, "from_valu": 113, "id": [113, 237], "eq": 113, "revers": 113, "start_from": 113, "iter_uniqu": 113, "len_of_uniqu": 113, "none_tupl": 113, "len": [113, 239, 278], "Then": 113, "assign": [113, 157], "uniquevalu": 113, "inputparameterss": [115, 134, 213], "configurt": 115, "arp": [117, 272, 278], "input_parameters_definit": [117, 119, 121, 123, 126, 127, 128, 130, 135, 136, 137, 272], "inputparametersdefinit": [117, 119, 121, 123, 132, 134, 272], "phagen": [121, 132, 239, 272, 278], "scf": [123, 132, 156, 157, 239, 272, 277, 278], "adsi": 125, "suppli": [131, 239, 278], "also": [131, 236, 277, 278], "about": [131, 167, 168, 237, 255, 274], "inputfil": 132, "outputfil": 132, "moreov": 132, "proper": 132, "task_nam": 132, "_default_mpi_runn": 132, "default_mpi_runn": 132, "mpi": [132, 135, 239, 274], "runner": [132, 239, 278], "autodetect": [132, 239], "mpi_runn": 132, "mpirun": [132, 239, 278], "suitabl": 132, "found": [132, 239, 241], "shell": [132, 278], "command": 132, "is_mpi": 132, "Will": 132, "regardless": 132, "explan": 132, "run_process": 132, "input_fil": [132, 239, 278], "output_fil": [132, 239, 278], "executable_postfix": [132, 239], "paamet": 132, "binari": 132, "mode": [132, 198, 239], "too": [132, 239], "info": [132, 239, 278], "select": [132, 277], "infrom": 132, "depend": 132, "postfixi": 132, "processoutputread": 132, "result_read": [132, 135], "read_output_from_fil": 132, "again": [132, 277], "executable_param": 132, "stdin": 132, "popen": 132, "set_opt": 132, "is_it_a_input_parameters_nam": 132, "create_input_paramet": 132, "default_paramet": 132, "from_fil": [132, 224, 278], "sprkkr_executable_suffix": [133, 239, 278], "simlilar": [134, 213], "share": [134, 213, 248, 250, 277, 278], "kkrscf": [135, 160], "whether": [135, 239, 250], "child_class": [135, 136, 148, 215, 217], "grammar_of_delimit": [135, 136, 137, 148, 149, 150, 174, 215, 216, 217], "custom_class": [135, 136, 148, 215, 217], "custom_value_grammar": [135, 217], "ouptut": [136, 148, 215, 239], "testdefinit": 141, "test_definit": [142, 272], "testinputparamet": 143, "test_input_paramet": [144, 272], "test_section_delimiter_valu": 144, "test_custom_valu": 144, "test_input_parameters_definit": 144, "parser": [145, 151, 158], "outputnonamevaluedefinit": [146, 272], "outputvaluedefinit": [146, 147, 148, 150, 272], "outputsectiondefinit": [146, 156, 272], "outputvalueequaldefinit": [146, 272], "obtain": [146, 274, 277, 278], "although": 146, "approach": 146, "output_definit": [147, 148, 149, 150, 156, 272], "space": [150, 217], "defaultoutputread": 152, "task_result": [152, 153, 154, 155, 156, 157, 159, 160, 272], "outputread": [152, 153, 155, 156, 158, 272, 277], "defaultresult": [152, 153], "taskresult": [152, 154, 155, 157, 158, 272], "scfoutputread": [155, 277], "scfresult": [155, 156, 278], "atoms_conf_typ": 156, "potential_filenam": [157, 239, 278], "converg": [157, 277, 278], "charg": [157, 239, 278], "densiti": 157, "further": [157, 211, 239, 274, 278], "hopefulli": 157, "wavefunct": [157, 278], "total": 157, "last": [157, 239], "coverg": 157, "iteration_valu": 157, "etot": 157, "last_iter": [157, 278], "plot": 157, "logscal": 157, "err": 157, "render": 157, "screen": 157, "matplotlib": 157, "ax": 157, "construct": 159, "inputparametersresult": 159, "testoutput": 164, "test_output": [165, 272], "relat": 166, "lattic": [166, 167, 168, 185, 186, 187], "geometri": [166, 185, 250], "latticedata": [167, 272], "lattice_data": [168, 272], "ap": 168, "c_i": 168, "cf": 168, "o_h": 168, "ci": 168, "cp": 168, "hp": 168, "d_6h": 168, "hr": 168, "d_3d": 168, "mp": 168, "c_2h": 168, "oF": 168, "d_2h": 168, "oi": 168, "op": 168, "o": 168, "ti": 168, "d_4h": 168, "tp": 168, "cell_symmetri": 168, "triclin": 168, "13": [168, 278], "cubic": 168, "face": 168, "center": 168, "m3m": 168, "bodi": 168, "12": [168, 215], "11": 168, "hexagon": 168, "6": [168, 239, 278], "mmm": 168, "trigon": 168, "3m": 168, "monoclin": 168, "orthoromb": 168, "9": 168, "tetragon": 168, "8": [168, 237, 278], "pearson": 168, "symbol": [168, 236, 241, 250, 278], "international_numbers_to_ap": 168, "15": 168, "27": 168, "39": 168, "41": 168, "43": 168, "50": 168, "55": 168, "61": 168, "73": 168, "74": 168, "18": 168, "77": 168, "19": 168, "80": 168, "20": 168, "81": 168, "84": 168, "22": 168, "87": 168, "23": 168, "88": 168, "24": 168, "89": 168, "25": 168, "90": 168, "26": 168, "93": 168, "99": 168, "28": 168, "102": 168, "29": 168, "108": 168, "30": 168, "114": 168, "31": 168, "120": 168, "32": 168, "126": 168, "33": 168, "129": 168, "34": 168, "135": 168, "35": 168, "138": 168, "36": 168, "145": 168, "37": 168, "147": 168, "38": 168, "150": 168, "156": 168, "40": 168, "162": 168, "168": 168, "42": 168, "174": 168, "177": 168, "44": 168, "180": 168, "45": 168, "183": 168, "46": 168, "186": 168, "47": 168, "192": 168, "48": 168, "193": 168, "49": 168, "195": 168, "198": 168, "51": 168, "204": 168, "52": 168, "210": 168, "53": 168, "216": 168, "54": 168, "222": 168, "228": 168, "56": 168, "231": 168, "57": 168, "234": 168, "58": 168, "240": 168, "59": 168, "247": 168, "60": 168, "249": 168, "255": 168, "62": 168, "257": 168, "63": 168, "263": 168, "64": [168, 278], "269": 168, "65": 168, "275": 168, "66": 168, "278": 168, "67": 168, "281": 168, "68": 168, "287": 168, "69": 168, "299": 168, "70": 168, "300": 168, "71": 168, "302": 168, "72": 168, "303": 168, "306": 168, "308": 168, "75": 168, "314": 168, "76": 168, "315": 168, "316": 168, "78": 168, "317": 168, "79": 168, "318": 168, "319": 168, "320": 168, "82": 168, "321": 168, "83": 168, "322": 168, "323": 168, "85": 168, "324": 168, "86": 168, "326": 168, "328": 168, "329": 168, "331": 168, "332": 168, "91": 168, "333": 168, "92": 168, "334": 168, "335": 168, "94": 168, "336": 168, "95": 168, "337": 168, "96": 168, "338": 168, "97": 168, "339": 168, "98": 168, "340": 168, "341": 168, "100": 168, "342": 168, "101": 168, "343": 168, "344": 168, "103": 168, "345": 168, "104": 168, "346": 168, "105": 168, "347": 168, "106": 168, "348": 168, "107": 168, "349": 168, "350": 168, "109": 168, "351": 168, "110": 168, "352": 168, "111": 168, "353": 168, "112": 168, "354": 168, "113": 168, "355": 168, "356": 168, "115": 168, "357": 168, "116": 168, "358": 168, "117": 168, "359": 168, "118": 168, "360": 168, "119": 168, "361": 168, "362": 168, "121": 168, "363": 168, "122": 168, "364": 168, "123": 168, "365": 168, "124": 168, "366": 168, "125": 168, "368": 168, "370": 168, "127": 168, "371": 168, "128": 168, "372": 168, "374": 168, "130": 168, "376": 168, "131": 168, "377": 168, "132": 168, "378": 168, "133": 168, "380": 168, "134": 168, "382": 168, "383": 168, "136": 168, "384": 168, "137": 168, "386": 168, "388": 168, "139": 168, "389": 168, "140": 168, "390": 168, "141": 168, "392": 168, "142": 168, "394": 168, "143": 168, "396": 168, "144": 168, "398": 168, "400": 168, "146": 168, "401": 168, "404": 168, "148": 168, "405": 168, "149": 168, "407": 168, "408": 168, "151": 168, "409": 168, "152": 168, "410": 168, "153": 168, "411": 168, "154": 168, "412": 168, "155": 168, "414": 168, "415": 168, "157": 168, "416": 168, "158": 168, "417": 168, "159": 168, "418": 168, "160": 168, "419": 168, "161": 168, "422": 168, "423": 168, "163": 168, "424": 168, "164": 168, "425": 168, "165": 168, "426": 168, "166": 168, "428": 168, "167": 168, "430": 168, "431": 168, "169": 168, "432": 168, "170": 168, "433": 168, "171": 168, "434": 168, "172": 168, "435": 168, "173": 168, "436": 168, "437": 168, "175": 168, "438": 168, "176": 168, "439": 168, "440": 168, "178": 168, "441": 168, "179": 168, "442": 168, "443": 168, "181": 168, "444": 168, "182": 168, "445": 168, "446": 168, "184": 168, "447": 168, "185": 168, "448": 168, "449": 168, "187": 168, "450": 168, "188": 168, "451": 168, "189": 168, "452": 168, "190": 168, "453": 168, "191": 168, "454": 168, "455": 168, "456": 168, "194": 168, "457": 168, "458": 168, "196": 168, "459": 168, "197": 168, "460": 168, "461": 168, "199": 168, "462": 168, "200": 168, "463": 168, "201": 168, "465": 168, "202": 168, "466": 168, "203": 168, "468": 168, "469": 168, "205": 168, "470": 168, "206": 168, "471": 168, "207": 168, "472": 168, "208": 168, "473": 168, "209": 168, "474": 168, "475": 168, "211": 168, "476": 168, "212": 168, "477": 168, "213": 168, "478": 168, "214": 168, "479": 168, "215": 168, "480": 168, "481": 168, "217": 168, "482": 168, "218": 168, "483": 168, "219": 168, "484": 168, "220": 168, "485": 168, "221": 168, "486": 168, "488": 168, "223": 168, "489": 168, "224": 168, "491": 168, "225": 168, "492": 168, "226": 168, "493": 168, "227": 168, "494": 168, "229": 168, "498": 168, "230": 168, "499": 168, "translat": 168, "perlov": 168, "bravais_number_from_pearson_symbol": 168, "pearson_symbol": 168, "custompotentialsect": [170, 217, 272], "custompotentialsectiondefinit": [170, 272], "customsectiontoken": [170, 272], "sectionstr": [170, 272], "custom_potential_sect": [171, 172, 173, 174, 272], "_depends_on": [171, 220, 221], "_set_from_atom": [171, 181, 185, 193, 197, 201, 220, 221, 222], "io_data": [171, 197, 209, 210, 211, 212, 222, 272], "_update_atom": [171, 185, 193, 201, 220, 221, 222, 241], "mandatori": [172, 182, 186, 190, 194, 198, 202, 206, 214, 215, 220], "obvious": 172, "let": [173, 277], "r": [173, 174], "dotal": 173, "parseimpl": 173, "instr": 173, "loc": 173, "doaction": 173, "delimiter_pattern": 174, "here": [176, 210], "potential_fil": [176, 239, 278], "potentialdefinit": [177, 213, 224, 272], "globalsystemparamet": [180, 182], "potential_sect": [180, 181, 184, 185, 188, 189, 192, 193, 196, 197, 200, 201, 204, 205, 220, 221, 222, 272], "potentialsect": [180, 181, 184, 185, 188, 189, 192, 193, 196, 197, 200, 201, 204, 205, 215, 219, 220, 222, 272], "globalsystemparameterdefinit": [180, 183], "potential_definit": [180, 182, 184, 186, 188, 190, 192, 194, 196, 198, 200, 202, 204, 206, 214, 215, 216, 217, 218, 224, 272, 277], "potsectiondefinit": [180, 182, 184, 186, 188, 190, 192, 194, 196, 198, 200, 202, 204, 206, 213, 214, 217, 272], "global_system_paramet": [181, 182, 183, 278], "write_io_data": [181, 185, 189, 193, 197, 201, 205, 221, 222], "propper": [181, 185, 193, 201, 221, 238, 256], "sprkkratom": [181, 185, 193, 201, 220, 221, 222, 239, 248, 249, 255, 272, 277, 278], "writeiodata": [181, 185, 193, 201, 208, 221, 222, 272], "reus": [181, 185, 193, 201, 221], "scale": [181, 185, 193, 201, 221], "constant": [181, 185, 193, 201, 221, 277], "mesh": [181, 185, 189, 190, 193, 201, 211, 221, 222, 242, 243, 248, 250, 272], "global": 182, "document": [182, 186, 190, 194, 198, 202, 206, 214, 215, 220, 239, 276, 278], "latticesect": [184, 186], "latticesectiondefinit": [184, 187], "retriev": [185, 193, 201], "read_io_data": [185, 193, 201, 221, 222], "readiodata": [185, 193, 201, 208, 221, 222, 272], "mechan": [185, 193, 201, 221], "independ": [185, 193, 201, 221], "testabl": [185, 193, 201, 221], "obejct": [185, 193, 201, 221], "been": [185, 193, 201, 221, 239, 278], "adapt": [185, 193, 201, 221], "differ": [185, 193, 194, 201, 215, 221, 237, 239, 248, 277, 278], "meshinformationsect": [188, 190], "uniquelistsect": [188, 189, 196, 197, 204, 205, 219, 272], "meshinformationsectiondefinit": [188, 191], "mesh_inform": [189, 190, 191], "_value_nam": [189, 197, 205, 222], "_value_class": [189, 197, 205, 222], "exponentialmesh": [189, 242, 248, 272], "occupationsect": [192, 194], "occupationsectiondefinit": [192, 195], "depends_on": [194, 214, 215], "than": [194, 215, 221], "prerequisit": [194, 215, 221], "referencesystemsect": [196, 198], "referencesystemsectiondefinit": [196, 199], "reference_system": [197, 198, 199, 211, 246, 248, 272], "referencesystem": [197, 245, 248, 272], "refer": [198, 211, 222, 248], "FOR": 198, "tight": 198, "sitessect": [200, 202], "sitessectiondefinit": [200, 203], "site": [201, 202, 203, 211, 235, 236, 240, 241, 243, 250, 272, 278], "typessect": [204, 206], "typessectiondefinit": [204, 207], "atomictyp": [205, 235, 241, 248, 272], "baseiodata": [208, 210, 211, 272], "iodata": 208, "serv": 208, "intermedi": 208, "storag": 208, "futur": 209, "noth": 210, "yet": [210, 278], "more": [211, 237, 240, 241, 274], "itself": [211, 244], "while": [211, 250, 277, 278], "demand": 211, "asearraysectiondefinit": [213, 272], "potvaluedefinit": [213, 215, 218, 272], "array_nam": [214, 220], "setarrai": 214, "predecessor": 214, "size": 214, "asearraysect": [214, 219, 272], "star": 218, "_counter": 218, "divid": [219, 277], "magnet": 220, "_": 220, "accordingli": [220, 222, 277, 278], "someth": 222, "updat": [222, 224, 239, 277, 278], "self_value_class": 222, "from_tupl": 222, "being": 224, "make_complet": 224, "necessari": [224, 250, 278], "update_atom": [224, 248], "set_from_atom": 224, "accor": 224, "from_atom": [224, 278], "testcustomsect": 228, "test_custom_sect": [229, 272], "assertnon": 229, "testpotenti": 230, "test_potenti": [231, 272], "test_grammar": 231, "test_exampl": 231, "test_sequ": 231, "test_reset": 231, "teststructur": 232, "test_structur": [233, 272], "test_lattic": 233, "place": [235, 236, 241, 278], "atomic_typ": [236, 241, 272], "n_core": 236, "n_valenc": 236, "n_semicor": 236, "n_electron": 236, "chemic": [236, 241, 278], "vacuum": [236, 255], "pseudoel": 236, "valenc": [236, 250], "fe": 236, "attempt": 236, "third": [236, 277], "parti": 236, "done": [236, 277, 278], "semicor": [236, 250], "_mendeleev_modul": 236, "to_tupl": [236, 241, 243, 246], "to_atomic_typ": 236, "is_vacuum": 236, "filenametempl": [237, 239], "getpropertiesmixin": [237, 239], "specif": [237, 277, 278], "spectroscopi": 237, "understood": 237, "msspec": 237, "link": 237, "olymp": 237, "cup": 237, "uni": 237, "muenchen": 237, "de": 237, "php": 237, "com_cont": 237, "view": [237, 278], "articl": 237, "3asprkkr": 237, "catid": 237, "3asoftwar": 237, "itemid": 237, "lang": 237, "en": [237, 277], "placehold": [238, 239, 278], "rememb": 238, "counter": [238, 239, 278], "datetim": 238, "_get": 238, "lambda": 238, "restart": 239, "easier": 239, "dto": 239, "perform": [239, 277], "mostli": [239, 277], "begin": 239, "templat": [239, 278], "temporari": 239, "suffix": [239, 278], "per": 239, "cluster": [239, 278], "save_input": [239, 278], "slash": [239, 278], "hostnam": [239, 278], "implemented_properti": 239, "skrkkr_executable_postfix": 239, "environment": [239, 278], "pathnam": 239, "meth": [239, 278], "ouput": 239, "tak": 239, "inputpamat": 239, "time": [239, 278], "bewar": 239, "option_nam": 239, "ambigu": 239, "associ": [239, 278], "explicitli": 239, "sprkkr_atom": [239, 250, 255, 272, 277, 278], "_advance_count": 239, "advanc": [239, 278], "_open_fil": 239, "allow_temporari": 239, "create_subdir": 239, "unchang": 239, "filema": 239, "return_fil": 239, "combin": 239, "stress": 239, "dipol": 239, "magmom": 239, "instead": [239, 250], "later": [239, 278], "calcualtor": 239, "don": 239, "actual": [239, 277, 278], "input_filenam": 239, "output_filenam": 239, "overrid": 239, "executable_postifx": 239, "contructor": 239, "system_chang": 239, "pbc": 239, "initial_charg": 239, "initial_magmom": 239, "alwai": [239, 250], "wiki": 239, "fysik": 239, "dtu": 239, "dk": 239, "sinc": 239, "six": 239, "insert": 239, "like": [239, 241], "shown": 239, "kkrgen": 239, "kkrspec": 239, "kkrch": 239, "run_xband": 239, "xband": [239, 256, 257], "copy_with_potenti": 239, "potential_object": 239, "dct": 241, "alloi": 241, "enumer": 241, "_find_kei": 241, "primary_atomic_typ": 241, "largest": 241, "primary_atomic_numb": 241, "main": [241, 278], "primary_symbol": [241, 248], "_normal": 241, "except_from": 241, "normal": 241, "sum": 241, "skip": [241, 277], "total_occup": 241, "to_occup": 241, "radial": [242, 243, 244], "radial_mesh": [243, 244, 272], "r1": 243, "dx": 243, "jrmt": 243, "rmt": 243, "jrw": 243, "rw": 243, "multipli": 243, "r_n": 243, "r_": 243, "vref": 246, "rmtref": 246, "todo": [246, 251, 256], "spatial": [248, 250], "fraction": 248, "correspond": [248, 277], "belong": 248, "enhanc": 249, "extend": 250, "initi": 250, "sites_array_nam": 250, "sprkkr_sites_data": 250, "promote_ase_atom": [250, 277, 278], "usabl": 250, "bit": [250, 256], "ugli": 250, "hack": 250, "__class__": 250, "extra": 250, "promot": [250, 278], "consid": 250, "_init": 250, "among": 250, "symmetr": 250, "compute_sites_symmetri": [250, 278], "symprec": 250, "_site": 250, "ident": 250, "firstli": 250, "nearli": 250, "recomput": 250, "won": 250, "newli": [250, 278], "threshold": 250, "get_spacegroup": 250, "_compute_sites_symmetri": 250, "metod": 250, "cancel_sites_symmetri": 250, "cancel": 250, "uniq": 250, "wa": 250, "_cancel_sites_symmetri": 250, "includ": 250, "fulli": [250, 257], "made": [250, 278], "reflect": [250, 278], "reset_sprkkr_potenti": 250, "atomdata": [251, 272], "layerdata": [251, 272], "helper": [251, 252], "a2s_visualise_in_struct": [251, 270, 272, 278], "structure_file_to_atom": [251, 272], "visualis": [251, 269, 272, 278], "surfac": [251, 255, 278], "in_structur": [251, 252, 255, 278], "inp": [251, 252, 254, 255, 269, 278], "implementaion": 251, "from_text": 252, "get_symbol": 252, "n_bulk": 255, "vacuum_height": 255, "repetit": 255, "bulk": [255, 274], "height": 255, "abov": [255, 277, 278], "thy": 256, "legaci": 256, "caution": 256, "sysfil": [257, 258, 272], "Not": 257, "thoroughli": 257, "nor": [257, 278], "guarant": 257, "calculatortest": 262, "test_calcul": [263, 272], "test_run": 263, "sprkkratomstest": 264, "test_sprkkr_atom": [265, 272], "xtest_atom": 265, "test_symmetri": 265, "test_occup": 265, "sysfiletest": 266, "test_sysfil": [267, 272], "script": [268, 277, 278], "sctipt": 269, "in_struct": 269, "equivalent_sites_for_spacegroup": 272, "possibly_equivalent_sit": 272, "spacegroup_dataset": 272, "add_excluded_names_condit": 272, "unique_dict": 272, "fortran_format": 272, "optional_line_end": 272, "line_end": 272, "end_of_fil": 272, "separator_pattern": 272, "optional_quot": 272, "addconditionex": 272, "addparseactionex": 272, "delimitedlist": 272, "generate_grammar": 272, "replace_whitechar": 272, "normalize_type_map": 272, "type_from_type_map": 272, "type_from_set_map": 272, "line_str": 272, "pot_mix": 272, "defkeyword": 272, "type_from_default_valu": 272, "type_from_typ": 272, "type_from_valu": 272, "patch_packag": 272, "add_to_signatur": 272, "copy_list": 272, "lazy_valu": 272, "njit": 272, "numpy_index": 272, "resolve_executable_postfix": 272, "unique_map": 272, "floatjm": 272, "sysfile_cont": 272, "write_sysfil": 272, "materi": 274, "note": [274, 277], "bundl": 274, "contribut": 274, "report": 274, "git": [274, 278], "pip": [274, 278], "conda": [274, 278], "One": 274, "step": [274, 277], "bug": 274, "philosophi": 274, "program": 274, "page": 274, "around": 277, "leav": 277, "node": 277, "Their": 277, "mani": [277, 278], "relationship": 277, "subpackag": 277, "miscellan": 277, "mod": 277, "support": [277, 278], "prescrib": 277, "possibli": 277, "simpli": 277, "regex": 277, "rest": 277, "oop": 277, "ancestor": 277, "sprkrr": 277, "readthedoc": 277, "latest": 277, "phase": 277, "input_prameters_definit": 277, "exact": 277, "invok": 277, "sh": 278, "encourag": 278, "somewher": 278, "build": 278, "bash": 278, "kkrscf8": 278, "rc": 278, "export": 278, "verbos": 278, "topic": 278, "u": 278, "aim": 278, "primarili": 278, "limit": 278, "assum": 278, "experienc": 278, "analyz": 278, "bellow": 278, "sever": 278, "basic": 278, "li": 278, "sprkkr_command_suffix": 278, "licl": 278, "rocksalt": 278, "indistinguish": 278, "br": 278, "lower": 278, "queri": 278, "interoper": 278, "were": 278, "moment": 278, "receiv": 278, "consist": 278, "cycl": 278, "choos": 278, "load": 278, "we": 278, "avoid": 278, "conflict": 278, "through": 278, "acess": 278, "interact": 278, "input_paramt": 278, "uppercas": 278, "least": 278, "im": 278, "tau": 278, "nktab": 278, "my_custom_sect": 278, "my_custom_valu": 278, "necess": 278, "usecas": 278, "subseuent": 278, "repeat": 278, "mai": 278, "an_input_fil": 278, "a_potential_fil": 278, "cours": 278, "my_potential_fil": 278, "irel": 278, "accep": 278, "temp": 278, "interperet": 278, "cf4": 278, "duplic": 278, "therefor": 278, "logic": 278, "behind": 278, "scene": 278, "latter": 278, "indic": 278, "modif": 278, "setter": 278, "thereaft": 278, "batch": 278, "detect": 278, "mpirunn": 278, "openmpi": 278, "mpich": 278, "subdirectori": 278, "visualise_in_struct": 278, "py": 278, "must": 278, "our": 278, "featur": 278, "highli": 278, "appreci": 278}, "objects": {"": [[1, 0, 0, "-", "ase2sprkkr"]], "ase2sprkkr": [[2, 0, 0, "-", "bindings"], [8, 0, 0, "-", "common"], [114, 0, 0, "-", "input_parameters"], [145, 0, 0, "-", "outputs"], [166, 0, 0, "-", "physics"], [169, 0, 0, "-", "potentials"], [234, 0, 0, "-", "sprkkr"], [268, 0, 0, "-", "tools"], [271, 0, 0, "-", "version"]], "ase2sprkkr.bindings": [[3, 0, 0, "-", "spglib"]], "ase2sprkkr.bindings.spglib": [[4, 1, 1, "", "compute_spacegroup"], [5, 1, 1, "", "equivalent_sites_for_spacegroup"], [6, 1, 1, "", "possibly_equivalent_sites"], [7, 1, 1, "", "spacegroup_dataset"]], "ase2sprkkr.common": [[9, 0, 0, "-", "base_configuration"], [11, 0, 0, "-", "configuration_containers"], [17, 0, 0, "-", "configuration_definitions"], [25, 0, 0, "-", "formats"], [27, 0, 0, "-", "grammar"], [40, 0, 0, "-", "grammar_types"], [86, 0, 0, "-", "init_tests"], [89, 0, 0, "-", "misc"], [97, 0, 0, "-", "no_output"], [99, 0, 0, "-", "options"], [102, 0, 0, "-", "process_output_reader"], [105, 0, 0, "-", "test"], [112, 0, 0, "-", "unique_values"]], "ase2sprkkr.common.base_configuration": [[10, 2, 1, "", "BaseConfiguration"]], "ase2sprkkr.common.base_configuration.BaseConfiguration": [[10, 3, 1, "", "__init__"], [10, 4, 1, "", "_container"], [10, 4, 1, "", "_definition"], [10, 3, 1, "", "_get_path"], [10, 3, 1, "", "_get_root_container"], [10, 3, 1, "", "as_dict"], [10, 5, 1, "", "name"], [10, 3, 1, "", "show"], [10, 3, 1, "", "to_dict"]], "ase2sprkkr.common.configuration_containers": [[12, 2, 1, "", "BaseSection"], [13, 2, 1, "", "ConfigurationContainer"], [14, 2, 1, "", "CustomSection"], [15, 2, 1, "", "RootConfigurationContainer"], [16, 2, 1, "", "Section"]], "ase2sprkkr.common.configuration_containers.BaseSection": [[12, 3, 1, "", "__init__"], [12, 3, 1, "", "has_any_value"], [12, 3, 1, "", "save_to_file"]], "ase2sprkkr.common.configuration_containers.ConfigurationContainer": [[13, 3, 1, "", "__init__"], [13, 3, 1, "", "_add"], [13, 3, 1, "", "_find_value"], [13, 3, 1, "", "_get_member"], [13, 3, 1, "", "_interactive_member_name"], [13, 4, 1, "", "_interactive_members"], [13, 4, 1, "", "_members"], [13, 3, 1, "", "add"], [13, 3, 1, "", "as_dict"], [13, 3, 1, "", "clear"], [13, 3, 1, "", "get"], [13, 3, 1, "", "members"], [13, 3, 1, "", "remove_member"], [13, 3, 1, "", "save_to_file"], [13, 3, 1, "", "set"], [13, 3, 1, "", "to_string"]], "ase2sprkkr.common.configuration_containers.CustomSection": [[14, 3, 1, "", "__init__"], [14, 3, 1, "", "factory"], [14, 3, 1, "", "remove"]], "ase2sprkkr.common.configuration_containers.RootConfigurationContainer": [[15, 3, 1, "", "__init__"], [15, 3, 1, "", "find"], [15, 3, 1, "", "read_from_file"], [15, 3, 1, "", "save_to_file"]], "ase2sprkkr.common.configuration_containers.Section": [[16, 3, 1, "", "__init__"], [16, 5, 1, "", "definition"]], "ase2sprkkr.common.configuration_definitions": [[18, 2, 1, "", "BaseContainerDefinition"], [19, 2, 1, "", "BaseDefinition"], [20, 2, 1, "", "BaseSectionDefinition"], [21, 2, 1, "", "BaseValueDefinition"], [22, 2, 1, "", "ConfDefinition"], [23, 1, 1, "", "add_excluded_names_condition"], [24, 1, 1, "", "unique_dict"]], "ase2sprkkr.common.configuration_definitions.BaseContainerDefinition": [[18, 3, 1, "", "__init__"], [18, 3, 1, "", "_dict_from_named_values"], [18, 3, 1, "", "_first_section_is_fixed"], [18, 3, 1, "", "_grammar"], [18, 4, 1, "", "_init_args"], [18, 3, 1, "", "_values_grammar"], [18, 3, 1, "", "all_member_names"], [18, 3, 1, "", "copy"], [18, 3, 1, "", "create_object"], [18, 3, 1, "", "custom_member_grammar"], [18, 4, 1, "", "custom_name_characters"], [18, 3, 1, "", "delimited_custom_value_grammar"], [18, 4, 1, "", "force_order"], [18, 3, 1, "", "members"], [18, 3, 1, "", "names"], [18, 3, 1, "", "parse"], [18, 3, 1, "", "parse_file"], [18, 3, 1, "", "parse_from_stream"], [18, 3, 1, "", "parse_return"], [18, 3, 1, "", "remove"], [18, 4, 1, "", "validate"], [18, 4, 1, "", "value_name_format"]], "ase2sprkkr.common.configuration_definitions.BaseDefinition": [[19, 3, 1, "", "__init__"], [19, 3, 1, "", "_tuple_with_my_name"], [19, 4, 1, "", "alternative_names"], [19, 3, 1, "", "create_object"], [19, 4, 1, "", "description"], [19, 4, 1, "", "do_not_skip_whitespaces_before_name"], [19, 3, 1, "", "grammar"], [19, 4, 1, "", "help"], [19, 4, 1, "", "is_optional"], [19, 4, 1, "", "name"], [19, 4, 1, "", "name_in_grammar"], [19, 4, 1, "", "result_class"]], "ase2sprkkr.common.configuration_definitions.BaseSectionDefinition": [[20, 3, 1, "", "__init__"], [20, 4, 1, "", "custom_value_name"], [20, 3, 1, "", "delimited_custom_value_grammar"], [20, 4, 1, "", "result_class"], [20, 5, 1, "", "values"]], "ase2sprkkr.common.configuration_definitions.BaseValueDefinition": [[21, 3, 1, "", "__init__"], [21, 3, 1, "", "_grammar"], [21, 3, 1, "", "copy"], [21, 5, 1, "", "formated_name"], [21, 3, 1, "", "get_value"], [21, 4, 1, "", "name_in_grammar"], [21, 3, 1, "", "remove"], [21, 4, 1, "", "result_class"], [21, 3, 1, "", "validate"], [21, 5, 1, "", "value_name_format"], [21, 3, 1, "", "write"]], "ase2sprkkr.common.configuration_definitions.ConfDefinition": [[22, 3, 1, "", "__init__"], [22, 3, 1, "", "_grammar"], [22, 3, 1, "", "_tuple_with_my_name"], [22, 4, 1, "", "custom_value_name"], [22, 3, 1, "", "from_dict"], [22, 4, 1, "", "name_in_grammar"], [22, 3, 1, "", "parse_return"], [22, 3, 1, "", "read_from_file"], [22, 5, 1, "", "sections"]], "ase2sprkkr.common.formats": [[26, 1, 1, "", "fortran_format"]], "ase2sprkkr.common.grammar": [[28, 2, 1, "", "White"], [29, 1, 1, "", "addConditionEx"], [30, 1, 1, "", "addParseActionEx"], [31, 1, 1, "", "delimitedList"], [32, 6, 1, "", "end_of_file"], [33, 1, 1, "", "generate_grammar"], [34, 6, 1, "", "line_end"], [35, 6, 1, "", "optional_line_end"], [36, 6, 1, "", "optional_quote"], [37, 1, 1, "", "replace_whitechars"], [38, 6, 1, "", "separator"], [39, 6, 1, "", "separator_pattern"]], "ase2sprkkr.common.grammar.White": [[28, 3, 1, "", "__init__"], [28, 4, 1, "", "_abc_impl"]], "ase2sprkkr.common.grammar_types": [[41, 2, 1, "", "Array"], [42, 2, 1, "", "BaseMixed"], [43, 2, 1, "", "BaseRealWithUnits"], [44, 2, 1, "", "BaseString"], [45, 2, 1, "", "BaseType"], [46, 2, 1, "", "Bool"], [47, 2, 1, "", "Date"], [48, 1, 1, "", "DefKeyword"], [49, 2, 1, "", "Energy"], [50, 2, 1, "", "Flag"], [51, 2, 1, "", "Integer"], [52, 2, 1, "", "Keyword"], [53, 2, 1, "", "LineString"], [54, 2, 1, "", "Mixed"], [55, 2, 1, "", "PotMixed"], [56, 2, 1, "", "QString"], [57, 2, 1, "", "Range"], [58, 2, 1, "", "Real"], [59, 2, 1, "", "RealWithUnits"], [60, 2, 1, "", "Separator"], [61, 2, 1, "", "Sequence"], [62, 2, 1, "", "SetOf"], [63, 2, 1, "", "String"], [64, 2, 1, "", "Table"], [65, 2, 1, "", "Unsigned"], [66, 6, 1, "", "boolean"], [67, 6, 1, "", "energy"], [68, 6, 1, "", "flag"], [69, 1, 1, "", "format_for_type"], [70, 6, 1, "", "integer"], [71, 6, 1, "", "line_string"], [72, 6, 1, "", "mixed"], [73, 1, 1, "", "normalize_type"], [74, 6, 1, "", "normalize_type_map"], [75, 6, 1, "", "pot_mixed"], [76, 6, 1, "", "qstring"], [77, 6, 1, "", "real"], [78, 6, 1, "", "separator"], [79, 6, 1, "", "string"], [80, 1, 1, "", "type_from_default_value"], [81, 6, 1, "", "type_from_set_map"], [82, 1, 1, "", "type_from_type"], [83, 6, 1, "", "type_from_type_map"], [84, 1, 1, "", "type_from_value"], [85, 6, 1, "", "unsigned"]], "ase2sprkkr.common.grammar_types.Array": [[41, 3, 1, "", "__init__"], [41, 3, 1, "", "_string"], [41, 3, 1, "", "_validate"], [41, 3, 1, "", "convert"], [41, 4, 1, "", "delimiter"], [41, 4, 1, "", "delimiter_str"], [41, 3, 1, "", "grammar_name"]], "ase2sprkkr.common.grammar_types.BaseMixed": [[42, 3, 1, "", "__init__"], [42, 3, 1, "", "_grammar"], [42, 3, 1, "", "_validate"], [42, 3, 1, "", "convert"], [42, 3, 1, "", "get_type"], [42, 3, 1, "", "grammar_name"], [42, 4, 1, "", "string_type"], [42, 4, 1, "", "type"]], "ase2sprkkr.common.grammar_types.BaseRealWithUnits": [[43, 3, 1, "", "__init__"], [43, 3, 1, "", "_grammar"], [43, 3, 1, "", "_grammar_units"], [43, 3, 1, "", "_validate"], [43, 4, 1, "", "grammar_cache"], [43, 3, 1, "", "grammar_name"], [43, 4, 1, "", "numpy_type"]], "ase2sprkkr.common.grammar_types.BaseString": [[44, 3, 1, "", "__init__"], [44, 3, 1, "", "_validate"]], "ase2sprkkr.common.grammar_types.BaseType": [[45, 3, 1, "", "__init__"], [45, 3, 1, "", "_string"], [45, 3, 1, "", "_validate"], [45, 3, 1, "", "_valueError"], [45, 3, 1, "", "convert"], [45, 3, 1, "", "copy"], [45, 4, 1, "", "default_value"], [45, 3, 1, "", "enrich"], [45, 4, 1, "", "format"], [45, 3, 1, "", "grammar"], [45, 3, 1, "", "grammar_name"], [45, 4, 1, "", "has_value"], [45, 3, 1, "", "missing_value"], [45, 4, 1, "", "name_in_grammar"], [45, 4, 1, "", "numpy_type"], [45, 3, 1, "", "parse"], [45, 3, 1, "", "parse_from_stream"], [45, 4, 1, "", "postfix"], [45, 4, 1, "", "prefix"], [45, 3, 1, "", "print"], [45, 3, 1, "", "read"], [45, 3, 1, "", "string"], [45, 3, 1, "", "transform_grammar"], [45, 3, 1, "", "validate"], [45, 3, 1, "", "write"]], "ase2sprkkr.common.grammar_types.Bool": [[46, 4, 1, "", "I"], [46, 3, 1, "", "__init__"], [46, 4, 1, "", "_grammar"], [46, 3, 1, "", "_string"], [46, 3, 1, "", "_validate"], [46, 3, 1, "", "grammar_name"], [46, 4, 1, "", "numpy_type"]], "ase2sprkkr.common.grammar_types.Date": [[47, 4, 1, "", "I"], [47, 3, 1, "", "__init__"], [47, 4, 1, "", "_grammar"], [47, 3, 1, "", "_string"], [47, 3, 1, "", "_validate"], [47, 3, 1, "", "grammar_name"]], "ase2sprkkr.common.grammar_types.Energy": [[49, 4, 1, "", "I"], [49, 3, 1, "", "__init__"], [49, 4, 1, "", "units"]], "ase2sprkkr.common.grammar_types.Flag": [[50, 4, 1, "", "I"], [50, 3, 1, "", "__init__"], [50, 4, 1, "", "_grammar"], [50, 3, 1, "", "_validate"], [50, 3, 1, "", "grammar_name"], [50, 3, 1, "", "missing_value"], [50, 3, 1, "", "str"]], "ase2sprkkr.common.grammar_types.Integer": [[51, 4, 1, "", "I"], [51, 3, 1, "", "__init__"], [51, 4, 1, "", "_grammar"], [51, 3, 1, "", "_validate"], [51, 3, 1, "", "grammar_name"], [51, 4, 1, "", "numpy_type"]], "ase2sprkkr.common.grammar_types.Keyword": [[52, 3, 1, "", "__init__"], [52, 3, 1, "", "_validate"], [52, 3, 1, "", "convert"], [52, 3, 1, "", "grammar_name"]], "ase2sprkkr.common.grammar_types.LineString": [[53, 4, 1, "", "I"], [53, 3, 1, "", "__init__"], [53, 4, 1, "", "_grammar"], [53, 3, 1, "", "grammar_name"]], "ase2sprkkr.common.grammar_types.Mixed": [[54, 4, 1, "", "I"], [54, 3, 1, "", "__init__"], [54, 3, 1, "", "missing_value"], [54, 4, 1, "", "string_type"], [54, 4, 1, "", "types"]], "ase2sprkkr.common.grammar_types.PotMixed": [[55, 4, 1, "", "I"], [55, 3, 1, "", "__init__"], [55, 3, 1, "", "_string"], [55, 4, 1, "", "string_type"], [55, 4, 1, "", "types"]], "ase2sprkkr.common.grammar_types.QString": [[56, 4, 1, "", "I"], [56, 3, 1, "", "__init__"], [56, 4, 1, "", "_grammar"], [56, 3, 1, "", "grammar_name"]], "ase2sprkkr.common.grammar_types.Range": [[57, 3, 1, "", "__init__"], [57, 3, 1, "", "get_type"], [57, 5, 1, "", "types"]], "ase2sprkkr.common.grammar_types.Real": [[58, 4, 1, "", "I"], [58, 3, 1, "", "__init__"], [58, 4, 1, "", "_grammar"], [58, 3, 1, "", "_validate"], [58, 3, 1, "", "grammar_name"], [58, 4, 1, "", "numpy_type"]], "ase2sprkkr.common.grammar_types.RealWithUnits": [[59, 3, 1, "", "__init__"]], "ase2sprkkr.common.grammar_types.Separator": [[60, 4, 1, "", "I"], [60, 3, 1, "", "__init__"], [60, 4, 1, "", "_grammar"], [60, 3, 1, "", "_grammar_name"], [60, 3, 1, "", "_string"], [60, 3, 1, "", "_validate"], [60, 4, 1, "", "has_value"]], "ase2sprkkr.common.grammar_types.Sequence": [[61, 3, 1, "", "__init__"], [61, 3, 1, "", "_grammar"], [61, 3, 1, "", "_string"], [61, 3, 1, "", "_validate"], [61, 3, 1, "", "convert"], [61, 3, 1, "", "enrich"], [61, 3, 1, "", "grammar_name"]], "ase2sprkkr.common.grammar_types.SetOf": [[62, 3, 1, "", "__init__"], [62, 4, 1, "", "delimiter"], [62, 4, 1, "", "delimiter_str"], [62, 3, 1, "", "transform_grammar"]], "ase2sprkkr.common.grammar_types.String": [[63, 4, 1, "", "I"], [63, 3, 1, "", "__init__"], [63, 4, 1, "", "_grammar"], [63, 3, 1, "", "grammar_name"]], "ase2sprkkr.common.grammar_types.Table": [[64, 3, 1, "", "__init__"], [64, 3, 1, "", "_grammar"], [64, 3, 1, "", "_string"], [64, 3, 1, "", "_validate"], [64, 3, 1, "", "convert"], [64, 3, 1, "", "grammar_name"], [64, 4, 1, "", "name_in_grammar"], [64, 3, 1, "", "number_of_collumns"], [64, 5, 1, "", "numpy_type"], [64, 3, 1, "", "zero_data"]], "ase2sprkkr.common.grammar_types.Unsigned": [[65, 4, 1, "", "I"], [65, 3, 1, "", "__init__"], [65, 4, 1, "", "_grammar"], [65, 3, 1, "", "_validate"], [65, 3, 1, "", "grammar_name"], [65, 4, 1, "", "numpy_type"]], "ase2sprkkr.common.init_tests.TestCase": [[87, 3, 1, "", "__init__"], [87, 3, 1, "", "assertAsyncEqual"], [87, 3, 1, "", "assertAsyncRaises"], [87, 3, 1, "", "runAsync"], [87, 3, 1, "", "setUp"]], "ase2sprkkr.common.init_tests": [[88, 1, 1, "", "patch_package"]], "ase2sprkkr.common.misc": [[90, 2, 1, "", "OrderedDict"], [91, 1, 1, "", "add_to_signature"], [92, 2, 1, "", "class_property"], [93, 1, 1, "", "copy_list"], [94, 1, 1, "", "lazy_value"], [95, 1, 1, "", "njit"], [96, 1, 1, "", "numpy_index"]], "ase2sprkkr.common.misc.OrderedDict": [[90, 3, 1, "", "__init__"], [90, 3, 1, "", "first_item"], [90, 3, 1, "", "index"]], "ase2sprkkr.common.misc.class_property": [[92, 3, 1, "", "__init__"]], "ase2sprkkr.common.no_output": [[98, 2, 1, "", "NoOutput"]], "ase2sprkkr.common.no_output.NoOutput": [[98, 3, 1, "", "__init__"]], "ase2sprkkr.common.options": [[100, 2, 1, "", "CustomOption"], [101, 2, 1, "", "Option"]], "ase2sprkkr.common.options.CustomOption": [[100, 3, 1, "", "__init__"], [100, 3, 1, "", "factory"], [100, 3, 1, "", "remove"]], "ase2sprkkr.common.options.Option": [[101, 3, 1, "", "__init__"], [101, 3, 1, "", "_find_value"], [101, 3, 1, "", "as_dict"], [101, 3, 1, "", "clear"], [101, 3, 1, "", "get"], [101, 3, 1, "", "get_path"], [101, 5, 1, "", "help"], [101, 5, 1, "", "name"], [101, 3, 1, "", "save_to_file"], [101, 3, 1, "", "set"]], "ase2sprkkr.common.process_output_reader": [[103, 2, 1, "", "AsyncioFileReader"], [104, 2, 1, "", "BaseProcessOutputReader"]], "ase2sprkkr.common.process_output_reader.AsyncioFileReader": [[103, 3, 1, "", "__init__"], [103, 3, 1, "", "close"], [103, 3, 1, "", "readline"], [103, 3, 1, "", "readuntil"], [103, 3, 1, "", "separator_shifts"]], "ase2sprkkr.common.process_output_reader.BaseProcessOutputReader": [[104, 3, 1, "", "__init__"], [104, 3, 1, "", "read_error"], [104, 3, 1, "", "read_from_file"], [104, 3, 1, "", "read_output"], [104, 3, 1, "", "result"], [104, 3, 1, "", "run"], [104, 3, 1, "", "run_subprocess"]], "ase2sprkkr.common.test": [[106, 0, 0, "-", "init_tests"], [108, 0, 0, "-", "test_common"], [110, 0, 0, "-", "test_grammar_types"]], "ase2sprkkr.common.test.init_tests": [[107, 2, 1, "", "TestCase"]], "ase2sprkkr.common.test.init_tests.TestCase": [[107, 3, 1, "", "__init__"], [107, 3, 1, "", "assertAsyncEqual"], [107, 3, 1, "", "assertAsyncRaises"], [107, 3, 1, "", "runAsync"], [107, 3, 1, "", "setUp"]], "ase2sprkkr.common.test.test_common": [[109, 2, 1, "", "CommonTest"]], "ase2sprkkr.common.test.test_common.CommonTest": [[109, 3, 1, "", "__init__"], [109, 3, 1, "", "test_asyncio_file_reader"], [109, 3, 1, "", "test_common"]], "ase2sprkkr.common.test.test_grammar_types": [[111, 2, 1, "", "GrammarTest"]], "ase2sprkkr.common.test.test_grammar_types.GrammarTest": [[111, 3, 1, "", "__init__"], [111, 3, 1, "", "_test_types"], [111, 3, 1, "", "test_types"]], "ase2sprkkr.common.unique_values": [[113, 2, 1, "", "UniqueValuesMapping"]], "ase2sprkkr.common.unique_values.UniqueValuesMapping": [[113, 3, 1, "", "__init__"], [113, 3, 1, "", "from_values"], [113, 3, 1, "", "indexes"], [113, 3, 1, "", "iter_unique"], [113, 3, 1, "", "len_of_unique"], [113, 4, 1, "", "mapping"], [113, 3, 1, "", "merge"], [113, 4, 1, "", "value_to_class_id"]], "ase2sprkkr.input_parameters": [[115, 0, 0, "-", "definitions"], [131, 0, 0, "-", "input_parameters"], [134, 0, 0, "-", "input_parameters_definitions"], [138, 0, 0, "-", "test"]], "ase2sprkkr.input_parameters.definitions": [[116, 0, 0, "-", "arpes"], [118, 0, 0, "-", "dos"], [120, 0, 0, "-", "phagen"], [122, 0, 0, "-", "scf"], [124, 0, 0, "-", "sections"]], "ase2sprkkr.input_parameters.definitions.arpes": [[117, 6, 1, "", "input_parameters"]], "ase2sprkkr.input_parameters.definitions.dos": [[119, 6, 1, "", "input_parameters"]], "ase2sprkkr.input_parameters.definitions.phagen": [[121, 6, 1, "", "input_parameters"]], "ase2sprkkr.input_parameters.definitions.scf": [[123, 6, 1, "", "input_parameters"]], "ase2sprkkr.input_parameters.definitions.sections": [[125, 1, 1, "", "CONTROL"], [126, 6, 1, "", "ENERGY"], [127, 6, 1, "", "SCF"], [128, 6, 1, "", "SITES"], [129, 1, 1, "", "TASK"], [130, 6, 1, "", "TAU"]], "ase2sprkkr.input_parameters.input_parameters": [[132, 2, 1, "", "InputParameters"], [133, 1, 1, "", "resolve_executable_postfix"]], "ase2sprkkr.input_parameters.input_parameters.InputParameters": [[132, 3, 1, "", "__init__"], [132, 4, 1, "", "_default_mpi_runner"], [132, 3, 1, "", "calculate"], [132, 3, 1, "", "create"], [132, 3, 1, "", "create_input_parameters"], [132, 3, 1, "", "default_mpi_runner"], [132, 3, 1, "", "default_parameters"], [132, 3, 1, "", "definitions"], [132, 3, 1, "", "executable_params"], [132, 3, 1, "", "from_file"], [132, 3, 1, "", "is_it_a_input_parameters_name"], [132, 3, 1, "", "is_mpi"], [132, 3, 1, "", "mpi_runner"], [132, 3, 1, "", "read_output_from_file"], [132, 3, 1, "", "result_reader"], [132, 3, 1, "", "run_process"], [132, 3, 1, "", "set_option"], [132, 5, 1, "", "task_name"]], "ase2sprkkr.input_parameters.input_parameters_definitions": [[135, 2, 1, "", "InputParametersDefinition"], [136, 2, 1, "", "SectionDefinition"], [137, 2, 1, "", "ValueDefinition"]], "ase2sprkkr.input_parameters.input_parameters_definitions.InputParametersDefinition": [[135, 3, 1, "", "__init__"], [135, 4, 1, "", "child_class"], [135, 3, 1, "", "custom_class"], [135, 3, 1, "", "custom_value_grammar"], [135, 4, 1, "", "delimiter"], [135, 3, 1, "", "grammar_of_delimiter"], [135, 4, 1, "", "result_class"]], "ase2sprkkr.input_parameters.input_parameters_definitions.SectionDefinition": [[136, 3, 1, "", "__init__"], [136, 4, 1, "", "child_class"], [136, 3, 1, "", "custom_class"], [136, 4, 1, "", "delimiter"], [136, 4, 1, "", "do_not_skip_whitespaces_before_name"], [136, 3, 1, "", "grammar_of_delimiter"]], "ase2sprkkr.input_parameters.input_parameters_definitions.ValueDefinition": [[137, 3, 1, "", "__init__"], [137, 4, 1, "", "_init_args"], [137, 3, 1, "", "grammar_of_delimiter"], [137, 4, 1, "", "name_value_delimiter"], [137, 4, 1, "", "prefix"]], "ase2sprkkr.input_parameters.test": [[139, 0, 0, "-", "init_tests"], [141, 0, 0, "-", "test_definitions"], [143, 0, 0, "-", "test_input_parameters"]], "ase2sprkkr.input_parameters.test.init_tests": [[140, 2, 1, "", "TestCase"]], "ase2sprkkr.input_parameters.test.init_tests.TestCase": [[140, 3, 1, "", "__init__"], [140, 3, 1, "", "assertAsyncEqual"], [140, 3, 1, "", "assertAsyncRaises"], [140, 3, 1, "", "runAsync"], [140, 3, 1, "", "setUp"]], "ase2sprkkr.input_parameters.test.test_definitions": [[142, 2, 1, "", "TestDefinitions"]], "ase2sprkkr.input_parameters.test.test_definitions.TestDefinitions": [[142, 3, 1, "", "__init__"], [142, 3, 1, "", "test_definitions"]], "ase2sprkkr.input_parameters.test.test_input_parameters": [[144, 2, 1, "", "TestInputParameters"]], "ase2sprkkr.input_parameters.test.test_input_parameters.TestInputParameters": [[144, 3, 1, "", "__init__"], [144, 3, 1, "", "test_custom_value"], [144, 3, 1, "", "test_input_parameters_definition"], [144, 3, 1, "", "test_section_delimiter_value"]], "ase2sprkkr.outputs": [[146, 0, 0, "-", "output_definitions"], [151, 0, 0, "-", "readers"], [158, 0, 0, "-", "task_result"], [161, 0, 0, "-", "test"]], "ase2sprkkr.outputs.output_definitions": [[147, 2, 1, "", "OutputNonameValueDefinition"], [148, 2, 1, "", "OutputSectionDefinition"], [149, 2, 1, "", "OutputValueDefinition"], [150, 2, 1, "", "OutputValueEqualDefinition"]], "ase2sprkkr.outputs.output_definitions.OutputNonameValueDefinition": [[147, 3, 1, "", "__init__"], [147, 4, 1, "", "name_in_grammar"]], "ase2sprkkr.outputs.output_definitions.OutputSectionDefinition": [[148, 3, 1, "", "__init__"], [148, 4, 1, "", "child_class"], [148, 4, 1, "", "custom_class"], [148, 4, 1, "", "delimiter"], [148, 4, 1, "", "force_order"], [148, 3, 1, "", "grammar_of_delimiter"], [148, 4, 1, "", "name_in_grammar"]], "ase2sprkkr.outputs.output_definitions.OutputValueDefinition": [[149, 3, 1, "", "__init__"], [149, 3, 1, "", "grammar_of_delimiter"], [149, 4, 1, "", "prefix"]], "ase2sprkkr.outputs.output_definitions.OutputValueEqualDefinition": [[150, 3, 1, "", "__init__"], [150, 3, 1, "", "grammar_of_delimiter"], [150, 4, 1, "", "name_value_delimiter"]], "ase2sprkkr.outputs.readers": [[152, 0, 0, "-", "default"], [155, 0, 0, "-", "scf"]], "ase2sprkkr.outputs.readers.default": [[153, 2, 1, "", "DefaultOutputReader"], [154, 2, 1, "", "DefaultResult"]], "ase2sprkkr.outputs.readers.default.DefaultOutputReader": [[153, 3, 1, "", "__init__"], [153, 3, 1, "", "read_output"], [153, 4, 1, "", "result_class"]], "ase2sprkkr.outputs.readers.default.DefaultResult": [[154, 3, 1, "", "__init__"]], "ase2sprkkr.outputs.readers.scf": [[156, 2, 1, "", "ScfOutputReader"], [157, 2, 1, "", "ScfResult"]], "ase2sprkkr.outputs.readers.scf.ScfOutputReader": [[156, 3, 1, "", "__init__"], [156, 4, 1, "", "atoms_conf_type"], [156, 3, 1, "", "read_output"], [156, 4, 1, "", "result_class"]], "ase2sprkkr.outputs.readers.scf.ScfResult": [[157, 3, 1, "", "__init__"], [157, 5, 1, "", "calculator"], [157, 5, 1, "", "converged"], [157, 5, 1, "", "energy"], [157, 3, 1, "", "iteration_values"], [157, 5, 1, "", "iterations"], [157, 5, 1, "", "last_iteration"], [157, 3, 1, "", "plot"], [157, 5, 1, "", "potential"], [157, 5, 1, "", "potential_filename"]], "ase2sprkkr.outputs.task_result": [[159, 2, 1, "", "OutputReader"], [160, 2, 1, "", "TaskResult"]], "ase2sprkkr.outputs.task_result.OutputReader": [[159, 3, 1, "", "__init__"], [159, 3, 1, "", "result"]], "ase2sprkkr.outputs.task_result.TaskResult": [[160, 3, 1, "", "__init__"], [160, 5, 1, "", "atoms"]], "ase2sprkkr.outputs.test": [[162, 0, 0, "-", "init_tests"], [164, 0, 0, "-", "test_output"]], "ase2sprkkr.outputs.test.init_tests": [[163, 2, 1, "", "TestCase"]], "ase2sprkkr.outputs.test.init_tests.TestCase": [[163, 3, 1, "", "__init__"], [163, 3, 1, "", "assertAsyncEqual"], [163, 3, 1, "", "assertAsyncRaises"], [163, 3, 1, "", "runAsync"], [163, 3, 1, "", "setUp"]], "ase2sprkkr.outputs.test.test_output": [[165, 2, 1, "", "TestOutput"]], "ase2sprkkr.outputs.test.test_output.TestOutput": [[165, 3, 1, "", "__init__"], [165, 3, 1, "", "test_output"]], "ase2sprkkr.physics": [[167, 0, 0, "-", "lattice_data"]], "ase2sprkkr.physics.lattice_data": [[168, 2, 1, "", "LatticeData"]], "ase2sprkkr.physics.lattice_data.LatticeData": [[168, 3, 1, "", "__init__"], [168, 3, 1, "", "bravais_number_from_pearson_symbol"], [168, 4, 1, "", "cell_symmetries"], [168, 4, 1, "", "international_numbers_to_AP"], [168, 4, 1, "", "symmetries"]], "ase2sprkkr.potentials": [[170, 0, 0, "-", "custom_potential_section"], [175, 0, 0, "-", "definitions"], [208, 0, 0, "-", "io_data"], [213, 0, 0, "-", "potential_definitions"], [219, 0, 0, "-", "potential_sections"], [223, 0, 0, "-", "potentials"], [225, 0, 0, "-", "test"]], "ase2sprkkr.potentials.custom_potential_section": [[171, 2, 1, "", "CustomPotentialSection"], [172, 2, 1, "", "CustomPotentialSectionDefinition"], [173, 2, 1, "", "CustomSectionToken"], [174, 2, 1, "", "SectionString"]], "ase2sprkkr.potentials.custom_potential_section.CustomPotentialSection": [[171, 3, 1, "", "__init__"], [171, 3, 1, "", "_depends_on"], [171, 3, 1, "", "_set_from_atoms"], [171, 3, 1, "", "_update_atoms"], [171, 3, 1, "", "reset"]], "ase2sprkkr.potentials.custom_potential_section.CustomPotentialSectionDefinition": [[172, 3, 1, "", "__init__"], [172, 4, 1, "", "mandatory"], [172, 4, 1, "", "name_value_delimiter"], [172, 4, 1, "", "prefix"]], "ase2sprkkr.potentials.custom_potential_section.CustomSectionToken": [[173, 3, 1, "", "__init__"], [173, 4, 1, "", "_abc_impl"], [173, 4, 1, "", "name"], [173, 3, 1, "", "parseImpl"], [173, 4, 1, "", "pattern"]], "ase2sprkkr.potentials.custom_potential_section.SectionString": [[174, 4, 1, "", "I"], [174, 3, 1, "", "__init__"], [174, 4, 1, "", "_grammar"], [174, 4, 1, "", "delimiter_pattern"], [174, 3, 1, "", "grammar_name"], [174, 3, 1, "", "grammar_of_delimiter"], [174, 3, 1, "", "write"]], "ase2sprkkr.potentials.definitions": [[176, 0, 0, "-", "potential"], [178, 0, 0, "-", "sections"]], "ase2sprkkr.potentials.definitions.potential": [[177, 6, 1, "", "potential_definition"]], "ase2sprkkr.potentials.definitions.sections": [[179, 1, 1, "", "_sections"], [180, 0, 0, "-", "global_system_parameter"], [184, 0, 0, "-", "lattice"], [188, 0, 0, "-", "mesh_information"], [192, 0, 0, "-", "occupation"], [196, 0, 0, "-", "reference_system"], [200, 0, 0, "-", "sites"], [204, 0, 0, "-", "types"]], "ase2sprkkr.potentials.definitions.sections.global_system_parameter": [[181, 2, 1, "", "GlobalSystemParameter"], [182, 2, 1, "", "GlobalSystemParameterDefinition"], [183, 4, 1, "", "section"]], "ase2sprkkr.potentials.definitions.sections.global_system_parameter.GlobalSystemParameter": [[181, 3, 1, "", "__init__"], [181, 3, 1, "", "_set_from_atoms"]], "ase2sprkkr.potentials.definitions.sections.global_system_parameter.GlobalSystemParameterDefinition": [[182, 3, 1, "", "__init__"], [182, 4, 1, "", "result_class"]], "ase2sprkkr.potentials.definitions.sections.lattice": [[185, 2, 1, "", "LatticeSection"], [186, 2, 1, "", "LatticeSectionDefinition"], [187, 4, 1, "", "section"]], "ase2sprkkr.potentials.definitions.sections.lattice.LatticeSection": [[185, 3, 1, "", "__init__"], [185, 3, 1, "", "_set_from_atoms"], [185, 3, 1, "", "_update_atoms"]], "ase2sprkkr.potentials.definitions.sections.lattice.LatticeSectionDefinition": [[186, 3, 1, "", "__init__"], [186, 4, 1, "", "result_class"]], "ase2sprkkr.potentials.definitions.sections.mesh_information": [[189, 2, 1, "", "MeshInformationSection"], [190, 2, 1, "", "MeshInformationSectionDefinition"], [191, 4, 1, "", "section"]], "ase2sprkkr.potentials.definitions.sections.mesh_information.MeshInformationSection": [[189, 3, 1, "", "__init__"], [189, 4, 1, "", "_value_class"], [189, 4, 1, "", "_value_name"]], "ase2sprkkr.potentials.definitions.sections.mesh_information.MeshInformationSectionDefinition": [[190, 3, 1, "", "__init__"], [190, 4, 1, "", "result_class"]], "ase2sprkkr.potentials.definitions.sections.occupation": [[193, 2, 1, "", "OccupationSection"], [194, 2, 1, "", "OccupationSectionDefinition"], [195, 4, 1, "", "section"]], "ase2sprkkr.potentials.definitions.sections.occupation.OccupationSection": [[193, 3, 1, "", "__init__"], [193, 3, 1, "", "_set_from_atoms"], [193, 3, 1, "", "_update_atoms"]], "ase2sprkkr.potentials.definitions.sections.occupation.OccupationSectionDefinition": [[194, 3, 1, "", "__init__"], [194, 3, 1, "", "depends_on"], [194, 4, 1, "", "result_class"]], "ase2sprkkr.potentials.definitions.sections.reference_system": [[197, 2, 1, "", "ReferenceSystemSection"], [198, 2, 1, "", "ReferenceSystemSectionDefinition"], [199, 4, 1, "", "section"]], "ase2sprkkr.potentials.definitions.sections.reference_system.ReferenceSystemSection": [[197, 3, 1, "", "__init__"], [197, 3, 1, "", "_set_from_atoms"], [197, 4, 1, "", "_value_class"], [197, 4, 1, "", "_value_name"]], "ase2sprkkr.potentials.definitions.sections.reference_system.ReferenceSystemSectionDefinition": [[198, 3, 1, "", "__init__"], [198, 4, 1, "", "result_class"], [198, 3, 1, "", "validate"]], "ase2sprkkr.potentials.definitions.sections.sites": [[201, 2, 1, "", "SitesSection"], [202, 2, 1, "", "SitesSectionDefinition"], [203, 4, 1, "", "section"]], "ase2sprkkr.potentials.definitions.sections.sites.SitesSection": [[201, 3, 1, "", "__init__"], [201, 3, 1, "", "_set_from_atoms"], [201, 3, 1, "", "_update_atoms"]], "ase2sprkkr.potentials.definitions.sections.sites.SitesSectionDefinition": [[202, 3, 1, "", "__init__"], [202, 4, 1, "", "result_class"]], "ase2sprkkr.potentials.definitions.sections.types": [[205, 2, 1, "", "TypesSection"], [206, 2, 1, "", "TypesSectionDefinition"], [207, 4, 1, "", "section"]], "ase2sprkkr.potentials.definitions.sections.types.TypesSection": [[205, 3, 1, "", "__init__"], [205, 4, 1, "", "_value_class"], [205, 4, 1, "", "_value_name"]], "ase2sprkkr.potentials.definitions.sections.types.TypesSectionDefinition": [[206, 3, 1, "", "__init__"], [206, 4, 1, "", "result_class"]], "ase2sprkkr.potentials.io_data": [[209, 2, 1, "", "BaseIoData"], [210, 2, 1, "", "ReadIoData"], [211, 2, 1, "", "WriteIoData"], [212, 1, 1, "", "unique_mapping"]], "ase2sprkkr.potentials.io_data.BaseIoData": [[209, 3, 1, "", "__init__"]], "ase2sprkkr.potentials.io_data.ReadIoData": [[210, 3, 1, "", "__init__"]], "ase2sprkkr.potentials.io_data.WriteIoData": [[211, 3, 1, "", "__init__"], [211, 5, 1, "", "meshes"], [211, 5, 1, "", "reference_systems"], [211, 5, 1, "", "sites"], [211, 5, 1, "", "types"]], "ase2sprkkr.potentials.potential_definitions": [[214, 2, 1, "", "ASEArraySectionDefinition"], [215, 2, 1, "", "PotSectionDefinition"], [216, 2, 1, "", "PotValueDefinition"], [217, 2, 1, "", "PotentialDefinition"], [218, 2, 1, "", "Separator"]], "ase2sprkkr.potentials.potential_definitions.ASEArraySectionDefinition": [[214, 3, 1, "", "__init__"], [214, 3, 1, "", "depends_on"], [214, 4, 1, "", "result_class"]], "ase2sprkkr.potentials.potential_definitions.PotSectionDefinition": [[215, 3, 1, "", "__init__"], [215, 4, 1, "", "child_class"], [215, 3, 1, "", "custom_class"], [215, 4, 1, "", "delimiter"], [215, 3, 1, "", "depends_on"], [215, 4, 1, "", "force_order"], [215, 3, 1, "", "grammar_of_delimiter"], [215, 4, 1, "", "result_class"], [215, 4, 1, "", "value_name_format"]], "ase2sprkkr.potentials.potential_definitions.PotValueDefinition": [[216, 3, 1, "", "__init__"], [216, 3, 1, "", "grammar_of_delimiter"], [216, 4, 1, "", "name_value_delimiter"], [216, 4, 1, "", "prefix"]], "ase2sprkkr.potentials.potential_definitions.PotentialDefinition": [[217, 3, 1, "", "__init__"], [217, 4, 1, "", "child_class"], [217, 4, 1, "", "custom_class"], [217, 4, 1, "", "custom_name_characters"], [217, 3, 1, "", "custom_value_grammar"], [217, 4, 1, "", "delimiter"], [217, 4, 1, "", "force_order"], [217, 3, 1, "", "grammar_of_delimiter"], [217, 4, 1, "", "result_class"]], "ase2sprkkr.potentials.potential_definitions.Separator": [[218, 3, 1, "", "__init__"], [218, 4, 1, "", "_counter"]], "ase2sprkkr.potentials.potential_sections": [[220, 2, 1, "", "ASEArraySection"], [221, 2, 1, "", "PotentialSection"], [222, 2, 1, "", "UniqueListSection"]], "ase2sprkkr.potentials.potential_sections.ASEArraySection": [[220, 3, 1, "", "__init__"], [220, 3, 1, "", "_depends_on"], [220, 3, 1, "", "_set_from_atoms"], [220, 3, 1, "", "_update_atoms"], [220, 3, 1, "", "has_any_value"]], "ase2sprkkr.potentials.potential_sections.PotentialSection": [[221, 3, 1, "", "__init__"], [221, 3, 1, "", "_depends_on"], [221, 3, 1, "", "_set_from_atoms"], [221, 3, 1, "", "_update_atoms"], [221, 3, 1, "", "reset"]], "ase2sprkkr.potentials.potential_sections.UniqueListSection": [[222, 3, 1, "", "__init__"], [222, 3, 1, "", "_set_from_atoms"], [222, 3, 1, "", "_update_atoms"], [222, 4, 1, "", "_value_class"], [222, 4, 1, "", "_value_name"]], "ase2sprkkr.potentials.potentials": [[224, 2, 1, "", "Potential"]], "ase2sprkkr.potentials.potentials.Potential": [[224, 3, 1, "", "__init__"], [224, 5, 1, "", "atoms"], [224, 3, 1, "", "from_atoms"], [224, 3, 1, "", "from_file"], [224, 3, 1, "", "make_complete"], [224, 4, 1, "", "potential_definition"], [224, 3, 1, "", "read_from_file"], [224, 3, 1, "", "reset"], [224, 3, 1, "", "save_to_file"], [224, 3, 1, "", "set_from_atoms"], [224, 3, 1, "", "update_atoms"]], "ase2sprkkr.potentials.test": [[226, 0, 0, "-", "init_tests"], [228, 0, 0, "-", "test_custom_section"], [230, 0, 0, "-", "test_potential"], [232, 0, 0, "-", "test_structure"]], "ase2sprkkr.potentials.test.init_tests": [[227, 2, 1, "", "TestCase"]], "ase2sprkkr.potentials.test.init_tests.TestCase": [[227, 3, 1, "", "__init__"], [227, 3, 1, "", "assertAsyncEqual"], [227, 3, 1, "", "assertAsyncRaises"], [227, 3, 1, "", "runAsync"], [227, 3, 1, "", "setUp"]], "ase2sprkkr.potentials.test.test_custom_section": [[229, 2, 1, "", "TestCustomSection"]], "ase2sprkkr.potentials.test.test_custom_section.TestCustomSection": [[229, 3, 1, "", "__init__"], [229, 3, 1, "", "assertNone"], [229, 3, 1, "", "test_custom_section"]], "ase2sprkkr.potentials.test.test_potential": [[231, 2, 1, "", "TestPotential"]], "ase2sprkkr.potentials.test.test_potential.TestPotential": [[231, 3, 1, "", "__init__"], [231, 3, 1, "", "test_examples"], [231, 3, 1, "", "test_grammar"], [231, 3, 1, "", "test_potential"], [231, 3, 1, "", "test_reset"], [231, 3, 1, "", "test_sequence"]], "ase2sprkkr.potentials.test.test_structure": [[233, 2, 1, "", "TestStructure"]], "ase2sprkkr.potentials.test.test_structure.TestStructure": [[233, 3, 1, "", "__init__"], [233, 3, 1, "", "test_lattice"]], "ase2sprkkr.sprkkr": [[235, 0, 0, "-", "atomic_types"], [237, 0, 0, "-", "calculator"], [240, 0, 0, "-", "occupations"], [242, 0, 0, "-", "radial_meshes"], [245, 0, 0, "-", "reference_systems"], [247, 0, 0, "-", "sites"], [249, 0, 0, "-", "sprkkr_atoms"], [251, 0, 0, "-", "structure"], [256, 0, 0, "-", "sysfile"], [259, 0, 0, "-", "test"]], "ase2sprkkr.sprkkr.atomic_types": [[236, 2, 1, "", "AtomicType"]], "ase2sprkkr.sprkkr.atomic_types.AtomicType": [[236, 3, 1, "", "__init__"], [236, 4, 1, "", "_mendeleev_module"], [236, 3, 1, "", "copy"], [236, 3, 1, "", "is_vacuum"], [236, 5, 1, "", "mendeleev"], [236, 3, 1, "", "to_atomic_type"], [236, 3, 1, "", "to_tuple"]], "ase2sprkkr.sprkkr.calculator": [[238, 2, 1, "", "FilenameTemplator"], [239, 2, 1, "", "SPRKKR"]], "ase2sprkkr.sprkkr.calculator.FilenameTemplator": [[238, 3, 1, "", "__init__"], [238, 3, 1, "", "_get"], [238, 4, 1, "", "replacements"]], "ase2sprkkr.sprkkr.calculator.SPRKKR": [[239, 3, 1, "", "__init__"], [239, 4, 1, "", "_abc_impl"], [239, 3, 1, "", "_advance_counter"], [239, 3, 1, "", "_open_file"], [239, 5, 1, "", "atoms"], [239, 3, 1, "", "calculate"], [239, 3, 1, "", "copy_with_potential"], [239, 4, 1, "", "executable_postfix"], [239, 3, 1, "", "get"], [239, 4, 1, "", "implemented_properties"], [239, 4, 1, "", "input_file"], [239, 5, 1, "", "input_parameters"], [239, 3, 1, "", "kkrch"], [239, 3, 1, "", "kkrgen"], [239, 3, 1, "", "kkrspec"], [239, 4, 1, "", "mpi"], [239, 4, 1, "", "output_file"], [239, 3, 1, "", "phagen"], [239, 5, 1, "", "potential"], [239, 4, 1, "", "potential_file"], [239, 5, 1, "", "potential_object"], [239, 4, 1, "", "print_output"], [239, 3, 1, "", "run"], [239, 3, 1, "", "run_xband"], [239, 3, 1, "", "save_input"], [239, 3, 1, "", "scf"], [239, 3, 1, "", "set"]], "ase2sprkkr.sprkkr.occupations": [[241, 2, 1, "", "Occupation"]], "ase2sprkkr.sprkkr.occupations.Occupation": [[241, 3, 1, "", "__init__"], [241, 3, 1, "", "_find_key"], [241, 3, 1, "", "_normalize"], [241, 3, 1, "", "_update_atoms"], [241, 3, 1, "", "add"], [241, 5, 1, "", "as_dict"], [241, 3, 1, "", "atomic_types"], [241, 3, 1, "", "check"], [241, 3, 1, "", "copy"], [241, 3, 1, "", "items"], [241, 5, 1, "", "primary_atomic_number"], [241, 5, 1, "", "primary_atomic_type"], [241, 5, 1, "", "primary_symbol"], [241, 3, 1, "", "set"], [241, 3, 1, "", "to_occupation"], [241, 3, 1, "", "to_tuple"], [241, 5, 1, "", "total_occupation"]], "ase2sprkkr.sprkkr.radial_meshes": [[243, 2, 1, "", "ExponentialMesh"], [244, 2, 1, "", "Mesh"]], "ase2sprkkr.sprkkr.radial_meshes.ExponentialMesh": [[243, 3, 1, "", "__init__"], [243, 3, 1, "", "copy"], [243, 3, 1, "", "to_tuple"]], "ase2sprkkr.sprkkr.radial_meshes.Mesh": [[244, 3, 1, "", "__init__"], [244, 3, 1, "", "default"]], "ase2sprkkr.sprkkr.reference_systems": [[246, 2, 1, "", "ReferenceSystem"]], "ase2sprkkr.sprkkr.reference_systems.ReferenceSystem": [[246, 3, 1, "", "__init__"], [246, 3, 1, "", "copy"], [246, 3, 1, "", "default"], [246, 3, 1, "", "to_tuple"]], "ase2sprkkr.sprkkr.sites": [[248, 2, 1, "", "Site"]], "ase2sprkkr.sprkkr.sites.Site": [[248, 3, 1, "", "__init__"], [248, 3, 1, "", "copy"], [248, 5, 1, "", "occupation"], [248, 5, 1, "", "primary_symbol"], [248, 3, 1, "", "reset"], [248, 3, 1, "", "update_atoms"]], "ase2sprkkr.sprkkr.sprkkr_atoms": [[250, 2, 1, "", "SPRKKRAtoms"]], "ase2sprkkr.sprkkr.sprkkr_atoms.SPRKKRAtoms": [[250, 3, 1, "", "__init__"], [250, 3, 1, "", "_cancel_sites_symmetry"], [250, 3, 1, "", "_compute_sites_symmetry"], [250, 3, 1, "", "_init"], [250, 3, 1, "", "cancel_sites_symmetry"], [250, 3, 1, "", "compute_sites_symmetry"], [250, 5, 1, "", "potential"], [250, 3, 1, "", "promote_ase_atoms"], [250, 3, 1, "", "reset_sprkkr_potential"], [250, 5, 1, "", "sites"], [250, 4, 1, "", "sites_array_name"], [250, 5, 1, "", "symmetry"]], "ase2sprkkr.sprkkr.structure": [[252, 2, 1, "", "AtomData"], [253, 2, 1, "", "LayerData"], [254, 1, 1, "", "floatjm"], [255, 1, 1, "", "structure_file_to_atoms"]], "ase2sprkkr.sprkkr.structure.AtomData": [[252, 3, 1, "", "__init__"], [252, 3, 1, "", "from_text"], [252, 3, 1, "", "get_symbol"]], "ase2sprkkr.sprkkr.structure.LayerData": [[253, 3, 1, "", "__init__"]], "ase2sprkkr.sprkkr.sysfile": [[257, 1, 1, "", "sysfile_content"], [258, 1, 1, "", "write_sysfile"]], "ase2sprkkr.sprkkr.test": [[260, 0, 0, "-", "init_tests"], [262, 0, 0, "-", "test_calculator"], [264, 0, 0, "-", "test_sprkkr_atoms"], [266, 0, 0, "-", "test_sysfile"]], "ase2sprkkr.sprkkr.test.init_tests": [[261, 2, 1, "", "TestCase"]], "ase2sprkkr.sprkkr.test.init_tests.TestCase": [[261, 3, 1, "", "__init__"], [261, 3, 1, "", "assertAsyncEqual"], [261, 3, 1, "", "assertAsyncRaises"], [261, 3, 1, "", "runAsync"], [261, 3, 1, "", "setUp"]], "ase2sprkkr.sprkkr.test.test_calculator": [[263, 2, 1, "", "CalculatorTest"]], "ase2sprkkr.sprkkr.test.test_calculator.CalculatorTest": [[263, 3, 1, "", "__init__"], [263, 3, 1, "", "test_calculator"], [263, 3, 1, "", "test_run"]], "ase2sprkkr.sprkkr.test.test_sprkkr_atoms": [[265, 2, 1, "", "SPRKKRAtomsTest"]], "ase2sprkkr.sprkkr.test.test_sprkkr_atoms.SPRKKRAtomsTest": [[265, 3, 1, "", "__init__"], [265, 3, 1, "", "test_occupancy"], [265, 3, 1, "", "test_symmetry"], [265, 3, 1, "", "xtest_atoms"]], "ase2sprkkr.sprkkr.test.test_sysfile": [[267, 2, 1, "", "SysfileTest"]], "ase2sprkkr.sprkkr.test.test_sysfile.SysfileTest": [[267, 3, 1, "", "__init__"], [267, 3, 1, "", "test"]], "ase2sprkkr.tools": [[269, 0, 0, "-", "a2s_visualise_in_struct"]], "ase2sprkkr.tools.a2s_visualise_in_struct": [[270, 1, 1, "", "visualise"]]}, "objtypes": {"0": "py:module", "1": "py:function", "2": "py:class", "3": "py:method", "4": "py:attribute", "5": "py:property", "6": "py:data"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "function", "Python function"], "2": ["py", "class", "Python class"], "3": ["py", "method", "Python method"], "4": ["py", "attribute", "Python attribute"], "5": ["py", "property", "Python property"], "6": ["py", "data", "Python data"]}, "titleterms": {"ase2sprkkr": [0, 1, 272, 273, 274, 278], "useful": [0, 274, 276], "link": [0, 274, 276], "instal": [0, 273, 275, 278], "packag": [0, 273, 274, 275, 277], "us": [0, 273, 275, 278], "manag": [0, 273, 275], "further": [0, 273, 275], "note": [0, 273, 275, 278], "from": [0, 273, 275], "git": [0, 273, 275], "sourc": [0, 273, 275], "code": [0, 273, 275], "requir": [0, 273, 275], "obtain": [0, 273, 275], "without": [0, 273, 275], "pip": [0, 273, 275], "conda": [0, 273, 275], "build": [0, 273, 275], "wheel": [0, 273, 275], "One": [0, 273, 275], "step": [0, 273, 275], "document": [0, 273, 274, 275], "how": [0, 273, 275, 278], "contribut": [0, 273, 275, 278], "report": [0, 273, 275, 278], "bug": [0, 273, 275], "bind": 2, "spglib": 3, "compute_spacegroup": 4, "equivalent_sites_for_spacegroup": 5, "possibly_equivalent_sit": 6, "spacegroup_dataset": 7, "common": [8, 277], "base_configur": 9, "baseconfigur": 10, "configuration_contain": 11, "basesect": 12, "configurationcontain": 13, "todo": [13, 257], "customsect": 14, "rootconfigurationcontain": 15, "section": [16, 124, 178, 183, 187, 191, 195, 199, 203, 207], "configuration_definit": 17, "basecontainerdefinit": 18, "basedefinit": 19, "basesectiondefinit": 20, "basevaluedefinit": 21, "confdefinit": 22, "add_excluded_names_condit": 23, "unique_dict": 24, "format": 25, "fortran_format": 26, "grammar": 27, "white": 28, "addconditionex": 29, "addparseactionex": 30, "delimitedlist": 31, "end_of_fil": 32, "generate_grammar": 33, "line_end": 34, "optional_line_end": 35, "optional_quot": 36, "replace_whitechar": 37, "separ": [38, 60, 78, 218], "separator_pattern": 39, "grammar_typ": 40, "arrai": 41, "basemix": 42, "baserealwithunit": 43, "basestr": 44, "basetyp": 45, "bool": 46, "date": 47, "defkeyword": 48, "energi": [49, 67, 126], "flag": [50, 68], "integ": [51, 70], "keyword": 52, "linestr": 53, "mix": [54, 72], "potmix": 55, "qstring": [56, 76], "rang": 57, "real": [58, 77], "realwithunit": 59, "sequenc": 61, "setof": 62, "string": [63, 79], "tabl": [64, 274], "unsign": [65, 85], "boolean": 66, "format_for_typ": 69, "line_str": 71, "normalize_typ": 73, "normalize_type_map": 74, "pot_mix": 75, "type_from_default_valu": 80, "type_from_set_map": 81, "type_from_typ": 82, "type_from_type_map": 83, "type_from_valu": 84, "init_test": [86, 106, 139, 162, 226, 260], "testcas": [87, 107, 140, 163, 227, 261], "patch_packag": 88, "misc": 89, "ordereddict": 90, "add_to_signatur": 91, "class_properti": 92, "copy_list": 93, "lazy_valu": 94, "njit": 95, "numpy_index": 96, "no_output": 97, "nooutput": 98, "option": [99, 101], "customopt": 100, "process_output_read": 102, "asynciofileread": 103, "baseprocessoutputread": 104, "test": [105, 138, 161, 225, 259], "test_common": 108, "commontest": 109, "test_grammar_typ": 110, "grammartest": 111, "unique_valu": 112, "uniquevaluesmap": 113, "input_paramet": [114, 117, 119, 121, 123, 131, 277, 278], "definit": [115, 175], "arp": 116, "do": 118, "phagen": 120, "scf": [122, 127, 155], "control": 125, "site": [128, 200, 247, 248], "task": [129, 278], "tau": 130, "inputparamet": [132, 278], "resolve_executable_postfix": 133, "input_parameters_definit": 134, "inputparametersdefinit": 135, "sectiondefinit": 136, "valuedefinit": 137, "test_definit": 141, "testdefinit": 142, "test_input_paramet": 143, "testinputparamet": 144, "output": [145, 277], "output_definit": 146, "outputnonamevaluedefinit": 147, "outputsectiondefinit": 148, "outputvaluedefinit": 149, "outputvalueequaldefinit": 150, "reader": 151, "default": 152, "defaultoutputread": 153, "defaultresult": 154, "scfoutputread": 156, "scfresult": 157, "task_result": 158, "outputread": 159, "taskresult": 160, "test_output": 164, "testoutput": 165, "physic": 166, "lattice_data": 167, "latticedata": 168, "potenti": [169, 176, 223, 224, 277, 278], "custom_potential_sect": 170, "custompotentialsect": 171, "custompotentialsectiondefinit": 172, "customsectiontoken": 173, "sectionstr": 174, "potential_definit": [177, 213], "_section": 179, "global_system_paramet": 180, "globalsystemparamet": 181, "globalsystemparameterdefinit": 182, "lattic": 184, "latticesect": 185, "latticesectiondefinit": 186, "mesh_inform": 188, "meshinformationsect": 189, "meshinformationsectiondefinit": 190, "occup": [192, 240, 241], "occupationsect": 193, "occupationsectiondefinit": 194, "reference_system": [196, 245], "referencesystemsect": 197, "referencesystemsectiondefinit": 198, "sitessect": 201, "sitessectiondefinit": 202, "type": [204, 278], "typessect": 205, "typessectiondefinit": 206, "io_data": 208, "baseiodata": 209, "readiodata": 210, "writeiodata": 211, "unique_map": 212, "asearraysectiondefinit": 214, "potsectiondefinit": 215, "potvaluedefinit": 216, "potentialdefinit": 217, "potential_sect": 219, "asearraysect": 220, "potentialsect": 221, "uniquelistsect": 222, "test_custom_sect": 228, "testcustomsect": 229, "test_potenti": 230, "testpotenti": 231, "test_structur": 232, "teststructur": 233, "sprkkr": [234, 239, 277], "atomic_typ": 235, "atomictyp": 236, "calcul": [237, 278], "modul": [237, 271], "filenametempl": 238, "radial_mesh": 242, "exponentialmesh": 243, "mesh": 244, "referencesystem": 246, "sprkkr_atom": 249, "sprkkratom": 250, "structur": [251, 277], "atomdata": 252, "layerdata": 253, "floatjm": 254, "structure_file_to_atom": 255, "sysfil": 256, "sysfile_cont": 257, "write_sysfil": 258, "test_calcul": 262, "calculatortest": 263, "test_sprkkr_atom": 264, "sprkkratomstest": 265, "test_sysfil": 266, "sysfiletest": 267, "tool": [268, 277, 278], "a2s_visualise_in_struct": 269, "visualis": 270, "version": 271, "more": [273, 278], "about": [273, 278], "softwar": 274, "content": 274, "class": 274, "indic": 274, "ase2spr": 277, "kkr": 277, "": 277, "philosophi": 277, "develop": 277, "The": 277, "base": 277, "read": [277, 278], "configur": 277, "file": [277, 278], "write": 277, "run": [277, 278], "program": 277, "usag": 278, "comput": 278, "bulk": 278, "materi": 278, "defin": 278, "properti": 278, "result": 278, "set": 278, "input": 278, "paramet": 278, "work": 278, "object": 278, "subsequ": 278, "gener": 278, "A": 278, "atom": 278, "mpi": 278, "bundl": 278, "error": 278}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 6, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.todo": 2, "sphinx.ext.viewcode": 1, "sphinx": 56}})