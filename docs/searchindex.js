Search.setIndex({"docnames": ["README", "auto/ase2sprkkr", "auto/ase2sprkkr.ase", "auto/ase2sprkkr.ase.build", "auto/ase2sprkkr.ase.build.aperiodic_times", "auto/ase2sprkkr.ase.build.stack", "auto/ase2sprkkr.ase.pbc", "auto/ase2sprkkr.ase.pbc.check_symmetry", "auto/ase2sprkkr.ase.symbols", "auto/ase2sprkkr.ase.symbols.pretty_symbols", "auto/ase2sprkkr.ase.visualise", "auto/ase2sprkkr.ase.visualise.view", "auto/ase2sprkkr.bindings", "auto/ase2sprkkr.bindings.es_finder", "auto/ase2sprkkr.bindings.es_finder.EmptySpheresResult", "auto/ase2sprkkr.bindings.es_finder.add_empty_spheres", "auto/ase2sprkkr.bindings.es_finder.empty_spheres", "auto/ase2sprkkr.bindings.spglib", "auto/ase2sprkkr.bindings.spglib.SpacegroupInfo", "auto/ase2sprkkr.bindings.spglib.possibly_equivalent_sites", "auto/ase2sprkkr.common", "auto/ase2sprkkr.common.alternative_types", "auto/ase2sprkkr.common.alternative_types.allowed_types", "auto/ase2sprkkr.common.alternative_types.normalize_type", "auto/ase2sprkkr.common.alternative_types.normalize_type_map", "auto/ase2sprkkr.common.alternative_types.types_alternatives", "auto/ase2sprkkr.common.configuration", "auto/ase2sprkkr.common.configuration.Configuration", "auto/ase2sprkkr.common.configuration_containers", "auto/ase2sprkkr.common.configuration_containers.BaseSection", "auto/ase2sprkkr.common.configuration_containers.ConfigurationContainer", "auto/ase2sprkkr.common.configuration_containers.CustomSection", "auto/ase2sprkkr.common.configuration_containers.DictAdaptor", "auto/ase2sprkkr.common.configuration_containers.RootConfigurationContainer", "auto/ase2sprkkr.common.configuration_containers.Section", "auto/ase2sprkkr.common.configuration_definitions", "auto/ase2sprkkr.common.configuration_definitions.BaseDefinition", "auto/ase2sprkkr.common.configuration_definitions.ConfigurationRootDefinition", "auto/ase2sprkkr.common.configuration_definitions.ContainerDefinition", "auto/ase2sprkkr.common.configuration_definitions.MergeDictAdaptor", "auto/ase2sprkkr.common.configuration_definitions.SectionDefinition", "auto/ase2sprkkr.common.configuration_definitions.ValueDefinition", "auto/ase2sprkkr.common.configuration_definitions.add_excluded_names_condition", "auto/ase2sprkkr.common.configuration_definitions.unique_dict", "auto/ase2sprkkr.common.decorators", "auto/ase2sprkkr.common.decorators.add_called_class_as_argument", "auto/ase2sprkkr.common.decorators.add_to_signature", "auto/ase2sprkkr.common.decorators.cache", "auto/ase2sprkkr.common.decorators.cached_class_property", "auto/ase2sprkkr.common.decorators.cached_property", "auto/ase2sprkkr.common.decorators.class_property", "auto/ase2sprkkr.common.directory", "auto/ase2sprkkr.common.directory.Directory", "auto/ase2sprkkr.common.doc", "auto/ase2sprkkr.common.doc.process_input_parameters_definition", "auto/ase2sprkkr.common.doc.verbatim", "auto/ase2sprkkr.common.formats", "auto/ase2sprkkr.common.formats.fortran_format", "auto/ase2sprkkr.common.grammar", "auto/ase2sprkkr.common.grammar.White", "auto/ase2sprkkr.common.grammar.addConditionEx", "auto/ase2sprkkr.common.grammar.addParseActionEx", "auto/ase2sprkkr.common.grammar.delimitedList", "auto/ase2sprkkr.common.grammar.end_of_file", "auto/ase2sprkkr.common.grammar.generate_grammar", "auto/ase2sprkkr.common.grammar.line_end", "auto/ase2sprkkr.common.grammar.optional_line_end", "auto/ase2sprkkr.common.grammar.optional_quote", "auto/ase2sprkkr.common.grammar.replace_whitechars", "auto/ase2sprkkr.common.grammar.separator", "auto/ase2sprkkr.common.grammar.separator_pattern", "auto/ase2sprkkr.common.grammar_types", "auto/ase2sprkkr.common.grammar_types.Array", "auto/ase2sprkkr.common.grammar_types.BaseMixed", "auto/ase2sprkkr.common.grammar_types.BaseRealWithUnits", "auto/ase2sprkkr.common.grammar_types.BaseString", "auto/ase2sprkkr.common.grammar_types.Bool", "auto/ase2sprkkr.common.grammar_types.Complex", "auto/ase2sprkkr.common.grammar_types.Date", "auto/ase2sprkkr.common.grammar_types.DefKeyword", "auto/ase2sprkkr.common.grammar_types.Energy", "auto/ase2sprkkr.common.grammar_types.Flag", "auto/ase2sprkkr.common.grammar_types.GrammarType", "auto/ase2sprkkr.common.grammar_types.Integer", "auto/ase2sprkkr.common.grammar_types.Keyword", "auto/ase2sprkkr.common.grammar_types.LineString", "auto/ase2sprkkr.common.grammar_types.Mixed", "auto/ase2sprkkr.common.grammar_types.Number", "auto/ase2sprkkr.common.grammar_types.ObjectNumber", "auto/ase2sprkkr.common.grammar_types.PotMixed", "auto/ase2sprkkr.common.grammar_types.QString", "auto/ase2sprkkr.common.grammar_types.Range", "auto/ase2sprkkr.common.grammar_types.Real", "auto/ase2sprkkr.common.grammar_types.RealWithUnits", "auto/ase2sprkkr.common.grammar_types.Separator", "auto/ase2sprkkr.common.grammar_types.Sequence", "auto/ase2sprkkr.common.grammar_types.SetOf", "auto/ase2sprkkr.common.grammar_types.String", "auto/ase2sprkkr.common.grammar_types.Table", "auto/ase2sprkkr.common.grammar_types.TypedGrammarType", "auto/ase2sprkkr.common.grammar_types.Unsigned", "auto/ase2sprkkr.common.grammar_types.boolean", "auto/ase2sprkkr.common.grammar_types.compare_numpy_values", "auto/ase2sprkkr.common.grammar_types.complex_number", "auto/ase2sprkkr.common.grammar_types.date", "auto/ase2sprkkr.common.grammar_types.energy", "auto/ase2sprkkr.common.grammar_types.flag", "auto/ase2sprkkr.common.grammar_types.format_for_type", "auto/ase2sprkkr.common.grammar_types.integer", "auto/ase2sprkkr.common.grammar_types.line_string", "auto/ase2sprkkr.common.grammar_types.mixed", "auto/ase2sprkkr.common.grammar_types.pot_mixed", "auto/ase2sprkkr.common.grammar_types.qstring", "auto/ase2sprkkr.common.grammar_types.real", "auto/ase2sprkkr.common.grammar_types.recognized_set_types", "auto/ase2sprkkr.common.grammar_types.separator", "auto/ase2sprkkr.common.grammar_types.set_of_integers", "auto/ase2sprkkr.common.grammar_types.set_of_reals", "auto/ase2sprkkr.common.grammar_types.string", "auto/ase2sprkkr.common.grammar_types.type_from_default_value", "auto/ase2sprkkr.common.grammar_types.type_from_set_map", "auto/ase2sprkkr.common.grammar_types.type_from_type", "auto/ase2sprkkr.common.grammar_types.type_from_type_map", "auto/ase2sprkkr.common.grammar_types.type_from_value", "auto/ase2sprkkr.common.grammar_types.unsigned", "auto/ase2sprkkr.common.init_tests", "auto/ase2sprkkr.common.init_tests.TestCase", "auto/ase2sprkkr.common.init_tests.patch_package", "auto/ase2sprkkr.common.misc", "auto/ase2sprkkr.common.misc.OrderedDict", "auto/ase2sprkkr.common.misc.as_integer", "auto/ase2sprkkr.common.misc.copy_list", "auto/ase2sprkkr.common.misc.njit", "auto/ase2sprkkr.common.misc.numpy_index", "auto/ase2sprkkr.common.no_output", "auto/ase2sprkkr.common.no_output.NoOutput", "auto/ase2sprkkr.common.options", "auto/ase2sprkkr.common.options.CustomOption", "auto/ase2sprkkr.common.options.DangerousValue", "auto/ase2sprkkr.common.options.Option", "auto/ase2sprkkr.common.process_output_reader", "auto/ase2sprkkr.common.process_output_reader.AsyncioFileReader", "auto/ase2sprkkr.common.process_output_reader.BaseProcessOutputReader", "auto/ase2sprkkr.common.test", "auto/ase2sprkkr.common.test.init_tests", "auto/ase2sprkkr.common.test.init_tests.TestCase", "auto/ase2sprkkr.common.test.test_common", "auto/ase2sprkkr.common.test.test_common.CommonTest", "auto/ase2sprkkr.common.test.test_grammar_types", "auto/ase2sprkkr.common.test.test_grammar_types.GrammarTest", "auto/ase2sprkkr.common.unique_values", "auto/ase2sprkkr.common.unique_values.UniqueValuesMapping", "auto/ase2sprkkr.input_parameters", "auto/ase2sprkkr.input_parameters.definitions", "auto/ase2sprkkr.input_parameters.definitions.arpes", "auto/ase2sprkkr.input_parameters.definitions.arpes.input_parameters", "auto/ase2sprkkr.input_parameters.definitions.dos", "auto/ase2sprkkr.input_parameters.definitions.dos.input_parameters", "auto/ase2sprkkr.input_parameters.definitions.phagen", "auto/ase2sprkkr.input_parameters.definitions.phagen.input_parameters", "auto/ase2sprkkr.input_parameters.definitions.scf", "auto/ase2sprkkr.input_parameters.definitions.scf.input_parameters", "auto/ase2sprkkr.input_parameters.definitions.sections", "auto/ase2sprkkr.input_parameters.definitions.sections.CONTROL", "auto/ase2sprkkr.input_parameters.definitions.sections.CPA", "auto/ase2sprkkr.input_parameters.definitions.sections.ENERGY", "auto/ase2sprkkr.input_parameters.definitions.sections.MODE", "auto/ase2sprkkr.input_parameters.definitions.sections.SCF", "auto/ase2sprkkr.input_parameters.definitions.sections.SITES", "auto/ase2sprkkr.input_parameters.definitions.sections.STRCONST", "auto/ase2sprkkr.input_parameters.definitions.sections.TASK", "auto/ase2sprkkr.input_parameters.definitions.sections.TAU", "auto/ase2sprkkr.input_parameters.definitions.sections.TauSection", "auto/ase2sprkkr.input_parameters.definitions.sections._nktab_value", "auto/ase2sprkkr.input_parameters.input_parameters", "auto/ase2sprkkr.input_parameters.input_parameters.InputParameters", "auto/ase2sprkkr.input_parameters.input_parameters.InputSection", "auto/ase2sprkkr.input_parameters.input_parameters.resolve_executable_postfix", "auto/ase2sprkkr.input_parameters.input_parameters_definitions", "auto/ase2sprkkr.input_parameters.input_parameters_definitions.InputParametersDefinition", "auto/ase2sprkkr.input_parameters.input_parameters_definitions.InputSectionDefinition", "auto/ase2sprkkr.input_parameters.input_parameters_definitions.InputValueDefinition", "auto/ase2sprkkr.input_parameters.test", "auto/ase2sprkkr.input_parameters.test.init_tests", "auto/ase2sprkkr.input_parameters.test.init_tests.TestCase", "auto/ase2sprkkr.input_parameters.test.test_definitions", "auto/ase2sprkkr.input_parameters.test.test_definitions.TestDefinitions", "auto/ase2sprkkr.input_parameters.test.test_input_parameters", "auto/ase2sprkkr.input_parameters.test.test_input_parameters.TestInputParameters", "auto/ase2sprkkr.outputs", "auto/ase2sprkkr.outputs.output_definitions", "auto/ase2sprkkr.outputs.output_definitions.OutputNonameValueDefinition", "auto/ase2sprkkr.outputs.output_definitions.OutputSectionDefinition", "auto/ase2sprkkr.outputs.output_definitions.OutputValueDefinition", "auto/ase2sprkkr.outputs.output_definitions.OutputValueEqualDefinition", "auto/ase2sprkkr.outputs.readers", "auto/ase2sprkkr.outputs.readers.default", "auto/ase2sprkkr.outputs.readers.default.DefaultOutputReader", "auto/ase2sprkkr.outputs.readers.default.DefaultResult", "auto/ase2sprkkr.outputs.readers.scf", "auto/ase2sprkkr.outputs.readers.scf.RealOrStars", "auto/ase2sprkkr.outputs.readers.scf.ScfOutputReader", "auto/ase2sprkkr.outputs.readers.scf.ScfResult", "auto/ase2sprkkr.outputs.task_result", "auto/ase2sprkkr.outputs.task_result.OutputReader", "auto/ase2sprkkr.outputs.task_result.TaskResult", "auto/ase2sprkkr.outputs.test", "auto/ase2sprkkr.outputs.test.init_tests", "auto/ase2sprkkr.outputs.test.init_tests.TestCase", "auto/ase2sprkkr.outputs.test.test_output", "auto/ase2sprkkr.outputs.test.test_output.TestOutput", "auto/ase2sprkkr.physics", "auto/ase2sprkkr.physics.lattice_data", "auto/ase2sprkkr.physics.lattice_data.LatticeData", "auto/ase2sprkkr.physics.lattice_data.Pearson", "auto/ase2sprkkr.physics.lattice_data.international_numbers_to_AP", "auto/ase2sprkkr.physics.winger_seitz_radii", "auto/ase2sprkkr.physics.winger_seitz_radii.winger_seitz_radii", "auto/ase2sprkkr.potentials", "auto/ase2sprkkr.potentials.custom_potential_section", "auto/ase2sprkkr.potentials.custom_potential_section.CustomPotentialSection", "auto/ase2sprkkr.potentials.custom_potential_section.CustomPotentialSectionDefinition", "auto/ase2sprkkr.potentials.custom_potential_section.CustomSectionToken", "auto/ase2sprkkr.potentials.custom_potential_section.SectionString", "auto/ase2sprkkr.potentials.definitions", "auto/ase2sprkkr.potentials.definitions.potential", "auto/ase2sprkkr.potentials.definitions.potential.potential_definition", "auto/ase2sprkkr.potentials.definitions.sections", "auto/ase2sprkkr.potentials.definitions.sections._sections", "auto/ase2sprkkr.potentials.definitions.sections.global_system_parameter", "auto/ase2sprkkr.potentials.definitions.sections.global_system_parameter.GlobalSystemParameter", "auto/ase2sprkkr.potentials.definitions.sections.global_system_parameter.GlobalSystemParameterDefinition", "auto/ase2sprkkr.potentials.definitions.sections.global_system_parameter.section", "auto/ase2sprkkr.potentials.definitions.sections.lattice", "auto/ase2sprkkr.potentials.definitions.sections.lattice.LatticeSection", "auto/ase2sprkkr.potentials.definitions.sections.lattice.LatticeSectionDefinition", "auto/ase2sprkkr.potentials.definitions.sections.lattice.section", "auto/ase2sprkkr.potentials.definitions.sections.mesh_information", "auto/ase2sprkkr.potentials.definitions.sections.mesh_information.MeshInformationSection", "auto/ase2sprkkr.potentials.definitions.sections.mesh_information.MeshInformationSectionDefinition", "auto/ase2sprkkr.potentials.definitions.sections.mesh_information.section", "auto/ase2sprkkr.potentials.definitions.sections.occupation", "auto/ase2sprkkr.potentials.definitions.sections.occupation.OccupationSection", "auto/ase2sprkkr.potentials.definitions.sections.occupation.OccupationSectionDefinition", "auto/ase2sprkkr.potentials.definitions.sections.occupation.section", "auto/ase2sprkkr.potentials.definitions.sections.reference_system", "auto/ase2sprkkr.potentials.definitions.sections.reference_system.ReferenceSystemSection", "auto/ase2sprkkr.potentials.definitions.sections.reference_system.ReferenceSystemSectionDefinition", "auto/ase2sprkkr.potentials.definitions.sections.reference_system.section", "auto/ase2sprkkr.potentials.definitions.sections.sites", "auto/ase2sprkkr.potentials.definitions.sections.sites.SitesSection", "auto/ase2sprkkr.potentials.definitions.sections.sites.SitesSectionDefinition", "auto/ase2sprkkr.potentials.definitions.sections.sites.section", "auto/ase2sprkkr.potentials.definitions.sections.types", "auto/ase2sprkkr.potentials.definitions.sections.types.TypesSection", "auto/ase2sprkkr.potentials.definitions.sections.types.TypesSectionDefinition", "auto/ase2sprkkr.potentials.definitions.sections.types.section", "auto/ase2sprkkr.potentials.potential_definitions", "auto/ase2sprkkr.potentials.potential_definitions.ASEArraySectionDefinition", "auto/ase2sprkkr.potentials.potential_definitions.PotSectionDefinition", "auto/ase2sprkkr.potentials.potential_definitions.PotValueDefinition", "auto/ase2sprkkr.potentials.potential_definitions.PotentialDefinition", "auto/ase2sprkkr.potentials.potential_definitions.Separator", "auto/ase2sprkkr.potentials.potential_sections", "auto/ase2sprkkr.potentials.potential_sections.ASEArraySection", "auto/ase2sprkkr.potentials.potential_sections.PotentialSection", "auto/ase2sprkkr.potentials.potential_sections.UniqueListSection", "auto/ase2sprkkr.potentials.potentials", "auto/ase2sprkkr.potentials.potentials.Potential", "auto/ase2sprkkr.potentials.test", "auto/ase2sprkkr.potentials.test.init_tests", "auto/ase2sprkkr.potentials.test.init_tests.TestCase", "auto/ase2sprkkr.potentials.test.test_2D", "auto/ase2sprkkr.potentials.test.test_2D.Test2DPotential", "auto/ase2sprkkr.potentials.test.test_custom_section", "auto/ase2sprkkr.potentials.test.test_custom_section.TestCustomSection", "auto/ase2sprkkr.potentials.test.test_potential", "auto/ase2sprkkr.potentials.test.test_potential.TestPotential", "auto/ase2sprkkr.potentials.test.test_structure", "auto/ase2sprkkr.potentials.test.test_structure.TestStructure", "auto/ase2sprkkr.sprkkr", "auto/ase2sprkkr.sprkkr.atomic_types", "auto/ase2sprkkr.sprkkr.atomic_types.AtomicType", "auto/ase2sprkkr.sprkkr.atoms_region", "auto/ase2sprkkr.sprkkr.atoms_region.AtomsRegion", "auto/ase2sprkkr.sprkkr.build", "auto/ase2sprkkr.sprkkr.build.semiinfinite_system", "auto/ase2sprkkr.sprkkr.build.stack", "auto/ase2sprkkr.sprkkr.build.vacuum_like", "auto/ase2sprkkr.sprkkr.calculator", "auto/ase2sprkkr.sprkkr.calculator.FilenameTemplator", "auto/ase2sprkkr.sprkkr.calculator.SPRKKR", "auto/ase2sprkkr.sprkkr.configuration", "auto/ase2sprkkr.sprkkr.configuration.ConfigurationFile", "auto/ase2sprkkr.sprkkr.configuration.ConfigurationFileDefinition", "auto/ase2sprkkr.sprkkr.configuration.ConfigurationSection", "auto/ase2sprkkr.sprkkr.configuration.ConfigurationSectionDefinition", "auto/ase2sprkkr.sprkkr.configuration.ConfigurationSectionTrait", "auto/ase2sprkkr.sprkkr.configuration.ConfigurationValue", "auto/ase2sprkkr.sprkkr.configuration.ConfigurationValueDefinition", "auto/ase2sprkkr.sprkkr.configuration.CustomConfigurationSection", "auto/ase2sprkkr.sprkkr.configuration.CustomConfigurationValue", "auto/ase2sprkkr.sprkkr.io_data", "auto/ase2sprkkr.sprkkr.io_data.BaseIoData", "auto/ase2sprkkr.sprkkr.io_data.ReadIoData", "auto/ase2sprkkr.sprkkr.io_data.WriteIoData", "auto/ase2sprkkr.sprkkr.io_data.unique_mapping", "auto/ase2sprkkr.sprkkr.occupations", "auto/ase2sprkkr.sprkkr.occupations.Occupation", "auto/ase2sprkkr.sprkkr.radial_meshes", "auto/ase2sprkkr.sprkkr.radial_meshes.ExponentialMesh", "auto/ase2sprkkr.sprkkr.radial_meshes.Mesh", "auto/ase2sprkkr.sprkkr.reference_systems", "auto/ase2sprkkr.sprkkr.reference_systems.ReferenceSystem", "auto/ase2sprkkr.sprkkr.sites", "auto/ase2sprkkr.sprkkr.sites.Site", "auto/ase2sprkkr.sprkkr.sprkkr_atoms", "auto/ase2sprkkr.sprkkr.sprkkr_atoms.SPRKKRAtoms", "auto/ase2sprkkr.sprkkr.sprkkr_grammar_types", "auto/ase2sprkkr.sprkkr.sprkkr_grammar_types.AtomicType", "auto/ase2sprkkr.sprkkr.sprkkr_grammar_types.Site", "auto/ase2sprkkr.sprkkr.structure", "auto/ase2sprkkr.sprkkr.structure.AtomData", "auto/ase2sprkkr.sprkkr.structure.LayerData", "auto/ase2sprkkr.sprkkr.structure.floatjm", "auto/ase2sprkkr.sprkkr.structure.structure_file_to_atoms", "auto/ase2sprkkr.sprkkr.sysfile", "auto/ase2sprkkr.sprkkr.sysfile.sysfile_content", "auto/ase2sprkkr.sprkkr.sysfile.write_sysfile", "auto/ase2sprkkr.sprkkr.test", "auto/ase2sprkkr.sprkkr.test.init_tests", "auto/ase2sprkkr.sprkkr.test.init_tests.TestCase", "auto/ase2sprkkr.sprkkr.test.test_build", "auto/ase2sprkkr.sprkkr.test.test_build.BuildTest", "auto/ase2sprkkr.sprkkr.test.test_calculator", "auto/ase2sprkkr.sprkkr.test.test_calculator.CalculatorTest", "auto/ase2sprkkr.sprkkr.test.test_sites", "auto/ase2sprkkr.sprkkr.test.test_sites.SitesTest", "auto/ase2sprkkr.sprkkr.test.test_sprkkr_atoms", "auto/ase2sprkkr.sprkkr.test.test_sprkkr_atoms.SPRKKRAtomsTest", "auto/ase2sprkkr.sprkkr.test.test_sysfile", "auto/ase2sprkkr.sprkkr.test.test_sysfile.SysfileTest", "auto/ase2sprkkr.tools", "auto/ase2sprkkr.tools.a2s_visualise_in_struct", "auto/ase2sprkkr.tools.a2s_visualise_in_struct.visualise", "auto/ase2sprkkr.tools.test", "auto/ase2sprkkr.tools.test.init_tests", "auto/ase2sprkkr.tools.test.init_tests.TestCase", "auto/ase2sprkkr.tools.test.test_tools", "auto/ase2sprkkr.tools.test.test_tools.CommonTest", "auto/ase2sprkkr.version", "auto/modules", "changelog", "how-to-install", "index", "installation", "introduction", "philosophy", "usage"], "filenames": ["README.rst", "auto/ase2sprkkr.rst", "auto/ase2sprkkr.ase.rst", "auto/ase2sprkkr.ase.build.rst", "auto/ase2sprkkr.ase.build.aperiodic_times.rst", "auto/ase2sprkkr.ase.build.stack.rst", "auto/ase2sprkkr.ase.pbc.rst", "auto/ase2sprkkr.ase.pbc.check_symmetry.rst", "auto/ase2sprkkr.ase.symbols.rst", "auto/ase2sprkkr.ase.symbols.pretty_symbols.rst", "auto/ase2sprkkr.ase.visualise.rst", "auto/ase2sprkkr.ase.visualise.view.rst", "auto/ase2sprkkr.bindings.rst", "auto/ase2sprkkr.bindings.es_finder.rst", "auto/ase2sprkkr.bindings.es_finder.EmptySpheresResult.rst", "auto/ase2sprkkr.bindings.es_finder.add_empty_spheres.rst", "auto/ase2sprkkr.bindings.es_finder.empty_spheres.rst", "auto/ase2sprkkr.bindings.spglib.rst", "auto/ase2sprkkr.bindings.spglib.SpacegroupInfo.rst", "auto/ase2sprkkr.bindings.spglib.possibly_equivalent_sites.rst", "auto/ase2sprkkr.common.rst", "auto/ase2sprkkr.common.alternative_types.rst", "auto/ase2sprkkr.common.alternative_types.allowed_types.rst", "auto/ase2sprkkr.common.alternative_types.normalize_type.rst", "auto/ase2sprkkr.common.alternative_types.normalize_type_map.rst", "auto/ase2sprkkr.common.alternative_types.types_alternatives.rst", "auto/ase2sprkkr.common.configuration.rst", "auto/ase2sprkkr.common.configuration.Configuration.rst", "auto/ase2sprkkr.common.configuration_containers.rst", "auto/ase2sprkkr.common.configuration_containers.BaseSection.rst", "auto/ase2sprkkr.common.configuration_containers.ConfigurationContainer.rst", "auto/ase2sprkkr.common.configuration_containers.CustomSection.rst", "auto/ase2sprkkr.common.configuration_containers.DictAdaptor.rst", "auto/ase2sprkkr.common.configuration_containers.RootConfigurationContainer.rst", "auto/ase2sprkkr.common.configuration_containers.Section.rst", "auto/ase2sprkkr.common.configuration_definitions.rst", "auto/ase2sprkkr.common.configuration_definitions.BaseDefinition.rst", "auto/ase2sprkkr.common.configuration_definitions.ConfigurationRootDefinition.rst", "auto/ase2sprkkr.common.configuration_definitions.ContainerDefinition.rst", "auto/ase2sprkkr.common.configuration_definitions.MergeDictAdaptor.rst", "auto/ase2sprkkr.common.configuration_definitions.SectionDefinition.rst", "auto/ase2sprkkr.common.configuration_definitions.ValueDefinition.rst", "auto/ase2sprkkr.common.configuration_definitions.add_excluded_names_condition.rst", "auto/ase2sprkkr.common.configuration_definitions.unique_dict.rst", "auto/ase2sprkkr.common.decorators.rst", "auto/ase2sprkkr.common.decorators.add_called_class_as_argument.rst", "auto/ase2sprkkr.common.decorators.add_to_signature.rst", "auto/ase2sprkkr.common.decorators.cache.rst", "auto/ase2sprkkr.common.decorators.cached_class_property.rst", "auto/ase2sprkkr.common.decorators.cached_property.rst", "auto/ase2sprkkr.common.decorators.class_property.rst", "auto/ase2sprkkr.common.directory.rst", "auto/ase2sprkkr.common.directory.Directory.rst", "auto/ase2sprkkr.common.doc.rst", "auto/ase2sprkkr.common.doc.process_input_parameters_definition.rst", "auto/ase2sprkkr.common.doc.verbatim.rst", "auto/ase2sprkkr.common.formats.rst", "auto/ase2sprkkr.common.formats.fortran_format.rst", "auto/ase2sprkkr.common.grammar.rst", "auto/ase2sprkkr.common.grammar.White.rst", "auto/ase2sprkkr.common.grammar.addConditionEx.rst", "auto/ase2sprkkr.common.grammar.addParseActionEx.rst", "auto/ase2sprkkr.common.grammar.delimitedList.rst", "auto/ase2sprkkr.common.grammar.end_of_file.rst", "auto/ase2sprkkr.common.grammar.generate_grammar.rst", "auto/ase2sprkkr.common.grammar.line_end.rst", "auto/ase2sprkkr.common.grammar.optional_line_end.rst", "auto/ase2sprkkr.common.grammar.optional_quote.rst", "auto/ase2sprkkr.common.grammar.replace_whitechars.rst", "auto/ase2sprkkr.common.grammar.separator.rst", "auto/ase2sprkkr.common.grammar.separator_pattern.rst", "auto/ase2sprkkr.common.grammar_types.rst", "auto/ase2sprkkr.common.grammar_types.Array.rst", "auto/ase2sprkkr.common.grammar_types.BaseMixed.rst", "auto/ase2sprkkr.common.grammar_types.BaseRealWithUnits.rst", "auto/ase2sprkkr.common.grammar_types.BaseString.rst", "auto/ase2sprkkr.common.grammar_types.Bool.rst", "auto/ase2sprkkr.common.grammar_types.Complex.rst", "auto/ase2sprkkr.common.grammar_types.Date.rst", "auto/ase2sprkkr.common.grammar_types.DefKeyword.rst", "auto/ase2sprkkr.common.grammar_types.Energy.rst", "auto/ase2sprkkr.common.grammar_types.Flag.rst", "auto/ase2sprkkr.common.grammar_types.GrammarType.rst", "auto/ase2sprkkr.common.grammar_types.Integer.rst", "auto/ase2sprkkr.common.grammar_types.Keyword.rst", "auto/ase2sprkkr.common.grammar_types.LineString.rst", "auto/ase2sprkkr.common.grammar_types.Mixed.rst", "auto/ase2sprkkr.common.grammar_types.Number.rst", "auto/ase2sprkkr.common.grammar_types.ObjectNumber.rst", "auto/ase2sprkkr.common.grammar_types.PotMixed.rst", "auto/ase2sprkkr.common.grammar_types.QString.rst", "auto/ase2sprkkr.common.grammar_types.Range.rst", "auto/ase2sprkkr.common.grammar_types.Real.rst", "auto/ase2sprkkr.common.grammar_types.RealWithUnits.rst", "auto/ase2sprkkr.common.grammar_types.Separator.rst", "auto/ase2sprkkr.common.grammar_types.Sequence.rst", "auto/ase2sprkkr.common.grammar_types.SetOf.rst", "auto/ase2sprkkr.common.grammar_types.String.rst", "auto/ase2sprkkr.common.grammar_types.Table.rst", "auto/ase2sprkkr.common.grammar_types.TypedGrammarType.rst", "auto/ase2sprkkr.common.grammar_types.Unsigned.rst", "auto/ase2sprkkr.common.grammar_types.boolean.rst", "auto/ase2sprkkr.common.grammar_types.compare_numpy_values.rst", "auto/ase2sprkkr.common.grammar_types.complex_number.rst", "auto/ase2sprkkr.common.grammar_types.date.rst", "auto/ase2sprkkr.common.grammar_types.energy.rst", "auto/ase2sprkkr.common.grammar_types.flag.rst", "auto/ase2sprkkr.common.grammar_types.format_for_type.rst", "auto/ase2sprkkr.common.grammar_types.integer.rst", "auto/ase2sprkkr.common.grammar_types.line_string.rst", "auto/ase2sprkkr.common.grammar_types.mixed.rst", "auto/ase2sprkkr.common.grammar_types.pot_mixed.rst", "auto/ase2sprkkr.common.grammar_types.qstring.rst", "auto/ase2sprkkr.common.grammar_types.real.rst", "auto/ase2sprkkr.common.grammar_types.recognized_set_types.rst", "auto/ase2sprkkr.common.grammar_types.separator.rst", "auto/ase2sprkkr.common.grammar_types.set_of_integers.rst", "auto/ase2sprkkr.common.grammar_types.set_of_reals.rst", "auto/ase2sprkkr.common.grammar_types.string.rst", "auto/ase2sprkkr.common.grammar_types.type_from_default_value.rst", "auto/ase2sprkkr.common.grammar_types.type_from_set_map.rst", "auto/ase2sprkkr.common.grammar_types.type_from_type.rst", "auto/ase2sprkkr.common.grammar_types.type_from_type_map.rst", "auto/ase2sprkkr.common.grammar_types.type_from_value.rst", "auto/ase2sprkkr.common.grammar_types.unsigned.rst", "auto/ase2sprkkr.common.init_tests.rst", "auto/ase2sprkkr.common.init_tests.TestCase.rst", "auto/ase2sprkkr.common.init_tests.patch_package.rst", "auto/ase2sprkkr.common.misc.rst", "auto/ase2sprkkr.common.misc.OrderedDict.rst", "auto/ase2sprkkr.common.misc.as_integer.rst", "auto/ase2sprkkr.common.misc.copy_list.rst", "auto/ase2sprkkr.common.misc.njit.rst", "auto/ase2sprkkr.common.misc.numpy_index.rst", "auto/ase2sprkkr.common.no_output.rst", "auto/ase2sprkkr.common.no_output.NoOutput.rst", "auto/ase2sprkkr.common.options.rst", "auto/ase2sprkkr.common.options.CustomOption.rst", "auto/ase2sprkkr.common.options.DangerousValue.rst", "auto/ase2sprkkr.common.options.Option.rst", "auto/ase2sprkkr.common.process_output_reader.rst", "auto/ase2sprkkr.common.process_output_reader.AsyncioFileReader.rst", "auto/ase2sprkkr.common.process_output_reader.BaseProcessOutputReader.rst", "auto/ase2sprkkr.common.test.rst", "auto/ase2sprkkr.common.test.init_tests.rst", "auto/ase2sprkkr.common.test.init_tests.TestCase.rst", "auto/ase2sprkkr.common.test.test_common.rst", "auto/ase2sprkkr.common.test.test_common.CommonTest.rst", "auto/ase2sprkkr.common.test.test_grammar_types.rst", "auto/ase2sprkkr.common.test.test_grammar_types.GrammarTest.rst", "auto/ase2sprkkr.common.unique_values.rst", "auto/ase2sprkkr.common.unique_values.UniqueValuesMapping.rst", "auto/ase2sprkkr.input_parameters.rst", "auto/ase2sprkkr.input_parameters.definitions.rst", "auto/ase2sprkkr.input_parameters.definitions.arpes.rst", "auto/ase2sprkkr.input_parameters.definitions.arpes.input_parameters.rst", "auto/ase2sprkkr.input_parameters.definitions.dos.rst", "auto/ase2sprkkr.input_parameters.definitions.dos.input_parameters.rst", "auto/ase2sprkkr.input_parameters.definitions.phagen.rst", "auto/ase2sprkkr.input_parameters.definitions.phagen.input_parameters.rst", "auto/ase2sprkkr.input_parameters.definitions.scf.rst", "auto/ase2sprkkr.input_parameters.definitions.scf.input_parameters.rst", "auto/ase2sprkkr.input_parameters.definitions.sections.rst", "auto/ase2sprkkr.input_parameters.definitions.sections.CONTROL.rst", "auto/ase2sprkkr.input_parameters.definitions.sections.CPA.rst", "auto/ase2sprkkr.input_parameters.definitions.sections.ENERGY.rst", "auto/ase2sprkkr.input_parameters.definitions.sections.MODE.rst", "auto/ase2sprkkr.input_parameters.definitions.sections.SCF.rst", "auto/ase2sprkkr.input_parameters.definitions.sections.SITES.rst", "auto/ase2sprkkr.input_parameters.definitions.sections.STRCONST.rst", "auto/ase2sprkkr.input_parameters.definitions.sections.TASK.rst", "auto/ase2sprkkr.input_parameters.definitions.sections.TAU.rst", "auto/ase2sprkkr.input_parameters.definitions.sections.TauSection.rst", "auto/ase2sprkkr.input_parameters.definitions.sections._nktab_value.rst", "auto/ase2sprkkr.input_parameters.input_parameters.rst", "auto/ase2sprkkr.input_parameters.input_parameters.InputParameters.rst", "auto/ase2sprkkr.input_parameters.input_parameters.InputSection.rst", "auto/ase2sprkkr.input_parameters.input_parameters.resolve_executable_postfix.rst", "auto/ase2sprkkr.input_parameters.input_parameters_definitions.rst", "auto/ase2sprkkr.input_parameters.input_parameters_definitions.InputParametersDefinition.rst", "auto/ase2sprkkr.input_parameters.input_parameters_definitions.InputSectionDefinition.rst", "auto/ase2sprkkr.input_parameters.input_parameters_definitions.InputValueDefinition.rst", "auto/ase2sprkkr.input_parameters.test.rst", "auto/ase2sprkkr.input_parameters.test.init_tests.rst", "auto/ase2sprkkr.input_parameters.test.init_tests.TestCase.rst", "auto/ase2sprkkr.input_parameters.test.test_definitions.rst", "auto/ase2sprkkr.input_parameters.test.test_definitions.TestDefinitions.rst", "auto/ase2sprkkr.input_parameters.test.test_input_parameters.rst", "auto/ase2sprkkr.input_parameters.test.test_input_parameters.TestInputParameters.rst", "auto/ase2sprkkr.outputs.rst", "auto/ase2sprkkr.outputs.output_definitions.rst", "auto/ase2sprkkr.outputs.output_definitions.OutputNonameValueDefinition.rst", "auto/ase2sprkkr.outputs.output_definitions.OutputSectionDefinition.rst", "auto/ase2sprkkr.outputs.output_definitions.OutputValueDefinition.rst", "auto/ase2sprkkr.outputs.output_definitions.OutputValueEqualDefinition.rst", "auto/ase2sprkkr.outputs.readers.rst", "auto/ase2sprkkr.outputs.readers.default.rst", "auto/ase2sprkkr.outputs.readers.default.DefaultOutputReader.rst", "auto/ase2sprkkr.outputs.readers.default.DefaultResult.rst", "auto/ase2sprkkr.outputs.readers.scf.rst", "auto/ase2sprkkr.outputs.readers.scf.RealOrStars.rst", "auto/ase2sprkkr.outputs.readers.scf.ScfOutputReader.rst", "auto/ase2sprkkr.outputs.readers.scf.ScfResult.rst", "auto/ase2sprkkr.outputs.task_result.rst", "auto/ase2sprkkr.outputs.task_result.OutputReader.rst", "auto/ase2sprkkr.outputs.task_result.TaskResult.rst", "auto/ase2sprkkr.outputs.test.rst", "auto/ase2sprkkr.outputs.test.init_tests.rst", "auto/ase2sprkkr.outputs.test.init_tests.TestCase.rst", "auto/ase2sprkkr.outputs.test.test_output.rst", "auto/ase2sprkkr.outputs.test.test_output.TestOutput.rst", "auto/ase2sprkkr.physics.rst", "auto/ase2sprkkr.physics.lattice_data.rst", "auto/ase2sprkkr.physics.lattice_data.LatticeData.rst", "auto/ase2sprkkr.physics.lattice_data.Pearson.rst", "auto/ase2sprkkr.physics.lattice_data.international_numbers_to_AP.rst", "auto/ase2sprkkr.physics.winger_seitz_radii.rst", "auto/ase2sprkkr.physics.winger_seitz_radii.winger_seitz_radii.rst", "auto/ase2sprkkr.potentials.rst", "auto/ase2sprkkr.potentials.custom_potential_section.rst", "auto/ase2sprkkr.potentials.custom_potential_section.CustomPotentialSection.rst", "auto/ase2sprkkr.potentials.custom_potential_section.CustomPotentialSectionDefinition.rst", "auto/ase2sprkkr.potentials.custom_potential_section.CustomSectionToken.rst", "auto/ase2sprkkr.potentials.custom_potential_section.SectionString.rst", "auto/ase2sprkkr.potentials.definitions.rst", "auto/ase2sprkkr.potentials.definitions.potential.rst", "auto/ase2sprkkr.potentials.definitions.potential.potential_definition.rst", "auto/ase2sprkkr.potentials.definitions.sections.rst", "auto/ase2sprkkr.potentials.definitions.sections._sections.rst", "auto/ase2sprkkr.potentials.definitions.sections.global_system_parameter.rst", "auto/ase2sprkkr.potentials.definitions.sections.global_system_parameter.GlobalSystemParameter.rst", "auto/ase2sprkkr.potentials.definitions.sections.global_system_parameter.GlobalSystemParameterDefinition.rst", "auto/ase2sprkkr.potentials.definitions.sections.global_system_parameter.section.rst", "auto/ase2sprkkr.potentials.definitions.sections.lattice.rst", "auto/ase2sprkkr.potentials.definitions.sections.lattice.LatticeSection.rst", "auto/ase2sprkkr.potentials.definitions.sections.lattice.LatticeSectionDefinition.rst", "auto/ase2sprkkr.potentials.definitions.sections.lattice.section.rst", "auto/ase2sprkkr.potentials.definitions.sections.mesh_information.rst", "auto/ase2sprkkr.potentials.definitions.sections.mesh_information.MeshInformationSection.rst", "auto/ase2sprkkr.potentials.definitions.sections.mesh_information.MeshInformationSectionDefinition.rst", "auto/ase2sprkkr.potentials.definitions.sections.mesh_information.section.rst", "auto/ase2sprkkr.potentials.definitions.sections.occupation.rst", "auto/ase2sprkkr.potentials.definitions.sections.occupation.OccupationSection.rst", "auto/ase2sprkkr.potentials.definitions.sections.occupation.OccupationSectionDefinition.rst", "auto/ase2sprkkr.potentials.definitions.sections.occupation.section.rst", "auto/ase2sprkkr.potentials.definitions.sections.reference_system.rst", "auto/ase2sprkkr.potentials.definitions.sections.reference_system.ReferenceSystemSection.rst", "auto/ase2sprkkr.potentials.definitions.sections.reference_system.ReferenceSystemSectionDefinition.rst", "auto/ase2sprkkr.potentials.definitions.sections.reference_system.section.rst", "auto/ase2sprkkr.potentials.definitions.sections.sites.rst", "auto/ase2sprkkr.potentials.definitions.sections.sites.SitesSection.rst", "auto/ase2sprkkr.potentials.definitions.sections.sites.SitesSectionDefinition.rst", "auto/ase2sprkkr.potentials.definitions.sections.sites.section.rst", "auto/ase2sprkkr.potentials.definitions.sections.types.rst", "auto/ase2sprkkr.potentials.definitions.sections.types.TypesSection.rst", "auto/ase2sprkkr.potentials.definitions.sections.types.TypesSectionDefinition.rst", "auto/ase2sprkkr.potentials.definitions.sections.types.section.rst", "auto/ase2sprkkr.potentials.potential_definitions.rst", "auto/ase2sprkkr.potentials.potential_definitions.ASEArraySectionDefinition.rst", "auto/ase2sprkkr.potentials.potential_definitions.PotSectionDefinition.rst", "auto/ase2sprkkr.potentials.potential_definitions.PotValueDefinition.rst", "auto/ase2sprkkr.potentials.potential_definitions.PotentialDefinition.rst", "auto/ase2sprkkr.potentials.potential_definitions.Separator.rst", "auto/ase2sprkkr.potentials.potential_sections.rst", "auto/ase2sprkkr.potentials.potential_sections.ASEArraySection.rst", "auto/ase2sprkkr.potentials.potential_sections.PotentialSection.rst", "auto/ase2sprkkr.potentials.potential_sections.UniqueListSection.rst", "auto/ase2sprkkr.potentials.potentials.rst", "auto/ase2sprkkr.potentials.potentials.Potential.rst", "auto/ase2sprkkr.potentials.test.rst", "auto/ase2sprkkr.potentials.test.init_tests.rst", "auto/ase2sprkkr.potentials.test.init_tests.TestCase.rst", "auto/ase2sprkkr.potentials.test.test_2D.rst", "auto/ase2sprkkr.potentials.test.test_2D.Test2DPotential.rst", "auto/ase2sprkkr.potentials.test.test_custom_section.rst", "auto/ase2sprkkr.potentials.test.test_custom_section.TestCustomSection.rst", "auto/ase2sprkkr.potentials.test.test_potential.rst", "auto/ase2sprkkr.potentials.test.test_potential.TestPotential.rst", "auto/ase2sprkkr.potentials.test.test_structure.rst", "auto/ase2sprkkr.potentials.test.test_structure.TestStructure.rst", "auto/ase2sprkkr.sprkkr.rst", "auto/ase2sprkkr.sprkkr.atomic_types.rst", "auto/ase2sprkkr.sprkkr.atomic_types.AtomicType.rst", "auto/ase2sprkkr.sprkkr.atoms_region.rst", "auto/ase2sprkkr.sprkkr.atoms_region.AtomsRegion.rst", "auto/ase2sprkkr.sprkkr.build.rst", "auto/ase2sprkkr.sprkkr.build.semiinfinite_system.rst", "auto/ase2sprkkr.sprkkr.build.stack.rst", "auto/ase2sprkkr.sprkkr.build.vacuum_like.rst", "auto/ase2sprkkr.sprkkr.calculator.rst", "auto/ase2sprkkr.sprkkr.calculator.FilenameTemplator.rst", "auto/ase2sprkkr.sprkkr.calculator.SPRKKR.rst", "auto/ase2sprkkr.sprkkr.configuration.rst", "auto/ase2sprkkr.sprkkr.configuration.ConfigurationFile.rst", "auto/ase2sprkkr.sprkkr.configuration.ConfigurationFileDefinition.rst", "auto/ase2sprkkr.sprkkr.configuration.ConfigurationSection.rst", "auto/ase2sprkkr.sprkkr.configuration.ConfigurationSectionDefinition.rst", "auto/ase2sprkkr.sprkkr.configuration.ConfigurationSectionTrait.rst", "auto/ase2sprkkr.sprkkr.configuration.ConfigurationValue.rst", "auto/ase2sprkkr.sprkkr.configuration.ConfigurationValueDefinition.rst", "auto/ase2sprkkr.sprkkr.configuration.CustomConfigurationSection.rst", "auto/ase2sprkkr.sprkkr.configuration.CustomConfigurationValue.rst", "auto/ase2sprkkr.sprkkr.io_data.rst", "auto/ase2sprkkr.sprkkr.io_data.BaseIoData.rst", "auto/ase2sprkkr.sprkkr.io_data.ReadIoData.rst", "auto/ase2sprkkr.sprkkr.io_data.WriteIoData.rst", "auto/ase2sprkkr.sprkkr.io_data.unique_mapping.rst", "auto/ase2sprkkr.sprkkr.occupations.rst", "auto/ase2sprkkr.sprkkr.occupations.Occupation.rst", "auto/ase2sprkkr.sprkkr.radial_meshes.rst", "auto/ase2sprkkr.sprkkr.radial_meshes.ExponentialMesh.rst", "auto/ase2sprkkr.sprkkr.radial_meshes.Mesh.rst", "auto/ase2sprkkr.sprkkr.reference_systems.rst", "auto/ase2sprkkr.sprkkr.reference_systems.ReferenceSystem.rst", "auto/ase2sprkkr.sprkkr.sites.rst", "auto/ase2sprkkr.sprkkr.sites.Site.rst", "auto/ase2sprkkr.sprkkr.sprkkr_atoms.rst", "auto/ase2sprkkr.sprkkr.sprkkr_atoms.SPRKKRAtoms.rst", "auto/ase2sprkkr.sprkkr.sprkkr_grammar_types.rst", "auto/ase2sprkkr.sprkkr.sprkkr_grammar_types.AtomicType.rst", "auto/ase2sprkkr.sprkkr.sprkkr_grammar_types.Site.rst", "auto/ase2sprkkr.sprkkr.structure.rst", "auto/ase2sprkkr.sprkkr.structure.AtomData.rst", "auto/ase2sprkkr.sprkkr.structure.LayerData.rst", "auto/ase2sprkkr.sprkkr.structure.floatjm.rst", "auto/ase2sprkkr.sprkkr.structure.structure_file_to_atoms.rst", "auto/ase2sprkkr.sprkkr.sysfile.rst", "auto/ase2sprkkr.sprkkr.sysfile.sysfile_content.rst", "auto/ase2sprkkr.sprkkr.sysfile.write_sysfile.rst", "auto/ase2sprkkr.sprkkr.test.rst", "auto/ase2sprkkr.sprkkr.test.init_tests.rst", "auto/ase2sprkkr.sprkkr.test.init_tests.TestCase.rst", "auto/ase2sprkkr.sprkkr.test.test_build.rst", "auto/ase2sprkkr.sprkkr.test.test_build.BuildTest.rst", "auto/ase2sprkkr.sprkkr.test.test_calculator.rst", "auto/ase2sprkkr.sprkkr.test.test_calculator.CalculatorTest.rst", "auto/ase2sprkkr.sprkkr.test.test_sites.rst", "auto/ase2sprkkr.sprkkr.test.test_sites.SitesTest.rst", "auto/ase2sprkkr.sprkkr.test.test_sprkkr_atoms.rst", "auto/ase2sprkkr.sprkkr.test.test_sprkkr_atoms.SPRKKRAtomsTest.rst", "auto/ase2sprkkr.sprkkr.test.test_sysfile.rst", "auto/ase2sprkkr.sprkkr.test.test_sysfile.SysfileTest.rst", "auto/ase2sprkkr.tools.rst", "auto/ase2sprkkr.tools.a2s_visualise_in_struct.rst", "auto/ase2sprkkr.tools.a2s_visualise_in_struct.visualise.rst", "auto/ase2sprkkr.tools.test.rst", "auto/ase2sprkkr.tools.test.init_tests.rst", "auto/ase2sprkkr.tools.test.init_tests.TestCase.rst", "auto/ase2sprkkr.tools.test.test_tools.rst", "auto/ase2sprkkr.tools.test.test_tools.CommonTest.rst", "auto/ase2sprkkr.version.rst", "auto/modules.rst", "changelog.rst", "how-to-install.rst", "index.rst", "installation.rst", "introduction.rst", "philosophy.rst", "usage.rst"], "titles": ["ASE2SPRKKR", "ase2sprkkr", "ase", "build", "aperiodic_times", "stack", "pbc", "check_symmetry", "symbols", "pretty_symbols", "visualise", "view", "bindings", "es_finder", "EmptySpheresResult", "add_empty_spheres", "empty_spheres", "spglib", "SpacegroupInfo", "possibly_equivalent_sites", "common", "alternative_types", "allowed_types", "normalize_type", "normalize_type_map", "types_alternatives", "configuration", "Configuration", "configuration_containers", "BaseSection", "ConfigurationContainer", "CustomSection", "DictAdaptor", "RootConfigurationContainer", "Section", "configuration_definitions", "BaseDefinition", "ConfigurationRootDefinition", "ContainerDefinition", "MergeDictAdaptor", "SectionDefinition", "ValueDefinition", "add_excluded_names_condition", "unique_dict", "decorators", "add_called_class_as_argument", "add_to_signature", "cache", "cached_class_property", "cached_property", "class_property", "directory", "Directory", "doc", "process_input_parameters_definition", "verbatim", "formats", "fortran_format", "grammar", "White", "addConditionEx", "addParseActionEx", "delimitedList", "end_of_file", "generate_grammar", "line_end", "optional_line_end", "optional_quote", "replace_whitechars", "separator", "separator_pattern", "grammar_types", "Array", "BaseMixed", "BaseRealWithUnits", "BaseString", "Bool", "Complex", "Date", "DefKeyword", "Energy", "Flag", "GrammarType", "Integer", "Keyword", "LineString", "Mixed", "Number", "ObjectNumber", "PotMixed", "QString", "Range", "Real", "RealWithUnits", "Separator", "Sequence", "SetOf", "String", "Table", "TypedGrammarType", "Unsigned", "boolean", "compare_numpy_values", "complex_number", "date", "energy", "flag", "format_for_type", "integer", "line_string", "mixed", "pot_mixed", "qstring", "real", "recognized_set_types", "separator", "set_of_integers", "set_of_reals", "string", "type_from_default_value", "type_from_set_map", "type_from_type", "type_from_type_map", "type_from_value", "unsigned", "init_tests", "TestCase", "patch_package", "misc", "OrderedDict", "as_integer", "copy_list", "njit", "numpy_index", "no_output", "NoOutput", "options", "CustomOption", "DangerousValue", "Option", "process_output_reader", "AsyncioFileReader", "BaseProcessOutputReader", "test", "init_tests", "TestCase", "test_common", "CommonTest", "test_grammar_types", "GrammarTest", "unique_values", "UniqueValuesMapping", "input_parameters", "definitions", "arpes", "input_parameters", "dos", "input_parameters", "phagen", "input_parameters", "scf", "input_parameters", "sections", "CONTROL", "CPA", "ENERGY", "MODE", "SCF", "SITES", "STRCONST", "TASK", "TAU", "TauSection", "_nktab_value", "input_parameters", "InputParameters", "InputSection", "resolve_executable_postfix", "input_parameters_definitions", "InputParametersDefinition", "InputSectionDefinition", "InputValueDefinition", "test", "init_tests", "TestCase", "test_definitions", "TestDefinitions", "test_input_parameters", "TestInputParameters", "outputs", "output_definitions", "OutputNonameValueDefinition", "OutputSectionDefinition", "OutputValueDefinition", "OutputValueEqualDefinition", "readers", "default", "DefaultOutputReader", "DefaultResult", "scf", "RealOrStars", "ScfOutputReader", "ScfResult", "task_result", "OutputReader", "TaskResult", "test", "init_tests", "TestCase", "test_output", "TestOutput", "physics", "lattice_data", "LatticeData", "Pearson", "international_numbers_to_AP", "winger_seitz_radii", "winger_seitz_radii", "potentials", "custom_potential_section", "CustomPotentialSection", "CustomPotentialSectionDefinition", "CustomSectionToken", "SectionString", "definitions", "potential", "potential_definition", "sections", "_sections", "global_system_parameter", "GlobalSystemParameter", "GlobalSystemParameterDefinition", "section", "lattice", "LatticeSection", "LatticeSectionDefinition", "section", "mesh_information", "MeshInformationSection", "MeshInformationSectionDefinition", "section", "occupation", "OccupationSection", "OccupationSectionDefinition", "section", "reference_system", "ReferenceSystemSection", "ReferenceSystemSectionDefinition", "section", "sites", "SitesSection", "SitesSectionDefinition", "section", "types", "TypesSection", "TypesSectionDefinition", "section", "potential_definitions", "ASEArraySectionDefinition", "PotSectionDefinition", "PotValueDefinition", "PotentialDefinition", "Separator", "potential_sections", "ASEArraySection", "PotentialSection", "UniqueListSection", "potentials", "Potential", "test", "init_tests", "TestCase", "test_2D", "Test2DPotential", "test_custom_section", "TestCustomSection", "test_potential", "TestPotential", "test_structure", "TestStructure", "sprkkr", "atomic_types", "AtomicType", "atoms_region", "AtomsRegion", "build", "semiinfinite_system", "stack", "vacuum_like", "calculator", "FilenameTemplator", "SPRKKR", "configuration", "ConfigurationFile", "ConfigurationFileDefinition", "ConfigurationSection", "ConfigurationSectionDefinition", "ConfigurationSectionTrait", "ConfigurationValue", "ConfigurationValueDefinition", "CustomConfigurationSection", "CustomConfigurationValue", "io_data", "BaseIoData", "ReadIoData", "WriteIoData", "unique_mapping", "occupations", "Occupation", "radial_meshes", "ExponentialMesh", "Mesh", "reference_systems", "ReferenceSystem", "sites", "Site", "sprkkr_atoms", "SPRKKRAtoms", "sprkkr_grammar_types", "AtomicType", "Site", "structure", "AtomData", "LayerData", "floatjm", "structure_file_to_atoms", "sysfile", "sysfile_content", "write_sysfile", "test", "init_tests", "TestCase", "test_build", "BuildTest", "test_calculator", "CalculatorTest", "test_sites", "SitesTest", "test_sprkkr_atoms", "SPRKKRAtomsTest", "test_sysfile", "SysfileTest", "tools", "a2s_visualise_in_struct", "visualise", "test", "init_tests", "TestCase", "test_tools", "CommonTest", "version", "ase2sprkkr", "Changelog", "More about installing of the ASE2SPRKKR package", "ASE2SPRKKR software package", "Installation of the package using package managers", "Usefull links", "ASE2SPR-KKR\u2019s philosophy for the developers", "How to use ASE2SPRKKR"], "terms": {"provid": [0, 1, 16, 18, 41, 72, 77, 96, 151, 181, 191, 193, 194, 212, 221, 260, 262, 299, 308, 315, 354, 356, 358], "an": [0, 7, 15, 21, 27, 29, 30, 35, 36, 38, 41, 43, 61, 63, 66, 67, 69, 70, 73, 75, 76, 81, 82, 84, 85, 86, 88, 89, 90, 91, 94, 95, 97, 98, 99, 119, 126, 130, 137, 139, 145, 147, 149, 175, 179, 181, 184, 186, 188, 191, 193, 194, 208, 210, 220, 221, 223, 258, 260, 261, 262, 268, 271, 273, 275, 277, 279, 282, 284, 291, 293, 299, 308, 310, 314, 315, 316, 317, 331, 333, 335, 337, 339, 341, 347, 349, 352, 353, 354, 355, 356, 357, 358], "interfac": [0, 1, 141, 291, 354, 356], "allow": [0, 16, 22, 27, 29, 30, 33, 36, 63, 72, 74, 77, 78, 80, 83, 87, 88, 92, 93, 96, 100, 154, 156, 158, 160, 175, 178, 200, 257, 259, 268, 293, 299, 317, 319, 320, 352, 353, 354, 355, 356, 357, 358], "spr": [0, 1, 152, 153, 162, 174, 175, 177, 189, 195, 201, 218, 224, 267, 268, 280, 285, 289, 291, 292, 299, 309, 311, 317, 318, 342, 353, 354, 355, 356, 357, 358], "kkr": [0, 1, 152, 153, 162, 174, 175, 177, 189, 195, 201, 218, 224, 267, 268, 280, 285, 289, 291, 292, 299, 309, 311, 317, 318, 335, 342, 353, 354, 355, 356, 358], "electron": [0, 1, 154, 217, 282, 317, 354, 356], "structur": [0, 1, 11, 15, 16, 18, 36, 41, 178, 257, 280, 291, 317, 322, 323, 324, 325, 351, 352, 354, 356, 358], "calcul": [0, 1, 3, 139, 154, 156, 158, 160, 175, 197, 198, 201, 202, 204, 205, 280, 285, 290, 291, 317, 351, 352, 354, 356, 357], "within": [0, 354, 356], "atom": [0, 4, 5, 11, 15, 16, 18, 19, 139, 154, 156, 158, 160, 172, 205, 213, 220, 230, 234, 242, 246, 250, 258, 264, 265, 266, 268, 281, 282, 283, 284, 286, 287, 288, 291, 293, 297, 298, 299, 301, 304, 305, 307, 308, 310, 314, 315, 316, 317, 319, 320, 322, 325, 327, 328, 352, 354, 356, 357], "simul": [0, 354, 356], "environ": [0, 177, 291, 354, 356, 358], "abbrevi": [0, 354, 356], "ASE": [0, 1, 3, 5, 15, 18, 234, 242, 250, 258, 264, 268, 291, 297, 315, 317, 325, 352, 354, 356, 357, 358], "python": [0, 18, 23, 59, 72, 73, 74, 75, 76, 77, 81, 82, 84, 85, 86, 89, 90, 91, 94, 95, 96, 97, 98, 99, 120, 121, 122, 123, 223, 352, 353, 354, 355, 356, 357, 358], "tool": [0, 343, 344, 345, 346, 347, 348, 349, 351, 354, 356], "integr": [0, 154, 156, 158, 160, 352, 354, 356], "variou": [0, 44, 58, 71, 128, 175, 212, 291, 354, 356, 357, 358], "onlin": [0, 353, 354, 355, 356], "version": [0, 179, 291, 316, 351, 353, 354, 355, 356, 357, 358], "thi": [0, 1, 3, 5, 12, 21, 26, 27, 28, 30, 32, 36, 37, 38, 39, 40, 41, 45, 59, 72, 73, 74, 75, 76, 77, 78, 81, 82, 83, 84, 85, 86, 87, 89, 90, 91, 92, 94, 95, 96, 97, 98, 99, 100, 102, 122, 138, 139, 142, 151, 154, 156, 158, 160, 172, 175, 178, 179, 180, 181, 189, 190, 191, 192, 193, 194, 201, 202, 203, 204, 211, 212, 214, 216, 220, 221, 223, 227, 230, 231, 234, 235, 239, 242, 243, 247, 250, 251, 255, 257, 259, 260, 261, 262, 263, 265, 268, 283, 284, 285, 289, 291, 292, 293, 294, 296, 297, 299, 315, 316, 317, 318, 321, 343, 353, 354, 355, 356, 357, 358], "github": [0, 18, 353, 354, 355, 356, 358], "repositori": [0, 354, 356, 358], "manual": [0, 268, 354, 356, 357, 358], "The": [0, 4, 5, 16, 18, 27, 30, 34, 36, 37, 38, 40, 41, 45, 46, 48, 50, 57, 72, 73, 74, 75, 76, 77, 78, 80, 81, 82, 84, 85, 86, 88, 89, 90, 91, 94, 95, 96, 97, 98, 99, 102, 114, 121, 122, 134, 135, 136, 137, 139, 142, 151, 153, 154, 156, 158, 160, 165, 167, 168, 169, 171, 172, 174, 175, 179, 180, 181, 191, 192, 193, 194, 202, 204, 220, 221, 222, 223, 224, 238, 243, 246, 254, 258, 259, 260, 261, 262, 264, 265, 266, 268, 284, 286, 287, 290, 291, 293, 294, 296, 297, 298, 299, 301, 308, 314, 315, 317, 352, 353, 354, 355, 358], "simplest": [0, 353, 355], "wai": [0, 4, 36, 41, 72, 76, 77, 78, 82, 89, 94, 95, 98, 121, 154, 156, 158, 160, 175, 181, 191, 193, 194, 221, 260, 262, 291, 299, 353, 355, 357], "i": [0, 4, 5, 11, 16, 18, 19, 22, 23, 27, 29, 30, 33, 34, 36, 37, 38, 40, 41, 42, 43, 45, 46, 48, 50, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 94, 95, 96, 97, 98, 99, 100, 102, 107, 119, 121, 126, 130, 131, 132, 133, 134, 135, 138, 139, 141, 142, 145, 151, 154, 156, 158, 160, 172, 175, 177, 179, 180, 181, 184, 190, 191, 192, 193, 194, 202, 204, 208, 217, 219, 220, 221, 222, 223, 224, 225, 231, 234, 235, 239, 242, 243, 247, 250, 251, 255, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 271, 282, 284, 286, 291, 293, 294, 296, 297, 299, 304, 308, 315, 317, 319, 320, 321, 331, 343, 347, 352, 353, 355, 357, 358], "them": [0, 1, 27, 28, 30, 139, 175, 228, 308, 317, 353, 355], "either": [0, 28, 30, 36, 38, 40, 82, 88, 90, 91, 139, 151, 175, 234, 242, 250, 265, 282, 291, 308, 315, 353, 355, 357, 358], "c": [0, 18, 30, 43, 134, 135, 154, 160, 217, 290, 291, 353, 355, 358], "In": [0, 28, 33, 41, 59, 139, 141, 181, 191, 193, 194, 217, 220, 221, 224, 260, 262, 263, 291, 292, 299, 318, 353, 355, 357, 358], "some": [0, 16, 27, 29, 30, 37, 41, 72, 76, 77, 78, 82, 89, 94, 95, 98, 126, 139, 145, 184, 191, 208, 234, 242, 250, 265, 271, 284, 291, 293, 298, 305, 317, 331, 347, 353, 355, 357, 358], "system": [0, 154, 156, 158, 160, 231, 247, 266, 284, 285, 286, 315, 353, 355, 358], "util": [0, 45, 139, 321, 353, 355, 357], "python3": [0, 353, 355], "call": [0, 27, 45, 47, 82, 86, 89, 98, 130, 139, 175, 230, 234, 242, 250, 265, 268, 291, 293, 317, 353, 355, 357, 358], "pip3": [0, 353, 355], "If": [0, 4, 5, 11, 16, 18, 27, 29, 30, 36, 37, 38, 40, 41, 45, 46, 72, 74, 77, 82, 84, 96, 107, 121, 126, 133, 139, 145, 151, 172, 175, 177, 180, 181, 184, 191, 192, 193, 194, 202, 208, 221, 234, 242, 250, 260, 261, 262, 264, 265, 268, 271, 282, 284, 286, 291, 294, 296, 297, 299, 308, 315, 317, 331, 347, 353, 355, 357, 358], "you": [0, 41, 46, 73, 74, 91, 181, 268, 353, 355, 358], "can": [0, 5, 13, 18, 27, 29, 30, 33, 36, 37, 38, 40, 41, 45, 48, 50, 71, 72, 73, 74, 77, 79, 80, 81, 82, 84, 86, 87, 88, 89, 95, 96, 98, 102, 119, 121, 122, 137, 138, 139, 142, 151, 172, 175, 180, 181, 191, 192, 193, 194, 202, 204, 219, 221, 234, 242, 243, 250, 259, 260, 261, 262, 264, 265, 268, 282, 284, 285, 291, 293, 294, 296, 298, 299, 307, 308, 315, 317, 321, 352, 353, 355, 357, 358], "linux": [0, 353, 355], "distribut": [0, 353, 355], "e": [0, 18, 19, 21, 22, 23, 27, 29, 30, 33, 34, 35, 36, 38, 41, 46, 57, 72, 77, 81, 82, 84, 86, 95, 96, 98, 114, 121, 138, 139, 153, 154, 156, 158, 160, 175, 181, 191, 193, 194, 202, 204, 217, 219, 221, 222, 223, 230, 231, 234, 235, 239, 242, 243, 247, 250, 251, 255, 259, 260, 262, 264, 265, 266, 268, 282, 284, 285, 290, 291, 293, 297, 299, 308, 315, 317, 353, 355, 357, 358], "g": [0, 18, 21, 27, 33, 35, 36, 38, 41, 72, 77, 81, 82, 84, 86, 95, 96, 98, 114, 121, 138, 139, 153, 158, 160, 175, 181, 191, 193, 194, 202, 204, 221, 230, 234, 242, 250, 260, 262, 264, 265, 266, 268, 282, 284, 285, 290, 291, 293, 297, 299, 308, 317, 353, 355, 357, 358], "debian": [0, 353, 355], "ubuntu": [0, 353, 355], "apt": [0, 353, 355], "zypper": [0, 353, 355], "opensus": [0, 353, 355], "For": [0, 18, 139, 154, 156, 158, 160, 179, 231, 235, 239, 243, 247, 251, 255, 258, 259, 289, 291, 303, 317, 353, 355, 358], "instruct": [0, 353, 355], "see": [0, 4, 5, 18, 36, 37, 41, 50, 82, 95, 120, 121, 151, 154, 156, 158, 160, 175, 179, 181, 191, 193, 194, 221, 231, 235, 239, 243, 247, 251, 255, 258, 259, 260, 262, 264, 284, 290, 291, 299, 308, 317, 343, 353, 355, 357, 358], "anaconda": [0, 353, 355], "http": [0, 18, 74, 289, 291, 353, 355, 357, 358], "doc": [0, 27, 54, 55, 313, 343, 351, 353, 355, 357], "com": [0, 74, 353, 355, 358], "howev": [0, 4, 36, 37, 41, 43, 72, 73, 74, 76, 77, 78, 81, 82, 83, 84, 85, 86, 89, 90, 92, 95, 96, 97, 98, 100, 102, 139, 142, 151, 181, 191, 193, 194, 204, 221, 223, 260, 262, 299, 304, 315, 317, 353, 355, 357, 358], "user": [0, 29, 30, 31, 36, 37, 38, 40, 41, 72, 73, 77, 82, 84, 88, 93, 95, 98, 99, 137, 172, 180, 181, 191, 192, 193, 194, 221, 260, 261, 262, 294, 296, 299, 353, 354, 355, 358], "unexperienc": [0, 353, 355], "simpler": [0, 353, 355], "recommend": [0, 353, 355], "do": [0, 27, 30, 33, 36, 37, 38, 41, 46, 59, 72, 74, 76, 77, 78, 82, 89, 94, 95, 98, 138, 151, 153, 154, 157, 158, 160, 175, 268, 291, 293, 297, 351, 352, 353, 355, 358], "want": [0, 46, 62, 142, 204, 353, 355, 358], "public": [0, 353, 355], "develop": [0, 202, 291, 353, 354, 355], "3": [0, 59, 74, 96, 151, 154, 156, 158, 160, 214, 215, 217, 291, 352, 353, 355, 358], "7": [0, 16, 126, 145, 158, 160, 184, 208, 214, 215, 217, 271, 289, 331, 347, 353, 354, 355], "check": [0, 5, 7, 27, 29, 30, 60, 73, 75, 76, 81, 82, 84, 85, 86, 89, 90, 91, 94, 95, 97, 98, 99, 139, 175, 223, 293, 308, 352, 353, 355, 358], "ase": [0, 3, 4, 5, 6, 7, 8, 9, 10, 11, 284, 287, 289, 291, 316, 317, 351, 353, 355, 358], "mendeleev": [0, 282, 353, 355], "spglib": [0, 18, 19, 317, 351, 353, 355], "pypars": [0, 36, 58, 59, 60, 61, 64, 82, 219, 222, 353, 355, 357], "clone": [0, 353, 355, 358], "checkout": [0, 353, 355], "releas": [0, 353, 355], "first": [0, 4, 5, 27, 30, 33, 36, 37, 38, 40, 41, 45, 46, 79, 133, 154, 156, 160, 172, 180, 181, 191, 192, 193, 194, 221, 260, 261, 262, 268, 286, 291, 293, 294, 296, 299, 308, 310, 353, 355, 357, 358], "line": [0, 36, 38, 41, 82, 84, 85, 109, 262, 291, 322, 353, 355, 357, 358], "fetch": [0, 353, 355], "second": [0, 158, 160, 286, 353, 355, 357], "one": [0, 4, 5, 18, 19, 36, 38, 41, 62, 72, 79, 80, 82, 84, 91, 109, 136, 139, 151, 154, 156, 158, 160, 175, 180, 181, 191, 192, 193, 194, 221, 230, 234, 242, 250, 259, 260, 262, 265, 286, 287, 291, 297, 299, 305, 307, 308, 317, 321, 353, 355, 357, 358], "out": [0, 142, 175, 204, 291, 335, 352, 353, 355, 358], "product": [0, 353, 355], "current": [0, 36, 41, 142, 175, 181, 191, 193, 194, 204, 221, 260, 262, 291, 299, 315, 317, 353, 355, 357, 358], "earlier": [0, 353, 355, 358], "download": [0, 353, 355], "run": [0, 11, 142, 175, 179, 204, 205, 291, 343, 352, 353, 354, 355], "altern": [0, 24, 25, 30, 36, 37, 38, 40, 41, 172, 180, 181, 191, 192, 193, 194, 221, 260, 261, 262, 291, 294, 296, 299, 353, 355], "master": [0, 284, 353, 355], "branch": [0, 353, 355], "newer": [0, 353, 355], "thorougli": [0, 353, 355], "test": [0, 125, 126, 127, 144, 145, 146, 147, 148, 149, 183, 184, 185, 186, 187, 188, 207, 208, 209, 210, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 291, 327, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 346, 347, 348, 349, 351, 352, 353, 355, 358], "yet": [0, 176, 353, 355, 358], "bleed": [0, 353, 355], "edg": [0, 353, 355], "feel": [0, 353, 355, 358], "free": [0, 217, 353, 355, 358], "try": [0, 30, 291, 353, 355], "just": [0, 5, 18, 26, 27, 36, 37, 38, 40, 41, 46, 72, 77, 82, 90, 96, 97, 107, 131, 151, 154, 156, 158, 160, 181, 191, 193, 194, 220, 221, 222, 260, 262, 264, 291, 299, 317, 326, 350, 353, 355, 357, 358], "add": [0, 4, 30, 36, 38, 42, 45, 46, 54, 60, 61, 72, 76, 77, 78, 82, 89, 94, 95, 98, 284, 291, 308, 317, 352, 353, 355, 358], "src": [0, 131, 335, 353, 355], "directori": [0, 142, 175, 197, 198, 201, 202, 204, 205, 291, 335, 351, 352, 353, 355], "your": [0, 46, 74, 353, 355, 358], "pythonpath": [0, 353, 355], "build": [0, 4, 5, 74, 286, 287, 288, 351, 352, 353, 355, 358], "describ": [0, 18, 19, 36, 38, 82, 88, 175, 179, 180, 181, 192, 214, 259, 261, 268, 280, 283, 284, 317, 353, 355, 357, 358], "below": [0, 353, 355], "To": [0, 27, 36, 45, 73, 86, 89, 139, 317, 353, 355, 357, 358], "m": [0, 74, 78, 214, 353, 355], "mayb": [0, 353, 355], "have": [0, 5, 18, 29, 36, 41, 46, 57, 72, 74, 77, 82, 86, 87, 89, 95, 96, 98, 126, 139, 145, 147, 149, 153, 178, 181, 184, 186, 188, 191, 192, 193, 194, 208, 210, 221, 257, 260, 262, 271, 273, 275, 277, 279, 284, 286, 291, 296, 299, 317, 331, 333, 335, 337, 339, 341, 347, 349, 352, 353, 355, 358], "replac": [0, 14, 45, 151, 284, 286, 290, 291, 308, 317, 353, 355, 358], "edit": [0, 353, 355], "pleas": [0, 179, 317, 326, 353, 355, 358], "setup": [0, 126, 145, 184, 208, 271, 331, 347, 353, 355], "py": [0, 353, 355, 358], "ignor": [0, 37, 175, 291, 353, 355], "deprec": [0, 353, 355], "warn": [0, 175, 353, 355], "aim": [0, 353, 355, 358], "type": [0, 18, 19, 22, 23, 24, 25, 27, 29, 30, 31, 33, 36, 38, 41, 43, 57, 63, 65, 66, 67, 69, 71, 72, 73, 75, 76, 77, 78, 80, 81, 82, 83, 84, 85, 86, 88, 89, 90, 91, 92, 94, 95, 96, 97, 98, 99, 100, 101, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 137, 138, 139, 142, 151, 154, 156, 158, 160, 163, 170, 172, 175, 179, 180, 181, 191, 192, 193, 194, 200, 202, 204, 220, 221, 223, 234, 242, 243, 250, 254, 255, 256, 259, 260, 261, 262, 265, 266, 268, 282, 291, 293, 297, 298, 299, 301, 305, 307, 308, 315, 317, 319, 320, 325, 353, 354, 355, 357], "onli": [0, 4, 5, 16, 27, 30, 32, 38, 39, 41, 48, 74, 81, 82, 86, 120, 138, 139, 154, 175, 190, 192, 284, 286, 291, 315, 317, 321, 352, 353, 355, 357, 358], "ad": [0, 4, 15, 16, 30, 46, 82, 137, 259, 291, 352, 353, 355, 357], "local": [0, 353, 355], "site": [0, 11, 15, 16, 139, 154, 156, 158, 160, 250, 251, 252, 268, 281, 282, 284, 286, 297, 305, 307, 308, 310, 317, 318, 351, 352, 353, 355, 358], "which": [0, 5, 14, 18, 30, 34, 35, 38, 41, 74, 81, 82, 86, 95, 138, 175, 202, 204, 268, 284, 285, 286, 291, 297, 308, 315, 321, 353, 355, 357, 358], "changesy": [0, 353, 355], "make": [0, 9, 14, 73, 91, 127, 139, 140, 151, 308, 317, 352, 353, 355, 358], "publish": [0, 353, 355], "io": [0, 18, 353, 355, 357], "ar": [0, 4, 5, 16, 18, 22, 27, 28, 29, 30, 33, 34, 35, 36, 37, 38, 40, 41, 63, 80, 82, 86, 89, 98, 114, 119, 120, 126, 139, 145, 151, 154, 172, 174, 175, 179, 180, 181, 184, 190, 191, 192, 193, 194, 202, 204, 208, 217, 219, 220, 221, 224, 259, 260, 261, 262, 263, 264, 268, 271, 284, 286, 290, 291, 292, 293, 294, 296, 299, 302, 304, 305, 308, 311, 317, 318, 331, 347, 352, 353, 355, 357, 358], "open": [0, 29, 41, 175, 291, 353, 355], "index": [0, 36, 129, 133, 139, 151, 289, 315, 353, 354, 355], "html": [0, 18, 291, 353, 355], "offlin": [0, 353, 355], "contain": [0, 3, 12, 18, 21, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 41, 57, 71, 74, 82, 137, 139, 153, 154, 156, 158, 160, 174, 175, 176, 178, 179, 181, 189, 190, 191, 193, 194, 202, 203, 211, 212, 216, 220, 221, 224, 227, 230, 231, 234, 235, 238, 239, 242, 243, 246, 247, 250, 251, 254, 255, 257, 258, 259, 260, 261, 262, 264, 265, 266, 268, 284, 285, 289, 291, 293, 295, 297, 298, 299, 300, 301, 305, 316, 317, 321, 325, 326, 353, 355, 357, 358], "part": [0, 4, 29, 35, 36, 139, 142, 154, 156, 158, 160, 190, 192, 219, 284, 286, 353, 355, 357], "gener": [0, 3, 36, 37, 45, 54, 82, 139, 211, 230, 234, 242, 250, 263, 265, 291, 317, 352, 353, 354, 355, 357], "docstr": [0, 53, 54, 352, 353, 355], "regener": [0, 353, 355], "sphinx": [0, 353, 355], "toolbox": [0, 353, 355], "pandoc": [0, 353, 355], "readm": [0, 353, 355], "md": [0, 353, 355], "need": [0, 18, 41, 45, 138, 181, 291, 305, 317, 353, 355, 357, 358], "offici": [0, 353, 355], "miss": [0, 27, 36, 37, 38, 40, 41, 172, 180, 181, 191, 192, 193, 194, 221, 260, 261, 262, 293, 294, 296, 299, 353, 355], "attribut": [0, 21, 36, 41, 44, 58, 71, 82, 98, 151, 153, 154, 156, 158, 160, 162, 191, 212, 216, 225, 291, 317, 352, 353, 355, 358], "when": [0, 16, 36, 37, 40, 41, 98, 126, 138, 139, 145, 147, 149, 184, 186, 188, 191, 208, 210, 234, 242, 250, 265, 271, 273, 275, 277, 279, 291, 308, 317, 331, 333, 335, 337, 339, 341, 347, 349, 353, 355, 357, 358], "so": [0, 5, 36, 37, 38, 40, 72, 73, 74, 76, 77, 78, 82, 89, 91, 94, 95, 98, 114, 131, 138, 139, 172, 175, 178, 180, 192, 211, 243, 257, 259, 261, 265, 290, 291, 294, 296, 305, 308, 317, 352, 353, 355, 357, 358], "till": [0, 353, 355], "pullrequest": [0, 353, 355, 358], "correct": [0, 36, 327, 353, 355, 358], "behavior": [0, 36, 40, 41, 191, 353, 355], "merg": [0, 5, 30, 39, 151, 352, 353, 355], "follow": [0, 46, 289, 291, 353, 355, 357, 358], "fork": [0, 353, 355], "lokik": [0, 353, 355], "pull": [0, 353, 355], "request": [0, 18, 291, 353, 355, 358], "post": [0, 353, 355, 358], "issu": [0, 353, 355, 358], "full": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 35, 42, 43, 44, 45, 46, 47, 49, 51, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 79, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 127, 128, 130, 131, 132, 133, 134, 136, 140, 143, 144, 146, 148, 150, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 173, 174, 177, 178, 182, 183, 185, 187, 189, 190, 195, 196, 199, 203, 206, 207, 209, 211, 212, 215, 216, 217, 218, 219, 224, 225, 226, 227, 228, 229, 233, 237, 241, 245, 249, 253, 257, 263, 267, 269, 270, 272, 274, 276, 278, 280, 281, 283, 285, 286, 287, 288, 289, 292, 293, 297, 302, 306, 307, 309, 312, 314, 316, 318, 321, 324, 325, 326, 327, 328, 329, 330, 332, 334, 336, 338, 340, 342, 343, 344, 345, 346, 348, 350], "name": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 33, 35, 36, 37, 38, 40, 41, 42, 43, 44, 45, 46, 47, 49, 51, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 74, 76, 78, 79, 81, 82, 83, 85, 86, 90, 92, 94, 95, 96, 97, 98, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 130, 131, 132, 133, 134, 136, 139, 140, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 199, 200, 202, 203, 206, 207, 208, 209, 210, 211, 212, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 231, 233, 235, 237, 238, 239, 241, 243, 245, 246, 247, 249, 251, 253, 254, 255, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 294, 296, 299, 302, 306, 307, 308, 309, 312, 314, 316, 317, 318, 321, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 352, 357, 358], "descript": [1, 2, 3, 6, 8, 10, 12, 13, 17, 18, 20, 21, 26, 28, 35, 36, 37, 38, 40, 41, 44, 51, 53, 56, 58, 71, 73, 74, 75, 76, 78, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 94, 97, 99, 100, 125, 128, 134, 136, 140, 143, 144, 146, 148, 150, 152, 153, 154, 156, 158, 160, 162, 172, 174, 178, 180, 181, 182, 183, 185, 187, 189, 190, 192, 195, 196, 199, 200, 203, 206, 207, 209, 211, 212, 216, 218, 219, 221, 223, 224, 225, 227, 229, 233, 237, 241, 245, 249, 253, 257, 261, 263, 267, 269, 270, 272, 274, 276, 278, 280, 281, 283, 285, 289, 292, 294, 296, 299, 302, 307, 309, 312, 314, 316, 318, 319, 320, 321, 326, 329, 330, 332, 334, 336, 338, 340, 342, 343, 345, 346, 348, 350], "root": [1, 27, 37, 293, 294], "packag": [1, 12, 13, 20, 127, 128, 189, 224, 227, 317, 350, 356, 358], "import": [1, 74, 127, 139, 228, 315, 358], "few": [1, 40, 58, 97, 291, 357], "most": [1, 126, 130, 145, 184, 208, 221, 271, 315, 331, 347, 358], "us": [1, 4, 11, 16, 18, 20, 27, 36, 37, 38, 40, 41, 45, 57, 58, 72, 73, 74, 75, 76, 77, 81, 82, 84, 85, 86, 88, 89, 90, 91, 94, 95, 96, 97, 98, 99, 116, 117, 125, 126, 128, 138, 139, 144, 145, 147, 149, 151, 154, 156, 158, 160, 162, 172, 175, 180, 181, 183, 184, 186, 188, 190, 191, 192, 193, 194, 202, 203, 204, 207, 208, 210, 214, 221, 223, 224, 227, 230, 234, 242, 250, 260, 261, 262, 265, 266, 268, 270, 271, 273, 275, 277, 279, 280, 282, 284, 285, 286, 289, 290, 291, 293, 294, 295, 296, 299, 300, 302, 303, 305, 308, 309, 315, 316, 317, 321, 326, 330, 331, 333, 335, 337, 339, 341, 346, 347, 349, 354, 356, 357], "object": [1, 5, 14, 18, 19, 27, 29, 30, 34, 35, 36, 37, 38, 40, 41, 46, 59, 73, 74, 75, 76, 81, 82, 84, 85, 86, 87, 88, 89, 90, 91, 94, 95, 97, 98, 99, 119, 126, 130, 131, 137, 139, 145, 150, 151, 155, 157, 159, 161, 164, 165, 166, 167, 168, 169, 171, 172, 174, 175, 180, 184, 191, 192, 201, 202, 208, 212, 214, 220, 222, 223, 226, 230, 234, 242, 250, 261, 264, 265, 266, 267, 268, 271, 283, 284, 286, 287, 291, 294, 296, 297, 298, 299, 301, 302, 303, 304, 308, 315, 317, 322, 325, 327, 331, 347, 357], "shortcut": [1, 291], "modul": [1, 2, 3, 12, 13, 17, 20, 21, 26, 28, 35, 44, 51, 54, 58, 71, 74, 125, 128, 134, 136, 140, 143, 144, 146, 148, 150, 152, 153, 154, 156, 158, 160, 162, 174, 178, 182, 183, 185, 187, 189, 190, 195, 196, 199, 203, 206, 207, 209, 211, 212, 216, 218, 219, 224, 225, 227, 228, 229, 233, 237, 241, 245, 249, 253, 257, 263, 267, 269, 270, 272, 274, 276, 278, 280, 281, 283, 285, 292, 302, 307, 309, 312, 314, 316, 318, 321, 326, 329, 330, 332, 334, 336, 338, 340, 342, 345, 346, 348, 351, 354, 357], "ase2sprkkr": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 352, 355, 356, 357], "routin": [3, 8, 12, 27, 56, 58, 73, 75, 76, 81, 82, 84, 85, 86, 89, 90, 91, 94, 95, 97, 98, 99, 125, 128, 142, 144, 183, 207, 218, 223, 270, 285, 293, 297, 317, 330, 346, 352, 357], "materi": [3, 217, 354], "unlik": [3, 151, 297, 317], "sprkkr": [3, 15, 20, 29, 139, 153, 154, 156, 158, 160, 162, 172, 174, 175, 176, 178, 179, 180, 181, 214, 218, 219, 220, 221, 224, 229, 230, 231, 233, 234, 235, 237, 238, 239, 241, 242, 243, 245, 246, 247, 249, 250, 251, 253, 254, 255, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 351, 354, 358], "possibl": [3, 29, 30, 41, 81, 82, 84, 86, 87, 100, 139, 140, 151, 154, 156, 158, 160, 175, 194, 214, 317, 352, 357, 358], "usabl": [3, 317], "plain": 3, "ani": [3, 29, 30, 36, 42, 43, 73, 74, 75, 76, 78, 80, 81, 82, 83, 85, 86, 87, 88, 89, 90, 91, 92, 94, 97, 98, 99, 100, 116, 117, 151, 154, 156, 158, 160, 200, 219, 223, 291, 297, 319, 320, 352, 357, 358], "function": [3, 5, 6, 8, 10, 13, 16, 17, 21, 31, 35, 36, 38, 41, 44, 45, 46, 53, 56, 58, 71, 73, 75, 76, 81, 82, 84, 85, 86, 89, 90, 91, 94, 95, 97, 98, 99, 125, 128, 133, 134, 135, 137, 139, 142, 162, 174, 178, 202, 204, 223, 227, 230, 234, 242, 243, 250, 257, 259, 265, 268, 285, 287, 290, 291, 302, 304, 306, 321, 326, 343, 358], "time": [4, 268, 286, 291, 297, 358], "axi": [4, 5, 11, 286, 287], "none": [4, 5, 11, 16, 18, 19, 27, 29, 30, 31, 33, 34, 36, 37, 38, 40, 41, 46, 48, 50, 61, 72, 73, 74, 75, 76, 77, 78, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 94, 95, 96, 97, 98, 99, 100, 107, 137, 138, 139, 142, 151, 172, 175, 176, 179, 180, 181, 191, 192, 193, 194, 200, 202, 214, 220, 221, 223, 230, 234, 238, 242, 246, 250, 254, 260, 261, 262, 264, 265, 266, 268, 282, 284, 286, 291, 293, 294, 295, 296, 297, 298, 299, 300, 301, 304, 308, 315, 317, 319, 320, 358], "direct": [4, 36, 37, 38, 40, 160, 172, 180, 192, 261, 264, 294, 296], "1": [4, 5, 14, 16, 18, 38, 43, 57, 80, 96, 98, 135, 151, 154, 156, 158, 160, 214, 215, 217, 308, 310, 315, 354, 357, 358], "sourc": [4, 5, 7, 9, 11, 15, 16, 18, 19, 23, 27, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 52, 54, 55, 57, 59, 60, 61, 62, 64, 68, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 102, 107, 119, 121, 123, 126, 127, 129, 130, 131, 132, 133, 135, 137, 138, 139, 141, 142, 145, 147, 149, 151, 163, 170, 172, 175, 176, 177, 179, 180, 181, 184, 186, 188, 191, 192, 193, 194, 197, 198, 200, 201, 202, 204, 205, 208, 210, 213, 214, 220, 221, 222, 223, 228, 230, 231, 234, 235, 238, 239, 242, 243, 246, 247, 250, 251, 254, 255, 258, 259, 260, 261, 262, 264, 265, 266, 268, 271, 273, 275, 277, 279, 282, 284, 286, 287, 288, 290, 291, 293, 294, 295, 296, 297, 298, 299, 300, 301, 303, 304, 305, 306, 308, 310, 311, 313, 315, 317, 319, 320, 322, 323, 324, 325, 327, 328, 331, 333, 335, 337, 339, 341, 344, 347, 349, 354, 358], "multipli": [4, 308, 310], "repeat": [4, 11, 36, 41, 286, 304, 358], "same": [4, 5, 11, 18, 19, 27, 38, 41, 46, 96, 126, 139, 141, 145, 151, 175, 184, 190, 208, 271, 284, 286, 290, 291, 293, 297, 308, 315, 317, 331, 347, 357, 358], "__mult__": 4, "oper": 4, "accept": [4, 41, 74, 91, 98, 114, 139, 181, 191, 193, 194, 221, 260, 262, 287, 297, 299, 352, 358], "float": [4, 11, 16, 18, 22, 24, 25, 57, 74, 80, 92, 93, 98, 105, 120, 122, 130, 202, 308, 310, 317, 325], "too": [4, 138, 175, 286, 291], "last": [4, 5, 130, 202, 291], "cell": [4, 5, 13, 16, 17, 18, 234, 284, 291, 317, 358], "paramet": [4, 5, 11, 16, 18, 19, 27, 29, 30, 31, 33, 36, 37, 38, 40, 41, 46, 54, 57, 63, 65, 66, 67, 69, 72, 73, 74, 75, 76, 77, 78, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 107, 121, 135, 138, 139, 142, 151, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 170, 172, 174, 175, 176, 177, 179, 180, 181, 190, 191, 192, 193, 194, 200, 202, 204, 214, 221, 223, 230, 231, 234, 235, 239, 242, 243, 247, 250, 251, 255, 258, 259, 260, 261, 262, 264, 265, 266, 268, 282, 284, 286, 287, 291, 293, 294, 296, 297, 298, 299, 301, 308, 310, 315, 317, 319, 320, 325, 328, 352, 354, 357], "union": [4, 11, 27, 30, 38, 41, 73, 74, 75, 76, 78, 80, 81, 82, 83, 85, 86, 87, 88, 89, 90, 91, 92, 94, 97, 99, 100, 121, 135, 139, 151, 177, 181, 191, 193, 194, 200, 221, 223, 260, 262, 284, 286, 291, 299, 317, 319, 320], "int": [4, 5, 11, 16, 21, 22, 23, 24, 25, 38, 74, 78, 80, 83, 87, 88, 92, 100, 120, 121, 122, 135, 142, 151, 200, 204, 282, 286, 287, 291, 308, 310, 317, 319, 320, 325], "list": [4, 5, 18, 19, 38, 41, 46, 62, 72, 77, 82, 96, 114, 131, 151, 175, 178, 181, 191, 193, 194, 202, 221, 238, 246, 254, 257, 260, 262, 266, 284, 287, 291, 299, 305, 317], "three": 4, "integ": [4, 71, 86, 88, 89, 100, 116, 121, 122, 123, 124, 130, 139, 151, 154, 156, 158, 160, 286, 291, 308, 315, 351, 358], "sai": [4, 36], "how": [4, 30, 36, 37, 38, 41, 72, 74, 76, 77, 78, 82, 89, 94, 95, 98, 121, 181, 191, 193, 194, 221, 259, 260, 262, 286, 291, 299, 308, 354, 357], "mani": [4, 18, 286, 357, 358], "should": [4, 5, 29, 30, 37, 46, 72, 73, 75, 76, 77, 78, 81, 82, 84, 85, 86, 88, 89, 90, 91, 94, 95, 97, 98, 99, 107, 138, 139, 153, 175, 202, 204, 211, 223, 230, 234, 242, 243, 250, 259, 265, 266, 286, 291, 296, 298, 299, 315, 317, 358], "along": [4, 5, 11, 286, 287], "given": [4, 5, 11, 16, 18, 19, 22, 23, 27, 30, 31, 33, 36, 38, 41, 42, 57, 60, 61, 71, 72, 73, 74, 75, 76, 77, 81, 82, 84, 85, 86, 88, 89, 90, 91, 94, 95, 96, 97, 98, 99, 107, 121, 122, 126, 134, 135, 137, 139, 145, 151, 160, 175, 177, 181, 184, 191, 193, 194, 202, 208, 214, 221, 223, 243, 259, 260, 262, 264, 265, 268, 271, 282, 284, 286, 287, 291, 293, 297, 299, 304, 306, 308, 311, 315, 317, 325, 327, 331, 347, 357, 358], "all": [4, 5, 11, 22, 27, 30, 36, 38, 41, 81, 82, 85, 86, 139, 142, 191, 202, 214, 222, 228, 268, 287, 290, 291, 308, 317, 358], "ax": [4, 5, 11, 202, 284], "unless": [4, 119], "argument": [4, 5, 30, 36, 38, 41, 43, 45, 46, 48, 50, 73, 75, 76, 81, 82, 84, 85, 86, 89, 90, 91, 94, 95, 97, 98, 99, 139, 175, 181, 191, 193, 194, 202, 221, 223, 260, 262, 284, 286, 291, 297, 299, 308, 317, 352, 358], "decim": [4, 126, 145, 184, 208, 271, 286, 331, 347], "mean": [4, 5, 27, 30, 41, 72, 73, 75, 76, 77, 81, 82, 84, 85, 86, 89, 90, 91, 94, 95, 96, 97, 98, 99, 139, 175, 179, 181, 191, 193, 194, 200, 221, 223, 260, 262, 291, 293, 297, 299, 358], "won": [4, 317], "t": [4, 30, 76, 154, 156, 158, 160, 181, 222, 223, 260, 284, 290, 291, 315, 317, 358], "whole": [4, 27, 37, 38, 45, 357], "its": [4, 29, 30, 31, 33, 34, 35, 36, 37, 38, 40, 41, 42, 46, 82, 98, 137, 139, 142, 154, 156, 158, 160, 172, 175, 176, 180, 191, 192, 214, 217, 220, 230, 234, 238, 242, 246, 250, 254, 258, 261, 264, 265, 266, 268, 284, 286, 291, 293, 294, 295, 296, 298, 300, 301, 305, 308, 357, 358], "option": [4, 5, 11, 16, 18, 19, 26, 27, 30, 35, 36, 37, 38, 40, 41, 57, 67, 73, 74, 75, 76, 78, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 94, 95, 97, 98, 99, 100, 121, 137, 138, 142, 151, 153, 154, 156, 158, 160, 172, 173, 175, 178, 180, 181, 191, 192, 193, 194, 200, 219, 220, 221, 223, 257, 259, 260, 261, 262, 268, 284, 286, 289, 291, 292, 294, 296, 297, 298, 299, 301, 308, 317, 319, 320, 351, 352, 357, 358], "each": [4, 36, 38, 41, 71, 131, 153, 202, 317, 357, 358], "neg": 4, "partial": [4, 315], "begin": [4, 36, 38, 41, 291], "stack": [4, 351], "otherwis": [4, 29, 30, 33, 121, 175, 202, 268, 291, 296, 358], "atoms": [5, 287], "rel": [5, 11, 127, 175, 204, 291], "fals": [5, 11, 18, 19, 27, 29, 30, 33, 36, 37, 38, 40, 41, 46, 72, 73, 75, 76, 77, 81, 82, 84, 85, 86, 89, 90, 91, 94, 95, 96, 97, 98, 99, 119, 121, 139, 142, 151, 154, 156, 158, 160, 172, 175, 177, 180, 181, 191, 192, 193, 194, 221, 223, 260, 261, 262, 268, 284, 291, 294, 296, 297, 299, 308, 317, 335, 352, 358], "scale": [5, 160, 230, 234, 242, 250, 265, 352], "pbc": [5, 7, 284, 291, 351], "check_strain": 5, "auto": [5, 175, 291, 335], "max_strain": 5, "1e": [5, 18, 158, 160, 317], "10": [5, 30, 59, 154, 214, 215, 325], "check_pbc": 5, "true": [5, 16, 18, 27, 29, 30, 33, 36, 37, 38, 40, 41, 46, 72, 73, 75, 76, 77, 81, 82, 84, 85, 86, 89, 90, 91, 94, 95, 96, 97, 98, 99, 135, 138, 139, 151, 154, 172, 175, 177, 179, 180, 181, 191, 192, 193, 194, 221, 222, 223, 247, 258, 259, 260, 261, 262, 268, 284, 287, 291, 293, 294, 296, 297, 299, 308, 317, 358], "period": [5, 284, 286], "concaten": 5, "veri": [5, 45], "similiar": 5, "support": [5, 41, 181, 191, 193, 194, 221, 260, 262, 299, 352, 357, 358], "more": [5, 9, 41, 82, 126, 145, 154, 156, 158, 160, 184, 208, 271, 289, 299, 305, 307, 308, 331, 347, 352, 354], "than": [5, 126, 145, 184, 208, 243, 259, 265, 271, 331, 347], "two": [5, 27, 91, 126, 142, 145, 151, 184, 208, 271, 284, 286, 315, 322, 331, 347, 352, 357, 358], "themselv": 5, "bit": [5, 317, 326], "differ": [5, 18, 27, 30, 33, 41, 74, 126, 139, 145, 181, 184, 208, 234, 242, 243, 250, 259, 265, 268, 271, 289, 291, 315, 331, 347, 352, 357, 358], "todo": [5, 16, 41, 158, 181, 191, 193, 194, 221, 260, 262, 299, 313, 321, 326], "could": [5, 30, 37, 82, 98, 281, 282], "togeth": 5, "0": [5, 11, 14, 16, 18, 57, 74, 80, 123, 130, 139, 142, 151, 154, 156, 158, 160, 284, 291, 308, 315, 325, 354, 357, 358], "coordin": [5, 18, 154, 160, 286], "n": [5, 38, 141, 151, 179, 180, 192, 217, 221, 222, 223, 259, 261, 282, 308, 310], "th": [5, 217, 308], "locat": [5, 36, 41, 191, 357, 358], "respepect": 5, "accord": [5, 15, 29, 30, 31, 33, 34, 41, 82, 151, 153, 154, 156, 158, 160, 172, 175, 176, 181, 191, 193, 194, 221, 230, 234, 238, 242, 246, 250, 254, 260, 262, 264, 265, 266, 268, 286, 291, 293, 295, 297, 299, 300, 308, 315, 317, 325, 357, 358], "nth": 5, "shift": [5, 154], "distanc": 5, "determin": [5, 13, 27, 36, 41, 121, 126, 145, 175, 179, 181, 184, 191, 193, 194, 204, 208, 221, 260, 262, 271, 282, 286, 291, 299, 308, 315, 317, 331, 347, 357, 358], "posit": [5, 13, 14, 16, 36, 37, 38, 40, 46, 82, 98, 154, 156, 158, 160, 172, 180, 191, 192, 242, 250, 261, 284, 291, 294, 296, 315, 317], "origin": [5, 64, 158, 160], "result": [5, 15, 18, 28, 31, 35, 36, 37, 38, 41, 45, 46, 62, 73, 74, 75, 76, 81, 82, 84, 85, 86, 88, 89, 90, 91, 94, 95, 96, 97, 98, 99, 119, 121, 139, 142, 151, 154, 156, 158, 160, 163, 170, 175, 179, 181, 190, 191, 193, 194, 195, 198, 202, 204, 205, 221, 223, 260, 261, 262, 286, 291, 299, 306, 317, 342, 352, 354, 357], "plu": 5, "vector": [5, 154, 160, 284, 286], "There": [5, 37, 192, 261, 315, 357, 358], "item": [5, 27, 36, 38, 41, 82, 95, 133, 139, 151, 192, 259, 261, 284, 305, 308, 310], "scalar": [5, 160], "r": [5, 74, 222, 223], "consid": [5, 154, 156, 158, 160, 286, 317], "unitari": 5, "bool": [5, 11, 18, 19, 22, 24, 25, 27, 29, 30, 33, 36, 38, 40, 41, 71, 73, 74, 75, 78, 80, 81, 82, 83, 85, 86, 87, 88, 89, 90, 91, 92, 94, 97, 99, 100, 101, 121, 122, 138, 139, 151, 172, 175, 177, 179, 180, 181, 191, 192, 193, 194, 200, 221, 223, 258, 259, 260, 262, 284, 291, 296, 297, 299, 315, 317, 319, 320, 351, 352], "corner": 5, "dimens": 5, "correspond": [5, 214, 308, 315, 357], "default": [5, 16, 27, 30, 34, 36, 37, 38, 40, 41, 46, 52, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 89, 90, 91, 92, 94, 95, 96, 97, 98, 99, 100, 119, 121, 126, 135, 139, 145, 151, 153, 163, 170, 172, 175, 179, 180, 181, 184, 191, 192, 193, 194, 197, 198, 208, 221, 223, 260, 261, 262, 271, 290, 291, 293, 294, 296, 297, 299, 308, 311, 313, 315, 317, 331, 347, 351, 352, 357, 358], "valu": [5, 14, 16, 18, 26, 27, 28, 29, 30, 31, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 48, 50, 57, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 105, 111, 114, 119, 122, 123, 130, 136, 137, 138, 139, 142, 151, 153, 154, 156, 158, 160, 163, 170, 172, 175, 178, 180, 181, 191, 192, 193, 194, 200, 202, 204, 220, 221, 223, 230, 234, 242, 246, 247, 250, 257, 259, 260, 261, 262, 264, 265, 266, 268, 282, 284, 290, 291, 293, 294, 296, 297, 298, 299, 301, 308, 319, 320, 352, 357, 358], "done": [5, 282, 357, 358], "compat": 5, "other": [5, 12, 28, 36, 41, 79, 82, 151, 175, 179, 181, 191, 193, 194, 202, 221, 231, 235, 239, 243, 247, 251, 255, 258, 259, 260, 262, 266, 287, 291, 299, 317, 357, 358], "maxim": [5, 72, 74, 77, 78, 80, 83, 87, 88, 92, 93, 96, 100, 154, 156, 158, 160, 200, 319, 320], "strain": 5, "cannot": [5, 72, 86, 89, 95, 98, 102, 130, 234, 242, 250, 265], "exceed": 5, "valueerror": [5, 7, 126, 145, 147, 149, 184, 186, 188, 208, 210, 271, 273, 275, 277, 279, 331, 333, 335, 337, 339, 341, 347, 349], "rais": [5, 7, 27, 29, 30, 43, 60, 61, 126, 130, 145, 147, 149, 184, 186, 188, 208, 210, 271, 273, 275, 277, 279, 293, 331, 333, 335, 337, 339, 341, 347, 349], "limit": [5, 358], "norm": 5, "displac": 5, "symmetri": [7, 17, 18, 154, 156, 158, 160, 214, 283, 315, 317, 358], "error": [7, 27, 72, 73, 74, 75, 76, 77, 81, 82, 84, 85, 86, 87, 88, 89, 90, 91, 94, 95, 97, 98, 99, 100, 142, 198, 202, 204, 205, 223, 293, 317, 354, 357], "err_class": 7, "class": [7, 13, 14, 17, 18, 19, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 44, 45, 48, 49, 50, 51, 52, 58, 59, 71, 72, 73, 74, 75, 76, 77, 78, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 114, 120, 121, 122, 125, 126, 128, 129, 134, 135, 136, 137, 138, 139, 140, 141, 142, 144, 145, 146, 147, 148, 149, 150, 151, 162, 172, 174, 175, 176, 178, 179, 180, 181, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 194, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 207, 208, 209, 210, 212, 213, 214, 219, 220, 221, 222, 223, 229, 230, 231, 233, 234, 235, 237, 238, 239, 241, 242, 243, 245, 246, 247, 249, 250, 251, 253, 254, 255, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 281, 282, 283, 284, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 346, 347, 348, 349, 352, 357, 358], "pcb": [7, 284], "except": [7, 27, 29, 30, 43, 60, 61, 82, 291, 293], "thei": [7, 16, 18, 35, 36, 37, 38, 40, 41, 46, 126, 140, 142, 145, 151, 172, 178, 180, 181, 184, 191, 192, 193, 194, 204, 208, 219, 221, 234, 242, 250, 257, 260, 261, 262, 265, 271, 286, 291, 294, 296, 299, 331, 347, 352, 357, 358], "satisfi": [7, 138], "requir": [7, 29, 30, 33, 36, 37, 38, 40, 41, 65, 82, 138, 139, 172, 175, 180, 181, 191, 192, 193, 194, 221, 231, 235, 239, 243, 247, 251, 255, 258, 259, 260, 261, 262, 268, 291, 294, 296, 297, 299, 354, 357, 358], "deal": [8, 21], "symbol": [9, 214, 217, 282, 284, 308, 315, 317, 351, 358], "string": [9, 27, 30, 36, 38, 41, 57, 71, 72, 73, 74, 75, 76, 77, 78, 79, 81, 82, 83, 84, 85, 86, 89, 90, 91, 92, 94, 95, 98, 99, 100, 109, 112, 122, 154, 156, 158, 160, 163, 170, 175, 220, 221, 223, 268, 291, 293, 297, 308, 315, 351, 358], "pretti": 9, "especi": 9, "suitabl": [9, 175], "long": 9, "2d": [9, 154, 156, 158, 160, 284, 285, 352], "semiinfinit": [9, 284, 285, 286], "bulk": [9, 154, 217, 286, 325, 354], "gextexgextexgextexgextex9": 9, "gextex": 9, "4x8": 9, "c4h4oc4h4oc2c4h4oc4h4oc2": 9, "c4h4o": 9, "2c2": 9, "2": [9, 16, 43, 78, 96, 98, 123, 151, 154, 156, 158, 160, 214, 215, 217, 262, 286, 325, 354, 358], "co2": 9, "visualis": [11, 321, 343, 351, 352, 358], "scale_radii": 11, "5": [11, 30, 139, 151, 154, 156, 158, 160, 214, 215, 217, 358], "rotat": [11, 154, 286], "bond": 11, "graph": 11, "termin": 11, "block": 11, "viewer": 11, "tupl": [11, 18, 36, 37, 38, 72, 77, 82, 96, 114, 142, 204, 286], "x": [11, 43, 48, 50, 74, 160, 358], "y": [11, 43, 78, 160, 217], "z": [11, 90, 97, 160], "number": [11, 14, 16, 18, 19, 41, 57, 71, 74, 78, 80, 83, 88, 92, 93, 98, 100, 103, 126, 131, 139, 145, 151, 154, 156, 158, 160, 175, 181, 184, 191, 193, 194, 199, 200, 208, 215, 221, 230, 234, 242, 250, 260, 262, 265, 266, 268, 271, 282, 286, 291, 297, 299, 308, 315, 317, 318, 319, 320, 325, 331, 347, 351, 352, 358], "size": [11, 16, 258, 352], "str": [11, 16, 27, 29, 30, 31, 33, 36, 37, 38, 40, 41, 57, 63, 65, 66, 67, 69, 72, 73, 74, 75, 76, 78, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 94, 95, 96, 97, 98, 99, 100, 107, 121, 122, 139, 151, 172, 175, 177, 179, 180, 181, 191, 192, 193, 194, 200, 202, 214, 221, 223, 235, 238, 243, 246, 254, 258, 259, 260, 261, 262, 265, 266, 268, 282, 284, 287, 291, 293, 294, 296, 297, 299, 308, 319, 320, 325, 328], "exampl": [11, 45, 46, 48, 50, 74, 291, 358], "x90": 11, "y90": 11, "z90": 11, "show": [11, 27, 36, 38, 41, 202], "between": [11, 126, 145, 151, 154, 184, 208, 271, 331, 347, 357], "subprocess": 11, "achiev": 11, "nonblock": 11, "wrapper": [12, 17], "physic": [12, 212, 213, 214, 215, 216, 217, 351], "code": [12, 127, 326, 354, 358], "librari": [12, 282], "bind": [13, 14, 15, 16, 17, 18, 19, 247, 351], "hierarchi": [13, 14, 17, 18, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 44, 48, 50, 51, 52, 58, 59, 71, 72, 73, 74, 75, 76, 77, 78, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 125, 126, 128, 129, 134, 135, 136, 137, 138, 139, 140, 141, 142, 144, 145, 146, 147, 148, 149, 150, 151, 162, 172, 174, 175, 176, 178, 179, 180, 181, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 194, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 207, 208, 209, 210, 212, 213, 214, 219, 220, 221, 222, 223, 229, 230, 231, 233, 234, 235, 237, 238, 239, 241, 242, 243, 245, 246, 247, 249, 250, 251, 253, 254, 255, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 281, 282, 283, 284, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 346, 347, 348, 349], "emptyspheresresult": [13, 351], "ideal": 13, "empti": [13, 15, 16, 81, 291, 352, 358], "sphere": [13, 15, 16, 217, 291, 352], "fill": [13, 16, 288], "gap": 13, "primit": [13, 16, 17, 214, 284, 358], "es_find": [14, 15, 16, 351, 352], "radii": [14, 15, 16, 216, 217, 352], "constructor": [14, 18, 27, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 48, 50, 52, 59, 72, 73, 74, 75, 76, 77, 78, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 126, 129, 135, 137, 138, 139, 141, 142, 145, 147, 149, 151, 172, 175, 176, 179, 180, 181, 184, 186, 188, 191, 192, 193, 194, 197, 198, 200, 201, 202, 204, 205, 208, 210, 213, 214, 220, 221, 222, 223, 230, 231, 234, 235, 238, 239, 242, 243, 246, 247, 250, 251, 254, 255, 258, 259, 260, 261, 262, 264, 265, 266, 268, 271, 273, 275, 277, 279, 282, 284, 290, 291, 293, 294, 295, 296, 297, 298, 299, 300, 301, 303, 304, 305, 308, 310, 311, 313, 315, 317, 319, 320, 322, 323, 331, 333, 335, 337, 339, 341, 347, 349, 358], "__init__": [14, 18, 27, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 48, 50, 52, 59, 72, 73, 74, 75, 76, 77, 78, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 126, 129, 135, 137, 138, 139, 141, 142, 145, 147, 149, 151, 172, 175, 176, 179, 180, 181, 184, 186, 188, 191, 192, 193, 194, 197, 198, 200, 201, 202, 204, 205, 208, 210, 213, 214, 220, 221, 222, 223, 230, 231, 234, 235, 238, 239, 242, 243, 246, 247, 250, 251, 254, 255, 258, 259, 260, 261, 262, 264, 265, 266, 268, 271, 273, 275, 277, 279, 282, 284, 290, 291, 293, 294, 295, 296, 297, 298, 299, 300, 301, 303, 304, 305, 308, 310, 311, 313, 315, 317, 319, 320, 322, 323, 331, 333, 335, 337, 339, 341, 347, 349], "_asdict": 14, "return": [14, 18, 19, 23, 27, 29, 30, 31, 34, 36, 37, 38, 39, 40, 41, 45, 48, 50, 57, 63, 65, 66, 67, 69, 72, 73, 74, 75, 76, 77, 78, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 94, 95, 96, 97, 98, 99, 100, 107, 119, 121, 133, 137, 139, 142, 151, 163, 170, 175, 177, 179, 180, 181, 192, 193, 194, 200, 202, 204, 214, 223, 234, 242, 243, 250, 259, 260, 261, 265, 284, 291, 306, 308, 315, 317, 327, 357, 358], "new": [14, 46, 52, 98, 119, 139, 175, 202, 234, 242, 250, 265, 289, 291, 304, 308, 317, 358], "dict": [14, 16, 18, 30, 32, 36, 39, 41, 107, 121, 151, 202, 287, 291, 308, 315, 317], "map": [14, 18, 23, 24, 25, 120, 122, 151, 214, 220], "field": [14, 74, 154, 156, 158, 160], "_field_default": 14, "_field": 14, "classmethod": [14, 31, 37, 38, 40, 86, 89, 137, 175, 179, 261, 268, 282, 335], "_make": 14, "iter": [14, 16, 135, 151, 158, 160, 202, 291, 306, 357, 358], "from": [14, 18, 19, 27, 30, 31, 33, 36, 37, 38, 39, 40, 41, 43, 45, 48, 50, 72, 73, 77, 79, 82, 84, 86, 88, 89, 95, 98, 99, 102, 119, 121, 123, 126, 127, 137, 139, 145, 151, 172, 175, 178, 179, 180, 181, 184, 190, 191, 192, 193, 194, 202, 208, 221, 228, 234, 242, 246, 250, 257, 260, 261, 262, 264, 265, 266, 268, 271, 282, 284, 286, 291, 293, 294, 296, 297, 299, 306, 317, 322, 325, 331, 347, 352, 354, 357, 358], "sequenc": [14, 38, 71, 82, 351], "_replac": 14, "kwd": 14, "specifi": [14, 36, 74, 80, 126, 145, 147, 149, 154, 156, 158, 160, 175, 184, 186, 188, 204, 208, 210, 271, 273, 275, 277, 279, 291, 331, 333, 335, 337, 339, 341, 347, 349, 358], "alia": [14, 27, 40, 41, 74, 75, 76, 78, 80, 81, 82, 83, 87, 92, 99, 100, 179, 180, 192, 197, 201, 231, 232, 235, 236, 238, 239, 240, 243, 244, 246, 247, 248, 251, 252, 254, 255, 256, 258, 259, 261, 296, 299, 319, 320], "kwarg": [15, 30, 37, 38, 41, 46, 72, 77, 79, 84, 93, 95, 96, 98, 129, 142, 175, 179, 191, 193, 194, 197, 201, 202, 204, 231, 235, 239, 243, 247, 251, 255, 258, 259, 260, 261, 287, 291, 294, 303, 317, 335], "updat": [15, 18, 266, 268, 291, 298, 308, 315, 317, 357, 358], "shphere": 15, "empty_spher": [15, 291, 351], "overlap_matrix": 16, "18": [16, 215], "radii_ratios_map": 16, "max_es_overlap": 16, "24": [16, 215], "adjust_overlap": 16, "28": [16, 215, 217], "min_es_radiu": 16, "max_es_radiu": 16, "symmetrize_threshold": 16, "max_iter": 16, "100": [16, 215, 315], "grid": [16, 154, 156, 158, 160], "arrai": [16, 21, 30, 41, 71, 77, 82, 86, 89, 95, 96, 98, 102, 114, 116, 117, 126, 133, 139, 145, 151, 154, 156, 158, 160, 181, 184, 191, 193, 194, 202, 208, 221, 258, 260, 262, 264, 271, 299, 315, 317, 331, 347, 351, 352, 357, 358], "48": [16, 215], "verbos": [16, 27, 36, 38, 41, 154, 156, 158, 160, 358], "comput": [16, 17, 36, 41, 48, 151, 154, 156, 158, 160, 202, 280, 299, 308, 311, 317, 354], "best": 16, "coverag": 16, "vacuum": [16, 282, 285, 286, 288, 315, 325], "pseudoatom": [16, 285, 286, 288, 315], "extend": [16, 317], "numpi": [16, 21, 22, 23, 24, 25, 72, 76, 81, 82, 83, 86, 89, 92, 95, 98, 102, 114, 126, 145, 151, 184, 208, 271, 331, 347, 357], "ndarrai": [16, 72, 77, 96, 114, 151, 284, 317], "defin": [16, 27, 34, 36, 38, 41, 45, 46, 74, 93, 139, 175, 179, 225, 283, 284, 289, 314, 354, 357], "ratio": 16, "chemic": [16, 217, 282, 308, 315, 358], "element": [16, 42, 58, 82, 121, 282, 308, 315], "It": [16, 30, 36, 37, 38, 40, 41, 73, 75, 76, 81, 82, 84, 85, 86, 89, 90, 91, 94, 95, 97, 98, 99, 119, 137, 142, 151, 154, 156, 158, 160, 172, 175, 180, 192, 204, 223, 261, 268, 282, 291, 294, 296, 315, 358], "dimensionless": 16, "matter": 16, "walu": 16, "winger": [16, 216, 217], "seitz": [16, 216, 217], "supplement": 16, "max": [16, 74, 78, 80, 83, 87, 88, 92, 93, 100, 200, 319, 320], "overlap": 16, "maximum": [16, 154, 160], "radiu": [16, 154, 156, 158, 160, 217], "shpere": 16, "minimum": [16, 154], "symetrize_threshold": 16, "threshold": [16, 158, 160, 317], "symmetr": [16, 284, 317], "find": [16, 30, 33, 151, 291, 308, 352], "algorithm": [16, 158, 160], "output": [16, 36, 37, 38, 40, 41, 57, 72, 76, 77, 78, 81, 82, 86, 89, 94, 95, 98, 119, 134, 135, 139, 140, 142, 154, 156, 158, 160, 172, 175, 179, 180, 181, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 218, 221, 223, 260, 261, 262, 291, 294, 296, 299, 351, 352, 354, 358], "spacegroupinfo": [17, 317, 351], "spacegroup": [18, 317], "dataset": [18, 154, 156, 158, 160], "equivalent_sit": 18, "carri": [18, 82], "inform": [18, 36, 37, 38, 40, 41, 45, 54, 82, 172, 180, 192, 212, 214, 239, 261, 289, 294, 296, 317, 325, 358], "about": [18, 38, 45, 54, 174, 212, 214, 289, 317, 325, 354], "sprkkr_atom": [18, 291, 317, 325, 351, 357, 358], "sprkkratom": [18, 230, 234, 242, 250, 264, 265, 266, 291, 297, 298, 301, 315, 316, 325, 351, 357, 358], "uniquevaluesmap": [18, 19, 150, 306, 351], "desrib": [18, 35], "crystal": [18, 154], "dictionari": [18, 27, 30, 36, 37, 38, 41, 43, 139, 151, 217, 291, 315, 357], "recomput": [18, 317], "obtain": [18, 41, 82, 190, 354, 357, 358], "equival": [18, 19, 150, 151, 315, 317], "properti": [18, 27, 34, 36, 37, 38, 40, 41, 46, 48, 50, 82, 88, 91, 95, 98, 119, 139, 175, 202, 204, 205, 213, 234, 238, 242, 246, 250, 254, 264, 265, 266, 268, 282, 284, 290, 291, 299, 305, 308, 314, 315, 317, 354, 357], "allow_chang": 18, "old": [18, 46, 326, 358], "info": [18, 27, 36, 37, 38, 40, 41, 139, 172, 175, 180, 181, 192, 221, 261, 291, 294, 296, 299, 317, 358], "been": [18, 29, 138, 234, 242, 250, 265, 291, 352, 358], "construct": [18, 204], "without": [18, 30, 82, 90, 97, 354, 357], "static": [18, 30, 38, 72, 82, 86, 89, 95, 98, 126, 141, 145, 151, 179, 180, 184, 208, 214, 259, 268, 271, 284, 308, 311, 313, 315, 317, 322, 331, 347], "compute_spacegroup_info": 18, "atomic_numb": [18, 19, 282, 317], "consider_old": [18, 19, 317], "precis": [18, 299], "05": [18, 154, 158, 160, 217, 317], "angular_precis": 18, "creat": [18, 27, 29, 30, 31, 33, 34, 36, 37, 38, 41, 43, 71, 73, 75, 76, 81, 82, 84, 85, 86, 89, 90, 91, 94, 95, 97, 98, 99, 119, 126, 145, 147, 149, 151, 163, 170, 175, 176, 181, 184, 186, 188, 208, 210, 223, 230, 234, 238, 242, 246, 250, 254, 264, 265, 266, 268, 271, 273, 275, 277, 279, 284, 286, 287, 288, 291, 293, 295, 297, 300, 304, 305, 306, 308, 315, 317, 322, 325, 331, 333, 335, 337, 339, 341, 347, 349, 357, 358], "suit": [18, 73, 91], "from_atom": [18, 268, 284, 358], "method": [18, 27, 30, 37, 38, 40, 44, 45, 46, 48, 50, 72, 73, 75, 76, 77, 78, 81, 82, 84, 85, 86, 89, 90, 91, 94, 95, 97, 98, 99, 102, 126, 139, 145, 147, 149, 151, 154, 156, 158, 160, 175, 184, 186, 188, 208, 210, 223, 271, 273, 275, 277, 279, 291, 308, 315, 317, 331, 333, 335, 337, 339, 341, 347, 349, 352, 357, 358], "relat": [18, 175, 204, 211], "document": [18, 36, 38, 41, 154, 156, 158, 160, 179, 231, 235, 239, 243, 247, 251, 255, 258, 259, 261, 264, 291, 352, 356, 358], "member": [18, 29, 30, 31, 33, 34, 36, 37, 38, 40, 41, 120, 151, 172, 175, 176, 180, 181, 191, 192, 193, 194, 221, 230, 234, 238, 242, 246, 250, 254, 260, 261, 262, 264, 265, 266, 268, 293, 294, 295, 296, 299, 300], "slightli": 18, "overriden": [18, 82, 291], "forc": [18, 38, 291], "partiali": [18, 358], "break": 18, "real": [18, 71, 74, 80, 86, 89, 93, 117, 122, 123, 139, 154, 156, 158, 160, 199, 200, 282, 286, 351], "ones": [18, 23, 24, 204, 234, 242, 250, 265, 358], "treat": 18, "label": [18, 291], "toler": [18, 158, 160], "unprecis": 18, "angular": [18, 154], "occup": [19, 242, 243, 244, 315, 317, 351, 358], "etc": [19, 27, 34, 36, 38, 41, 72, 76, 77, 78, 82, 89, 94, 95, 98, 130, 154, 202, 230, 234, 242, 250, 265, 266, 268, 290, 291, 297, 352, 357], "common": [21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 160, 162, 172, 174, 175, 176, 178, 179, 180, 181, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 194, 196, 197, 199, 200, 201, 203, 204, 207, 208, 209, 210, 219, 220, 221, 223, 229, 230, 231, 233, 234, 235, 237, 238, 239, 241, 242, 243, 245, 246, 247, 249, 250, 251, 253, 254, 255, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 292, 293, 294, 295, 296, 298, 299, 300, 301, 318, 319, 320, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 346, 347, 348, 349, 351, 354, 358], "helper": [21, 321, 322], "data": [21, 27, 29, 30, 33, 36, 37, 38, 40, 41, 98, 172, 180, 181, 190, 191, 192, 193, 194, 202, 214, 221, 235, 238, 246, 254, 258, 260, 261, 262, 264, 266, 267, 268, 280, 293, 294, 296, 297, 298, 299, 304, 308, 315, 317, 322, 325, 352, 357], "problem": [21, 27, 30, 33, 36, 71, 154, 156, 158, 160, 172, 352, 358], "own": [21, 27, 30, 33, 41, 137, 139, 220, 284, 298, 301, 315, 358], "datatyp": [21, 75, 76, 78, 80, 81, 83, 87, 92, 99], "thu": [21, 30, 45, 139, 175, 204, 317, 357, 358], "mai": [21, 358], "what": [21, 41, 72, 73, 74, 76, 78, 81, 82, 83, 84, 85, 90, 92, 95, 97, 98, 100, 181, 191, 193, 194, 202, 221, 223, 260, 262, 291, 299], "seem": 21, "alternative_typ": [22, 23, 24, 25, 351], "int64": [22, 23, 24, 25, 83, 130], "float64": [22, 24, 25, 92], "complex": [22, 24, 25, 71, 103, 122, 130, 154, 351, 352], "complex128": [22, 24, 25], "bool_": [22, 24, 25, 76, 81], "datetim": [22, 24, 25, 78, 290], "datetime64": [22, 24, 25], "content": [22, 29, 30, 34, 36, 37, 177, 219, 220, 221, 222, 268, 327, 357, 358], "types_altern": [22, 351], "primari": 22, "itself": [22, 305, 311], "canon": [23, 24, 120], "intern": [23, 139, 215, 354], "standard": [23, 34, 101, 103, 104, 105, 106, 108, 109, 110, 111, 112, 113, 115, 116, 117, 118, 122, 124, 154, 156, 158, 160, 178, 180, 192, 257, 259, 261, 291, 299, 357], "doctest": [23, 123, 151], "np": [23, 72, 77, 96, 130, 151, 154, 175, 217, 291, 358], "set": [25, 27, 29, 30, 36, 37, 38, 40, 41, 46, 64, 72, 73, 74, 75, 76, 77, 78, 79, 81, 82, 83, 84, 85, 87, 88, 90, 92, 94, 95, 96, 97, 98, 99, 100, 119, 121, 127, 139, 151, 154, 156, 158, 160, 172, 180, 181, 191, 192, 193, 194, 202, 221, 223, 230, 234, 235, 242, 246, 247, 250, 260, 261, 262, 264, 265, 266, 268, 284, 291, 293, 294, 296, 297, 299, 308, 315, 317, 354, 357], "base": [26, 27, 30, 33, 36, 38, 40, 74, 75, 82, 87, 98, 151, 205, 292, 303, 311, 354], "both": [26, 35, 41, 71, 181, 191, 193, 194, 221, 260, 262, 284, 299, 357, 358], "section": [26, 27, 28, 29, 30, 31, 33, 35, 36, 37, 38, 39, 40, 41, 69, 70, 94, 137, 139, 154, 156, 158, 160, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 176, 178, 179, 180, 181, 191, 192, 193, 194, 219, 220, 221, 222, 223, 224, 228, 229, 230, 231, 233, 234, 235, 237, 238, 239, 241, 242, 243, 245, 246, 247, 249, 250, 251, 253, 254, 255, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 268, 291, 292, 294, 295, 296, 297, 299, 300, 305, 351, 352, 357, 358], "definit": [27, 29, 30, 31, 33, 34, 35, 36, 37, 38, 39, 40, 41, 82, 137, 139, 152, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 175, 176, 178, 181, 190, 191, 193, 194, 220, 221, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 260, 261, 262, 264, 265, 266, 268, 291, 293, 295, 296, 298, 299, 300, 301, 309, 310, 315, 351, 352, 357, 358], "configuration_definit": [27, 31, 34, 36, 37, 38, 39, 40, 41, 42, 43, 162, 172, 178, 179, 180, 181, 190, 191, 192, 193, 194, 219, 221, 229, 231, 233, 235, 237, 239, 241, 243, 245, 247, 249, 251, 253, 255, 257, 258, 259, 260, 261, 262, 292, 294, 296, 299, 351, 357], "basedefinit": [27, 31, 35, 37, 38, 40, 41, 162, 172, 178, 179, 180, 181, 190, 191, 192, 193, 194, 219, 221, 229, 231, 233, 235, 237, 239, 241, 243, 245, 247, 249, 251, 253, 255, 257, 258, 259, 260, 261, 262, 292, 294, 296, 299, 351], "configuration_contain": [27, 29, 30, 31, 32, 33, 34, 139, 174, 175, 176, 229, 230, 233, 234, 237, 238, 241, 242, 245, 246, 249, 250, 253, 254, 263, 264, 265, 266, 267, 268, 292, 293, 295, 300, 351, 357], "configurationcontain": [27, 28, 29, 31, 33, 34, 139, 174, 175, 176, 229, 230, 233, 234, 237, 238, 241, 242, 245, 246, 249, 250, 253, 254, 263, 264, 265, 266, 267, 268, 292, 293, 295, 300, 351, 357], "_definit": 27, "": [27, 30, 36, 38, 41, 55, 72, 74, 86, 89, 95, 98, 102, 139, 154, 158, 160, 191, 202, 217, 258, 282, 291, 305], "instanc": [27, 35, 36, 37, 41, 82, 98, 101, 103, 104, 105, 106, 108, 109, 110, 111, 112, 113, 115, 116, 117, 118, 119, 121, 124, 126, 139, 145, 147, 149, 151, 179, 181, 184, 186, 188, 191, 193, 194, 208, 210, 221, 260, 261, 262, 271, 273, 275, 277, 279, 299, 331, 333, 335, 337, 339, 341, 347, 349], "_contain": 27, "parent": [27, 31, 46, 137, 284], "hold": [27, 28, 36, 37, 38, 40, 41, 73, 153, 172, 175, 180, 181, 191, 192, 193, 194, 202, 214, 220, 221, 260, 261, 262, 267, 268, 294, 296, 299, 317, 352, 357, 358], "_get_path": 27, "include_root": 27, "dot": [27, 291, 358], "delimit": [27, 36, 37, 38, 40, 62, 72, 96, 179, 180, 192, 221, 259, 261], "path": [27, 175, 204, 291, 358], "tree": [27, 357], "energi": [27, 71, 86, 89, 139, 154, 156, 158, 160, 202, 291, 351, 358], "control": [27, 154, 156, 158, 160, 170, 352], "ha": [27, 29, 36, 37, 38, 40, 41, 45, 46, 82, 98, 107, 119, 138, 172, 175, 176, 180, 181, 191, 192, 193, 194, 202, 219, 221, 234, 242, 250, 260, 261, 262, 265, 266, 284, 291, 294, 296, 299, 317, 352, 357, 358], "_get_root_contain": 27, "repres": [27, 71, 76, 282, 315], "file": [27, 28, 29, 30, 33, 35, 36, 37, 38, 40, 41, 63, 69, 70, 81, 82, 86, 89, 98, 101, 105, 106, 109, 110, 111, 112, 115, 135, 137, 138, 139, 141, 142, 152, 154, 156, 158, 160, 162, 163, 165, 167, 168, 169, 170, 171, 172, 174, 175, 178, 179, 180, 181, 189, 190, 191, 192, 193, 194, 202, 203, 204, 220, 221, 226, 230, 231, 234, 235, 239, 242, 243, 247, 250, 251, 255, 257, 259, 260, 261, 262, 263, 265, 267, 268, 291, 292, 293, 294, 295, 296, 298, 299, 300, 301, 302, 304, 305, 316, 321, 322, 325, 343, 352, 354], "as_dict": [27, 30, 139, 308], "only_chang": [27, 30, 139], "basic": [27, 30, 38, 41, 139, 293, 358], "self": [27, 30, 36, 45, 46, 60, 61, 139, 142, 151, 160, 204, 268, 291, 317, 358], "case": [27, 37, 41, 82, 125, 126, 139, 144, 145, 146, 147, 148, 149, 154, 156, 158, 160, 183, 184, 185, 186, 187, 188, 207, 208, 209, 210, 221, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 304, 317, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 346, 347, 348, 349, 358], "redefin": [27, 36, 37, 38, 40, 41, 73, 82, 86, 89, 91, 98, 139, 142, 172, 180, 181, 191, 192, 193, 194, 221, 260, 261, 262, 266, 294, 296, 299], "descend": [27, 30, 36, 38, 41, 73, 86, 87, 88, 89, 121, 139, 142, 181, 191, 204, 266, 291, 357], "chang": [27, 30, 36, 41, 139, 158, 175, 181, 191, 193, 194, 221, 260, 262, 291, 299, 317, 354, 357, 358], "non": [27, 30, 139, 151, 154, 156, 158, 160, 286, 291, 317, 357, 358], "expert": [27, 30, 36, 37, 38, 40, 41, 139, 154, 156, 158, 160, 172, 180, 181, 191, 192, 193, 194, 221, 260, 261, 262, 294, 296, 299, 352], "to_dict": 27, "print": [27, 36, 37, 38, 40, 45, 46, 57, 73, 75, 76, 81, 82, 84, 85, 86, 89, 90, 91, 94, 95, 97, 98, 99, 154, 156, 158, 160, 172, 175, 180, 192, 223, 259, 261, 291, 294, 296, 352, 358], "save": [27, 29, 30, 33, 38, 82, 139, 142, 291, 293, 297, 298, 357, 358], "help": [27, 36, 37, 38, 40, 139, 172, 180, 192, 261, 294, 296, 358], "show_hidden": [27, 36, 38, 41], "save_to_fil": [27, 293, 357], "valid": [27, 29, 30, 38, 41, 72, 73, 74, 75, 76, 77, 81, 82, 84, 85, 86, 87, 88, 89, 90, 91, 94, 95, 97, 98, 99, 100, 138, 139, 223, 235, 247, 293, 297, 352], "format": [27, 36, 37, 38, 57, 72, 73, 74, 75, 76, 77, 78, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 94, 95, 96, 97, 98, 99, 100, 107, 119, 121, 137, 139, 154, 156, 158, 160, 178, 179, 180, 181, 192, 200, 220, 223, 224, 225, 226, 257, 259, 261, 293, 298, 301, 319, 320, 351, 357, 358], "stuff": [27, 175, 191, 211, 293, 357], "_save_to_fil": [27, 29, 30, 33, 139, 293], "implement": [27, 30, 33, 37, 45, 73, 82, 91, 293, 299, 357, 358], "specif": [27, 289, 293, 318, 357, 358], "read": [27, 32, 33, 36, 38, 39, 82, 140, 175, 179, 190, 201, 204, 219, 221, 222, 234, 242, 243, 250, 259, 264, 265, 266, 268, 291, 293, 302, 303, 304, 321, 322, 325, 354], "complet": [27, 82, 293, 358], "select": [27, 175, 293, 357], "basesect": [28, 31, 34, 174, 176, 229, 230, 233, 234, 237, 238, 241, 242, 245, 246, 249, 250, 253, 254, 263, 264, 265, 266, 292, 295, 300, 351], "configur": [28, 29, 30, 31, 33, 34, 35, 36, 37, 38, 40, 41, 71, 81, 82, 86, 136, 137, 139, 162, 172, 174, 175, 176, 178, 179, 180, 181, 191, 192, 193, 194, 219, 220, 221, 229, 230, 231, 233, 234, 235, 237, 238, 239, 241, 242, 243, 245, 246, 247, 249, 250, 251, 253, 254, 255, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 293, 294, 295, 296, 297, 298, 299, 300, 301, 351, 352, 354], "customsect": [28, 222, 223, 292, 300, 351], "dictadaptor": [28, 351], "rootconfigurationcontain": [28, 174, 175, 267, 268, 292, 293, 351], "task": [28, 31, 34, 36, 37, 38, 40, 54, 137, 139, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 165, 167, 168, 169, 171, 172, 174, 175, 179, 180, 181, 192, 195, 201, 205, 220, 261, 291, 294, 296, 298, 301, 352, 354, 357], "potenti": [28, 34, 38, 82, 89, 98, 101, 105, 109, 111, 115, 137, 139, 154, 156, 158, 160, 178, 179, 190, 192, 202, 204, 219, 220, 221, 222, 223, 224, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 291, 297, 298, 301, 302, 303, 304, 305, 317, 322, 325, 351, 354], "abl": [28, 35, 45, 291, 317], "write": [28, 29, 33, 35, 41, 82, 139, 175, 221, 223, 230, 234, 242, 243, 250, 259, 265, 266, 268, 291, 302, 303, 305, 326, 354], "pars": [28, 29, 30, 35, 36, 37, 38, 41, 60, 61, 71, 73, 75, 76, 81, 82, 84, 85, 86, 89, 90, 91, 94, 95, 97, 98, 99, 138, 142, 175, 179, 192, 201, 219, 223, 261, 357], "A": [29, 30, 34, 36, 37, 38, 40, 45, 46, 57, 72, 73, 74, 76, 78, 79, 81, 82, 84, 85, 86, 89, 91, 92, 93, 95, 101, 103, 104, 105, 106, 108, 109, 110, 111, 112, 113, 115, 116, 117, 118, 121, 124, 126, 138, 139, 145, 151, 172, 175, 180, 184, 192, 200, 205, 208, 215, 258, 261, 262, 263, 264, 265, 271, 291, 294, 296, 311, 317, 322, 331, 347, 354, 357], "has_any_valu": [29, 264], "why": [29, 30, 38, 41, 72, 73, 74, 75, 77, 81, 82, 84, 86, 87, 88, 89, 94, 95, 98, 99, 100, 102, 139, 235, 247, 297], "fail": [29, 30, 45, 60, 61, 126, 145, 184, 208, 271, 331, 347, 358], "dure": [29, 30, 82, 202, 234, 242, 243, 250, 259, 265, 266, 298, 302, 303, 304, 305, 308, 358], "input": [29, 30, 33, 38, 54, 69, 70, 81, 82, 86, 106, 110, 112, 121, 151, 152, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 165, 167, 168, 169, 170, 171, 172, 174, 175, 176, 179, 180, 190, 204, 218, 268, 291, 352, 354, 357], "enforc": [29, 30, 82, 139], "parser": [29, 30, 74, 189, 195, 203], "skip": [29, 30, 82, 308, 357], "where": [29, 151, 175, 200, 291, 315, 325, 358], "written": [29, 36, 38, 41, 181, 191, 193, 194, 221, 259, 260, 262, 291, 299, 352, 354, 357], "something_have_been_written": 29, "group": [30, 74], "_init_members_from_the_definit": 30, "shape": [30, 214], "_get_memb": 30, "search": [30, 354, 357], "interactive_memb": 30, "clear": [30, 33, 139, 268], "do_not_check_requir": [30, 139], "eras": 30, "reset": [30, 220, 265, 268, 291, 315, 358], "subcontain": 30, "after": [30, 36, 41, 46, 73, 75, 76, 81, 82, 84, 85, 86, 89, 90, 91, 94, 95, 97, 98, 99, 139, 158, 160, 177, 191, 223, 234, 242, 250, 264, 265, 291, 358], "pass": [30, 33, 41, 73, 75, 76, 81, 82, 84, 85, 86, 89, 90, 91, 94, 95, 97, 98, 99, 119, 142, 202, 223, 234, 242, 250, 265, 268, 291, 317, 352, 357, 358], "throw": [30, 82, 291], "prevent": 30, "neverthenless": 30, "anywai": [30, 72, 77, 96], "previou": [30, 36, 38, 40, 41, 191], "get": [30, 139, 175, 228, 264, 291, 358], "unknown": [30, 38, 82, 86, 89, 139, 220, 222, 261, 291, 327], "child": [30, 38, 40, 46, 180, 192, 259, 261], "conain": 30, "mix": [30, 41, 57, 71, 73, 82, 91, 111, 137, 138, 139, 142, 158, 160, 175, 181, 191, 193, 194, 204, 220, 221, 260, 262, 298, 299, 301, 351], "usag": [30, 127, 134, 135, 139, 354], "input_paramet": [30, 139, 153, 154, 156, 158, 160, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 197, 198, 201, 202, 204, 205, 227, 291, 302, 351, 354], "niter": [30, 158, 160], "ne": [30, 154, 156, 158, 160, 217, 358], "unkwnown": 30, "handl": [30, 45, 46, 64, 291, 321], "known": [30, 154, 156, 158, 160, 191, 192, 291, 358], "custom": [30, 31, 38, 40, 72, 73, 77, 86, 89, 91, 96, 154, 156, 158, 160, 179, 180, 192, 219, 221, 222, 223, 259, 291, 300, 301, 357, 358], "keyword": [30, 71, 291, 351, 352], "syntax": [30, 35, 291], "syntact": [30, 82, 291], "sugar": [30, 291], "remove_memb": 30, "remov": [30, 31, 38, 41, 137, 308], "previous": [30, 175, 317], "nest": [30, 36, 72, 86, 89, 95, 98, 102], "transform": [30, 43, 72, 76, 77, 78, 82, 88, 89, 94, 95, 98, 139, 357], "well": 30, "to_str": 30, "_find_valu": [30, 139], "sought": [30, 291], "exist": [30, 264, 291, 308, 315, 358], "_interactive_member_nam": 30, "sanit": 30, "kei": [30, 43, 129, 151, 217], "acces": 30, "notat": [30, 57, 291, 358], "_add": 30, "is_chang": [30, 139], "probabl": [30, 204, 308, 315], "factori": [31, 137, 179, 180], "definition_typ": 31, "signatur": [31, 46], "callabl": [31, 41, 73, 74, 75, 76, 78, 80, 81, 82, 83, 85, 86, 87, 88, 89, 90, 91, 92, 94, 97, 99, 100, 139, 181, 191, 193, 194, 200, 221, 223, 260, 262, 291, 299, 319, 320], "wrap": [32, 45], "behav": 32, "addit": [33, 36, 37, 38, 40, 41, 72, 76, 77, 78, 82, 84, 89, 94, 95, 98, 172, 180, 192, 261, 268, 291, 294, 296, 297, 317], "capabl": [33, 357, 358], "read_from_fil": [33, 38, 142, 268], "clear_first": [33, 268], "allow_danger": [33, 36, 37, 38, 41, 175, 268], "present": [33, 36, 41, 82, 175, 191, 268, 291, 292, 315, 318, 358], "preserv": [33, 74, 268], "load": [33, 268, 358], "dangerous_valu": [33, 268], "constraint": [33, 36, 268], "violat": [33, 268], "whose": [34, 36, 38, 46, 76, 219, 222, 234, 242, 250, 265, 266, 291], "predefind": 34, "sectiondefinit": [34, 35, 162, 172, 178, 180, 190, 192, 229, 231, 233, 235, 237, 239, 241, 243, 245, 247, 249, 251, 253, 255, 257, 258, 259, 292, 296, 351], "containerdefinit": [34, 35, 37, 40, 162, 172, 178, 179, 180, 190, 192, 229, 231, 233, 235, 237, 239, 241, 243, 245, 247, 249, 251, 253, 255, 257, 258, 259, 261, 292, 294, 296, 351, 357], "configurationrootdefinit": [35, 178, 179, 257, 261, 292, 294, 351], "mergedictadaptor": [35, 351], "valuedefinit": [35, 82, 98, 137, 139, 178, 181, 190, 191, 193, 194, 219, 220, 221, 257, 260, 262, 292, 298, 299, 301, 351, 357], "alternative_nam": [36, 37, 38, 40, 41, 172, 180, 181, 191, 192, 193, 194, 221, 247, 260, 261, 262, 294, 296, 299], "is_opt": [36, 37, 38, 40, 41, 172, 180, 181, 191, 192, 193, 194, 221, 260, 261, 262, 294, 296, 299], "is_hidden": [36, 37, 38, 40, 41, 172, 180, 181, 191, 192, 193, 194, 221, 260, 261, 262, 294, 296, 299], "is_expert": [36, 37, 38, 40, 41, 172, 180, 181, 191, 192, 193, 194, 221, 260, 261, 262, 294, 296, 299], "name_in_grammar": [36, 37, 38, 40, 41, 82, 98, 172, 180, 181, 191, 192, 193, 194, 221, 260, 261, 262, 294, 296, 299], "write_alternative_nam": [36, 37, 38, 40, 41, 172, 180, 181, 191, 192, 193, 194, 221, 247, 260, 261, 262, 294, 296, 299], "result_class": [36, 37, 38, 40, 41, 172, 179, 180, 181, 191, 192, 193, 194, 197, 201, 204, 221, 231, 235, 239, 243, 247, 251, 255, 258, 259, 260, 261, 262, 294, 296, 299], "denot": [36, 37, 38, 40, 41, 172, 180, 181, 191, 192, 193, 194, 221, 260, 261, 262, 294, 296, 299, 317, 358], "boolean": [36, 37, 38, 40, 76, 81, 106, 172, 180, 192, 261, 291, 294, 296, 351], "pot": [36, 37, 38, 40, 172, 180, 192, 261, 294, 296, 321, 335, 358], "hidden": [36, 37, 38, 40, 41, 172, 180, 181, 191, 192, 193, 194, 221, 260, 261, 262, 294, 296, 299], "offer": [36, 37, 38, 40, 141, 172, 180, 192, 261, 294, 296], "usual": [36, 37, 38, 40, 126, 145, 172, 180, 184, 192, 208, 261, 271, 294, 296, 331, 347], "anoth": [36, 37, 38, 40, 45, 151, 172, 180, 192, 230, 234, 242, 250, 261, 265, 294, 296, 305], "sens": [36, 37, 38, 40, 172, 180, 192, 261, 294, 296], "somewhat": [36, 37, 38, 40, 41, 172, 180, 181, 191, 192, 193, 194, 221, 260, 261, 262, 294, 296, 299], "variabl": [36, 37, 38, 40, 81, 82, 86, 154, 172, 177, 180, 192, 261, 266, 291, 294, 296, 358], "recogn": [36, 37, 38, 40, 74, 114, 172, 180, 192, 261, 294, 296], "short": [36, 37, 38, 40, 172, 180, 192, 261, 294, 296], "messag": [36, 37, 38, 40, 60, 61, 72, 73, 74, 75, 76, 77, 81, 82, 84, 85, 86, 87, 88, 89, 90, 91, 94, 95, 97, 98, 99, 100, 172, 180, 192, 223, 261, 294, 296, 358], "perex": [36, 37, 38, 40, 172, 180, 192, 261, 294, 296], "wheter": [36, 37, 38, 40, 41, 172, 180, 181, 191, 192, 193, 194, 221, 260, 261, 262, 294, 296, 299], "ommit": [36, 81, 82, 86], "expect": [36, 41, 120, 191], "By": [36, 41, 72, 73, 74, 76, 78, 81, 82, 83, 84, 85, 90, 92, 95, 97, 98, 100, 191, 223, 291, 315], "instanti": [36, 41, 82, 86, 89, 175, 191, 357], "_info": [36, 180, 181], "text": [36, 98, 322, 358], "_descript": [36, 180, 181], "longer": 36, "much": 36, "create_object": [36, 38], "grammar": [36, 37, 38, 40, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 80, 81, 82, 83, 84, 85, 90, 92, 95, 96, 97, 98, 100, 101, 103, 104, 105, 106, 108, 109, 110, 111, 112, 113, 115, 116, 117, 118, 119, 120, 121, 123, 124, 138, 190, 222, 223, 261, 299, 351, 357], "global": [36, 231], "state": [36, 64, 154, 268, 296, 297], "danger": [36, 139, 175, 352], "fulfil": 36, "_description_indent": 36, "level": [36, 38, 154], "indent": [36, 38, 41], "prefix": [36, 37, 38, 41, 72, 73, 74, 75, 76, 77, 78, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 94, 95, 96, 97, 98, 99, 100, 181, 191, 193, 194, 200, 221, 223, 260, 262, 299, 319, 320], "also": [36, 38, 41, 151, 174, 181, 191, 193, 194, 221, 260, 262, 282, 299, 317, 357, 358], "detail": [36, 38, 41], "includ": [36, 38, 317, 352], "commonli": [36, 37, 38, 41, 82, 98, 138], "space": [36, 38, 41, 154, 156, 160, 194, 261], "_tuple_with_my_nam": [36, 37], "expr": [36, 37, 62, 68], "has_valu": [36, 82, 94], "is_numbered_arrai": [36, 41, 181, 191, 193, 194, 221, 260, 262, 299], "expres": 36, "express": [36, 72, 73, 74, 76, 78, 81, 82, 83, 84, 85, 90, 92, 95, 97, 98, 100, 223], "separ": [36, 70, 71, 82, 219, 222, 223, 257, 351, 357], "grammar_typ": [36, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 199, 200, 219, 223, 318, 319, 320, 351, 357], "form": [36, 41, 72, 73, 74, 77, 78, 82, 84, 88, 95, 98, 99, 107, 181, 191, 193, 194, 221, 260, 262, 267, 268, 299, 357, 358], "do_not_skip_whitespaces_before_nam": [36, 180], "_get_copy_arg": [36, 41], "copi": [36, 38, 41, 82, 121, 131, 282, 286, 288, 291, 308, 310, 313, 315, 317], "_copy_excluded_arg": [36, 41], "can_be_rep": [36, 41], "deriv": [37, 41, 181, 191, 193, 194, 221, 260, 262, 299], "kind": 37, "better": [37, 126, 145, 184, 208, 271, 331, 347], "fix": [37, 38, 41, 59, 154, 181, 191, 192, 193, 194, 221, 259, 260, 261, 262, 299, 352], "purpos": [37, 321], "from_dict": 37, "def": [37, 45, 46, 48, 50], "recurs": 37, "custom_value_nam": [37, 40], "custom_sect": 37, "appear": [37, 38, 40, 41, 71, 81, 181, 191, 193, 194, 221, 260, 262, 299], "parse_return": [37, 38], "val": [37, 38, 72, 76, 77, 78, 82, 89, 94, 95, 275], "return_value_onli": [37, 38], "clean": [37, 38, 308, 326], "up": [37, 38, 45, 85, 154, 156, 158, 160, 219, 222, 326, 357], "unpack": [37, 38, 139], "unnecessari": [37, 38], "_grammar": [37, 38, 41, 73, 74, 76, 78, 81, 82, 83, 85, 90, 92, 94, 95, 97, 98, 100, 200, 223], "tweak": 37, "comment": 37, "would": [37, 175], "onc": [37, 48, 131], "has_hidden_memb": [38, 40, 172, 180, 192, 296], "force_ord": [38, 40, 172, 180, 192, 259, 261, 296], "inputparamet": [38, 40, 139, 174, 179, 180, 291, 351, 352, 357], "value_name_format": [38, 41, 259], "_dict_from_named_valu": 38, "arg": [38, 46, 93, 129, 175, 191, 193, 194, 197, 201, 204, 234, 242, 250, 258, 259, 260, 265, 287, 291, 303, 317], "auxiliari": 38, "order": [38, 41, 181, 191, 192, 193, 194, 221, 243, 259, 260, 261, 262, 265, 299, 315, 357], "configuration_type_nam": [38, 179, 261], "runtim": [38, 41, 54, 179, 181, 191, 193, 194, 221, 260, 261, 262, 299, 352], "data_descript": [38, 41], "additional_data_descript": [38, 41], "children": 38, "even": [38, 46, 72, 73, 74, 76, 78, 81, 82, 83, 84, 85, 90, 92, 95, 97, 98, 100, 130, 223, 352], "modifi": [38, 46, 291, 299, 358], "all_member_nam": 38, "_values_grammar": 38, "delimited_custom_value_grammar": [38, 40], "custom_name_charact": [38, 261], "abcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyz0123456789_": [38, 261], "charact": 38, "custom_member_grammar": 38, "value_nam": 38, "_first_section_has_to_be_first": 38, "ve": 38, "unord": 38, "parse_fil": 38, "whole_str": [38, 82], "async": [38, 82, 141, 142, 197, 201], "parse_from_stream": [38, 82], "stream": [38, 82, 223, 357], "up_to": [38, 82], "start": [38, 82, 151, 158, 160, 358], "asyncio": [38, 140, 141, 357], "like": [39, 291, 308, 352], "typic": [40, 151, 305], "custom_valu": 40, "_generic_info": [40, 41, 179, 261], "default_valu": [41, 72, 73, 74, 75, 76, 77, 78, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 94, 95, 96, 97, 98, 99, 100, 139, 181, 191, 193, 194, 200, 221, 223, 260, 262, 299, 319, 320], "fixed_valu": [41, 181, 191, 193, 194, 221, 260, 262, 299], "name_format": [41, 181, 191, 193, 194, 221, 260, 262, 299], "grammartyp": [41, 71, 72, 73, 74, 75, 76, 77, 78, 80, 81, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 121, 138, 181, 191, 193, 194, 199, 200, 219, 221, 223, 260, 262, 297, 299, 318, 319, 320, 351, 352, 357], "anyt": [41, 181, 191, 193, 194, 221, 260, 262, 299], "possibli": [41, 181, 191, 193, 194, 221, 260, 262, 299, 357], "alternativelli": [41, 181, 191, 193, 194, 221, 260, 262, 299], "callback": [41, 181, 191, 193, 194, 221, 260, 262, 299], "still": [41, 72, 86, 89, 95, 98, 102, 139, 181, 191, 193, 194, 221, 260, 262, 299, 358], "condit": [41, 42, 60, 73, 74, 75, 76, 78, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 94, 95, 97, 98, 99, 100, 181, 191, 193, 194, 200, 221, 223, 260, 262, 299, 319, 320], "met": [41, 181, 191, 193, 194, 221, 260, 262, 299], "omit": [41, 181, 191, 193, 194, 221, 260, 262, 299], "access": [41, 45, 48, 50, 82, 95, 139, 181, 191, 193, 194, 221, 260, 262, 291, 299, 315, 317], "end": [41, 45, 63, 85, 181, 191, 193, 194, 221, 223, 260, 262, 299], "export": [41, 181, 191, 193, 194, 221, 260, 262, 299, 358], "Such": [41, 82, 181, 191, 193, 194, 221, 260, 262, 299], "spars": [41, 181, 191, 193, 194, 221, 260, 262, 299], "ouput": [41, 181, 191, 193, 194, 221, 260, 262, 291, 299], "name1": [41, 181, 191, 193, 194, 221, 260, 262, 299], "name2": [41, 181, 191, 193, 194, 221, 260, 262, 299], "conf": [41, 139, 181, 191, 193, 194, 221, 260, 262, 299], "name_value_delimit": [41, 181, 191, 193, 194, 221, 260, 262, 299], "note": [41, 126, 145, 154, 181, 184, 191, 193, 194, 208, 221, 260, 262, 271, 299, 331, 347, 354, 357], "type_from_type_map": [41, 181, 351], "guess": [41, 119, 121, 158, 160, 181, 282], "formated_nam": 41, "here": [41, 72, 76, 77, 78, 82, 89, 94, 95, 98, 139, 225], "thing": [41, 45], "choic": [41, 82, 84], "effect": [41, 151, 317], "explan": [41, 175], "retriev": [41, 234, 242, 250], "convert_and_valid": 41, "get_valu": 41, "dangerousvalu": [41, 136, 139, 351], "duplicit": 43, "moreov": [43, 45, 175], "b": [43, 45, 72, 82, 86, 89, 95, 98, 102, 126, 141, 145, 151, 184, 208, 217, 271, 331, 347], "subdictionari": 43, "cached_class_properti": [44, 50, 351], "class_properti": [44, 48, 351], "mainli": 44, "decor": [45, 46, 47, 48, 49, 50, 351], "lost": 45, "As": [45, 217], "consequ": 45, "execut": [45, 126, 145, 147, 149, 174, 175, 177, 179, 184, 186, 188, 205, 208, 210, 271, 273, 275, 277, 279, 291, 304, 331, 333, 335, 337, 339, 341, 347, 349, 357, 358], "super": 45, "appli": [45, 73, 75, 76, 81, 82, 84, 85, 86, 89, 90, 91, 94, 95, 97, 98, 99, 119, 121, 223, 304], "tricki": 45, "style": 45, "situat": 45, "__set_name__": 45, "special": [45, 46, 90, 94, 97, 154, 156, 158, 160, 176, 262, 357, 358], "lose": 45, "recov": 45, "descriptor": [45, 134, 135], "protocol": 45, "speed": [45, 160], "alreadi": [45, 62, 138, 151, 317, 358], "know": 45, "everyth": 45, "func": [45, 46, 49], "cl": [45, 48, 50, 217, 358], "ab": 45, "prepend": 46, "self_nam": 46, "keyword_onli": 46, "new_param": 46, "f": [46, 76, 82, 217, 223, 358], "param": [46, 137, 139, 175, 220, 298, 301], "alter": [46, 82, 96, 291, 358], "retain": [46, 82, 131, 139, 175, 317], "user_funct": 47, "simpl": [47, 73, 91], "lightweight": 47, "unbound": 47, "sometim": [47, 72, 73, 74, 76, 78, 81, 82, 83, 84, 85, 90, 92, 95, 97, 98, 100, 138, 175, 223], "memoiz": 47, "convert": [48, 50, 57, 72, 73, 74, 75, 76, 77, 78, 81, 82, 84, 85, 86, 88, 89, 90, 91, 94, 95, 97, 98, 99, 121, 223, 291, 317], "singl": [48, 50, 139, 357], "directli": [48, 50, 139, 358], "cls_properti": [48, 50], "some_cached_valu": 48, "another_cls_properti": 48, "another_cached_valu": 48, "cach": [50, 74, 305, 306, 351], "desir": [50, 72, 73, 74, 76, 78, 81, 82, 83, 84, 85, 90, 92, 95, 97, 98, 100, 223, 308], "some_valu": 50, "dir": 52, "chdir": 52, "enrich": [53, 82, 95], "12e": 57, "lead": [57, 154, 156, 158, 160, 358], "zero": [57, 98, 100, 126, 145, 151, 184, 208, 264, 271, 282, 284, 291, 308, 311, 331, 347], "fortran": [57, 134, 135], "scientif": 57, "1000000000000e": 57, "00": 57, "14": [57, 154, 214, 215, 217], "6e": 57, "1000000e": 57, "01": [57, 156], "white": [58, 351], "core": [58, 59, 219, 222, 282], "token": [58, 59, 74, 82, 219, 222], "parserel": [58, 59, 63, 65, 66, 67, 69, 72, 76, 78, 81, 83, 85, 90, 92, 94, 96, 97, 100, 179, 180, 181, 192, 193, 194, 200, 219, 222, 223, 260, 261], "abc": [58, 59, 202, 219, 222, 289, 291], "whitechar": 59, "pp": [59, 74], "respect": [59, 154], "default_white_char": 59, "_abc_impl": [59, 222, 291], "_abc": [59, 222, 291], "_abc_data": [59, 222, 291], "parseel": 60, "pa": [61, 217], "action": [61, 82], "parseelemenet": 61, "delim": 62, "suppress": [62, 67, 69, 72, 94, 134, 135, 180, 192, 223, 261], "eof": 63, "whitespac": [63, 90, 97], "newlin": [64, 65, 66, 179, 180, 192, 221, 223, 259, 261], "restor": 64, "optin": 66, "quot": [67, 90, 112], "pattern": [70, 222, 357], "basemix": [71, 86, 89, 91, 351], "baserealwithunit": [71, 80, 93, 351], "typedgrammartyp": [71, 74, 75, 76, 78, 80, 81, 83, 85, 87, 88, 90, 92, 93, 97, 100, 199, 200, 318, 319, 320, 351], "basestr": [71, 85, 90, 97, 351], "setof": [71, 77, 86, 89, 114, 116, 117, 120, 351], "date": [71, 74, 291, 351, 358], "flag": [71, 82, 86, 119, 154, 156, 158, 160, 181, 351, 352], "linestr": [71, 89, 109, 351], "objectnumb": [71, 318, 319, 320, 351], "unsign": [71, 88, 318, 319, 320, 351], "potmix": [71, 111, 260, 351], "qstring": [71, 86, 351], "rang": [71, 151, 154, 351], "realwithunit": [71, 351], "tabl": [71, 82, 202, 215, 351], "definitionfil": 71, "length": [72, 77, 96, 98, 116, 117, 151, 154, 158, 160, 317], "max_length": [72, 77, 96], "min_length": [72, 77, 96], "as_list": [72, 77, 96], "min_": [72, 77, 96], "minim": [72, 74, 77, 78, 80, 83, 87, 88, 92, 93, 96, 100, 154, 156, 158, 160, 200, 319, 320], "sp": [72, 160, 180], "tab": [72, 180, 358], "delimiter_str": [72, 96], "_set_convert_act": 72, "grammar_nam": [72, 73, 74, 76, 78, 81, 82, 83, 84, 85, 90, 92, 95, 97, 98, 100, 223], "human": [72, 73, 74, 76, 78, 81, 82, 83, 84, 85, 90, 92, 95, 97, 98, 100, 223], "readabl": [72, 73, 74, 76, 78, 81, 82, 83, 84, 85, 90, 92, 95, 97, 98, 100, 223], "setnam": [72, 73, 74, 76, 78, 81, 82, 83, 84, 85, 90, 92, 95, 97, 98, 100, 223], "shorter": [72, 73, 74, 76, 78, 81, 82, 83, 84, 85, 90, 92, 95, 97, 98, 100, 223], "_string": [72, 76, 77, 78, 82, 89, 94, 95, 98], "postfix": [72, 73, 74, 75, 76, 77, 78, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 94, 95, 97, 98, 99, 100, 175, 177, 200, 223, 291, 319, 320], "actual": [72, 76, 77, 78, 82, 89, 94, 95, 98, 151, 291, 357, 358], "_valid": [72, 73, 74, 75, 77, 81, 82, 84, 87, 88, 94, 95, 98, 99, 100], "cannon": [72, 73, 77, 82, 84, 88, 95, 98, 99, 214], "is_the_same_valu": [72, 82, 86, 89, 95, 98], "compar": [72, 82, 86, 89, 95, 98, 102, 126, 145, 184, 208, 271, 331, 347], "far": [72, 86, 89, 95, 98, 102, 352], "perfect": [72, 86, 89, 95, 98, 102], "after_convert": [73, 74, 75, 76, 78, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 94, 95, 97, 98, 99, 100, 200, 223, 319, 320], "variant": [73, 86, 89, 110, 111, 116, 117], "anyth": [73, 142, 204, 291, 357], "befor": [73, 75, 76, 81, 82, 84, 85, 86, 89, 90, 91, 94, 95, 97, 98, 99, 223, 230, 234, 242, 243, 250, 259, 265, 358], "invalid": [73, 75, 76, 81, 82, 84, 85, 86, 89, 90, 91, 94, 95, 97, 98, 99, 223], "interpret": [73, 75, 76, 81, 82, 84, 85, 86, 89, 90, 91, 94, 95, 97, 98, 99, 130, 175, 223, 291, 358], "explain": [73, 75, 76, 81, 82, 84, 85, 86, 89, 90, 91, 94, 95, 97, 98, 99, 223], "enter": [73, 75, 76, 81, 82, 84, 85, 86, 89, 90, 91, 94, 95, 97, 98, 99, 223], "string_typ": [73, 86, 89], "param_nam": [73, 74, 82, 95, 96, 98], "get_typ": [73, 91], "actuali": [73, 91], "min": [74, 78, 80, 83, 87, 88, 92, 93, 100, 200, 319, 320], "unit": [74, 80, 93, 317], "append": [74, 175, 177, 291, 317], "automat": [74, 126, 145, 184, 208, 271, 308, 317, 331, 347, 357, 358], "grammar_cach": 74, "_grammar_unit": 74, "match": 74, "regular": [74, 154, 156, 158, 160], "stdlib": 74, "re": [74, 78, 217, 222], "regex": [74, 357], "p": [74, 78, 154, 217, 291, 358], "parseresult": 74, "instead": [74, 82, 158, 160, 291, 317], "wish": 74, "compil": [74, 132, 175, 222, 358], "wa": [74, 139, 317], "realnum": 74, "d": [74, 78, 290, 358], "ref": 74, "stackoverflow": 74, "question": 74, "267399": 74, "roman": 74, "numer": 74, "4": [74, 78, 130, 151, 154, 175, 214, 215, 217, 289, 291, 358], "cm": [74, 217], "cd": [74, 217], "xc": 74, "xl": 74, "l": [74, 154, 156, 160], "ix": 74, "iv": 74, "v": [74, 158, 160, 217], "year": 74, "month": 74, "dai": 74, "9": [74, 214, 215, 217], "numpy_typ": [74, 76, 78, 81, 82, 83, 92, 98, 100], "datatype_nam": [74, 75, 76, 78, 81, 83, 87, 99, 100], "allowed_typ": [75, 76, 78, 81, 83, 85, 87, 92, 99, 351], "letter": 76, "type_nam": [76, 78], "_grammar_nam": [77, 94], "dd": 78, "mm": 78, "yyyi": 78, "take": [79, 84, 85, 88, 174], "predefin": [79, 84, 142, 204, 227, 358], "rydberg": 80, "ev": [80, 139, 154, 156, 158, 160], "ry": [80, 139, 154, 156, 158, 160], "07349864494991327": 80, "convers": 80, "factor": 80, "missing_valu": [81, 82, 86], "configuraion": [81, 82, 86], "can_be_ommit": [81, 82, 86], "ommis": [81, 82, 86], "do_not_output_the_opt": [81, 82, 86], "yield": 82, "pair": [82, 139, 357], "confus": 82, "opposit": [82, 317], "absenc": 82, "On": [82, 358], "hand": 82, "identifi": [82, 98, 151, 191, 192, 308], "dtype": [82, 98], "descendatn": 82, "particular": 82, "comparison": [82, 126, 145, 184, 208, 271, 331, 347], "Not": [82, 327], "equal": [82, 126, 145, 151, 154, 184, 208, 217, 271, 308, 315, 317, 331, 347], "sign": [82, 83, 108], "assign": [82, 202], "transform_grammar": [82, 96], "chanc": [82, 96], "overrid": [82, 291], "subclass": [82, 142, 204], "rare": 82, "incomplet": 82, "set_from_atom": [82, 172, 268, 297, 299, 319, 320], "_valueerror": 82, "error_messag": 82, "parameternam": 82, "propper": [82, 223, 230, 234, 242, 250, 265, 290, 326], "stdout": [82, 135, 142, 175, 197, 201, 291], "abil": [82, 95], "additional_descript": [82, 84], "doe": [82, 84, 126, 145, 147, 149, 184, 186, 188, 208, 210, 271, 273, 275, 277, 279, 317, 331, 333, 335, 337, 339, 341, 347, 349, 357, 358], "fit": [82, 84], "multilin": [82, 84], "type_valid": 82, "typenam": 82, "suffici": 82, "ok": 82, "skipto": 85, "lineend": [85, 180], "stringend": 85, "_initi": [86, 89], "later": [86, 89, 291, 304, 358], "abstract": 88, "reffer": 88, "give": [88, 154, 156, 158, 160], "care": [88, 174], "te": [88, 217], "word": 90, "char": [90, 97], "w": [90, 97, 200, 217, 291], "fnumber": [92, 200], "insid": 94, "format_al": [95, 98, 119, 121], "allowed_valu": 95, "column": [98, 202], "header": [98, 262], "free_head": 98, "21": [98, 215], "17": [98, 215, 217, 358], "16": [98, 215], "numbering_label": 98, "numbering_format": 98, "row_condit": 98, "named_result": 98, "optionali": 98, "iq": 98, "irefq": 98, "imq": 98, "noq": 98, "itoq": 98, "conc": 98, "000": 98, "featureless": 98, "number_of_collumn": 98, "zero_data": 98, "row": 98, "appropri": [107, 122, 291], "format_for_the_typ": 107, "default_format": 107, "array_lik": 114, "type_map": [119, 121, 123], "becom": 119, "left": [119, 154, 177, 286, 291], "ordereddict": [120, 122, 128, 351], "collect": [120, 128, 129, 150, 151, 202], "normalize_typ": [120, 351], "descendatnt": 121, "format_for_typ": [121, 351], "gue": 123, "testcas": [125, 127, 144, 146, 147, 148, 149, 183, 185, 186, 187, 188, 207, 209, 210, 270, 272, 273, 274, 275, 276, 277, 278, 279, 330, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 346, 348, 349, 351], "unittest": [125, 126, 144, 145, 146, 147, 148, 149, 183, 184, 185, 186, 187, 188, 207, 208, 209, 210, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 346, 347, 348, 349], "init_test": [126, 127, 145, 146, 147, 148, 149, 184, 185, 186, 187, 188, 208, 209, 210, 271, 272, 273, 274, 275, 276, 277, 278, 279, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 347, 348, 349, 351], "methodnam": [126, 145, 147, 149, 184, 186, 188, 208, 210, 271, 273, 275, 277, 279, 331, 333, 335, 337, 339, 341, 347, 349], "runtest": [126, 145, 147, 149, 184, 186, 188, 208, 210, 271, 273, 275, 277, 279, 331, 333, 335, 337, 339, 341, 347, 349], "useful": [126, 145, 184, 208, 271, 291, 331, 347], "assert": [126, 145, 184, 208, 271, 331, 347], "assertasyncequ": [126, 145, 184, 208, 271, 331, 347], "assertasyncrais": [126, 145, 184, 208, 271, 331, 347], "assertalmostequ": [126, 145, 184, 208, 271, 331, 347], "unequ": [126, 145, 184, 208, 271, 331, 347], "round": [126, 145, 184, 208, 271, 331, 347], "place": [126, 145, 184, 208, 271, 281, 282, 308, 331, 347, 358], "delta": [126, 145, 184, 208, 271, 331, 347], "signific": [126, 145, 184, 208, 271, 331, 347], "digit": [126, 145, 184, 208, 271, 331, 347], "measur": [126, 145, 184, 208, 271, 331, 347], "almost": [126, 145, 184, 208, 271, 331, 347], "runasync": [126, 145, 184, 208, 271, 331, 347], "corr": [126, 145, 184, 208, 271, 331, 347], "regist": [126, 145, 184, 208, 271, 331, 347], "work": [127, 160, 354], "__package__": 127, "els": 127, "__name__": 127, "thorough": 128, "misc": [129, 130, 131, 132, 133, 351], "first_item": 129, "typeerror": 130, "traceback": 130, "recent": 130, "uniqu": [131, 151, 266], "fce": [132, 306], "mock": 132, "numba": [132, 133], "jit": 132, "avail": [132, 151, 175, 317, 352, 358], "occur": [133, 315, 357], "instal": [133, 352, 354], "acceler": 133, "nooutput": [134, 351], "context": [134, 135], "manag": [134, 135, 354, 358], "no_output": [135, 351], "fd": 135, "customopt": [136, 219, 220, 292, 301, 351], "store": [136, 138, 139, 175, 230, 234, 238, 242, 246, 250, 254, 265, 266, 304, 317, 358], "me": 137, "my": [137, 228, 358], "value_definit": 137, "value_typ": 138, "encapsul": 138, "overcam": 138, "strict": [138, 151], "enfor": 138, "stringifi": 138, "again": [138, 175, 357], "write_valu": 138, "im": [139, 154, 156, 158, 160, 358], "set_danger": 139, "1j": 139, "is_danger": 139, "whether": [139, 151, 179, 291, 317], "bypass": 139, "proper": [139, 175], "completli": 139, "_create_dangerous_valu": 139, "sinc": [139, 291], "underlin": 139, "dummi": [139, 291, 357], "compatibil": 139, "_post_set": 139, "modif": [139, 358], "_check_array_access": 139, "_set_item": 139, "saniti": 139, "_getitem": 139, "_unpack_valu": 139, "potention": 139, "_pack_valu": 139, "translat": [139, 214, 215], "clear_result": 139, "call_hook": 139, "value_and_chang": 139, "is_it_the_default_valu": 139, "wildcard": 139, "get_path": 139, "asynciofileread": [140, 351], "baseprocessoutputread": [140, 179, 196, 197, 199, 201, 203, 204, 351], "reader": [140, 141, 196, 197, 198, 199, 200, 201, 202, 204, 351, 357, 358], "process": [140, 142, 175, 179, 204, 243, 259, 264, 265, 290, 291, 342, 352, 358], "emploi": [140, 291, 357], "stdio": 140, "stderr": [140, 142], "concur": 140, "process_output_read": [141, 142, 175, 179, 196, 197, 199, 201, 203, 204, 351], "filenam": [141, 175, 202, 268, 290, 291, 325, 327, 328, 358], "buffers": 141, "8192": 141, "mimic": 141, "streamread": 141, "fact": [141, 220, 221], "synchron": 141, "close": 141, "readlin": 141, "separator_shift": 141, "sep": 141, "readuntil": 141, "asyn": 142, "read_error": [142, 204], "read_output": [142, 197, 201, 204, 357], "run_subprocess": 142, "wait": [142, 204], "postprocess": [142, 204, 357, 358], "intend": [142, 204], "cmd": 142, "outfil": 142, "print_output": [142, 175, 291, 335], "return_cod": [142, 198, 202, 205], "commontest": [146, 348], "test_common": [147, 351], "test_asyncio_file_read": 147, "grammartest": 148, "test_grammar_typ": [149, 351], "test_is_the_same_valu": 149, "test_typ": 149, "_test_typ": 149, "solv": [150, 352], "unique_valu": [151, 351], "value_to_class_id": 151, "distinct": 151, "criterion": 151, "from_valu": 151, "id": [151, 284, 289], "eq": 151, "revers": 151, "start_from": 151, "iter_uniqu": 151, "len_of_uniqu": 151, "tag": 151, "len": [151, 291, 358], "_create_map": 151, "uniquevalu": 151, "is_equivalent_to": 151, "regardless": [151, 175], "are_equival": 151, "is_equival": 151, "normal": [151, 214, 308], "noth": [151, 176, 291], "unique_values_map": 151, "inputparameterss": [153, 178, 257], "configurt": 153, "arp": [153, 155, 175, 351, 352, 358], "scf": [153, 158, 161, 175, 200, 201, 202, 291, 351, 352, 357, 358], "angl": 154, "resolv": [154, 291], "photoemiss": 154, "spectroscopi": [154, 289], "adsi": [154, 156, 158, 160, 163], "fixedvalu": [154, 156, 158, 160], "potfil": [154, 156, 158, 160], "isn": [154, 156, 158, 160], "necessari": [154, 156, 158, 160, 268, 317, 358], "krw": [154, 156, 158, 160], "affect": [154, 156, 158, 160], "amount": [154, 156, 158, 160], "nonmag": [154, 156, 158, 160], "magnet": [154, 156, 158, 160, 264], "higher": [154, 156, 158, 160], "faster": [154, 156, 158, 160], "tau": [154, 156, 158, 160, 172, 358], "bzint": [154, 156, 158, 160], "anyof": [154, 156, 158, 160], "point": [154, 156, 158, 160], "weyl": [154, 156, 158, 160], "sampl": [154, 156, 158, 160], "less": [154, 156, 158, 160], "ran": [154, 156, 158, 160], "dom": [154, 156, 158, 160], "k": [154, 156, 158, 160, 217], "vari": [154, 156, 158, 160], "quadrat": [154, 156, 158, 160], "tween": [154, 156, 158, 160], "imaginari": [154, 156, 158, 160], "nktab": [154, 156, 158, 160, 172, 358], "good": [154, 156, 158, 160], "compromis": [154, 156, 158, 160], "concern": [154, 156, 158, 160], "accuraci": [154, 156, 158, 160], "effici": [154, 156, 158, 160], "adjust": [154, 156, 158, 160], "mesh": [154, 156, 158, 160, 230, 234, 238, 239, 242, 250, 265, 266, 305, 309, 310, 315, 317, 351], "250": [154, 156, 158, 160], "nktab2d": [154, 156, 158, 160], "region": [154, 156, 158, 160, 283, 284, 286, 287, 317], "nktab3d": [154, 156, 158, 160], "3d": [154, 156, 158, 160, 284, 286], "nkmin": [154, 156, 158, 160], "300": [154, 156, 158, 160, 215], "nkmax": [154, 156, 158, 160], "500": [154, 156, 158, 160], "cluster": [154, 156, 158, 160, 291, 358], "nshlclu": [154, 156, 158, 160], "shell": [154, 156, 158, 160, 175, 358], "around": [154, 156, 158, 160, 357], "central": [154, 156, 158, 160, 284, 286], "clurad": [154, 156, 158, 160], "multipl": [154, 156, 158, 160], "alat": [154, 156, 158, 160], "iqcntr": [154, 156, 158, 160], "center": [154, 156, 158, 160, 214], "basi": [154, 156, 158, 160], "itcntr": [154, 156, 158, 160], "atomictyp": [154, 156, 158, 160, 254, 281, 308, 315, 318, 351], "occupi": [154, 156, 158, 160], "nlout": [154, 156, 158, 160], "\u03c4": [154, 156, 158, 160], "matrix": [154, 156, 158, 160], "lmax": [154, 156, 158, 160], "mol": [154, 156, 158, 160], "molecular": [154, 156, 158, 160], "eminev": 154, "window": 154, "fermi": 154, "emaxev": 154, "eworkev": 154, "inner": 154, "imv_ini_ev": 154, "initi": [154, 317], "imv_fin_ev": 154, "final": 154, "nl": [154, 156, 160], "angula": [154, 156, 160], "momentum": [154, 156, 160], "cutoff": [154, 156, 160], "discard": [154, 156, 160], "strver": 154, "iq_at_surf": 154, "miller_hkl": 154, "ntmp": 154, "tmpmin": 154, "11": [154, 214, 215, 352], "ctmpmax": 154, "vibra": 154, "cnvibra": 154, "spec_ph": 154, "theta": 154, "45": [154, 215, 217], "phi": 154, "pol_p": 154, "polar": [154, 160], "light": [154, 160], "ephot": 154, "6675": 154, "photon": 154, "alq": 154, "align": 154, "pol": 154, "ellipsi": 154, "delq": 154, "phase": [154, 357], "90": [154, 215], "circular": 154, "npol": 154, "unpolar": 154, "dichroism": 154, "rcp": 154, "ellipt": 154, "depend": [154, 175, 317], "icirc": 154, "lcp": 154, "ddad": 154, "ldad": 154, "arbitrari": [154, 160], "linear": 154, "idreh": 154, "linearli": 154, "right": [154, 286], "ifsp": 154, "theta_fix": 154, "spec_el": 154, "scatter": 154, "nt": 154, "azimuth": 154, "pol_": 154, "pz": 154, "spol": 154, "pspin": 154, "typ": 154, "diagram": 154, "scan": 154, "orthonorm": 154, "project": 154, "stereograph": 154, "pe": 154, "xp": 154, "nx": 154, "ny": 154, "istr": 154, "beam": 154, "h": [154, 217], "pol0": 154, "pol0l": 154, "laboratori": 154, "q1": 154, "0j": 154, "amplitud": 154, "photoelectron": 154, "spin": [154, 158, 160], "q2": 154, "q3": 154, "q4": 154, "spec_str": 154, "n_laydbl": 154, "nlat_g_vec": 154, "57": [154, 215, 217], "n_layer": 154, "120": [154, 215], "surf_bar": 154, "25": [154, 215, 217], "transp_bar": 154, "input_parameters_definit": [155, 157, 159, 161, 162, 164, 165, 166, 167, 168, 169, 172, 175, 179, 180, 181, 351], "inputparametersdefinit": [155, 157, 159, 161, 175, 178, 351], "emin": [156, 158, 160], "lowest": [156, 158, 160], "emax": 156, "32": [158, 160, 215, 217], "200": [158, 160, 215], "cycl": [158, 160, 358], "vxc": [158, 160], "vwn": [158, 160], "mjw": [158, 160], "vbh": [158, 160], "pbe": [158, 160], "vosko": [158, 160], "wilk": [158, 160], "nusair": [158, 160], "janak": [158, 160], "william": [158, 160], "moruzzigit": [158, 160], "von": [158, 160], "barth": [158, 160], "hedin": [158, 160], "perdew": [158, 160], "burk": [158, 160], "ernzendorf": [158, 160], "gga": [158, 160], "alg": [158, 160], "broyden2": [158, 160], "tchebi": [158, 160], "broyden": [158, 160], "tchebychev": [158, 160], "efguess": [158, 160], "tol": [158, 160], "istbri": [158, 160], "itdept": [158, 160], "40": [158, 160, 215], "depth": [158, 160], "histori": [158, 160], "qion": [158, 160], "ionic": [158, 160], "charg": [158, 160, 202, 291, 358], "qt": [158, 160], "mspin": [158, 160], "moment": [158, 160, 358], "\u03bc_": [158, 160], "usevmatt": [158, 160], "mattheissconstruct": [158, 160], "densiti": [158, 160, 202], "someth": [158, 266], "meaningful": 158, "phagen": [159, 175, 291, 351, 358], "consist": [160, 358], "strconst": 160, "eta": 160, "ewald": 160, "rmax": 160, "converg": [160, 202, 357, 358], "gmax": 160, "reciproc": 160, "cpa": 160, "20": [160, 215], "0001": 160, "stop": 160, "mode": [160, 175, 247, 291], "srel": 160, "relativist": 160, "mdir": [160, 352], "magnetis": 160, "cartesian": 160, "normalis": 160, "soc": 160, "strength": 160, "orbit": 160, "coupl": 160, "tausect": [162, 171], "inputsectiondefinit": [162, 163, 164, 165, 166, 167, 168, 169, 170, 172, 178, 179, 351], "configurationsectiondefinit": [162, 172, 178, 180, 229, 231, 233, 235, 237, 239, 241, 243, 245, 247, 249, 251, 253, 255, 257, 258, 259, 292, 351], "io_data": [172, 220, 246, 266, 268, 297, 298, 301, 303, 304, 305, 306, 319, 320, 351], "xd": 172, "configurationfil": [174, 175, 267, 268, 292, 351], "configurationsectiontrait": [174, 175, 176, 229, 230, 233, 234, 237, 238, 241, 242, 245, 246, 249, 250, 253, 254, 263, 264, 265, 266, 267, 268, 292, 293, 295, 300, 351], "inputsect": [174, 180, 351], "configurationsect": [174, 176, 229, 230, 233, 234, 237, 238, 241, 242, 245, 246, 249, 250, 253, 254, 263, 264, 265, 266, 292, 296, 351], "These": [174, 264, 357], "suppli": [174, 291, 308, 358], "inputfil": 175, "outputfil": 175, "task_nam": 175, "_default_mpi_runn": 175, "default_mpi_runn": 175, "mpi": [175, 179, 291, 335, 354], "runner": [175, 291, 358], "autodetect": [175, 291], "found": [175, 291, 308], "cpu": 175, "mpi_runn": 175, "mpirun": [175, 291, 358], "command": [175, 204], "is_mpi": 175, "Will": 175, "run_process": 175, "input_fil": [175, 291, 335, 358], "output_fil": [175, 291, 335, 358], "executable_postfix": [175, 291], "paamet": 175, "binari": 175, "infrom": 175, "postfixi": 175, "processoutputread": 175, "result_read": [175, 179], "attach": 175, "ruther": 175, "read_output_from_fil": 175, "executable_param": 175, "stdin": 175, "popen": 175, "set_opt": 175, "is_it_a_input_parameters_nam": 175, "create_input_paramet": 175, "task_definit": 175, "default_paramet": 175, "from_fil": [175, 268, 358], "fullfil": 175, "change_task": [175, 186, 352], "sprkkr_executable_suffix": [177, 291, 358], "configurationfiledefinit": [178, 179, 257, 261, 292, 351], "inputvaluedefinit": [178, 180, 351], "configurationvaluedefinit": [178, 181, 219, 221, 257, 260, 262, 292, 351], "simlilar": [178, 257], "share": [178, 257, 315, 317, 357, 358], "kkrscf": [179, 205], "child_class": [179, 180, 192, 259, 261], "custom_class": [179, 180, 192, 259, 261], "grammar_of_delimit": [179, 180, 181, 192, 193, 194, 223, 259, 260, 261], "printabl": 179, "custom_value_grammar": [179, 261], "ouptut": [180, 192, 259, 291], "wordstart": [180, 192, 193], "_copy_arg": [180, 181], "_member": 180, "type_of_danger": [181, 260], "testdefinit": 185, "test_definit": [186, 351], "testinputparamet": 187, "test_input_paramet": [188, 351], "test_section_delimiter_valu": 188, "test_custom_valu": 188, "test_dangerous_valu": 188, "test_input_parameters_definit": 188, "outputnonamevaluedefinit": [190, 351], "outputvaluedefinit": [190, 191, 192, 194, 351], "outputsectiondefinit": [190, 201, 351], "outputvalueequaldefinit": [190, 351], "although": 190, "approach": 190, "output_definit": [191, 192, 193, 194, 201, 351], "defaultoutputread": 196, "task_result": [196, 197, 198, 199, 201, 202, 204, 205, 351], "outputread": [196, 197, 199, 201, 203, 351, 357], "defaultresult": [196, 197], "taskresult": [196, 198, 199, 202, 203, 351], "realorstar": 199, "scfoutputread": [199, 357], "scfresult": [199, 201, 358], "nan": 200, "atoms_conf_typ": 201, "potential_filenam": [202, 291, 358], "further": [202, 204, 291, 305, 354, 358], "hopefulli": 202, "wavefunct": [202, 358], "total": 202, "coverg": 202, "iteration_valu": 202, "etot": 202, "last_iter": [202, 358], "plot": 202, "logscal": 202, "err": 202, "render": 202, "screen": 202, "matplotlib": 202, "inputparametersresult": 204, "produc": 204, "belong": [204, 284, 315], "wich": 204, "testoutput": 209, "test_output": [210, 351], "lattic": [211, 212, 214, 234, 235, 236, 286], "geometri": [211, 234, 317], "latticedata": [212, 351, 352], "pearson": [212, 351], "crystalograph": 212, "classif": 212, "lattice_data": [213, 214, 215, 351], "bravais_numb": [213, 214], "shoenflies_symbol": 213, "pearson_symbol": 214, "famili": 214, "centering_typ": 214, "herman_mauguin": 214, "shoenfli": 214, "xband_data": 214, "xband": [214, 291, 326, 327], "sysfil": [214, 327, 328, 351], "from_symbol": 214, "normalize_symbol": 214, "ap": 214, "triclin": 214, "c_i": 214, "cf": [214, 217], "13": [214, 215, 217, 358], "cubic": 214, "face": 214, "m3m": 214, "o_h": 214, "ci": 214, "bodi": 214, "cp": 214, "12": [214, 215, 259], "hp": 214, "hexagon": 214, "6": [214, 215, 217, 291, 354, 358], "mmm": 214, "d_6h": 214, "hr": 214, "trigon": 214, "3m": 214, "d_3d": 214, "mp": 214, "monoclin": 214, "c_2h": 214, "oF": 214, "orthoromb": 214, "d_2h": 214, "oi": 214, "op": 214, "o": [214, 217, 299], "ti": [214, 217], "tetragon": 214, "d_4h": 214, "tp": 214, "8": [214, 215, 217, 289, 358], "15": 215, "27": [215, 217], "39": [215, 217], "41": 215, "43": 215, "50": 215, "55": [215, 217], "61": [215, 217], "73": [215, 217], "74": 215, "77": [215, 217], "19": 215, "80": 215, "81": [215, 217], "84": [215, 217], "22": [215, 217], "87": 215, "23": [215, 217], "88": [215, 217], "89": [215, 217], "26": 215, "93": [215, 217], "99": [215, 217], "102": 215, "29": 215, "108": 215, "30": 215, "114": 215, "31": [215, 217], "126": 215, "33": 215, "129": 215, "34": 215, "135": 215, "35": 215, "138": 215, "36": 215, "145": 215, "37": [215, 217], "147": 215, "38": 215, "150": 215, "156": 215, "162": 215, "168": 215, "42": 215, "174": 215, "177": 215, "44": [215, 217], "180": 215, "183": 215, "46": [215, 217], "186": 215, "47": 215, "192": 215, "193": 215, "49": 215, "195": 215, "198": 215, "51": 215, "204": 215, "52": [215, 217], "210": 215, "53": 215, "216": 215, "54": 215, "222": 215, "228": 215, "56": [215, 217], "231": 215, "234": 215, "58": 215, "240": 215, "59": 215, "247": 215, "60": 215, "249": 215, "255": 215, "62": [215, 217], "257": 215, "63": [215, 217], "263": 215, "64": [215, 217, 358], "269": 215, "65": [215, 217], "275": 215, "66": [215, 217], "278": 215, "67": [215, 217], "281": 215, "68": 215, "287": 215, "69": 215, "299": 215, "70": 215, "71": [215, 217], "302": 215, "72": 215, "303": 215, "306": 215, "308": 215, "75": [215, 217], "314": 215, "76": [215, 217], "315": 215, "316": 215, "78": [215, 217], "317": 215, "79": [215, 217], "318": 215, "319": 215, "320": 215, "82": [215, 217], "321": 215, "83": [215, 217], "322": 215, "323": 215, "85": [215, 217], "324": 215, "86": [215, 217], "326": 215, "328": 215, "329": 215, "331": 215, "332": 215, "91": [215, 217], "333": 215, "92": 215, "334": 215, "335": 215, "94": [215, 217], "336": 215, "95": [215, 217], "337": 215, "96": [215, 217], "338": 215, "97": 215, "339": 215, "98": [215, 217], "340": 215, "341": 215, "342": 215, "101": 215, "343": 215, "344": 215, "103": 215, "345": 215, "104": 215, "346": 215, "105": 215, "347": 215, "106": 215, "348": 215, "107": 215, "349": 215, "350": 215, "109": 215, "351": 215, "110": 215, "352": 215, "111": 215, "353": 215, "112": 215, "354": 215, "113": 215, "355": 215, "356": 215, "115": 215, "357": 215, "116": 215, "358": 215, "117": 215, "359": 215, "118": 215, "360": 215, "119": 215, "361": 215, "362": 215, "121": 215, "363": 215, "122": 215, "364": 215, "123": 215, "365": 215, "124": 215, "366": 215, "125": 215, "368": 215, "370": 215, "127": 215, "371": 215, "128": 215, "372": 215, "374": 215, "130": 215, "376": 215, "131": 215, "377": 215, "132": 215, "378": 215, "133": 215, "380": 215, "134": 215, "382": 215, "383": 215, "136": 215, "384": 215, "137": 215, "386": 215, "388": 215, "139": 215, "389": 215, "140": 215, "390": 215, "141": 215, "392": 215, "142": 215, "394": 215, "143": 215, "396": 215, "144": 215, "398": 215, "400": 215, "146": 215, "401": 215, "404": 215, "148": 215, "405": 215, "149": 215, "407": 215, "408": 215, "151": 215, "409": 215, "152": 215, "410": 215, "153": 215, "411": 215, "154": 215, "412": 215, "155": 215, "414": 215, "415": 215, "157": 215, "416": 215, "158": 215, "417": 215, "159": 215, "418": 215, "160": 215, "419": 215, "161": 215, "422": 215, "423": 215, "163": 215, "424": 215, "164": 215, "425": 215, "165": 215, "426": 215, "166": 215, "428": 215, "167": 215, "430": 215, "431": 215, "169": 215, "432": 215, "170": 215, "433": 215, "171": 215, "434": 215, "172": 215, "435": 215, "173": 215, "436": 215, "437": 215, "175": 215, "438": 215, "176": 215, "439": 215, "440": 215, "178": 215, "441": 215, "179": 215, "442": 215, "443": 215, "181": 215, "444": 215, "182": 215, "445": 215, "446": 215, "184": 215, "447": 215, "185": 215, "448": 215, "449": 215, "187": 215, "450": 215, "188": 215, "451": 215, "189": 215, "452": 215, "190": 215, "453": 215, "191": 215, "454": 215, "455": 215, "456": 215, "194": 215, "457": 215, "458": 215, "196": 215, "459": 215, "197": 215, "460": 215, "461": 215, "199": 215, "462": 215, "463": 215, "201": 215, "465": 215, "202": 215, "466": 215, "203": 215, "468": 215, "469": 215, "205": 215, "470": 215, "206": 215, "471": 215, "207": 215, "472": 215, "208": 215, "473": 215, "209": 215, "474": 215, "475": 215, "211": 215, "476": 215, "212": 215, "477": 215, "213": 215, "478": 215, "214": 215, "479": 215, "215": 215, "480": 215, "481": 215, "217": 215, "482": 215, "218": 215, "483": 215, "219": 215, "484": 215, "220": 215, "485": 215, "221": 215, "486": 215, "488": 215, "223": 215, "489": 215, "224": 215, "491": 215, "225": 215, "492": 215, "226": 215, "493": 215, "227": 215, "494": 215, "229": 215, "498": 215, "230": 215, "499": 215, "perlov": 215, "ac": 217, "ag": 217, "al": 217, "am": 217, "At": 217, "au": 217, "ba": 217, "Be": 217, "bi": 217, "bk": 217, "br": [217, 358], "ca": 217, "ce": 217, "co": 217, "cr": 217, "cu": 217, "dy": 217, "er": 217, "eu": 217, "fe": [217, 282], "fm": 217, "fr": 217, "ga": 217, "gd": 217, "ge": 217, "he": 217, "hf": 217, "hg": 217, "ho": 217, "ir": 217, "kr": 217, "la": 217, "li": [217, 358], "04": 217, "lu": 217, "mg": 217, "mn": 217, "mo": 217, "na": 217, "nb": 217, "03": 217, "nd": 217, "ni": 217, "02": 217, "pb": 217, "14351193885013": 217, "pd": 217, "pm": 217, "po": 217, "pr": 217, "pt": 217, "pu": 217, "ra": 217, "rb": 217, "rh": 217, "rn": 217, "ru": 217, "sb": 217, "sc": 217, "se": 217, "si": 217, "sm": 217, "sn": 217, "sr": 217, "ta": 217, "tb": 217, "tc": 217, "tl": 217, "tm": 217, "u": [217, 358], "vc": 217, "xe": 217, "yb": 217, "zn": 217, "zr": 217, "volum": 217, "per": [217, 291], "custompotentialsect": [219, 261, 351], "customconfigurationvalu": [219, 220, 292, 351], "custompotentialsectiondefinit": [219, 351], "customsectiontoken": [219, 351], "sectionstr": [219, 351], "custom_potential_sect": [220, 221, 222, 223, 351], "_depends_on": [220, 264, 265], "_set_from_atom": [220, 230, 234, 242, 246, 250, 264, 265, 266, 297, 298, 299, 301], "_update_atom": [220, 234, 242, 250, 264, 265, 266, 308], "mandatori": [221, 231, 235, 239, 243, 247, 251, 255, 258, 259, 264], "obvious": 221, "let": [222, 357], "dotal": 222, "parseimpl": 222, "instr": 222, "loc": 222, "doaction": 222, "delimiter_pattern": 223, "potential_fil": [225, 291, 335, 358], "potentialdefinit": [226, 257, 268, 351], "globalsystemparamet": [229, 231], "potential_sect": [229, 230, 233, 234, 237, 238, 241, 242, 245, 246, 249, 250, 253, 254, 264, 265, 266, 351], "potentialsect": [229, 230, 233, 234, 237, 238, 241, 242, 245, 246, 249, 250, 253, 254, 259, 263, 264, 266, 351], "globalsystemparameterdefinit": [229, 232], "potential_definit": [229, 231, 233, 235, 237, 239, 241, 243, 245, 247, 249, 251, 253, 255, 258, 259, 260, 261, 262, 268, 351, 357], "potsectiondefinit": [229, 231, 233, 235, 237, 239, 241, 243, 245, 247, 249, 251, 253, 255, 257, 258, 261, 351], "global_system_paramet": [230, 231, 232, 358], "write_io_data": [230, 234, 238, 242, 246, 250, 254, 265, 266], "writeiodata": [230, 234, 242, 250, 265, 266, 268, 297, 298, 301, 302, 351], "reus": [230, 234, 242, 250, 265], "constant": [230, 234, 242, 250, 265, 357], "latticesect": [233, 235], "latticesectiondefinit": [233, 236], "read_io_data": [234, 242, 250, 265, 266], "readiodata": [234, 242, 250, 265, 266, 302, 351], "mechan": [234, 242, 250, 265], "independ": [234, 242, 250, 265], "testabl": [234, 242, 250, 265], "obejct": [234, 242, 250, 265], "adapt": [234, 242, 250, 265], "meshinformationsect": [237, 239], "uniquelistsect": [237, 238, 245, 246, 253, 254, 263, 351], "meshinformationsectiondefinit": [237, 240], "mesh_inform": [238, 239, 240], "_value_nam": [238, 246, 254, 266], "_value_class": [238, 246, 254, 266], "exponentialmesh": [238, 309, 315, 351], "occupationsect": [241, 243], "occupationsectiondefinit": [241, 244], "depends_on": [243, 258, 259], "prerequisit": [243, 259, 265], "referencesystemsect": [245, 247], "referencesystemsectiondefinit": [245, 248], "reference_system": [246, 247, 248, 305, 313, 315, 351], "referencesystem": [246, 312, 315, 351], "refer": [247, 266, 305, 315], "FOR": 247, "tight": 247, "sitessect": [249, 251], "sitessectiondefinit": [249, 252], "typessect": [253, 255], "typessectiondefinit": [253, 256], "asearraysectiondefinit": [257, 351], "potvaluedefinit": [257, 259, 262, 351], "array_nam": [258, 264], "setarrai": 258, "predecessor": 258, "asearraysect": [258, 263, 351], "star": 262, "_counter": 262, "divid": [263, 308, 357], "_": 264, "accordingli": [264, 266, 357, 358], "self_value_class": 266, "from_tupl": 266, "being": 268, "make_complet": 268, "update_atom": [268, 304, 308, 315], "creation": [268, 297], "frozen": [268, 297], "from_str": 268, "test2dpotenti": 272, "test_2d": [273, 277, 335, 351], "testcustomsect": 274, "test_custom_sect": [275, 351], "assertnon": 275, "testpotenti": 276, "test_potenti": [277, 351], "test_grammar": 277, "test_exampl": 277, "test_sequ": 277, "test_reset": 277, "teststructur": 278, "test_structur": [279, 351], "test_lattic": 279, "atomic_typ": [282, 308, 315, 351], "n_core": 282, "n_valenc": 282, "n_semicor": 282, "n_electron": 282, "pseudoel": 282, "valenc": [282, 317], "attempt": 282, "third": [282, 357], "parti": 282, "semicor": [282, 317], "_mendeleev_modul": 282, "_check_n_electron": 282, "_clear_symbol_cach": 282, "to_tupl": [282, 308, 310, 313], "to_atomic_typ": 282, "is_vacuum": [282, 315], "atomsregion": [283, 351], "atoms_region": [284, 351], "slice": 284, "inherit_cel": [284, 287], "__": 284, "___________________": 284, "spatial": [284, 315, 317], "taken": 284, "peridod": 284, "inherit": 284, "_clear_cach": 284, "set_atom": 284, "create_atom": 284, "shared_ids_with": 284, "set_of_id": 284, "only_vacuum_atom": 284, "atoms2": 286, "hkl": 286, "hkl2": 286, "ident": [286, 317], "pseudo": 286, "outer": 286, "complement": 286, "miller": 286, "filenametempl": [289, 291], "getpropertiesmixin": [289, 291], "understood": 289, "msspec": 289, "link": [289, 353, 355], "olymp": 289, "cup": 289, "uni": 289, "muenchen": 289, "de": 289, "php": 289, "com_cont": 289, "view": [289, 351, 358], "articl": 289, "3asprkkr": 289, "catid": 289, "3asoftwar": 289, "itemid": 289, "lang": 289, "en": [289, 357], "placehold": [290, 291, 358], "rememb": 290, "counter": [290, 291, 358], "_get": 290, "lambda": 290, "restart": 291, "easier": 291, "dto": 291, "perform": [291, 357], "mostli": [291, 357], "templat": [291, 358], "temporari": [291, 352], "suffix": [291, 358], "save_input": [291, 358], "slash": [291, 358], "hostnam": [291, 358], "implemented_properti": 291, "skrkkr_executable_postfix": 291, "environment": [291, 358], "pathnam": 291, "meth": [291, 358], "tak": 291, "inputpamat": 291, "bewar": 291, "option_nam": 291, "ambigu": 291, "associ": [291, 308, 358], "explicitli": 291, "_advance_count": 291, "advanc": [291, 358], "_open_fil": 291, "allow_temporari": 291, "create_subdir": 291, "unchang": 291, "filema": 291, "return_fil": 291, "combin": 291, "stress": 291, "dipol": 291, "magmom": 291, "calcualtor": 291, "abov": [291, 325, 357, 358], "don": 291, "input_filenam": 291, "output_filenam": 291, "executable_postifx": 291, "contructor": 291, "system_chang": 291, "initial_charg": 291, "initial_magmom": 291, "alwai": [291, 317], "wiki": 291, "fysik": 291, "dtu": 291, "dk": 291, "six": 291, "insert": 291, "shown": 291, "kkrgen": 291, "kkrspec": 291, "kkrch": 291, "run_xband": 291, "copy_with_potenti": 291, "potential_object": 291, "configurationvalu": [292, 299, 351], "customconfigurationsect": [292, 351], "node": [294, 357], "non_underscor": 297, "reli": 299, "underli": [299, 308], "baseiodata": [302, 304, 305, 351], "iodata": 302, "serv": 302, "intermedi": 302, "storag": 302, "futur": 303, "apply_on_atom": 304, "handler": 304, "newli": [304, 317, 358], "replai": 304, "while": [305, 317, 357, 358], "demand": 305, "dct": 308, "alloi": 308, "enumer": 308, "_find_kei": 308, "identif": 308, "orderd": 308, "replace_typ": 308, "primary_atomic_typ": 308, "largest": 308, "primary_atomic_numb": 308, "main": [308, 358], "primary_symbol": [308, 315], "_normal": 308, "except_from": 308, "sum": 308, "remaind": 308, "among": [308, 317], "total_occup": 308, "to_occup": 308, "radial": [309, 310, 311], "radial_mesh": [310, 311, 351], "r1": 310, "dx": 310, "jrmt": 310, "rmt": 310, "jrw": 310, "rw": 310, "r_n": 310, "r_": 310, "vref": 313, "rmtref": 313, "fraction": 315, "captur": 315, "occpanc": 315, "atomictypeslookup": 315, "copy_sit": 315, "enhanc": 316, "sites_array_nam": 317, "sprkkr_sites_data": 317, "promote_ase_atom": [317, 357, 358], "obj": 317, "ugli": 317, "hack": 317, "__class__": 317, "extra": 317, "promot": [317, 358], "_init": 317, "add_region": 317, "remove_region": 317, "set_region": 317, "compute_sites_symmetri": [317, 358], "symmetry_precis": 317, "_site": 317, "firstli": 317, "nearli": 317, "virtual": 317, "get_spacegroup": 317, "_init_sit": 317, "metod": 317, "cancel_sites_symmetri": 317, "cancel": 317, "uniq": 317, "fulli": [317, 327], "made": [317, 358], "reflect": [317, 358], "are_sites_init": 317, "set_sit": 317, "spacegroup_info": 317, "setter": [317, 358], "spacegoup_info": 317, "sg_info": 317, "reset_sprkkr_potenti": 317, "sprkkr_grammar_typ": [319, 320, 351], "atomdata": [321, 351], "layerdata": [321, 351], "a2s_visualise_in_struct": [321, 344, 351, 352, 358], "structure_file_to_atom": [321, 351], "surfac": [321, 325, 358], "in_structur": [321, 322, 325, 358], "inp": [321, 322, 324, 325, 335, 343, 358], "implementaion": 321, "from_text": 322, "get_symbol": 322, "n_bulk": 325, "vacuum_height": 325, "repetit": 325, "height": 325, "thy": 326, "legaci": 326, "caution": 326, "thoroughli": 327, "nor": [327, 358], "guarant": 327, "buildtest": 332, "test_build": [333, 351], "calculatortest": 334, "test_calcul": [335, 351], "dirnam": 335, "home": 335, "logik": 335, "skola": 335, "_calc_arg": 335, "output_test_calc": 335, "calc_arg": 335, "run_sprkkr": 335, "test_run": 335, "test_phagen": 335, "sitestest": 336, "test_sit": [337, 351], "test_vacuum": 337, "test_occup": [337, 339], "sprkkratomstest": 338, "test_sprkkr_atom": [339, 351], "test_extend": 339, "test_atom": 339, "test_symmetri": 339, "sysfiletest": 340, "test_sysfil": [341, 351], "script": [342, 352, 357, 358], "sctipt": 343, "in_struct": 343, "test_tool": [349, 351], "aperiodic_tim": 351, "check_symmetri": 351, "pretty_symbol": 351, "add_empty_spher": 351, "possibly_equivalent_sit": 351, "normalize_type_map": 351, "add_excluded_names_condit": 351, "unique_dict": 351, "cached_properti": 351, "add_called_class_as_argu": 351, "add_to_signatur": 351, "process_input_parameters_definit": 351, "verbatim": 351, "fortran_format": 351, "optional_line_end": 351, "line_end": 351, "end_of_fil": 351, "separator_pattern": 351, "optional_quot": 351, "addconditionex": 351, "addparseactionex": 351, "delimitedlist": 351, "generate_grammar": 351, "replace_whitechar": 351, "line_str": 351, "complex_numb": 351, "set_of_integ": 351, "set_of_r": 351, "pot_mix": 351, "recognized_set_typ": 351, "type_from_set_map": 351, "defkeyword": 351, "compare_numpy_valu": 351, "type_from_default_valu": 351, "type_from_typ": 351, "type_from_valu": 351, "patch_packag": 351, "as_integ": 351, "copy_list": 351, "njit": 351, "numpy_index": 351, "resolve_executable_postfix": 351, "international_numbers_to_ap": 351, "winger_seitz_radii": 351, "semiinfinite_system": 351, "vacuum_lik": 351, "unique_map": 351, "floatjm": 351, "sysfile_cont": 351, "write_sysfil": 351, "move": 352, "switch": 352, "pytest": 352, "fixi": 352, "now": 352, "refactor": 352, "abus": 352, "basesometh": 352, "descirpt": 352, "were": [352, 358], "introduc": 352, "mdir1": 352, "mdir2": 352, "bracket": 352, "sy": 352, "hastili": [352, 354], "slide": [352, 354], "bundl": 354, "contribut": 354, "report": 354, "git": [354, 358], "pip": [354, 358], "conda": [354, 358], "bug": 354, "philosophi": 354, "program": 354, "changelog": 354, "beta1": 354, "architectur": 354, "beta2": 354, "page": 354, "built": 357, "leav": 357, "Their": 357, "relationship": 357, "subpackag": 357, "miscellan": 357, "prescrib": 357, "simpli": 357, "rest": 357, "oop": 357, "ancestor": 357, "sprkrr": 357, "readthedoc": 357, "latest": 357, "step": 357, "input_prameters_definit": 357, "exact": 357, "invok": 357, "sh": 358, "encourag": 358, "somewher": 358, "bash": 358, "kkrscf8": 358, "rc": 358, "topic": 358, "primarili": 358, "assum": 358, "experienc": 358, "analyz": 358, "bellow": 358, "sever": 358, "sprkkr_command_suffix": 358, "licl": 358, "rocksalt": 358, "indistinguish": 358, "lower": 358, "queri": 358, "interoper": 358, "receiv": 358, "choos": 358, "via": 358, "we": 358, "avoid": 358, "conflict": 358, "through": 358, "acess": 358, "interact": 358, "input_paramt": 358, "uppercas": 358, "least": 358, "my_custom_sect": 358, "my_custom_valu": 358, "necess": 358, "usecas": 358, "subseuent": 358, "an_input_fil": 358, "a_potential_fil": 358, "cours": 358, "my_potential_fil": 358, "irel": 358, "accep": 358, "temp": 358, "interperet": 358, "cf4": 358, "duplic": 358, "therefor": 358, "logic": 358, "behind": 358, "scene": 358, "latter": 358, "indic": 358, "thereaft": 358, "batch": 358, "detect": 358, "mpirunn": 358, "openmpi": 358, "mpich": 358, "subdirectori": 358, "visualise_in_struct": 358, "must": 358, "our": 358, "featur": 358, "highli": 358, "appreci": 358}, "objects": {"": [[1, 0, 0, "-", "ase2sprkkr"]], "ase2sprkkr": [[2, 0, 0, "-", "ase"], [12, 0, 0, "-", "bindings"], [20, 0, 0, "-", "common"], [152, 0, 0, "-", "input_parameters"], [189, 0, 0, "-", "outputs"], [211, 0, 0, "-", "physics"], [218, 0, 0, "-", "potentials"], [280, 0, 0, "-", "sprkkr"], [342, 0, 0, "-", "tools"], [350, 0, 0, "-", "version"]], "ase2sprkkr.ase": [[3, 0, 0, "-", "build"], [6, 0, 0, "-", "pbc"], [8, 0, 0, "-", "symbols"], [10, 0, 0, "-", "visualise"]], "ase2sprkkr.ase.build": [[4, 1, 1, "", "aperiodic_times"], [5, 1, 1, "", "stack"]], "ase2sprkkr.ase.pbc": [[7, 1, 1, "", "check_symmetry"]], "ase2sprkkr.ase.symbols": [[9, 1, 1, "", "pretty_symbols"]], "ase2sprkkr.ase.visualise": [[11, 1, 1, "", "view"]], "ase2sprkkr.bindings": [[13, 0, 0, "-", "es_finder"], [17, 0, 0, "-", "spglib"]], "ase2sprkkr.bindings.es_finder": [[14, 2, 1, "", "EmptySpheresResult"], [15, 1, 1, "", "add_empty_spheres"], [16, 1, 1, "", "empty_spheres"]], "ase2sprkkr.bindings.es_finder.EmptySpheresResult": [[14, 3, 1, "", "__init__"], [14, 3, 1, "", "_asdict"], [14, 4, 1, "", "_field_defaults"], [14, 4, 1, "", "_fields"], [14, 3, 1, "", "_make"], [14, 3, 1, "", "_replace"], [14, 4, 1, "", "positions"], [14, 4, 1, "", "radii"]], "ase2sprkkr.bindings.spglib": [[18, 2, 1, "", "SpacegroupInfo"], [19, 1, 1, "", "possibly_equivalent_sites"]], "ase2sprkkr.bindings.spglib.SpacegroupInfo": [[18, 3, 1, "", "__init__"], [18, 3, 1, "", "compute_spacegroup_info"], [18, 5, 1, "", "dataset"], [18, 5, 1, "", "equivalent_sites"], [18, 3, 1, "", "from_atoms"], [18, 3, 1, "", "number"], [18, 3, 1, "", "recompute"]], "ase2sprkkr.common": [[21, 0, 0, "-", "alternative_types"], [26, 0, 0, "-", "configuration"], [28, 0, 0, "-", "configuration_containers"], [35, 0, 0, "-", "configuration_definitions"], [44, 0, 0, "-", "decorators"], [51, 0, 0, "-", "directory"], [53, 0, 0, "-", "doc"], [56, 0, 0, "-", "formats"], [58, 0, 0, "-", "grammar"], [71, 0, 0, "-", "grammar_types"], [125, 0, 0, "-", "init_tests"], [128, 0, 0, "-", "misc"], [134, 0, 0, "-", "no_output"], [136, 0, 0, "-", "options"], [140, 0, 0, "-", "process_output_reader"], [143, 0, 0, "-", "test"], [150, 0, 0, "-", "unique_values"]], "ase2sprkkr.common.alternative_types": [[22, 6, 1, "", "allowed_types"], [23, 1, 1, "", "normalize_type"], [24, 6, 1, "", "normalize_type_map"], [25, 6, 1, "", "types_alternatives"]], "ase2sprkkr.common.configuration": [[27, 2, 1, "", "Configuration"]], "ase2sprkkr.common.configuration.Configuration": [[27, 3, 1, "", "__init__"], [27, 4, 1, "", "_container"], [27, 4, 1, "", "_definition"], [27, 3, 1, "", "_get_path"], [27, 3, 1, "", "_get_root_container"], [27, 3, 1, "", "as_dict"], [27, 5, 1, "", "doc"], [27, 3, 1, "", "help"], [27, 5, 1, "", "info"], [27, 5, 1, "", "name"], [27, 3, 1, "", "save_to_file"], [27, 3, 1, "", "show"], [27, 3, 1, "", "to_dict"]], "ase2sprkkr.common.configuration_containers": [[29, 2, 1, "", "BaseSection"], [30, 2, 1, "", "ConfigurationContainer"], [31, 2, 1, "", "CustomSection"], [32, 2, 1, "", "DictAdaptor"], [33, 2, 1, "", "RootConfigurationContainer"], [34, 2, 1, "", "Section"]], "ase2sprkkr.common.configuration_containers.BaseSection": [[29, 3, 1, "", "__init__"], [29, 3, 1, "", "_save_to_file"], [29, 3, 1, "", "has_any_value"], [29, 3, 1, "", "validate"]], "ase2sprkkr.common.configuration_containers.ConfigurationContainer": [[30, 3, 1, "", "__init__"], [30, 3, 1, "", "_add"], [30, 3, 1, "", "_find_value"], [30, 3, 1, "", "_get_member"], [30, 3, 1, "", "_init_members_from_the_definition"], [30, 3, 1, "", "_interactive_member_name"], [30, 3, 1, "", "_save_to_file"], [30, 3, 1, "", "add"], [30, 3, 1, "", "as_dict"], [30, 3, 1, "", "clear"], [30, 3, 1, "", "get"], [30, 3, 1, "", "is_changed"], [30, 3, 1, "", "members"], [30, 3, 1, "", "remove_member"], [30, 3, 1, "", "set"], [30, 3, 1, "", "to_string"], [30, 3, 1, "", "validate"]], "ase2sprkkr.common.configuration_containers.CustomSection": [[31, 3, 1, "", "__init__"], [31, 3, 1, "", "factory"], [31, 3, 1, "", "remove"]], "ase2sprkkr.common.configuration_containers.DictAdaptor": [[32, 3, 1, "", "__init__"]], "ase2sprkkr.common.configuration_containers.RootConfigurationContainer": [[33, 3, 1, "", "__init__"], [33, 3, 1, "", "_save_to_file"], [33, 3, 1, "", "find"], [33, 3, 1, "", "read_from_file"]], "ase2sprkkr.common.configuration_containers.Section": [[34, 3, 1, "", "__init__"], [34, 5, 1, "", "definition"]], "ase2sprkkr.common.configuration_definitions": [[36, 2, 1, "", "BaseDefinition"], [37, 2, 1, "", "ConfigurationRootDefinition"], [38, 2, 1, "", "ContainerDefinition"], [39, 2, 1, "", "MergeDictAdaptor"], [40, 2, 1, "", "SectionDefinition"], [41, 2, 1, "", "ValueDefinition"], [42, 1, 1, "", "add_excluded_names_condition"], [43, 1, 1, "", "unique_dict"]], "ase2sprkkr.common.configuration_definitions.BaseDefinition": [[36, 3, 1, "", "__init__"], [36, 4, 1, "", "_copy_excluded_args"], [36, 4, 1, "", "_description"], [36, 4, 1, "", "_description_indentation"], [36, 3, 1, "", "_get_copy_args"], [36, 4, 1, "", "_info"], [36, 3, 1, "", "_tuple_with_my_name"], [36, 4, 1, "", "alternative_names"], [36, 3, 1, "", "can_be_repeated"], [36, 3, 1, "", "create_object"], [36, 3, 1, "", "description"], [36, 4, 1, "", "do_not_skip_whitespaces_before_name"], [36, 3, 1, "", "grammar"], [36, 3, 1, "", "info"], [36, 4, 1, "", "is_hidden"], [36, 4, 1, "", "name"], [36, 4, 1, "", "name_in_grammar"], [36, 4, 1, "", "result_class"]], "ase2sprkkr.common.configuration_definitions.ConfigurationRootDefinition": [[37, 3, 1, "", "__init__"], [37, 3, 1, "", "_grammar"], [37, 3, 1, "", "_tuple_with_my_name"], [37, 4, 1, "", "custom_value_name"], [37, 3, 1, "", "from_dict"], [37, 4, 1, "", "name_in_grammar"], [37, 3, 1, "", "parse_return"], [37, 5, 1, "", "sections"]], "ase2sprkkr.common.configuration_definitions.ContainerDefinition": [[38, 3, 1, "", "__init__"], [38, 3, 1, "", "_dict_from_named_values"], [38, 3, 1, "", "_first_section_has_to_be_first"], [38, 3, 1, "", "_grammar"], [38, 3, 1, "", "_values_grammar"], [38, 3, 1, "", "additional_data_description"], [38, 3, 1, "", "all_member_names"], [38, 4, 1, "", "configuration_type_name"], [38, 3, 1, "", "copy"], [38, 3, 1, "", "create_object"], [38, 3, 1, "", "custom_member_grammar"], [38, 4, 1, "", "custom_name_characters"], [38, 3, 1, "", "data_description"], [38, 3, 1, "", "delimited_custom_value_grammar"], [38, 4, 1, "", "force_order"], [38, 3, 1, "", "members"], [38, 3, 1, "", "names"], [38, 3, 1, "", "parse"], [38, 3, 1, "", "parse_file"], [38, 3, 1, "", "parse_from_stream"], [38, 3, 1, "", "parse_return"], [38, 3, 1, "", "read_from_file"], [38, 3, 1, "", "remove"], [38, 3, 1, "", "validate"], [38, 4, 1, "", "value_name_format"]], "ase2sprkkr.common.configuration_definitions.MergeDictAdaptor": [[39, 3, 1, "", "__init__"]], "ase2sprkkr.common.configuration_definitions.SectionDefinition": [[40, 3, 1, "", "__init__"], [40, 3, 1, "", "_generic_info"], [40, 4, 1, "", "custom_value_name"], [40, 3, 1, "", "delimited_custom_value_grammar"], [40, 4, 1, "", "result_class"], [40, 5, 1, "", "values"]], "ase2sprkkr.common.configuration_definitions.ValueDefinition": [[41, 3, 1, "", "__init__"], [41, 4, 1, "", "_copy_excluded_args"], [41, 3, 1, "", "_generic_info"], [41, 3, 1, "", "_get_copy_args"], [41, 3, 1, "", "_grammar"], [41, 3, 1, "", "additional_data_description"], [41, 3, 1, "", "can_be_repeated"], [41, 3, 1, "", "convert_and_validate"], [41, 3, 1, "", "copy"], [41, 3, 1, "", "data_description"], [41, 5, 1, "", "formated_name"], [41, 3, 1, "", "get_value"], [41, 4, 1, "", "name_in_grammar"], [41, 3, 1, "", "remove"], [41, 4, 1, "", "result_class"], [41, 4, 1, "", "type_from_type_map"], [41, 3, 1, "", "validate"], [41, 5, 1, "", "value_name_format"], [41, 3, 1, "", "write"]], "ase2sprkkr.common.decorators": [[45, 1, 1, "", "add_called_class_as_argument"], [46, 1, 1, "", "add_to_signature"], [47, 1, 1, "", "cache"], [48, 2, 1, "", "cached_class_property"], [49, 2, 1, "", "cached_property"], [50, 2, 1, "", "class_property"]], "ase2sprkkr.common.decorators.cached_class_property": [[48, 3, 1, "", "__init__"]], "ase2sprkkr.common.decorators.class_property": [[50, 3, 1, "", "__init__"]], "ase2sprkkr.common.directory": [[52, 2, 1, "", "Directory"]], "ase2sprkkr.common.directory.Directory": [[52, 3, 1, "", "__init__"], [52, 3, 1, "", "chdir"], [52, 3, 1, "", "new"]], "ase2sprkkr.common.doc": [[54, 1, 1, "", "process_input_parameters_definition"], [55, 1, 1, "", "verbatim"]], "ase2sprkkr.common.formats": [[57, 1, 1, "", "fortran_format"]], "ase2sprkkr.common.grammar": [[59, 2, 1, "", "White"], [60, 1, 1, "", "addConditionEx"], [61, 1, 1, "", "addParseActionEx"], [62, 1, 1, "", "delimitedList"], [63, 6, 1, "", "end_of_file"], [64, 1, 1, "", "generate_grammar"], [65, 6, 1, "", "line_end"], [66, 6, 1, "", "optional_line_end"], [67, 6, 1, "", "optional_quote"], [68, 1, 1, "", "replace_whitechars"], [69, 6, 1, "", "separator"], [70, 6, 1, "", "separator_pattern"]], "ase2sprkkr.common.grammar.White": [[59, 3, 1, "", "__init__"], [59, 4, 1, "", "_abc_impl"]], "ase2sprkkr.common.grammar_types": [[72, 2, 1, "", "Array"], [73, 2, 1, "", "BaseMixed"], [74, 2, 1, "", "BaseRealWithUnits"], [75, 2, 1, "", "BaseString"], [76, 2, 1, "", "Bool"], [77, 2, 1, "", "Complex"], [78, 2, 1, "", "Date"], [79, 1, 1, "", "DefKeyword"], [80, 2, 1, "", "Energy"], [81, 2, 1, "", "Flag"], [82, 2, 1, "", "GrammarType"], [83, 2, 1, "", "Integer"], [84, 2, 1, "", "Keyword"], [85, 2, 1, "", "LineString"], [86, 2, 1, "", "Mixed"], [87, 2, 1, "", "Number"], [88, 2, 1, "", "ObjectNumber"], [89, 2, 1, "", "PotMixed"], [90, 2, 1, "", "QString"], [91, 2, 1, "", "Range"], [92, 2, 1, "", "Real"], [93, 2, 1, "", "RealWithUnits"], [94, 2, 1, "", "Separator"], [95, 2, 1, "", "Sequence"], [96, 2, 1, "", "SetOf"], [97, 2, 1, "", "String"], [98, 2, 1, "", "Table"], [99, 2, 1, "", "TypedGrammarType"], [100, 2, 1, "", "Unsigned"], [101, 6, 1, "", "boolean"], [102, 1, 1, "", "compare_numpy_values"], [103, 6, 1, "", "complex_number"], [104, 6, 1, "", "date"], [105, 6, 1, "", "energy"], [106, 6, 1, "", "flag"], [107, 1, 1, "", "format_for_type"], [108, 6, 1, "", "integer"], [109, 6, 1, "", "line_string"], [110, 6, 1, "", "mixed"], [111, 6, 1, "", "pot_mixed"], [112, 6, 1, "", "qstring"], [113, 6, 1, "", "real"], [114, 6, 1, "", "recognized_set_types"], [115, 6, 1, "", "separator"], [116, 6, 1, "", "set_of_integers"], [117, 6, 1, "", "set_of_reals"], [118, 6, 1, "", "string"], [119, 1, 1, "", "type_from_default_value"], [120, 6, 1, "", "type_from_set_map"], [121, 1, 1, "", "type_from_type"], [122, 6, 1, "", "type_from_type_map"], [123, 1, 1, "", "type_from_value"], [124, 6, 1, "", "unsigned"]], "ase2sprkkr.common.grammar_types.Array": [[72, 3, 1, "", "__init__"], [72, 3, 1, "", "_set_convert_action"], [72, 3, 1, "", "_string"], [72, 3, 1, "", "_validate"], [72, 3, 1, "", "convert"], [72, 4, 1, "", "delimiter"], [72, 4, 1, "", "delimiter_str"], [72, 3, 1, "", "grammar_name"], [72, 3, 1, "", "is_the_same_value"]], "ase2sprkkr.common.grammar_types.BaseMixed": [[73, 3, 1, "", "__init__"], [73, 3, 1, "", "_grammar"], [73, 3, 1, "", "_validate"], [73, 3, 1, "", "convert"], [73, 3, 1, "", "get_type"], [73, 3, 1, "", "grammar_name"], [73, 4, 1, "", "string_type"], [73, 4, 1, "", "type"]], "ase2sprkkr.common.grammar_types.BaseRealWithUnits": [[74, 3, 1, "", "__init__"], [74, 3, 1, "", "_grammar"], [74, 3, 1, "", "_grammar_units"], [74, 3, 1, "", "_validate"], [74, 4, 1, "", "datatype_name"], [74, 4, 1, "", "grammar_cache"], [74, 3, 1, "", "grammar_name"], [74, 4, 1, "", "numpy_type"]], "ase2sprkkr.common.grammar_types.BaseString": [[75, 3, 1, "", "__init__"], [75, 3, 1, "", "_validate"], [75, 4, 1, "", "allowed_types"], [75, 4, 1, "", "datatype"], [75, 4, 1, "", "datatype_name"]], "ase2sprkkr.common.grammar_types.Bool": [[76, 4, 1, "", "I"], [76, 3, 1, "", "__init__"], [76, 4, 1, "", "_grammar"], [76, 3, 1, "", "_string"], [76, 4, 1, "", "allowed_types"], [76, 4, 1, "", "datatype"], [76, 4, 1, "", "datatype_name"], [76, 3, 1, "", "grammar_name"], [76, 4, 1, "", "numpy_type"], [76, 4, 1, "", "type_name"]], "ase2sprkkr.common.grammar_types.Complex": [[77, 4, 1, "", "I"], [77, 3, 1, "", "__init__"], [77, 3, 1, "", "_grammar_name"], [77, 3, 1, "", "_string"], [77, 3, 1, "", "_validate"], [77, 3, 1, "", "convert"]], "ase2sprkkr.common.grammar_types.Date": [[78, 4, 1, "", "I"], [78, 3, 1, "", "__init__"], [78, 4, 1, "", "_grammar"], [78, 3, 1, "", "_string"], [78, 4, 1, "", "allowed_types"], [78, 4, 1, "", "datatype"], [78, 4, 1, "", "datatype_name"], [78, 3, 1, "", "grammar_name"], [78, 4, 1, "", "numpy_type"], [78, 4, 1, "", "type_name"]], "ase2sprkkr.common.grammar_types.Energy": [[80, 4, 1, "", "I"], [80, 3, 1, "", "__init__"], [80, 4, 1, "", "datatype"], [80, 4, 1, "", "units"]], "ase2sprkkr.common.grammar_types.Flag": [[81, 4, 1, "", "I"], [81, 3, 1, "", "__init__"], [81, 4, 1, "", "_grammar"], [81, 3, 1, "", "_validate"], [81, 4, 1, "", "allowed_types"], [81, 4, 1, "", "datatype"], [81, 4, 1, "", "datatype_name"], [81, 3, 1, "", "grammar_name"], [81, 3, 1, "", "missing_value"], [81, 4, 1, "", "numpy_type"], [81, 3, 1, "", "str"]], "ase2sprkkr.common.grammar_types.GrammarType": [[82, 3, 1, "", "__init__"], [82, 3, 1, "", "_string"], [82, 3, 1, "", "_validate"], [82, 3, 1, "", "_valueError"], [82, 3, 1, "", "additional_description"], [82, 3, 1, "", "convert"], [82, 3, 1, "", "copy"], [82, 4, 1, "", "default_value"], [82, 3, 1, "", "enrich"], [82, 4, 1, "", "format"], [82, 3, 1, "", "grammar"], [82, 3, 1, "", "grammar_name"], [82, 4, 1, "", "has_value"], [82, 3, 1, "", "is_the_same_value"], [82, 3, 1, "", "missing_value"], [82, 4, 1, "", "name_in_grammar"], [82, 4, 1, "", "numpy_type"], [82, 3, 1, "", "parse"], [82, 3, 1, "", "parse_from_stream"], [82, 4, 1, "", "postfix"], [82, 4, 1, "", "prefix"], [82, 3, 1, "", "print"], [82, 3, 1, "", "read"], [82, 3, 1, "", "string"], [82, 3, 1, "", "transform_grammar"], [82, 3, 1, "", "type_validation"], [82, 3, 1, "", "validate"], [82, 3, 1, "", "write"]], "ase2sprkkr.common.grammar_types.Integer": [[83, 4, 1, "", "I"], [83, 3, 1, "", "__init__"], [83, 4, 1, "", "_grammar"], [83, 4, 1, "", "allowed_types"], [83, 4, 1, "", "datatype"], [83, 4, 1, "", "datatype_name"], [83, 3, 1, "", "grammar_name"], [83, 4, 1, "", "numpy_type"]], "ase2sprkkr.common.grammar_types.Keyword": [[84, 3, 1, "", "__init__"], [84, 3, 1, "", "_validate"], [84, 3, 1, "", "additional_description"], [84, 3, 1, "", "convert"], [84, 3, 1, "", "grammar_name"]], "ase2sprkkr.common.grammar_types.LineString": [[85, 4, 1, "", "I"], [85, 3, 1, "", "__init__"], [85, 4, 1, "", "_grammar"], [85, 4, 1, "", "allowed_types"], [85, 3, 1, "", "grammar_name"]], "ase2sprkkr.common.grammar_types.Mixed": [[86, 4, 1, "", "I"], [86, 3, 1, "", "__init__"], [86, 3, 1, "", "_initialize"], [86, 3, 1, "", "is_the_same_value"], [86, 3, 1, "", "missing_value"], [86, 4, 1, "", "string_type"], [86, 4, 1, "", "types"]], "ase2sprkkr.common.grammar_types.Number": [[87, 3, 1, "", "__init__"], [87, 3, 1, "", "_validate"], [87, 4, 1, "", "allowed_types"], [87, 4, 1, "", "datatype"], [87, 4, 1, "", "datatype_name"]], "ase2sprkkr.common.grammar_types.ObjectNumber": [[88, 3, 1, "", "__init__"], [88, 3, 1, "", "_validate"], [88, 3, 1, "", "convert"]], "ase2sprkkr.common.grammar_types.PotMixed": [[89, 4, 1, "", "I"], [89, 3, 1, "", "__init__"], [89, 3, 1, "", "_initialize"], [89, 3, 1, "", "_string"], [89, 3, 1, "", "is_the_same_value"], [89, 4, 1, "", "string_type"], [89, 4, 1, "", "types"]], "ase2sprkkr.common.grammar_types.QString": [[90, 4, 1, "", "I"], [90, 3, 1, "", "__init__"], [90, 4, 1, "", "_grammar"], [90, 3, 1, "", "grammar_name"]], "ase2sprkkr.common.grammar_types.Range": [[91, 3, 1, "", "__init__"], [91, 3, 1, "", "get_type"], [91, 5, 1, "", "types"]], "ase2sprkkr.common.grammar_types.Real": [[92, 4, 1, "", "I"], [92, 3, 1, "", "__init__"], [92, 4, 1, "", "_grammar"], [92, 4, 1, "", "allowed_types"], [92, 4, 1, "", "datatype"], [92, 3, 1, "", "grammar_name"], [92, 4, 1, "", "numpy_type"]], "ase2sprkkr.common.grammar_types.RealWithUnits": [[93, 3, 1, "", "__init__"]], "ase2sprkkr.common.grammar_types.Separator": [[94, 4, 1, "", "I"], [94, 3, 1, "", "__init__"], [94, 4, 1, "", "_grammar"], [94, 3, 1, "", "_grammar_name"], [94, 3, 1, "", "_string"], [94, 3, 1, "", "_validate"], [94, 4, 1, "", "has_value"]], "ase2sprkkr.common.grammar_types.Sequence": [[95, 3, 1, "", "__init__"], [95, 3, 1, "", "_grammar"], [95, 3, 1, "", "_string"], [95, 3, 1, "", "_validate"], [95, 3, 1, "", "convert"], [95, 3, 1, "", "enrich"], [95, 3, 1, "", "grammar_name"], [95, 3, 1, "", "is_the_same_value"]], "ase2sprkkr.common.grammar_types.SetOf": [[96, 3, 1, "", "__init__"], [96, 4, 1, "", "delimiter"], [96, 4, 1, "", "delimiter_str"], [96, 3, 1, "", "transform_grammar"]], "ase2sprkkr.common.grammar_types.String": [[97, 4, 1, "", "I"], [97, 3, 1, "", "__init__"], [97, 4, 1, "", "_grammar"], [97, 3, 1, "", "grammar_name"]], "ase2sprkkr.common.grammar_types.Table": [[98, 3, 1, "", "__init__"], [98, 3, 1, "", "_grammar"], [98, 3, 1, "", "_string"], [98, 3, 1, "", "_validate"], [98, 3, 1, "", "convert"], [98, 3, 1, "", "grammar_name"], [98, 3, 1, "", "is_the_same_value"], [98, 4, 1, "", "name_in_grammar"], [98, 3, 1, "", "number_of_collumns"], [98, 5, 1, "", "numpy_type"], [98, 3, 1, "", "zero_data"]], "ase2sprkkr.common.grammar_types.TypedGrammarType": [[99, 3, 1, "", "__init__"], [99, 3, 1, "", "_validate"], [99, 4, 1, "", "allowed_types"], [99, 3, 1, "", "convert"], [99, 4, 1, "", "datatype"], [99, 4, 1, "", "datatype_name"]], "ase2sprkkr.common.grammar_types.Unsigned": [[100, 4, 1, "", "I"], [100, 3, 1, "", "__init__"], [100, 4, 1, "", "_grammar"], [100, 3, 1, "", "_validate"], [100, 4, 1, "", "datatype_name"], [100, 3, 1, "", "grammar_name"], [100, 4, 1, "", "numpy_type"]], "ase2sprkkr.common.init_tests.TestCase": [[126, 3, 1, "", "__init__"], [126, 3, 1, "", "assertAlmostEqual"], [126, 3, 1, "", "assertAsyncEqual"], [126, 3, 1, "", "assertAsyncRaises"], [126, 3, 1, "", "runAsync"], [126, 3, 1, "", "setUp"]], "ase2sprkkr.common.init_tests": [[127, 1, 1, "", "patch_package"]], "ase2sprkkr.common.misc": [[129, 2, 1, "", "OrderedDict"], [130, 1, 1, "", "as_integer"], [131, 1, 1, "", "copy_list"], [132, 1, 1, "", "njit"], [133, 1, 1, "", "numpy_index"]], "ase2sprkkr.common.misc.OrderedDict": [[129, 3, 1, "", "__init__"], [129, 3, 1, "", "first_item"], [129, 3, 1, "", "index"]], "ase2sprkkr.common.no_output": [[135, 2, 1, "", "NoOutput"]], "ase2sprkkr.common.no_output.NoOutput": [[135, 3, 1, "", "__init__"]], "ase2sprkkr.common.options": [[137, 2, 1, "", "CustomOption"], [138, 2, 1, "", "DangerousValue"], [139, 2, 1, "", "Option"]], "ase2sprkkr.common.options.CustomOption": [[137, 3, 1, "", "__init__"], [137, 3, 1, "", "factory"], [137, 3, 1, "", "remove"]], "ase2sprkkr.common.options.DangerousValue": [[138, 3, 1, "", "__init__"], [138, 3, 1, "", "write_value"]], "ase2sprkkr.common.options.Option": [[139, 3, 1, "", "__init__"], [139, 3, 1, "", "_check_array_access"], [139, 3, 1, "", "_create_dangerous_value"], [139, 3, 1, "", "_find_value"], [139, 3, 1, "", "_getitem"], [139, 3, 1, "", "_pack_value"], [139, 3, 1, "", "_post_set"], [139, 3, 1, "", "_save_to_file"], [139, 3, 1, "", "_set_item"], [139, 3, 1, "", "_unpack_value"], [139, 3, 1, "", "as_dict"], [139, 3, 1, "", "clear"], [139, 3, 1, "", "clear_result"], [139, 5, 1, "", "default_value"], [139, 3, 1, "", "get"], [139, 3, 1, "", "get_path"], [139, 3, 1, "", "is_changed"], [139, 3, 1, "", "is_dangerous"], [139, 3, 1, "", "is_it_the_default_value"], [139, 5, 1, "", "name"], [139, 5, 1, "", "result"], [139, 3, 1, "", "set"], [139, 3, 1, "", "set_dangerous"], [139, 3, 1, "", "validate"], [139, 3, 1, "", "value_and_changed"]], "ase2sprkkr.common.process_output_reader": [[141, 2, 1, "", "AsyncioFileReader"], [142, 2, 1, "", "BaseProcessOutputReader"]], "ase2sprkkr.common.process_output_reader.AsyncioFileReader": [[141, 3, 1, "", "__init__"], [141, 3, 1, "", "close"], [141, 3, 1, "", "readline"], [141, 3, 1, "", "readuntil"], [141, 3, 1, "", "separator_shifts"]], "ase2sprkkr.common.process_output_reader.BaseProcessOutputReader": [[142, 3, 1, "", "__init__"], [142, 3, 1, "", "read_error"], [142, 3, 1, "", "read_from_file"], [142, 3, 1, "", "read_output"], [142, 3, 1, "", "result"], [142, 3, 1, "", "run"], [142, 3, 1, "", "run_subprocess"]], "ase2sprkkr.common.test": [[144, 0, 0, "-", "init_tests"], [146, 0, 0, "-", "test_common"], [148, 0, 0, "-", "test_grammar_types"]], "ase2sprkkr.common.test.init_tests": [[145, 2, 1, "", "TestCase"]], "ase2sprkkr.common.test.init_tests.TestCase": [[145, 3, 1, "", "__init__"], [145, 3, 1, "", "assertAlmostEqual"], [145, 3, 1, "", "assertAsyncEqual"], [145, 3, 1, "", "assertAsyncRaises"], [145, 3, 1, "", "runAsync"], [145, 3, 1, "", "setUp"]], "ase2sprkkr.common.test.test_common": [[147, 2, 1, "", "CommonTest"]], "ase2sprkkr.common.test.test_common.CommonTest": [[147, 3, 1, "", "__init__"], [147, 3, 1, "", "test_asyncio_file_reader"], [147, 3, 1, "", "test_common"]], "ase2sprkkr.common.test.test_grammar_types": [[149, 2, 1, "", "GrammarTest"]], "ase2sprkkr.common.test.test_grammar_types.GrammarTest": [[149, 3, 1, "", "__init__"], [149, 3, 1, "", "_test_types"], [149, 3, 1, "", "test_is_the_same_value"], [149, 3, 1, "", "test_types"]], "ase2sprkkr.common.unique_values": [[151, 2, 1, "", "UniqueValuesMapping"]], "ase2sprkkr.common.unique_values.UniqueValuesMapping": [[151, 3, 1, "", "__init__"], [151, 3, 1, "", "_create_mapping"], [151, 3, 1, "", "are_equivalent"], [151, 3, 1, "", "from_values"], [151, 3, 1, "", "indexes"], [151, 3, 1, "", "is_equivalent_to"], [151, 3, 1, "", "iter_unique"], [151, 3, 1, "", "len_of_unique"], [151, 4, 1, "", "mapping"], [151, 3, 1, "", "merge"], [151, 3, 1, "", "normalize"], [151, 4, 1, "", "value_to_class_id"]], "ase2sprkkr.input_parameters": [[153, 0, 0, "-", "definitions"], [174, 0, 0, "-", "input_parameters"], [178, 0, 0, "-", "input_parameters_definitions"], [182, 0, 0, "-", "test"]], "ase2sprkkr.input_parameters.definitions": [[154, 0, 0, "-", "arpes"], [156, 0, 0, "-", "dos"], [158, 0, 0, "-", "phagen"], [160, 0, 0, "-", "scf"], [162, 0, 0, "-", "sections"]], "ase2sprkkr.input_parameters.definitions.arpes": [[155, 6, 1, "", "input_parameters"]], "ase2sprkkr.input_parameters.definitions.dos": [[157, 6, 1, "", "input_parameters"]], "ase2sprkkr.input_parameters.definitions.phagen": [[159, 6, 1, "", "input_parameters"]], "ase2sprkkr.input_parameters.definitions.scf": [[161, 6, 1, "", "input_parameters"]], "ase2sprkkr.input_parameters.definitions.sections": [[163, 1, 1, "", "CONTROL"], [164, 6, 1, "", "CPA"], [165, 6, 1, "", "ENERGY"], [166, 6, 1, "", "MODE"], [167, 6, 1, "", "SCF"], [168, 6, 1, "", "SITES"], [169, 6, 1, "", "STRCONST"], [170, 1, 1, "", "TASK"], [171, 6, 1, "", "TAU"], [172, 2, 1, "", "TauSection"], [173, 1, 1, "", "_nktab_value"]], "ase2sprkkr.input_parameters.definitions.sections.TauSection": [[172, 3, 1, "", "__init__"], [172, 3, 1, "", "set_from_atoms"]], "ase2sprkkr.input_parameters.input_parameters": [[175, 2, 1, "", "InputParameters"], [176, 2, 1, "", "InputSection"], [177, 1, 1, "", "resolve_executable_postfix"]], "ase2sprkkr.input_parameters.input_parameters.InputParameters": [[175, 3, 1, "", "__init__"], [175, 4, 1, "", "_default_mpi_runner"], [175, 3, 1, "", "calculate"], [175, 3, 1, "", "change_task"], [175, 3, 1, "", "create"], [175, 3, 1, "", "create_input_parameters"], [175, 3, 1, "", "default_mpi_runner"], [175, 3, 1, "", "default_parameters"], [175, 4, 1, "", "definitions"], [175, 3, 1, "", "executable_params"], [175, 3, 1, "", "from_file"], [175, 3, 1, "", "is_it_a_input_parameters_name"], [175, 3, 1, "", "is_mpi"], [175, 3, 1, "", "mpi_runner"], [175, 3, 1, "", "read_output_from_file"], [175, 3, 1, "", "result_reader"], [175, 3, 1, "", "run_process"], [175, 3, 1, "", "set_option"], [175, 3, 1, "", "task_definition"], [175, 5, 1, "", "task_name"]], "ase2sprkkr.input_parameters.input_parameters.InputSection": [[176, 3, 1, "", "__init__"]], "ase2sprkkr.input_parameters.input_parameters_definitions": [[179, 2, 1, "", "InputParametersDefinition"], [180, 2, 1, "", "InputSectionDefinition"], [181, 2, 1, "", "InputValueDefinition"]], "ase2sprkkr.input_parameters.input_parameters_definitions.InputParametersDefinition": [[179, 3, 1, "", "__init__"], [179, 3, 1, "", "_generic_info"], [179, 4, 1, "", "child_class"], [179, 4, 1, "", "configuration_type_name"], [179, 3, 1, "", "custom_class"], [179, 3, 1, "", "custom_value_grammar"], [179, 4, 1, "", "delimiter"], [179, 4, 1, "", "grammar_of_delimiter"], [179, 4, 1, "", "result_class"]], "ase2sprkkr.input_parameters.input_parameters_definitions.InputSectionDefinition": [[180, 3, 1, "", "__init__"], [180, 4, 1, "", "_copy_args"], [180, 4, 1, "", "child_class"], [180, 3, 1, "", "custom_class"], [180, 4, 1, "", "delimiter"], [180, 4, 1, "", "do_not_skip_whitespaces_before_name"], [180, 4, 1, "", "grammar_of_delimiter"], [180, 4, 1, "", "result_class"]], "ase2sprkkr.input_parameters.input_parameters_definitions.InputValueDefinition": [[181, 3, 1, "", "__init__"], [181, 4, 1, "", "_copy_args"], [181, 4, 1, "", "grammar_of_delimiter"], [181, 4, 1, "", "name_value_delimiter"], [181, 4, 1, "", "prefix"], [181, 4, 1, "", "type_from_type_map"], [181, 4, 1, "", "type_of_dangerous"]], "ase2sprkkr.input_parameters.test": [[183, 0, 0, "-", "init_tests"], [185, 0, 0, "-", "test_definitions"], [187, 0, 0, "-", "test_input_parameters"]], "ase2sprkkr.input_parameters.test.init_tests": [[184, 2, 1, "", "TestCase"]], "ase2sprkkr.input_parameters.test.init_tests.TestCase": [[184, 3, 1, "", "__init__"], [184, 3, 1, "", "assertAlmostEqual"], [184, 3, 1, "", "assertAsyncEqual"], [184, 3, 1, "", "assertAsyncRaises"], [184, 3, 1, "", "runAsync"], [184, 3, 1, "", "setUp"]], "ase2sprkkr.input_parameters.test.test_definitions": [[186, 2, 1, "", "TestDefinitions"]], "ase2sprkkr.input_parameters.test.test_definitions.TestDefinitions": [[186, 3, 1, "", "__init__"], [186, 3, 1, "", "change_task"], [186, 3, 1, "", "test_definitions"]], "ase2sprkkr.input_parameters.test.test_input_parameters": [[188, 2, 1, "", "TestInputParameters"]], "ase2sprkkr.input_parameters.test.test_input_parameters.TestInputParameters": [[188, 3, 1, "", "__init__"], [188, 3, 1, "", "test_custom_value"], [188, 3, 1, "", "test_dangerous_value"], [188, 3, 1, "", "test_input_parameters_definition"], [188, 3, 1, "", "test_section_delimiter_value"]], "ase2sprkkr.outputs": [[190, 0, 0, "-", "output_definitions"], [195, 0, 0, "-", "readers"], [203, 0, 0, "-", "task_result"], [206, 0, 0, "-", "test"]], "ase2sprkkr.outputs.output_definitions": [[191, 2, 1, "", "OutputNonameValueDefinition"], [192, 2, 1, "", "OutputSectionDefinition"], [193, 2, 1, "", "OutputValueDefinition"], [194, 2, 1, "", "OutputValueEqualDefinition"]], "ase2sprkkr.outputs.output_definitions.OutputNonameValueDefinition": [[191, 3, 1, "", "__init__"], [191, 4, 1, "", "name_in_grammar"]], "ase2sprkkr.outputs.output_definitions.OutputSectionDefinition": [[192, 3, 1, "", "__init__"], [192, 4, 1, "", "child_class"], [192, 4, 1, "", "custom_class"], [192, 4, 1, "", "delimiter"], [192, 4, 1, "", "force_order"], [192, 4, 1, "", "grammar_of_delimiter"], [192, 4, 1, "", "name_in_grammar"]], "ase2sprkkr.outputs.output_definitions.OutputValueDefinition": [[193, 3, 1, "", "__init__"], [193, 4, 1, "", "grammar_of_delimiter"], [193, 4, 1, "", "prefix"]], "ase2sprkkr.outputs.output_definitions.OutputValueEqualDefinition": [[194, 3, 1, "", "__init__"], [194, 4, 1, "", "grammar_of_delimiter"], [194, 4, 1, "", "name_value_delimiter"]], "ase2sprkkr.outputs.readers": [[196, 0, 0, "-", "default"], [199, 0, 0, "-", "scf"]], "ase2sprkkr.outputs.readers.default": [[197, 2, 1, "", "DefaultOutputReader"], [198, 2, 1, "", "DefaultResult"]], "ase2sprkkr.outputs.readers.default.DefaultOutputReader": [[197, 3, 1, "", "__init__"], [197, 3, 1, "", "read_output"], [197, 4, 1, "", "result_class"]], "ase2sprkkr.outputs.readers.default.DefaultResult": [[198, 3, 1, "", "__init__"]], "ase2sprkkr.outputs.readers.scf": [[200, 2, 1, "", "RealOrStars"], [201, 2, 1, "", "ScfOutputReader"], [202, 2, 1, "", "ScfResult"]], "ase2sprkkr.outputs.readers.scf.RealOrStars": [[200, 3, 1, "", "__init__"], [200, 4, 1, "", "_grammar"]], "ase2sprkkr.outputs.readers.scf.ScfOutputReader": [[201, 3, 1, "", "__init__"], [201, 4, 1, "", "atoms_conf_type"], [201, 3, 1, "", "read_output"], [201, 4, 1, "", "result_class"]], "ase2sprkkr.outputs.readers.scf.ScfResult": [[202, 3, 1, "", "__init__"], [202, 5, 1, "", "calculator"], [202, 5, 1, "", "converged"], [202, 5, 1, "", "energy"], [202, 3, 1, "", "iteration_values"], [202, 5, 1, "", "iterations"], [202, 5, 1, "", "last_iteration"], [202, 3, 1, "", "plot"], [202, 5, 1, "", "potential"], [202, 5, 1, "", "potential_filename"]], "ase2sprkkr.outputs.task_result": [[204, 2, 1, "", "OutputReader"], [205, 2, 1, "", "TaskResult"]], "ase2sprkkr.outputs.task_result.OutputReader": [[204, 3, 1, "", "__init__"], [204, 4, 1, "", "calculator"], [204, 4, 1, "", "directory"], [204, 4, 1, "", "input_parameters"], [204, 3, 1, "", "result"]], "ase2sprkkr.outputs.task_result.TaskResult": [[205, 3, 1, "", "__init__"], [205, 5, 1, "", "atoms"]], "ase2sprkkr.outputs.test": [[207, 0, 0, "-", "init_tests"], [209, 0, 0, "-", "test_output"]], "ase2sprkkr.outputs.test.init_tests": [[208, 2, 1, "", "TestCase"]], "ase2sprkkr.outputs.test.init_tests.TestCase": [[208, 3, 1, "", "__init__"], [208, 3, 1, "", "assertAlmostEqual"], [208, 3, 1, "", "assertAsyncEqual"], [208, 3, 1, "", "assertAsyncRaises"], [208, 3, 1, "", "runAsync"], [208, 3, 1, "", "setUp"]], "ase2sprkkr.outputs.test.test_output": [[210, 2, 1, "", "TestOutput"]], "ase2sprkkr.outputs.test.test_output.TestOutput": [[210, 3, 1, "", "__init__"], [210, 3, 1, "", "test_output"]], "ase2sprkkr.physics": [[212, 0, 0, "-", "lattice_data"], [216, 0, 0, "-", "winger_seitz_radii"]], "ase2sprkkr.physics.lattice_data": [[213, 2, 1, "", "LatticeData"], [214, 2, 1, "", "Pearson"], [215, 6, 1, "", "international_numbers_to_AP"]], "ase2sprkkr.physics.lattice_data.LatticeData": [[213, 3, 1, "", "__init__"], [213, 5, 1, "", "bravais_number"], [213, 5, 1, "", "shoenflies_symbol"]], "ase2sprkkr.physics.lattice_data.Pearson": [[214, 3, 1, "", "__init__"], [214, 3, 1, "", "from_symbol"], [214, 3, 1, "", "normalize_symbol"], [214, 4, 1, "", "pearson"], [214, 4, 1, "", "pearsons"], [214, 3, 1, "", "xband_data"]], "ase2sprkkr.physics.winger_seitz_radii": [[217, 6, 1, "", "winger_seitz_radii"]], "ase2sprkkr.potentials": [[219, 0, 0, "-", "custom_potential_section"], [224, 0, 0, "-", "definitions"], [257, 0, 0, "-", "potential_definitions"], [263, 0, 0, "-", "potential_sections"], [267, 0, 0, "-", "potentials"], [269, 0, 0, "-", "test"]], "ase2sprkkr.potentials.custom_potential_section": [[220, 2, 1, "", "CustomPotentialSection"], [221, 2, 1, "", "CustomPotentialSectionDefinition"], [222, 2, 1, "", "CustomSectionToken"], [223, 2, 1, "", "SectionString"]], "ase2sprkkr.potentials.custom_potential_section.CustomPotentialSection": [[220, 3, 1, "", "__init__"], [220, 3, 1, "", "_depends_on"], [220, 3, 1, "", "_set_from_atoms"], [220, 3, 1, "", "_update_atoms"], [220, 3, 1, "", "reset"]], "ase2sprkkr.potentials.custom_potential_section.CustomPotentialSectionDefinition": [[221, 3, 1, "", "__init__"], [221, 4, 1, "", "mandatory"], [221, 4, 1, "", "name_value_delimiter"], [221, 4, 1, "", "prefix"]], "ase2sprkkr.potentials.custom_potential_section.CustomSectionToken": [[222, 3, 1, "", "__init__"], [222, 4, 1, "", "_abc_impl"], [222, 4, 1, "", "name"], [222, 3, 1, "", "parseImpl"], [222, 4, 1, "", "pattern"]], "ase2sprkkr.potentials.custom_potential_section.SectionString": [[223, 4, 1, "", "I"], [223, 3, 1, "", "__init__"], [223, 4, 1, "", "_grammar"], [223, 4, 1, "", "delimiter_pattern"], [223, 3, 1, "", "grammar_name"], [223, 4, 1, "", "grammar_of_delimiter"], [223, 3, 1, "", "write"]], "ase2sprkkr.potentials.definitions": [[225, 0, 0, "-", "potential"], [227, 0, 0, "-", "sections"]], "ase2sprkkr.potentials.definitions.potential": [[226, 6, 1, "", "potential_definition"]], "ase2sprkkr.potentials.definitions.sections": [[228, 1, 1, "", "_sections"], [229, 0, 0, "-", "global_system_parameter"], [233, 0, 0, "-", "lattice"], [237, 0, 0, "-", "mesh_information"], [241, 0, 0, "-", "occupation"], [245, 0, 0, "-", "reference_system"], [249, 0, 0, "-", "sites"], [253, 0, 0, "-", "types"]], "ase2sprkkr.potentials.definitions.sections.global_system_parameter": [[230, 2, 1, "", "GlobalSystemParameter"], [231, 2, 1, "", "GlobalSystemParameterDefinition"], [232, 4, 1, "", "section"]], "ase2sprkkr.potentials.definitions.sections.global_system_parameter.GlobalSystemParameter": [[230, 3, 1, "", "__init__"], [230, 3, 1, "", "_set_from_atoms"]], "ase2sprkkr.potentials.definitions.sections.global_system_parameter.GlobalSystemParameterDefinition": [[231, 3, 1, "", "__init__"], [231, 4, 1, "", "result_class"]], "ase2sprkkr.potentials.definitions.sections.lattice": [[234, 2, 1, "", "LatticeSection"], [235, 2, 1, "", "LatticeSectionDefinition"], [236, 4, 1, "", "section"]], "ase2sprkkr.potentials.definitions.sections.lattice.LatticeSection": [[234, 3, 1, "", "__init__"], [234, 3, 1, "", "_set_from_atoms"], [234, 3, 1, "", "_update_atoms"]], "ase2sprkkr.potentials.definitions.sections.lattice.LatticeSectionDefinition": [[235, 3, 1, "", "__init__"], [235, 4, 1, "", "result_class"], [235, 3, 1, "", "validate"]], "ase2sprkkr.potentials.definitions.sections.mesh_information": [[238, 2, 1, "", "MeshInformationSection"], [239, 2, 1, "", "MeshInformationSectionDefinition"], [240, 4, 1, "", "section"]], "ase2sprkkr.potentials.definitions.sections.mesh_information.MeshInformationSection": [[238, 3, 1, "", "__init__"], [238, 4, 1, "", "_value_class"], [238, 4, 1, "", "_value_name"]], "ase2sprkkr.potentials.definitions.sections.mesh_information.MeshInformationSectionDefinition": [[239, 3, 1, "", "__init__"], [239, 4, 1, "", "result_class"]], "ase2sprkkr.potentials.definitions.sections.occupation": [[242, 2, 1, "", "OccupationSection"], [243, 2, 1, "", "OccupationSectionDefinition"], [244, 4, 1, "", "section"]], "ase2sprkkr.potentials.definitions.sections.occupation.OccupationSection": [[242, 3, 1, "", "__init__"], [242, 3, 1, "", "_set_from_atoms"], [242, 3, 1, "", "_update_atoms"]], "ase2sprkkr.potentials.definitions.sections.occupation.OccupationSectionDefinition": [[243, 3, 1, "", "__init__"], [243, 3, 1, "", "depends_on"], [243, 4, 1, "", "result_class"]], "ase2sprkkr.potentials.definitions.sections.reference_system": [[246, 2, 1, "", "ReferenceSystemSection"], [247, 2, 1, "", "ReferenceSystemSectionDefinition"], [248, 4, 1, "", "section"]], "ase2sprkkr.potentials.definitions.sections.reference_system.ReferenceSystemSection": [[246, 3, 1, "", "__init__"], [246, 3, 1, "", "_set_from_atoms"], [246, 4, 1, "", "_value_class"], [246, 4, 1, "", "_value_name"]], "ase2sprkkr.potentials.definitions.sections.reference_system.ReferenceSystemSectionDefinition": [[247, 3, 1, "", "__init__"], [247, 4, 1, "", "result_class"], [247, 3, 1, "", "validate"]], "ase2sprkkr.potentials.definitions.sections.sites": [[250, 2, 1, "", "SitesSection"], [251, 2, 1, "", "SitesSectionDefinition"], [252, 4, 1, "", "section"]], "ase2sprkkr.potentials.definitions.sections.sites.SitesSection": [[250, 3, 1, "", "__init__"], [250, 3, 1, "", "_set_from_atoms"], [250, 3, 1, "", "_update_atoms"]], "ase2sprkkr.potentials.definitions.sections.sites.SitesSectionDefinition": [[251, 3, 1, "", "__init__"], [251, 4, 1, "", "result_class"]], "ase2sprkkr.potentials.definitions.sections.types": [[254, 2, 1, "", "TypesSection"], [255, 2, 1, "", "TypesSectionDefinition"], [256, 4, 1, "", "section"]], "ase2sprkkr.potentials.definitions.sections.types.TypesSection": [[254, 3, 1, "", "__init__"], [254, 4, 1, "", "_value_class"], [254, 4, 1, "", "_value_name"]], "ase2sprkkr.potentials.definitions.sections.types.TypesSectionDefinition": [[255, 3, 1, "", "__init__"], [255, 4, 1, "", "result_class"]], "ase2sprkkr.potentials.potential_definitions": [[258, 2, 1, "", "ASEArraySectionDefinition"], [259, 2, 1, "", "PotSectionDefinition"], [260, 2, 1, "", "PotValueDefinition"], [261, 2, 1, "", "PotentialDefinition"], [262, 2, 1, "", "Separator"]], "ase2sprkkr.potentials.potential_definitions.ASEArraySectionDefinition": [[258, 3, 1, "", "__init__"], [258, 3, 1, "", "depends_on"], [258, 4, 1, "", "result_class"]], "ase2sprkkr.potentials.potential_definitions.PotSectionDefinition": [[259, 3, 1, "", "__init__"], [259, 4, 1, "", "child_class"], [259, 3, 1, "", "custom_class"], [259, 4, 1, "", "delimiter"], [259, 3, 1, "", "depends_on"], [259, 4, 1, "", "force_order"], [259, 3, 1, "", "grammar_of_delimiter"], [259, 4, 1, "", "result_class"], [259, 4, 1, "", "value_name_format"]], "ase2sprkkr.potentials.potential_definitions.PotValueDefinition": [[260, 3, 1, "", "__init__"], [260, 4, 1, "", "grammar_of_delimiter"], [260, 4, 1, "", "name_value_delimiter"], [260, 4, 1, "", "prefix"], [260, 4, 1, "", "type_of_dangerous"]], "ase2sprkkr.potentials.potential_definitions.PotentialDefinition": [[261, 3, 1, "", "__init__"], [261, 3, 1, "", "_generic_info"], [261, 4, 1, "", "child_class"], [261, 4, 1, "", "configuration_type_name"], [261, 4, 1, "", "custom_class"], [261, 4, 1, "", "custom_name_characters"], [261, 3, 1, "", "custom_value_grammar"], [261, 4, 1, "", "delimiter"], [261, 4, 1, "", "force_order"], [261, 4, 1, "", "grammar_of_delimiter"], [261, 4, 1, "", "result_class"]], "ase2sprkkr.potentials.potential_definitions.Separator": [[262, 3, 1, "", "__init__"], [262, 4, 1, "", "_counter"]], "ase2sprkkr.potentials.potential_sections": [[264, 2, 1, "", "ASEArraySection"], [265, 2, 1, "", "PotentialSection"], [266, 2, 1, "", "UniqueListSection"]], "ase2sprkkr.potentials.potential_sections.ASEArraySection": [[264, 3, 1, "", "__init__"], [264, 3, 1, "", "_depends_on"], [264, 3, 1, "", "_set_from_atoms"], [264, 3, 1, "", "_update_atoms"], [264, 3, 1, "", "has_any_value"]], "ase2sprkkr.potentials.potential_sections.PotentialSection": [[265, 3, 1, "", "__init__"], [265, 3, 1, "", "_depends_on"], [265, 3, 1, "", "_set_from_atoms"], [265, 3, 1, "", "_update_atoms"], [265, 3, 1, "", "reset"]], "ase2sprkkr.potentials.potential_sections.UniqueListSection": [[266, 3, 1, "", "__init__"], [266, 3, 1, "", "_set_from_atoms"], [266, 3, 1, "", "_update_atoms"], [266, 4, 1, "", "_value_class"], [266, 4, 1, "", "_value_name"]], "ase2sprkkr.potentials.potentials": [[268, 2, 1, "", "Potential"]], "ase2sprkkr.potentials.potentials.Potential": [[268, 3, 1, "", "__init__"], [268, 5, 1, "", "atoms"], [268, 3, 1, "", "from_atoms"], [268, 3, 1, "", "from_file"], [268, 3, 1, "", "from_string"], [268, 3, 1, "", "make_complete"], [268, 4, 1, "", "potential_definition"], [268, 3, 1, "", "read_from_file"], [268, 3, 1, "", "reset"], [268, 3, 1, "", "set_from_atoms"], [268, 3, 1, "", "update_atoms"]], "ase2sprkkr.potentials.test": [[270, 0, 0, "-", "init_tests"], [272, 0, 0, "-", "test_2D"], [274, 0, 0, "-", "test_custom_section"], [276, 0, 0, "-", "test_potential"], [278, 0, 0, "-", "test_structure"]], "ase2sprkkr.potentials.test.init_tests": [[271, 2, 1, "", "TestCase"]], "ase2sprkkr.potentials.test.init_tests.TestCase": [[271, 3, 1, "", "__init__"], [271, 3, 1, "", "assertAlmostEqual"], [271, 3, 1, "", "assertAsyncEqual"], [271, 3, 1, "", "assertAsyncRaises"], [271, 3, 1, "", "runAsync"], [271, 3, 1, "", "setUp"]], "ase2sprkkr.potentials.test.test_2D": [[273, 2, 1, "", "Test2DPotential"]], "ase2sprkkr.potentials.test.test_2D.Test2DPotential": [[273, 3, 1, "", "__init__"], [273, 3, 1, "", "test"]], "ase2sprkkr.potentials.test.test_custom_section": [[275, 2, 1, "", "TestCustomSection"]], "ase2sprkkr.potentials.test.test_custom_section.TestCustomSection": [[275, 3, 1, "", "__init__"], [275, 3, 1, "", "assertNone"], [275, 3, 1, "", "test_custom_section"]], "ase2sprkkr.potentials.test.test_potential": [[277, 2, 1, "", "TestPotential"]], "ase2sprkkr.potentials.test.test_potential.TestPotential": [[277, 3, 1, "", "__init__"], [277, 3, 1, "", "test_2D"], [277, 3, 1, "", "test_examples"], [277, 3, 1, "", "test_grammar"], [277, 3, 1, "", "test_potential"], [277, 3, 1, "", "test_reset"], [277, 3, 1, "", "test_sequence"]], "ase2sprkkr.potentials.test.test_structure": [[279, 2, 1, "", "TestStructure"]], "ase2sprkkr.potentials.test.test_structure.TestStructure": [[279, 3, 1, "", "__init__"], [279, 3, 1, "", "test_lattice"]], "ase2sprkkr.sprkkr": [[281, 0, 0, "-", "atomic_types"], [283, 0, 0, "-", "atoms_region"], [285, 0, 0, "-", "build"], [289, 0, 0, "-", "calculator"], [292, 0, 0, "-", "configuration"], [302, 0, 0, "-", "io_data"], [307, 0, 0, "-", "occupations"], [309, 0, 0, "-", "radial_meshes"], [312, 0, 0, "-", "reference_systems"], [314, 0, 0, "-", "sites"], [316, 0, 0, "-", "sprkkr_atoms"], [318, 0, 0, "-", "sprkkr_grammar_types"], [321, 0, 0, "-", "structure"], [326, 0, 0, "-", "sysfile"], [329, 0, 0, "-", "test"]], "ase2sprkkr.sprkkr.atomic_types": [[282, 2, 1, "", "AtomicType"]], "ase2sprkkr.sprkkr.atomic_types.AtomicType": [[282, 3, 1, "", "__init__"], [282, 3, 1, "", "_check_n_electrons"], [282, 3, 1, "", "_clear_symbol_cache"], [282, 4, 1, "", "_mendeleev_module"], [282, 5, 1, "", "atomic_number"], [282, 3, 1, "", "copy"], [282, 3, 1, "", "is_vacuum"], [282, 5, 1, "", "mendeleev"], [282, 5, 1, "", "n_core"], [282, 5, 1, "", "n_electrons"], [282, 5, 1, "", "n_semicore"], [282, 5, 1, "", "n_valence"], [282, 5, 1, "", "symbol"], [282, 3, 1, "", "to_atomic_type"], [282, 3, 1, "", "to_tuple"]], "ase2sprkkr.sprkkr.atoms_region": [[284, 2, 1, "", "AtomsRegion"]], "ase2sprkkr.sprkkr.atoms_region.AtomsRegion": [[284, 3, 1, "", "__init__"], [284, 3, 1, "", "_clear_cache"], [284, 5, 1, "", "cell"], [284, 3, 1, "", "create_atoms"], [284, 3, 1, "", "from_atoms"], [284, 5, 1, "", "ids"], [284, 3, 1, "", "only_vacuum_atoms"], [284, 5, 1, "", "pbc"], [284, 5, 1, "", "positions"], [284, 3, 1, "", "set_atoms"], [284, 5, 1, "", "set_of_ids"], [284, 3, 1, "", "shared_ids_with"], [284, 5, 1, "", "slice"], [284, 5, 1, "", "symbols"]], "ase2sprkkr.sprkkr.build": [[286, 1, 1, "", "semiinfinite_system"], [287, 1, 1, "", "stack"], [288, 1, 1, "", "vacuum_like"]], "ase2sprkkr.sprkkr.calculator": [[290, 2, 1, "", "FilenameTemplator"], [291, 2, 1, "", "SPRKKR"]], "ase2sprkkr.sprkkr.calculator.FilenameTemplator": [[290, 3, 1, "", "__init__"], [290, 3, 1, "", "_get"], [290, 4, 1, "", "replacements"]], "ase2sprkkr.sprkkr.calculator.SPRKKR": [[291, 3, 1, "", "__init__"], [291, 4, 1, "", "_abc_impl"], [291, 3, 1, "", "_advance_counter"], [291, 3, 1, "", "_open_file"], [291, 5, 1, "", "atoms"], [291, 3, 1, "", "calculate"], [291, 3, 1, "", "copy_with_potential"], [291, 4, 1, "", "empty_spheres"], [291, 4, 1, "", "executable_postfix"], [291, 3, 1, "", "get"], [291, 4, 1, "", "implemented_properties"], [291, 4, 1, "", "input_file"], [291, 5, 1, "", "input_parameters"], [291, 3, 1, "", "kkrch"], [291, 3, 1, "", "kkrgen"], [291, 3, 1, "", "kkrspec"], [291, 4, 1, "", "mpi"], [291, 4, 1, "", "output_file"], [291, 3, 1, "", "phagen"], [291, 5, 1, "", "potential"], [291, 4, 1, "", "potential_file"], [291, 5, 1, "", "potential_object"], [291, 3, 1, "", "run"], [291, 3, 1, "", "run_xband"], [291, 3, 1, "", "save_input"], [291, 3, 1, "", "scf"], [291, 3, 1, "", "set"]], "ase2sprkkr.sprkkr.configuration": [[293, 2, 1, "", "ConfigurationFile"], [294, 2, 1, "", "ConfigurationFileDefinition"], [295, 2, 1, "", "ConfigurationSection"], [296, 2, 1, "", "ConfigurationSectionDefinition"], [297, 2, 1, "", "ConfigurationSectionTrait"], [298, 2, 1, "", "ConfigurationValue"], [299, 2, 1, "", "ConfigurationValueDefinition"], [300, 2, 1, "", "CustomConfigurationSection"], [301, 2, 1, "", "CustomConfigurationValue"]], "ase2sprkkr.sprkkr.configuration.ConfigurationFile": [[293, 3, 1, "", "__init__"], [293, 3, 1, "", "save_to_file"]], "ase2sprkkr.sprkkr.configuration.ConfigurationFileDefinition": [[294, 3, 1, "", "__init__"]], "ase2sprkkr.sprkkr.configuration.ConfigurationSection": [[295, 3, 1, "", "__init__"]], "ase2sprkkr.sprkkr.configuration.ConfigurationSectionDefinition": [[296, 3, 1, "", "__init__"], [296, 4, 1, "", "result_class"]], "ase2sprkkr.sprkkr.configuration.ConfigurationSectionTrait": [[297, 3, 1, "", "__init__"], [297, 3, 1, "", "_set_from_atoms"], [297, 3, 1, "", "set_from_atoms"]], "ase2sprkkr.sprkkr.configuration.ConfigurationValue": [[298, 3, 1, "", "__init__"], [298, 3, 1, "", "_set_from_atoms"]], "ase2sprkkr.sprkkr.configuration.ConfigurationValueDefinition": [[299, 3, 1, "", "__init__"], [299, 5, 1, "", "_set_from_atoms"], [299, 4, 1, "", "result_class"]], "ase2sprkkr.sprkkr.configuration.CustomConfigurationSection": [[300, 3, 1, "", "__init__"]], "ase2sprkkr.sprkkr.configuration.CustomConfigurationValue": [[301, 3, 1, "", "__init__"], [301, 3, 1, "", "_set_from_atoms"]], "ase2sprkkr.sprkkr.io_data": [[303, 2, 1, "", "BaseIoData"], [304, 2, 1, "", "ReadIoData"], [305, 2, 1, "", "WriteIoData"], [306, 1, 1, "", "unique_mapping"]], "ase2sprkkr.sprkkr.io_data.BaseIoData": [[303, 3, 1, "", "__init__"]], "ase2sprkkr.sprkkr.io_data.ReadIoData": [[304, 3, 1, "", "__init__"], [304, 3, 1, "", "apply_on_atoms"], [304, 3, 1, "", "update_atoms"]], "ase2sprkkr.sprkkr.io_data.WriteIoData": [[305, 3, 1, "", "__init__"], [305, 5, 1, "", "meshes"], [305, 5, 1, "", "reference_systems"], [305, 5, 1, "", "sites"], [305, 5, 1, "", "types"]], "ase2sprkkr.sprkkr.occupations": [[308, 2, 1, "", "Occupation"]], "ase2sprkkr.sprkkr.occupations.Occupation": [[308, 3, 1, "", "__init__"], [308, 3, 1, "", "_find_key"], [308, 3, 1, "", "_normalize"], [308, 3, 1, "", "_update_atoms"], [308, 3, 1, "", "add"], [308, 5, 1, "", "as_dict"], [308, 3, 1, "", "atomic_type"], [308, 3, 1, "", "atomic_types"], [308, 3, 1, "", "check"], [308, 3, 1, "", "clean"], [308, 3, 1, "", "copy"], [308, 3, 1, "", "items"], [308, 5, 1, "", "primary_atomic_number"], [308, 5, 1, "", "primary_atomic_type"], [308, 5, 1, "", "primary_symbol"], [308, 3, 1, "", "replace_type"], [308, 3, 1, "", "set"], [308, 3, 1, "", "to_occupation"], [308, 3, 1, "", "to_tuple"], [308, 5, 1, "", "total_occupation"]], "ase2sprkkr.sprkkr.radial_meshes": [[310, 2, 1, "", "ExponentialMesh"], [311, 2, 1, "", "Mesh"]], "ase2sprkkr.sprkkr.radial_meshes.ExponentialMesh": [[310, 3, 1, "", "__init__"], [310, 3, 1, "", "copy"], [310, 3, 1, "", "to_tuple"]], "ase2sprkkr.sprkkr.radial_meshes.Mesh": [[311, 3, 1, "", "__init__"], [311, 3, 1, "", "default"]], "ase2sprkkr.sprkkr.reference_systems": [[313, 2, 1, "", "ReferenceSystem"]], "ase2sprkkr.sprkkr.reference_systems.ReferenceSystem": [[313, 3, 1, "", "__init__"], [313, 3, 1, "", "copy"], [313, 3, 1, "", "default"], [313, 3, 1, "", "to_tuple"]], "ase2sprkkr.sprkkr.sites": [[315, 2, 1, "", "Site"]], "ase2sprkkr.sprkkr.sites.Site": [[315, 3, 1, "", "__init__"], [315, 5, 1, "", "atomic_types"], [315, 3, 1, "", "copy"], [315, 3, 1, "", "copy_sites"], [315, 3, 1, "", "index"], [315, 3, 1, "", "is_vacuum"], [315, 5, 1, "", "occupation"], [315, 5, 1, "", "primary_symbol"], [315, 3, 1, "", "reset"], [315, 3, 1, "", "update_atoms"]], "ase2sprkkr.sprkkr.sprkkr_atoms": [[317, 2, 1, "", "SPRKKRAtoms"]], "ase2sprkkr.sprkkr.sprkkr_atoms.SPRKKRAtoms": [[317, 3, 1, "", "__init__"], [317, 3, 1, "", "_init"], [317, 3, 1, "", "_init_sites"], [317, 3, 1, "", "add_region"], [317, 3, 1, "", "are_sites_inited"], [317, 3, 1, "", "cancel_sites_symmetry"], [317, 3, 1, "", "compute_sites_symmetry"], [317, 3, 1, "", "copy"], [317, 3, 1, "", "extend"], [317, 5, 1, "", "potential"], [317, 3, 1, "", "promote_ase_atoms"], [317, 5, 1, "", "regions"], [317, 3, 1, "", "remove_region"], [317, 3, 1, "", "reset_sprkkr_potential"], [317, 3, 1, "", "set_regions"], [317, 3, 1, "", "set_sites"], [317, 5, 1, "", "sites"], [317, 4, 1, "", "sites_array_name"], [317, 5, 1, "", "spacegroup_info"], [317, 5, 1, "", "symmetry"]], "ase2sprkkr.sprkkr.sprkkr_grammar_types": [[319, 2, 1, "", "AtomicType"], [320, 2, 1, "", "Site"]], "ase2sprkkr.sprkkr.sprkkr_grammar_types.AtomicType": [[319, 4, 1, "", "I"], [319, 3, 1, "", "__init__"], [319, 3, 1, "", "set_from_atoms"], [319, 4, 1, "", "type"]], "ase2sprkkr.sprkkr.sprkkr_grammar_types.Site": [[320, 4, 1, "", "I"], [320, 3, 1, "", "__init__"], [320, 3, 1, "", "set_from_atoms"], [320, 4, 1, "", "type"]], "ase2sprkkr.sprkkr.structure": [[322, 2, 1, "", "AtomData"], [323, 2, 1, "", "LayerData"], [324, 1, 1, "", "floatjm"], [325, 1, 1, "", "structure_file_to_atoms"]], "ase2sprkkr.sprkkr.structure.AtomData": [[322, 3, 1, "", "__init__"], [322, 3, 1, "", "from_text"], [322, 3, 1, "", "get_symbol"]], "ase2sprkkr.sprkkr.structure.LayerData": [[323, 3, 1, "", "__init__"]], "ase2sprkkr.sprkkr.sysfile": [[327, 1, 1, "", "sysfile_content"], [328, 1, 1, "", "write_sysfile"]], "ase2sprkkr.sprkkr.test": [[330, 0, 0, "-", "init_tests"], [332, 0, 0, "-", "test_build"], [334, 0, 0, "-", "test_calculator"], [336, 0, 0, "-", "test_sites"], [338, 0, 0, "-", "test_sprkkr_atoms"], [340, 0, 0, "-", "test_sysfile"]], "ase2sprkkr.sprkkr.test.init_tests": [[331, 2, 1, "", "TestCase"]], "ase2sprkkr.sprkkr.test.init_tests.TestCase": [[331, 3, 1, "", "__init__"], [331, 3, 1, "", "assertAlmostEqual"], [331, 3, 1, "", "assertAsyncEqual"], [331, 3, 1, "", "assertAsyncRaises"], [331, 3, 1, "", "runAsync"], [331, 3, 1, "", "setUp"]], "ase2sprkkr.sprkkr.test.test_build": [[333, 2, 1, "", "BuildTest"]], "ase2sprkkr.sprkkr.test.test_build.BuildTest": [[333, 3, 1, "", "__init__"], [333, 3, 1, "", "test"]], "ase2sprkkr.sprkkr.test.test_calculator": [[335, 2, 1, "", "CalculatorTest"]], "ase2sprkkr.sprkkr.test.test_calculator.CalculatorTest": [[335, 3, 1, "", "__init__"], [335, 4, 1, "", "_calc_args"], [335, 3, 1, "", "calc_args"], [335, 4, 1, "", "dirname"], [335, 4, 1, "", "print_output"], [335, 3, 1, "", "run_sprkkr"], [335, 3, 1, "", "test_2D"], [335, 3, 1, "", "test_calculator"], [335, 3, 1, "", "test_phagen"], [335, 3, 1, "", "test_run"]], "ase2sprkkr.sprkkr.test.test_sites": [[337, 2, 1, "", "SitesTest"]], "ase2sprkkr.sprkkr.test.test_sites.SitesTest": [[337, 3, 1, "", "__init__"], [337, 3, 1, "", "test_occupancy"], [337, 3, 1, "", "test_vacuum"]], "ase2sprkkr.sprkkr.test.test_sprkkr_atoms": [[339, 2, 1, "", "SPRKKRAtomsTest"]], "ase2sprkkr.sprkkr.test.test_sprkkr_atoms.SPRKKRAtomsTest": [[339, 3, 1, "", "__init__"], [339, 3, 1, "", "test_atoms"], [339, 3, 1, "", "test_extend"], [339, 3, 1, "", "test_occupancy"], [339, 3, 1, "", "test_symmetry"]], "ase2sprkkr.sprkkr.test.test_sysfile": [[341, 2, 1, "", "SysfileTest"]], "ase2sprkkr.sprkkr.test.test_sysfile.SysfileTest": [[341, 3, 1, "", "__init__"], [341, 3, 1, "", "test"]], "ase2sprkkr.tools": [[343, 0, 0, "-", "a2s_visualise_in_struct"], [345, 0, 0, "-", "test"]], "ase2sprkkr.tools.a2s_visualise_in_struct": [[344, 1, 1, "", "visualise"]], "ase2sprkkr.tools.test": [[346, 0, 0, "-", "init_tests"], [348, 0, 0, "-", "test_tools"]], "ase2sprkkr.tools.test.init_tests": [[347, 2, 1, "", "TestCase"]], "ase2sprkkr.tools.test.init_tests.TestCase": [[347, 3, 1, "", "__init__"], [347, 3, 1, "", "assertAlmostEqual"], [347, 3, 1, "", "assertAsyncEqual"], [347, 3, 1, "", "assertAsyncRaises"], [347, 3, 1, "", "runAsync"], [347, 3, 1, "", "setUp"]], "ase2sprkkr.tools.test.test_tools": [[349, 2, 1, "", "CommonTest"]], "ase2sprkkr.tools.test.test_tools.CommonTest": [[349, 3, 1, "", "__init__"], [349, 3, 1, "", "test"]]}, "objtypes": {"0": "py:module", "1": "py:function", "2": "py:class", "3": "py:method", "4": "py:attribute", "5": "py:property", "6": "py:data"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "function", "Python function"], "2": ["py", "class", "Python class"], "3": ["py", "method", "Python method"], "4": ["py", "attribute", "Python attribute"], "5": ["py", "property", "Python property"], "6": ["py", "data", "Python data"]}, "titleterms": {"ase2sprkkr": [0, 1, 351, 353, 354, 358], "useful": [0, 354, 356], "link": [0, 354, 356], "instal": [0, 353, 355, 358], "packag": [0, 353, 354, 355, 357], "us": [0, 353, 355, 358], "manag": [0, 353, 355], "further": [0, 353, 355], "note": [0, 353, 355, 358], "from": [0, 353, 355], "git": [0, 353, 355], "sourc": [0, 353, 355], "code": [0, 353, 355], "requir": [0, 353, 355], "obtain": [0, 353, 355], "without": [0, 353, 355], "pip": [0, 353, 355], "conda": [0, 353, 355], "document": [0, 353, 354, 355], "how": [0, 353, 355, 358], "contribut": [0, 353, 355, 358], "report": [0, 353, 355, 358], "bug": [0, 353, 355], "ase": 2, "build": [3, 285], "aperiodic_tim": 4, "stack": [5, 287], "pbc": 6, "check_symmetri": 7, "symbol": 8, "pretty_symbol": 9, "visualis": [10, 344], "view": 11, "bind": 12, "es_find": 13, "emptyspheresresult": 14, "add_empty_spher": 15, "empty_spher": 16, "spglib": 17, "spacegroupinfo": 18, "possibly_equivalent_sit": 19, "common": [20, 357], "alternative_typ": 21, "allowed_typ": 22, "normalize_typ": 23, "normalize_type_map": 24, "types_altern": 25, "configur": [26, 27, 292, 357], "configuration_contain": 28, "basesect": 29, "configurationcontain": 30, "todo": [30, 327], "customsect": 31, "dictadaptor": 32, "rootconfigurationcontain": 33, "section": [34, 162, 227, 232, 236, 240, 244, 248, 252, 256], "configuration_definit": 35, "basedefinit": 36, "configurationrootdefinit": 37, "containerdefinit": 38, "mergedictadaptor": 39, "sectiondefinit": 40, "valuedefinit": 41, "add_excluded_names_condit": 42, "unique_dict": 43, "decor": 44, "add_called_class_as_argu": 45, "add_to_signatur": 46, "cach": 47, "cached_class_properti": 48, "cached_properti": 49, "class_properti": 50, "directori": [51, 52], "doc": 53, "process_input_parameters_definit": 54, "verbatim": 55, "format": 56, "fortran_format": 57, "grammar": 58, "white": 59, "addconditionex": 60, "addparseactionex": 61, "delimitedlist": 62, "end_of_fil": 63, "generate_grammar": 64, "line_end": 65, "optional_line_end": 66, "optional_quot": 67, "replace_whitechar": 68, "separ": [69, 94, 115, 262], "separator_pattern": 70, "grammar_typ": 71, "arrai": 72, "basemix": 73, "baserealwithunit": 74, "basestr": 75, "bool": 76, "complex": 77, "date": [78, 104], "defkeyword": 79, "energi": [80, 105, 165], "flag": [81, 106], "grammartyp": 82, "integ": [83, 108], "keyword": 84, "linestr": 85, "mix": [86, 110], "number": 87, "objectnumb": 88, "potmix": 89, "qstring": [90, 112], "rang": 91, "real": [92, 113], "realwithunit": 93, "sequenc": 95, "setof": 96, "string": [97, 118], "tabl": [98, 354], "typedgrammartyp": 99, "unsign": [100, 124], "boolean": 101, "compare_numpy_valu": 102, "complex_numb": 103, "format_for_typ": 107, "line_str": 109, "pot_mix": 111, "recognized_set_typ": 114, "set_of_integ": 116, "set_of_r": 117, "type_from_default_valu": 119, "type_from_set_map": 120, "type_from_typ": 121, "type_from_type_map": 122, "type_from_valu": 123, "init_test": [125, 144, 183, 207, 270, 330, 346], "testcas": [126, 145, 184, 208, 271, 331, 347], "patch_packag": 127, "misc": 128, "ordereddict": 129, "as_integ": 130, "copy_list": 131, "njit": 132, "numpy_index": 133, "no_output": 134, "nooutput": 135, "option": [136, 139], "customopt": 137, "dangerousvalu": 138, "process_output_read": 140, "asynciofileread": 141, "baseprocessoutputread": 142, "test": [143, 182, 206, 269, 329, 345], "test_common": 146, "commontest": [147, 349], "test_grammar_typ": 148, "grammartest": 149, "unique_valu": 150, "uniquevaluesmap": 151, "input_paramet": [152, 155, 157, 159, 161, 174, 357, 358], "definit": [153, 224], "arp": 154, "do": 156, "phagen": 158, "scf": [160, 167, 199], "control": 163, "cpa": 164, "mode": 166, "site": [168, 249, 314, 315, 320], "strconst": 169, "task": [170, 358], "tau": 171, "tausect": 172, "_nktab_valu": 173, "inputparamet": [175, 358], "inputsect": 176, "resolve_executable_postfix": 177, "input_parameters_definit": 178, "inputparametersdefinit": 179, "inputsectiondefinit": 180, "inputvaluedefinit": 181, "test_definit": 185, "testdefinit": 186, "test_input_paramet": 187, "testinputparamet": 188, "output": [189, 357], "output_definit": 190, "outputnonamevaluedefinit": 191, "outputsectiondefinit": 192, "outputvaluedefinit": 193, "outputvalueequaldefinit": 194, "reader": 195, "default": 196, "defaultoutputread": 197, "defaultresult": 198, "realorstar": 200, "scfoutputread": 201, "scfresult": 202, "task_result": 203, "outputread": 204, "taskresult": 205, "test_output": 209, "testoutput": 210, "physic": 211, "lattice_data": 212, "latticedata": 213, "pearson": 214, "international_numbers_to_ap": 215, "winger_seitz_radii": [216, 217], "potenti": [218, 225, 267, 268, 357, 358], "custom_potential_sect": 219, "custompotentialsect": 220, "custompotentialsectiondefinit": 221, "customsectiontoken": 222, "sectionstr": 223, "potential_definit": [226, 257], "_section": 228, "global_system_paramet": 229, "globalsystemparamet": 230, "globalsystemparameterdefinit": 231, "lattic": 233, "latticesect": 234, "latticesectiondefinit": 235, "mesh_inform": 237, "meshinformationsect": 238, "meshinformationsectiondefinit": 239, "occup": [241, 307, 308], "occupationsect": 242, "occupationsectiondefinit": 243, "reference_system": [245, 312], "referencesystemsect": 246, "referencesystemsectiondefinit": 247, "sitessect": 250, "sitessectiondefinit": 251, "type": [253, 358], "typessect": 254, "typessectiondefinit": 255, "asearraysectiondefinit": 258, "potsectiondefinit": 259, "potvaluedefinit": 260, "potentialdefinit": 261, "potential_sect": 263, "asearraysect": 264, "potentialsect": 265, "uniquelistsect": 266, "test_2d": 272, "test2dpotenti": 273, "test_custom_sect": 274, "testcustomsect": 275, "test_potenti": 276, "testpotenti": 277, "test_structur": 278, "teststructur": 279, "sprkkr": [280, 291, 357], "atomic_typ": 281, "atomictyp": [282, 319], "atoms_region": 283, "atomsregion": 284, "semiinfinite_system": 286, "vacuum_lik": 288, "calcul": [289, 358], "modul": [289, 350], "filenametempl": 290, "configurationfil": 293, "configurationfiledefinit": 294, "configurationsect": 295, "configurationsectiondefinit": 296, "configurationsectiontrait": 297, "configurationvalu": 298, "configurationvaluedefinit": 299, "customconfigurationsect": 300, "customconfigurationvalu": 301, "io_data": 302, "baseiodata": 303, "readiodata": 304, "writeiodata": 305, "unique_map": 306, "radial_mesh": 309, "exponentialmesh": 310, "mesh": 311, "referencesystem": 313, "sprkkr_atom": 316, "sprkkratom": 317, "sprkkr_grammar_typ": 318, "structur": [321, 357], "atomdata": 322, "layerdata": 323, "floatjm": 324, "structure_file_to_atom": 325, "sysfil": 326, "sysfile_cont": 327, "write_sysfil": 328, "test_build": 332, "buildtest": 333, "test_calcul": 334, "calculatortest": 335, "test_sit": 336, "sitestest": 337, "test_sprkkr_atom": 338, "sprkkratomstest": 339, "test_sysfil": 340, "sysfiletest": 341, "tool": [342, 357, 358], "a2s_visualise_in_struct": 343, "test_tool": 348, "version": [350, 352], "changelog": 352, "1": 352, "0": 352, "6": 352, "7": 352, "2": 352, "beta1": 352, "user": 352, "interfac": 352, "architectur": 352, "chang": 352, "beta2": 352, "intern": 352, "more": [353, 358], "about": [353, 358], "softwar": 354, "content": 354, "class": 354, "indic": 354, "ase2spr": 357, "kkr": 357, "": 357, "philosophi": 357, "develop": 357, "The": 357, "base": 357, "read": [357, 358], "file": [357, 358], "write": 357, "run": [357, 358], "program": 357, "usag": 358, "comput": 358, "bulk": 358, "materi": 358, "defin": 358, "properti": 358, "result": 358, "set": 358, "input": 358, "paramet": 358, "work": 358, "object": 358, "subsequ": 358, "gener": 358, "A": 358, "atom": 358, "mpi": 358, "bundl": 358, "error": 358}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 6, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.todo": 2, "sphinx.ext.viewcode": 1, "sphinx": 56}})