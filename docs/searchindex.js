Search.setIndex({"docnames": ["README", "auto/ase2sprkkr", "auto/ase2sprkkr.ase", "auto/ase2sprkkr.ase.visualise", "auto/ase2sprkkr.ase.visualise.view", "auto/ase2sprkkr.bindings", "auto/ase2sprkkr.bindings.spglib", "auto/ase2sprkkr.bindings.spglib.compute_spacegroup", "auto/ase2sprkkr.bindings.spglib.equivalent_sites_for_spacegroup", "auto/ase2sprkkr.bindings.spglib.possibly_equivalent_sites", "auto/ase2sprkkr.bindings.spglib.spacegroup_dataset", "auto/ase2sprkkr.common", "auto/ase2sprkkr.common.alternative_types", "auto/ase2sprkkr.common.alternative_types.allowed_types", "auto/ase2sprkkr.common.alternative_types.normalize_type", "auto/ase2sprkkr.common.alternative_types.normalize_type_map", "auto/ase2sprkkr.common.alternative_types.types_alternatives", "auto/ase2sprkkr.common.configuration", "auto/ase2sprkkr.common.configuration.Configuration", "auto/ase2sprkkr.common.configuration_containers", "auto/ase2sprkkr.common.configuration_containers.BaseSection", "auto/ase2sprkkr.common.configuration_containers.ConfigurationContainer", "auto/ase2sprkkr.common.configuration_containers.CustomSection", "auto/ase2sprkkr.common.configuration_containers.RootConfigurationContainer", "auto/ase2sprkkr.common.configuration_containers.Section", "auto/ase2sprkkr.common.configuration_definitions", "auto/ase2sprkkr.common.configuration_definitions.BaseDefinition", "auto/ase2sprkkr.common.configuration_definitions.ConfigurationRootDefinition", "auto/ase2sprkkr.common.configuration_definitions.ContainerDefinition", "auto/ase2sprkkr.common.configuration_definitions.SectionDefinition", "auto/ase2sprkkr.common.configuration_definitions.ValueDefinition", "auto/ase2sprkkr.common.configuration_definitions.add_excluded_names_condition", "auto/ase2sprkkr.common.configuration_definitions.unique_dict", "auto/ase2sprkkr.common.decorators", "auto/ase2sprkkr.common.decorators.add_called_class_as_argument", "auto/ase2sprkkr.common.decorators.add_to_signature", "auto/ase2sprkkr.common.decorators.cache", "auto/ase2sprkkr.common.decorators.cached_class_property", "auto/ase2sprkkr.common.decorators.cached_property", "auto/ase2sprkkr.common.decorators.class_property", "auto/ase2sprkkr.common.doc", "auto/ase2sprkkr.common.doc.process_input_parameters_definition", "auto/ase2sprkkr.common.doc.verbatim", "auto/ase2sprkkr.common.formats", "auto/ase2sprkkr.common.formats.fortran_format", "auto/ase2sprkkr.common.grammar", "auto/ase2sprkkr.common.grammar.White", "auto/ase2sprkkr.common.grammar.addConditionEx", "auto/ase2sprkkr.common.grammar.addParseActionEx", "auto/ase2sprkkr.common.grammar.delimitedList", "auto/ase2sprkkr.common.grammar.end_of_file", "auto/ase2sprkkr.common.grammar.generate_grammar", "auto/ase2sprkkr.common.grammar.line_end", "auto/ase2sprkkr.common.grammar.optional_line_end", "auto/ase2sprkkr.common.grammar.optional_quote", "auto/ase2sprkkr.common.grammar.replace_whitechars", "auto/ase2sprkkr.common.grammar.separator", "auto/ase2sprkkr.common.grammar.separator_pattern", "auto/ase2sprkkr.common.grammar_types", "auto/ase2sprkkr.common.grammar_types.Array", "auto/ase2sprkkr.common.grammar_types.BaseMixed", "auto/ase2sprkkr.common.grammar_types.BaseRealWithUnits", "auto/ase2sprkkr.common.grammar_types.BaseString", "auto/ase2sprkkr.common.grammar_types.Bool", "auto/ase2sprkkr.common.grammar_types.Complex", "auto/ase2sprkkr.common.grammar_types.Date", "auto/ase2sprkkr.common.grammar_types.DefKeyword", "auto/ase2sprkkr.common.grammar_types.Energy", "auto/ase2sprkkr.common.grammar_types.Flag", "auto/ase2sprkkr.common.grammar_types.GrammarType", "auto/ase2sprkkr.common.grammar_types.Integer", "auto/ase2sprkkr.common.grammar_types.Keyword", "auto/ase2sprkkr.common.grammar_types.LineString", "auto/ase2sprkkr.common.grammar_types.Mixed", "auto/ase2sprkkr.common.grammar_types.Number", "auto/ase2sprkkr.common.grammar_types.ObjectNumber", "auto/ase2sprkkr.common.grammar_types.PotMixed", "auto/ase2sprkkr.common.grammar_types.QString", "auto/ase2sprkkr.common.grammar_types.Range", "auto/ase2sprkkr.common.grammar_types.Real", "auto/ase2sprkkr.common.grammar_types.RealWithUnits", "auto/ase2sprkkr.common.grammar_types.Separator", "auto/ase2sprkkr.common.grammar_types.Sequence", "auto/ase2sprkkr.common.grammar_types.SetOf", "auto/ase2sprkkr.common.grammar_types.String", "auto/ase2sprkkr.common.grammar_types.Table", "auto/ase2sprkkr.common.grammar_types.TypedGrammarType", "auto/ase2sprkkr.common.grammar_types.Unsigned", "auto/ase2sprkkr.common.grammar_types.boolean", "auto/ase2sprkkr.common.grammar_types.compare_numpy_values", "auto/ase2sprkkr.common.grammar_types.complex_number", "auto/ase2sprkkr.common.grammar_types.date", "auto/ase2sprkkr.common.grammar_types.energy", "auto/ase2sprkkr.common.grammar_types.flag", "auto/ase2sprkkr.common.grammar_types.format_for_type", "auto/ase2sprkkr.common.grammar_types.integer", "auto/ase2sprkkr.common.grammar_types.line_string", "auto/ase2sprkkr.common.grammar_types.mixed", "auto/ase2sprkkr.common.grammar_types.pot_mixed", "auto/ase2sprkkr.common.grammar_types.qstring", "auto/ase2sprkkr.common.grammar_types.real", "auto/ase2sprkkr.common.grammar_types.recognized_set_types", "auto/ase2sprkkr.common.grammar_types.separator", "auto/ase2sprkkr.common.grammar_types.set_of_integers", "auto/ase2sprkkr.common.grammar_types.set_of_reals", "auto/ase2sprkkr.common.grammar_types.string", "auto/ase2sprkkr.common.grammar_types.type_from_default_value", "auto/ase2sprkkr.common.grammar_types.type_from_set_map", "auto/ase2sprkkr.common.grammar_types.type_from_type", "auto/ase2sprkkr.common.grammar_types.type_from_type_map", "auto/ase2sprkkr.common.grammar_types.type_from_value", "auto/ase2sprkkr.common.grammar_types.unsigned", "auto/ase2sprkkr.common.init_tests", "auto/ase2sprkkr.common.init_tests.TestCase", "auto/ase2sprkkr.common.init_tests.patch_package", "auto/ase2sprkkr.common.misc", "auto/ase2sprkkr.common.misc.OrderedDict", "auto/ase2sprkkr.common.misc.as_integer", "auto/ase2sprkkr.common.misc.copy_list", "auto/ase2sprkkr.common.misc.njit", "auto/ase2sprkkr.common.misc.numpy_index", "auto/ase2sprkkr.common.no_output", "auto/ase2sprkkr.common.no_output.NoOutput", "auto/ase2sprkkr.common.options", "auto/ase2sprkkr.common.options.CustomOption", "auto/ase2sprkkr.common.options.DangerousValue", "auto/ase2sprkkr.common.options.Option", "auto/ase2sprkkr.common.process_output_reader", "auto/ase2sprkkr.common.process_output_reader.AsyncioFileReader", "auto/ase2sprkkr.common.process_output_reader.BaseProcessOutputReader", "auto/ase2sprkkr.common.test", "auto/ase2sprkkr.common.test.init_tests", "auto/ase2sprkkr.common.test.init_tests.TestCase", "auto/ase2sprkkr.common.test.test_common", "auto/ase2sprkkr.common.test.test_common.CommonTest", "auto/ase2sprkkr.common.test.test_grammar_types", "auto/ase2sprkkr.common.test.test_grammar_types.GrammarTest", "auto/ase2sprkkr.common.unique_values", "auto/ase2sprkkr.common.unique_values.UniqueValuesMapping", "auto/ase2sprkkr.input_parameters", "auto/ase2sprkkr.input_parameters.definitions", "auto/ase2sprkkr.input_parameters.definitions.arpes", "auto/ase2sprkkr.input_parameters.definitions.arpes.input_parameters", "auto/ase2sprkkr.input_parameters.definitions.dos", "auto/ase2sprkkr.input_parameters.definitions.dos.input_parameters", "auto/ase2sprkkr.input_parameters.definitions.phagen", "auto/ase2sprkkr.input_parameters.definitions.phagen.input_parameters", "auto/ase2sprkkr.input_parameters.definitions.scf", "auto/ase2sprkkr.input_parameters.definitions.scf.input_parameters", "auto/ase2sprkkr.input_parameters.definitions.sections", "auto/ase2sprkkr.input_parameters.definitions.sections.CONTROL", "auto/ase2sprkkr.input_parameters.definitions.sections.CPA", "auto/ase2sprkkr.input_parameters.definitions.sections.ENERGY", "auto/ase2sprkkr.input_parameters.definitions.sections.MODE", "auto/ase2sprkkr.input_parameters.definitions.sections.SCF", "auto/ase2sprkkr.input_parameters.definitions.sections.SITES", "auto/ase2sprkkr.input_parameters.definitions.sections.STRCONST", "auto/ase2sprkkr.input_parameters.definitions.sections.TASK", "auto/ase2sprkkr.input_parameters.definitions.sections.TAU", "auto/ase2sprkkr.input_parameters.input_parameters", "auto/ase2sprkkr.input_parameters.input_parameters.InputParameters", "auto/ase2sprkkr.input_parameters.input_parameters.resolve_executable_postfix", "auto/ase2sprkkr.input_parameters.input_parameters_definitions", "auto/ase2sprkkr.input_parameters.input_parameters_definitions.InputParametersDefinition", "auto/ase2sprkkr.input_parameters.input_parameters_definitions.InputSectionDefinition", "auto/ase2sprkkr.input_parameters.input_parameters_definitions.InputValueDefinition", "auto/ase2sprkkr.input_parameters.test", "auto/ase2sprkkr.input_parameters.test.init_tests", "auto/ase2sprkkr.input_parameters.test.init_tests.TestCase", "auto/ase2sprkkr.input_parameters.test.test_definitions", "auto/ase2sprkkr.input_parameters.test.test_definitions.TestDefinitions", "auto/ase2sprkkr.input_parameters.test.test_input_parameters", "auto/ase2sprkkr.input_parameters.test.test_input_parameters.TestInputParameters", "auto/ase2sprkkr.outputs", "auto/ase2sprkkr.outputs.output_definitions", "auto/ase2sprkkr.outputs.output_definitions.OutputNonameValueDefinition", "auto/ase2sprkkr.outputs.output_definitions.OutputSectionDefinition", "auto/ase2sprkkr.outputs.output_definitions.OutputValueDefinition", "auto/ase2sprkkr.outputs.output_definitions.OutputValueEqualDefinition", "auto/ase2sprkkr.outputs.readers", "auto/ase2sprkkr.outputs.readers.default", "auto/ase2sprkkr.outputs.readers.default.DefaultOutputReader", "auto/ase2sprkkr.outputs.readers.default.DefaultResult", "auto/ase2sprkkr.outputs.readers.scf", "auto/ase2sprkkr.outputs.readers.scf.ScfOutputReader", "auto/ase2sprkkr.outputs.readers.scf.ScfResult", "auto/ase2sprkkr.outputs.task_result", "auto/ase2sprkkr.outputs.task_result.OutputReader", "auto/ase2sprkkr.outputs.task_result.TaskResult", "auto/ase2sprkkr.outputs.test", "auto/ase2sprkkr.outputs.test.init_tests", "auto/ase2sprkkr.outputs.test.init_tests.TestCase", "auto/ase2sprkkr.outputs.test.test_output", "auto/ase2sprkkr.outputs.test.test_output.TestOutput", "auto/ase2sprkkr.physics", "auto/ase2sprkkr.physics.lattice_data", "auto/ase2sprkkr.physics.lattice_data.LatticeData", "auto/ase2sprkkr.physics.winger_seitz_radii", "auto/ase2sprkkr.physics.winger_seitz_radii.winger_seitz_radii", "auto/ase2sprkkr.potentials", "auto/ase2sprkkr.potentials.custom_potential_section", "auto/ase2sprkkr.potentials.custom_potential_section.CustomPotentialSection", "auto/ase2sprkkr.potentials.custom_potential_section.CustomPotentialSectionDefinition", "auto/ase2sprkkr.potentials.custom_potential_section.CustomSectionToken", "auto/ase2sprkkr.potentials.custom_potential_section.SectionString", "auto/ase2sprkkr.potentials.definitions", "auto/ase2sprkkr.potentials.definitions.potential", "auto/ase2sprkkr.potentials.definitions.potential.potential_definition", "auto/ase2sprkkr.potentials.definitions.sections", "auto/ase2sprkkr.potentials.definitions.sections._sections", "auto/ase2sprkkr.potentials.definitions.sections.global_system_parameter", "auto/ase2sprkkr.potentials.definitions.sections.global_system_parameter.GlobalSystemParameter", "auto/ase2sprkkr.potentials.definitions.sections.global_system_parameter.GlobalSystemParameterDefinition", "auto/ase2sprkkr.potentials.definitions.sections.global_system_parameter.section", "auto/ase2sprkkr.potentials.definitions.sections.lattice", "auto/ase2sprkkr.potentials.definitions.sections.lattice.LatticeSection", "auto/ase2sprkkr.potentials.definitions.sections.lattice.LatticeSectionDefinition", "auto/ase2sprkkr.potentials.definitions.sections.lattice.section", "auto/ase2sprkkr.potentials.definitions.sections.mesh_information", "auto/ase2sprkkr.potentials.definitions.sections.mesh_information.MeshInformationSection", "auto/ase2sprkkr.potentials.definitions.sections.mesh_information.MeshInformationSectionDefinition", "auto/ase2sprkkr.potentials.definitions.sections.mesh_information.section", "auto/ase2sprkkr.potentials.definitions.sections.occupation", "auto/ase2sprkkr.potentials.definitions.sections.occupation.OccupationSection", "auto/ase2sprkkr.potentials.definitions.sections.occupation.OccupationSectionDefinition", "auto/ase2sprkkr.potentials.definitions.sections.occupation.section", "auto/ase2sprkkr.potentials.definitions.sections.reference_system", "auto/ase2sprkkr.potentials.definitions.sections.reference_system.ReferenceSystemSection", "auto/ase2sprkkr.potentials.definitions.sections.reference_system.ReferenceSystemSectionDefinition", "auto/ase2sprkkr.potentials.definitions.sections.reference_system.section", "auto/ase2sprkkr.potentials.definitions.sections.sites", "auto/ase2sprkkr.potentials.definitions.sections.sites.SitesSection", "auto/ase2sprkkr.potentials.definitions.sections.sites.SitesSectionDefinition", "auto/ase2sprkkr.potentials.definitions.sections.sites.section", "auto/ase2sprkkr.potentials.definitions.sections.types", "auto/ase2sprkkr.potentials.definitions.sections.types.TypesSection", "auto/ase2sprkkr.potentials.definitions.sections.types.TypesSectionDefinition", "auto/ase2sprkkr.potentials.definitions.sections.types.section", "auto/ase2sprkkr.potentials.potential_definitions", "auto/ase2sprkkr.potentials.potential_definitions.ASEArraySectionDefinition", "auto/ase2sprkkr.potentials.potential_definitions.PotSectionDefinition", "auto/ase2sprkkr.potentials.potential_definitions.PotValueDefinition", "auto/ase2sprkkr.potentials.potential_definitions.PotentialDefinition", "auto/ase2sprkkr.potentials.potential_definitions.Separator", "auto/ase2sprkkr.potentials.potential_sections", "auto/ase2sprkkr.potentials.potential_sections.ASEArraySection", "auto/ase2sprkkr.potentials.potential_sections.PotentialSection", "auto/ase2sprkkr.potentials.potential_sections.UniqueListSection", "auto/ase2sprkkr.potentials.potentials", "auto/ase2sprkkr.potentials.potentials.Potential", "auto/ase2sprkkr.potentials.test", "auto/ase2sprkkr.potentials.test.init_tests", "auto/ase2sprkkr.potentials.test.init_tests.TestCase", "auto/ase2sprkkr.potentials.test.test_custom_section", "auto/ase2sprkkr.potentials.test.test_custom_section.TestCustomSection", "auto/ase2sprkkr.potentials.test.test_potential", "auto/ase2sprkkr.potentials.test.test_potential.TestPotential", "auto/ase2sprkkr.potentials.test.test_structure", "auto/ase2sprkkr.potentials.test.test_structure.TestStructure", "auto/ase2sprkkr.sprkkr", "auto/ase2sprkkr.sprkkr.atomic_types", "auto/ase2sprkkr.sprkkr.atomic_types.AtomicType", "auto/ase2sprkkr.sprkkr.calculator", "auto/ase2sprkkr.sprkkr.calculator.FilenameTemplator", "auto/ase2sprkkr.sprkkr.calculator.SPRKKR", "auto/ase2sprkkr.sprkkr.configuration", "auto/ase2sprkkr.sprkkr.configuration.ConfigurationFile", "auto/ase2sprkkr.sprkkr.configuration.ConfigurationFileDefinition", "auto/ase2sprkkr.sprkkr.configuration.ConfigurationSection", "auto/ase2sprkkr.sprkkr.configuration.ConfigurationSectionDefinition", "auto/ase2sprkkr.sprkkr.configuration.ConfigurationSectionTrait", "auto/ase2sprkkr.sprkkr.configuration.ConfigurationValue", "auto/ase2sprkkr.sprkkr.configuration.ConfigurationValueDefinition", "auto/ase2sprkkr.sprkkr.configuration.CustomConfigurationSection", "auto/ase2sprkkr.sprkkr.configuration.CustomConfigurationValue", "auto/ase2sprkkr.sprkkr.io_data", "auto/ase2sprkkr.sprkkr.io_data.BaseIoData", "auto/ase2sprkkr.sprkkr.io_data.ReadIoData", "auto/ase2sprkkr.sprkkr.io_data.WriteIoData", "auto/ase2sprkkr.sprkkr.io_data.unique_mapping", "auto/ase2sprkkr.sprkkr.occupations", "auto/ase2sprkkr.sprkkr.occupations.Occupation", "auto/ase2sprkkr.sprkkr.radial_meshes", "auto/ase2sprkkr.sprkkr.radial_meshes.ExponentialMesh", "auto/ase2sprkkr.sprkkr.radial_meshes.Mesh", "auto/ase2sprkkr.sprkkr.reference_systems", "auto/ase2sprkkr.sprkkr.reference_systems.ReferenceSystem", "auto/ase2sprkkr.sprkkr.sites", "auto/ase2sprkkr.sprkkr.sites.Site", "auto/ase2sprkkr.sprkkr.sprkkr_atoms", "auto/ase2sprkkr.sprkkr.sprkkr_atoms.SPRKKRAtoms", "auto/ase2sprkkr.sprkkr.sprkkr_grammar_types", "auto/ase2sprkkr.sprkkr.sprkkr_grammar_types.AtomicType", "auto/ase2sprkkr.sprkkr.sprkkr_grammar_types.Site", "auto/ase2sprkkr.sprkkr.structure", "auto/ase2sprkkr.sprkkr.structure.AtomData", "auto/ase2sprkkr.sprkkr.structure.LayerData", "auto/ase2sprkkr.sprkkr.structure.floatjm", "auto/ase2sprkkr.sprkkr.structure.structure_file_to_atoms", "auto/ase2sprkkr.sprkkr.sysfile", "auto/ase2sprkkr.sprkkr.sysfile.sysfile_content", "auto/ase2sprkkr.sprkkr.sysfile.write_sysfile", "auto/ase2sprkkr.sprkkr.test", "auto/ase2sprkkr.sprkkr.test.init_tests", "auto/ase2sprkkr.sprkkr.test.init_tests.TestCase", "auto/ase2sprkkr.sprkkr.test.test_calculator", "auto/ase2sprkkr.sprkkr.test.test_calculator.CalculatorTest", "auto/ase2sprkkr.sprkkr.test.test_sprkkr_atoms", "auto/ase2sprkkr.sprkkr.test.test_sprkkr_atoms.SPRKKRAtomsTest", "auto/ase2sprkkr.sprkkr.test.test_sysfile", "auto/ase2sprkkr.sprkkr.test.test_sysfile.SysfileTest", "auto/ase2sprkkr.tools", "auto/ase2sprkkr.tools.a2s_visualise_in_struct", "auto/ase2sprkkr.tools.a2s_visualise_in_struct.visualise", "auto/ase2sprkkr.tools.test", "auto/ase2sprkkr.tools.test.init_tests", "auto/ase2sprkkr.tools.test.init_tests.TestCase", "auto/ase2sprkkr.tools.test.test_tools", "auto/ase2sprkkr.tools.test.test_tools.CommonTest", "auto/ase2sprkkr.version", "auto/modules", "changelog", "how-to-install", "index", "installation", "introduction", "philosophy", "usage"], "filenames": ["README.rst", "auto/ase2sprkkr.rst", "auto/ase2sprkkr.ase.rst", "auto/ase2sprkkr.ase.visualise.rst", "auto/ase2sprkkr.ase.visualise.view.rst", "auto/ase2sprkkr.bindings.rst", "auto/ase2sprkkr.bindings.spglib.rst", "auto/ase2sprkkr.bindings.spglib.compute_spacegroup.rst", "auto/ase2sprkkr.bindings.spglib.equivalent_sites_for_spacegroup.rst", "auto/ase2sprkkr.bindings.spglib.possibly_equivalent_sites.rst", "auto/ase2sprkkr.bindings.spglib.spacegroup_dataset.rst", "auto/ase2sprkkr.common.rst", "auto/ase2sprkkr.common.alternative_types.rst", "auto/ase2sprkkr.common.alternative_types.allowed_types.rst", "auto/ase2sprkkr.common.alternative_types.normalize_type.rst", "auto/ase2sprkkr.common.alternative_types.normalize_type_map.rst", "auto/ase2sprkkr.common.alternative_types.types_alternatives.rst", "auto/ase2sprkkr.common.configuration.rst", "auto/ase2sprkkr.common.configuration.Configuration.rst", "auto/ase2sprkkr.common.configuration_containers.rst", "auto/ase2sprkkr.common.configuration_containers.BaseSection.rst", "auto/ase2sprkkr.common.configuration_containers.ConfigurationContainer.rst", "auto/ase2sprkkr.common.configuration_containers.CustomSection.rst", "auto/ase2sprkkr.common.configuration_containers.RootConfigurationContainer.rst", "auto/ase2sprkkr.common.configuration_containers.Section.rst", "auto/ase2sprkkr.common.configuration_definitions.rst", "auto/ase2sprkkr.common.configuration_definitions.BaseDefinition.rst", "auto/ase2sprkkr.common.configuration_definitions.ConfigurationRootDefinition.rst", "auto/ase2sprkkr.common.configuration_definitions.ContainerDefinition.rst", "auto/ase2sprkkr.common.configuration_definitions.SectionDefinition.rst", "auto/ase2sprkkr.common.configuration_definitions.ValueDefinition.rst", "auto/ase2sprkkr.common.configuration_definitions.add_excluded_names_condition.rst", "auto/ase2sprkkr.common.configuration_definitions.unique_dict.rst", "auto/ase2sprkkr.common.decorators.rst", "auto/ase2sprkkr.common.decorators.add_called_class_as_argument.rst", "auto/ase2sprkkr.common.decorators.add_to_signature.rst", "auto/ase2sprkkr.common.decorators.cache.rst", "auto/ase2sprkkr.common.decorators.cached_class_property.rst", "auto/ase2sprkkr.common.decorators.cached_property.rst", "auto/ase2sprkkr.common.decorators.class_property.rst", "auto/ase2sprkkr.common.doc.rst", "auto/ase2sprkkr.common.doc.process_input_parameters_definition.rst", "auto/ase2sprkkr.common.doc.verbatim.rst", "auto/ase2sprkkr.common.formats.rst", "auto/ase2sprkkr.common.formats.fortran_format.rst", "auto/ase2sprkkr.common.grammar.rst", "auto/ase2sprkkr.common.grammar.White.rst", "auto/ase2sprkkr.common.grammar.addConditionEx.rst", "auto/ase2sprkkr.common.grammar.addParseActionEx.rst", "auto/ase2sprkkr.common.grammar.delimitedList.rst", "auto/ase2sprkkr.common.grammar.end_of_file.rst", "auto/ase2sprkkr.common.grammar.generate_grammar.rst", "auto/ase2sprkkr.common.grammar.line_end.rst", "auto/ase2sprkkr.common.grammar.optional_line_end.rst", "auto/ase2sprkkr.common.grammar.optional_quote.rst", "auto/ase2sprkkr.common.grammar.replace_whitechars.rst", "auto/ase2sprkkr.common.grammar.separator.rst", "auto/ase2sprkkr.common.grammar.separator_pattern.rst", "auto/ase2sprkkr.common.grammar_types.rst", "auto/ase2sprkkr.common.grammar_types.Array.rst", "auto/ase2sprkkr.common.grammar_types.BaseMixed.rst", "auto/ase2sprkkr.common.grammar_types.BaseRealWithUnits.rst", "auto/ase2sprkkr.common.grammar_types.BaseString.rst", "auto/ase2sprkkr.common.grammar_types.Bool.rst", "auto/ase2sprkkr.common.grammar_types.Complex.rst", "auto/ase2sprkkr.common.grammar_types.Date.rst", "auto/ase2sprkkr.common.grammar_types.DefKeyword.rst", "auto/ase2sprkkr.common.grammar_types.Energy.rst", "auto/ase2sprkkr.common.grammar_types.Flag.rst", "auto/ase2sprkkr.common.grammar_types.GrammarType.rst", "auto/ase2sprkkr.common.grammar_types.Integer.rst", "auto/ase2sprkkr.common.grammar_types.Keyword.rst", "auto/ase2sprkkr.common.grammar_types.LineString.rst", "auto/ase2sprkkr.common.grammar_types.Mixed.rst", "auto/ase2sprkkr.common.grammar_types.Number.rst", "auto/ase2sprkkr.common.grammar_types.ObjectNumber.rst", "auto/ase2sprkkr.common.grammar_types.PotMixed.rst", "auto/ase2sprkkr.common.grammar_types.QString.rst", "auto/ase2sprkkr.common.grammar_types.Range.rst", "auto/ase2sprkkr.common.grammar_types.Real.rst", "auto/ase2sprkkr.common.grammar_types.RealWithUnits.rst", "auto/ase2sprkkr.common.grammar_types.Separator.rst", "auto/ase2sprkkr.common.grammar_types.Sequence.rst", "auto/ase2sprkkr.common.grammar_types.SetOf.rst", "auto/ase2sprkkr.common.grammar_types.String.rst", "auto/ase2sprkkr.common.grammar_types.Table.rst", "auto/ase2sprkkr.common.grammar_types.TypedGrammarType.rst", "auto/ase2sprkkr.common.grammar_types.Unsigned.rst", "auto/ase2sprkkr.common.grammar_types.boolean.rst", "auto/ase2sprkkr.common.grammar_types.compare_numpy_values.rst", "auto/ase2sprkkr.common.grammar_types.complex_number.rst", "auto/ase2sprkkr.common.grammar_types.date.rst", "auto/ase2sprkkr.common.grammar_types.energy.rst", "auto/ase2sprkkr.common.grammar_types.flag.rst", "auto/ase2sprkkr.common.grammar_types.format_for_type.rst", "auto/ase2sprkkr.common.grammar_types.integer.rst", "auto/ase2sprkkr.common.grammar_types.line_string.rst", "auto/ase2sprkkr.common.grammar_types.mixed.rst", "auto/ase2sprkkr.common.grammar_types.pot_mixed.rst", "auto/ase2sprkkr.common.grammar_types.qstring.rst", "auto/ase2sprkkr.common.grammar_types.real.rst", "auto/ase2sprkkr.common.grammar_types.recognized_set_types.rst", "auto/ase2sprkkr.common.grammar_types.separator.rst", "auto/ase2sprkkr.common.grammar_types.set_of_integers.rst", "auto/ase2sprkkr.common.grammar_types.set_of_reals.rst", "auto/ase2sprkkr.common.grammar_types.string.rst", "auto/ase2sprkkr.common.grammar_types.type_from_default_value.rst", "auto/ase2sprkkr.common.grammar_types.type_from_set_map.rst", "auto/ase2sprkkr.common.grammar_types.type_from_type.rst", "auto/ase2sprkkr.common.grammar_types.type_from_type_map.rst", "auto/ase2sprkkr.common.grammar_types.type_from_value.rst", "auto/ase2sprkkr.common.grammar_types.unsigned.rst", "auto/ase2sprkkr.common.init_tests.rst", "auto/ase2sprkkr.common.init_tests.TestCase.rst", "auto/ase2sprkkr.common.init_tests.patch_package.rst", "auto/ase2sprkkr.common.misc.rst", "auto/ase2sprkkr.common.misc.OrderedDict.rst", "auto/ase2sprkkr.common.misc.as_integer.rst", "auto/ase2sprkkr.common.misc.copy_list.rst", "auto/ase2sprkkr.common.misc.njit.rst", "auto/ase2sprkkr.common.misc.numpy_index.rst", "auto/ase2sprkkr.common.no_output.rst", "auto/ase2sprkkr.common.no_output.NoOutput.rst", "auto/ase2sprkkr.common.options.rst", "auto/ase2sprkkr.common.options.CustomOption.rst", "auto/ase2sprkkr.common.options.DangerousValue.rst", "auto/ase2sprkkr.common.options.Option.rst", "auto/ase2sprkkr.common.process_output_reader.rst", "auto/ase2sprkkr.common.process_output_reader.AsyncioFileReader.rst", "auto/ase2sprkkr.common.process_output_reader.BaseProcessOutputReader.rst", "auto/ase2sprkkr.common.test.rst", "auto/ase2sprkkr.common.test.init_tests.rst", "auto/ase2sprkkr.common.test.init_tests.TestCase.rst", "auto/ase2sprkkr.common.test.test_common.rst", "auto/ase2sprkkr.common.test.test_common.CommonTest.rst", "auto/ase2sprkkr.common.test.test_grammar_types.rst", "auto/ase2sprkkr.common.test.test_grammar_types.GrammarTest.rst", "auto/ase2sprkkr.common.unique_values.rst", "auto/ase2sprkkr.common.unique_values.UniqueValuesMapping.rst", "auto/ase2sprkkr.input_parameters.rst", "auto/ase2sprkkr.input_parameters.definitions.rst", "auto/ase2sprkkr.input_parameters.definitions.arpes.rst", "auto/ase2sprkkr.input_parameters.definitions.arpes.input_parameters.rst", "auto/ase2sprkkr.input_parameters.definitions.dos.rst", "auto/ase2sprkkr.input_parameters.definitions.dos.input_parameters.rst", "auto/ase2sprkkr.input_parameters.definitions.phagen.rst", "auto/ase2sprkkr.input_parameters.definitions.phagen.input_parameters.rst", "auto/ase2sprkkr.input_parameters.definitions.scf.rst", "auto/ase2sprkkr.input_parameters.definitions.scf.input_parameters.rst", "auto/ase2sprkkr.input_parameters.definitions.sections.rst", "auto/ase2sprkkr.input_parameters.definitions.sections.CONTROL.rst", "auto/ase2sprkkr.input_parameters.definitions.sections.CPA.rst", "auto/ase2sprkkr.input_parameters.definitions.sections.ENERGY.rst", "auto/ase2sprkkr.input_parameters.definitions.sections.MODE.rst", "auto/ase2sprkkr.input_parameters.definitions.sections.SCF.rst", "auto/ase2sprkkr.input_parameters.definitions.sections.SITES.rst", "auto/ase2sprkkr.input_parameters.definitions.sections.STRCONST.rst", "auto/ase2sprkkr.input_parameters.definitions.sections.TASK.rst", "auto/ase2sprkkr.input_parameters.definitions.sections.TAU.rst", "auto/ase2sprkkr.input_parameters.input_parameters.rst", "auto/ase2sprkkr.input_parameters.input_parameters.InputParameters.rst", "auto/ase2sprkkr.input_parameters.input_parameters.resolve_executable_postfix.rst", "auto/ase2sprkkr.input_parameters.input_parameters_definitions.rst", "auto/ase2sprkkr.input_parameters.input_parameters_definitions.InputParametersDefinition.rst", "auto/ase2sprkkr.input_parameters.input_parameters_definitions.InputSectionDefinition.rst", "auto/ase2sprkkr.input_parameters.input_parameters_definitions.InputValueDefinition.rst", "auto/ase2sprkkr.input_parameters.test.rst", "auto/ase2sprkkr.input_parameters.test.init_tests.rst", "auto/ase2sprkkr.input_parameters.test.init_tests.TestCase.rst", "auto/ase2sprkkr.input_parameters.test.test_definitions.rst", "auto/ase2sprkkr.input_parameters.test.test_definitions.TestDefinitions.rst", "auto/ase2sprkkr.input_parameters.test.test_input_parameters.rst", "auto/ase2sprkkr.input_parameters.test.test_input_parameters.TestInputParameters.rst", "auto/ase2sprkkr.outputs.rst", "auto/ase2sprkkr.outputs.output_definitions.rst", "auto/ase2sprkkr.outputs.output_definitions.OutputNonameValueDefinition.rst", "auto/ase2sprkkr.outputs.output_definitions.OutputSectionDefinition.rst", "auto/ase2sprkkr.outputs.output_definitions.OutputValueDefinition.rst", "auto/ase2sprkkr.outputs.output_definitions.OutputValueEqualDefinition.rst", "auto/ase2sprkkr.outputs.readers.rst", "auto/ase2sprkkr.outputs.readers.default.rst", "auto/ase2sprkkr.outputs.readers.default.DefaultOutputReader.rst", "auto/ase2sprkkr.outputs.readers.default.DefaultResult.rst", "auto/ase2sprkkr.outputs.readers.scf.rst", "auto/ase2sprkkr.outputs.readers.scf.ScfOutputReader.rst", "auto/ase2sprkkr.outputs.readers.scf.ScfResult.rst", "auto/ase2sprkkr.outputs.task_result.rst", "auto/ase2sprkkr.outputs.task_result.OutputReader.rst", "auto/ase2sprkkr.outputs.task_result.TaskResult.rst", "auto/ase2sprkkr.outputs.test.rst", "auto/ase2sprkkr.outputs.test.init_tests.rst", "auto/ase2sprkkr.outputs.test.init_tests.TestCase.rst", "auto/ase2sprkkr.outputs.test.test_output.rst", "auto/ase2sprkkr.outputs.test.test_output.TestOutput.rst", "auto/ase2sprkkr.physics.rst", "auto/ase2sprkkr.physics.lattice_data.rst", "auto/ase2sprkkr.physics.lattice_data.LatticeData.rst", "auto/ase2sprkkr.physics.winger_seitz_radii.rst", "auto/ase2sprkkr.physics.winger_seitz_radii.winger_seitz_radii.rst", "auto/ase2sprkkr.potentials.rst", "auto/ase2sprkkr.potentials.custom_potential_section.rst", "auto/ase2sprkkr.potentials.custom_potential_section.CustomPotentialSection.rst", "auto/ase2sprkkr.potentials.custom_potential_section.CustomPotentialSectionDefinition.rst", "auto/ase2sprkkr.potentials.custom_potential_section.CustomSectionToken.rst", "auto/ase2sprkkr.potentials.custom_potential_section.SectionString.rst", "auto/ase2sprkkr.potentials.definitions.rst", "auto/ase2sprkkr.potentials.definitions.potential.rst", "auto/ase2sprkkr.potentials.definitions.potential.potential_definition.rst", "auto/ase2sprkkr.potentials.definitions.sections.rst", "auto/ase2sprkkr.potentials.definitions.sections._sections.rst", "auto/ase2sprkkr.potentials.definitions.sections.global_system_parameter.rst", "auto/ase2sprkkr.potentials.definitions.sections.global_system_parameter.GlobalSystemParameter.rst", "auto/ase2sprkkr.potentials.definitions.sections.global_system_parameter.GlobalSystemParameterDefinition.rst", "auto/ase2sprkkr.potentials.definitions.sections.global_system_parameter.section.rst", "auto/ase2sprkkr.potentials.definitions.sections.lattice.rst", "auto/ase2sprkkr.potentials.definitions.sections.lattice.LatticeSection.rst", "auto/ase2sprkkr.potentials.definitions.sections.lattice.LatticeSectionDefinition.rst", "auto/ase2sprkkr.potentials.definitions.sections.lattice.section.rst", "auto/ase2sprkkr.potentials.definitions.sections.mesh_information.rst", "auto/ase2sprkkr.potentials.definitions.sections.mesh_information.MeshInformationSection.rst", "auto/ase2sprkkr.potentials.definitions.sections.mesh_information.MeshInformationSectionDefinition.rst", "auto/ase2sprkkr.potentials.definitions.sections.mesh_information.section.rst", "auto/ase2sprkkr.potentials.definitions.sections.occupation.rst", "auto/ase2sprkkr.potentials.definitions.sections.occupation.OccupationSection.rst", "auto/ase2sprkkr.potentials.definitions.sections.occupation.OccupationSectionDefinition.rst", "auto/ase2sprkkr.potentials.definitions.sections.occupation.section.rst", "auto/ase2sprkkr.potentials.definitions.sections.reference_system.rst", "auto/ase2sprkkr.potentials.definitions.sections.reference_system.ReferenceSystemSection.rst", "auto/ase2sprkkr.potentials.definitions.sections.reference_system.ReferenceSystemSectionDefinition.rst", "auto/ase2sprkkr.potentials.definitions.sections.reference_system.section.rst", "auto/ase2sprkkr.potentials.definitions.sections.sites.rst", "auto/ase2sprkkr.potentials.definitions.sections.sites.SitesSection.rst", "auto/ase2sprkkr.potentials.definitions.sections.sites.SitesSectionDefinition.rst", "auto/ase2sprkkr.potentials.definitions.sections.sites.section.rst", "auto/ase2sprkkr.potentials.definitions.sections.types.rst", "auto/ase2sprkkr.potentials.definitions.sections.types.TypesSection.rst", "auto/ase2sprkkr.potentials.definitions.sections.types.TypesSectionDefinition.rst", "auto/ase2sprkkr.potentials.definitions.sections.types.section.rst", "auto/ase2sprkkr.potentials.potential_definitions.rst", "auto/ase2sprkkr.potentials.potential_definitions.ASEArraySectionDefinition.rst", "auto/ase2sprkkr.potentials.potential_definitions.PotSectionDefinition.rst", "auto/ase2sprkkr.potentials.potential_definitions.PotValueDefinition.rst", "auto/ase2sprkkr.potentials.potential_definitions.PotentialDefinition.rst", "auto/ase2sprkkr.potentials.potential_definitions.Separator.rst", "auto/ase2sprkkr.potentials.potential_sections.rst", "auto/ase2sprkkr.potentials.potential_sections.ASEArraySection.rst", "auto/ase2sprkkr.potentials.potential_sections.PotentialSection.rst", "auto/ase2sprkkr.potentials.potential_sections.UniqueListSection.rst", "auto/ase2sprkkr.potentials.potentials.rst", "auto/ase2sprkkr.potentials.potentials.Potential.rst", "auto/ase2sprkkr.potentials.test.rst", "auto/ase2sprkkr.potentials.test.init_tests.rst", "auto/ase2sprkkr.potentials.test.init_tests.TestCase.rst", "auto/ase2sprkkr.potentials.test.test_custom_section.rst", "auto/ase2sprkkr.potentials.test.test_custom_section.TestCustomSection.rst", "auto/ase2sprkkr.potentials.test.test_potential.rst", "auto/ase2sprkkr.potentials.test.test_potential.TestPotential.rst", "auto/ase2sprkkr.potentials.test.test_structure.rst", "auto/ase2sprkkr.potentials.test.test_structure.TestStructure.rst", "auto/ase2sprkkr.sprkkr.rst", "auto/ase2sprkkr.sprkkr.atomic_types.rst", "auto/ase2sprkkr.sprkkr.atomic_types.AtomicType.rst", "auto/ase2sprkkr.sprkkr.calculator.rst", "auto/ase2sprkkr.sprkkr.calculator.FilenameTemplator.rst", "auto/ase2sprkkr.sprkkr.calculator.SPRKKR.rst", "auto/ase2sprkkr.sprkkr.configuration.rst", "auto/ase2sprkkr.sprkkr.configuration.ConfigurationFile.rst", "auto/ase2sprkkr.sprkkr.configuration.ConfigurationFileDefinition.rst", "auto/ase2sprkkr.sprkkr.configuration.ConfigurationSection.rst", "auto/ase2sprkkr.sprkkr.configuration.ConfigurationSectionDefinition.rst", "auto/ase2sprkkr.sprkkr.configuration.ConfigurationSectionTrait.rst", "auto/ase2sprkkr.sprkkr.configuration.ConfigurationValue.rst", "auto/ase2sprkkr.sprkkr.configuration.ConfigurationValueDefinition.rst", "auto/ase2sprkkr.sprkkr.configuration.CustomConfigurationSection.rst", "auto/ase2sprkkr.sprkkr.configuration.CustomConfigurationValue.rst", "auto/ase2sprkkr.sprkkr.io_data.rst", "auto/ase2sprkkr.sprkkr.io_data.BaseIoData.rst", "auto/ase2sprkkr.sprkkr.io_data.ReadIoData.rst", "auto/ase2sprkkr.sprkkr.io_data.WriteIoData.rst", "auto/ase2sprkkr.sprkkr.io_data.unique_mapping.rst", "auto/ase2sprkkr.sprkkr.occupations.rst", "auto/ase2sprkkr.sprkkr.occupations.Occupation.rst", "auto/ase2sprkkr.sprkkr.radial_meshes.rst", "auto/ase2sprkkr.sprkkr.radial_meshes.ExponentialMesh.rst", "auto/ase2sprkkr.sprkkr.radial_meshes.Mesh.rst", "auto/ase2sprkkr.sprkkr.reference_systems.rst", "auto/ase2sprkkr.sprkkr.reference_systems.ReferenceSystem.rst", "auto/ase2sprkkr.sprkkr.sites.rst", "auto/ase2sprkkr.sprkkr.sites.Site.rst", "auto/ase2sprkkr.sprkkr.sprkkr_atoms.rst", "auto/ase2sprkkr.sprkkr.sprkkr_atoms.SPRKKRAtoms.rst", "auto/ase2sprkkr.sprkkr.sprkkr_grammar_types.rst", "auto/ase2sprkkr.sprkkr.sprkkr_grammar_types.AtomicType.rst", "auto/ase2sprkkr.sprkkr.sprkkr_grammar_types.Site.rst", "auto/ase2sprkkr.sprkkr.structure.rst", "auto/ase2sprkkr.sprkkr.structure.AtomData.rst", "auto/ase2sprkkr.sprkkr.structure.LayerData.rst", "auto/ase2sprkkr.sprkkr.structure.floatjm.rst", "auto/ase2sprkkr.sprkkr.structure.structure_file_to_atoms.rst", "auto/ase2sprkkr.sprkkr.sysfile.rst", "auto/ase2sprkkr.sprkkr.sysfile.sysfile_content.rst", "auto/ase2sprkkr.sprkkr.sysfile.write_sysfile.rst", "auto/ase2sprkkr.sprkkr.test.rst", "auto/ase2sprkkr.sprkkr.test.init_tests.rst", "auto/ase2sprkkr.sprkkr.test.init_tests.TestCase.rst", "auto/ase2sprkkr.sprkkr.test.test_calculator.rst", "auto/ase2sprkkr.sprkkr.test.test_calculator.CalculatorTest.rst", "auto/ase2sprkkr.sprkkr.test.test_sprkkr_atoms.rst", "auto/ase2sprkkr.sprkkr.test.test_sprkkr_atoms.SPRKKRAtomsTest.rst", "auto/ase2sprkkr.sprkkr.test.test_sysfile.rst", "auto/ase2sprkkr.sprkkr.test.test_sysfile.SysfileTest.rst", "auto/ase2sprkkr.tools.rst", "auto/ase2sprkkr.tools.a2s_visualise_in_struct.rst", "auto/ase2sprkkr.tools.a2s_visualise_in_struct.visualise.rst", "auto/ase2sprkkr.tools.test.rst", "auto/ase2sprkkr.tools.test.init_tests.rst", "auto/ase2sprkkr.tools.test.init_tests.TestCase.rst", "auto/ase2sprkkr.tools.test.test_tools.rst", "auto/ase2sprkkr.tools.test.test_tools.CommonTest.rst", "auto/ase2sprkkr.version.rst", "auto/modules.rst", "changelog.rst", "how-to-install.rst", "index.rst", "installation.rst", "introduction.rst", "philosophy.rst", "usage.rst"], "titles": ["ASE2SPRKKR", "ase2sprkkr", "ase", "visualise", "view", "bindings", "spglib", "compute_spacegroup", "equivalent_sites_for_spacegroup", "possibly_equivalent_sites", "spacegroup_dataset", "common", "alternative_types", "allowed_types", "normalize_type", "normalize_type_map", "types_alternatives", "configuration", "Configuration", "configuration_containers", "BaseSection", "ConfigurationContainer", "CustomSection", "RootConfigurationContainer", "Section", "configuration_definitions", "BaseDefinition", "ConfigurationRootDefinition", "ContainerDefinition", "SectionDefinition", "ValueDefinition", "add_excluded_names_condition", "unique_dict", "decorators", "add_called_class_as_argument", "add_to_signature", "cache", "cached_class_property", "cached_property", "class_property", "doc", "process_input_parameters_definition", "verbatim", "formats", "fortran_format", "grammar", "White", "addConditionEx", "addParseActionEx", "delimitedList", "end_of_file", "generate_grammar", "line_end", "optional_line_end", "optional_quote", "replace_whitechars", "separator", "separator_pattern", "grammar_types", "Array", "BaseMixed", "BaseRealWithUnits", "BaseString", "Bool", "Complex", "Date", "DefKeyword", "Energy", "Flag", "GrammarType", "Integer", "Keyword", "LineString", "Mixed", "Number", "ObjectNumber", "PotMixed", "QString", "Range", "Real", "RealWithUnits", "Separator", "Sequence", "SetOf", "String", "Table", "TypedGrammarType", "Unsigned", "boolean", "compare_numpy_values", "complex_number", "date", "energy", "flag", "format_for_type", "integer", "line_string", "mixed", "pot_mixed", "qstring", "real", "recognized_set_types", "separator", "set_of_integers", "set_of_reals", "string", "type_from_default_value", "type_from_set_map", "type_from_type", "type_from_type_map", "type_from_value", "unsigned", "init_tests", "TestCase", "patch_package", "misc", "OrderedDict", "as_integer", "copy_list", "njit", "numpy_index", "no_output", "NoOutput", "options", "CustomOption", "DangerousValue", "Option", "process_output_reader", "AsyncioFileReader", "BaseProcessOutputReader", "test", "init_tests", "TestCase", "test_common", "CommonTest", "test_grammar_types", "GrammarTest", "unique_values", "UniqueValuesMapping", "input_parameters", "definitions", "arpes", "input_parameters", "dos", "input_parameters", "phagen", "input_parameters", "scf", "input_parameters", "sections", "CONTROL", "CPA", "ENERGY", "MODE", "SCF", "SITES", "STRCONST", "TASK", "TAU", "input_parameters", "InputParameters", "resolve_executable_postfix", "input_parameters_definitions", "InputParametersDefinition", "InputSectionDefinition", "InputValueDefinition", "test", "init_tests", "TestCase", "test_definitions", "TestDefinitions", "test_input_parameters", "TestInputParameters", "outputs", "output_definitions", "OutputNonameValueDefinition", "OutputSectionDefinition", "OutputValueDefinition", "OutputValueEqualDefinition", "readers", "default", "DefaultOutputReader", "DefaultResult", "scf", "ScfOutputReader", "ScfResult", "task_result", "OutputReader", "TaskResult", "test", "init_tests", "TestCase", "test_output", "TestOutput", "physics", "lattice_data", "LatticeData", "winger_seitz_radii", "winger_seitz_radii", "potentials", "custom_potential_section", "CustomPotentialSection", "CustomPotentialSectionDefinition", "CustomSectionToken", "SectionString", "definitions", "potential", "potential_definition", "sections", "_sections", "global_system_parameter", "GlobalSystemParameter", "GlobalSystemParameterDefinition", "section", "lattice", "LatticeSection", "LatticeSectionDefinition", "section", "mesh_information", "MeshInformationSection", "MeshInformationSectionDefinition", "section", "occupation", "OccupationSection", "OccupationSectionDefinition", "section", "reference_system", "ReferenceSystemSection", "ReferenceSystemSectionDefinition", "section", "sites", "SitesSection", "SitesSectionDefinition", "section", "types", "TypesSection", "TypesSectionDefinition", "section", "potential_definitions", "ASEArraySectionDefinition", "PotSectionDefinition", "PotValueDefinition", "PotentialDefinition", "Separator", "potential_sections", "ASEArraySection", "PotentialSection", "UniqueListSection", "potentials", "Potential", "test", "init_tests", "TestCase", "test_custom_section", "TestCustomSection", "test_potential", "TestPotential", "test_structure", "TestStructure", "sprkkr", "atomic_types", "AtomicType", "calculator", "FilenameTemplator", "SPRKKR", "configuration", "ConfigurationFile", "ConfigurationFileDefinition", "ConfigurationSection", "ConfigurationSectionDefinition", "ConfigurationSectionTrait", "ConfigurationValue", "ConfigurationValueDefinition", "CustomConfigurationSection", "CustomConfigurationValue", "io_data", "BaseIoData", "ReadIoData", "WriteIoData", "unique_mapping", "occupations", "Occupation", "radial_meshes", "ExponentialMesh", "Mesh", "reference_systems", "ReferenceSystem", "sites", "Site", "sprkkr_atoms", "SPRKKRAtoms", "sprkkr_grammar_types", "AtomicType", "Site", "structure", "AtomData", "LayerData", "floatjm", "structure_file_to_atoms", "sysfile", "sysfile_content", "write_sysfile", "test", "init_tests", "TestCase", "test_calculator", "CalculatorTest", "test_sprkkr_atoms", "SPRKKRAtomsTest", "test_sysfile", "SysfileTest", "tools", "a2s_visualise_in_struct", "visualise", "test", "init_tests", "TestCase", "test_tools", "CommonTest", "version", "ase2sprkkr", "Changelog", "More about installing of the ASE2SPRKKR package", "ASE2SPRKKR software package", "Installation of the package using package managers", "Usefull links", "ASE2SPR-KKR\u2019s philosophy for the developers", "How to use ASE2SPRKKR"], "terms": {"provid": [0, 1, 30, 59, 64, 83, 138, 165, 175, 177, 178, 195, 196, 202, 241, 243, 272, 323, 325, 327], "an": [0, 12, 18, 20, 21, 25, 26, 28, 30, 32, 48, 50, 53, 54, 56, 57, 60, 62, 63, 68, 69, 71, 72, 73, 75, 76, 77, 78, 81, 82, 84, 85, 86, 106, 113, 117, 124, 126, 132, 134, 136, 160, 163, 165, 168, 170, 172, 175, 177, 178, 191, 193, 201, 202, 204, 239, 241, 242, 243, 249, 252, 254, 256, 258, 261, 264, 266, 272, 283, 287, 288, 289, 290, 304, 306, 308, 310, 316, 318, 321, 322, 323, 324, 325, 326, 327], "interfac": [0, 1, 128, 264, 323, 325], "allow": [0, 13, 18, 20, 21, 23, 26, 50, 59, 61, 64, 65, 67, 70, 74, 75, 79, 80, 83, 87, 141, 143, 145, 147, 160, 162, 238, 240, 249, 266, 292, 293, 321, 323, 325, 326, 327], "spr": [0, 1, 139, 140, 149, 159, 160, 161, 173, 179, 184, 199, 205, 248, 249, 259, 262, 264, 265, 272, 282, 284, 290, 291, 311, 322, 323, 324, 325, 326, 327], "kkr": [0, 1, 139, 140, 149, 159, 160, 161, 173, 179, 184, 199, 205, 248, 249, 259, 262, 264, 265, 272, 282, 284, 290, 291, 311, 322, 323, 324, 325, 327], "electron": [0, 1, 141, 198, 261, 290, 323, 325], "structur": [0, 1, 4, 7, 26, 162, 238, 259, 290, 295, 296, 297, 298, 320, 321, 323, 325, 327], "calcul": [0, 1, 126, 141, 143, 145, 147, 160, 181, 182, 184, 185, 187, 188, 259, 263, 264, 290, 320, 323, 325, 326], "within": [0, 323, 325], "atom": [0, 4, 7, 8, 9, 10, 126, 141, 143, 145, 147, 188, 196, 201, 211, 215, 223, 227, 231, 239, 245, 246, 247, 249, 260, 261, 264, 266, 270, 271, 274, 278, 280, 281, 283, 287, 288, 289, 290, 292, 293, 295, 298, 300, 301, 321, 323, 325, 326], "simul": [0, 323, 325], "environ": [0, 161, 264, 322, 323, 324, 325, 327], "abbrevi": [0, 323, 325], "ASE": [0, 1, 7, 215, 223, 231, 239, 245, 249, 264, 270, 288, 290, 298, 321, 323, 325, 326, 327], "python": [0, 14, 46, 59, 60, 61, 62, 63, 64, 68, 69, 71, 72, 73, 76, 77, 78, 81, 82, 83, 84, 85, 86, 107, 108, 109, 110, 204, 321, 322, 323, 324, 325, 326, 327], "tool": [0, 312, 313, 314, 315, 316, 317, 318, 320, 322, 323, 324, 325], "integr": [0, 141, 143, 145, 147, 323, 325], "variou": [0, 33, 45, 58, 115, 160, 195, 196, 264, 323, 325, 326, 327], "onlin": [0, 322, 323, 324, 325], "version": [0, 163, 264, 289, 320, 322, 323, 324, 325, 326, 327], "thi": [0, 1, 5, 12, 17, 18, 19, 21, 26, 27, 28, 29, 30, 34, 46, 59, 60, 61, 62, 63, 64, 65, 68, 69, 70, 71, 72, 73, 74, 76, 77, 78, 79, 81, 82, 83, 84, 85, 86, 87, 89, 109, 125, 126, 129, 138, 141, 143, 145, 147, 160, 162, 163, 164, 165, 173, 174, 175, 176, 177, 178, 184, 185, 186, 187, 194, 195, 196, 197, 201, 202, 204, 208, 211, 212, 215, 216, 220, 223, 224, 228, 231, 232, 236, 238, 240, 241, 242, 243, 244, 246, 249, 262, 264, 265, 266, 267, 269, 270, 272, 289, 290, 291, 294, 312, 323, 325, 326, 327], "github": [0, 322, 323, 324, 325, 327], "repositori": [0, 322, 323, 324, 325, 327], "manual": [0, 249, 323, 325, 326, 327], "The": [0, 7, 18, 21, 24, 26, 27, 28, 29, 30, 34, 35, 37, 39, 44, 59, 60, 61, 62, 63, 64, 65, 67, 68, 69, 71, 72, 73, 75, 76, 77, 78, 81, 82, 83, 84, 85, 86, 89, 101, 108, 109, 121, 122, 123, 124, 126, 129, 138, 141, 143, 145, 147, 152, 154, 155, 156, 158, 159, 160, 163, 164, 165, 175, 176, 177, 178, 185, 187, 201, 202, 203, 204, 219, 224, 227, 235, 239, 240, 241, 242, 243, 245, 246, 247, 249, 263, 264, 266, 267, 269, 270, 271, 272, 274, 281, 287, 288, 290, 321, 322, 323, 324, 327], "simplest": [0, 322, 324], "wai": [0, 26, 30, 59, 63, 64, 65, 69, 76, 81, 82, 85, 108, 141, 143, 145, 147, 160, 165, 175, 177, 178, 202, 241, 243, 264, 272, 322, 324, 326], "i": [0, 4, 8, 9, 13, 14, 18, 20, 21, 23, 24, 26, 27, 28, 29, 30, 31, 32, 34, 35, 37, 39, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 81, 82, 83, 84, 85, 86, 87, 89, 94, 106, 108, 117, 118, 119, 120, 121, 122, 125, 126, 128, 129, 138, 141, 143, 145, 147, 160, 161, 163, 164, 165, 174, 175, 176, 177, 178, 185, 187, 198, 200, 201, 202, 203, 204, 206, 212, 215, 216, 220, 223, 224, 228, 231, 232, 236, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 261, 264, 266, 267, 269, 270, 272, 277, 288, 290, 292, 293, 294, 312, 321, 322, 324, 326, 327], "them": [0, 1, 18, 19, 21, 126, 160, 209, 290, 322, 324], "either": [0, 19, 21, 26, 28, 29, 69, 75, 77, 78, 126, 160, 215, 223, 231, 246, 261, 264, 322, 324, 326, 327], "c": [0, 21, 32, 121, 122, 141, 147, 198, 263, 264, 322, 324, 327], "In": [0, 19, 23, 30, 46, 126, 128, 165, 175, 177, 178, 198, 201, 202, 241, 243, 244, 264, 265, 272, 291, 322, 324, 326, 327], "some": [0, 18, 20, 21, 27, 30, 59, 63, 64, 65, 69, 76, 81, 82, 85, 113, 126, 132, 168, 175, 191, 215, 223, 231, 246, 252, 264, 266, 271, 278, 290, 304, 316, 322, 324, 326, 327], "system": [0, 141, 143, 145, 147, 212, 228, 247, 288, 322, 324, 327], "util": [0, 34, 126, 294, 322, 324, 326], "python3": [0, 322, 324], "call": [0, 18, 34, 36, 69, 73, 76, 85, 117, 126, 160, 211, 215, 223, 231, 246, 249, 264, 266, 290, 322, 324, 326, 327], "pip3": [0, 322, 324], "If": [0, 4, 8, 18, 20, 21, 26, 27, 28, 29, 30, 34, 35, 59, 61, 64, 69, 71, 83, 94, 108, 120, 126, 138, 160, 161, 164, 165, 175, 176, 177, 178, 185, 202, 215, 223, 231, 241, 242, 243, 245, 246, 249, 261, 264, 267, 269, 270, 272, 281, 288, 290, 322, 324, 326, 327], "you": [0, 30, 35, 60, 61, 78, 165, 249, 322, 324, 327], "can": [0, 7, 18, 20, 21, 23, 26, 27, 28, 29, 30, 34, 37, 39, 58, 59, 60, 61, 64, 66, 67, 68, 69, 71, 73, 74, 75, 76, 82, 83, 85, 89, 106, 108, 109, 124, 125, 126, 129, 138, 160, 164, 165, 175, 176, 177, 178, 185, 187, 200, 202, 215, 223, 224, 231, 240, 241, 242, 243, 245, 246, 249, 261, 264, 266, 267, 269, 271, 272, 280, 281, 290, 294, 321, 322, 324, 326, 327], "linux": [0, 322, 324], "distribut": [0, 322, 324], "e": [0, 7, 9, 12, 13, 14, 18, 20, 21, 23, 24, 25, 26, 28, 30, 35, 44, 59, 64, 68, 69, 71, 73, 82, 83, 85, 101, 108, 125, 126, 141, 143, 145, 147, 160, 165, 175, 177, 178, 185, 187, 198, 200, 202, 203, 204, 211, 212, 215, 216, 220, 223, 224, 228, 231, 232, 236, 240, 241, 243, 245, 246, 247, 249, 261, 263, 264, 266, 270, 272, 281, 288, 290, 322, 324, 326, 327], "g": [0, 7, 12, 18, 23, 25, 26, 28, 30, 59, 64, 68, 69, 71, 73, 82, 83, 85, 101, 108, 125, 126, 145, 147, 160, 165, 175, 177, 178, 185, 187, 202, 211, 215, 223, 231, 241, 243, 245, 246, 247, 249, 261, 263, 264, 266, 270, 272, 281, 290, 322, 324, 326, 327], "debian": [0, 322, 324], "ubuntu": [0, 322, 324], "apt": [0, 322, 324], "zypper": [0, 322, 324], "opensus": [0, 322, 324], "For": [0, 126, 141, 143, 145, 147, 163, 212, 216, 220, 224, 228, 232, 236, 239, 240, 262, 264, 276, 290, 322, 324, 327], "instruct": [0, 322, 324], "see": [0, 26, 27, 30, 39, 69, 82, 107, 108, 141, 143, 145, 147, 160, 163, 165, 175, 177, 178, 196, 202, 212, 216, 220, 224, 228, 232, 236, 239, 240, 241, 243, 245, 263, 264, 272, 290, 312, 322, 324, 326, 327], "anaconda": [0, 322, 324], "http": [0, 61, 198, 262, 264, 322, 324, 326, 327], "doc": [0, 18, 41, 42, 286, 312, 320, 322, 324, 326], "com": [0, 61, 322, 324, 327], "howev": [0, 26, 27, 30, 32, 59, 60, 61, 63, 64, 65, 68, 69, 70, 71, 72, 73, 76, 77, 79, 82, 83, 84, 85, 87, 89, 126, 129, 138, 165, 175, 177, 178, 187, 202, 204, 241, 243, 272, 288, 290, 322, 324, 326, 327], "user": [0, 20, 21, 22, 26, 27, 28, 29, 30, 59, 60, 64, 69, 71, 75, 80, 82, 85, 86, 124, 164, 165, 175, 176, 177, 178, 202, 241, 242, 243, 267, 269, 272, 322, 323, 324, 327], "unexperienc": [0, 322, 324], "simpler": [0, 322, 324], "recommend": [0, 322, 324], "do": [0, 18, 21, 23, 26, 27, 28, 30, 35, 46, 59, 61, 63, 64, 65, 69, 76, 81, 82, 85, 125, 141, 144, 145, 147, 160, 249, 264, 266, 270, 320, 321, 322, 324, 327], "want": [0, 35, 49, 129, 187, 322, 324, 327], "public": [0, 322, 324], "develop": [0, 185, 264, 322, 323, 324], "3": [0, 46, 61, 83, 138, 141, 143, 145, 147, 196, 198, 264, 321, 322, 324, 327], "7": [0, 145, 147, 196, 198, 262, 322, 323, 324], "check": [0, 18, 20, 21, 47, 60, 62, 63, 68, 69, 71, 72, 73, 76, 77, 78, 81, 82, 84, 85, 86, 126, 204, 266, 281, 321, 322, 324, 327], "ase": [0, 3, 4, 7, 262, 264, 289, 290, 320, 322, 324, 327], "mendeleev": [0, 261, 322, 324], "spglib": [0, 7, 8, 9, 10, 290, 320, 322, 324], "pypars": [0, 26, 45, 46, 47, 48, 51, 69, 200, 203, 322, 324, 326], "clone": [0, 322, 324, 327], "checkout": [0, 322, 324], "origin": [0, 51, 145, 147, 322, 324], "releas": [0, 322, 324], "first": [0, 18, 21, 23, 28, 34, 35, 66, 120, 138, 141, 143, 147, 249, 264, 266, 283, 322, 324, 326, 327], "line": [0, 26, 28, 30, 69, 71, 72, 96, 243, 264, 295, 322, 324, 326, 327], "fetch": [0, 322, 324], "second": [0, 138, 145, 147, 322, 324, 326], "one": [0, 9, 26, 28, 30, 49, 59, 66, 67, 69, 71, 78, 96, 123, 126, 138, 141, 143, 145, 147, 164, 165, 175, 176, 177, 178, 202, 211, 215, 223, 231, 240, 241, 243, 246, 264, 270, 272, 278, 280, 281, 290, 294, 322, 324, 326, 327], "out": [0, 129, 160, 187, 264, 321, 322, 324, 327], "product": [0, 322, 324], "current": [0, 26, 30, 129, 160, 187, 264, 322, 324, 326, 327], "earlier": [0, 322, 324, 327], "download": [0, 322, 324], "run": [0, 4, 129, 160, 163, 187, 188, 264, 312, 322, 323, 324], "altern": [0, 15, 16, 21, 26, 27, 28, 29, 30, 164, 165, 175, 176, 177, 178, 202, 241, 242, 243, 264, 267, 269, 272, 322, 324], "master": [0, 322, 324], "branch": [0, 322, 324], "bleed": [0, 322, 324], "edg": [0, 322, 324], "just": [0, 7, 17, 18, 26, 27, 28, 29, 30, 35, 59, 64, 69, 77, 83, 84, 94, 118, 141, 143, 145, 147, 165, 175, 177, 178, 201, 202, 203, 241, 243, 245, 264, 272, 277, 290, 299, 319, 322, 324, 326, 327], "add": [0, 21, 26, 28, 31, 34, 35, 41, 47, 48, 59, 63, 64, 65, 69, 76, 81, 82, 85, 264, 281, 321, 322, 324, 327], "src": [0, 118, 322, 324], "directori": [0, 129, 160, 181, 182, 184, 185, 187, 188, 264, 322, 324], "your": [0, 35, 61, 322, 324, 327], "pythonpath": [0, 322, 324], "describ": [0, 8, 9, 26, 28, 69, 75, 160, 163, 164, 165, 176, 240, 242, 259, 290, 322, 324, 326, 327], "below": [0, 322, 324], "To": [0, 18, 26, 34, 60, 73, 76, 126, 290, 322, 324, 326, 327], "have": [0, 7, 20, 26, 30, 35, 44, 59, 61, 64, 69, 73, 74, 76, 82, 83, 85, 113, 126, 132, 134, 136, 162, 165, 168, 170, 172, 175, 176, 177, 178, 191, 193, 202, 238, 241, 243, 252, 254, 256, 258, 264, 269, 272, 290, 304, 306, 308, 310, 316, 318, 321, 322, 324, 327], "built": [0, 322, 324, 326], "follow": [0, 35, 262, 264, 322, 324, 326, 327], "m": [0, 61, 65, 196, 322, 324], "upgrad": [0, 322, 324], "possibl": [0, 20, 21, 30, 68, 69, 71, 73, 74, 87, 126, 127, 138, 141, 143, 145, 147, 160, 178, 290, 321, 322, 324, 326, 327], "alreadi": [0, 34, 49, 125, 290, 322, 324, 327], "wide": [0, 322, 324], "activ": [0, 322, 324], "virtual": [0, 290, 322, 324], "l": [0, 61, 141, 143, 147, 322, 324], "dist": [0, 322, 324], "whl": [0, 322, 324], "sort": [0, 322, 324], "tail": [0, 322, 324], "n": [0, 28, 128, 163, 164, 176, 198, 202, 203, 204, 240, 242, 261, 283, 322, 324], "1": [0, 7, 28, 32, 44, 67, 83, 85, 122, 138, 141, 143, 145, 147, 196, 198, 281, 283, 288, 322, 323, 324, 326, 327], "all": [0, 4, 13, 18, 21, 26, 28, 30, 68, 69, 72, 73, 126, 129, 175, 185, 203, 209, 249, 263, 264, 290, 322, 324, 327], "stuff": [0, 18, 160, 175, 194, 266, 322, 324, 326], "after": [0, 21, 26, 30, 35, 60, 62, 63, 68, 69, 71, 72, 73, 76, 77, 78, 81, 82, 84, 85, 86, 126, 145, 147, 161, 175, 204, 215, 223, 231, 245, 246, 322, 324, 327], "make": [0, 21, 60, 78, 114, 126, 127, 138, 290, 321, 322, 324, 327], "clean": [0, 27, 28, 299, 322, 324], "up": [0, 27, 28, 34, 72, 141, 143, 145, 147, 200, 203, 299, 322, 324, 326], "publish": [0, 322, 324], "io": [0, 322, 324, 326], "ar": [0, 7, 8, 13, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 50, 67, 69, 73, 76, 85, 101, 106, 107, 126, 138, 141, 159, 160, 163, 164, 165, 174, 175, 176, 177, 178, 185, 187, 198, 200, 201, 202, 240, 241, 242, 243, 244, 245, 249, 263, 264, 265, 266, 267, 269, 272, 275, 278, 281, 284, 290, 291, 321, 322, 324, 326, 327], "open": [0, 20, 30, 160, 264, 322, 324], "index": [0, 26, 116, 120, 126, 138, 262, 322, 323, 324], "html": [0, 264, 322, 324], "offlin": [0, 322, 324], "contain": [0, 5, 12, 17, 18, 19, 20, 21, 22, 23, 24, 26, 27, 28, 30, 44, 58, 61, 69, 124, 126, 141, 143, 145, 147, 159, 160, 162, 163, 165, 173, 174, 175, 177, 178, 185, 186, 194, 195, 197, 201, 202, 208, 211, 212, 215, 216, 219, 220, 223, 224, 227, 228, 231, 232, 235, 236, 238, 239, 240, 241, 242, 243, 245, 246, 247, 249, 262, 264, 266, 268, 270, 271, 272, 273, 274, 278, 289, 294, 298, 299, 322, 324, 326, 327], "part": [0, 20, 25, 26, 126, 129, 141, 143, 145, 147, 174, 176, 200, 322, 324, 326], "gener": [0, 26, 27, 34, 41, 69, 126, 194, 211, 215, 223, 231, 244, 246, 264, 290, 321, 322, 323, 324, 326], "docstr": [0, 40, 41, 321, 322, 324], "regener": [0, 322, 324], "sphinx": [0, 322, 324], "toolbox": [0, 322, 324], "pandoc": [0, 322, 324], "readm": [0, 322, 324], "md": [0, 322, 324], "need": [0, 30, 34, 125, 165, 264, 278, 322, 324, 326, 327], "offici": [0, 322, 324], "miss": [0, 18, 26, 27, 28, 29, 30, 164, 165, 175, 176, 177, 178, 202, 241, 242, 243, 266, 267, 269, 272, 322, 324], "attribut": [0, 12, 21, 26, 30, 33, 45, 58, 69, 85, 138, 141, 143, 145, 147, 149, 175, 197, 206, 264, 290, 321, 322, 324, 327], "when": [0, 26, 27, 29, 30, 85, 113, 125, 126, 132, 134, 136, 168, 170, 172, 175, 191, 193, 215, 223, 231, 246, 252, 254, 256, 258, 264, 290, 304, 306, 308, 310, 316, 318, 322, 324, 326, 327], "so": [0, 26, 27, 28, 29, 59, 60, 61, 63, 64, 65, 69, 76, 78, 81, 82, 85, 101, 118, 125, 126, 160, 162, 164, 176, 194, 224, 238, 240, 242, 246, 263, 267, 269, 278, 281, 290, 321, 322, 324, 326, 327], "till": [0, 322, 324], "pullrequest": [0, 322, 324, 327], "correct": [0, 26, 300, 322, 324, 327], "behavior": [0, 26, 29, 30, 175, 322, 324], "merg": [0, 21, 138, 321, 322, 324], "pleas": [0, 163, 290, 299, 322, 324, 327], "fork": [0, 322, 324], "lokik": [0, 322, 324], "feel": [0, 322, 324, 327], "free": [0, 198, 322, 324, 327], "pull": [0, 322, 324], "request": [0, 264, 322, 324, 327], "post": [0, 322, 324, 327], "issu": [0, 322, 324, 327], "full": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 25, 31, 32, 33, 34, 35, 36, 38, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 66, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 114, 115, 117, 118, 119, 120, 121, 123, 127, 130, 131, 133, 135, 137, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 161, 162, 166, 167, 169, 171, 173, 174, 179, 180, 183, 186, 189, 190, 192, 194, 195, 197, 198, 199, 200, 205, 206, 207, 208, 209, 210, 214, 218, 222, 226, 230, 234, 238, 244, 248, 250, 251, 253, 255, 257, 259, 260, 262, 265, 266, 270, 275, 279, 280, 282, 285, 287, 289, 291, 294, 297, 298, 299, 300, 301, 302, 303, 305, 307, 309, 311, 312, 313, 314, 315, 317, 319], "name": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 63, 65, 66, 68, 69, 70, 72, 73, 77, 79, 81, 82, 83, 84, 85, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 117, 118, 119, 120, 121, 123, 126, 127, 130, 131, 132, 133, 134, 135, 136, 137, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 183, 185, 186, 189, 190, 191, 192, 193, 194, 195, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 212, 214, 216, 218, 219, 220, 222, 224, 226, 227, 228, 230, 232, 234, 235, 236, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 262, 263, 264, 265, 267, 269, 272, 275, 279, 280, 281, 282, 285, 287, 289, 290, 291, 294, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 321, 326, 327], "descript": [1, 2, 3, 5, 6, 11, 12, 17, 19, 25, 26, 27, 28, 29, 30, 33, 40, 43, 45, 58, 60, 61, 62, 63, 65, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 81, 84, 86, 87, 112, 115, 121, 123, 127, 130, 131, 133, 135, 137, 139, 140, 141, 143, 145, 147, 149, 159, 162, 164, 165, 166, 167, 169, 171, 173, 174, 176, 179, 180, 183, 186, 189, 190, 192, 194, 195, 197, 199, 200, 202, 204, 205, 206, 208, 210, 214, 218, 222, 226, 230, 234, 238, 242, 244, 248, 250, 251, 253, 255, 257, 259, 260, 262, 265, 267, 269, 272, 275, 280, 282, 285, 287, 289, 291, 292, 293, 294, 299, 302, 303, 305, 307, 309, 311, 312, 314, 315, 317, 319], "root": [1, 18, 27, 266, 267], "packag": [1, 5, 11, 114, 115, 173, 208, 290, 319, 325, 327], "import": [1, 61, 114, 126, 209, 327], "few": [1, 29, 45, 84, 264, 326], "most": [1, 117, 202, 327], "us": [1, 4, 8, 11, 18, 21, 26, 27, 28, 29, 30, 34, 44, 45, 59, 60, 61, 62, 63, 64, 68, 69, 71, 72, 73, 75, 76, 77, 78, 81, 82, 83, 84, 85, 86, 103, 104, 112, 113, 115, 125, 126, 131, 132, 134, 136, 138, 141, 143, 145, 147, 149, 160, 164, 165, 167, 168, 170, 172, 174, 175, 176, 177, 178, 185, 186, 187, 190, 191, 193, 202, 204, 208, 211, 215, 223, 231, 241, 242, 243, 246, 247, 249, 251, 252, 254, 256, 258, 259, 261, 262, 263, 264, 266, 267, 268, 269, 272, 273, 275, 276, 278, 281, 282, 288, 289, 290, 294, 299, 303, 304, 306, 308, 310, 315, 316, 318, 323, 325, 326], "object": [1, 7, 9, 18, 20, 21, 24, 25, 26, 27, 28, 29, 30, 35, 46, 60, 61, 62, 63, 68, 69, 71, 72, 73, 74, 75, 76, 77, 78, 81, 82, 84, 85, 86, 106, 117, 118, 124, 126, 137, 138, 142, 144, 146, 148, 151, 152, 153, 154, 155, 156, 158, 159, 160, 164, 175, 176, 184, 185, 195, 201, 203, 204, 207, 211, 215, 223, 231, 242, 245, 246, 247, 248, 249, 264, 267, 269, 270, 271, 272, 274, 275, 276, 277, 288, 290, 295, 298, 300, 326], "shortcut": [1, 264], "modul": [1, 2, 5, 11, 12, 17, 19, 25, 33, 41, 45, 58, 61, 112, 115, 121, 123, 127, 130, 131, 133, 135, 137, 139, 140, 141, 143, 145, 147, 149, 159, 162, 166, 167, 169, 171, 173, 174, 179, 180, 183, 186, 189, 190, 192, 194, 195, 197, 199, 200, 205, 206, 208, 209, 210, 214, 218, 222, 226, 230, 234, 238, 244, 248, 250, 251, 253, 255, 257, 259, 260, 265, 275, 280, 282, 285, 287, 289, 291, 294, 299, 302, 303, 305, 307, 309, 311, 314, 315, 317, 320, 323, 326], "ase2sprkkr": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 321, 324, 325, 326], "function": [3, 6, 12, 22, 25, 26, 28, 30, 33, 34, 35, 40, 43, 45, 58, 60, 62, 63, 68, 69, 71, 72, 73, 76, 77, 78, 81, 82, 84, 85, 86, 112, 115, 120, 121, 122, 124, 126, 129, 149, 159, 162, 185, 187, 204, 208, 211, 215, 223, 224, 231, 238, 240, 246, 249, 263, 264, 275, 279, 294, 299, 312, 327], "visualis": [4, 294, 312, 320, 321, 327], "repeat": [4, 26, 30, 327], "none": [4, 7, 8, 9, 18, 20, 21, 22, 23, 24, 26, 27, 28, 29, 30, 35, 37, 39, 48, 59, 60, 61, 62, 63, 64, 65, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 81, 82, 83, 84, 85, 86, 87, 94, 124, 125, 126, 129, 138, 160, 163, 164, 165, 175, 176, 177, 178, 185, 201, 202, 204, 211, 215, 219, 223, 227, 231, 235, 241, 242, 243, 245, 246, 247, 249, 261, 264, 266, 267, 268, 269, 270, 271, 272, 273, 274, 281, 288, 290, 292, 293, 327], "scale_radii": 4, "0": [4, 7, 44, 61, 67, 110, 117, 126, 129, 138, 141, 143, 145, 147, 264, 281, 288, 298, 323, 326, 327], "5": [4, 21, 126, 141, 143, 145, 147, 196, 198, 327], "rotat": [4, 141], "bond": 4, "fals": [4, 7, 8, 9, 18, 20, 21, 23, 26, 27, 28, 29, 30, 35, 59, 60, 62, 63, 64, 68, 69, 71, 72, 73, 76, 77, 78, 81, 82, 83, 84, 85, 86, 106, 108, 126, 129, 138, 141, 143, 145, 147, 160, 161, 164, 165, 175, 176, 177, 178, 202, 204, 241, 242, 243, 249, 264, 267, 269, 270, 272, 290, 327], "graph": 4, "termin": 4, "block": 4, "sourc": [4, 7, 8, 9, 10, 14, 18, 20, 21, 22, 23, 24, 26, 27, 28, 29, 30, 31, 32, 34, 35, 36, 37, 38, 39, 41, 42, 44, 46, 47, 48, 49, 51, 55, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 89, 94, 106, 108, 110, 113, 114, 116, 117, 118, 119, 120, 122, 124, 125, 126, 128, 129, 132, 134, 136, 138, 150, 157, 160, 161, 163, 164, 165, 168, 170, 172, 175, 176, 177, 178, 181, 182, 184, 185, 187, 188, 191, 193, 196, 201, 202, 203, 204, 209, 211, 212, 215, 216, 219, 220, 223, 224, 227, 228, 231, 232, 235, 236, 239, 240, 241, 242, 243, 245, 246, 247, 249, 252, 254, 256, 258, 261, 263, 264, 266, 267, 268, 269, 270, 271, 272, 273, 274, 276, 277, 278, 279, 281, 283, 284, 286, 288, 290, 292, 293, 295, 296, 297, 298, 300, 301, 304, 306, 308, 310, 313, 316, 318, 323, 327], "viewer": 4, "paramet": [4, 7, 8, 9, 18, 20, 21, 22, 23, 26, 27, 28, 29, 30, 35, 41, 44, 50, 52, 53, 54, 56, 59, 60, 61, 62, 63, 64, 65, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 94, 108, 122, 125, 126, 129, 138, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 157, 159, 160, 161, 163, 164, 165, 174, 175, 176, 177, 178, 185, 187, 202, 204, 211, 212, 215, 216, 220, 223, 224, 228, 231, 232, 236, 239, 240, 241, 242, 243, 245, 246, 247, 249, 261, 264, 266, 267, 269, 270, 271, 272, 274, 281, 283, 288, 290, 292, 293, 298, 301, 321, 323, 326], "option": [4, 7, 9, 17, 18, 21, 25, 26, 28, 30, 44, 54, 60, 61, 62, 63, 65, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 81, 82, 84, 85, 86, 87, 108, 124, 125, 129, 140, 141, 143, 145, 147, 160, 162, 164, 165, 175, 176, 177, 178, 200, 201, 202, 204, 238, 240, 241, 243, 249, 262, 264, 265, 270, 271, 272, 274, 290, 292, 293, 320, 321, 326, 327], "union": [4, 18, 21, 28, 30, 60, 61, 62, 63, 65, 67, 68, 69, 70, 72, 73, 74, 75, 76, 77, 78, 79, 81, 84, 86, 87, 108, 122, 126, 138, 161, 165, 175, 177, 178, 202, 204, 241, 243, 264, 272, 292, 293], "int": [4, 12, 13, 14, 15, 16, 28, 61, 65, 67, 70, 74, 75, 79, 87, 107, 108, 109, 122, 129, 138, 187, 261, 264, 283, 290, 292, 293, 298], "tupl": [4, 26, 27, 28, 59, 64, 69, 83, 101, 129, 138, 187, 196], "along": 4, "ax": [4, 185], "x": [4, 32, 37, 39, 61, 147, 327], "y": [4, 32, 65, 147, 198], "z": [4, 77, 84, 147], "given": [4, 8, 9, 13, 14, 18, 21, 22, 23, 26, 28, 30, 31, 44, 47, 48, 58, 59, 60, 61, 62, 63, 64, 68, 69, 71, 72, 73, 75, 76, 77, 78, 81, 82, 83, 84, 85, 86, 94, 108, 109, 121, 122, 124, 126, 138, 147, 160, 161, 165, 175, 177, 178, 185, 196, 202, 204, 224, 240, 241, 243, 245, 246, 249, 261, 264, 266, 270, 272, 279, 281, 284, 288, 290, 298, 300, 326, 327], "same": [4, 9, 18, 28, 30, 35, 83, 126, 128, 138, 160, 174, 263, 264, 266, 270, 288, 290, 326, 327], "number": [4, 7, 9, 30, 44, 58, 61, 65, 67, 70, 75, 79, 80, 85, 87, 90, 118, 126, 138, 141, 143, 145, 147, 165, 175, 177, 178, 196, 202, 211, 215, 223, 231, 241, 243, 246, 247, 249, 261, 264, 270, 272, 281, 288, 290, 291, 292, 293, 298, 320, 321, 327], "axi": 4, "float": [4, 7, 13, 15, 16, 44, 61, 67, 79, 80, 85, 92, 107, 109, 117, 185, 281, 283, 290, 298], "rel": [4, 114, 160, 187], "size": [4, 239, 321], "site": [4, 126, 141, 143, 145, 147, 231, 232, 233, 249, 260, 261, 270, 278, 280, 281, 283, 290, 291, 320, 321, 327], "str": [4, 18, 20, 21, 22, 23, 26, 27, 28, 29, 30, 44, 50, 52, 53, 54, 56, 59, 60, 61, 62, 63, 65, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 81, 82, 83, 84, 85, 86, 87, 94, 108, 109, 126, 138, 160, 161, 163, 164, 165, 175, 176, 177, 178, 185, 202, 204, 219, 224, 227, 235, 239, 240, 241, 242, 243, 246, 247, 249, 261, 264, 266, 267, 269, 270, 272, 292, 293, 298, 301], "exampl": [4, 34, 35, 37, 39, 61, 264, 327], "x90": 4, "y90": 4, "z90": 4, "show": [4, 18, 26, 28, 30, 185], "between": [4, 138, 141, 196, 326], "bool": [4, 7, 9, 13, 15, 16, 18, 20, 21, 23, 26, 28, 30, 58, 60, 61, 62, 65, 67, 68, 69, 70, 72, 73, 74, 75, 76, 77, 78, 79, 81, 84, 86, 87, 88, 108, 109, 125, 126, 138, 160, 161, 163, 165, 175, 177, 178, 202, 204, 239, 240, 241, 243, 264, 270, 272, 290, 292, 293, 320, 321], "subprocess": 4, "achiev": 4, "nonblock": 4, "wrapper": [5, 6], "routin": [5, 18, 43, 45, 60, 62, 63, 68, 69, 71, 72, 73, 76, 77, 78, 81, 82, 84, 85, 86, 112, 115, 129, 131, 167, 190, 199, 204, 251, 266, 270, 290, 303, 315, 326], "other": [5, 19, 21, 26, 66, 69, 138, 160, 163, 175, 185, 212, 216, 220, 224, 228, 232, 236, 239, 240, 247, 264, 326, 327], "physic": [5, 195, 196, 197, 198, 320], "code": [5, 114, 299, 323, 327], "librari": [5, 261], "bind": [6, 7, 8, 9, 10, 228, 320], "comput": [6, 26, 37, 141, 143, 145, 147, 185, 259, 281, 284, 290, 323], "symmetri": [6, 7, 141, 143, 145, 147, 196, 288, 290, 327], "primit": [6, 196, 327], "cell": [6, 7, 196, 215, 264, 290, 327], "atomic_numb": [7, 8, 9, 261, 290], "consider_old": [7, 8, 9, 290], "precis": [7, 272], "1e": [7, 145, 147, 290], "05": [7, 141, 145, 147, 198, 290], "angular_precis": 7, "return": [7, 8, 9, 14, 18, 20, 21, 22, 24, 26, 27, 28, 29, 30, 34, 37, 39, 44, 50, 52, 53, 54, 56, 59, 60, 61, 62, 63, 64, 65, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 81, 82, 83, 84, 85, 86, 87, 94, 106, 108, 120, 124, 126, 129, 138, 150, 157, 160, 161, 163, 164, 165, 176, 177, 178, 185, 187, 196, 204, 215, 223, 224, 231, 240, 241, 242, 246, 264, 279, 281, 300, 326, 327], "spacegroup": [7, 8, 290], "suit": [7, 60, 78], "list": [7, 9, 28, 30, 35, 49, 59, 64, 69, 83, 101, 118, 138, 160, 162, 165, 175, 177, 178, 185, 202, 219, 227, 235, 238, 241, 243, 247, 264, 272, 278, 290], "overriden": [7, 69, 264], "forc": [7, 28, 264], "partiali": [7, 327], "break": 7, "real": [7, 58, 61, 67, 73, 76, 80, 104, 109, 110, 126, 141, 143, 145, 147, 261, 320], "ones": [7, 14, 15, 187, 215, 223, 231, 246, 327], "thei": [7, 25, 26, 27, 28, 29, 30, 35, 127, 129, 138, 162, 164, 165, 175, 176, 177, 178, 187, 200, 202, 215, 223, 231, 238, 241, 242, 243, 246, 264, 267, 269, 272, 321, 326, 327], "treat": 7, "label": [7, 264], "equival": [7, 8, 9, 137, 138, 288, 290], "class": [7, 8, 9, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 33, 34, 37, 38, 39, 45, 46, 58, 59, 60, 61, 62, 63, 64, 65, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 101, 107, 108, 109, 112, 113, 115, 116, 121, 122, 123, 124, 125, 126, 127, 128, 129, 131, 132, 133, 134, 135, 136, 137, 138, 159, 160, 162, 163, 164, 165, 167, 168, 169, 170, 171, 172, 174, 175, 176, 177, 178, 180, 181, 182, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 195, 196, 200, 201, 202, 203, 204, 210, 211, 212, 214, 215, 216, 218, 219, 220, 222, 223, 224, 226, 227, 228, 230, 231, 232, 234, 235, 236, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 251, 252, 253, 254, 255, 256, 257, 258, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 303, 304, 305, 306, 307, 308, 309, 310, 315, 316, 317, 318, 321, 326, 327], "toler": [7, 145, 147], "unprecis": 7, "angular": [7, 141], "coordin": [7, 141, 147], "dataset": [7, 141, 143, 145, 147], "type": [7, 9, 13, 14, 15, 16, 18, 20, 21, 22, 23, 26, 28, 30, 32, 44, 50, 52, 53, 54, 56, 58, 59, 60, 62, 63, 64, 65, 67, 68, 69, 70, 71, 72, 73, 75, 76, 77, 78, 79, 81, 82, 83, 84, 85, 86, 87, 88, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 124, 125, 126, 129, 141, 143, 145, 147, 150, 157, 160, 163, 164, 165, 175, 176, 177, 178, 185, 187, 196, 198, 201, 202, 204, 215, 223, 224, 231, 235, 236, 237, 240, 241, 242, 243, 246, 247, 249, 261, 264, 266, 270, 271, 272, 274, 278, 280, 281, 288, 290, 292, 293, 298, 323, 326], "dict": [7, 21, 26, 94, 108, 138, 185, 264, 277, 281, 288, 290], "creat": [8, 18, 20, 21, 22, 23, 24, 26, 27, 28, 30, 32, 58, 60, 62, 63, 68, 69, 71, 72, 73, 76, 77, 78, 81, 82, 84, 85, 86, 106, 113, 132, 134, 136, 150, 157, 160, 165, 168, 170, 172, 191, 193, 204, 211, 215, 219, 223, 227, 231, 235, 245, 246, 247, 249, 252, 254, 256, 258, 264, 266, 268, 270, 273, 278, 279, 288, 290, 295, 298, 304, 306, 308, 310, 316, 318, 326, 327], "compute_spacegroup": [8, 320], "precomput": 8, "taken": 8, "from": [8, 9, 18, 21, 22, 23, 26, 27, 28, 29, 30, 32, 34, 37, 39, 59, 60, 64, 66, 69, 71, 73, 75, 76, 82, 85, 86, 89, 106, 108, 110, 114, 124, 126, 138, 160, 162, 163, 164, 165, 174, 175, 176, 177, 178, 185, 202, 209, 215, 223, 227, 231, 238, 241, 242, 243, 245, 246, 247, 249, 261, 264, 266, 267, 269, 270, 272, 279, 295, 298, 321, 323, 326, 327], "otherwis": [8, 20, 21, 23, 108, 160, 185, 249, 264, 269, 327], "addit": [8, 23, 26, 27, 28, 29, 30, 59, 63, 64, 65, 69, 71, 76, 81, 82, 85, 164, 176, 242, 249, 264, 267, 269, 270, 290], "determin": [8, 18, 26, 30, 108, 160, 163, 165, 175, 177, 178, 187, 202, 241, 243, 261, 264, 272, 281, 288, 290, 326, 327], "occup": [9, 223, 224, 225, 288, 290, 320, 327], "etc": [9, 18, 24, 26, 28, 30, 59, 63, 64, 65, 69, 76, 81, 82, 85, 117, 141, 185, 211, 215, 223, 231, 246, 247, 249, 263, 264, 270, 321, 326], "uniquevaluesmap": [9, 137, 279, 320], "sprkkr": [11, 20, 126, 140, 141, 143, 145, 147, 159, 160, 162, 163, 164, 165, 199, 200, 201, 202, 205, 210, 211, 212, 214, 215, 216, 218, 219, 220, 222, 223, 224, 226, 227, 228, 230, 231, 232, 234, 235, 236, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 260, 261, 262, 263, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 320, 323, 327], "common": [12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 147, 159, 160, 162, 163, 164, 165, 167, 168, 169, 170, 171, 172, 174, 175, 176, 177, 178, 180, 181, 183, 184, 186, 187, 190, 191, 192, 193, 200, 201, 202, 204, 210, 211, 212, 214, 215, 216, 218, 219, 220, 222, 223, 224, 226, 227, 228, 230, 231, 232, 234, 235, 236, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 251, 252, 253, 254, 255, 256, 257, 258, 265, 266, 267, 268, 269, 271, 272, 273, 274, 291, 292, 293, 303, 304, 305, 306, 307, 308, 309, 310, 315, 316, 317, 318, 320, 323, 327], "helper": [12, 294, 295], "data": [12, 18, 20, 21, 23, 26, 28, 30, 85, 165, 174, 175, 177, 178, 185, 196, 202, 219, 227, 235, 239, 241, 243, 245, 247, 248, 249, 259, 266, 270, 271, 272, 277, 290, 295, 298, 321, 326], "deal": 12, "problem": [12, 18, 21, 23, 26, 58, 141, 143, 145, 147, 327], "numpi": [12, 13, 14, 15, 16, 59, 63, 68, 69, 70, 73, 76, 79, 82, 85, 89, 101, 113, 132, 168, 191, 252, 304, 316, 326], "arrai": [12, 21, 30, 58, 64, 69, 73, 76, 82, 83, 85, 89, 101, 103, 104, 113, 120, 126, 132, 138, 141, 143, 145, 147, 165, 168, 175, 177, 178, 185, 191, 202, 239, 241, 243, 245, 252, 272, 290, 304, 316, 320, 321, 326, 327], "own": [12, 18, 21, 23, 30, 124, 126, 201, 271, 274, 327], "datatyp": [12, 62, 63, 65, 67, 68, 70, 74, 79, 86], "thu": [12, 21, 34, 126, 160, 187, 290, 326, 327], "mai": [12, 327], "what": [12, 30, 59, 60, 61, 63, 65, 68, 69, 70, 71, 72, 77, 79, 82, 84, 85, 87, 165, 175, 177, 178, 185, 202, 204, 241, 243, 264, 272], "seem": 12, "alternative_typ": [13, 14, 15, 16, 320], "int64": [13, 14, 15, 16, 70, 117], "float64": [13, 15, 16, 79], "complex": [13, 15, 16, 58, 90, 109, 117, 141, 320, 321], "complex128": [13, 15, 16], "bool_": [13, 15, 16, 63, 68], "datetim": [13, 15, 16, 65, 263], "datetime64": [13, 15, 16], "content": [13, 20, 21, 24, 26, 27, 161, 200, 201, 202, 203, 300, 326, 327], "types_altern": [13, 320], "primari": 13, "itself": [13, 278, 284], "canon": [14, 15, 107], "map": [14, 15, 16, 107, 109, 138, 196, 201], "intern": [14, 126, 196], "standard": [14, 24, 88, 90, 91, 92, 93, 95, 96, 97, 98, 99, 100, 102, 103, 104, 105, 109, 111, 141, 143, 145, 147, 162, 164, 176, 238, 240, 242, 264, 326], "doctest": [14, 110, 138], "np": [14, 59, 64, 83, 117, 138, 141, 160, 198, 264, 327], "set": [16, 18, 20, 21, 26, 27, 28, 29, 30, 35, 51, 59, 60, 61, 62, 63, 64, 65, 66, 68, 69, 70, 71, 72, 74, 75, 77, 79, 81, 82, 83, 84, 85, 86, 87, 106, 108, 114, 126, 138, 141, 143, 145, 147, 164, 165, 175, 176, 177, 178, 185, 202, 204, 211, 215, 223, 227, 231, 241, 242, 243, 245, 246, 247, 249, 264, 266, 267, 269, 270, 272, 281, 290, 323, 326], "hierarchi": [17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 33, 37, 39, 45, 46, 58, 59, 60, 61, 62, 63, 64, 65, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 112, 113, 115, 116, 121, 122, 123, 124, 125, 126, 127, 128, 129, 131, 132, 133, 134, 135, 136, 137, 138, 159, 160, 162, 163, 164, 165, 167, 168, 169, 170, 171, 172, 174, 175, 176, 177, 178, 180, 181, 182, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 195, 196, 200, 201, 202, 203, 204, 210, 211, 212, 214, 215, 216, 218, 219, 220, 222, 223, 224, 226, 227, 228, 230, 231, 232, 234, 235, 236, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 251, 252, 253, 254, 255, 256, 257, 258, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 303, 304, 305, 306, 307, 308, 309, 310, 315, 316, 317, 318], "base": [17, 18, 21, 23, 26, 28, 29, 61, 62, 69, 74, 85, 138, 188, 265, 276, 284, 323], "both": [17, 25, 30, 58, 165, 175, 177, 178, 202, 241, 243, 272, 326, 327], "valu": [17, 18, 19, 20, 21, 22, 23, 24, 26, 27, 28, 29, 30, 31, 32, 37, 39, 44, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 92, 98, 101, 106, 109, 110, 117, 123, 124, 125, 126, 129, 138, 140, 141, 143, 145, 147, 150, 157, 160, 162, 164, 165, 175, 176, 177, 178, 185, 187, 201, 202, 204, 211, 215, 223, 227, 228, 231, 238, 240, 241, 242, 243, 245, 246, 247, 249, 261, 263, 264, 266, 267, 269, 270, 271, 272, 274, 281, 292, 293, 321, 326, 327], "section": [17, 18, 19, 20, 21, 22, 23, 25, 26, 27, 28, 29, 30, 56, 57, 81, 124, 126, 141, 143, 145, 147, 150, 151, 152, 153, 154, 155, 156, 157, 158, 162, 163, 164, 175, 176, 200, 201, 202, 203, 204, 209, 210, 211, 212, 214, 215, 216, 218, 219, 220, 222, 223, 224, 226, 227, 228, 230, 231, 232, 234, 235, 236, 238, 239, 240, 242, 243, 244, 245, 246, 247, 249, 264, 265, 267, 268, 269, 270, 273, 278, 320, 321, 326, 327], "definit": [18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 69, 124, 126, 139, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 160, 162, 165, 174, 175, 177, 178, 201, 202, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 241, 242, 243, 245, 246, 247, 249, 264, 266, 268, 269, 271, 272, 273, 274, 282, 283, 288, 320, 321, 326, 327], "constructor": [18, 20, 21, 22, 23, 24, 26, 27, 28, 29, 30, 37, 39, 46, 59, 60, 61, 62, 63, 64, 65, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 113, 116, 122, 124, 125, 126, 128, 129, 132, 134, 136, 138, 160, 163, 164, 165, 168, 170, 172, 175, 176, 177, 178, 181, 182, 184, 185, 187, 188, 191, 193, 196, 201, 202, 203, 204, 211, 212, 215, 216, 219, 220, 223, 224, 227, 228, 231, 232, 235, 236, 239, 240, 241, 242, 243, 245, 246, 247, 249, 252, 254, 256, 258, 261, 263, 264, 266, 267, 268, 269, 270, 271, 272, 273, 274, 276, 277, 278, 281, 283, 284, 286, 288, 290, 292, 293, 295, 296, 304, 306, 308, 310, 316, 318, 327], "__init__": [18, 20, 21, 22, 23, 24, 26, 27, 28, 29, 30, 37, 39, 46, 59, 60, 61, 62, 63, 64, 65, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 113, 116, 122, 124, 125, 126, 128, 129, 132, 134, 136, 138, 160, 163, 164, 165, 168, 170, 172, 175, 176, 177, 178, 181, 182, 184, 185, 187, 188, 191, 193, 196, 201, 202, 203, 204, 211, 212, 215, 216, 219, 220, 223, 224, 227, 228, 231, 232, 235, 236, 239, 240, 241, 242, 243, 245, 246, 247, 249, 252, 254, 256, 258, 261, 263, 264, 266, 267, 268, 269, 270, 271, 272, 273, 274, 276, 277, 278, 281, 283, 284, 286, 288, 290, 292, 293, 295, 296, 304, 306, 308, 310, 316, 318], "configuration_definit": [18, 22, 24, 26, 27, 28, 29, 30, 31, 32, 162, 163, 164, 165, 174, 175, 176, 177, 178, 200, 202, 210, 212, 214, 216, 218, 220, 222, 224, 226, 228, 230, 232, 234, 236, 238, 239, 240, 241, 242, 243, 265, 267, 269, 272, 320, 326], "basedefinit": [18, 22, 25, 27, 28, 29, 30, 162, 163, 164, 165, 174, 175, 176, 177, 178, 200, 202, 210, 212, 214, 216, 218, 220, 222, 224, 226, 228, 230, 232, 234, 236, 238, 239, 240, 241, 242, 243, 265, 267, 269, 272, 320], "item": [18, 26, 28, 30, 69, 82, 120, 126, 138, 176, 240, 242, 278, 281, 283], "_definit": 18, "": [18, 21, 26, 28, 30, 42, 59, 61, 73, 76, 82, 85, 89, 126, 138, 141, 145, 147, 175, 185, 198, 239, 261, 264, 278], "instanc": [18, 25, 26, 27, 30, 69, 85, 88, 90, 91, 92, 93, 95, 96, 97, 98, 99, 100, 102, 103, 104, 105, 106, 108, 111, 113, 126, 132, 134, 136, 138, 163, 168, 170, 172, 191, 193, 242, 252, 254, 256, 258, 304, 306, 308, 310, 316, 318], "_contain": 18, "parent": [18, 22, 35, 124], "hold": [18, 19, 60, 160, 185, 201, 248, 249, 272, 290, 321, 326, 327], "configuration_contain": [18, 20, 21, 22, 23, 24, 126, 159, 160, 210, 211, 214, 215, 218, 219, 222, 223, 226, 227, 230, 231, 234, 235, 244, 245, 246, 247, 248, 249, 265, 266, 268, 273, 320, 326], "configurationcontain": [18, 19, 20, 22, 23, 24, 126, 159, 160, 210, 211, 214, 215, 218, 219, 222, 223, 226, 227, 230, 231, 234, 235, 244, 245, 246, 247, 248, 249, 265, 266, 268, 273, 320, 326], "_get_path": 18, "include_root": 18, "dot": [18, 264, 327], "delimit": [18, 26, 27, 28, 29, 49, 59, 83, 163, 164, 176, 202, 240, 242], "path": [18, 160, 187, 264, 327], "tree": [18, 326], "energi": [18, 58, 73, 76, 126, 141, 143, 145, 147, 185, 264, 320, 327], "control": [18, 141, 143, 145, 147, 157, 321], "ha": [18, 20, 26, 27, 28, 29, 30, 34, 35, 69, 85, 94, 106, 125, 160, 164, 165, 175, 176, 177, 178, 185, 200, 202, 215, 223, 231, 241, 242, 243, 246, 247, 264, 267, 269, 272, 290, 321, 326, 327], "_get_root_contain": 18, "repres": [18, 58, 63, 261], "whole": [18, 27, 28, 34, 326], "file": [18, 19, 20, 21, 23, 25, 26, 27, 28, 29, 30, 50, 56, 57, 68, 69, 73, 76, 85, 88, 92, 93, 96, 97, 98, 99, 102, 122, 124, 125, 126, 128, 129, 139, 141, 143, 145, 147, 149, 150, 152, 154, 155, 156, 157, 158, 159, 160, 162, 163, 164, 165, 173, 174, 175, 176, 177, 178, 185, 186, 187, 201, 202, 207, 211, 212, 215, 216, 220, 223, 224, 228, 231, 232, 236, 238, 240, 241, 242, 243, 244, 246, 248, 249, 264, 265, 266, 267, 268, 269, 271, 272, 273, 274, 275, 277, 278, 289, 294, 295, 298, 312, 323], "properti": [18, 24, 26, 27, 28, 29, 30, 35, 37, 39, 69, 75, 78, 82, 85, 106, 126, 160, 185, 187, 188, 196, 215, 219, 223, 227, 231, 235, 245, 246, 247, 249, 261, 263, 264, 278, 281, 287, 288, 290, 323, 326], "defin": [18, 24, 26, 28, 34, 35, 61, 80, 126, 160, 163, 206, 262, 287, 323, 326], "as_dict": [18, 21, 126, 281], "only_chang": [18, 21, 126], "basic": [18, 21, 28, 30, 126, 266, 327], "self": [18, 21, 26, 34, 35, 47, 48, 126, 129, 147, 187, 249, 264, 290, 327], "case": [18, 27, 30, 69, 112, 113, 126, 131, 132, 133, 134, 135, 136, 141, 143, 145, 147, 167, 168, 169, 170, 171, 172, 190, 191, 192, 193, 202, 251, 252, 253, 254, 255, 256, 257, 258, 290, 303, 304, 305, 306, 307, 308, 309, 310, 315, 316, 317, 318, 327], "dictionari": [18, 21, 26, 27, 28, 32, 126, 138, 198, 264, 326], "redefin": [18, 26, 27, 29, 30, 60, 69, 73, 76, 78, 85, 126, 129, 165, 175, 247], "descend": [18, 21, 26, 28, 30, 60, 73, 74, 75, 76, 108, 126, 129, 165, 175, 187, 247, 264, 326], "onli": [18, 21, 28, 30, 37, 61, 68, 69, 73, 107, 125, 126, 141, 160, 174, 176, 264, 290, 294, 321, 326, 327], "chang": [18, 21, 26, 30, 126, 145, 165, 175, 177, 178, 202, 241, 243, 264, 272, 290, 323, 326, 327], "true": [18, 20, 21, 23, 26, 27, 28, 29, 30, 35, 59, 60, 62, 63, 64, 68, 69, 71, 72, 73, 76, 77, 78, 81, 82, 83, 84, 85, 86, 125, 126, 138, 141, 160, 161, 163, 164, 165, 175, 176, 177, 178, 202, 203, 204, 228, 239, 240, 241, 242, 243, 249, 264, 266, 267, 269, 270, 272, 290, 327], "differ": [18, 21, 23, 30, 61, 126, 165, 215, 223, 224, 231, 240, 246, 249, 262, 264, 288, 321, 326, 327], "default": [18, 21, 24, 26, 27, 28, 29, 30, 35, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 76, 77, 78, 79, 81, 82, 83, 84, 85, 86, 87, 106, 108, 122, 126, 138, 140, 150, 157, 160, 163, 164, 165, 175, 176, 177, 178, 181, 182, 202, 204, 241, 242, 243, 263, 264, 266, 267, 269, 270, 272, 284, 286, 288, 290, 320, 321, 326, 327], "mean": [18, 21, 30, 59, 60, 62, 63, 64, 68, 69, 71, 72, 73, 76, 77, 78, 81, 82, 83, 84, 85, 86, 126, 138, 160, 163, 165, 175, 177, 178, 202, 204, 241, 243, 264, 266, 270, 272, 327], "non": [18, 21, 126, 138, 141, 143, 145, 147, 264, 290, 326, 327], "expert": [18, 21, 26, 27, 28, 29, 30, 126, 141, 143, 145, 147, 164, 165, 175, 176, 177, 178, 202, 241, 242, 243, 267, 269, 272, 321], "to_dict": 18, "alia": [18, 29, 30, 61, 62, 63, 65, 67, 68, 69, 70, 74, 79, 86, 87, 163, 164, 176, 181, 184, 212, 213, 216, 217, 219, 220, 221, 224, 225, 227, 228, 229, 232, 233, 235, 236, 237, 239, 240, 242, 269, 272, 292, 293], "method": [18, 21, 27, 28, 29, 33, 34, 35, 37, 39, 59, 60, 62, 63, 64, 65, 68, 69, 71, 72, 73, 76, 77, 78, 81, 82, 84, 85, 86, 89, 113, 126, 132, 134, 136, 141, 143, 145, 147, 160, 168, 170, 172, 191, 193, 204, 252, 254, 256, 258, 264, 290, 304, 306, 308, 310, 316, 318, 326, 327], "print": [18, 26, 27, 28, 29, 34, 35, 44, 60, 62, 63, 68, 69, 71, 72, 73, 76, 77, 78, 81, 82, 84, 85, 86, 141, 143, 145, 147, 160, 164, 176, 204, 240, 242, 264, 267, 269, 321, 327], "save": [18, 20, 21, 23, 69, 126, 129, 264, 266, 270, 271, 326, 327], "info": [18, 26, 27, 28, 29, 30, 126, 160, 164, 165, 176, 202, 242, 264, 267, 269, 272, 327], "help": [18, 26, 27, 28, 29, 126, 164, 176, 242, 267, 269, 327], "verbos": [18, 26, 28, 30, 141, 143, 145, 147, 327], "show_hidden": [18, 26, 28, 30], "save_to_fil": [18, 266, 326], "valid": [18, 20, 21, 28, 30, 59, 60, 61, 62, 63, 64, 68, 69, 71, 72, 73, 74, 75, 76, 77, 78, 81, 82, 84, 85, 86, 87, 125, 126, 204, 228, 266, 270, 321], "format": [18, 26, 27, 28, 44, 60, 61, 62, 63, 65, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 81, 82, 84, 85, 86, 87, 94, 106, 108, 124, 126, 141, 143, 145, 147, 162, 163, 164, 165, 176, 201, 204, 205, 206, 207, 238, 240, 242, 266, 271, 274, 292, 293, 320, 326, 327], "_save_to_fil": [18, 20, 21, 23, 126, 266], "implement": [18, 21, 23, 27, 34, 60, 69, 78, 266, 326, 327], "specif": [18, 262, 266, 291, 326, 327], "read": [18, 23, 26, 28, 69, 127, 160, 163, 174, 184, 187, 200, 202, 203, 215, 223, 224, 231, 240, 245, 246, 247, 249, 264, 266, 275, 276, 277, 294, 295, 298, 323], "rais": [18, 20, 21, 32, 47, 48, 113, 117, 132, 134, 136, 168, 170, 172, 191, 193, 252, 254, 256, 258, 266, 304, 306, 308, 310, 316, 318], "except": [18, 20, 21, 32, 47, 48, 69, 264, 266], "error": [18, 59, 60, 61, 62, 63, 64, 68, 69, 71, 72, 73, 74, 75, 76, 77, 78, 81, 82, 84, 85, 86, 87, 129, 182, 185, 187, 188, 204, 266, 290, 323, 326], "complet": [18, 69, 266, 327], "string": [18, 21, 26, 28, 30, 44, 58, 59, 60, 61, 62, 63, 64, 65, 66, 68, 69, 70, 71, 72, 73, 76, 77, 78, 79, 81, 82, 85, 86, 87, 96, 99, 109, 141, 143, 145, 147, 150, 157, 160, 201, 202, 204, 264, 266, 270, 320, 327], "select": [18, 160, 266, 326], "basesect": [19, 22, 24, 210, 211, 214, 215, 218, 219, 222, 223, 226, 227, 230, 231, 234, 235, 244, 245, 246, 247, 265, 268, 273, 320], "configur": [19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 58, 68, 69, 73, 123, 124, 126, 159, 160, 162, 163, 164, 165, 175, 176, 177, 178, 200, 201, 202, 210, 211, 212, 214, 215, 216, 218, 219, 220, 222, 223, 224, 226, 227, 228, 230, 231, 232, 234, 235, 236, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 266, 267, 268, 269, 270, 271, 272, 273, 274, 320, 321, 323], "customsect": [19, 203, 204, 265, 273, 320], "rootconfigurationcontain": [19, 159, 160, 248, 249, 265, 266, 320], "task": [19, 22, 24, 26, 27, 28, 29, 41, 124, 126, 139, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 152, 154, 155, 156, 158, 159, 160, 163, 164, 165, 176, 179, 184, 188, 201, 242, 264, 267, 269, 271, 274, 321, 323, 326], "potenti": [19, 24, 28, 69, 76, 85, 88, 92, 96, 98, 102, 124, 126, 141, 143, 145, 147, 162, 163, 174, 176, 185, 187, 200, 201, 202, 203, 204, 205, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 250, 251, 252, 253, 254, 255, 256, 257, 258, 264, 270, 271, 274, 275, 276, 277, 278, 290, 295, 298, 320, 323], "abl": [19, 25, 34, 264, 290], "write": [19, 20, 23, 25, 30, 69, 126, 160, 202, 204, 211, 215, 223, 224, 231, 240, 246, 247, 249, 264, 275, 276, 278, 299, 323], "result": [19, 22, 25, 26, 27, 28, 30, 34, 35, 49, 60, 61, 62, 63, 68, 69, 71, 72, 73, 75, 76, 77, 78, 81, 82, 83, 84, 85, 86, 106, 108, 126, 129, 138, 141, 143, 145, 147, 150, 157, 160, 163, 165, 174, 175, 177, 178, 179, 182, 185, 187, 188, 202, 204, 241, 242, 243, 264, 272, 279, 290, 311, 321, 323, 326], "pars": [19, 20, 21, 25, 26, 27, 28, 30, 47, 48, 58, 60, 62, 63, 68, 69, 71, 72, 73, 76, 77, 78, 81, 82, 84, 85, 86, 125, 129, 160, 163, 176, 184, 200, 204, 242, 326], "A": [20, 21, 24, 26, 27, 28, 29, 34, 35, 44, 59, 60, 61, 63, 65, 66, 68, 69, 71, 72, 73, 76, 78, 79, 80, 82, 88, 90, 91, 92, 93, 95, 96, 97, 98, 99, 100, 102, 103, 104, 105, 108, 111, 113, 125, 126, 132, 138, 160, 164, 168, 176, 188, 191, 196, 239, 242, 243, 244, 245, 246, 252, 264, 267, 269, 284, 290, 295, 304, 316, 323, 326], "its": [20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 35, 69, 85, 124, 126, 129, 141, 143, 145, 147, 160, 164, 175, 176, 198, 201, 211, 215, 219, 223, 227, 231, 235, 239, 242, 245, 246, 247, 249, 264, 266, 267, 268, 269, 271, 273, 274, 278, 326, 327], "member": [20, 21, 22, 23, 24, 26, 27, 28, 29, 30, 107, 138, 160, 164, 165, 175, 176, 177, 178, 202, 211, 215, 219, 223, 227, 231, 235, 241, 242, 243, 245, 246, 247, 249, 266, 267, 268, 269, 272, 273], "accord": [20, 21, 22, 23, 24, 69, 138, 141, 143, 145, 147, 160, 211, 215, 219, 223, 227, 231, 235, 245, 246, 247, 249, 264, 266, 268, 270, 273, 288, 298, 326, 327], "has_any_valu": [20, 245], "ani": [20, 21, 26, 31, 32, 60, 61, 62, 63, 65, 67, 68, 69, 70, 72, 73, 74, 75, 76, 77, 78, 79, 81, 84, 85, 86, 87, 103, 104, 138, 141, 143, 145, 147, 200, 204, 264, 270, 292, 293, 321, 326, 327], "why": [20, 21, 59, 60, 61, 62, 64, 68, 69, 71, 73, 74, 75, 76, 81, 82, 85, 86, 87, 89, 126, 270], "fail": [20, 21, 34, 47, 48, 327], "dure": [20, 21, 69, 185, 215, 223, 224, 231, 240, 246, 247, 271, 275, 276, 277, 278, 281, 327], "input": [20, 21, 23, 28, 41, 56, 57, 68, 69, 73, 93, 97, 99, 108, 138, 139, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 152, 154, 155, 156, 157, 158, 159, 160, 163, 164, 174, 187, 199, 249, 264, 321, 323, 326], "requir": [20, 21, 23, 26, 27, 28, 29, 30, 52, 69, 125, 126, 160, 164, 165, 175, 176, 177, 178, 202, 212, 216, 220, 224, 228, 232, 236, 239, 240, 241, 242, 243, 249, 264, 267, 269, 270, 272, 323, 326, 327], "enforc": [20, 21, 69, 126], "parser": [20, 21, 61, 173, 179, 186], "skip": [20, 21, 69, 281, 326], "where": [20, 160, 264, 288, 298, 327], "should": [20, 21, 27, 35, 59, 60, 62, 63, 64, 65, 68, 69, 71, 72, 73, 75, 76, 77, 78, 81, 82, 84, 85, 86, 94, 125, 126, 160, 185, 187, 194, 204, 211, 215, 223, 224, 231, 240, 246, 247, 264, 269, 271, 272, 288, 290, 327], "written": [20, 26, 28, 30, 165, 175, 177, 178, 202, 240, 241, 243, 264, 272, 326], "been": [20, 125, 215, 223, 231, 246, 264, 321, 327], "something_have_been_written": 20, "group": [21, 61], "_member": [21, 164], "form": [21, 26, 30, 59, 60, 61, 64, 65, 69, 71, 75, 82, 85, 86, 94, 165, 175, 177, 178, 202, 241, 243, 248, 249, 272, 326, 327], "obj": [21, 290], "_interactive_memb": 21, "hidden": [21, 26, 27, 28, 29, 30, 164, 165, 175, 176, 177, 178, 202, 241, 242, 243, 267, 269, 272], "acces": 21, "via": [21, 327], "sanit": 21, "whitespac": [21, 50, 77, 84], "special": [21, 34, 35, 77, 81, 84, 141, 143, 145, 147, 243, 277, 326, 327], "charact": [21, 28], "replac": [21, 34, 263, 264, 290, 327], "underscor": 21, "These": [21, 159, 245, 326], "notat": [21, 44, 196, 264, 327], "t": [21, 63, 141, 143, 145, 147, 165, 203, 204, 241, 263, 264, 288, 290, 327], "shape": 21, "_get_memb": 21, "It": [21, 26, 27, 28, 29, 30, 60, 62, 63, 68, 69, 71, 72, 73, 76, 77, 78, 81, 82, 84, 85, 86, 106, 124, 129, 138, 141, 143, 145, 147, 160, 164, 176, 187, 204, 242, 249, 261, 264, 267, 269, 327], "search": [21, 323, 326], "interactive_memb": 21, "clear": [21, 23, 126, 249], "do_not_check_requir": [21, 126], "eras": 21, "reset": [21, 201, 246, 249, 264, 288, 327], "ad": [21, 35, 69, 124, 240, 264, 321, 326], "subcontain": 21, "argument": [21, 26, 28, 30, 32, 34, 35, 37, 39, 60, 62, 63, 68, 69, 71, 72, 73, 76, 77, 78, 81, 82, 84, 85, 86, 126, 160, 185, 204, 264, 270, 290, 321, 327], "pass": [21, 23, 30, 60, 62, 63, 68, 69, 71, 72, 73, 76, 77, 78, 81, 82, 84, 85, 86, 106, 129, 185, 204, 215, 223, 231, 246, 249, 264, 290, 321, 326, 327], "without": [21, 69, 77, 84, 323, 326], "throw": [21, 69, 264], "which": [21, 24, 25, 28, 30, 61, 68, 69, 73, 82, 125, 160, 185, 187, 249, 264, 270, 281, 288, 294, 326, 327], "prevent": 21, "neverthenless": 21, "anywai": [21, 59, 64, 83], "previou": [21, 26, 28, 29, 30, 175], "get": [21, 126, 160, 209, 245, 264, 327], "unknown": [21, 28, 69, 73, 76, 126, 201, 203, 242, 264, 300], "find": [21, 23, 138, 264], "child": [21, 28, 29, 35, 164, 176, 240, 242], "try": [21, 264], "conain": 21, "mix": [21, 30, 44, 58, 60, 69, 78, 98, 124, 125, 126, 129, 145, 147, 160, 165, 175, 177, 178, 187, 201, 202, 241, 243, 271, 272, 274, 320], "kwarg": [21, 27, 28, 30, 35, 59, 64, 66, 71, 80, 82, 83, 85, 116, 129, 160, 163, 175, 177, 178, 181, 184, 185, 187, 212, 216, 220, 224, 228, 232, 236, 239, 240, 241, 242, 264, 267, 276, 277, 290], "usag": [21, 114, 121, 122, 126, 323], "input_paramet": [21, 126, 140, 141, 143, 145, 147, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 181, 182, 184, 185, 187, 188, 208, 264, 275, 320, 323], "niter": [21, 145, 147], "ne": [21, 141, 143, 145, 147, 198, 327], "10": [21, 46, 141, 196, 298], "unkwnown": 21, "how": [21, 26, 27, 28, 30, 59, 61, 63, 64, 65, 69, 76, 81, 82, 85, 108, 165, 175, 177, 178, 202, 240, 241, 243, 264, 272, 323, 326], "handl": [21, 34, 35, 51, 264, 294], "known": [21, 141, 143, 145, 147, 175, 176, 264, 327], "custom": [21, 22, 28, 29, 59, 60, 64, 73, 76, 78, 83, 141, 143, 145, 147, 163, 164, 176, 200, 202, 203, 204, 240, 264, 273, 274, 326, 327], "keyword": [21, 58, 264, 320, 321], "syntax": [21, 25, 264], "syntact": [21, 69, 264], "sugar": [21, 264], "remove_memb": 21, "remov": [21, 22, 28, 30, 124], "previous": [21, 160, 290], "nest": [21, 26, 59, 73, 76, 82, 85, 89], "transform": [21, 32, 59, 63, 64, 65, 69, 75, 76, 81, 82, 85, 126, 326], "well": 21, "to_str": 21, "_find_valu": [21, 126], "sought": [21, 264], "exist": [21, 245, 264, 288, 327], "static": [21, 28, 59, 69, 73, 76, 82, 85, 113, 128, 132, 138, 163, 164, 168, 191, 196, 240, 249, 252, 281, 284, 286, 290, 295, 304, 316], "_interactive_member_nam": 21, "kei": [21, 32, 116, 138, 198], "_add": 21, "is_chang": [21, 126], "could": [21, 27, 69, 85, 260, 261], "probabl": [21, 187, 281], "classmethod": [22, 27, 28, 29, 73, 76, 124, 160, 163, 242, 249, 261], "factori": [22, 124, 163, 164], "definition_typ": 22, "signatur": [22, 35], "callabl": [22, 30, 60, 61, 62, 63, 65, 67, 68, 69, 70, 72, 73, 74, 75, 76, 77, 78, 79, 81, 84, 86, 87, 126, 204, 264, 292, 293], "capabl": [23, 326, 327], "read_from_fil": [23, 28, 129, 249], "clear_first": [23, 249], "allow_danger": [23, 26, 27, 28, 30, 160, 249], "present": [23, 26, 30, 69, 175, 249, 265, 291, 327], "preserv": [23, 61, 249], "load": [23, 249, 327], "dangerous_valu": [23, 249], "constraint": [23, 26, 249], "violat": [23, 249], "whose": [24, 26, 28, 35, 63, 200, 203, 215, 223, 231, 246, 247, 264], "predefind": 24, "sectiondefinit": [24, 25, 162, 164, 174, 176, 210, 212, 214, 216, 218, 220, 222, 224, 226, 228, 230, 232, 234, 236, 238, 239, 240, 265, 269, 320], "containerdefinit": [24, 25, 27, 29, 162, 163, 164, 174, 176, 210, 212, 214, 216, 218, 220, 222, 224, 226, 228, 230, 232, 234, 236, 238, 239, 240, 242, 265, 267, 269, 320], "configurationrootdefinit": [25, 162, 163, 238, 242, 265, 267, 320], "valuedefinit": [25, 69, 85, 124, 126, 162, 165, 174, 175, 177, 178, 200, 201, 202, 238, 241, 243, 265, 271, 272, 274, 320], "desrib": 25, "alternative_nam": [26, 27, 28, 29, 30, 164, 165, 175, 176, 177, 178, 202, 228, 241, 242, 243, 267, 269, 272], "is_opt": [26, 27, 28, 29, 30, 164, 165, 175, 176, 177, 178, 202, 241, 242, 243, 267, 269, 272], "is_hidden": [26, 27, 28, 29, 30, 164, 165, 175, 176, 177, 178, 202, 241, 242, 243, 267, 269, 272], "is_expert": [26, 27, 28, 29, 30, 164, 165, 175, 176, 177, 178, 202, 241, 242, 243, 267, 269, 272], "name_in_grammar": [26, 27, 28, 29, 30, 69, 85, 164, 165, 175, 176, 177, 178, 202, 241, 242, 243, 267, 269, 272], "write_alternative_nam": [26, 228], "denot": [26, 27, 28, 29, 30, 164, 165, 175, 176, 177, 178, 202, 241, 242, 243, 267, 269, 272, 290, 327], "boolean": [26, 27, 28, 29, 63, 68, 93, 164, 176, 242, 264, 267, 269, 320], "pot": [26, 27, 28, 29, 164, 176, 242, 267, 269, 294, 327], "offer": [26, 27, 28, 29, 128, 164, 176, 242, 267, 269], "usual": [26, 27, 28, 29, 164, 176, 242, 267, 269], "anoth": [26, 27, 28, 29, 34, 164, 176, 211, 215, 223, 231, 242, 246, 267, 269, 278], "direct": [26, 27, 28, 29, 147, 164, 176, 242, 245, 267, 269], "sens": [26, 27, 28, 29, 164, 176, 242, 267, 269], "somewhat": [26, 27, 28, 29, 30, 164, 165, 175, 176, 177, 178, 202, 241, 242, 243, 267, 269, 272], "variabl": [26, 27, 28, 29, 68, 69, 73, 141, 161, 164, 176, 242, 247, 264, 267, 269, 327], "recogn": [26, 27, 28, 29, 61, 101, 164, 176, 242, 267, 269], "posit": [26, 27, 28, 29, 35, 69, 85, 141, 143, 145, 147, 164, 175, 176, 223, 231, 242, 264, 267, 269, 288, 290], "short": [26, 27, 28, 29, 164, 176, 242, 267, 269], "messag": [26, 27, 28, 29, 47, 48, 59, 60, 61, 62, 63, 64, 68, 69, 71, 72, 73, 74, 75, 76, 77, 78, 81, 82, 84, 85, 86, 87, 164, 176, 204, 242, 267, 269, 327], "perex": [26, 27, 28, 29, 164, 176, 242, 267, 269], "inform": [26, 27, 28, 29, 30, 34, 41, 69, 164, 176, 195, 196, 220, 242, 262, 267, 269, 290, 298, 327], "result_class": [26, 29, 30, 163, 181, 184, 187, 212, 216, 220, 224, 228, 232, 236, 239, 240, 242, 269, 272], "ommit": [26, 68, 69, 73], "expect": [26, 30, 107, 175], "locat": [26, 30, 175, 326, 327], "By": [26, 30, 59, 60, 61, 63, 65, 68, 69, 70, 71, 72, 77, 79, 82, 84, 85, 87, 175, 204, 264, 288], "instanti": [26, 30, 69, 73, 76, 160, 175, 326], "_info": [26, 164, 165], "text": [26, 85, 295, 327], "_descript": [26, 164, 165], "longer": 26, "specifi": [26, 61, 67, 113, 132, 134, 136, 141, 143, 145, 147, 160, 168, 170, 172, 187, 191, 193, 252, 254, 256, 258, 264, 304, 306, 308, 310, 316, 318, 327], "sai": 26, "much": 26, "create_object": [26, 28], "grammar": [26, 27, 28, 29, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 67, 68, 69, 70, 71, 72, 77, 79, 82, 83, 84, 85, 87, 88, 90, 91, 92, 93, 95, 96, 97, 98, 99, 100, 102, 103, 104, 105, 106, 107, 108, 110, 111, 125, 174, 203, 204, 242, 320, 326], "danger": [26, 126, 160, 321], "fulfil": 26, "_description_indent": 26, "level": [26, 28, 141], "indent": [26, 28, 30], "prefix": [26, 27, 28, 30, 59, 60, 61, 62, 63, 64, 65, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 81, 82, 83, 84, 85, 86, 87, 165, 175, 177, 178, 202, 204, 241, 243, 272, 292, 293], "also": [26, 28, 30, 159, 165, 175, 177, 178, 202, 241, 243, 261, 272, 326, 327], "detail": [26, 28, 30], "document": [26, 28, 30, 141, 143, 145, 147, 163, 212, 216, 220, 224, 228, 232, 236, 239, 240, 242, 245, 264, 321, 325, 327], "includ": [26, 28, 290], "each": [26, 28, 30, 58, 118, 185, 290, 326, 327], "begin": [26, 28, 30, 264], "commonli": [26, 27, 28, 30, 69, 85, 125], "space": [26, 28, 30, 141, 143, 147, 178, 242], "_tuple_with_my_nam": [26, 27], "expr": [26, 27, 49, 55], "has_valu": [26, 69, 81], "is_numbered_arrai": [26, 30, 165, 175, 177, 178, 202, 241, 243, 272], "expres": 26, "express": [26, 59, 60, 61, 63, 65, 68, 69, 70, 71, 72, 77, 79, 82, 84, 85, 87, 204], "separ": [26, 57, 58, 69, 200, 203, 204, 238, 320, 326], "grammar_typ": [26, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 200, 204, 291, 292, 293, 320, 326], "do_not_skip_whitespaces_before_nam": [26, 164], "_get_copy_arg": 26, "copi": [26, 28, 30, 69, 108, 118, 261, 264, 281, 283, 286, 288], "_copy_excluded_arg": 26, "can_be_rep": [26, 30], "deriv": [27, 30, 165, 175, 177, 178, 202, 241, 243, 272], "kind": 27, "better": [27, 113, 132, 168, 191, 252, 304, 316], "fix": [27, 28, 30, 46, 141, 165, 175, 176, 177, 178, 202, 240, 241, 242, 243, 272, 321], "purpos": [27, 294], "from_dict": 27, "def": [27, 34, 35, 37, 39], "recurs": 27, "custom_value_nam": [27, 29], "custom_sect": 27, "appear": [27, 28, 29, 30, 58, 68, 165, 175, 177, 178, 202, 241, 243, 272], "parse_return": [27, 28], "val": [27, 28, 59, 63, 64, 65, 69, 76, 81, 82, 254], "return_value_onli": [27, 28], "unpack": [27, 28, 126], "unnecessari": [27, 28], "There": [27, 176, 242, 326, 327], "_grammar": [27, 28, 30, 60, 61, 63, 65, 68, 69, 70, 72, 77, 79, 81, 82, 84, 85, 87, 204], "tweak": 27, "ignor": [27, 160, 264], "comment": 27, "would": [27, 160], "onc": [27, 37, 118], "has_hidden_memb": [28, 29, 164, 176, 269], "force_ord": [28, 29, 164, 176, 240, 242, 269], "inputparamet": [28, 29, 126, 159, 163, 264, 320, 321, 326], "value_name_format": [28, 30, 240], "_dict_from_named_valu": 28, "arg": [28, 35, 80, 116, 160, 175, 177, 178, 181, 184, 187, 215, 223, 231, 239, 240, 241, 246, 264, 276, 277, 290], "auxiliari": 28, "order": [28, 30, 165, 175, 176, 177, 178, 202, 224, 240, 241, 242, 243, 246, 272, 326], "configuration_type_nam": [28, 163, 242], "runtim": [28, 30, 41, 163, 242, 321], "data_descript": [28, 30], "about": [28, 34, 41, 159, 195, 196, 262, 298, 323], "additional_data_descript": [28, 30], "children": 28, "even": [28, 35, 59, 60, 61, 63, 65, 68, 69, 70, 71, 72, 77, 79, 82, 84, 85, 87, 117, 204, 321], "modifi": [28, 35, 264, 327], "all_member_nam": 28, "_values_grammar": 28, "delimited_custom_value_grammar": [28, 29], "custom_name_charact": [28, 242], "abcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyz0123456789_": [28, 242], "custom_member_grammar": 28, "value_nam": 28, "_first_section_is_fix": 28, "ve": 28, "unord": 28, "sequenc": [28, 58, 69, 320], "parse_fil": 28, "whole_str": [28, 69], "async": [28, 69, 128, 129, 181, 184], "parse_from_stream": [28, 69], "stream": [28, 69, 204, 326], "up_to": [28, 69], "start": [28, 69, 138, 145, 147, 327], "asyncio": [28, 127, 128, 326], "typic": [29, 138, 278], "custom_valu": 29, "_generic_info": [29, 30, 163, 242], "default_valu": [30, 59, 60, 61, 62, 63, 64, 65, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 81, 82, 83, 84, 85, 86, 87, 126, 165, 175, 177, 178, 202, 204, 241, 243, 272, 292, 293], "fixed_valu": [30, 165, 175, 177, 178, 202, 241, 243, 272], "name_format": [30, 165, 175, 177, 178, 202, 241, 243, 272], "grammartyp": [30, 58, 59, 60, 61, 62, 63, 64, 65, 67, 68, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 108, 125, 165, 175, 177, 178, 200, 202, 204, 241, 243, 270, 272, 291, 292, 293, 320, 321], "anyt": [30, 165, 175, 177, 178, 202, 241, 243, 272], "alternativelli": [30, 165, 175, 177, 178, 202, 241, 243, 272], "still": [30, 59, 73, 76, 82, 85, 89, 126, 165, 175, 177, 178, 202, 241, 243, 272, 327], "condit": [30, 31, 47, 60, 61, 62, 63, 65, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 81, 82, 84, 85, 86, 87, 165, 175, 177, 178, 202, 204, 241, 243, 272, 292, 293], "met": [30, 165, 175, 177, 178, 202, 241, 243, 272], "omit": [30, 165, 175, 177, 178, 202, 241, 243, 272], "access": [30, 34, 37, 39, 69, 82, 126, 165, 175, 177, 178, 202, 241, 243, 264, 272, 290], "end": [30, 34, 50, 72, 165, 175, 177, 178, 202, 204, 241, 243, 272], "export": [30, 165, 175, 177, 178, 202, 241, 243, 272, 327], "Such": [30, 69, 138, 165, 175, 177, 178, 202, 241, 243, 272], "spars": [30, 165, 175, 177, 178, 202, 241, 243, 272], "ouput": [30, 165, 175, 177, 178, 202, 241, 243, 264, 272], "name1": [30, 165, 175, 177, 178, 202, 241, 243, 272], "name2": [30, 165, 175, 177, 178, 202, 241, 243, 272], "conf": [30, 126, 165, 175, 177, 178, 202, 241, 243, 272], "name_value_delimit": [30, 165, 175, 177, 178, 202, 241, 243, 272], "note": [30, 141, 165, 175, 177, 178, 202, 241, 243, 272, 323, 326], "type_from_type_map": [30, 165, 320], "guess": [30, 106, 108, 145, 147, 165, 261], "formated_nam": 30, "more": [30, 69, 141, 143, 145, 147, 262, 272, 278, 280, 281, 321, 323], "here": [30, 59, 63, 64, 65, 69, 76, 81, 82, 85, 126, 206, 277], "thing": [30, 34], "choic": [30, 69, 71], "effect": [30, 138, 290], "explan": [30, 160], "accept": [30, 61, 78, 85, 101, 126, 270, 321, 327], "retriev": [30, 215, 223, 231], "convert_and_valid": 30, "get_valu": 30, "obtain": [30, 69, 174, 323, 326, 327], "dangerousvalu": [30, 123, 126, 320], "element": [31, 45, 69, 108, 261], "duplicit": 32, "moreov": [32, 34, 160], "b": [32, 34, 59, 69, 73, 76, 82, 85, 89, 113, 128, 132, 168, 191, 198, 252, 304, 316], "subdictionari": 32, "2": [32, 65, 83, 85, 110, 138, 141, 143, 145, 147, 196, 198, 243, 298, 323, 327], "cached_class_properti": [33, 39, 320], "class_properti": [33, 37, 320], "mainli": 33, "decor": [34, 35, 36, 37, 38, 39, 320], "lost": 34, "As": [34, 198], "consequ": 34, "execut": [34, 113, 132, 134, 136, 159, 160, 161, 163, 168, 170, 172, 188, 191, 193, 252, 254, 256, 258, 264, 304, 306, 308, 310, 316, 318, 326, 327], "super": 34, "appli": [34, 60, 62, 63, 68, 69, 71, 72, 73, 76, 77, 78, 81, 82, 84, 85, 86, 106, 108, 204], "veri": 34, "tricki": 34, "style": 34, "situat": 34, "__set_name__": 34, "lose": 34, "recov": 34, "descriptor": [34, 121, 122], "protocol": 34, "speed": [34, 147], "know": 34, "everyth": 34, "func": [34, 35, 38], "wrap": 34, "cl": [34, 37, 39, 198, 327], "ab": 34, "prepend": 35, "self_nam": 35, "keyword_onli": 35, "new_param": 35, "f": [35, 63, 69, 198, 204, 327], "new": [35, 85, 106, 126, 160, 185, 215, 223, 231, 246, 262, 264, 290, 327], "param": [35, 124, 126, 160, 201, 271, 274], "alter": [35, 69, 83, 264, 327], "old": [35, 299, 327], "retain": [35, 69, 118, 126], "user_funct": 36, "simpl": [36, 60, 78], "lightweight": 36, "unbound": 36, "sometim": [36, 59, 60, 61, 63, 65, 68, 69, 70, 71, 72, 77, 79, 82, 84, 85, 87, 125, 160, 204], "memoiz": 36, "convert": [37, 39, 44, 59, 60, 61, 62, 63, 64, 65, 68, 69, 71, 72, 73, 75, 76, 77, 78, 81, 82, 84, 85, 86, 108, 204, 264, 290], "singl": [37, 39, 126, 326], "directli": [37, 39, 126, 327], "cls_properti": [37, 39], "some_cached_valu": 37, "another_cls_properti": 37, "another_cached_valu": 37, "cach": [39, 61, 278, 279, 320], "desir": [39, 59, 60, 61, 63, 65, 68, 69, 70, 71, 72, 77, 79, 82, 84, 85, 87, 204, 281], "some_valu": 39, "enrich": [40, 69, 82], "12e": 44, "lead": [44, 141, 143, 145, 147, 327], "zero": [44, 85, 87, 138, 245, 261, 264, 284], "fortran": [44, 121, 122], "scientif": 44, "1000000000000e": 44, "00": 44, "14": [44, 141, 196, 198], "6e": 44, "1000000e": 44, "01": [44, 143], "output": [44, 59, 63, 64, 65, 68, 69, 73, 76, 81, 82, 85, 106, 121, 122, 126, 127, 129, 141, 143, 145, 147, 160, 163, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 199, 204, 264, 320, 321, 323, 327], "white": [45, 320], "core": [45, 46, 200, 203, 261], "token": [45, 46, 61, 69, 200, 203], "parserel": [45, 46, 50, 52, 53, 54, 56, 59, 63, 65, 68, 70, 72, 77, 79, 81, 83, 84, 87, 163, 164, 165, 176, 177, 178, 200, 203, 204, 241, 242], "abc": [45, 46, 185, 200, 203, 262, 264], "whitechar": 46, "pp": [46, 61], "respect": [46, 141], "default_white_char": 46, "_abc_impl": [46, 203, 264], "_abc": [46, 203, 264], "_abc_data": [46, 203, 264], "parseel": 47, "pa": [48, 198], "action": [48, 69], "parseelemenet": 48, "delim": 49, "suppress": [49, 54, 56, 59, 81, 121, 122, 164, 176, 204, 242], "eof": 50, "newlin": [51, 52, 53, 163, 164, 176, 202, 204, 240, 242], "restor": 51, "state": [51, 141, 249, 269, 270], "optin": 53, "quot": [54, 77, 99], "pattern": [57, 203, 326], "basemix": [58, 73, 76, 78, 320], "baserealwithunit": [58, 67, 80, 320], "typedgrammartyp": [58, 61, 62, 63, 65, 67, 68, 70, 72, 74, 75, 77, 79, 80, 84, 87, 291, 292, 293, 320], "basestr": [58, 72, 77, 84, 320], "setof": [58, 64, 73, 76, 101, 103, 104, 107, 320], "date": [58, 61, 264, 320, 327], "flag": [58, 69, 73, 106, 141, 143, 145, 147, 165, 320, 321], "integ": [58, 73, 75, 76, 87, 103, 108, 109, 110, 111, 117, 126, 138, 141, 143, 145, 147, 264, 320, 327], "linestr": [58, 76, 96, 320], "objectnumb": [58, 291, 292, 293, 320], "unsign": [58, 75, 291, 292, 293, 320], "potmix": [58, 98, 241, 320], "qstring": [58, 73, 320], "rang": [58, 141, 320], "realwithunit": [58, 320], "tabl": [58, 69, 185, 196, 320], "definitionfil": 58, "length": [59, 64, 83, 85, 103, 104, 138, 141, 145, 147, 290], "max_length": [59, 64, 83], "min_length": [59, 64, 83], "as_list": [59, 64, 83], "min_": [59, 64, 83], "minim": [59, 61, 64, 65, 67, 70, 74, 75, 79, 80, 83, 87, 141, 143, 145, 147, 292, 293], "maxim": [59, 61, 64, 65, 67, 70, 74, 75, 79, 80, 83, 87, 141, 143, 145, 147, 292, 293], "ndarrai": [59, 64, 83, 101, 138], "sp": [59, 147, 164], "tab": [59, 164, 327], "delimiter_str": [59, 83], "_set_convert_act": 59, "grammar_nam": [59, 60, 61, 63, 65, 68, 69, 70, 71, 72, 77, 79, 82, 84, 85, 87, 204], "human": [59, 60, 61, 63, 65, 68, 69, 70, 71, 72, 77, 79, 82, 84, 85, 87, 204], "readabl": [59, 60, 61, 63, 65, 68, 69, 70, 71, 72, 77, 79, 82, 84, 85, 87, 204], "setnam": [59, 60, 61, 63, 65, 68, 69, 70, 71, 72, 77, 79, 82, 84, 85, 87, 204], "shorter": [59, 60, 61, 63, 65, 68, 69, 70, 71, 72, 77, 79, 82, 84, 85, 87, 204], "_string": [59, 63, 64, 65, 69, 76, 81, 82, 85], "postfix": [59, 60, 61, 62, 63, 64, 65, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 81, 82, 84, 85, 86, 87, 160, 161, 204, 264, 292, 293], "actual": [59, 63, 64, 65, 69, 76, 81, 82, 85, 264, 326, 327], "_valid": [59, 60, 61, 62, 64, 68, 69, 71, 74, 75, 81, 82, 85, 86, 87], "cannon": [59, 60, 64, 69, 71, 75, 82, 85, 86], "is_the_same_valu": [59, 69, 73, 76, 82, 85], "cannot": [59, 73, 76, 82, 85, 89, 117, 215, 223, 231, 246], "compar": [59, 69, 73, 76, 82, 85, 89], "far": [59, 73, 76, 82, 85, 89, 321], "perfect": [59, 73, 76, 82, 85, 89], "after_convert": [60, 61, 62, 63, 65, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 81, 82, 84, 85, 86, 87, 204, 292, 293], "variant": [60, 73, 76, 97, 98, 103, 104], "anyth": [60, 129, 187, 264, 326], "befor": [60, 62, 63, 68, 69, 71, 72, 73, 76, 77, 78, 81, 82, 84, 85, 86, 204, 211, 215, 223, 224, 231, 240, 246, 327], "invalid": [60, 62, 63, 68, 69, 71, 72, 73, 76, 77, 78, 81, 82, 84, 85, 86, 204], "interpret": [60, 62, 63, 68, 69, 71, 72, 73, 76, 77, 78, 81, 82, 84, 85, 86, 117, 160, 204, 264, 327], "explain": [60, 62, 63, 68, 69, 71, 72, 73, 76, 77, 78, 81, 82, 84, 85, 86, 204], "enter": [60, 62, 63, 68, 69, 71, 72, 73, 76, 77, 78, 81, 82, 84, 85, 86, 204], "string_typ": [60, 73, 76], "param_nam": [60, 61, 69, 82, 83, 85], "get_typ": [60, 78], "actuali": [60, 78], "min": [61, 65, 67, 70, 74, 75, 79, 80, 87, 292, 293], "max": [61, 65, 67, 70, 74, 75, 79, 80, 87, 292, 293], "unit": [61, 67, 80, 290], "append": [61, 160, 161, 264], "automat": [61, 290, 326, 327], "grammar_cach": 61, "_grammar_unit": 61, "match": 61, "regular": [61, 141, 143, 145, 147], "stdlib": 61, "re": [61, 65, 198, 203], "regex": [61, 326], "p": [61, 65, 141, 198, 264, 327], "parseresult": 61, "instead": [61, 69, 145, 147, 264, 290], "wish": 61, "build": [61, 327], "compil": [61, 119, 160, 203, 327], "wa": [61, 126, 290], "realnum": 61, "r": [61, 203, 204], "d": [61, 65, 263, 327], "ref": 61, "stackoverflow": 61, "question": 61, "267399": 61, "roman": 61, "numer": 61, "4": [61, 65, 117, 138, 141, 160, 196, 198, 262, 264, 327], "cm": [61, 198], "cd": [61, 198], "xc": 61, "xl": 61, "ix": 61, "iv": 61, "v": [61, 145, 147, 198], "field": [61, 141, 143, 145, 147], "year": 61, "month": 61, "dai": 61, "9": [61, 196, 198], "numpy_typ": [61, 63, 65, 68, 69, 70, 79, 85, 87], "datatype_nam": [61, 62, 63, 65, 68, 70, 74, 86, 87], "allowed_typ": [62, 63, 65, 68, 70, 72, 74, 79, 86, 320], "letter": 63, "type_nam": [63, 65], "_grammar_nam": [64, 81], "dd": 65, "mm": 65, "yyyi": 65, "take": [66, 71, 72, 75, 159], "predefin": [66, 71, 129, 187, 208, 327], "rydberg": 67, "ev": [67, 126, 141, 143, 145, 147], "ry": [67, 126, 141, 143, 145, 147], "07349864494991327": 67, "convers": 67, "factor": 67, "missing_valu": [68, 69, 73], "configuraion": [68, 69, 73], "can_be_ommit": [68, 69, 73], "ommis": [68, 69, 73], "do_not_output_the_opt": [68, 69, 73], "empti": [68, 327], "carri": 69, "yield": 69, "pair": [69, 126, 326], "confus": 69, "opposit": [69, 290], "absenc": 69, "On": [69, 327], "hand": 69, "identifi": [69, 85, 138, 175, 176], "dtype": [69, 85], "descendatn": 69, "particular": 69, "comparison": [69, 113, 132, 168, 191, 252, 304, 316], "Not": [69, 300], "equal": [69, 113, 132, 141, 168, 191, 198, 252, 281, 288, 290, 304, 316], "sign": [69, 70, 95], "assign": [69, 138, 185], "transform_grammar": [69, 83], "chanc": [69, 83], "overrid": [69, 264], "subclass": [69, 129, 187], "rare": 69, "incomplet": 69, "set_from_atom": [69, 249, 270, 292, 293], "_valueerror": 69, "error_messag": 69, "parameternam": 69, "propper": [69, 204, 211, 215, 223, 231, 246, 263, 299], "stdout": [69, 122, 129, 160, 181, 184, 264], "abil": [69, 82], "additional_descript": [69, 71], "doe": [69, 71, 113, 132, 134, 136, 168, 170, 172, 191, 193, 252, 254, 256, 258, 290, 304, 306, 308, 310, 316, 318, 326, 327], "fit": [69, 71], "multilin": [69, 71], "type_valid": 69, "typenam": 69, "suffici": 69, "ok": 69, "skipto": 72, "lineend": [72, 164], "stringend": 72, "_initi": [73, 76], "later": [73, 76, 264, 327], "abstract": 75, "reffer": 75, "give": [75, 141, 143, 145, 147], "care": [75, 159], "te": [75, 198], "word": 77, "char": [77, 84], "w": [77, 84, 198, 264], "two": [78, 129, 138, 196, 288, 295, 321, 326, 327], "fnumber": 79, "insid": 81, "format_al": [82, 85, 106, 108], "allowed_valu": 82, "column": [85, 185], "header": [85, 243], "free_head": 85, "21": [85, 196], "17": [85, 196, 198, 327], "16": [85, 196], "numbering_label": 85, "numbering_format": 85, "row_condit": 85, "named_result": 85, "optionali": 85, "iq": 85, "irefq": 85, "imq": 85, "noq": 85, "itoq": 85, "conc": 85, "000": 85, "featureless": 85, "number_of_collumn": 85, "zero_data": 85, "row": 85, "appropri": [94, 109, 264], "format_for_the_typ": 94, "default_format": 94, "array_lik": 101, "type_map": [106, 108, 110], "becom": 106, "left": [106, 141, 161, 264], "unless": 106, "ordereddict": [107, 109, 115, 320], "collect": [107, 115, 116, 137, 138, 185], "normalize_typ": [107, 320], "descendatnt": 108, "format_for_typ": [108, 320], "gue": 110, "testcas": [112, 114, 131, 133, 134, 135, 136, 167, 169, 170, 171, 172, 190, 192, 193, 251, 253, 254, 255, 256, 257, 258, 303, 305, 306, 307, 308, 309, 310, 315, 317, 318, 320], "unittest": [112, 113, 131, 132, 133, 134, 135, 136, 167, 168, 169, 170, 171, 172, 190, 191, 192, 193, 251, 252, 253, 254, 255, 256, 257, 258, 303, 304, 305, 306, 307, 308, 309, 310, 315, 316, 317, 318], "test": [112, 113, 114, 131, 132, 133, 134, 135, 136, 167, 168, 169, 170, 171, 172, 190, 191, 192, 193, 251, 252, 253, 254, 255, 256, 257, 258, 300, 303, 304, 305, 306, 307, 308, 309, 310, 315, 316, 317, 318, 320, 321, 327], "init_test": [113, 114, 132, 133, 134, 135, 136, 168, 169, 170, 171, 172, 191, 192, 193, 252, 253, 254, 255, 256, 257, 258, 304, 305, 306, 307, 308, 309, 310, 316, 317, 318, 320], "methodnam": [113, 132, 134, 136, 168, 170, 172, 191, 193, 252, 254, 256, 258, 304, 306, 308, 310, 316, 318], "runtest": [113, 132, 134, 136, 168, 170, 172, 191, 193, 252, 254, 256, 258, 304, 306, 308, 310, 316, 318], "useful": [113, 132, 168, 191, 252, 304, 316], "assert": [113, 132, 168, 191, 252, 304, 316], "valueerror": [113, 132, 134, 136, 168, 170, 172, 191, 193, 252, 254, 256, 258, 304, 306, 308, 310, 316, 318], "assertasyncequ": [113, 132, 168, 191, 252, 304, 316], "assertasyncrais": [113, 132, 168, 191, 252, 304, 316], "runasync": [113, 132, 168, 191, 252, 304, 316], "corr": [113, 132, 168, 191, 252, 304, 316], "setup": [113, 132, 168, 191, 252, 304, 316], "regist": [113, 132, 168, 191, 252, 304, 316], "work": [114, 147, 323], "__package__": 114, "els": 114, "__name__": 114, "thorough": 115, "misc": [116, 117, 118, 119, 120, 320], "first_item": 116, "typeerror": 117, "traceback": 117, "recent": 117, "last": [117, 185, 264], "uniqu": [118, 138, 247], "fce": [119, 279], "mock": 119, "numba": [119, 120], "jit": 119, "avail": [119, 138, 290, 321, 327], "occur": [120, 326], "instal": [120, 321, 323], "acceler": 120, "nooutput": [121, 320], "context": [121, 122], "manag": [121, 122, 323, 327], "no_output": [122, 320], "fd": 122, "iter": [122, 138, 145, 147, 185, 264, 279, 326, 327], "customopt": [123, 200, 201, 265, 274, 320], "store": [123, 125, 126, 160, 211, 215, 219, 223, 227, 231, 235, 246, 247, 277, 290, 327], "me": 124, "my": [124, 209, 327], "value_definit": 124, "value_typ": 125, "encapsul": 125, "overcam": 125, "too": [125, 160, 264], "strict": 125, "enfor": 125, "satisfi": 125, "stringifi": 125, "again": [125, 160, 326], "write_valu": 125, "im": [126, 141, 143, 145, 147, 327], "set_danger": 126, "1j": 126, "is_danger": 126, "whether": [126, 163, 264, 290], "bypass": 126, "proper": [126, 160], "completli": 126, "sinc": [126, 264], "underlin": 126, "dummi": [126, 264, 326], "compatibil": 126, "_post_set": 126, "modif": [126, 327], "_check_array_access": 126, "_set_item": 126, "saniti": 126, "_getitem": 126, "_unpack_valu": 126, "potention": 126, "_pack_valu": 126, "translat": [126, 196], "call_hook": 126, "value_and_chang": 126, "is_it_the_default_valu": 126, "wildcard": 126, "get_path": 126, "asynciofileread": [127, 320], "baseprocessoutputread": [127, 163, 180, 181, 183, 184, 186, 187, 320], "reader": [127, 128, 180, 181, 182, 183, 184, 185, 187, 320, 326, 327], "process": [127, 129, 160, 163, 187, 224, 240, 245, 246, 263, 264, 311, 321, 327], "emploi": [127, 264, 326], "stdio": 127, "stderr": [127, 129], "concur": 127, "process_output_read": [128, 129, 160, 163, 180, 181, 183, 184, 186, 187, 320], "filenam": [128, 160, 185, 249, 263, 264, 298, 300, 301, 327], "buffers": 128, "8192": 128, "mimic": 128, "streamread": 128, "fact": [128, 201, 202], "synchron": 128, "close": 128, "readlin": 128, "separator_shift": 128, "sep": 128, "readuntil": 128, "asyn": 129, "read_error": [129, 187], "read_output": [129, 181, 184, 187, 326], "run_subprocess": 129, "wait": [129, 187], "postprocess": [129, 187, 326, 327], "intend": [129, 187], "cmd": 129, "outfil": 129, "print_output": [129, 160, 264], "return_cod": [129, 182, 185, 188], "commontest": [133, 317], "test_common": [134, 320], "test_asyncio_file_read": 134, "grammartest": 135, "test_grammar_typ": [136, 320], "test_is_the_same_valu": 136, "test_typ": 136, "_test_typ": 136, "solv": [137, 321], "unique_valu": [138, 320], "value_to_class_id": 138, "distinct": 138, "criterion": 138, "from_valu": 138, "id": [138, 262], "eq": 138, "revers": 138, "start_from": 138, "iter_uniqu": 138, "len_of_uniqu": 138, "none_tupl": 138, "len": [138, 264, 327], "Then": 138, "uniquevalu": 138, "inputparameterss": [140, 162, 238], "configurt": 140, "angl": 141, "resolv": 141, "photoemiss": 141, "spectroscopi": [141, 262], "adsi": [141, 143, 145, 147, 150], "fixedvalu": [141, 143, 145, 147], "potfil": [141, 143, 145, 147], "isn": [141, 143, 145, 147], "necessari": [141, 143, 145, 147, 249, 290, 327], "krw": [141, 143, 145, 147], "affect": [141, 143, 145, 147], "amount": [141, 143, 145, 147], "nonmag": [141, 143, 145, 147], "consid": [141, 143, 145, 147, 290], "magnet": [141, 143, 145, 147, 245], "higher": [141, 143, 145, 147], "faster": [141, 143, 145, 147], "tau": [141, 143, 145, 147, 327], "bzint": [141, 143, 145, 147], "anyof": [141, 143, 145, 147], "point": [141, 143, 145, 147], "weyl": [141, 143, 145, 147], "sampl": [141, 143, 145, 147], "less": [141, 143, 145, 147], "ran": [141, 143, 145, 147], "dom": [141, 143, 145, 147], "k": [141, 143, 145, 147, 198], "vari": [141, 143, 145, 147], "quadrat": [141, 143, 145, 147], "tween": [141, 143, 145, 147], "imaginari": [141, 143, 145, 147], "grid": [141, 143, 145, 147], "nktab": [141, 143, 145, 147, 327], "good": [141, 143, 145, 147], "compromis": [141, 143, 145, 147], "concern": [141, 143, 145, 147], "accuraci": [141, 143, 145, 147], "effici": [141, 143, 145, 147], "adjust": [141, 143, 145, 147], "mesh": [141, 143, 145, 147, 211, 215, 219, 220, 223, 231, 246, 247, 278, 282, 283, 288, 290, 320], "250": [141, 143, 145, 147], "nkmin": [141, 143, 145, 147], "300": [141, 143, 145, 147, 196], "nkmax": [141, 143, 145, 147], "500": [141, 143, 145, 147], "cluster": [141, 143, 145, 147, 264, 327], "nshlclu": [141, 143, 145, 147], "shell": [141, 143, 145, 147, 160, 327], "around": [141, 143, 145, 147, 326], "central": [141, 143, 145, 147], "clurad": [141, 143, 145, 147], "radiu": [141, 143, 145, 147, 198], "multipl": [141, 143, 145, 147], "alat": [141, 143, 145, 147], "iqcntr": [141, 143, 145, 147], "center": [141, 143, 145, 147, 196], "basi": [141, 143, 145, 147], "itcntr": [141, 143, 145, 147], "atomictyp": [141, 143, 145, 147, 235, 260, 281, 288, 291, 320], "occupi": [141, 143, 145, 147], "nlout": [141, 143, 145, 147], "\u03c4": [141, 143, 145, 147], "matrix": [141, 143, 145, 147], "lmax": [141, 143, 145, 147], "mol": [141, 143, 145, 147], "molecular": [141, 143, 145, 147], "eminev": 141, "minimum": 141, "window": 141, "fermi": 141, "emaxev": 141, "maximum": [141, 147], "eworkev": 141, "inner": 141, "bulk": [141, 198, 298, 323], "crystal": 141, "imv_ini_ev": 141, "initi": [141, 290], "imv_fin_ev": 141, "final": 141, "nl": [141, 143, 147], "angula": [141, 143, 147], "momentum": [141, 143, 147], "cutoff": [141, 143, 147], "discard": [141, 143, 147], "strver": 141, "iq_at_surf": 141, "miller_hkl": 141, "ntmp": 141, "tmpmin": 141, "11": [141, 196, 321], "ctmpmax": 141, "vibra": 141, "cnvibra": 141, "spec_ph": 141, "theta": 141, "45": [141, 196, 198], "phi": 141, "pol_p": 141, "polar": [141, 147], "light": [141, 147], "ephot": 141, "6675": 141, "photon": 141, "alq": 141, "align": 141, "vector": [141, 147], "pol": 141, "ellipsi": 141, "delq": 141, "phase": [141, 326], "shift": 141, "90": [141, 196], "circular": 141, "npol": 141, "unpolar": 141, "dichroism": 141, "rcp": 141, "ellipt": 141, "depend": [141, 160], "icirc": 141, "lcp": 141, "ddad": 141, "ldad": 141, "arbitrari": [141, 147], "linear": 141, "idreh": 141, "linearli": 141, "right": 141, "ifsp": 141, "theta_fix": 141, "spec_el": 141, "scatter": 141, "nt": 141, "azimuth": 141, "pol_": 141, "pz": 141, "spol": 141, "pspin": 141, "typ": 141, "diagram": 141, "scan": 141, "orthonorm": 141, "project": 141, "stereograph": 141, "pe": 141, "xp": 141, "nx": 141, "ny": 141, "istr": 141, "beam": 141, "h": [141, 198], "pol0": 141, "pol0l": 141, "laboratori": 141, "q1": 141, "0j": 141, "amplitud": 141, "photoelectron": 141, "spin": [141, 145, 147], "q2": 141, "q3": 141, "q4": 141, "spec_str": 141, "n_laydbl": 141, "nlat_g_vec": 141, "57": [141, 196, 198], "n_layer": 141, "120": [141, 196], "surf_bar": 141, "25": [141, 196, 198], "transp_bar": 141, "arp": [142, 160, 320, 321, 327], "input_parameters_definit": [142, 144, 146, 148, 151, 152, 153, 154, 155, 156, 158, 160, 163, 164, 165, 320], "inputparametersdefinit": [142, 144, 146, 148, 160, 162, 320], "emin": [143, 145, 147], "lowest": [143, 145, 147], "emax": 143, "32": [145, 147, 196, 198], "scf": [145, 148, 160, 184, 185, 264, 320, 321, 326, 327], "200": [145, 147, 196], "cycl": [145, 147, 327], "vxc": [145, 147], "vwn": [145, 147], "mjw": [145, 147], "vbh": [145, 147], "pbe": [145, 147], "vosko": [145, 147], "wilk": [145, 147], "nusair": [145, 147], "janak": [145, 147], "william": [145, 147], "moruzzigit": [145, 147], "von": [145, 147], "barth": [145, 147], "hedin": [145, 147], "perdew": [145, 147], "burk": [145, 147], "ernzendorf": [145, 147], "gga": [145, 147], "alg": [145, 147], "broyden2": [145, 147], "tchebi": [145, 147], "broyden": [145, 147], "tchebychev": [145, 147], "efguess": [145, 147], "tol": [145, 147], "threshold": [145, 147, 290], "algorithm": [145, 147], "istbri": [145, 147], "itdept": [145, 147], "40": [145, 147, 196], "depth": [145, 147], "histori": [145, 147], "qion": [145, 147], "ionic": [145, 147], "charg": [145, 147, 185, 264, 327], "qt": [145, 147], "mspin": [145, 147], "moment": [145, 147, 327], "\u03bc_": [145, 147], "usevmatt": [145, 147], "mattheissconstruct": [145, 147], "densiti": [145, 147, 185], "todo": [145, 286, 294, 299], "someth": [145, 247], "meaningful": 145, "phagen": [146, 160, 264, 320, 327], "consist": [147, 327], "strconst": 147, "eta": 147, "ewald": 147, "rmax": 147, "converg": [147, 185, 326, 327], "gmax": 147, "reciproc": 147, "cpa": 147, "20": [147, 196], "0001": 147, "stop": 147, "mode": [147, 160, 228, 264], "srel": 147, "scalar": 147, "relativist": 147, "mdir": [147, 321], "magnetis": 147, "cartesian": 147, "normalis": 147, "scale": [147, 211, 215, 223, 231, 246, 321], "soc": 147, "strength": 147, "orbit": 147, "coupl": 147, "inputsectiondefinit": [150, 151, 152, 153, 154, 155, 156, 157, 158, 162, 163, 320], "configurationfil": [159, 160, 248, 249, 265, 320], "configurationsectiontrait": [159, 160, 210, 211, 214, 215, 218, 219, 222, 223, 226, 227, 230, 231, 234, 235, 244, 245, 246, 247, 248, 249, 265, 266, 268, 273, 320], "suppli": [159, 264, 327], "inputfil": 160, "outputfil": 160, "task_nam": 160, "_default_mpi_runn": 160, "default_mpi_runn": 160, "mpi": [160, 163, 264, 323], "runner": [160, 264, 327], "autodetect": [160, 264], "mpi_runn": 160, "mpirun": [160, 264, 327], "suitabl": 160, "found": [160, 264, 281], "command": [160, 187], "is_mpi": 160, "Will": 160, "regardless": 160, "run_process": 160, "input_fil": [160, 264, 327], "output_fil": [160, 264, 327], "executable_postfix": [160, 264], "paamet": 160, "binari": 160, "infrom": 160, "postfixi": 160, "processoutputread": 160, "result_read": [160, 163], "attach": 160, "ruther": 160, "relat": [160, 187, 194], "read_output_from_fil": 160, "executable_param": 160, "stdin": 160, "popen": 160, "set_opt": 160, "is_it_a_input_parameters_nam": 160, "create_input_paramet": 160, "default_paramet": 160, "from_fil": [160, 249, 327], "fullfil": 160, "sprkkr_executable_suffix": [161, 264, 327], "configurationfiledefinit": [162, 163, 238, 242, 265, 320], "configurationsectiondefinit": [162, 164, 210, 212, 214, 216, 218, 220, 222, 224, 226, 228, 230, 232, 234, 236, 238, 239, 240, 265, 320], "inputvaluedefinit": [162, 164, 320], "configurationvaluedefinit": [162, 165, 200, 202, 238, 241, 243, 265, 320], "simlilar": [162, 238], "share": [162, 238, 288, 290, 326, 327], "kkrscf": [163, 188], "child_class": [163, 164, 176, 240, 242], "custom_class": [163, 164, 176, 240, 242], "grammar_of_delimit": [163, 164, 165, 176, 177, 178, 204, 240, 241, 242], "printabl": 163, "custom_value_grammar": [163, 242], "ouptut": [164, 176, 240, 264], "wordstart": [164, 176, 177], "_copy_arg": [164, 165], "type_of_danger": [165, 241], "testdefinit": 169, "test_definit": [170, 320], "testinputparamet": 171, "test_input_paramet": [172, 320], "test_section_delimiter_valu": 172, "test_custom_valu": 172, "test_dangerous_valu": 172, "test_input_parameters_definit": 172, "outputnonamevaluedefinit": [174, 320], "outputvaluedefinit": [174, 175, 176, 178, 320], "outputsectiondefinit": [174, 184, 320], "outputvalueequaldefinit": [174, 320], "although": 174, "approach": 174, "output_definit": [175, 176, 177, 178, 184, 320], "defaultoutputread": 180, "task_result": [180, 181, 182, 183, 184, 185, 187, 188, 320], "outputread": [180, 181, 183, 184, 186, 320, 326], "defaultresult": [180, 181], "taskresult": [180, 182, 183, 185, 186, 320], "scfoutputread": [183, 326], "scfresult": [183, 184, 327], "atoms_conf_typ": 184, "potential_filenam": [185, 264, 327], "further": [185, 187, 264, 278, 323, 327], "hopefulli": 185, "wavefunct": [185, 327], "total": 185, "coverg": 185, "iteration_valu": 185, "etot": 185, "last_iter": [185, 327], "plot": 185, "logscal": 185, "err": 185, "render": 185, "screen": 185, "matplotlib": 185, "construct": 187, "inputparametersresult": 187, "produc": 187, "belong": [187, 288], "wich": 187, "testoutput": 192, "test_output": [193, 320], "lattic": [194, 195, 196, 215, 216, 217], "geometri": [194, 215, 290], "latticedata": [195, 320], "lattice_data": [196, 320], "ap": 196, "c_i": 196, "cf": [196, 198], "o_h": 196, "ci": 196, "cp": 196, "hp": 196, "d_6h": 196, "hr": 196, "d_3d": 196, "mp": 196, "c_2h": 196, "oF": 196, "d_2h": 196, "oi": 196, "op": 196, "o": [196, 198, 272], "ti": [196, 198], "d_4h": 196, "tp": 196, "cell_symmetri": 196, "triclin": 196, "13": [196, 198, 327], "cubic": 196, "face": 196, "m3m": 196, "bodi": 196, "12": [196, 240], "hexagon": 196, "6": [196, 198, 264, 323, 327], "mmm": 196, "trigon": 196, "3m": 196, "monoclin": 196, "orthoromb": 196, "tetragon": 196, "8": [196, 198, 262, 327], "pearson": 196, "symbol": [196, 198, 261, 281, 290, 327], "international_numbers_to_ap": 196, "15": 196, "27": [196, 198], "39": [196, 198], "41": 196, "43": 196, "50": 196, "55": [196, 198], "61": [196, 198], "73": [196, 198], "74": 196, "18": 196, "77": [196, 198], "19": 196, "80": [196, 198], "81": [196, 198], "84": [196, 198], "22": [196, 198], "87": 196, "23": [196, 198], "88": [196, 198], "24": 196, "89": [196, 198], "26": 196, "93": [196, 198], "99": [196, 198], "28": [196, 198], "102": 196, "29": 196, "108": 196, "30": 196, "114": 196, "31": [196, 198], "126": 196, "33": 196, "129": 196, "34": 196, "135": 196, "35": 196, "138": 196, "36": 196, "145": 196, "37": [196, 198], "147": 196, "38": 196, "150": 196, "156": 196, "162": 196, "168": 196, "42": 196, "174": 196, "177": 196, "44": [196, 198], "180": 196, "183": 196, "46": [196, 198], "186": 196, "47": 196, "192": 196, "48": 196, "193": 196, "49": 196, "195": 196, "198": 196, "51": 196, "204": 196, "52": [196, 198], "210": 196, "53": 196, "216": 196, "54": 196, "222": 196, "228": 196, "56": [196, 198], "231": 196, "234": 196, "58": 196, "240": 196, "59": 196, "247": 196, "60": 196, "249": 196, "255": 196, "62": [196, 198], "257": 196, "63": [196, 198], "263": 196, "64": [196, 198, 327], "269": 196, "65": [196, 198], "275": 196, "66": [196, 198], "278": 196, "67": [196, 198], "281": 196, "68": 196, "287": 196, "69": 196, "299": 196, "70": 196, "71": [196, 198], "302": 196, "72": 196, "303": 196, "306": 196, "308": 196, "75": [196, 198], "314": 196, "76": [196, 198], "315": 196, "316": 196, "78": [196, 198], "317": 196, "79": [196, 198], "318": 196, "319": 196, "320": 196, "82": [196, 198], "321": 196, "83": [196, 198], "322": 196, "323": 196, "85": [196, 198], "324": 196, "86": [196, 198], "326": 196, "328": 196, "329": 196, "331": 196, "332": 196, "91": [196, 198], "333": 196, "92": 196, "334": 196, "335": 196, "94": [196, 198], "336": 196, "95": [196, 198], "337": 196, "96": [196, 198], "338": 196, "97": 196, "339": 196, "98": [196, 198], "340": 196, "341": 196, "100": 196, "342": 196, "101": 196, "343": 196, "344": 196, "103": 196, "345": 196, "104": 196, "346": 196, "105": 196, "347": 196, "106": 196, "348": 196, "107": 196, "349": 196, "350": 196, "109": 196, "351": 196, "110": 196, "352": 196, "111": 196, "353": 196, "112": 196, "354": 196, "113": 196, "355": 196, "356": 196, "115": 196, "357": 196, "116": 196, "358": 196, "117": 196, "359": 196, "118": 196, "360": 196, "119": 196, "361": 196, "362": 196, "121": 196, "363": 196, "122": 196, "364": 196, "123": 196, "365": 196, "124": 196, "366": 196, "125": 196, "368": 196, "370": 196, "127": 196, "371": 196, "128": 196, "372": 196, "374": 196, "130": 196, "376": 196, "131": 196, "377": 196, "132": 196, "378": 196, "133": 196, "380": 196, "134": 196, "382": 196, "383": 196, "136": 196, "384": 196, "137": 196, "386": 196, "388": 196, "139": 196, "389": 196, "140": 196, "390": 196, "141": 196, "392": 196, "142": 196, "394": 196, "143": 196, "396": 196, "144": 196, "398": 196, "400": 196, "146": 196, "401": 196, "404": 196, "148": 196, "405": 196, "149": 196, "407": 196, "408": 196, "151": 196, "409": 196, "152": 196, "410": 196, "153": 196, "411": 196, "154": 196, "412": 196, "155": 196, "414": 196, "415": 196, "157": 196, "416": 196, "158": 196, "417": 196, "159": 196, "418": 196, "160": 196, "419": 196, "161": 196, "422": 196, "423": 196, "163": 196, "424": 196, "164": 196, "425": 196, "165": 196, "426": 196, "166": 196, "428": 196, "167": 196, "430": 196, "431": 196, "169": 196, "432": 196, "170": 196, "433": 196, "171": 196, "434": 196, "172": 196, "435": 196, "173": 196, "436": 196, "437": 196, "175": 196, "438": 196, "176": 196, "439": 196, "440": 196, "178": 196, "441": 196, "179": 196, "442": 196, "443": 196, "181": 196, "444": 196, "182": 196, "445": 196, "446": 196, "184": 196, "447": 196, "185": 196, "448": 196, "449": 196, "187": 196, "450": 196, "188": 196, "451": 196, "189": 196, "452": 196, "190": 196, "453": 196, "191": 196, "454": 196, "455": 196, "456": 196, "194": 196, "457": 196, "458": 196, "196": 196, "459": 196, "197": 196, "460": 196, "461": 196, "199": 196, "462": 196, "463": 196, "201": 196, "465": 196, "202": 196, "466": 196, "203": 196, "468": 196, "469": 196, "205": 196, "470": 196, "206": 196, "471": 196, "207": 196, "472": 196, "208": 196, "473": 196, "209": 196, "474": 196, "475": 196, "211": 196, "476": 196, "212": 196, "477": 196, "213": 196, "478": 196, "214": 196, "479": 196, "215": 196, "480": 196, "481": 196, "217": 196, "482": 196, "218": 196, "483": 196, "219": 196, "484": 196, "220": 196, "485": 196, "221": 196, "486": 196, "488": 196, "223": 196, "489": 196, "224": 196, "491": 196, "225": 196, "492": 196, "226": 196, "493": 196, "227": 196, "494": 196, "229": 196, "498": 196, "230": 196, "499": 196, "perlov": 196, "bravais_number_from_pearson_symbol": 196, "pearson_symbol": 196, "winger": [197, 198], "seitz": [197, 198], "radii": [197, 198, 321], "ac": 198, "ag": 198, "al": 198, "am": 198, "At": 198, "au": 198, "ba": 198, "Be": 198, "bi": 198, "bk": 198, "br": [198, 327], "ca": 198, "ce": 198, "co": 198, "cr": 198, "cu": 198, "dy": 198, "er": 198, "eu": 198, "fe": [198, 261], "fm": 198, "fr": 198, "ga": 198, "gd": 198, "ge": 198, "he": 198, "hf": 198, "hg": 198, "ho": 198, "ir": 198, "kr": 198, "la": 198, "li": [198, 327], "04": 198, "lu": 198, "mg": 198, "mn": 198, "mo": 198, "na": 198, "nb": 198, "03": 198, "nd": 198, "ni": 198, "02": 198, "pb": 198, "14351193885013": 198, "pd": 198, "pm": 198, "po": 198, "pr": 198, "pt": 198, "pu": 198, "ra": 198, "rb": 198, "rh": 198, "rn": 198, "ru": 198, "sb": 198, "sc": 198, "se": 198, "si": 198, "sm": 198, "sn": 198, "sr": 198, "ta": 198, "tb": 198, "tc": 198, "th": 198, "tl": 198, "tm": 198, "u": [198, 327], "vc": 198, "xe": 198, "yb": 198, "zn": 198, "zr": 198, "en": [198, 262, 326], "wikipedia": 198, "org": 198, "wiki": [198, 264], "wigner": 198, "e2": 198, "93seitz_radiu": 198, "chemic": [198, 261, 281, 327], "sphere": 198, "volum": 198, "per": [198, 264], "materi": [198, 323], "custompotentialsect": [200, 242, 320], "customconfigurationvalu": [200, 201, 265, 320], "custompotentialsectiondefinit": [200, 320], "customsectiontoken": [200, 320], "sectionstr": [200, 320], "custom_potential_sect": [201, 202, 203, 204, 320], "_depends_on": [201, 245, 246], "_set_from_atom": [201, 211, 215, 223, 227, 231, 245, 246, 247, 270, 271, 274], "io_data": [201, 227, 247, 249, 270, 271, 274, 276, 277, 278, 279, 292, 293, 320], "_update_atom": [201, 215, 223, 231, 245, 246, 247, 281], "mandatori": [202, 212, 216, 220, 224, 228, 232, 236, 239, 240, 245], "obvious": 202, "let": [203, 326], "dotal": 203, "parseimpl": 203, "instr": 203, "loc": 203, "doaction": 203, "delimiter_pattern": 204, "potential_fil": [206, 264, 327], "potentialdefinit": [207, 238, 249, 320], "globalsystemparamet": [210, 212], "potential_sect": [210, 211, 214, 215, 218, 219, 222, 223, 226, 227, 230, 231, 234, 235, 245, 246, 247, 320], "potentialsect": [210, 211, 214, 215, 218, 219, 222, 223, 226, 227, 230, 231, 234, 235, 240, 244, 245, 247, 320], "configurationsect": [210, 211, 214, 215, 218, 219, 222, 223, 226, 227, 230, 231, 234, 235, 244, 245, 246, 247, 265, 269, 320], "globalsystemparameterdefinit": [210, 213], "potential_definit": [210, 212, 214, 216, 218, 220, 222, 224, 226, 228, 230, 232, 234, 236, 239, 240, 241, 242, 243, 249, 320, 326], "potsectiondefinit": [210, 212, 214, 216, 218, 220, 222, 224, 226, 228, 230, 232, 234, 236, 238, 239, 242, 320], "global_system_paramet": [211, 212, 213, 327], "write_io_data": [211, 215, 219, 223, 227, 231, 235, 246, 247], "sprkkratom": [211, 215, 223, 231, 245, 246, 247, 264, 270, 288, 289, 298, 320, 326, 327], "writeiodata": [211, 215, 223, 231, 246, 247, 249, 270, 271, 274, 275, 320], "reus": [211, 215, 223, 231, 246], "constant": [211, 215, 223, 231, 246, 326], "global": 212, "latticesect": [214, 216], "latticesectiondefinit": [214, 217], "read_io_data": [215, 223, 231, 246, 247], "readiodata": [215, 223, 231, 246, 247, 275, 320], "mechan": [215, 223, 231, 246], "independ": [215, 223, 231, 246], "testabl": [215, 223, 231, 246], "obejct": [215, 223, 231, 246], "adapt": [215, 223, 231, 246], "meshinformationsect": [218, 220], "uniquelistsect": [218, 219, 226, 227, 234, 235, 244, 320], "meshinformationsectiondefinit": [218, 221], "mesh_inform": [219, 220, 221], "_value_nam": [219, 227, 235, 247], "_value_class": [219, 227, 235, 247], "exponentialmesh": [219, 282, 288, 320], "occupationsect": [222, 224], "occupationsectiondefinit": [222, 225], "depends_on": [224, 239, 240], "than": [224, 240, 246], "prerequisit": [224, 240, 246], "referencesystemsect": [226, 228], "referencesystemsectiondefinit": [226, 229], "reference_system": [227, 228, 229, 278, 286, 288, 320], "referencesystem": [227, 285, 288, 320], "refer": [228, 247, 278, 288], "FOR": 228, "tight": 228, "sitessect": [230, 232], "sitessectiondefinit": [230, 233], "typessect": [234, 236], "typessectiondefinit": [234, 237], "asearraysectiondefinit": [238, 320], "potvaluedefinit": [238, 240, 243, 320], "array_nam": [239, 245], "setarrai": 239, "predecessor": 239, "asearraysect": [239, 244, 320], "star": 243, "_counter": 243, "divid": [244, 326], "_": 245, "accordingli": [245, 247, 326, 327], "updat": [247, 249, 264, 271, 326, 327], "self_value_class": 247, "from_tupl": 247, "being": 249, "make_complet": 249, "update_atom": [249, 288], "time": [249, 264, 270, 327], "creation": [249, 270], "frozen": [249, 270], "from_atom": [249, 327], "testcustomsect": 253, "test_custom_sect": [254, 320], "assertnon": 254, "testpotenti": 255, "test_potenti": [256, 320], "test_grammar": 256, "test_exampl": 256, "test_sequ": 256, "test_reset": 256, "teststructur": 257, "test_structur": [258, 320], "test_lattic": 258, "place": [260, 261, 281, 327], "atomic_typ": [261, 281, 320], "n_core": 261, "n_valenc": 261, "n_semicor": 261, "n_electron": 261, "vacuum": [261, 298], "pseudoel": 261, "valenc": [261, 290], "attempt": 261, "third": [261, 326], "parti": 261, "done": [261, 326, 327], "semicor": [261, 290], "_mendeleev_modul": 261, "to_tupl": [261, 281, 283, 286], "to_atomic_typ": 261, "is_vacuum": 261, "filenametempl": [262, 264], "getpropertiesmixin": [262, 264], "understood": 262, "msspec": 262, "link": 262, "olymp": 262, "cup": 262, "uni": 262, "muenchen": 262, "de": 262, "php": 262, "com_cont": 262, "view": [262, 320, 327], "articl": 262, "3asprkkr": 262, "catid": 262, "3asoftwar": 262, "itemid": 262, "lang": 262, "placehold": [263, 264, 327], "rememb": 263, "counter": [263, 264, 327], "_get": 263, "lambda": 263, "restart": 264, "easier": 264, "dto": 264, "perform": [264, 326], "mostli": [264, 326], "templat": [264, 327], "temporari": 264, "suffix": [264, 327], "save_input": [264, 327], "slash": [264, 327], "hostnam": [264, 327], "implemented_properti": 264, "skrkkr_executable_postfix": 264, "environment": [264, 327], "pathnam": 264, "meth": [264, 327], "tak": 264, "inputpamat": 264, "bewar": 264, "option_nam": 264, "ambigu": 264, "associ": [264, 327], "explicitli": 264, "sprkkr_atom": [264, 290, 298, 320, 326, 327], "_advance_count": 264, "advanc": [264, 327], "_open_fil": 264, "allow_temporari": 264, "create_subdir": 264, "unchang": 264, "filema": 264, "return_fil": 264, "combin": 264, "stress": 264, "dipol": 264, "magmom": 264, "calcualtor": 264, "don": 264, "input_filenam": 264, "output_filenam": 264, "executable_postifx": 264, "contructor": 264, "system_chang": 264, "pbc": 264, "initial_charg": 264, "initial_magmom": 264, "alwai": [264, 290], "fysik": 264, "dtu": 264, "dk": 264, "six": 264, "insert": 264, "like": [264, 281, 321], "shown": 264, "kkrgen": 264, "kkrspec": 264, "kkrch": 264, "run_xband": 264, "xband": [264, 299, 300], "copy_with_potenti": 264, "potential_object": 264, "configurationvalu": [265, 272, 320], "customconfigurationsect": [265, 320], "node": [267, 326], "unlik": 270, "non_underscor": 270, "baseiodata": [275, 277, 278, 320], "iodata": 275, "serv": 275, "intermedi": 275, "storag": 275, "futur": 276, "noth": 277, "yet": [277, 327], "while": [278, 290, 326, 327], "demand": 278, "dct": 281, "alloi": 281, "enumer": 281, "_find_kei": 281, "primary_atomic_typ": 281, "largest": 281, "primary_atomic_numb": 281, "main": [281, 327], "primary_symbol": [281, 288], "_normal": 281, "except_from": 281, "normal": 281, "sum": 281, "total_occup": 281, "to_occup": 281, "radial": [282, 283, 284], "radial_mesh": [283, 284, 320], "r1": 283, "dx": 283, "jrmt": 283, "rmt": 283, "jrw": 283, "rw": 283, "multipli": 283, "r_n": 283, "r_": 283, "vref": 286, "rmtref": 286, "spatial": [288, 290], "fraction": 288, "correspond": [288, 326], "enhanc": 289, "extend": 290, "sites_array_nam": 290, "sprkkr_sites_data": 290, "promote_ase_atom": [290, 326, 327], "usabl": 290, "bit": [290, 299], "ugli": 290, "hack": 290, "__class__": 290, "extra": 290, "promot": [290, 327], "_init": 290, "among": 290, "symmetr": 290, "compute_sites_symmetri": [290, 327], "symprec": 290, "_site": 290, "ident": 290, "firstli": 290, "nearli": 290, "recomput": 290, "won": 290, "newli": [290, 327], "get_spacegroup": 290, "_compute_sites_symmetri": 290, "metod": 290, "cancel_sites_symmetri": 290, "cancel": 290, "uniq": 290, "_cancel_sites_symmetri": 290, "fulli": [290, 300], "made": [290, 327], "reflect": [290, 327], "reset_sprkkr_potenti": 290, "sprkkr_grammar_typ": [292, 293, 320], "atomdata": [294, 320], "layerdata": [294, 320], "a2s_visualise_in_struct": [294, 313, 320, 321, 327], "structure_file_to_atom": [294, 320], "surfac": [294, 298, 327], "in_structur": [294, 295, 298, 327], "inp": [294, 295, 297, 298, 312, 327], "implementaion": 294, "from_text": 295, "get_symbol": 295, "n_bulk": 298, "vacuum_height": 298, "repetit": 298, "height": 298, "abov": [298, 326, 327], "thy": 299, "legaci": 299, "caution": 299, "sysfil": [300, 301, 320], "thoroughli": 300, "nor": [300, 327], "guarant": 300, "calculatortest": 305, "test_calcul": [306, 320], "test_run": 306, "sprkkratomstest": 307, "test_sprkkr_atom": [308, 320], "xtest_atom": 308, "test_symmetri": 308, "test_occup": 308, "sysfiletest": 309, "test_sysfil": [310, 320], "script": [311, 321, 326, 327], "sctipt": 312, "in_struct": 312, "test_tool": [318, 320], "equivalent_sites_for_spacegroup": 320, "possibly_equivalent_sit": 320, "spacegroup_dataset": 320, "normalize_type_map": 320, "add_excluded_names_condit": 320, "unique_dict": 320, "cached_properti": 320, "add_called_class_as_argu": 320, "add_to_signatur": 320, "process_input_parameters_definit": 320, "verbatim": 320, "fortran_format": 320, "optional_line_end": 320, "line_end": 320, "end_of_fil": 320, "separator_pattern": 320, "optional_quot": 320, "addconditionex": 320, "addparseactionex": 320, "delimitedlist": 320, "generate_grammar": 320, "replace_whitechar": 320, "line_str": 320, "complex_numb": 320, "set_of_integ": 320, "set_of_r": 320, "pot_mix": 320, "recognized_set_typ": 320, "type_from_set_map": 320, "defkeyword": 320, "compare_numpy_valu": 320, "type_from_default_valu": 320, "type_from_typ": 320, "type_from_valu": 320, "patch_packag": 320, "as_integ": 320, "copy_list": 320, "njit": 320, "numpy_index": 320, "resolve_executable_postfix": 320, "winger_seitz_radii": 320, "unique_map": 320, "floatjm": 320, "sysfile_cont": 320, "write_sysfil": 320, "move": 321, "switch": 321, "pytest": 321, "fixi": 321, "now": 321, "refactor": 321, "abus": 321, "basesometh": 321, "descirpt": 321, "were": [321, 327], "introduc": 321, "mdir1": 321, "mdir2": 321, "support": [321, 326, 327], "bundl": 323, "contribut": 323, "report": 323, "git": [323, 327], "pip": [323, 327], "conda": [323, 327], "One": 323, "step": [323, 326], "bug": 323, "philosophi": 323, "program": 323, "changelog": 323, "beta1": 323, "architectur": 323, "page": 323, "leav": 326, "basevaluedefinit": 326, "Their": 326, "basecontainerdefinit": 326, "mani": [326, 327], "relationship": 326, "subpackag": 326, "miscellan": 326, "mod": 326, "prescrib": 326, "possibli": 326, "simpli": 326, "rest": 326, "oop": 326, "ancestor": 326, "sprkrr": 326, "readthedoc": 326, "latest": 326, "input_prameters_definit": 326, "basetyp": 326, "exact": 326, "invok": 326, "sh": 327, "encourag": 327, "somewher": 327, "bash": 327, "kkrscf8": 327, "rc": 327, "topic": 327, "aim": 327, "primarili": 327, "limit": 327, "assum": 327, "experienc": 327, "analyz": 327, "bellow": 327, "sever": 327, "sprkkr_command_suffix": 327, "licl": 327, "rocksalt": 327, "indistinguish": 327, "lower": 327, "queri": 327, "interoper": 327, "receiv": 327, "choos": 327, "we": 327, "avoid": 327, "conflict": 327, "through": 327, "acess": 327, "interact": 327, "input_paramt": 327, "uppercas": 327, "least": 327, "my_custom_sect": 327, "my_custom_valu": 327, "necess": 327, "usecas": 327, "subseuent": 327, "an_input_fil": 327, "a_potential_fil": 327, "cours": 327, "my_potential_fil": 327, "irel": 327, "accep": 327, "temp": 327, "interperet": 327, "cf4": 327, "duplic": 327, "therefor": 327, "logic": 327, "behind": 327, "scene": 327, "latter": 327, "indic": 327, "setter": 327, "thereaft": 327, "batch": 327, "detect": 327, "mpirunn": 327, "openmpi": 327, "mpich": 327, "subdirectori": 327, "visualise_in_struct": 327, "py": 327, "must": 327, "our": 327, "featur": 327, "highli": 327, "appreci": 327}, "objects": {"": [[1, 0, 0, "-", "ase2sprkkr"]], "ase2sprkkr": [[2, 0, 0, "-", "ase"], [5, 0, 0, "-", "bindings"], [11, 0, 0, "-", "common"], [139, 0, 0, "-", "input_parameters"], [173, 0, 0, "-", "outputs"], [194, 0, 0, "-", "physics"], [199, 0, 0, "-", "potentials"], [259, 0, 0, "-", "sprkkr"], [311, 0, 0, "-", "tools"], [319, 0, 0, "-", "version"]], "ase2sprkkr.ase": [[3, 0, 0, "-", "visualise"]], "ase2sprkkr.ase.visualise": [[4, 1, 1, "", "view"]], "ase2sprkkr.bindings": [[6, 0, 0, "-", "spglib"]], "ase2sprkkr.bindings.spglib": [[7, 1, 1, "", "compute_spacegroup"], [8, 1, 1, "", "equivalent_sites_for_spacegroup"], [9, 1, 1, "", "possibly_equivalent_sites"], [10, 1, 1, "", "spacegroup_dataset"]], "ase2sprkkr.common": [[12, 0, 0, "-", "alternative_types"], [17, 0, 0, "-", "configuration"], [19, 0, 0, "-", "configuration_containers"], [25, 0, 0, "-", "configuration_definitions"], [33, 0, 0, "-", "decorators"], [40, 0, 0, "-", "doc"], [43, 0, 0, "-", "formats"], [45, 0, 0, "-", "grammar"], [58, 0, 0, "-", "grammar_types"], [112, 0, 0, "-", "init_tests"], [115, 0, 0, "-", "misc"], [121, 0, 0, "-", "no_output"], [123, 0, 0, "-", "options"], [127, 0, 0, "-", "process_output_reader"], [130, 0, 0, "-", "test"], [137, 0, 0, "-", "unique_values"]], "ase2sprkkr.common.alternative_types": [[13, 2, 1, "", "allowed_types"], [14, 1, 1, "", "normalize_type"], [15, 2, 1, "", "normalize_type_map"], [16, 2, 1, "", "types_alternatives"]], "ase2sprkkr.common.configuration": [[18, 3, 1, "", "Configuration"]], "ase2sprkkr.common.configuration.Configuration": [[18, 4, 1, "", "__init__"], [18, 5, 1, "", "_container"], [18, 5, 1, "", "_definition"], [18, 4, 1, "", "_get_path"], [18, 4, 1, "", "_get_root_container"], [18, 4, 1, "", "as_dict"], [18, 6, 1, "", "doc"], [18, 4, 1, "", "help"], [18, 6, 1, "", "info"], [18, 6, 1, "", "name"], [18, 4, 1, "", "save_to_file"], [18, 4, 1, "", "show"], [18, 4, 1, "", "to_dict"]], "ase2sprkkr.common.configuration_containers": [[20, 3, 1, "", "BaseSection"], [21, 3, 1, "", "ConfigurationContainer"], [22, 3, 1, "", "CustomSection"], [23, 3, 1, "", "RootConfigurationContainer"], [24, 3, 1, "", "Section"]], "ase2sprkkr.common.configuration_containers.BaseSection": [[20, 4, 1, "", "__init__"], [20, 4, 1, "", "_save_to_file"], [20, 4, 1, "", "has_any_value"], [20, 4, 1, "", "validate"]], "ase2sprkkr.common.configuration_containers.ConfigurationContainer": [[21, 4, 1, "", "__init__"], [21, 4, 1, "", "_add"], [21, 4, 1, "", "_find_value"], [21, 4, 1, "", "_get_member"], [21, 4, 1, "", "_interactive_member_name"], [21, 5, 1, "", "_interactive_members"], [21, 5, 1, "", "_members"], [21, 4, 1, "", "_save_to_file"], [21, 4, 1, "", "add"], [21, 4, 1, "", "as_dict"], [21, 4, 1, "", "clear"], [21, 4, 1, "", "get"], [21, 4, 1, "", "is_changed"], [21, 4, 1, "", "members"], [21, 4, 1, "", "remove_member"], [21, 4, 1, "", "set"], [21, 4, 1, "", "to_string"], [21, 4, 1, "", "validate"]], "ase2sprkkr.common.configuration_containers.CustomSection": [[22, 4, 1, "", "__init__"], [22, 4, 1, "", "factory"], [22, 4, 1, "", "remove"]], "ase2sprkkr.common.configuration_containers.RootConfigurationContainer": [[23, 4, 1, "", "__init__"], [23, 4, 1, "", "_save_to_file"], [23, 4, 1, "", "find"], [23, 4, 1, "", "read_from_file"]], "ase2sprkkr.common.configuration_containers.Section": [[24, 4, 1, "", "__init__"], [24, 6, 1, "", "definition"]], "ase2sprkkr.common.configuration_definitions": [[26, 3, 1, "", "BaseDefinition"], [27, 3, 1, "", "ConfigurationRootDefinition"], [28, 3, 1, "", "ContainerDefinition"], [29, 3, 1, "", "SectionDefinition"], [30, 3, 1, "", "ValueDefinition"], [31, 1, 1, "", "add_excluded_names_condition"], [32, 1, 1, "", "unique_dict"]], "ase2sprkkr.common.configuration_definitions.BaseDefinition": [[26, 4, 1, "", "__init__"], [26, 5, 1, "", "_copy_excluded_args"], [26, 5, 1, "", "_description"], [26, 5, 1, "", "_description_indentation"], [26, 4, 1, "", "_get_copy_args"], [26, 5, 1, "", "_info"], [26, 4, 1, "", "_tuple_with_my_name"], [26, 5, 1, "", "alternative_names"], [26, 4, 1, "", "can_be_repeated"], [26, 4, 1, "", "create_object"], [26, 4, 1, "", "description"], [26, 5, 1, "", "do_not_skip_whitespaces_before_name"], [26, 4, 1, "", "grammar"], [26, 4, 1, "", "info"], [26, 5, 1, "", "is_hidden"], [26, 5, 1, "", "name"], [26, 5, 1, "", "name_in_grammar"], [26, 5, 1, "", "result_class"]], "ase2sprkkr.common.configuration_definitions.ConfigurationRootDefinition": [[27, 4, 1, "", "__init__"], [27, 4, 1, "", "_grammar"], [27, 4, 1, "", "_tuple_with_my_name"], [27, 5, 1, "", "custom_value_name"], [27, 4, 1, "", "from_dict"], [27, 5, 1, "", "name_in_grammar"], [27, 4, 1, "", "parse_return"], [27, 6, 1, "", "sections"]], "ase2sprkkr.common.configuration_definitions.ContainerDefinition": [[28, 4, 1, "", "__init__"], [28, 4, 1, "", "_dict_from_named_values"], [28, 4, 1, "", "_first_section_is_fixed"], [28, 4, 1, "", "_grammar"], [28, 4, 1, "", "_values_grammar"], [28, 4, 1, "", "additional_data_description"], [28, 4, 1, "", "all_member_names"], [28, 5, 1, "", "configuration_type_name"], [28, 4, 1, "", "copy"], [28, 4, 1, "", "create_object"], [28, 4, 1, "", "custom_member_grammar"], [28, 5, 1, "", "custom_name_characters"], [28, 4, 1, "", "data_description"], [28, 4, 1, "", "delimited_custom_value_grammar"], [28, 5, 1, "", "force_order"], [28, 4, 1, "", "members"], [28, 4, 1, "", "names"], [28, 4, 1, "", "parse"], [28, 4, 1, "", "parse_file"], [28, 4, 1, "", "parse_from_stream"], [28, 4, 1, "", "parse_return"], [28, 4, 1, "", "read_from_file"], [28, 4, 1, "", "remove"], [28, 5, 1, "", "validate"], [28, 5, 1, "", "value_name_format"]], "ase2sprkkr.common.configuration_definitions.SectionDefinition": [[29, 4, 1, "", "__init__"], [29, 4, 1, "", "_generic_info"], [29, 5, 1, "", "custom_value_name"], [29, 4, 1, "", "delimited_custom_value_grammar"], [29, 5, 1, "", "result_class"], [29, 6, 1, "", "values"]], "ase2sprkkr.common.configuration_definitions.ValueDefinition": [[30, 4, 1, "", "__init__"], [30, 4, 1, "", "_generic_info"], [30, 4, 1, "", "_grammar"], [30, 4, 1, "", "additional_data_description"], [30, 4, 1, "", "can_be_repeated"], [30, 4, 1, "", "convert_and_validate"], [30, 4, 1, "", "copy"], [30, 4, 1, "", "data_description"], [30, 6, 1, "", "formated_name"], [30, 4, 1, "", "get_value"], [30, 5, 1, "", "name_in_grammar"], [30, 4, 1, "", "remove"], [30, 5, 1, "", "result_class"], [30, 5, 1, "", "type_from_type_map"], [30, 4, 1, "", "validate"], [30, 6, 1, "", "value_name_format"], [30, 4, 1, "", "write"]], "ase2sprkkr.common.decorators": [[34, 1, 1, "", "add_called_class_as_argument"], [35, 1, 1, "", "add_to_signature"], [36, 1, 1, "", "cache"], [37, 3, 1, "", "cached_class_property"], [38, 3, 1, "", "cached_property"], [39, 3, 1, "", "class_property"]], "ase2sprkkr.common.decorators.cached_class_property": [[37, 4, 1, "", "__init__"]], "ase2sprkkr.common.decorators.class_property": [[39, 4, 1, "", "__init__"]], "ase2sprkkr.common.doc": [[41, 1, 1, "", "process_input_parameters_definition"], [42, 1, 1, "", "verbatim"]], "ase2sprkkr.common.formats": [[44, 1, 1, "", "fortran_format"]], "ase2sprkkr.common.grammar": [[46, 3, 1, "", "White"], [47, 1, 1, "", "addConditionEx"], [48, 1, 1, "", "addParseActionEx"], [49, 1, 1, "", "delimitedList"], [50, 2, 1, "", "end_of_file"], [51, 1, 1, "", "generate_grammar"], [52, 2, 1, "", "line_end"], [53, 2, 1, "", "optional_line_end"], [54, 2, 1, "", "optional_quote"], [55, 1, 1, "", "replace_whitechars"], [56, 2, 1, "", "separator"], [57, 2, 1, "", "separator_pattern"]], "ase2sprkkr.common.grammar.White": [[46, 4, 1, "", "__init__"], [46, 5, 1, "", "_abc_impl"]], "ase2sprkkr.common.grammar_types": [[59, 3, 1, "", "Array"], [60, 3, 1, "", "BaseMixed"], [61, 3, 1, "", "BaseRealWithUnits"], [62, 3, 1, "", "BaseString"], [63, 3, 1, "", "Bool"], [64, 3, 1, "", "Complex"], [65, 3, 1, "", "Date"], [66, 1, 1, "", "DefKeyword"], [67, 3, 1, "", "Energy"], [68, 3, 1, "", "Flag"], [69, 3, 1, "", "GrammarType"], [70, 3, 1, "", "Integer"], [71, 3, 1, "", "Keyword"], [72, 3, 1, "", "LineString"], [73, 3, 1, "", "Mixed"], [74, 3, 1, "", "Number"], [75, 3, 1, "", "ObjectNumber"], [76, 3, 1, "", "PotMixed"], [77, 3, 1, "", "QString"], [78, 3, 1, "", "Range"], [79, 3, 1, "", "Real"], [80, 3, 1, "", "RealWithUnits"], [81, 3, 1, "", "Separator"], [82, 3, 1, "", "Sequence"], [83, 3, 1, "", "SetOf"], [84, 3, 1, "", "String"], [85, 3, 1, "", "Table"], [86, 3, 1, "", "TypedGrammarType"], [87, 3, 1, "", "Unsigned"], [88, 2, 1, "", "boolean"], [89, 1, 1, "", "compare_numpy_values"], [90, 2, 1, "", "complex_number"], [91, 2, 1, "", "date"], [92, 2, 1, "", "energy"], [93, 2, 1, "", "flag"], [94, 1, 1, "", "format_for_type"], [95, 2, 1, "", "integer"], [96, 2, 1, "", "line_string"], [97, 2, 1, "", "mixed"], [98, 2, 1, "", "pot_mixed"], [99, 2, 1, "", "qstring"], [100, 2, 1, "", "real"], [101, 2, 1, "", "recognized_set_types"], [102, 2, 1, "", "separator"], [103, 2, 1, "", "set_of_integers"], [104, 2, 1, "", "set_of_reals"], [105, 2, 1, "", "string"], [106, 1, 1, "", "type_from_default_value"], [107, 2, 1, "", "type_from_set_map"], [108, 1, 1, "", "type_from_type"], [109, 2, 1, "", "type_from_type_map"], [110, 1, 1, "", "type_from_value"], [111, 2, 1, "", "unsigned"]], "ase2sprkkr.common.grammar_types.Array": [[59, 4, 1, "", "__init__"], [59, 4, 1, "", "_set_convert_action"], [59, 4, 1, "", "_string"], [59, 4, 1, "", "_validate"], [59, 4, 1, "", "convert"], [59, 5, 1, "", "delimiter"], [59, 5, 1, "", "delimiter_str"], [59, 4, 1, "", "grammar_name"], [59, 4, 1, "", "is_the_same_value"]], "ase2sprkkr.common.grammar_types.BaseMixed": [[60, 4, 1, "", "__init__"], [60, 4, 1, "", "_grammar"], [60, 4, 1, "", "_validate"], [60, 4, 1, "", "convert"], [60, 4, 1, "", "get_type"], [60, 4, 1, "", "grammar_name"], [60, 5, 1, "", "string_type"], [60, 5, 1, "", "type"]], "ase2sprkkr.common.grammar_types.BaseRealWithUnits": [[61, 4, 1, "", "__init__"], [61, 4, 1, "", "_grammar"], [61, 4, 1, "", "_grammar_units"], [61, 4, 1, "", "_validate"], [61, 5, 1, "", "datatype_name"], [61, 5, 1, "", "grammar_cache"], [61, 4, 1, "", "grammar_name"], [61, 5, 1, "", "numpy_type"]], "ase2sprkkr.common.grammar_types.BaseString": [[62, 4, 1, "", "__init__"], [62, 4, 1, "", "_validate"], [62, 5, 1, "", "allowed_types"], [62, 5, 1, "", "datatype"], [62, 5, 1, "", "datatype_name"]], "ase2sprkkr.common.grammar_types.Bool": [[63, 5, 1, "", "I"], [63, 4, 1, "", "__init__"], [63, 5, 1, "", "_grammar"], [63, 4, 1, "", "_string"], [63, 5, 1, "", "allowed_types"], [63, 5, 1, "", "datatype"], [63, 5, 1, "", "datatype_name"], [63, 4, 1, "", "grammar_name"], [63, 5, 1, "", "numpy_type"], [63, 5, 1, "", "type_name"]], "ase2sprkkr.common.grammar_types.Complex": [[64, 5, 1, "", "I"], [64, 4, 1, "", "__init__"], [64, 4, 1, "", "_grammar_name"], [64, 4, 1, "", "_string"], [64, 4, 1, "", "_validate"], [64, 4, 1, "", "convert"]], "ase2sprkkr.common.grammar_types.Date": [[65, 5, 1, "", "I"], [65, 4, 1, "", "__init__"], [65, 5, 1, "", "_grammar"], [65, 4, 1, "", "_string"], [65, 5, 1, "", "allowed_types"], [65, 5, 1, "", "datatype"], [65, 5, 1, "", "datatype_name"], [65, 4, 1, "", "grammar_name"], [65, 5, 1, "", "numpy_type"], [65, 5, 1, "", "type_name"]], "ase2sprkkr.common.grammar_types.Energy": [[67, 5, 1, "", "I"], [67, 4, 1, "", "__init__"], [67, 5, 1, "", "datatype"], [67, 5, 1, "", "units"]], "ase2sprkkr.common.grammar_types.Flag": [[68, 5, 1, "", "I"], [68, 4, 1, "", "__init__"], [68, 5, 1, "", "_grammar"], [68, 4, 1, "", "_validate"], [68, 5, 1, "", "allowed_types"], [68, 5, 1, "", "datatype"], [68, 5, 1, "", "datatype_name"], [68, 4, 1, "", "grammar_name"], [68, 4, 1, "", "missing_value"], [68, 5, 1, "", "numpy_type"], [68, 4, 1, "", "str"]], "ase2sprkkr.common.grammar_types.GrammarType": [[69, 4, 1, "", "__init__"], [69, 4, 1, "", "_string"], [69, 4, 1, "", "_validate"], [69, 4, 1, "", "_valueError"], [69, 4, 1, "", "additional_description"], [69, 4, 1, "", "convert"], [69, 4, 1, "", "copy"], [69, 5, 1, "", "default_value"], [69, 4, 1, "", "enrich"], [69, 5, 1, "", "format"], [69, 4, 1, "", "grammar"], [69, 4, 1, "", "grammar_name"], [69, 5, 1, "", "has_value"], [69, 4, 1, "", "is_the_same_value"], [69, 4, 1, "", "missing_value"], [69, 5, 1, "", "name_in_grammar"], [69, 5, 1, "", "numpy_type"], [69, 4, 1, "", "parse"], [69, 4, 1, "", "parse_from_stream"], [69, 5, 1, "", "postfix"], [69, 5, 1, "", "prefix"], [69, 4, 1, "", "print"], [69, 4, 1, "", "read"], [69, 4, 1, "", "string"], [69, 4, 1, "", "transform_grammar"], [69, 4, 1, "", "type_validation"], [69, 4, 1, "", "validate"], [69, 4, 1, "", "write"]], "ase2sprkkr.common.grammar_types.Integer": [[70, 5, 1, "", "I"], [70, 4, 1, "", "__init__"], [70, 5, 1, "", "_grammar"], [70, 5, 1, "", "allowed_types"], [70, 5, 1, "", "datatype"], [70, 5, 1, "", "datatype_name"], [70, 4, 1, "", "grammar_name"], [70, 5, 1, "", "numpy_type"]], "ase2sprkkr.common.grammar_types.Keyword": [[71, 4, 1, "", "__init__"], [71, 4, 1, "", "_validate"], [71, 4, 1, "", "additional_description"], [71, 4, 1, "", "convert"], [71, 4, 1, "", "grammar_name"]], "ase2sprkkr.common.grammar_types.LineString": [[72, 5, 1, "", "I"], [72, 4, 1, "", "__init__"], [72, 5, 1, "", "_grammar"], [72, 5, 1, "", "allowed_types"], [72, 4, 1, "", "grammar_name"]], "ase2sprkkr.common.grammar_types.Mixed": [[73, 5, 1, "", "I"], [73, 4, 1, "", "__init__"], [73, 4, 1, "", "_initialize"], [73, 4, 1, "", "is_the_same_value"], [73, 4, 1, "", "missing_value"], [73, 5, 1, "", "string_type"], [73, 5, 1, "", "types"]], "ase2sprkkr.common.grammar_types.Number": [[74, 4, 1, "", "__init__"], [74, 4, 1, "", "_validate"], [74, 5, 1, "", "allowed_types"], [74, 5, 1, "", "datatype"], [74, 5, 1, "", "datatype_name"]], "ase2sprkkr.common.grammar_types.ObjectNumber": [[75, 4, 1, "", "__init__"], [75, 4, 1, "", "_validate"], [75, 4, 1, "", "convert"]], "ase2sprkkr.common.grammar_types.PotMixed": [[76, 5, 1, "", "I"], [76, 4, 1, "", "__init__"], [76, 4, 1, "", "_initialize"], [76, 4, 1, "", "_string"], [76, 4, 1, "", "is_the_same_value"], [76, 5, 1, "", "string_type"], [76, 5, 1, "", "types"]], "ase2sprkkr.common.grammar_types.QString": [[77, 5, 1, "", "I"], [77, 4, 1, "", "__init__"], [77, 5, 1, "", "_grammar"], [77, 4, 1, "", "grammar_name"]], "ase2sprkkr.common.grammar_types.Range": [[78, 4, 1, "", "__init__"], [78, 4, 1, "", "get_type"], [78, 6, 1, "", "types"]], "ase2sprkkr.common.grammar_types.Real": [[79, 5, 1, "", "I"], [79, 4, 1, "", "__init__"], [79, 5, 1, "", "_grammar"], [79, 5, 1, "", "allowed_types"], [79, 5, 1, "", "datatype"], [79, 4, 1, "", "grammar_name"], [79, 5, 1, "", "numpy_type"]], "ase2sprkkr.common.grammar_types.RealWithUnits": [[80, 4, 1, "", "__init__"]], "ase2sprkkr.common.grammar_types.Separator": [[81, 5, 1, "", "I"], [81, 4, 1, "", "__init__"], [81, 5, 1, "", "_grammar"], [81, 4, 1, "", "_grammar_name"], [81, 4, 1, "", "_string"], [81, 4, 1, "", "_validate"], [81, 5, 1, "", "has_value"]], "ase2sprkkr.common.grammar_types.Sequence": [[82, 4, 1, "", "__init__"], [82, 4, 1, "", "_grammar"], [82, 4, 1, "", "_string"], [82, 4, 1, "", "_validate"], [82, 4, 1, "", "convert"], [82, 4, 1, "", "enrich"], [82, 4, 1, "", "grammar_name"], [82, 4, 1, "", "is_the_same_value"]], "ase2sprkkr.common.grammar_types.SetOf": [[83, 4, 1, "", "__init__"], [83, 5, 1, "", "delimiter"], [83, 5, 1, "", "delimiter_str"], [83, 4, 1, "", "transform_grammar"]], "ase2sprkkr.common.grammar_types.String": [[84, 5, 1, "", "I"], [84, 4, 1, "", "__init__"], [84, 5, 1, "", "_grammar"], [84, 4, 1, "", "grammar_name"]], "ase2sprkkr.common.grammar_types.Table": [[85, 4, 1, "", "__init__"], [85, 4, 1, "", "_grammar"], [85, 4, 1, "", "_string"], [85, 4, 1, "", "_validate"], [85, 4, 1, "", "convert"], [85, 4, 1, "", "grammar_name"], [85, 4, 1, "", "is_the_same_value"], [85, 5, 1, "", "name_in_grammar"], [85, 4, 1, "", "number_of_collumns"], [85, 6, 1, "", "numpy_type"], [85, 4, 1, "", "zero_data"]], "ase2sprkkr.common.grammar_types.TypedGrammarType": [[86, 4, 1, "", "__init__"], [86, 4, 1, "", "_validate"], [86, 5, 1, "", "allowed_types"], [86, 4, 1, "", "convert"], [86, 5, 1, "", "datatype"], [86, 5, 1, "", "datatype_name"]], "ase2sprkkr.common.grammar_types.Unsigned": [[87, 5, 1, "", "I"], [87, 4, 1, "", "__init__"], [87, 5, 1, "", "_grammar"], [87, 4, 1, "", "_validate"], [87, 5, 1, "", "datatype_name"], [87, 4, 1, "", "grammar_name"], [87, 5, 1, "", "numpy_type"]], "ase2sprkkr.common.init_tests.TestCase": [[113, 4, 1, "", "__init__"], [113, 4, 1, "", "assertAsyncEqual"], [113, 4, 1, "", "assertAsyncRaises"], [113, 4, 1, "", "runAsync"], [113, 4, 1, "", "setUp"]], "ase2sprkkr.common.init_tests": [[114, 1, 1, "", "patch_package"]], "ase2sprkkr.common.misc": [[116, 3, 1, "", "OrderedDict"], [117, 1, 1, "", "as_integer"], [118, 1, 1, "", "copy_list"], [119, 1, 1, "", "njit"], [120, 1, 1, "", "numpy_index"]], "ase2sprkkr.common.misc.OrderedDict": [[116, 4, 1, "", "__init__"], [116, 4, 1, "", "first_item"], [116, 4, 1, "", "index"]], "ase2sprkkr.common.no_output": [[122, 3, 1, "", "NoOutput"]], "ase2sprkkr.common.no_output.NoOutput": [[122, 4, 1, "", "__init__"]], "ase2sprkkr.common.options": [[124, 3, 1, "", "CustomOption"], [125, 3, 1, "", "DangerousValue"], [126, 3, 1, "", "Option"]], "ase2sprkkr.common.options.CustomOption": [[124, 4, 1, "", "__init__"], [124, 4, 1, "", "factory"], [124, 4, 1, "", "remove"]], "ase2sprkkr.common.options.DangerousValue": [[125, 4, 1, "", "__init__"], [125, 4, 1, "", "write_value"]], "ase2sprkkr.common.options.Option": [[126, 4, 1, "", "__init__"], [126, 4, 1, "", "_check_array_access"], [126, 4, 1, "", "_find_value"], [126, 4, 1, "", "_getitem"], [126, 4, 1, "", "_pack_value"], [126, 4, 1, "", "_post_set"], [126, 4, 1, "", "_save_to_file"], [126, 4, 1, "", "_set_item"], [126, 4, 1, "", "_unpack_value"], [126, 4, 1, "", "as_dict"], [126, 4, 1, "", "clear"], [126, 6, 1, "", "default_value"], [126, 4, 1, "", "get"], [126, 4, 1, "", "get_path"], [126, 4, 1, "", "is_changed"], [126, 4, 1, "", "is_dangerous"], [126, 4, 1, "", "is_it_the_default_value"], [126, 6, 1, "", "name"], [126, 6, 1, "", "result"], [126, 4, 1, "", "set"], [126, 4, 1, "", "set_dangerous"], [126, 4, 1, "", "validate"], [126, 4, 1, "", "value_and_changed"]], "ase2sprkkr.common.process_output_reader": [[128, 3, 1, "", "AsyncioFileReader"], [129, 3, 1, "", "BaseProcessOutputReader"]], "ase2sprkkr.common.process_output_reader.AsyncioFileReader": [[128, 4, 1, "", "__init__"], [128, 4, 1, "", "close"], [128, 4, 1, "", "readline"], [128, 4, 1, "", "readuntil"], [128, 4, 1, "", "separator_shifts"]], "ase2sprkkr.common.process_output_reader.BaseProcessOutputReader": [[129, 4, 1, "", "__init__"], [129, 4, 1, "", "read_error"], [129, 4, 1, "", "read_from_file"], [129, 4, 1, "", "read_output"], [129, 4, 1, "", "result"], [129, 4, 1, "", "run"], [129, 4, 1, "", "run_subprocess"]], "ase2sprkkr.common.test": [[131, 0, 0, "-", "init_tests"], [133, 0, 0, "-", "test_common"], [135, 0, 0, "-", "test_grammar_types"]], "ase2sprkkr.common.test.init_tests": [[132, 3, 1, "", "TestCase"]], "ase2sprkkr.common.test.init_tests.TestCase": [[132, 4, 1, "", "__init__"], [132, 4, 1, "", "assertAsyncEqual"], [132, 4, 1, "", "assertAsyncRaises"], [132, 4, 1, "", "runAsync"], [132, 4, 1, "", "setUp"]], "ase2sprkkr.common.test.test_common": [[134, 3, 1, "", "CommonTest"]], "ase2sprkkr.common.test.test_common.CommonTest": [[134, 4, 1, "", "__init__"], [134, 4, 1, "", "test_asyncio_file_reader"], [134, 4, 1, "", "test_common"]], "ase2sprkkr.common.test.test_grammar_types": [[136, 3, 1, "", "GrammarTest"]], "ase2sprkkr.common.test.test_grammar_types.GrammarTest": [[136, 4, 1, "", "__init__"], [136, 4, 1, "", "_test_types"], [136, 4, 1, "", "test_is_the_same_value"], [136, 4, 1, "", "test_types"]], "ase2sprkkr.common.unique_values": [[138, 3, 1, "", "UniqueValuesMapping"]], "ase2sprkkr.common.unique_values.UniqueValuesMapping": [[138, 4, 1, "", "__init__"], [138, 4, 1, "", "from_values"], [138, 4, 1, "", "indexes"], [138, 4, 1, "", "iter_unique"], [138, 4, 1, "", "len_of_unique"], [138, 5, 1, "", "mapping"], [138, 4, 1, "", "merge"], [138, 5, 1, "", "value_to_class_id"]], "ase2sprkkr.input_parameters": [[140, 0, 0, "-", "definitions"], [159, 0, 0, "-", "input_parameters"], [162, 0, 0, "-", "input_parameters_definitions"], [166, 0, 0, "-", "test"]], "ase2sprkkr.input_parameters.definitions": [[141, 0, 0, "-", "arpes"], [143, 0, 0, "-", "dos"], [145, 0, 0, "-", "phagen"], [147, 0, 0, "-", "scf"], [149, 0, 0, "-", "sections"]], "ase2sprkkr.input_parameters.definitions.arpes": [[142, 2, 1, "", "input_parameters"]], "ase2sprkkr.input_parameters.definitions.dos": [[144, 2, 1, "", "input_parameters"]], "ase2sprkkr.input_parameters.definitions.phagen": [[146, 2, 1, "", "input_parameters"]], "ase2sprkkr.input_parameters.definitions.scf": [[148, 2, 1, "", "input_parameters"]], "ase2sprkkr.input_parameters.definitions.sections": [[150, 1, 1, "", "CONTROL"], [151, 2, 1, "", "CPA"], [152, 2, 1, "", "ENERGY"], [153, 2, 1, "", "MODE"], [154, 2, 1, "", "SCF"], [155, 2, 1, "", "SITES"], [156, 2, 1, "", "STRCONST"], [157, 1, 1, "", "TASK"], [158, 2, 1, "", "TAU"]], "ase2sprkkr.input_parameters.input_parameters": [[160, 3, 1, "", "InputParameters"], [161, 1, 1, "", "resolve_executable_postfix"]], "ase2sprkkr.input_parameters.input_parameters.InputParameters": [[160, 4, 1, "", "__init__"], [160, 5, 1, "", "_default_mpi_runner"], [160, 4, 1, "", "calculate"], [160, 4, 1, "", "create"], [160, 4, 1, "", "create_input_parameters"], [160, 4, 1, "", "default_mpi_runner"], [160, 4, 1, "", "default_parameters"], [160, 5, 1, "", "definitions"], [160, 4, 1, "", "executable_params"], [160, 4, 1, "", "from_file"], [160, 4, 1, "", "is_it_a_input_parameters_name"], [160, 4, 1, "", "is_mpi"], [160, 4, 1, "", "mpi_runner"], [160, 4, 1, "", "read_output_from_file"], [160, 4, 1, "", "result_reader"], [160, 4, 1, "", "run_process"], [160, 4, 1, "", "set_option"], [160, 6, 1, "", "task_name"]], "ase2sprkkr.input_parameters.input_parameters_definitions": [[163, 3, 1, "", "InputParametersDefinition"], [164, 3, 1, "", "InputSectionDefinition"], [165, 3, 1, "", "InputValueDefinition"]], "ase2sprkkr.input_parameters.input_parameters_definitions.InputParametersDefinition": [[163, 4, 1, "", "__init__"], [163, 4, 1, "", "_generic_info"], [163, 5, 1, "", "child_class"], [163, 5, 1, "", "configuration_type_name"], [163, 4, 1, "", "custom_class"], [163, 4, 1, "", "custom_value_grammar"], [163, 5, 1, "", "delimiter"], [163, 5, 1, "", "grammar_of_delimiter"], [163, 5, 1, "", "result_class"]], "ase2sprkkr.input_parameters.input_parameters_definitions.InputSectionDefinition": [[164, 4, 1, "", "__init__"], [164, 5, 1, "", "_copy_args"], [164, 5, 1, "", "child_class"], [164, 4, 1, "", "custom_class"], [164, 5, 1, "", "delimiter"], [164, 5, 1, "", "do_not_skip_whitespaces_before_name"], [164, 5, 1, "", "grammar_of_delimiter"]], "ase2sprkkr.input_parameters.input_parameters_definitions.InputValueDefinition": [[165, 4, 1, "", "__init__"], [165, 5, 1, "", "_copy_args"], [165, 5, 1, "", "grammar_of_delimiter"], [165, 5, 1, "", "name_value_delimiter"], [165, 5, 1, "", "prefix"], [165, 5, 1, "", "type_from_type_map"], [165, 5, 1, "", "type_of_dangerous"]], "ase2sprkkr.input_parameters.test": [[167, 0, 0, "-", "init_tests"], [169, 0, 0, "-", "test_definitions"], [171, 0, 0, "-", "test_input_parameters"]], "ase2sprkkr.input_parameters.test.init_tests": [[168, 3, 1, "", "TestCase"]], "ase2sprkkr.input_parameters.test.init_tests.TestCase": [[168, 4, 1, "", "__init__"], [168, 4, 1, "", "assertAsyncEqual"], [168, 4, 1, "", "assertAsyncRaises"], [168, 4, 1, "", "runAsync"], [168, 4, 1, "", "setUp"]], "ase2sprkkr.input_parameters.test.test_definitions": [[170, 3, 1, "", "TestDefinitions"]], "ase2sprkkr.input_parameters.test.test_definitions.TestDefinitions": [[170, 4, 1, "", "__init__"], [170, 4, 1, "", "test_definitions"]], "ase2sprkkr.input_parameters.test.test_input_parameters": [[172, 3, 1, "", "TestInputParameters"]], "ase2sprkkr.input_parameters.test.test_input_parameters.TestInputParameters": [[172, 4, 1, "", "__init__"], [172, 4, 1, "", "test_custom_value"], [172, 4, 1, "", "test_dangerous_value"], [172, 4, 1, "", "test_input_parameters_definition"], [172, 4, 1, "", "test_section_delimiter_value"]], "ase2sprkkr.outputs": [[174, 0, 0, "-", "output_definitions"], [179, 0, 0, "-", "readers"], [186, 0, 0, "-", "task_result"], [189, 0, 0, "-", "test"]], "ase2sprkkr.outputs.output_definitions": [[175, 3, 1, "", "OutputNonameValueDefinition"], [176, 3, 1, "", "OutputSectionDefinition"], [177, 3, 1, "", "OutputValueDefinition"], [178, 3, 1, "", "OutputValueEqualDefinition"]], "ase2sprkkr.outputs.output_definitions.OutputNonameValueDefinition": [[175, 4, 1, "", "__init__"], [175, 5, 1, "", "name_in_grammar"]], "ase2sprkkr.outputs.output_definitions.OutputSectionDefinition": [[176, 4, 1, "", "__init__"], [176, 5, 1, "", "child_class"], [176, 5, 1, "", "custom_class"], [176, 5, 1, "", "delimiter"], [176, 5, 1, "", "force_order"], [176, 5, 1, "", "grammar_of_delimiter"], [176, 5, 1, "", "name_in_grammar"]], "ase2sprkkr.outputs.output_definitions.OutputValueDefinition": [[177, 4, 1, "", "__init__"], [177, 5, 1, "", "grammar_of_delimiter"], [177, 5, 1, "", "prefix"]], "ase2sprkkr.outputs.output_definitions.OutputValueEqualDefinition": [[178, 4, 1, "", "__init__"], [178, 5, 1, "", "grammar_of_delimiter"], [178, 5, 1, "", "name_value_delimiter"]], "ase2sprkkr.outputs.readers": [[180, 0, 0, "-", "default"], [183, 0, 0, "-", "scf"]], "ase2sprkkr.outputs.readers.default": [[181, 3, 1, "", "DefaultOutputReader"], [182, 3, 1, "", "DefaultResult"]], "ase2sprkkr.outputs.readers.default.DefaultOutputReader": [[181, 4, 1, "", "__init__"], [181, 4, 1, "", "read_output"], [181, 5, 1, "", "result_class"]], "ase2sprkkr.outputs.readers.default.DefaultResult": [[182, 4, 1, "", "__init__"]], "ase2sprkkr.outputs.readers.scf": [[184, 3, 1, "", "ScfOutputReader"], [185, 3, 1, "", "ScfResult"]], "ase2sprkkr.outputs.readers.scf.ScfOutputReader": [[184, 4, 1, "", "__init__"], [184, 5, 1, "", "atoms_conf_type"], [184, 4, 1, "", "read_output"], [184, 5, 1, "", "result_class"]], "ase2sprkkr.outputs.readers.scf.ScfResult": [[185, 4, 1, "", "__init__"], [185, 6, 1, "", "calculator"], [185, 6, 1, "", "converged"], [185, 6, 1, "", "energy"], [185, 4, 1, "", "iteration_values"], [185, 6, 1, "", "iterations"], [185, 6, 1, "", "last_iteration"], [185, 4, 1, "", "plot"], [185, 6, 1, "", "potential"], [185, 6, 1, "", "potential_filename"]], "ase2sprkkr.outputs.task_result": [[187, 3, 1, "", "OutputReader"], [188, 3, 1, "", "TaskResult"]], "ase2sprkkr.outputs.task_result.OutputReader": [[187, 4, 1, "", "__init__"], [187, 5, 1, "", "calculator"], [187, 5, 1, "", "directory"], [187, 5, 1, "", "input_parameters"], [187, 4, 1, "", "result"]], "ase2sprkkr.outputs.task_result.TaskResult": [[188, 4, 1, "", "__init__"], [188, 6, 1, "", "atoms"]], "ase2sprkkr.outputs.test": [[190, 0, 0, "-", "init_tests"], [192, 0, 0, "-", "test_output"]], "ase2sprkkr.outputs.test.init_tests": [[191, 3, 1, "", "TestCase"]], "ase2sprkkr.outputs.test.init_tests.TestCase": [[191, 4, 1, "", "__init__"], [191, 4, 1, "", "assertAsyncEqual"], [191, 4, 1, "", "assertAsyncRaises"], [191, 4, 1, "", "runAsync"], [191, 4, 1, "", "setUp"]], "ase2sprkkr.outputs.test.test_output": [[193, 3, 1, "", "TestOutput"]], "ase2sprkkr.outputs.test.test_output.TestOutput": [[193, 4, 1, "", "__init__"], [193, 4, 1, "", "test_output"]], "ase2sprkkr.physics": [[195, 0, 0, "-", "lattice_data"], [197, 0, 0, "-", "winger_seitz_radii"]], "ase2sprkkr.physics.lattice_data": [[196, 3, 1, "", "LatticeData"]], "ase2sprkkr.physics.lattice_data.LatticeData": [[196, 4, 1, "", "__init__"], [196, 4, 1, "", "bravais_number_from_pearson_symbol"], [196, 5, 1, "", "cell_symmetries"], [196, 5, 1, "", "international_numbers_to_AP"], [196, 5, 1, "", "symmetries"]], "ase2sprkkr.physics.winger_seitz_radii": [[198, 2, 1, "", "winger_seitz_radii"]], "ase2sprkkr.potentials": [[200, 0, 0, "-", "custom_potential_section"], [205, 0, 0, "-", "definitions"], [238, 0, 0, "-", "potential_definitions"], [244, 0, 0, "-", "potential_sections"], [248, 0, 0, "-", "potentials"], [250, 0, 0, "-", "test"]], "ase2sprkkr.potentials.custom_potential_section": [[201, 3, 1, "", "CustomPotentialSection"], [202, 3, 1, "", "CustomPotentialSectionDefinition"], [203, 3, 1, "", "CustomSectionToken"], [204, 3, 1, "", "SectionString"]], "ase2sprkkr.potentials.custom_potential_section.CustomPotentialSection": [[201, 4, 1, "", "__init__"], [201, 4, 1, "", "_depends_on"], [201, 4, 1, "", "_set_from_atoms"], [201, 4, 1, "", "_update_atoms"], [201, 4, 1, "", "reset"]], "ase2sprkkr.potentials.custom_potential_section.CustomPotentialSectionDefinition": [[202, 4, 1, "", "__init__"], [202, 5, 1, "", "mandatory"], [202, 5, 1, "", "name_value_delimiter"], [202, 5, 1, "", "prefix"]], "ase2sprkkr.potentials.custom_potential_section.CustomSectionToken": [[203, 4, 1, "", "__init__"], [203, 5, 1, "", "_abc_impl"], [203, 5, 1, "", "name"], [203, 4, 1, "", "parseImpl"], [203, 5, 1, "", "pattern"]], "ase2sprkkr.potentials.custom_potential_section.SectionString": [[204, 5, 1, "", "I"], [204, 4, 1, "", "__init__"], [204, 5, 1, "", "_grammar"], [204, 5, 1, "", "delimiter_pattern"], [204, 4, 1, "", "grammar_name"], [204, 5, 1, "", "grammar_of_delimiter"], [204, 4, 1, "", "write"]], "ase2sprkkr.potentials.definitions": [[206, 0, 0, "-", "potential"], [208, 0, 0, "-", "sections"]], "ase2sprkkr.potentials.definitions.potential": [[207, 2, 1, "", "potential_definition"]], "ase2sprkkr.potentials.definitions.sections": [[209, 1, 1, "", "_sections"], [210, 0, 0, "-", "global_system_parameter"], [214, 0, 0, "-", "lattice"], [218, 0, 0, "-", "mesh_information"], [222, 0, 0, "-", "occupation"], [226, 0, 0, "-", "reference_system"], [230, 0, 0, "-", "sites"], [234, 0, 0, "-", "types"]], "ase2sprkkr.potentials.definitions.sections.global_system_parameter": [[211, 3, 1, "", "GlobalSystemParameter"], [212, 3, 1, "", "GlobalSystemParameterDefinition"], [213, 5, 1, "", "section"]], "ase2sprkkr.potentials.definitions.sections.global_system_parameter.GlobalSystemParameter": [[211, 4, 1, "", "__init__"], [211, 4, 1, "", "_set_from_atoms"]], "ase2sprkkr.potentials.definitions.sections.global_system_parameter.GlobalSystemParameterDefinition": [[212, 4, 1, "", "__init__"], [212, 5, 1, "", "result_class"]], "ase2sprkkr.potentials.definitions.sections.lattice": [[215, 3, 1, "", "LatticeSection"], [216, 3, 1, "", "LatticeSectionDefinition"], [217, 5, 1, "", "section"]], "ase2sprkkr.potentials.definitions.sections.lattice.LatticeSection": [[215, 4, 1, "", "__init__"], [215, 4, 1, "", "_set_from_atoms"], [215, 4, 1, "", "_update_atoms"]], "ase2sprkkr.potentials.definitions.sections.lattice.LatticeSectionDefinition": [[216, 4, 1, "", "__init__"], [216, 5, 1, "", "result_class"]], "ase2sprkkr.potentials.definitions.sections.mesh_information": [[219, 3, 1, "", "MeshInformationSection"], [220, 3, 1, "", "MeshInformationSectionDefinition"], [221, 5, 1, "", "section"]], "ase2sprkkr.potentials.definitions.sections.mesh_information.MeshInformationSection": [[219, 4, 1, "", "__init__"], [219, 5, 1, "", "_value_class"], [219, 5, 1, "", "_value_name"]], "ase2sprkkr.potentials.definitions.sections.mesh_information.MeshInformationSectionDefinition": [[220, 4, 1, "", "__init__"], [220, 5, 1, "", "result_class"]], "ase2sprkkr.potentials.definitions.sections.occupation": [[223, 3, 1, "", "OccupationSection"], [224, 3, 1, "", "OccupationSectionDefinition"], [225, 5, 1, "", "section"]], "ase2sprkkr.potentials.definitions.sections.occupation.OccupationSection": [[223, 4, 1, "", "__init__"], [223, 4, 1, "", "_set_from_atoms"], [223, 4, 1, "", "_update_atoms"]], "ase2sprkkr.potentials.definitions.sections.occupation.OccupationSectionDefinition": [[224, 4, 1, "", "__init__"], [224, 4, 1, "", "depends_on"], [224, 5, 1, "", "result_class"]], "ase2sprkkr.potentials.definitions.sections.reference_system": [[227, 3, 1, "", "ReferenceSystemSection"], [228, 3, 1, "", "ReferenceSystemSectionDefinition"], [229, 5, 1, "", "section"]], "ase2sprkkr.potentials.definitions.sections.reference_system.ReferenceSystemSection": [[227, 4, 1, "", "__init__"], [227, 4, 1, "", "_set_from_atoms"], [227, 5, 1, "", "_value_class"], [227, 5, 1, "", "_value_name"]], "ase2sprkkr.potentials.definitions.sections.reference_system.ReferenceSystemSectionDefinition": [[228, 4, 1, "", "__init__"], [228, 5, 1, "", "result_class"], [228, 4, 1, "", "validate"]], "ase2sprkkr.potentials.definitions.sections.sites": [[231, 3, 1, "", "SitesSection"], [232, 3, 1, "", "SitesSectionDefinition"], [233, 5, 1, "", "section"]], "ase2sprkkr.potentials.definitions.sections.sites.SitesSection": [[231, 4, 1, "", "__init__"], [231, 4, 1, "", "_set_from_atoms"], [231, 4, 1, "", "_update_atoms"]], "ase2sprkkr.potentials.definitions.sections.sites.SitesSectionDefinition": [[232, 4, 1, "", "__init__"], [232, 5, 1, "", "result_class"]], "ase2sprkkr.potentials.definitions.sections.types": [[235, 3, 1, "", "TypesSection"], [236, 3, 1, "", "TypesSectionDefinition"], [237, 5, 1, "", "section"]], "ase2sprkkr.potentials.definitions.sections.types.TypesSection": [[235, 4, 1, "", "__init__"], [235, 5, 1, "", "_value_class"], [235, 5, 1, "", "_value_name"]], "ase2sprkkr.potentials.definitions.sections.types.TypesSectionDefinition": [[236, 4, 1, "", "__init__"], [236, 5, 1, "", "result_class"]], "ase2sprkkr.potentials.potential_definitions": [[239, 3, 1, "", "ASEArraySectionDefinition"], [240, 3, 1, "", "PotSectionDefinition"], [241, 3, 1, "", "PotValueDefinition"], [242, 3, 1, "", "PotentialDefinition"], [243, 3, 1, "", "Separator"]], "ase2sprkkr.potentials.potential_definitions.ASEArraySectionDefinition": [[239, 4, 1, "", "__init__"], [239, 4, 1, "", "depends_on"], [239, 5, 1, "", "result_class"]], "ase2sprkkr.potentials.potential_definitions.PotSectionDefinition": [[240, 4, 1, "", "__init__"], [240, 5, 1, "", "child_class"], [240, 4, 1, "", "custom_class"], [240, 5, 1, "", "delimiter"], [240, 4, 1, "", "depends_on"], [240, 5, 1, "", "force_order"], [240, 4, 1, "", "grammar_of_delimiter"], [240, 5, 1, "", "result_class"], [240, 5, 1, "", "value_name_format"]], "ase2sprkkr.potentials.potential_definitions.PotValueDefinition": [[241, 4, 1, "", "__init__"], [241, 5, 1, "", "grammar_of_delimiter"], [241, 5, 1, "", "name_value_delimiter"], [241, 5, 1, "", "prefix"], [241, 5, 1, "", "type_of_dangerous"]], "ase2sprkkr.potentials.potential_definitions.PotentialDefinition": [[242, 4, 1, "", "__init__"], [242, 4, 1, "", "_generic_info"], [242, 5, 1, "", "child_class"], [242, 5, 1, "", "configuration_type_name"], [242, 5, 1, "", "custom_class"], [242, 5, 1, "", "custom_name_characters"], [242, 4, 1, "", "custom_value_grammar"], [242, 5, 1, "", "delimiter"], [242, 5, 1, "", "force_order"], [242, 5, 1, "", "grammar_of_delimiter"], [242, 5, 1, "", "result_class"]], "ase2sprkkr.potentials.potential_definitions.Separator": [[243, 4, 1, "", "__init__"], [243, 5, 1, "", "_counter"]], "ase2sprkkr.potentials.potential_sections": [[245, 3, 1, "", "ASEArraySection"], [246, 3, 1, "", "PotentialSection"], [247, 3, 1, "", "UniqueListSection"]], "ase2sprkkr.potentials.potential_sections.ASEArraySection": [[245, 4, 1, "", "__init__"], [245, 4, 1, "", "_depends_on"], [245, 4, 1, "", "_set_from_atoms"], [245, 4, 1, "", "_update_atoms"], [245, 4, 1, "", "has_any_value"]], "ase2sprkkr.potentials.potential_sections.PotentialSection": [[246, 4, 1, "", "__init__"], [246, 4, 1, "", "_depends_on"], [246, 4, 1, "", "_set_from_atoms"], [246, 4, 1, "", "_update_atoms"], [246, 4, 1, "", "reset"]], "ase2sprkkr.potentials.potential_sections.UniqueListSection": [[247, 4, 1, "", "__init__"], [247, 4, 1, "", "_set_from_atoms"], [247, 4, 1, "", "_update_atoms"], [247, 5, 1, "", "_value_class"], [247, 5, 1, "", "_value_name"]], "ase2sprkkr.potentials.potentials": [[249, 3, 1, "", "Potential"]], "ase2sprkkr.potentials.potentials.Potential": [[249, 4, 1, "", "__init__"], [249, 6, 1, "", "atoms"], [249, 4, 1, "", "from_atoms"], [249, 4, 1, "", "from_file"], [249, 4, 1, "", "make_complete"], [249, 5, 1, "", "potential_definition"], [249, 4, 1, "", "read_from_file"], [249, 4, 1, "", "reset"], [249, 4, 1, "", "set_from_atoms"], [249, 4, 1, "", "update_atoms"]], "ase2sprkkr.potentials.test": [[251, 0, 0, "-", "init_tests"], [253, 0, 0, "-", "test_custom_section"], [255, 0, 0, "-", "test_potential"], [257, 0, 0, "-", "test_structure"]], "ase2sprkkr.potentials.test.init_tests": [[252, 3, 1, "", "TestCase"]], "ase2sprkkr.potentials.test.init_tests.TestCase": [[252, 4, 1, "", "__init__"], [252, 4, 1, "", "assertAsyncEqual"], [252, 4, 1, "", "assertAsyncRaises"], [252, 4, 1, "", "runAsync"], [252, 4, 1, "", "setUp"]], "ase2sprkkr.potentials.test.test_custom_section": [[254, 3, 1, "", "TestCustomSection"]], "ase2sprkkr.potentials.test.test_custom_section.TestCustomSection": [[254, 4, 1, "", "__init__"], [254, 4, 1, "", "assertNone"], [254, 4, 1, "", "test_custom_section"]], "ase2sprkkr.potentials.test.test_potential": [[256, 3, 1, "", "TestPotential"]], "ase2sprkkr.potentials.test.test_potential.TestPotential": [[256, 4, 1, "", "__init__"], [256, 4, 1, "", "test_examples"], [256, 4, 1, "", "test_grammar"], [256, 4, 1, "", "test_potential"], [256, 4, 1, "", "test_reset"], [256, 4, 1, "", "test_sequence"]], "ase2sprkkr.potentials.test.test_structure": [[258, 3, 1, "", "TestStructure"]], "ase2sprkkr.potentials.test.test_structure.TestStructure": [[258, 4, 1, "", "__init__"], [258, 4, 1, "", "test_lattice"]], "ase2sprkkr.sprkkr": [[260, 0, 0, "-", "atomic_types"], [262, 0, 0, "-", "calculator"], [265, 0, 0, "-", "configuration"], [275, 0, 0, "-", "io_data"], [280, 0, 0, "-", "occupations"], [282, 0, 0, "-", "radial_meshes"], [285, 0, 0, "-", "reference_systems"], [287, 0, 0, "-", "sites"], [289, 0, 0, "-", "sprkkr_atoms"], [291, 0, 0, "-", "sprkkr_grammar_types"], [294, 0, 0, "-", "structure"], [299, 0, 0, "-", "sysfile"], [302, 0, 0, "-", "test"]], "ase2sprkkr.sprkkr.atomic_types": [[261, 3, 1, "", "AtomicType"]], "ase2sprkkr.sprkkr.atomic_types.AtomicType": [[261, 4, 1, "", "__init__"], [261, 5, 1, "", "_mendeleev_module"], [261, 4, 1, "", "copy"], [261, 4, 1, "", "is_vacuum"], [261, 6, 1, "", "mendeleev"], [261, 4, 1, "", "to_atomic_type"], [261, 4, 1, "", "to_tuple"]], "ase2sprkkr.sprkkr.calculator": [[263, 3, 1, "", "FilenameTemplator"], [264, 3, 1, "", "SPRKKR"]], "ase2sprkkr.sprkkr.calculator.FilenameTemplator": [[263, 4, 1, "", "__init__"], [263, 4, 1, "", "_get"], [263, 5, 1, "", "replacements"]], "ase2sprkkr.sprkkr.calculator.SPRKKR": [[264, 4, 1, "", "__init__"], [264, 5, 1, "", "_abc_impl"], [264, 4, 1, "", "_advance_counter"], [264, 4, 1, "", "_open_file"], [264, 6, 1, "", "atoms"], [264, 4, 1, "", "calculate"], [264, 4, 1, "", "copy_with_potential"], [264, 5, 1, "", "executable_postfix"], [264, 4, 1, "", "get"], [264, 5, 1, "", "implemented_properties"], [264, 5, 1, "", "input_file"], [264, 6, 1, "", "input_parameters"], [264, 4, 1, "", "kkrch"], [264, 4, 1, "", "kkrgen"], [264, 4, 1, "", "kkrspec"], [264, 5, 1, "", "mpi"], [264, 5, 1, "", "output_file"], [264, 4, 1, "", "phagen"], [264, 6, 1, "", "potential"], [264, 5, 1, "", "potential_file"], [264, 6, 1, "", "potential_object"], [264, 5, 1, "", "print_output"], [264, 4, 1, "", "run"], [264, 4, 1, "", "run_xband"], [264, 4, 1, "", "save_input"], [264, 4, 1, "", "scf"], [264, 4, 1, "", "set"]], "ase2sprkkr.sprkkr.configuration": [[266, 3, 1, "", "ConfigurationFile"], [267, 3, 1, "", "ConfigurationFileDefinition"], [268, 3, 1, "", "ConfigurationSection"], [269, 3, 1, "", "ConfigurationSectionDefinition"], [270, 3, 1, "", "ConfigurationSectionTrait"], [271, 3, 1, "", "ConfigurationValue"], [272, 3, 1, "", "ConfigurationValueDefinition"], [273, 3, 1, "", "CustomConfigurationSection"], [274, 3, 1, "", "CustomConfigurationValue"]], "ase2sprkkr.sprkkr.configuration.ConfigurationFile": [[266, 4, 1, "", "__init__"], [266, 4, 1, "", "save_to_file"]], "ase2sprkkr.sprkkr.configuration.ConfigurationFileDefinition": [[267, 4, 1, "", "__init__"]], "ase2sprkkr.sprkkr.configuration.ConfigurationSection": [[268, 4, 1, "", "__init__"]], "ase2sprkkr.sprkkr.configuration.ConfigurationSectionDefinition": [[269, 4, 1, "", "__init__"], [269, 5, 1, "", "result_class"]], "ase2sprkkr.sprkkr.configuration.ConfigurationSectionTrait": [[270, 4, 1, "", "__init__"], [270, 4, 1, "", "_set_from_atoms"], [270, 4, 1, "", "set_from_atoms"]], "ase2sprkkr.sprkkr.configuration.ConfigurationValue": [[271, 4, 1, "", "__init__"], [271, 4, 1, "", "_set_from_atoms"]], "ase2sprkkr.sprkkr.configuration.ConfigurationValueDefinition": [[272, 4, 1, "", "__init__"], [272, 5, 1, "", "result_class"]], "ase2sprkkr.sprkkr.configuration.CustomConfigurationSection": [[273, 4, 1, "", "__init__"]], "ase2sprkkr.sprkkr.configuration.CustomConfigurationValue": [[274, 4, 1, "", "__init__"], [274, 4, 1, "", "_set_from_atoms"]], "ase2sprkkr.sprkkr.io_data": [[276, 3, 1, "", "BaseIoData"], [277, 3, 1, "", "ReadIoData"], [278, 3, 1, "", "WriteIoData"], [279, 1, 1, "", "unique_mapping"]], "ase2sprkkr.sprkkr.io_data.BaseIoData": [[276, 4, 1, "", "__init__"]], "ase2sprkkr.sprkkr.io_data.ReadIoData": [[277, 4, 1, "", "__init__"]], "ase2sprkkr.sprkkr.io_data.WriteIoData": [[278, 4, 1, "", "__init__"], [278, 6, 1, "", "meshes"], [278, 6, 1, "", "reference_systems"], [278, 6, 1, "", "sites"], [278, 6, 1, "", "types"]], "ase2sprkkr.sprkkr.occupations": [[281, 3, 1, "", "Occupation"]], "ase2sprkkr.sprkkr.occupations.Occupation": [[281, 4, 1, "", "__init__"], [281, 4, 1, "", "_find_key"], [281, 4, 1, "", "_normalize"], [281, 4, 1, "", "_update_atoms"], [281, 4, 1, "", "add"], [281, 6, 1, "", "as_dict"], [281, 4, 1, "", "atomic_types"], [281, 4, 1, "", "check"], [281, 4, 1, "", "copy"], [281, 4, 1, "", "items"], [281, 6, 1, "", "primary_atomic_number"], [281, 6, 1, "", "primary_atomic_type"], [281, 6, 1, "", "primary_symbol"], [281, 4, 1, "", "set"], [281, 4, 1, "", "to_occupation"], [281, 4, 1, "", "to_tuple"], [281, 6, 1, "", "total_occupation"]], "ase2sprkkr.sprkkr.radial_meshes": [[283, 3, 1, "", "ExponentialMesh"], [284, 3, 1, "", "Mesh"]], "ase2sprkkr.sprkkr.radial_meshes.ExponentialMesh": [[283, 4, 1, "", "__init__"], [283, 4, 1, "", "copy"], [283, 4, 1, "", "to_tuple"]], "ase2sprkkr.sprkkr.radial_meshes.Mesh": [[284, 4, 1, "", "__init__"], [284, 4, 1, "", "default"]], "ase2sprkkr.sprkkr.reference_systems": [[286, 3, 1, "", "ReferenceSystem"]], "ase2sprkkr.sprkkr.reference_systems.ReferenceSystem": [[286, 4, 1, "", "__init__"], [286, 4, 1, "", "copy"], [286, 4, 1, "", "default"], [286, 4, 1, "", "to_tuple"]], "ase2sprkkr.sprkkr.sites": [[288, 3, 1, "", "Site"]], "ase2sprkkr.sprkkr.sites.Site": [[288, 4, 1, "", "__init__"], [288, 4, 1, "", "copy"], [288, 6, 1, "", "occupation"], [288, 6, 1, "", "primary_symbol"], [288, 4, 1, "", "reset"], [288, 4, 1, "", "update_atoms"]], "ase2sprkkr.sprkkr.sprkkr_atoms": [[290, 3, 1, "", "SPRKKRAtoms"]], "ase2sprkkr.sprkkr.sprkkr_atoms.SPRKKRAtoms": [[290, 4, 1, "", "__init__"], [290, 4, 1, "", "_cancel_sites_symmetry"], [290, 4, 1, "", "_compute_sites_symmetry"], [290, 4, 1, "", "_init"], [290, 4, 1, "", "cancel_sites_symmetry"], [290, 4, 1, "", "compute_sites_symmetry"], [290, 6, 1, "", "potential"], [290, 4, 1, "", "promote_ase_atoms"], [290, 4, 1, "", "reset_sprkkr_potential"], [290, 6, 1, "", "sites"], [290, 5, 1, "", "sites_array_name"], [290, 6, 1, "", "symmetry"]], "ase2sprkkr.sprkkr.sprkkr_grammar_types": [[292, 3, 1, "", "AtomicType"], [293, 3, 1, "", "Site"]], "ase2sprkkr.sprkkr.sprkkr_grammar_types.AtomicType": [[292, 5, 1, "", "I"], [292, 4, 1, "", "__init__"], [292, 4, 1, "", "set_from_atoms"], [292, 5, 1, "", "type"]], "ase2sprkkr.sprkkr.sprkkr_grammar_types.Site": [[293, 5, 1, "", "I"], [293, 4, 1, "", "__init__"], [293, 4, 1, "", "set_from_atoms"], [293, 5, 1, "", "type"]], "ase2sprkkr.sprkkr.structure": [[295, 3, 1, "", "AtomData"], [296, 3, 1, "", "LayerData"], [297, 1, 1, "", "floatjm"], [298, 1, 1, "", "structure_file_to_atoms"]], "ase2sprkkr.sprkkr.structure.AtomData": [[295, 4, 1, "", "__init__"], [295, 4, 1, "", "from_text"], [295, 4, 1, "", "get_symbol"]], "ase2sprkkr.sprkkr.structure.LayerData": [[296, 4, 1, "", "__init__"]], "ase2sprkkr.sprkkr.sysfile": [[300, 1, 1, "", "sysfile_content"], [301, 1, 1, "", "write_sysfile"]], "ase2sprkkr.sprkkr.test": [[303, 0, 0, "-", "init_tests"], [305, 0, 0, "-", "test_calculator"], [307, 0, 0, "-", "test_sprkkr_atoms"], [309, 0, 0, "-", "test_sysfile"]], "ase2sprkkr.sprkkr.test.init_tests": [[304, 3, 1, "", "TestCase"]], "ase2sprkkr.sprkkr.test.init_tests.TestCase": [[304, 4, 1, "", "__init__"], [304, 4, 1, "", "assertAsyncEqual"], [304, 4, 1, "", "assertAsyncRaises"], [304, 4, 1, "", "runAsync"], [304, 4, 1, "", "setUp"]], "ase2sprkkr.sprkkr.test.test_calculator": [[306, 3, 1, "", "CalculatorTest"]], "ase2sprkkr.sprkkr.test.test_calculator.CalculatorTest": [[306, 4, 1, "", "__init__"], [306, 4, 1, "", "test_calculator"], [306, 4, 1, "", "test_run"]], "ase2sprkkr.sprkkr.test.test_sprkkr_atoms": [[308, 3, 1, "", "SPRKKRAtomsTest"]], "ase2sprkkr.sprkkr.test.test_sprkkr_atoms.SPRKKRAtomsTest": [[308, 4, 1, "", "__init__"], [308, 4, 1, "", "test_occupancy"], [308, 4, 1, "", "test_symmetry"], [308, 4, 1, "", "xtest_atoms"]], "ase2sprkkr.sprkkr.test.test_sysfile": [[310, 3, 1, "", "SysfileTest"]], "ase2sprkkr.sprkkr.test.test_sysfile.SysfileTest": [[310, 4, 1, "", "__init__"], [310, 4, 1, "", "test"]], "ase2sprkkr.tools": [[312, 0, 0, "-", "a2s_visualise_in_struct"], [314, 0, 0, "-", "test"]], "ase2sprkkr.tools.a2s_visualise_in_struct": [[313, 1, 1, "", "visualise"]], "ase2sprkkr.tools.test": [[315, 0, 0, "-", "init_tests"], [317, 0, 0, "-", "test_tools"]], "ase2sprkkr.tools.test.init_tests": [[316, 3, 1, "", "TestCase"]], "ase2sprkkr.tools.test.init_tests.TestCase": [[316, 4, 1, "", "__init__"], [316, 4, 1, "", "assertAsyncEqual"], [316, 4, 1, "", "assertAsyncRaises"], [316, 4, 1, "", "runAsync"], [316, 4, 1, "", "setUp"]], "ase2sprkkr.tools.test.test_tools": [[318, 3, 1, "", "CommonTest"]], "ase2sprkkr.tools.test.test_tools.CommonTest": [[318, 4, 1, "", "__init__"], [318, 4, 1, "", "test"]]}, "objtypes": {"0": "py:module", "1": "py:function", "2": "py:data", "3": "py:class", "4": "py:method", "5": "py:attribute", "6": "py:property"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "function", "Python function"], "2": ["py", "data", "Python data"], "3": ["py", "class", "Python class"], "4": ["py", "method", "Python method"], "5": ["py", "attribute", "Python attribute"], "6": ["py", "property", "Python property"]}, "titleterms": {"ase2sprkkr": [0, 1, 320, 322, 323, 327], "useful": [0, 323, 325], "link": [0, 323, 325], "instal": [0, 322, 324, 327], "packag": [0, 322, 323, 324, 326], "us": [0, 322, 324, 327], "manag": [0, 322, 324], "further": [0, 322, 324], "note": [0, 322, 324, 327], "from": [0, 322, 324], "git": [0, 322, 324], "sourc": [0, 322, 324], "code": [0, 322, 324], "requir": [0, 322, 324], "obtain": [0, 322, 324], "without": [0, 322, 324], "pip": [0, 322, 324], "conda": [0, 322, 324], "build": [0, 322, 324], "wheel": [0, 322, 324], "One": [0, 322, 324], "step": [0, 322, 324], "document": [0, 322, 323, 324], "how": [0, 322, 324, 327], "contribut": [0, 322, 324, 327], "report": [0, 322, 324, 327], "bug": [0, 322, 324], "ase": 2, "visualis": [3, 313], "view": 4, "bind": 5, "spglib": 6, "compute_spacegroup": 7, "equivalent_sites_for_spacegroup": 8, "possibly_equivalent_sit": 9, "spacegroup_dataset": 10, "common": [11, 326], "alternative_typ": 12, "allowed_typ": 13, "normalize_typ": 14, "normalize_type_map": 15, "types_altern": 16, "configur": [17, 18, 265, 326], "configuration_contain": 19, "basesect": 20, "configurationcontain": 21, "todo": [21, 300], "customsect": 22, "rootconfigurationcontain": 23, "section": [24, 149, 208, 213, 217, 221, 225, 229, 233, 237], "configuration_definit": 25, "basedefinit": 26, "configurationrootdefinit": 27, "containerdefinit": 28, "sectiondefinit": 29, "valuedefinit": 30, "add_excluded_names_condit": 31, "unique_dict": 32, "decor": 33, "add_called_class_as_argu": 34, "add_to_signatur": 35, "cach": 36, "cached_class_properti": 37, "cached_properti": 38, "class_properti": 39, "doc": 40, "process_input_parameters_definit": 41, "verbatim": 42, "format": 43, "fortran_format": 44, "grammar": 45, "white": 46, "addconditionex": 47, "addparseactionex": 48, "delimitedlist": 49, "end_of_fil": 50, "generate_grammar": 51, "line_end": 52, "optional_line_end": 53, "optional_quot": 54, "replace_whitechar": 55, "separ": [56, 81, 102, 243], "separator_pattern": 57, "grammar_typ": 58, "arrai": 59, "basemix": 60, "baserealwithunit": 61, "basestr": 62, "bool": 63, "complex": 64, "date": [65, 91], "defkeyword": 66, "energi": [67, 92, 152], "flag": [68, 93], "grammartyp": 69, "integ": [70, 95], "keyword": 71, "linestr": 72, "mix": [73, 97], "number": 74, "objectnumb": 75, "potmix": 76, "qstring": [77, 99], "rang": 78, "real": [79, 100], "realwithunit": 80, "sequenc": 82, "setof": 83, "string": [84, 105], "tabl": [85, 323], "typedgrammartyp": 86, "unsign": [87, 111], "boolean": 88, "compare_numpy_valu": 89, "complex_numb": 90, "format_for_typ": 94, "line_str": 96, "pot_mix": 98, "recognized_set_typ": 101, "set_of_integ": 103, "set_of_r": 104, "type_from_default_valu": 106, "type_from_set_map": 107, "type_from_typ": 108, "type_from_type_map": 109, "type_from_valu": 110, "init_test": [112, 131, 167, 190, 251, 303, 315], "testcas": [113, 132, 168, 191, 252, 304, 316], "patch_packag": 114, "misc": 115, "ordereddict": 116, "as_integ": 117, "copy_list": 118, "njit": 119, "numpy_index": 120, "no_output": 121, "nooutput": 122, "option": [123, 126], "customopt": 124, "dangerousvalu": 125, "process_output_read": 127, "asynciofileread": 128, "baseprocessoutputread": 129, "test": [130, 166, 189, 250, 302, 314], "test_common": 133, "commontest": [134, 318], "test_grammar_typ": 135, "grammartest": 136, "unique_valu": 137, "uniquevaluesmap": 138, "input_paramet": [139, 142, 144, 146, 148, 159, 326, 327], "definit": [140, 205], "arp": 141, "do": 143, "phagen": 145, "scf": [147, 154, 183], "control": 150, "cpa": 151, "mode": 153, "site": [155, 230, 287, 288, 293], "strconst": 156, "task": [157, 327], "tau": 158, "inputparamet": [160, 327], "resolve_executable_postfix": 161, "input_parameters_definit": 162, "inputparametersdefinit": 163, "inputsectiondefinit": 164, "inputvaluedefinit": 165, "test_definit": 169, "testdefinit": 170, "test_input_paramet": 171, "testinputparamet": 172, "output": [173, 326], "output_definit": 174, "outputnonamevaluedefinit": 175, "outputsectiondefinit": 176, "outputvaluedefinit": 177, "outputvalueequaldefinit": 178, "reader": 179, "default": 180, "defaultoutputread": 181, "defaultresult": 182, "scfoutputread": 184, "scfresult": 185, "task_result": 186, "outputread": 187, "taskresult": 188, "test_output": 192, "testoutput": 193, "physic": 194, "lattice_data": 195, "latticedata": 196, "winger_seitz_radii": [197, 198], "potenti": [199, 206, 248, 249, 326, 327], "custom_potential_sect": 200, "custompotentialsect": 201, "custompotentialsectiondefinit": 202, "customsectiontoken": 203, "sectionstr": 204, "potential_definit": [207, 238], "_section": 209, "global_system_paramet": 210, "globalsystemparamet": 211, "globalsystemparameterdefinit": 212, "lattic": 214, "latticesect": 215, "latticesectiondefinit": 216, "mesh_inform": 218, "meshinformationsect": 219, "meshinformationsectiondefinit": 220, "occup": [222, 280, 281], "occupationsect": 223, "occupationsectiondefinit": 224, "reference_system": [226, 285], "referencesystemsect": 227, "referencesystemsectiondefinit": 228, "sitessect": 231, "sitessectiondefinit": 232, "type": [234, 327], "typessect": 235, "typessectiondefinit": 236, "asearraysectiondefinit": 239, "potsectiondefinit": 240, "potvaluedefinit": 241, "potentialdefinit": 242, "potential_sect": 244, "asearraysect": 245, "potentialsect": 246, "uniquelistsect": 247, "test_custom_sect": 253, "testcustomsect": 254, "test_potenti": 255, "testpotenti": 256, "test_structur": 257, "teststructur": 258, "sprkkr": [259, 264, 326], "atomic_typ": 260, "atomictyp": [261, 292], "calcul": [262, 327], "modul": [262, 319], "filenametempl": 263, "configurationfil": 266, "configurationfiledefinit": 267, "configurationsect": 268, "configurationsectiondefinit": 269, "configurationsectiontrait": 270, "configurationvalu": 271, "configurationvaluedefinit": 272, "customconfigurationsect": 273, "customconfigurationvalu": 274, "io_data": 275, "baseiodata": 276, "readiodata": 277, "writeiodata": 278, "unique_map": 279, "radial_mesh": 282, "exponentialmesh": 283, "mesh": 284, "referencesystem": 286, "sprkkr_atom": 289, "sprkkratom": 290, "sprkkr_grammar_typ": 291, "structur": [294, 326], "atomdata": 295, "layerdata": 296, "floatjm": 297, "structure_file_to_atom": 298, "sysfil": 299, "sysfile_cont": 300, "write_sysfil": 301, "test_calcul": 305, "calculatortest": 306, "test_sprkkr_atom": 307, "sprkkratomstest": 308, "test_sysfil": 309, "sysfiletest": 310, "tool": [311, 326, 327], "a2s_visualise_in_struct": 312, "test_tool": 317, "version": [319, 321], "changelog": 321, "1": 321, "0": 321, "6": 321, "7": 321, "2": 321, "beta1": 321, "user": 321, "interfac": 321, "architectur": 321, "chang": 321, "more": [322, 327], "about": [322, 327], "softwar": 323, "content": 323, "class": 323, "indic": 323, "ase2spr": 326, "kkr": 326, "": 326, "philosophi": 326, "develop": 326, "The": 326, "base": 326, "read": [326, 327], "file": [326, 327], "write": 326, "run": [326, 327], "program": 326, "usag": 327, "comput": 327, "bulk": 327, "materi": 327, "defin": 327, "properti": 327, "result": 327, "set": 327, "input": 327, "paramet": 327, "work": 327, "object": 327, "subsequ": 327, "gener": 327, "A": 327, "atom": 327, "mpi": 327, "bundl": 327, "error": 327}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 6, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.todo": 2, "sphinx.ext.viewcode": 1, "sphinx": 56}})