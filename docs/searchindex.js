Search.setIndex({"docnames": ["README", "auto/ase2sprkkr", "auto/ase2sprkkr.bindings", "auto/ase2sprkkr.bindings.es_finder", "auto/ase2sprkkr.bindings.es_finder.empty_spheres", "auto/ase2sprkkr.bindings.spglib", "auto/ase2sprkkr.bindings.spglib.compute_spacegroup", "auto/ase2sprkkr.bindings.spglib.equivalent_sites_for_spacegroup", "auto/ase2sprkkr.bindings.spglib.possibly_equivalent_sites", "auto/ase2sprkkr.bindings.spglib.spacegroup_dataset", "auto/ase2sprkkr.common", "auto/ase2sprkkr.common.base_configuration", "auto/ase2sprkkr.common.base_configuration.BaseConfiguration", "auto/ase2sprkkr.common.configuration_containers", "auto/ase2sprkkr.common.configuration_containers.BaseSection", "auto/ase2sprkkr.common.configuration_containers.ConfigurationContainer", "auto/ase2sprkkr.common.configuration_containers.CustomSection", "auto/ase2sprkkr.common.configuration_containers.RootConfigurationContainer", "auto/ase2sprkkr.common.configuration_containers.Section", "auto/ase2sprkkr.common.configuration_definitions", "auto/ase2sprkkr.common.configuration_definitions.BaseContainerDefinition", "auto/ase2sprkkr.common.configuration_definitions.BaseDefinition", "auto/ase2sprkkr.common.configuration_definitions.BaseSectionDefinition", "auto/ase2sprkkr.common.configuration_definitions.BaseValueDefinition", "auto/ase2sprkkr.common.configuration_definitions.ConfDefinition", "auto/ase2sprkkr.common.configuration_definitions.add_excluded_names_condition", "auto/ase2sprkkr.common.configuration_definitions.unique_dict", "auto/ase2sprkkr.common.formats", "auto/ase2sprkkr.common.formats.fortran_format", "auto/ase2sprkkr.common.grammar", "auto/ase2sprkkr.common.grammar.White", "auto/ase2sprkkr.common.grammar.addConditionEx", "auto/ase2sprkkr.common.grammar.addParseActionEx", "auto/ase2sprkkr.common.grammar.delimitedList", "auto/ase2sprkkr.common.grammar.end_of_file", "auto/ase2sprkkr.common.grammar.generate_grammar", "auto/ase2sprkkr.common.grammar.line_end", "auto/ase2sprkkr.common.grammar.optional_line_end", "auto/ase2sprkkr.common.grammar.optional_quote", "auto/ase2sprkkr.common.grammar.replace_whitechars", "auto/ase2sprkkr.common.grammar.separator", "auto/ase2sprkkr.common.grammar.separator_pattern", "auto/ase2sprkkr.common.grammar_types", "auto/ase2sprkkr.common.grammar_types.Array", "auto/ase2sprkkr.common.grammar_types.BaseMixed", "auto/ase2sprkkr.common.grammar_types.BaseRealWithUnits", "auto/ase2sprkkr.common.grammar_types.BaseString", "auto/ase2sprkkr.common.grammar_types.BaseType", "auto/ase2sprkkr.common.grammar_types.Bool", "auto/ase2sprkkr.common.grammar_types.Date", "auto/ase2sprkkr.common.grammar_types.DefKeyword", "auto/ase2sprkkr.common.grammar_types.Energy", "auto/ase2sprkkr.common.grammar_types.Flag", "auto/ase2sprkkr.common.grammar_types.Integer", "auto/ase2sprkkr.common.grammar_types.Keyword", "auto/ase2sprkkr.common.grammar_types.LineString", "auto/ase2sprkkr.common.grammar_types.Mixed", "auto/ase2sprkkr.common.grammar_types.PotMixed", "auto/ase2sprkkr.common.grammar_types.QString", "auto/ase2sprkkr.common.grammar_types.Real", "auto/ase2sprkkr.common.grammar_types.RealWithUnits", "auto/ase2sprkkr.common.grammar_types.Separator", "auto/ase2sprkkr.common.grammar_types.Sequence", "auto/ase2sprkkr.common.grammar_types.SetOf", "auto/ase2sprkkr.common.grammar_types.String", "auto/ase2sprkkr.common.grammar_types.Table", "auto/ase2sprkkr.common.grammar_types.Unsigned", "auto/ase2sprkkr.common.grammar_types.boolean", "auto/ase2sprkkr.common.grammar_types.energy", "auto/ase2sprkkr.common.grammar_types.flag", "auto/ase2sprkkr.common.grammar_types.format_for_type", "auto/ase2sprkkr.common.grammar_types.integer", "auto/ase2sprkkr.common.grammar_types.line_string", "auto/ase2sprkkr.common.grammar_types.mixed", "auto/ase2sprkkr.common.grammar_types.normalize_type", "auto/ase2sprkkr.common.grammar_types.normalize_type_map", "auto/ase2sprkkr.common.grammar_types.pot_mixed", "auto/ase2sprkkr.common.grammar_types.qstring", "auto/ase2sprkkr.common.grammar_types.real", "auto/ase2sprkkr.common.grammar_types.separator", "auto/ase2sprkkr.common.grammar_types.string", "auto/ase2sprkkr.common.grammar_types.type_from_default_value", "auto/ase2sprkkr.common.grammar_types.type_from_set_map", "auto/ase2sprkkr.common.grammar_types.type_from_type", "auto/ase2sprkkr.common.grammar_types.type_from_type_map", "auto/ase2sprkkr.common.grammar_types.type_from_value", "auto/ase2sprkkr.common.grammar_types.unsigned", "auto/ase2sprkkr.common.init_tests", "auto/ase2sprkkr.common.init_tests.TestCase", "auto/ase2sprkkr.common.init_tests.patch_package", "auto/ase2sprkkr.common.misc", "auto/ase2sprkkr.common.misc.OrderedDict", "auto/ase2sprkkr.common.misc.add_to_signature", "auto/ase2sprkkr.common.misc.class_property", "auto/ase2sprkkr.common.misc.copy_list", "auto/ase2sprkkr.common.misc.lazy_value", "auto/ase2sprkkr.common.misc.njit", "auto/ase2sprkkr.common.misc.numpy_index", "auto/ase2sprkkr.common.options", "auto/ase2sprkkr.common.options.CustomOption", "auto/ase2sprkkr.common.options.Option", "auto/ase2sprkkr.common.process_output_reader", "auto/ase2sprkkr.common.process_output_reader.AsyncioFileReader", "auto/ase2sprkkr.common.process_output_reader.BaseProcessOutputReader", "auto/ase2sprkkr.common.test", "auto/ase2sprkkr.common.test.init_tests", "auto/ase2sprkkr.common.test.init_tests.TestCase", "auto/ase2sprkkr.common.test.test_common", "auto/ase2sprkkr.common.test.test_common.CommonTest", "auto/ase2sprkkr.common.test.test_grammar_types", "auto/ase2sprkkr.common.test.test_grammar_types.GrammarTest", "auto/ase2sprkkr.common.unique_values", "auto/ase2sprkkr.common.unique_values.UniqueValuesMapping", "auto/ase2sprkkr.input_parameters", "auto/ase2sprkkr.input_parameters.definitions", "auto/ase2sprkkr.input_parameters.definitions.arpes", "auto/ase2sprkkr.input_parameters.definitions.arpes.input_parameters", "auto/ase2sprkkr.input_parameters.definitions.dos", "auto/ase2sprkkr.input_parameters.definitions.dos.input_parameters", "auto/ase2sprkkr.input_parameters.definitions.phagen", "auto/ase2sprkkr.input_parameters.definitions.phagen.input_parameters", "auto/ase2sprkkr.input_parameters.definitions.scf", "auto/ase2sprkkr.input_parameters.definitions.scf.input_parameters", "auto/ase2sprkkr.input_parameters.definitions.sections", "auto/ase2sprkkr.input_parameters.definitions.sections.CONTROL", "auto/ase2sprkkr.input_parameters.definitions.sections.ENERGY", "auto/ase2sprkkr.input_parameters.definitions.sections.SCF", "auto/ase2sprkkr.input_parameters.definitions.sections.SITES", "auto/ase2sprkkr.input_parameters.definitions.sections.TASK", "auto/ase2sprkkr.input_parameters.definitions.sections.TAU", "auto/ase2sprkkr.input_parameters.input_parameters", "auto/ase2sprkkr.input_parameters.input_parameters.InputParameters", "auto/ase2sprkkr.input_parameters.input_parameters.resolve_executable_postfix", "auto/ase2sprkkr.input_parameters.input_parameters_definitions", "auto/ase2sprkkr.input_parameters.input_parameters_definitions.InputParametersDefinition", "auto/ase2sprkkr.input_parameters.input_parameters_definitions.SectionDefinition", "auto/ase2sprkkr.input_parameters.input_parameters_definitions.ValueDefinition", "auto/ase2sprkkr.input_parameters.test", "auto/ase2sprkkr.input_parameters.test.init_tests", "auto/ase2sprkkr.input_parameters.test.init_tests.TestCase", "auto/ase2sprkkr.input_parameters.test.test_definitions", "auto/ase2sprkkr.input_parameters.test.test_definitions.TestDefinitions", "auto/ase2sprkkr.input_parameters.test.test_input_parameters", "auto/ase2sprkkr.input_parameters.test.test_input_parameters.TestInputParameters", "auto/ase2sprkkr.outputs", "auto/ase2sprkkr.outputs.output_definitions", "auto/ase2sprkkr.outputs.output_definitions.OutputNonameValueDefinition", "auto/ase2sprkkr.outputs.output_definitions.OutputSectionDefinition", "auto/ase2sprkkr.outputs.output_definitions.OutputValueDefinition", "auto/ase2sprkkr.outputs.output_definitions.OutputValueEqualDefinition", "auto/ase2sprkkr.outputs.readers", "auto/ase2sprkkr.outputs.readers.default", "auto/ase2sprkkr.outputs.readers.default.DefaultOutputReader", "auto/ase2sprkkr.outputs.readers.default.DefaultResult", "auto/ase2sprkkr.outputs.readers.scf", "auto/ase2sprkkr.outputs.readers.scf.ScfOutputReader", "auto/ase2sprkkr.outputs.readers.scf.ScfResult", "auto/ase2sprkkr.outputs.task_result", "auto/ase2sprkkr.outputs.task_result.OutputReader", "auto/ase2sprkkr.outputs.task_result.TaskResult", "auto/ase2sprkkr.outputs.test", "auto/ase2sprkkr.outputs.test.init_tests", "auto/ase2sprkkr.outputs.test.init_tests.TestCase", "auto/ase2sprkkr.outputs.test.test_output", "auto/ase2sprkkr.outputs.test.test_output.TestOutput", "auto/ase2sprkkr.physics", "auto/ase2sprkkr.physics.lattice_data", "auto/ase2sprkkr.physics.lattice_data.LatticeData", "auto/ase2sprkkr.potentials", "auto/ase2sprkkr.potentials.custom_potential_section", "auto/ase2sprkkr.potentials.custom_potential_section.CustomPotentialSection", "auto/ase2sprkkr.potentials.custom_potential_section.CustomPotentialSectionDefinition", "auto/ase2sprkkr.potentials.custom_potential_section.CustomSectionToken", "auto/ase2sprkkr.potentials.custom_potential_section.SectionString", "auto/ase2sprkkr.potentials.definitions", "auto/ase2sprkkr.potentials.definitions.potential", "auto/ase2sprkkr.potentials.definitions.potential.potential_definition", "auto/ase2sprkkr.potentials.definitions.sections", "auto/ase2sprkkr.potentials.definitions.sections._sections", "auto/ase2sprkkr.potentials.definitions.sections.global_system_parameter", "auto/ase2sprkkr.potentials.definitions.sections.global_system_parameter.GlobalSystemParameter", "auto/ase2sprkkr.potentials.definitions.sections.global_system_parameter.GlobalSystemParameterDefinition", "auto/ase2sprkkr.potentials.definitions.sections.global_system_parameter.section", "auto/ase2sprkkr.potentials.definitions.sections.lattice", "auto/ase2sprkkr.potentials.definitions.sections.lattice.LatticeSection", "auto/ase2sprkkr.potentials.definitions.sections.lattice.LatticeSectionDefinition", "auto/ase2sprkkr.potentials.definitions.sections.lattice.section", "auto/ase2sprkkr.potentials.definitions.sections.mesh_information", "auto/ase2sprkkr.potentials.definitions.sections.mesh_information.MeshInformationSection", "auto/ase2sprkkr.potentials.definitions.sections.mesh_information.MeshInformationSectionDefinition", "auto/ase2sprkkr.potentials.definitions.sections.mesh_information.section", "auto/ase2sprkkr.potentials.definitions.sections.occupation", "auto/ase2sprkkr.potentials.definitions.sections.occupation.OccupationSection", "auto/ase2sprkkr.potentials.definitions.sections.occupation.OccupationSectionDefinition", "auto/ase2sprkkr.potentials.definitions.sections.occupation.section", "auto/ase2sprkkr.potentials.definitions.sections.reference_system", "auto/ase2sprkkr.potentials.definitions.sections.reference_system.ReferenceSystemSection", "auto/ase2sprkkr.potentials.definitions.sections.reference_system.ReferenceSystemSectionDefinition", "auto/ase2sprkkr.potentials.definitions.sections.reference_system.section", "auto/ase2sprkkr.potentials.definitions.sections.sites", "auto/ase2sprkkr.potentials.definitions.sections.sites.SitesSection", "auto/ase2sprkkr.potentials.definitions.sections.sites.SitesSectionDefinition", "auto/ase2sprkkr.potentials.definitions.sections.sites.section", "auto/ase2sprkkr.potentials.definitions.sections.types", "auto/ase2sprkkr.potentials.definitions.sections.types.TypesSection", "auto/ase2sprkkr.potentials.definitions.sections.types.TypesSectionDefinition", "auto/ase2sprkkr.potentials.definitions.sections.types.section", "auto/ase2sprkkr.potentials.io_data", "auto/ase2sprkkr.potentials.io_data.BaseIoData", "auto/ase2sprkkr.potentials.io_data.ReadIoData", "auto/ase2sprkkr.potentials.io_data.WriteIoData", "auto/ase2sprkkr.potentials.io_data.unique_mapping", "auto/ase2sprkkr.potentials.potential_definitions", "auto/ase2sprkkr.potentials.potential_definitions.ASEArraySectionDefinition", "auto/ase2sprkkr.potentials.potential_definitions.PotSectionDefinition", "auto/ase2sprkkr.potentials.potential_definitions.PotValueDefinition", "auto/ase2sprkkr.potentials.potential_definitions.PotentialDefinition", "auto/ase2sprkkr.potentials.potential_definitions.Separator", "auto/ase2sprkkr.potentials.potential_sections", "auto/ase2sprkkr.potentials.potential_sections.ASEArraySection", "auto/ase2sprkkr.potentials.potential_sections.PotentialSection", "auto/ase2sprkkr.potentials.potential_sections.UniqueListSection", "auto/ase2sprkkr.potentials.potentials", "auto/ase2sprkkr.potentials.potentials.Potential", "auto/ase2sprkkr.potentials.test", "auto/ase2sprkkr.potentials.test.init_tests", "auto/ase2sprkkr.potentials.test.init_tests.TestCase", "auto/ase2sprkkr.potentials.test.test_custom_section", "auto/ase2sprkkr.potentials.test.test_custom_section.TestCustomSection", "auto/ase2sprkkr.potentials.test.test_potential", "auto/ase2sprkkr.potentials.test.test_potential.TestPotential", "auto/ase2sprkkr.potentials.test.test_structure", "auto/ase2sprkkr.potentials.test.test_structure.TestStructure", "auto/ase2sprkkr.sprkkr", "auto/ase2sprkkr.sprkkr.atomic_types", "auto/ase2sprkkr.sprkkr.atomic_types.AtomicType", "auto/ase2sprkkr.sprkkr.calculator", "auto/ase2sprkkr.sprkkr.calculator.FilenameTemplator", "auto/ase2sprkkr.sprkkr.calculator.SPRKKR", "auto/ase2sprkkr.sprkkr.occupations", "auto/ase2sprkkr.sprkkr.occupations.Occupation", "auto/ase2sprkkr.sprkkr.radial_meshes", "auto/ase2sprkkr.sprkkr.radial_meshes.ExponentialMesh", "auto/ase2sprkkr.sprkkr.radial_meshes.Mesh", "auto/ase2sprkkr.sprkkr.reference_systems", "auto/ase2sprkkr.sprkkr.reference_systems.ReferenceSystem", "auto/ase2sprkkr.sprkkr.sites", "auto/ase2sprkkr.sprkkr.sites.Site", "auto/ase2sprkkr.sprkkr.sprkkr_atoms", "auto/ase2sprkkr.sprkkr.sprkkr_atoms.SPRKKRAtoms", "auto/ase2sprkkr.sprkkr.structure", "auto/ase2sprkkr.sprkkr.structure.AtomData", "auto/ase2sprkkr.sprkkr.structure.LayerData", "auto/ase2sprkkr.sprkkr.structure.floatjm", "auto/ase2sprkkr.sprkkr.structure.structure_file_to_atoms", "auto/ase2sprkkr.sprkkr.sysfile", "auto/ase2sprkkr.sprkkr.sysfile.sysfile_content", "auto/ase2sprkkr.sprkkr.sysfile.write_sysfile", "auto/ase2sprkkr.sprkkr.test", "auto/ase2sprkkr.sprkkr.test.init_tests", "auto/ase2sprkkr.sprkkr.test.init_tests.TestCase", "auto/ase2sprkkr.sprkkr.test.test_calculator", "auto/ase2sprkkr.sprkkr.test.test_calculator.CalculatorTest", "auto/ase2sprkkr.sprkkr.test.test_sites", "auto/ase2sprkkr.sprkkr.test.test_sites.SitesTest", "auto/ase2sprkkr.sprkkr.test.test_sprkkr_atoms", "auto/ase2sprkkr.sprkkr.test.test_sprkkr_atoms.SPRKKRAtomsTest", "auto/ase2sprkkr.sprkkr.test.test_sysfile", "auto/ase2sprkkr.sprkkr.test.test_sysfile.SysfileTest", "auto/ase2sprkkr.tools", "auto/ase2sprkkr.tools.a2s_visualise_in_struct", "auto/ase2sprkkr.tools.a2s_visualise_in_struct.visualise", "auto/ase2sprkkr.version", "auto/modules", "how-to-install", "index", "installation", "introduction", "philosophy", "usage"], "filenames": ["README.rst", "auto/ase2sprkkr.rst", "auto/ase2sprkkr.bindings.rst", "auto/ase2sprkkr.bindings.es_finder.rst", "auto/ase2sprkkr.bindings.es_finder.empty_spheres.rst", "auto/ase2sprkkr.bindings.spglib.rst", "auto/ase2sprkkr.bindings.spglib.compute_spacegroup.rst", "auto/ase2sprkkr.bindings.spglib.equivalent_sites_for_spacegroup.rst", "auto/ase2sprkkr.bindings.spglib.possibly_equivalent_sites.rst", "auto/ase2sprkkr.bindings.spglib.spacegroup_dataset.rst", "auto/ase2sprkkr.common.rst", "auto/ase2sprkkr.common.base_configuration.rst", "auto/ase2sprkkr.common.base_configuration.BaseConfiguration.rst", "auto/ase2sprkkr.common.configuration_containers.rst", "auto/ase2sprkkr.common.configuration_containers.BaseSection.rst", "auto/ase2sprkkr.common.configuration_containers.ConfigurationContainer.rst", "auto/ase2sprkkr.common.configuration_containers.CustomSection.rst", "auto/ase2sprkkr.common.configuration_containers.RootConfigurationContainer.rst", "auto/ase2sprkkr.common.configuration_containers.Section.rst", "auto/ase2sprkkr.common.configuration_definitions.rst", "auto/ase2sprkkr.common.configuration_definitions.BaseContainerDefinition.rst", "auto/ase2sprkkr.common.configuration_definitions.BaseDefinition.rst", "auto/ase2sprkkr.common.configuration_definitions.BaseSectionDefinition.rst", "auto/ase2sprkkr.common.configuration_definitions.BaseValueDefinition.rst", "auto/ase2sprkkr.common.configuration_definitions.ConfDefinition.rst", "auto/ase2sprkkr.common.configuration_definitions.add_excluded_names_condition.rst", "auto/ase2sprkkr.common.configuration_definitions.unique_dict.rst", "auto/ase2sprkkr.common.formats.rst", "auto/ase2sprkkr.common.formats.fortran_format.rst", "auto/ase2sprkkr.common.grammar.rst", "auto/ase2sprkkr.common.grammar.White.rst", "auto/ase2sprkkr.common.grammar.addConditionEx.rst", "auto/ase2sprkkr.common.grammar.addParseActionEx.rst", "auto/ase2sprkkr.common.grammar.delimitedList.rst", "auto/ase2sprkkr.common.grammar.end_of_file.rst", "auto/ase2sprkkr.common.grammar.generate_grammar.rst", "auto/ase2sprkkr.common.grammar.line_end.rst", "auto/ase2sprkkr.common.grammar.optional_line_end.rst", "auto/ase2sprkkr.common.grammar.optional_quote.rst", "auto/ase2sprkkr.common.grammar.replace_whitechars.rst", "auto/ase2sprkkr.common.grammar.separator.rst", "auto/ase2sprkkr.common.grammar.separator_pattern.rst", "auto/ase2sprkkr.common.grammar_types.rst", "auto/ase2sprkkr.common.grammar_types.Array.rst", "auto/ase2sprkkr.common.grammar_types.BaseMixed.rst", "auto/ase2sprkkr.common.grammar_types.BaseRealWithUnits.rst", "auto/ase2sprkkr.common.grammar_types.BaseString.rst", "auto/ase2sprkkr.common.grammar_types.BaseType.rst", "auto/ase2sprkkr.common.grammar_types.Bool.rst", "auto/ase2sprkkr.common.grammar_types.Date.rst", "auto/ase2sprkkr.common.grammar_types.DefKeyword.rst", "auto/ase2sprkkr.common.grammar_types.Energy.rst", "auto/ase2sprkkr.common.grammar_types.Flag.rst", "auto/ase2sprkkr.common.grammar_types.Integer.rst", "auto/ase2sprkkr.common.grammar_types.Keyword.rst", "auto/ase2sprkkr.common.grammar_types.LineString.rst", "auto/ase2sprkkr.common.grammar_types.Mixed.rst", "auto/ase2sprkkr.common.grammar_types.PotMixed.rst", "auto/ase2sprkkr.common.grammar_types.QString.rst", "auto/ase2sprkkr.common.grammar_types.Real.rst", "auto/ase2sprkkr.common.grammar_types.RealWithUnits.rst", "auto/ase2sprkkr.common.grammar_types.Separator.rst", "auto/ase2sprkkr.common.grammar_types.Sequence.rst", "auto/ase2sprkkr.common.grammar_types.SetOf.rst", "auto/ase2sprkkr.common.grammar_types.String.rst", "auto/ase2sprkkr.common.grammar_types.Table.rst", "auto/ase2sprkkr.common.grammar_types.Unsigned.rst", "auto/ase2sprkkr.common.grammar_types.boolean.rst", "auto/ase2sprkkr.common.grammar_types.energy.rst", "auto/ase2sprkkr.common.grammar_types.flag.rst", "auto/ase2sprkkr.common.grammar_types.format_for_type.rst", "auto/ase2sprkkr.common.grammar_types.integer.rst", "auto/ase2sprkkr.common.grammar_types.line_string.rst", "auto/ase2sprkkr.common.grammar_types.mixed.rst", "auto/ase2sprkkr.common.grammar_types.normalize_type.rst", "auto/ase2sprkkr.common.grammar_types.normalize_type_map.rst", "auto/ase2sprkkr.common.grammar_types.pot_mixed.rst", "auto/ase2sprkkr.common.grammar_types.qstring.rst", "auto/ase2sprkkr.common.grammar_types.real.rst", "auto/ase2sprkkr.common.grammar_types.separator.rst", "auto/ase2sprkkr.common.grammar_types.string.rst", "auto/ase2sprkkr.common.grammar_types.type_from_default_value.rst", "auto/ase2sprkkr.common.grammar_types.type_from_set_map.rst", "auto/ase2sprkkr.common.grammar_types.type_from_type.rst", "auto/ase2sprkkr.common.grammar_types.type_from_type_map.rst", "auto/ase2sprkkr.common.grammar_types.type_from_value.rst", "auto/ase2sprkkr.common.grammar_types.unsigned.rst", "auto/ase2sprkkr.common.init_tests.rst", "auto/ase2sprkkr.common.init_tests.TestCase.rst", "auto/ase2sprkkr.common.init_tests.patch_package.rst", "auto/ase2sprkkr.common.misc.rst", "auto/ase2sprkkr.common.misc.OrderedDict.rst", "auto/ase2sprkkr.common.misc.add_to_signature.rst", "auto/ase2sprkkr.common.misc.class_property.rst", "auto/ase2sprkkr.common.misc.copy_list.rst", "auto/ase2sprkkr.common.misc.lazy_value.rst", "auto/ase2sprkkr.common.misc.njit.rst", "auto/ase2sprkkr.common.misc.numpy_index.rst", "auto/ase2sprkkr.common.options.rst", "auto/ase2sprkkr.common.options.CustomOption.rst", "auto/ase2sprkkr.common.options.Option.rst", "auto/ase2sprkkr.common.process_output_reader.rst", "auto/ase2sprkkr.common.process_output_reader.AsyncioFileReader.rst", "auto/ase2sprkkr.common.process_output_reader.BaseProcessOutputReader.rst", "auto/ase2sprkkr.common.test.rst", "auto/ase2sprkkr.common.test.init_tests.rst", "auto/ase2sprkkr.common.test.init_tests.TestCase.rst", "auto/ase2sprkkr.common.test.test_common.rst", "auto/ase2sprkkr.common.test.test_common.CommonTest.rst", "auto/ase2sprkkr.common.test.test_grammar_types.rst", "auto/ase2sprkkr.common.test.test_grammar_types.GrammarTest.rst", "auto/ase2sprkkr.common.unique_values.rst", "auto/ase2sprkkr.common.unique_values.UniqueValuesMapping.rst", "auto/ase2sprkkr.input_parameters.rst", "auto/ase2sprkkr.input_parameters.definitions.rst", "auto/ase2sprkkr.input_parameters.definitions.arpes.rst", "auto/ase2sprkkr.input_parameters.definitions.arpes.input_parameters.rst", "auto/ase2sprkkr.input_parameters.definitions.dos.rst", "auto/ase2sprkkr.input_parameters.definitions.dos.input_parameters.rst", "auto/ase2sprkkr.input_parameters.definitions.phagen.rst", "auto/ase2sprkkr.input_parameters.definitions.phagen.input_parameters.rst", "auto/ase2sprkkr.input_parameters.definitions.scf.rst", "auto/ase2sprkkr.input_parameters.definitions.scf.input_parameters.rst", "auto/ase2sprkkr.input_parameters.definitions.sections.rst", "auto/ase2sprkkr.input_parameters.definitions.sections.CONTROL.rst", "auto/ase2sprkkr.input_parameters.definitions.sections.ENERGY.rst", "auto/ase2sprkkr.input_parameters.definitions.sections.SCF.rst", "auto/ase2sprkkr.input_parameters.definitions.sections.SITES.rst", "auto/ase2sprkkr.input_parameters.definitions.sections.TASK.rst", "auto/ase2sprkkr.input_parameters.definitions.sections.TAU.rst", "auto/ase2sprkkr.input_parameters.input_parameters.rst", "auto/ase2sprkkr.input_parameters.input_parameters.InputParameters.rst", "auto/ase2sprkkr.input_parameters.input_parameters.resolve_executable_postfix.rst", "auto/ase2sprkkr.input_parameters.input_parameters_definitions.rst", "auto/ase2sprkkr.input_parameters.input_parameters_definitions.InputParametersDefinition.rst", "auto/ase2sprkkr.input_parameters.input_parameters_definitions.SectionDefinition.rst", "auto/ase2sprkkr.input_parameters.input_parameters_definitions.ValueDefinition.rst", "auto/ase2sprkkr.input_parameters.test.rst", "auto/ase2sprkkr.input_parameters.test.init_tests.rst", "auto/ase2sprkkr.input_parameters.test.init_tests.TestCase.rst", "auto/ase2sprkkr.input_parameters.test.test_definitions.rst", "auto/ase2sprkkr.input_parameters.test.test_definitions.TestDefinitions.rst", "auto/ase2sprkkr.input_parameters.test.test_input_parameters.rst", "auto/ase2sprkkr.input_parameters.test.test_input_parameters.TestInputParameters.rst", "auto/ase2sprkkr.outputs.rst", "auto/ase2sprkkr.outputs.output_definitions.rst", "auto/ase2sprkkr.outputs.output_definitions.OutputNonameValueDefinition.rst", "auto/ase2sprkkr.outputs.output_definitions.OutputSectionDefinition.rst", "auto/ase2sprkkr.outputs.output_definitions.OutputValueDefinition.rst", "auto/ase2sprkkr.outputs.output_definitions.OutputValueEqualDefinition.rst", "auto/ase2sprkkr.outputs.readers.rst", "auto/ase2sprkkr.outputs.readers.default.rst", "auto/ase2sprkkr.outputs.readers.default.DefaultOutputReader.rst", "auto/ase2sprkkr.outputs.readers.default.DefaultResult.rst", "auto/ase2sprkkr.outputs.readers.scf.rst", "auto/ase2sprkkr.outputs.readers.scf.ScfOutputReader.rst", "auto/ase2sprkkr.outputs.readers.scf.ScfResult.rst", "auto/ase2sprkkr.outputs.task_result.rst", "auto/ase2sprkkr.outputs.task_result.OutputReader.rst", "auto/ase2sprkkr.outputs.task_result.TaskResult.rst", "auto/ase2sprkkr.outputs.test.rst", "auto/ase2sprkkr.outputs.test.init_tests.rst", "auto/ase2sprkkr.outputs.test.init_tests.TestCase.rst", "auto/ase2sprkkr.outputs.test.test_output.rst", "auto/ase2sprkkr.outputs.test.test_output.TestOutput.rst", "auto/ase2sprkkr.physics.rst", "auto/ase2sprkkr.physics.lattice_data.rst", "auto/ase2sprkkr.physics.lattice_data.LatticeData.rst", "auto/ase2sprkkr.potentials.rst", "auto/ase2sprkkr.potentials.custom_potential_section.rst", "auto/ase2sprkkr.potentials.custom_potential_section.CustomPotentialSection.rst", "auto/ase2sprkkr.potentials.custom_potential_section.CustomPotentialSectionDefinition.rst", "auto/ase2sprkkr.potentials.custom_potential_section.CustomSectionToken.rst", "auto/ase2sprkkr.potentials.custom_potential_section.SectionString.rst", "auto/ase2sprkkr.potentials.definitions.rst", "auto/ase2sprkkr.potentials.definitions.potential.rst", "auto/ase2sprkkr.potentials.definitions.potential.potential_definition.rst", "auto/ase2sprkkr.potentials.definitions.sections.rst", "auto/ase2sprkkr.potentials.definitions.sections._sections.rst", "auto/ase2sprkkr.potentials.definitions.sections.global_system_parameter.rst", "auto/ase2sprkkr.potentials.definitions.sections.global_system_parameter.GlobalSystemParameter.rst", "auto/ase2sprkkr.potentials.definitions.sections.global_system_parameter.GlobalSystemParameterDefinition.rst", "auto/ase2sprkkr.potentials.definitions.sections.global_system_parameter.section.rst", "auto/ase2sprkkr.potentials.definitions.sections.lattice.rst", "auto/ase2sprkkr.potentials.definitions.sections.lattice.LatticeSection.rst", "auto/ase2sprkkr.potentials.definitions.sections.lattice.LatticeSectionDefinition.rst", "auto/ase2sprkkr.potentials.definitions.sections.lattice.section.rst", "auto/ase2sprkkr.potentials.definitions.sections.mesh_information.rst", "auto/ase2sprkkr.potentials.definitions.sections.mesh_information.MeshInformationSection.rst", "auto/ase2sprkkr.potentials.definitions.sections.mesh_information.MeshInformationSectionDefinition.rst", "auto/ase2sprkkr.potentials.definitions.sections.mesh_information.section.rst", "auto/ase2sprkkr.potentials.definitions.sections.occupation.rst", "auto/ase2sprkkr.potentials.definitions.sections.occupation.OccupationSection.rst", "auto/ase2sprkkr.potentials.definitions.sections.occupation.OccupationSectionDefinition.rst", "auto/ase2sprkkr.potentials.definitions.sections.occupation.section.rst", "auto/ase2sprkkr.potentials.definitions.sections.reference_system.rst", "auto/ase2sprkkr.potentials.definitions.sections.reference_system.ReferenceSystemSection.rst", "auto/ase2sprkkr.potentials.definitions.sections.reference_system.ReferenceSystemSectionDefinition.rst", "auto/ase2sprkkr.potentials.definitions.sections.reference_system.section.rst", "auto/ase2sprkkr.potentials.definitions.sections.sites.rst", "auto/ase2sprkkr.potentials.definitions.sections.sites.SitesSection.rst", "auto/ase2sprkkr.potentials.definitions.sections.sites.SitesSectionDefinition.rst", "auto/ase2sprkkr.potentials.definitions.sections.sites.section.rst", "auto/ase2sprkkr.potentials.definitions.sections.types.rst", "auto/ase2sprkkr.potentials.definitions.sections.types.TypesSection.rst", "auto/ase2sprkkr.potentials.definitions.sections.types.TypesSectionDefinition.rst", "auto/ase2sprkkr.potentials.definitions.sections.types.section.rst", "auto/ase2sprkkr.potentials.io_data.rst", "auto/ase2sprkkr.potentials.io_data.BaseIoData.rst", "auto/ase2sprkkr.potentials.io_data.ReadIoData.rst", "auto/ase2sprkkr.potentials.io_data.WriteIoData.rst", "auto/ase2sprkkr.potentials.io_data.unique_mapping.rst", "auto/ase2sprkkr.potentials.potential_definitions.rst", "auto/ase2sprkkr.potentials.potential_definitions.ASEArraySectionDefinition.rst", "auto/ase2sprkkr.potentials.potential_definitions.PotSectionDefinition.rst", "auto/ase2sprkkr.potentials.potential_definitions.PotValueDefinition.rst", "auto/ase2sprkkr.potentials.potential_definitions.PotentialDefinition.rst", "auto/ase2sprkkr.potentials.potential_definitions.Separator.rst", "auto/ase2sprkkr.potentials.potential_sections.rst", "auto/ase2sprkkr.potentials.potential_sections.ASEArraySection.rst", "auto/ase2sprkkr.potentials.potential_sections.PotentialSection.rst", "auto/ase2sprkkr.potentials.potential_sections.UniqueListSection.rst", "auto/ase2sprkkr.potentials.potentials.rst", "auto/ase2sprkkr.potentials.potentials.Potential.rst", "auto/ase2sprkkr.potentials.test.rst", "auto/ase2sprkkr.potentials.test.init_tests.rst", "auto/ase2sprkkr.potentials.test.init_tests.TestCase.rst", "auto/ase2sprkkr.potentials.test.test_custom_section.rst", "auto/ase2sprkkr.potentials.test.test_custom_section.TestCustomSection.rst", "auto/ase2sprkkr.potentials.test.test_potential.rst", "auto/ase2sprkkr.potentials.test.test_potential.TestPotential.rst", "auto/ase2sprkkr.potentials.test.test_structure.rst", "auto/ase2sprkkr.potentials.test.test_structure.TestStructure.rst", "auto/ase2sprkkr.sprkkr.rst", "auto/ase2sprkkr.sprkkr.atomic_types.rst", "auto/ase2sprkkr.sprkkr.atomic_types.AtomicType.rst", "auto/ase2sprkkr.sprkkr.calculator.rst", "auto/ase2sprkkr.sprkkr.calculator.FilenameTemplator.rst", "auto/ase2sprkkr.sprkkr.calculator.SPRKKR.rst", "auto/ase2sprkkr.sprkkr.occupations.rst", "auto/ase2sprkkr.sprkkr.occupations.Occupation.rst", "auto/ase2sprkkr.sprkkr.radial_meshes.rst", "auto/ase2sprkkr.sprkkr.radial_meshes.ExponentialMesh.rst", "auto/ase2sprkkr.sprkkr.radial_meshes.Mesh.rst", "auto/ase2sprkkr.sprkkr.reference_systems.rst", "auto/ase2sprkkr.sprkkr.reference_systems.ReferenceSystem.rst", "auto/ase2sprkkr.sprkkr.sites.rst", "auto/ase2sprkkr.sprkkr.sites.Site.rst", "auto/ase2sprkkr.sprkkr.sprkkr_atoms.rst", "auto/ase2sprkkr.sprkkr.sprkkr_atoms.SPRKKRAtoms.rst", "auto/ase2sprkkr.sprkkr.structure.rst", "auto/ase2sprkkr.sprkkr.structure.AtomData.rst", "auto/ase2sprkkr.sprkkr.structure.LayerData.rst", "auto/ase2sprkkr.sprkkr.structure.floatjm.rst", "auto/ase2sprkkr.sprkkr.structure.structure_file_to_atoms.rst", "auto/ase2sprkkr.sprkkr.sysfile.rst", "auto/ase2sprkkr.sprkkr.sysfile.sysfile_content.rst", "auto/ase2sprkkr.sprkkr.sysfile.write_sysfile.rst", "auto/ase2sprkkr.sprkkr.test.rst", "auto/ase2sprkkr.sprkkr.test.init_tests.rst", "auto/ase2sprkkr.sprkkr.test.init_tests.TestCase.rst", "auto/ase2sprkkr.sprkkr.test.test_calculator.rst", "auto/ase2sprkkr.sprkkr.test.test_calculator.CalculatorTest.rst", "auto/ase2sprkkr.sprkkr.test.test_sites.rst", "auto/ase2sprkkr.sprkkr.test.test_sites.SitesTest.rst", "auto/ase2sprkkr.sprkkr.test.test_sprkkr_atoms.rst", "auto/ase2sprkkr.sprkkr.test.test_sprkkr_atoms.SPRKKRAtomsTest.rst", "auto/ase2sprkkr.sprkkr.test.test_sysfile.rst", "auto/ase2sprkkr.sprkkr.test.test_sysfile.SysfileTest.rst", "auto/ase2sprkkr.tools.rst", "auto/ase2sprkkr.tools.a2s_visualise_in_struct.rst", "auto/ase2sprkkr.tools.a2s_visualise_in_struct.visualise.rst", "auto/ase2sprkkr.version.rst", "auto/modules.rst", "how-to-install.rst", "index.rst", "installation.rst", "introduction.rst", "philosophy.rst", "usage.rst"], "titles": ["ASE2SPRKKR", "ase2sprkkr", "bindings", "es_finder", "empty_spheres", "spglib", "compute_spacegroup", "equivalent_sites_for_spacegroup", "possibly_equivalent_sites", "spacegroup_dataset", "common", "base_configuration", "BaseConfiguration", "configuration_containers", "BaseSection", "ConfigurationContainer", "CustomSection", "RootConfigurationContainer", "Section", "configuration_definitions", "BaseContainerDefinition", "BaseDefinition", "BaseSectionDefinition", "BaseValueDefinition", "ConfDefinition", "add_excluded_names_condition", "unique_dict", "formats", "fortran_format", "grammar", "White", "addConditionEx", "addParseActionEx", "delimitedList", "end_of_file", "generate_grammar", "line_end", "optional_line_end", "optional_quote", "replace_whitechars", "separator", "separator_pattern", "grammar_types", "Array", "BaseMixed", "BaseRealWithUnits", "BaseString", "BaseType", "Bool", "Date", "DefKeyword", "Energy", "Flag", "Integer", "Keyword", "LineString", "Mixed", "PotMixed", "QString", "Real", "RealWithUnits", "Separator", "Sequence", "SetOf", "String", "Table", "Unsigned", "boolean", "energy", "flag", "format_for_type", "integer", "line_string", "mixed", "normalize_type", "normalize_type_map", "pot_mixed", "qstring", "real", "separator", "string", "type_from_default_value", "type_from_set_map", "type_from_type", "type_from_type_map", "type_from_value", "unsigned", "init_tests", "TestCase", "patch_package", "misc", "OrderedDict", "add_to_signature", "class_property", "copy_list", "lazy_value", "njit", "numpy_index", "options", "CustomOption", "Option", "process_output_reader", "AsyncioFileReader", "BaseProcessOutputReader", "test", "init_tests", "TestCase", "test_common", "CommonTest", "test_grammar_types", "GrammarTest", "unique_values", "UniqueValuesMapping", "input_parameters", "definitions", "arpes", "input_parameters", "dos", "input_parameters", "phagen", "input_parameters", "scf", "input_parameters", "sections", "CONTROL", "ENERGY", "SCF", "SITES", "TASK", "TAU", "input_parameters", "InputParameters", "resolve_executable_postfix", "input_parameters_definitions", "InputParametersDefinition", "SectionDefinition", "ValueDefinition", "test", "init_tests", "TestCase", "test_definitions", "TestDefinitions", "test_input_parameters", "TestInputParameters", "outputs", "output_definitions", "OutputNonameValueDefinition", "OutputSectionDefinition", "OutputValueDefinition", "OutputValueEqualDefinition", "readers", "default", "DefaultOutputReader", "DefaultResult", "scf", "ScfOutputReader", "ScfResult", "task_result", "OutputReader", "TaskResult", "test", "init_tests", "TestCase", "test_output", "TestOutput", "physics", "lattice_data", "LatticeData", "potentials", "custom_potential_section", "CustomPotentialSection", "CustomPotentialSectionDefinition", "CustomSectionToken", "SectionString", "definitions", "potential", "potential_definition", "sections", "_sections", "global_system_parameter", "GlobalSystemParameter", "GlobalSystemParameterDefinition", "section", "lattice", "LatticeSection", "LatticeSectionDefinition", "section", "mesh_information", "MeshInformationSection", "MeshInformationSectionDefinition", "section", "occupation", "OccupationSection", "OccupationSectionDefinition", "section", "reference_system", "ReferenceSystemSection", "ReferenceSystemSectionDefinition", "section", "sites", "SitesSection", "SitesSectionDefinition", "section", "types", "TypesSection", "TypesSectionDefinition", "section", "io_data", "BaseIoData", "ReadIoData", "WriteIoData", "unique_mapping", "potential_definitions", "ASEArraySectionDefinition", "PotSectionDefinition", "PotValueDefinition", "PotentialDefinition", "Separator", "potential_sections", "ASEArraySection", "PotentialSection", "UniqueListSection", "potentials", "Potential", "test", "init_tests", "TestCase", "test_custom_section", "TestCustomSection", "test_potential", "TestPotential", "test_structure", "TestStructure", "sprkkr", "atomic_types", "AtomicType", "calculator", "FilenameTemplator", "SPRKKR", "occupations", "Occupation", "radial_meshes", "ExponentialMesh", "Mesh", "reference_systems", "ReferenceSystem", "sites", "Site", "sprkkr_atoms", "SPRKKRAtoms", "structure", "AtomData", "LayerData", "floatjm", "structure_file_to_atoms", "sysfile", "sysfile_content", "write_sysfile", "test", "init_tests", "TestCase", "test_calculator", "CalculatorTest", "test_sites", "SitesTest", "test_sprkkr_atoms", "SPRKKRAtomsTest", "test_sysfile", "SysfileTest", "tools", "a2s_visualise_in_struct", "visualise", "version", "ase2sprkkr", "More about installing of the ASE2SPRKKR package", "ASE2SPRKKR software package", "Installation of the package using package managers", "Usefull links", "ASE2SPR-KKR\u2019s philosophy for the developers", "How to use ASE2SPRKKR"], "terms": {"provid": [0, 1, 23, 112, 136, 146, 148, 149, 166, 167, 171, 215, 217, 240, 247, 275, 277, 279], "an": [0, 15, 17, 19, 20, 21, 23, 26, 32, 34, 37, 38, 40, 41, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 81, 88, 99, 106, 108, 110, 131, 136, 139, 141, 143, 146, 148, 149, 162, 164, 170, 171, 173, 213, 215, 216, 217, 223, 226, 228, 230, 232, 235, 238, 240, 242, 246, 247, 248, 249, 260, 262, 264, 266, 268, 274, 275, 276, 277, 278, 279], "interfac": [0, 1, 102, 238, 275, 277], "allow": [0, 4, 34, 51, 133, 212, 214, 275, 277, 278, 279], "spr": [0, 1, 17, 113, 114, 123, 130, 131, 132, 144, 150, 155, 168, 174, 222, 223, 233, 236, 238, 241, 243, 249, 269, 274, 275, 276, 277, 278, 279], "kkr": [0, 1, 17, 113, 114, 123, 130, 131, 132, 144, 150, 155, 168, 174, 222, 223, 233, 236, 238, 241, 243, 249, 269, 274, 275, 276, 277, 279], "electron": [0, 1, 235, 249, 275, 277], "structur": [0, 1, 4, 6, 133, 212, 233, 238, 249, 251, 252, 253, 254, 273, 275, 277, 279], "calcul": [0, 1, 131, 152, 153, 155, 156, 158, 159, 233, 237, 238, 249, 273, 275, 277, 278], "within": [0, 275, 277], "atom": [0, 4, 6, 7, 8, 9, 159, 167, 170, 180, 184, 192, 196, 200, 210, 213, 219, 220, 221, 223, 234, 235, 238, 239, 240, 242, 246, 247, 248, 249, 251, 254, 256, 257, 275, 277, 278], "simul": [0, 275, 277], "environ": [0, 132, 238, 274, 275, 276, 277, 279], "abbrevi": [0, 275, 277], "ASE": [0, 1, 6, 184, 192, 200, 213, 219, 223, 238, 247, 249, 254, 275, 277, 278, 279], "python": [0, 30, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 74, 82, 83, 84, 85, 173, 274, 275, 276, 277, 278, 279], "tool": [0, 270, 271, 273, 274, 275, 276, 277], "integr": [0, 275, 277], "variou": [0, 29, 42, 90, 131, 166, 167, 238, 275, 277, 278, 279], "onlin": [0, 274, 275, 276, 277], "version": [0, 134, 238, 248, 273, 274, 275, 276, 277, 278, 279], "thi": [0, 1, 2, 11, 12, 13, 15, 20, 21, 22, 23, 24, 30, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 84, 103, 112, 131, 133, 134, 135, 136, 144, 145, 146, 147, 148, 149, 155, 156, 157, 158, 165, 166, 167, 170, 171, 173, 177, 180, 181, 184, 185, 189, 192, 193, 197, 200, 201, 205, 212, 214, 215, 216, 217, 218, 220, 223, 236, 238, 247, 248, 249, 250, 270, 275, 277, 278, 279], "github": [0, 274, 275, 276, 277, 279], "repositori": [0, 274, 275, 276, 277, 279], "manual": [0, 223, 275, 277, 278, 279], "The": [0, 4, 6, 12, 15, 18, 20, 21, 22, 23, 24, 28, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 83, 84, 92, 95, 98, 99, 100, 103, 112, 125, 126, 127, 129, 130, 131, 135, 136, 146, 147, 148, 149, 156, 158, 170, 171, 172, 173, 188, 193, 196, 204, 213, 214, 215, 216, 217, 219, 220, 221, 237, 238, 240, 246, 247, 249, 274, 275, 276, 279], "simplest": [0, 274, 276], "wai": [0, 21, 23, 83, 131, 136, 146, 148, 149, 171, 215, 217, 238, 274, 276, 278], "i": [0, 4, 7, 8, 12, 14, 15, 17, 18, 20, 21, 22, 23, 24, 25, 26, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 70, 74, 81, 83, 88, 92, 94, 95, 96, 97, 100, 102, 103, 106, 112, 131, 132, 134, 135, 136, 139, 145, 146, 147, 148, 149, 156, 158, 162, 169, 170, 171, 172, 173, 175, 181, 184, 185, 189, 192, 193, 197, 200, 201, 205, 209, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 226, 235, 238, 240, 247, 249, 250, 260, 270, 274, 276, 278, 279], "them": [0, 1, 13, 131, 178, 240, 249, 274, 276], "either": [0, 13, 15, 20, 21, 22, 47, 58, 131, 184, 192, 200, 220, 235, 238, 240, 247, 274, 276, 278, 279], "c": [0, 15, 237, 238, 274, 276, 279], "In": [0, 13, 17, 30, 102, 170, 218, 238, 274, 276, 278, 279], "some": [0, 24, 47, 61, 62, 88, 106, 139, 146, 162, 184, 192, 200, 210, 220, 226, 238, 249, 260, 274, 276, 278, 279], "system": [0, 181, 197, 221, 247, 274, 276, 279], "util": [0, 250, 274, 276, 278], "python3": [0, 274, 276], "call": [0, 65, 131, 180, 184, 192, 200, 220, 223, 238, 249, 274, 276, 278, 279], "pip3": [0, 274, 276], "If": [0, 4, 7, 15, 20, 21, 22, 23, 24, 47, 70, 83, 88, 97, 106, 112, 131, 132, 135, 136, 139, 146, 147, 148, 149, 156, 162, 171, 184, 192, 200, 215, 216, 217, 219, 220, 226, 235, 238, 240, 247, 249, 260, 274, 276, 278, 279], "you": [0, 223, 274, 276, 279], "can": [0, 3, 6, 17, 20, 21, 22, 23, 24, 42, 44, 45, 47, 50, 51, 52, 54, 56, 62, 65, 81, 83, 84, 93, 99, 103, 112, 131, 135, 136, 146, 147, 148, 149, 156, 158, 169, 171, 184, 192, 193, 200, 214, 215, 216, 217, 219, 220, 223, 235, 238, 239, 240, 247, 249, 250, 274, 276, 278, 279], "linux": [0, 274, 276], "distribut": [0, 274, 276], "e": [0, 6, 8, 12, 14, 15, 17, 18, 19, 28, 47, 52, 56, 61, 62, 63, 65, 74, 83, 131, 156, 169, 172, 173, 180, 181, 184, 185, 189, 192, 193, 197, 200, 201, 205, 214, 219, 220, 221, 223, 235, 237, 238, 240, 247, 249, 274, 276, 278, 279], "g": [0, 6, 12, 17, 19, 47, 52, 56, 61, 62, 63, 65, 83, 131, 156, 180, 184, 192, 200, 219, 220, 221, 223, 235, 237, 238, 240, 249, 274, 276, 278, 279], "debian": [0, 274, 276], "ubuntu": [0, 274, 276], "apt": [0, 274, 276], "zypper": [0, 274, 276], "opensus": [0, 274, 276], "For": [0, 181, 185, 189, 193, 197, 201, 205, 208, 213, 214, 236, 238, 249, 274, 276, 279], "instruct": [0, 274, 276], "see": [0, 24, 47, 62, 82, 83, 131, 134, 167, 181, 185, 189, 193, 197, 201, 205, 213, 214, 219, 237, 238, 240, 249, 270, 274, 276, 278, 279], "anaconda": [0, 274, 276], "http": [0, 236, 238, 274, 276, 278, 279], "doc": [0, 245, 270, 274, 276, 278], "com": [0, 274, 276, 279], "howev": [0, 21, 23, 24, 26, 43, 44, 45, 47, 48, 49, 52, 53, 54, 55, 58, 59, 62, 64, 65, 66, 103, 112, 136, 146, 148, 149, 158, 171, 173, 215, 217, 247, 249, 274, 276, 278, 279], "user": [0, 16, 20, 21, 22, 23, 24, 43, 47, 54, 60, 62, 65, 99, 135, 136, 146, 147, 148, 149, 171, 215, 216, 217, 274, 276, 279], "unexperienc": [0, 274, 276], "simpler": [0, 274, 276], "recommend": [0, 274, 276], "do": [0, 15, 24, 30, 47, 118, 238, 273, 274, 276, 279], "want": [0, 33, 103, 158, 274, 276, 279], "public": [0, 274, 276], "develop": [0, 156, 238, 274, 275, 276], "3": [0, 4, 30, 63, 112, 167, 238, 274, 276, 279], "7": [0, 88, 106, 139, 162, 167, 226, 236, 260, 274, 276], "check": [0, 15, 31, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 173, 240, 274, 276, 279], "ase": [0, 6, 236, 238, 248, 249, 274, 276, 279], "mendeleev": [0, 235, 274, 276], "spglib": [0, 6, 7, 8, 9, 249, 273, 274, 276], "pypars": [0, 21, 29, 30, 31, 32, 35, 47, 169, 172, 274, 276, 278], "clone": [0, 274, 276, 279], "checkout": [0, 274, 276], "origin": [0, 35, 274, 276], "releas": [0, 274, 276], "first": [0, 15, 17, 20, 50, 97, 112, 223, 238, 240, 242, 274, 276, 278, 279], "line": [0, 55, 57, 72, 79, 217, 238, 251, 274, 276, 278, 279], "fetch": [0, 274, 276], "second": [0, 112, 274, 276, 278], "one": [0, 8, 21, 23, 33, 43, 50, 51, 98, 112, 135, 136, 146, 147, 148, 149, 171, 180, 184, 192, 200, 210, 214, 215, 217, 220, 238, 239, 240, 249, 250, 274, 276, 278, 279], "out": [0, 103, 131, 158, 238, 274, 276, 279], "product": [0, 274, 276], "current": [0, 103, 158, 238, 247, 274, 276, 278, 279], "earlier": [0, 274, 276, 279], "download": [0, 274, 276], "run": [0, 103, 131, 134, 159, 238, 270, 274, 275, 276], "altern": [0, 15, 20, 21, 22, 23, 24, 75, 135, 136, 146, 147, 148, 149, 171, 215, 216, 217, 238, 274, 276], "master": [0, 274, 276], "branch": [0, 274, 276], "bleed": [0, 274, 276], "edg": [0, 274, 276], "just": [0, 6, 11, 12, 20, 21, 22, 23, 24, 47, 58, 64, 65, 70, 94, 146, 170, 172, 209, 219, 238, 249, 255, 272, 274, 276, 278, 279], "add": [0, 15, 25, 31, 32, 47, 62, 92, 238, 240, 274, 276, 279], "src": [0, 94, 274, 276], "directori": [0, 103, 131, 238, 274, 276], "your": [0, 274, 276, 279], "pythonpath": [0, 274, 276], "describ": [0, 7, 8, 21, 131, 134, 135, 136, 147, 214, 216, 233, 249, 274, 276, 278, 279], "below": [0, 274, 276], "To": [0, 12, 21, 44, 249, 274, 276, 278, 279], "have": [0, 6, 23, 28, 45, 47, 61, 62, 88, 92, 106, 108, 110, 133, 136, 139, 141, 143, 146, 147, 148, 149, 162, 164, 171, 212, 215, 217, 226, 228, 230, 232, 238, 249, 260, 262, 264, 266, 268, 274, 276, 279], "built": [0, 274, 276, 278], "follow": [0, 92, 236, 238, 274, 276, 278, 279], "m": [0, 49, 167, 274, 276], "upgrad": [0, 274, 276], "possibl": [0, 47, 52, 56, 66, 101, 112, 131, 149, 249, 274, 276, 278, 279], "alreadi": [0, 33, 249, 274, 276, 279], "wide": [0, 274, 276], "activ": [0, 274, 276], "virtual": [0, 249, 274, 276], "l": [0, 274, 276], "dist": [0, 274, 276], "whl": [0, 274, 276], "sort": [0, 274, 276], "tail": [0, 274, 276], "n": [0, 102, 134, 135, 147, 171, 172, 173, 214, 216, 235, 240, 242, 274, 276], "1": [0, 6, 28, 51, 63, 65, 112, 167, 240, 242, 247, 274, 276, 278, 279], "all": [0, 12, 15, 21, 23, 47, 52, 55, 56, 103, 146, 156, 172, 178, 223, 237, 238, 240, 249, 274, 276, 279], "stuff": [0, 131, 146, 165, 274, 276, 278], "after": [0, 15, 21, 23, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 132, 146, 173, 184, 192, 200, 219, 220, 274, 276, 279], "make": [0, 15, 89, 100, 101, 112, 240, 249, 274, 276, 279], "clean": [0, 20, 240, 255, 274, 276], "up": [0, 20, 55, 169, 172, 255, 274, 276, 278], "publish": [0, 274, 276], "io": [0, 274, 276, 278], "ar": [0, 6, 7, 13, 15, 17, 18, 19, 20, 21, 22, 23, 24, 34, 47, 51, 61, 81, 82, 88, 106, 112, 130, 131, 135, 139, 145, 146, 147, 156, 162, 169, 170, 171, 207, 210, 214, 216, 218, 219, 223, 226, 237, 238, 240, 243, 249, 260, 274, 276, 278, 279], "open": [0, 14, 131, 238, 274, 276], "index": [0, 91, 97, 112, 236, 247, 274, 275, 276], "html": [0, 238, 274, 276], "offlin": [0, 274, 276], "contain": [0, 2, 11, 12, 13, 14, 15, 16, 17, 18, 20, 21, 23, 24, 28, 42, 99, 100, 130, 131, 133, 134, 136, 144, 145, 146, 148, 149, 156, 157, 165, 166, 170, 171, 177, 180, 181, 184, 185, 188, 189, 192, 193, 196, 197, 200, 201, 204, 205, 210, 212, 213, 214, 215, 217, 219, 220, 221, 223, 236, 238, 248, 250, 254, 255, 274, 276, 278, 279], "part": [0, 14, 19, 21, 103, 145, 147, 169, 274, 276, 278], "gener": [0, 4, 21, 24, 165, 180, 184, 192, 200, 218, 220, 238, 249, 274, 275, 276, 278], "docstr": [0, 274, 276], "regener": [0, 274, 276], "sphinx": [0, 274, 276], "toolbox": [0, 274, 276], "pandoc": [0, 274, 276], "readm": [0, 274, 276], "md": [0, 274, 276], "need": [0, 95, 210, 238, 274, 276, 278, 279], "offici": [0, 274, 276], "miss": [0, 20, 21, 22, 24, 135, 147, 216, 274, 276], "attribut": [0, 15, 21, 23, 29, 42, 47, 65, 112, 115, 117, 119, 121, 123, 146, 175, 238, 249, 274, 276, 279], "when": [0, 4, 21, 22, 23, 24, 65, 88, 106, 108, 110, 139, 141, 143, 146, 162, 164, 184, 192, 200, 220, 226, 228, 230, 232, 238, 240, 249, 260, 262, 264, 266, 268, 274, 276, 278, 279], "so": [0, 20, 21, 22, 24, 94, 131, 133, 135, 147, 165, 193, 210, 212, 214, 216, 220, 237, 240, 249, 274, 276, 278, 279], "till": [0, 274, 276], "pullrequest": [0, 274, 276, 279], "correct": [0, 21, 256, 274, 276, 279], "behavior": [0, 21, 22, 23, 146, 274, 276], "merg": [0, 15, 112, 274, 276], "pleas": [0, 249, 255, 274, 276, 279], "fork": [0, 274, 276], "lokik": [0, 274, 276], "feel": [0, 274, 276, 279], "free": [0, 274, 276, 279], "pull": [0, 274, 276], "request": [0, 238, 274, 276, 279], "post": [0, 274, 276, 279], "issu": [0, 274, 276, 279], "fullname": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 47, 48, 49, 50, 52, 53, 55, 56, 58, 59, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 92, 94, 95, 96, 97, 98, 100, 101, 104, 105, 106, 107, 108, 109, 110, 111, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 154, 156, 157, 160, 161, 162, 163, 164, 165, 166, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 181, 183, 185, 187, 188, 189, 191, 193, 195, 196, 197, 199, 201, 203, 204, 205, 207, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 236, 237, 238, 239, 240, 241, 244, 246, 248, 249, 250, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 278, 279], "descript": [1, 2, 3, 5, 10, 11, 13, 19, 20, 21, 22, 23, 24, 27, 29, 42, 87, 90, 98, 101, 104, 105, 107, 109, 111, 113, 114, 115, 117, 119, 121, 123, 130, 133, 135, 136, 137, 138, 140, 142, 144, 145, 147, 150, 151, 154, 157, 160, 161, 163, 165, 166, 168, 169, 171, 174, 175, 177, 179, 183, 187, 191, 195, 199, 203, 207, 212, 216, 218, 222, 224, 225, 227, 229, 231, 233, 234, 236, 239, 241, 244, 246, 248, 250, 255, 258, 259, 261, 263, 265, 267, 269, 270, 272], "root": [1, 12, 24], "packag": [1, 2, 3, 10, 89, 90, 144, 177, 249, 272, 277, 279], "import": [1, 89, 178, 247, 279], "few": [1, 22, 29, 64, 238, 278], "most": [1, 88, 106, 139, 162, 226, 247, 260, 279], "us": [1, 4, 7, 10, 15, 20, 21, 22, 23, 24, 28, 29, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 87, 88, 90, 105, 106, 108, 110, 112, 123, 131, 135, 136, 138, 139, 141, 143, 145, 146, 147, 148, 149, 156, 157, 161, 162, 164, 171, 173, 177, 180, 184, 192, 200, 207, 208, 210, 215, 216, 217, 220, 221, 225, 226, 228, 230, 232, 233, 235, 236, 237, 238, 240, 241, 247, 248, 249, 250, 255, 259, 260, 262, 264, 266, 268, 275, 277, 278], "object": [1, 6, 8, 12, 14, 15, 18, 19, 20, 21, 22, 23, 24, 30, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 81, 88, 94, 99, 100, 106, 111, 112, 116, 118, 120, 122, 125, 126, 127, 129, 130, 131, 135, 136, 139, 146, 147, 148, 149, 155, 156, 162, 166, 170, 171, 172, 173, 176, 180, 184, 192, 200, 207, 208, 209, 215, 216, 217, 219, 220, 221, 222, 223, 226, 238, 240, 247, 249, 251, 254, 256, 260, 278], "shortcut": [1, 238], "modul": [1, 2, 10, 11, 13, 19, 29, 42, 87, 90, 98, 101, 104, 105, 107, 109, 111, 113, 114, 115, 117, 119, 121, 123, 130, 133, 137, 138, 140, 142, 144, 145, 150, 151, 154, 157, 160, 161, 163, 165, 166, 168, 169, 174, 175, 177, 178, 179, 183, 187, 191, 195, 199, 203, 207, 212, 218, 222, 224, 225, 227, 229, 231, 233, 234, 239, 241, 244, 246, 248, 250, 255, 258, 259, 261, 263, 265, 267, 269, 273, 275, 278], "ase2sprkkr": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 276, 277, 278], "wrapper": [2, 5], "routin": [2, 27, 29, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 87, 90, 103, 105, 138, 161, 168, 173, 225, 249, 259, 278], "other": [2, 13, 15, 47, 50, 112, 146, 156, 181, 185, 189, 193, 197, 201, 205, 213, 214, 221, 238, 249, 278, 279], "physic": [2, 166, 167, 273], "code": [2, 89, 255, 275, 279], "librari": [2, 235], "bind": [3, 4, 5, 6, 7, 8, 9, 197, 273], "determin": [3, 7, 12, 21, 83, 88, 106, 131, 134, 139, 162, 226, 235, 238, 240, 247, 249, 260, 278, 279], "ideal": 3, "posit": [3, 20, 21, 22, 24, 47, 61, 135, 146, 147, 192, 200, 216, 238, 247, 249], "empti": [3, 4, 52, 238, 279], "sphere": [3, 4, 238], "fill": [3, 4], "gap": 3, "primit": [3, 4, 5, 167, 279], "cell": [3, 4, 5, 6, 167, 184, 238, 249, 279], "function": [3, 5, 16, 19, 20, 27, 29, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 87, 90, 92, 97, 99, 103, 123, 130, 133, 156, 158, 173, 177, 180, 184, 192, 193, 200, 207, 211, 212, 214, 220, 223, 237, 238, 250, 255, 270, 279], "es_find": [4, 273], "extend": [4, 249], "fals": [4, 6, 7, 8, 12, 14, 15, 20, 21, 22, 23, 24, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 81, 83, 100, 103, 112, 131, 132, 135, 136, 146, 147, 148, 149, 171, 173, 215, 216, 217, 238, 240, 249, 279], "overlap_matrix": 4, "0": [4, 6, 28, 51, 85, 103, 112, 238, 240, 247, 254, 278, 279], "14": [4, 28, 167], "radii_ratios_map": 4, "none": [4, 6, 7, 8, 12, 14, 15, 16, 17, 18, 20, 21, 22, 23, 24, 32, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 70, 93, 99, 100, 103, 112, 131, 134, 135, 136, 146, 147, 148, 149, 156, 170, 171, 173, 180, 184, 188, 192, 196, 200, 204, 215, 216, 217, 219, 220, 221, 223, 235, 238, 240, 247, 249, 279], "max_es_overlap": 4, "26": [4, 167], "adjust_overlap": 4, "36": [4, 167], "max_es_radiu": 4, "min_es_radiu": 4, "2": [4, 49, 63, 65, 85, 112, 167, 217, 254, 279], "symmetrize_threshold": 4, "8": [4, 167, 236, 279], "max_iter": 4, "grid": 4, "arrai": [4, 15, 42, 47, 63, 65, 88, 97, 106, 112, 139, 156, 162, 213, 219, 226, 247, 249, 260, 273, 278, 279], "4": [4, 49, 112, 131, 167, 236, 238, 279], "192": [4, 167], "verbos": [4, 279], "sourc": [4, 6, 7, 8, 9, 12, 14, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 28, 30, 31, 32, 33, 35, 39, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 70, 74, 81, 83, 85, 88, 89, 91, 92, 93, 94, 95, 96, 97, 99, 100, 102, 103, 106, 108, 110, 112, 124, 128, 131, 132, 134, 135, 136, 139, 141, 143, 146, 147, 148, 149, 152, 153, 155, 156, 158, 159, 162, 164, 167, 170, 171, 172, 173, 178, 180, 181, 184, 185, 188, 189, 192, 193, 196, 197, 200, 201, 204, 205, 208, 209, 210, 211, 213, 214, 215, 216, 217, 219, 220, 221, 223, 226, 228, 230, 232, 235, 237, 238, 240, 242, 243, 245, 247, 249, 251, 252, 253, 254, 256, 257, 260, 262, 264, 266, 268, 271, 275, 279], "comput": [4, 5, 95, 156, 233, 240, 243, 249, 275], "optim": 4, "space": [4, 149, 216], "paramet": [4, 6, 7, 8, 12, 14, 15, 16, 17, 20, 21, 22, 23, 24, 28, 34, 36, 37, 38, 40, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 70, 83, 100, 103, 112, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 128, 130, 131, 132, 134, 135, 136, 145, 146, 147, 148, 149, 156, 158, 171, 173, 180, 181, 184, 185, 189, 192, 193, 197, 200, 201, 205, 213, 214, 215, 216, 217, 219, 220, 221, 223, 235, 238, 240, 242, 247, 249, 254, 257, 275, 278], "bool": [4, 6, 8, 14, 15, 17, 20, 23, 42, 44, 45, 46, 47, 49, 51, 52, 53, 55, 56, 57, 58, 59, 61, 64, 66, 67, 69, 75, 84, 112, 131, 132, 134, 136, 146, 148, 149, 171, 173, 213, 214, 215, 217, 223, 238, 247, 249, 273], "true": [4, 14, 15, 17, 20, 21, 22, 23, 24, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 100, 112, 131, 132, 134, 135, 136, 146, 147, 148, 149, 171, 172, 173, 197, 213, 214, 215, 216, 217, 223, 238, 240, 249, 279], "site": [4, 200, 201, 202, 210, 234, 235, 239, 240, 242, 249, 273, 279], "float": [4, 6, 28, 45, 59, 60, 65, 68, 75, 82, 84, 156, 240, 242, 249, 254], "numpi": [4, 43, 47, 74, 75, 88, 106, 139, 162, 226, 260, 278], "ndarrai": [4, 112], "todo": [4, 245, 250, 255], "option": [4, 6, 8, 11, 12, 15, 19, 20, 21, 23, 28, 38, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 83, 99, 103, 114, 131, 133, 135, 136, 146, 147, 148, 149, 169, 170, 171, 173, 212, 214, 215, 217, 236, 238, 240, 249, 273, 278, 279], "dict": [4, 6, 15, 70, 83, 112, 156, 209, 238, 240, 247, 249], "str": [4, 12, 15, 16, 17, 20, 21, 22, 23, 24, 28, 34, 36, 37, 38, 40, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 70, 83, 84, 100, 112, 131, 132, 134, 135, 136, 146, 147, 148, 149, 156, 171, 173, 188, 193, 196, 204, 213, 214, 215, 216, 217, 220, 221, 223, 235, 238, 240, 254, 257], "defin": [4, 12, 18, 20, 21, 60, 92, 100, 131, 175, 236, 246, 275, 278], "radii": 4, "given": [4, 7, 8, 15, 16, 17, 20, 23, 25, 28, 31, 32, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 70, 74, 83, 84, 88, 99, 100, 106, 112, 131, 132, 136, 139, 146, 148, 149, 156, 162, 167, 171, 173, 193, 211, 214, 215, 217, 219, 220, 226, 235, 238, 240, 243, 247, 249, 254, 256, 260, 278, 279], "chemic": [4, 235, 240, 247, 279], "element": [4, 25, 29, 47, 83, 235, 240, 247], "automat": [4, 45, 88, 106, 139, 162, 226, 240, 249, 260, 278, 279], "max": 4, "overlap": 4, "maximum": 4, "radiu": 4, "shpere": 4, "minimum": 4, "symetrize_threshold": 4, "threshold": [4, 249], "symmetr": [4, 249], "int": [4, 53, 66, 74, 75, 82, 83, 84, 103, 112, 158, 235, 238, 240, 242, 249, 254], "number": [4, 6, 8, 28, 65, 88, 94, 106, 112, 139, 162, 167, 180, 184, 192, 200, 220, 221, 226, 235, 238, 240, 247, 249, 254, 260, 279], "iter": [4, 112, 156, 211, 238, 278, 279], "find": [4, 15, 17, 112, 238, 240], "algorithm": 4, "output": [4, 28, 47, 52, 56, 81, 101, 103, 131, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 168, 238, 273, 275, 279], "symmetri": [5, 6, 167, 247, 249, 279], "atomic_numb": [6, 7, 8, 235, 249], "consider_old": [6, 7, 8, 249], "precis": 6, "1e": [6, 249], "05": [6, 249], "angular_precis": 6, "return": [6, 7, 8, 12, 14, 15, 16, 18, 20, 21, 22, 24, 28, 34, 36, 37, 38, 40, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 70, 74, 81, 83, 93, 97, 99, 100, 103, 112, 124, 128, 131, 132, 156, 158, 167, 173, 184, 192, 193, 200, 211, 214, 220, 238, 240, 247, 256, 278, 279], "spacegroup": [6, 7, 249], "suit": 6, "list": [6, 8, 33, 92, 94, 112, 131, 133, 156, 188, 196, 204, 210, 212, 221, 238, 249], "overriden": [6, 47, 65, 238], "forc": [6, 20, 238], "partiali": [6, 279], "break": 6, "real": [6, 42, 56, 57, 84, 85, 235, 273], "ones": [6, 74, 75, 184, 192, 200, 220, 279], "thei": [6, 19, 20, 21, 22, 24, 88, 101, 103, 106, 112, 133, 135, 139, 147, 158, 162, 169, 184, 192, 200, 212, 216, 220, 226, 238, 260, 278, 279], "treat": 6, "label": [6, 238], "equival": [6, 7, 8, 111, 112, 247, 249], "class": [6, 7, 8, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 29, 30, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 74, 75, 82, 83, 84, 87, 88, 90, 91, 93, 98, 99, 100, 101, 102, 103, 105, 106, 107, 108, 109, 110, 111, 112, 130, 131, 133, 134, 135, 136, 138, 139, 140, 141, 142, 143, 145, 146, 147, 148, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 161, 162, 163, 164, 166, 167, 169, 170, 171, 172, 173, 179, 180, 181, 183, 184, 185, 187, 188, 189, 191, 192, 193, 195, 196, 197, 199, 200, 201, 203, 204, 205, 207, 208, 209, 210, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 225, 226, 227, 228, 229, 230, 231, 232, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 278, 279], "toler": 6, "unprecis": 6, "angular": 6, "coordin": 6, "dataset": 6, "type": [6, 8, 12, 14, 15, 16, 21, 23, 28, 34, 36, 37, 38, 40, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 99, 100, 103, 124, 128, 131, 136, 146, 148, 149, 156, 158, 167, 170, 171, 173, 184, 192, 193, 200, 204, 205, 206, 210, 214, 215, 216, 217, 220, 221, 235, 238, 239, 240, 247, 249, 254, 275, 278], "creat": [7, 12, 14, 15, 16, 17, 18, 20, 21, 23, 24, 26, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 81, 88, 106, 108, 110, 124, 128, 131, 136, 139, 141, 143, 146, 148, 149, 162, 164, 171, 173, 180, 184, 188, 192, 196, 200, 204, 210, 211, 215, 217, 219, 220, 221, 223, 226, 228, 230, 232, 238, 240, 247, 249, 251, 254, 260, 262, 264, 266, 268, 278, 279], "compute_spacegroup": [7, 273], "precomput": 7, "taken": 7, "from": [7, 8, 15, 16, 17, 20, 22, 23, 24, 26, 43, 47, 50, 54, 62, 65, 81, 83, 85, 88, 89, 93, 99, 106, 112, 131, 133, 134, 136, 139, 145, 146, 148, 149, 156, 162, 171, 178, 184, 192, 196, 200, 211, 212, 215, 217, 219, 220, 221, 223, 226, 235, 238, 249, 251, 254, 260, 275, 278, 279], "otherwis": [7, 14, 15, 17, 83, 131, 156, 223, 238, 279], "addit": [7, 17, 223, 238, 249], "same": [8, 63, 88, 95, 102, 106, 112, 131, 139, 145, 162, 226, 237, 238, 240, 247, 249, 260, 278, 279], "occup": [8, 192, 193, 194, 247, 249, 273, 279], "etc": [8, 12, 18, 21, 156, 180, 184, 192, 200, 220, 221, 237, 238, 278], "uniquevaluesmap": [8, 111, 211, 273], "sprkkr": [10, 14, 100, 114, 131, 133, 168, 174, 212, 218, 234, 235, 236, 237, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 273, 275, 279], "common": [11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 130, 131, 133, 134, 135, 136, 138, 139, 140, 141, 142, 143, 145, 146, 147, 148, 149, 151, 152, 154, 155, 157, 158, 161, 162, 163, 164, 169, 170, 171, 173, 179, 180, 181, 183, 184, 185, 187, 188, 189, 191, 192, 193, 195, 196, 197, 199, 200, 201, 203, 204, 205, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 225, 226, 227, 228, 229, 230, 231, 232, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 273, 275, 279], "hierarchi": [11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 29, 30, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 87, 88, 90, 91, 93, 98, 99, 100, 101, 102, 103, 105, 106, 107, 108, 109, 110, 111, 112, 130, 131, 133, 134, 135, 136, 138, 139, 140, 141, 142, 143, 145, 146, 147, 148, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 161, 162, 163, 164, 166, 167, 169, 170, 171, 172, 173, 179, 180, 181, 183, 184, 185, 187, 188, 189, 191, 192, 193, 195, 196, 197, 199, 200, 201, 203, 204, 205, 207, 208, 209, 210, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 225, 226, 227, 228, 229, 230, 231, 232, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268], "baseconfigur": [11, 13, 14, 15, 16, 17, 18, 19, 98, 99, 100, 130, 131, 169, 170, 179, 180, 183, 184, 187, 188, 191, 192, 195, 196, 199, 200, 203, 204, 218, 219, 220, 221, 222, 223, 273], "base": [11, 12, 15, 17, 20, 21, 22, 45, 46, 47, 65, 112, 159, 208, 243, 275], "both": [11, 19, 42, 278, 279], "configur": [11, 12, 13, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 42, 47, 52, 56, 98, 99, 130, 131, 135, 136, 146, 147, 148, 149, 171, 215, 216, 217, 223, 275], "valu": [11, 12, 13, 14, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 28, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 68, 81, 84, 85, 95, 98, 99, 100, 103, 112, 114, 124, 128, 131, 133, 135, 136, 146, 147, 148, 149, 156, 158, 170, 171, 173, 180, 184, 192, 196, 197, 200, 212, 214, 215, 216, 217, 219, 220, 221, 223, 235, 237, 238, 240, 278, 279], "section": [11, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 24, 40, 41, 61, 99, 100, 124, 125, 126, 127, 128, 129, 133, 134, 135, 146, 147, 169, 170, 171, 172, 173, 178, 179, 180, 181, 183, 184, 185, 187, 188, 189, 191, 192, 193, 195, 196, 197, 199, 200, 201, 203, 204, 205, 210, 212, 213, 214, 216, 217, 218, 219, 220, 221, 223, 238, 273, 278, 279], "base_configur": [12, 13, 14, 15, 16, 17, 18, 98, 99, 100, 130, 131, 169, 170, 179, 180, 183, 184, 187, 188, 191, 192, 195, 196, 199, 200, 203, 204, 218, 219, 220, 221, 222, 223, 273], "definit": [12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 47, 99, 100, 113, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 131, 133, 145, 170, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 212, 213, 215, 216, 219, 220, 221, 223, 238, 241, 242, 247, 273, 278, 279], "constructor": [12, 14, 15, 16, 17, 18, 20, 21, 22, 23, 24, 30, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 88, 91, 93, 99, 100, 102, 103, 106, 108, 110, 112, 131, 134, 135, 136, 139, 141, 143, 146, 147, 148, 149, 152, 153, 155, 156, 158, 159, 162, 164, 167, 170, 171, 172, 173, 180, 181, 184, 185, 188, 189, 192, 193, 196, 197, 200, 201, 204, 205, 208, 209, 210, 213, 214, 215, 216, 217, 219, 220, 221, 223, 226, 228, 230, 232, 235, 237, 238, 240, 242, 243, 245, 247, 249, 251, 252, 260, 262, 264, 266, 268, 279], "__init__": [12, 14, 15, 16, 17, 18, 20, 21, 22, 23, 24, 30, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 88, 91, 93, 99, 100, 102, 103, 106, 108, 110, 112, 131, 134, 135, 136, 139, 141, 143, 146, 147, 148, 149, 152, 153, 155, 156, 158, 159, 162, 164, 167, 170, 171, 172, 173, 180, 181, 184, 185, 188, 189, 192, 193, 196, 197, 200, 201, 204, 205, 208, 209, 210, 213, 214, 215, 216, 217, 219, 220, 221, 223, 226, 228, 230, 232, 235, 237, 238, 240, 242, 243, 245, 247, 249, 251, 252, 260, 262, 264, 266, 268], "set": [12, 14, 15, 20, 21, 22, 23, 24, 35, 43, 44, 45, 47, 48, 49, 50, 52, 53, 54, 55, 58, 59, 62, 63, 64, 65, 66, 81, 83, 89, 100, 112, 135, 136, 146, 147, 148, 149, 156, 171, 173, 180, 184, 192, 196, 200, 215, 216, 217, 219, 220, 221, 223, 238, 240, 247, 249, 275, 278], "configuration_definit": [12, 16, 18, 20, 21, 22, 23, 24, 25, 26, 133, 134, 135, 136, 145, 146, 147, 148, 149, 169, 171, 179, 181, 183, 185, 187, 189, 191, 193, 195, 197, 199, 201, 203, 205, 212, 213, 214, 215, 216, 217, 273, 278], "basedefinit": [12, 16, 19, 20, 22, 23, 24, 133, 134, 135, 136, 145, 146, 147, 148, 149, 169, 171, 179, 181, 183, 185, 187, 189, 191, 193, 195, 197, 199, 201, 203, 205, 212, 213, 214, 215, 216, 217, 273], "item": [12, 20, 47, 62, 97, 112, 147, 210, 214, 216, 240, 242], "own": [12, 15, 17, 99, 100, 170, 247, 279], "_definit": 12, "": [12, 15, 20, 21, 23, 112, 146, 156, 210, 213, 235, 238], "instanc": [12, 19, 21, 24, 65, 67, 68, 69, 71, 72, 73, 76, 77, 78, 79, 80, 81, 83, 86, 88, 106, 108, 110, 112, 139, 141, 143, 162, 164, 216, 226, 228, 230, 232, 260, 262, 264, 266, 268], "_contain": 12, "parent": [12, 16, 92, 99], "hold": [12, 13, 44, 131, 156, 170, 222, 223, 249, 278, 279], "configuration_contain": [12, 14, 15, 16, 17, 18, 100, 130, 131, 179, 180, 183, 184, 187, 188, 191, 192, 195, 196, 199, 200, 203, 204, 218, 219, 220, 221, 222, 223, 273, 278], "configurationcontain": [12, 13, 14, 16, 17, 18, 100, 130, 131, 179, 180, 183, 184, 187, 188, 191, 192, 195, 196, 199, 200, 203, 204, 218, 219, 220, 221, 222, 223, 273, 278], "_get_path": 12, "include_root": 12, "dot": [12, 238, 279], "delimit": [12, 20, 21, 22, 24, 33, 43, 63, 134, 135, 147, 171, 214, 216], "path": [12, 238, 279], "tree": [12, 278], "energi": [12, 42, 56, 57, 156, 238, 273, 279], "control": [12, 128], "ha": [12, 14, 20, 21, 22, 23, 24, 65, 70, 81, 92, 131, 135, 136, 146, 147, 148, 149, 156, 169, 171, 184, 192, 200, 215, 216, 217, 220, 221, 238, 249, 278, 279], "_get_root_contain": 12, "repres": [12, 42, 48, 235, 247], "whole": [12, 24, 278], "problem": [12, 15, 17, 21, 42, 279], "file": [12, 13, 14, 15, 17, 19, 20, 21, 22, 23, 24, 34, 40, 41, 47, 52, 56, 57, 61, 67, 68, 69, 72, 73, 76, 77, 79, 99, 100, 102, 103, 113, 123, 124, 125, 126, 127, 128, 129, 130, 131, 133, 134, 135, 136, 144, 145, 146, 147, 148, 149, 156, 157, 170, 171, 176, 180, 181, 184, 185, 189, 192, 193, 197, 200, 201, 205, 207, 209, 210, 212, 214, 215, 216, 217, 218, 220, 222, 223, 238, 248, 250, 251, 254, 270, 275], "properti": [12, 18, 20, 21, 22, 23, 24, 47, 62, 65, 81, 93, 100, 131, 156, 158, 159, 167, 184, 188, 192, 196, 200, 204, 210, 219, 220, 221, 223, 235, 237, 238, 240, 246, 247, 249, 275, 278], "to_dict": 12, "self": [12, 15, 21, 31, 32, 100, 103, 158, 238, 249, 279], "case": [12, 24, 87, 88, 105, 106, 107, 108, 109, 110, 138, 139, 140, 141, 142, 143, 161, 162, 163, 164, 225, 226, 227, 228, 229, 230, 231, 232, 249, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 279], "dictionari": [12, 15, 20, 24, 26, 112, 238, 247, 278], "redefin": [12, 21, 22, 23, 24, 44, 47, 103, 146, 221], "descend": [12, 15, 21, 23, 44, 83, 103, 146, 158, 221, 238, 278], "basesect": [13, 16, 18, 179, 180, 183, 184, 187, 188, 191, 192, 195, 196, 199, 200, 203, 204, 218, 219, 220, 221, 273], "customsect": [13, 172, 173, 273], "rootconfigurationcontain": [13, 130, 131, 222, 223, 273], "task": [13, 16, 18, 20, 21, 22, 24, 99, 100, 113, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 129, 130, 131, 134, 135, 136, 147, 150, 155, 159, 170, 216, 238, 275, 278], "potenti": [13, 18, 47, 57, 61, 67, 68, 72, 76, 79, 99, 100, 133, 145, 147, 156, 169, 170, 171, 172, 173, 174, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 224, 225, 226, 227, 228, 229, 230, 231, 232, 238, 249, 251, 254, 273, 275], "abl": [13, 19, 238, 249], "write": [13, 14, 17, 19, 23, 47, 100, 131, 173, 180, 184, 192, 193, 200, 207, 208, 210, 214, 220, 221, 223, 238, 255, 275], "result": [13, 16, 19, 20, 21, 24, 33, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 81, 83, 92, 103, 112, 124, 128, 131, 134, 145, 150, 153, 156, 158, 159, 173, 211, 216, 238, 249, 269, 275, 278], "pars": [13, 19, 20, 21, 24, 31, 32, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 103, 131, 147, 155, 169, 173, 216, 278], "A": [14, 15, 18, 20, 21, 28, 43, 44, 45, 47, 48, 49, 50, 52, 54, 55, 56, 57, 59, 60, 62, 67, 68, 69, 71, 72, 73, 76, 77, 78, 79, 80, 83, 86, 88, 100, 106, 112, 139, 159, 162, 167, 213, 217, 218, 219, 220, 226, 238, 243, 249, 251, 260, 275, 278], "its": [14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25, 47, 61, 92, 99, 100, 103, 131, 135, 146, 147, 170, 180, 184, 188, 192, 196, 200, 204, 210, 213, 216, 219, 220, 221, 223, 238, 240, 278, 279], "member": [14, 15, 16, 17, 18, 20, 22, 24, 82, 112, 131, 135, 147, 180, 184, 188, 192, 196, 200, 204, 216, 219, 220, 221, 223], "accord": [14, 15, 16, 17, 18, 112, 131, 180, 184, 188, 192, 196, 200, 204, 219, 220, 221, 223, 238, 240, 247, 254, 278, 279], "has_any_valu": [14, 219], "ani": [14, 15, 21, 25, 26, 44, 45, 46, 47, 48, 49, 51, 52, 53, 55, 56, 57, 58, 59, 61, 64, 65, 66, 112, 169, 173, 238, 278, 279], "save_to_fil": [14, 15, 17, 100, 223, 278], "valid": [14, 15, 17, 20, 23, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 100, 173, 197, 223], "save": [14, 15, 17, 103, 223, 238, 278, 279], "content": [14, 15, 18, 21, 24, 132, 169, 170, 171, 172, 256, 278, 279], "where": [14, 131, 238, 247, 254, 279], "data": [14, 17, 20, 21, 65, 145, 156, 167, 188, 196, 204, 209, 213, 219, 221, 222, 223, 233, 240, 247, 249, 251, 254, 278], "should": [14, 15, 24, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 70, 131, 156, 158, 165, 173, 180, 184, 192, 193, 200, 214, 220, 221, 238, 247, 249, 279], "written": [14, 20, 21, 23, 136, 146, 148, 149, 171, 214, 215, 217, 238, 278], "group": 15, "_member": 15, "form": [15, 43, 47, 49, 54, 62, 65, 70, 148, 149, 222, 223, 278, 279], "obj": [15, 249], "_interactive_memb": 15, "non": [15, 112, 238, 249, 278, 279], "hidden": [15, 20, 21, 22, 23, 24, 135, 136, 146, 147, 148, 149, 171, 215, 216, 217], "acces": 15, "via": [15, 279], "sanit": 15, "whitespac": [15, 34, 58, 64], "special": [15, 58, 61, 64, 209, 217, 278, 279], "charact": [15, 20], "replac": [15, 237, 238, 240, 249, 279], "underscor": 15, "These": [15, 130, 219, 278], "notat": [15, 28, 167, 238, 279], "t": [15, 48, 136, 172, 173, 215, 237, 238, 247, 249, 279], "shape": 15, "_get_memb": 15, "It": [15, 22, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 81, 99, 103, 112, 131, 158, 173, 223, 235, 238, 247, 279], "search": [15, 275, 278], "interactive_memb": 15, "clear": [15, 17, 100, 223], "do_not_check_requir": [15, 100], "eras": 15, "reset": [15, 170, 220, 223, 238, 247, 279], "default": [15, 18, 20, 21, 22, 23, 24, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 81, 83, 88, 106, 112, 114, 124, 128, 131, 134, 135, 136, 139, 146, 147, 148, 149, 152, 153, 162, 171, 173, 215, 216, 217, 226, 237, 238, 240, 243, 245, 247, 249, 260, 273, 278, 279], "ad": [15, 99, 135, 214, 238, 278], "subcontain": 15, "argument": [15, 20, 26, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 92, 93, 95, 100, 131, 156, 173, 238, 240, 249, 279], "pass": [15, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 81, 103, 156, 173, 184, 192, 200, 220, 238, 249, 278, 279], "requir": [15, 21, 23, 36, 136, 146, 148, 149, 171, 181, 185, 189, 193, 197, 201, 205, 213, 214, 215, 217, 238, 275, 278, 279], "without": [15, 47, 58, 64, 275, 278], "except": [15, 17, 26, 31, 32, 47, 223, 238], "throw": [15, 47, 238], "which": [15, 18, 19, 20, 45, 47, 52, 56, 62, 131, 156, 238, 240, 247, 250, 278, 279], "prevent": 15, "neverthenless": 15, "anywai": 15, "previou": [15, 20, 21, 22, 23, 146], "get": [15, 100, 178, 219, 238, 279], "unknown": [15, 20, 47, 56, 57, 100, 170, 172, 216, 238, 256], "child": [15, 20, 22, 92, 147, 214, 216], "try": [15, 238], "conain": 15, "mix": [15, 23, 28, 42, 47, 99, 100, 103, 131, 136, 146, 148, 149, 158, 170, 171, 215, 217, 273], "kwarg": [15, 20, 23, 24, 43, 50, 54, 60, 62, 63, 65, 91, 92, 103, 131, 134, 146, 148, 149, 152, 155, 156, 158, 181, 185, 189, 193, 197, 201, 205, 208, 209, 213, 214, 215, 216, 238, 249], "usag": [15, 89, 275], "input_paramet": [15, 114, 115, 117, 119, 121, 123, 124, 125, 126, 127, 128, 129, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 152, 153, 155, 156, 158, 159, 177, 238, 273, 275], "niter": 15, "5": [15, 167, 279], "ne": [15, 279], "10": [15, 30, 167, 254], "union": [15, 44, 45, 46, 47, 48, 49, 51, 52, 53, 55, 56, 57, 58, 59, 61, 64, 66, 112, 132, 173, 238], "string": [15, 20, 28, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 65, 66, 72, 77, 84, 124, 128, 131, 170, 173, 238, 240, 247, 273, 279], "unkwnown": 15, "how": [15, 20, 21, 23, 24, 83, 136, 146, 148, 149, 171, 214, 215, 217, 238, 240, 275, 278], "handl": [15, 35, 238, 250], "known": [15, 146, 147, 238, 279], "custom": [15, 16, 20, 22, 56, 57, 147, 169, 171, 172, 173, 214, 238, 278, 279], "keyword": [15, 42, 238, 273], "onli": [15, 20, 47, 52, 56, 82, 95, 131, 145, 147, 238, 247, 249, 250, 278, 279], "syntax": [15, 19, 238], "syntact": [15, 47, 238], "sugar": [15, 238], "remove_memb": 15, "remov": [15, 16, 20, 23, 99, 240], "previous": [15, 131, 249], "as_dict": [15, 100, 240], "nest": 15, "transform": [15, 47, 278], "well": 15, "to_str": 15, "_find_valu": [15, 100], "sought": [15, 238], "exist": [15, 219, 238, 240, 247, 279], "static": [15, 20, 88, 102, 106, 112, 131, 134, 135, 136, 139, 147, 148, 149, 162, 167, 173, 214, 215, 216, 223, 226, 240, 243, 245, 249, 251, 260], "_interactive_member_nam": 15, "kei": [15, 26, 91, 112], "thu": [15, 131, 249, 278, 279], "_add": 15, "method": [15, 20, 22, 24, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 88, 93, 100, 106, 108, 110, 131, 139, 141, 143, 162, 164, 173, 226, 228, 230, 232, 238, 240, 247, 249, 260, 262, 264, 266, 268, 278, 279], "implement": [15, 24, 278, 279], "could": [15, 24, 234, 235], "probabl": [15, 240, 247], "classmethod": [16, 20, 22, 24, 44, 99, 131, 134, 216, 223, 235], "factori": [16, 99], "definition_typ": 16, "signatur": 16, "callabl": [16, 44, 45, 46, 47, 48, 49, 51, 52, 53, 55, 56, 57, 58, 59, 61, 64, 66, 173, 238], "capabl": [17, 278, 279], "read": [17, 20, 21, 24, 47, 101, 131, 134, 145, 155, 169, 171, 172, 184, 192, 193, 200, 207, 208, 209, 214, 219, 220, 221, 223, 238, 250, 251, 254, 275], "format": [17, 20, 21, 24, 28, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 70, 81, 83, 99, 100, 133, 134, 135, 136, 147, 170, 173, 174, 175, 176, 212, 214, 216, 223, 273, 278, 279], "readabl": [17, 43, 44, 45, 47, 48, 49, 52, 53, 54, 55, 58, 59, 62, 64, 65, 66, 173, 223], "rais": [17, 26, 31, 32, 88, 106, 108, 110, 139, 141, 143, 162, 164, 223, 226, 228, 230, 232, 260, 262, 264, 266, 268], "error": [17, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 103, 153, 156, 158, 159, 173, 223, 249, 275, 278], "complet": [17, 223, 279], "read_from_fil": [17, 24, 103, 223], "clear_first": [17, 223], "present": [17, 21, 23, 47, 146, 223, 238, 247, 279], "preserv": [17, 223], "standard": [18, 67, 68, 69, 71, 72, 73, 74, 76, 77, 78, 79, 80, 84, 86, 133, 147, 212, 214, 216, 238, 278], "whose": [18, 20, 21, 48, 169, 172, 184, 192, 200, 220, 221, 238], "predefind": 18, "sectiondefinit": [18, 124, 125, 126, 127, 128, 129, 133, 134, 273], "basecontainerdefinit": [18, 19, 22, 24, 133, 134, 135, 145, 147, 179, 181, 183, 185, 187, 189, 191, 193, 195, 197, 199, 201, 203, 205, 212, 213, 214, 216, 273, 278], "basesectiondefinit": [19, 133, 135, 145, 147, 179, 181, 183, 185, 187, 189, 191, 193, 195, 197, 199, 201, 203, 205, 212, 213, 214, 273], "basevaluedefinit": [19, 47, 61, 133, 136, 145, 146, 148, 149, 169, 171, 212, 215, 217, 273, 278], "confdefinit": [19, 133, 134, 212, 216, 273], "desrib": 19, "alternative_nam": [20, 21, 22, 23, 24, 135, 136, 146, 147, 148, 149, 171, 197, 215, 216, 217], "help": [20, 21, 22, 23, 24, 135, 136, 147, 171, 216, 279], "is_hidden": [20, 21, 22, 23, 24, 135, 136, 146, 147, 148, 149, 171, 215, 216, 217], "has_hidden_memb": [20, 22, 135, 147], "is_opt": [20, 21, 22, 23, 24, 135, 136, 146, 147, 148, 149, 171, 215, 216, 217], "name_in_grammar": [20, 21, 22, 23, 24, 47, 61, 65, 135, 136, 146, 147, 148, 149, 171, 215, 216, 217], "force_ord": [20, 22, 135, 147, 214, 216], "denot": [20, 21, 22, 23, 24, 135, 136, 146, 147, 148, 149, 171, 215, 216, 217, 249, 279], "boolean": [20, 21, 22, 24, 52, 83, 135, 147, 216, 238, 273], "offer": [20, 21, 22, 24, 102, 135, 147, 216], "usual": [20, 21, 22, 24, 88, 106, 135, 139, 147, 162, 216, 226, 260], "anoth": [20, 21, 22, 24, 135, 147, 180, 184, 192, 200, 210, 216, 220], "direct": [20, 21, 22, 24, 135, 147, 216, 219], "sens": [20, 21, 22, 24, 135, 147, 216], "variabl": [20, 21, 22, 24, 47, 52, 56, 132, 135, 147, 216, 221, 238, 279], "print": [20, 21, 22, 24, 28, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 92, 131, 135, 147, 173, 214, 216, 238, 279], "recogn": [20, 21, 22, 24, 135, 147, 216], "pot": [20, 21, 22, 24, 135, 147, 216, 250, 279], "short": [20, 21, 22, 24, 135, 147, 216], "messag": [20, 21, 22, 24, 31, 32, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 135, 147, 173, 216, 279], "long": [20, 21, 22, 24, 135, 147, 216], "value_name_format": [20, 23, 214], "_dict_from_named_valu": 20, "arg": [20, 60, 91, 92, 131, 146, 148, 149, 152, 155, 158, 184, 192, 200, 208, 209, 213, 214, 215, 220, 238, 249], "auxiliari": 20, "order": [20, 23, 136, 146, 147, 148, 149, 171, 193, 214, 215, 216, 217, 220, 247, 278], "_init_arg": [20, 136], "copi": [20, 23, 47, 83, 94, 235, 238, 240, 242, 245, 247], "modifi": [20, 92, 238, 279], "create_object": [20, 21], "all_member_nam": 20, "_values_grammar": 20, "_grammar": [20, 23, 24, 44, 45, 48, 49, 52, 53, 55, 58, 59, 61, 62, 64, 65, 66, 173], "input": [20, 40, 41, 52, 56, 69, 73, 77, 83, 112, 113, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 145, 168, 238, 275, 278], "delimited_custom_value_grammar": [20, 22], "grammar": [20, 21, 22, 24, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 58, 59, 62, 63, 64, 65, 66, 67, 69, 71, 72, 73, 76, 77, 78, 79, 80, 81, 82, 83, 85, 86, 145, 171, 172, 173, 216, 273, 278], "custom_name_charact": [20, 216], "abcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyz0123456789_": [20, 216], "appear": [20, 22, 24, 42, 52, 217], "custom_member_grammar": 20, "value_nam": 20, "_first_section_is_fix": 20, "ve": 20, "unord": 20, "sequenc": [20, 42, 47, 273], "fix": [20, 23, 24, 30, 136, 146, 147, 148, 149, 171, 214, 215, 216, 217], "parse_fil": 20, "return_value_onli": [20, 24], "whole_str": [20, 47], "parse_return": [20, 24], "val": [20, 24, 43, 47, 48, 49, 57, 61, 62, 228], "unpack": 20, "unnecessari": 20, "tupl": [20, 21, 24, 47, 103, 112, 158, 167], "async": [20, 47, 102, 103, 152, 155], "parse_from_stream": [20, 47], "stream": [20, 47, 278], "up_to": [20, 47], "start": [20, 47, 112, 279], "asyncio": [20, 101, 102, 278], "write_alternative_nam": [21, 197], "result_class": [21, 22, 23, 134, 152, 155, 158, 181, 185, 189, 193, 197, 201, 205, 213, 214, 216], "ommit": [21, 47, 52, 56], "expect": [21, 23, 82, 146], "locat": [21, 23, 146, 278, 279], "By": [21, 23, 43, 44, 45, 47, 48, 49, 52, 53, 54, 55, 58, 59, 62, 64, 65, 66, 146, 173, 238, 247], "instanti": [21, 23, 47, 65, 131, 146, 278], "chang": [21, 23, 146, 238, 249, 278, 279], "text": [21, 65, 251, 279], "longer": 21, "_tuple_with_my_nam": [21, 24], "expr": [21, 24, 33, 39], "has_valu": [21, 47, 61], "do_not_skip_whitespaces_before_nam": [21, 135], "inputparamet": [22, 130, 134, 238, 273, 278], "typic": [22, 112, 210], "alia": [22, 23, 45, 47, 48, 53, 59, 66, 134, 135, 147, 152, 155, 181, 182, 185, 186, 188, 189, 190, 193, 194, 196, 197, 198, 201, 202, 204, 205, 206, 213, 214, 216], "custom_value_nam": [22, 24], "custom_valu": 22, "default_valu": [23, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 136, 146, 148, 149, 171, 173, 215, 217], "fixed_valu": [23, 136, 146, 148, 149, 171, 215, 217], "name_format": [23, 136, 146, 148, 149, 171, 215, 217], "basetyp": [23, 42, 43, 44, 45, 46, 48, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 83, 136, 146, 148, 149, 169, 171, 173, 215, 217, 273, 278], "alternativelli": [23, 136, 146, 148, 149, 171, 215, 217], "still": [23, 136, 146, 148, 149, 171, 215, 217, 279], "conf": [23, 136, 146, 148, 149, 171, 215, 217], "prefix": [23, 24, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 136, 146, 148, 149, 171, 173, 215, 217], "name_value_delimit": [23, 136, 146, 148, 149, 171, 215, 217], "omit": [23, 136, 146, 148, 149, 171, 215, 217], "mean": [23, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 112, 134, 136, 146, 148, 149, 171, 173, 215, 217, 238, 279], "access": [23, 47, 62, 93, 136, 146, 148, 149, 171, 215, 217, 238, 247, 249], "formated_nam": 23, "get_valu": 23, "f": [23, 47, 48, 92, 173, 279], "deriv": 24, "commonli": [24, 47, 61], "kind": 24, "better": [24, 88, 106, 139, 162, 226, 260], "purpos": [24, 250], "from_dict": 24, "def": [24, 92, 93], "recurs": 24, "custom_sect": 24, "There": [24, 147, 171, 216, 247, 278, 279], "tweak": 24, "ignor": [24, 131, 238], "comment": 24, "would": [24, 131], "onc": [24, 94, 95], "condit": [25, 31, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 173], "duplicit": 26, "12e": 28, "lead": [28, 279], "zero": [28, 65, 66, 88, 106, 112, 139, 162, 219, 226, 235, 238, 240, 243, 260], "fortran": 28, "scientif": 28, "1000000000000e": 28, "00": 28, "6e": 28, "1000000e": 28, "01": 28, "convert": [28, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 83, 93, 173, 238, 249], "white": [29, 273], "core": [29, 30, 169, 172, 235], "token": [29, 30, 47, 169, 172], "parserel": [29, 30, 34, 36, 37, 38, 40, 43, 48, 49, 52, 53, 55, 58, 59, 61, 63, 64, 66, 169, 172, 173], "abc": [29, 30, 156, 169, 172, 236, 238], "whitechar": 30, "pp": 30, "respect": 30, "default_white_char": 30, "_abc_impl": [30, 172, 238], "_abc": [30, 172, 238], "_abc_data": [30, 172, 238], "parseel": 31, "fail": [31, 32, 88, 106, 139, 162, 226, 260, 279], "pa": 32, "action": 32, "parseelemenet": 32, "delim": 33, "suppress": [33, 38, 40, 43, 61], "eof": 34, "end": [34, 55, 173], "newlin": [35, 36, 37, 135, 147, 171, 214], "restor": 35, "state": 35, "optin": 37, "quot": [38, 56, 58, 77], "pattern": [41, 172, 278], "separ": [41, 42, 47, 169, 172, 173, 212, 273, 278], "basemix": [42, 56, 57, 273], "baserealwithunit": [42, 51, 60, 273], "basestr": [42, 55, 58, 64, 273], "date": [42, 238, 273, 279], "flag": [42, 47, 56, 81, 273], "integ": [42, 56, 57, 66, 83, 84, 85, 86, 112, 238, 240, 247, 273, 279], "linestr": [42, 57, 72, 273], "potmix": [42, 76, 273], "qstring": [42, 273], "realwithunit": [42, 273], "setof": [42, 56, 57, 82, 273], "tabl": [42, 47, 61, 156, 167, 273], "unsign": [42, 273], "definitionfil": 42, "each": [42, 94, 156, 249, 278, 279], "grammar_typ": [43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 169, 173, 273, 278], "length": [43, 65, 112, 249], "max_length": 43, "min_length": 43, "as_list": 43, "befor": [43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 173, 180, 184, 192, 193, 200, 214, 220, 279], "postfix": [43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 131, 132, 173, 238], "invalid": [43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 173], "interpret": [43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 131, 173, 238, 279], "explain": [43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 173], "after_convert": [43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 173], "appli": [43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 81, 83, 173], "enter": [43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 173], "sp": 43, "tab": [43, 279], "delimiter_str": [43, 63], "grammar_nam": [43, 44, 45, 47, 48, 49, 52, 53, 54, 55, 58, 59, 62, 64, 65, 66, 173], "human": [43, 44, 45, 47, 48, 49, 52, 53, 54, 55, 58, 59, 62, 64, 65, 66, 173], "express": [43, 44, 45, 47, 48, 49, 52, 53, 54, 55, 58, 59, 62, 64, 65, 66, 173], "what": [43, 44, 45, 47, 48, 49, 52, 53, 54, 55, 58, 59, 62, 64, 65, 66, 156, 173, 238], "setnam": [43, 44, 45, 47, 48, 49, 52, 53, 54, 55, 58, 59, 62, 64, 65, 66, 173], "sometim": [43, 44, 45, 47, 48, 49, 52, 53, 54, 55, 58, 59, 62, 64, 65, 66, 131, 173], "desir": [43, 44, 45, 47, 48, 49, 52, 53, 54, 55, 58, 59, 62, 64, 65, 66, 173, 240], "even": [43, 44, 45, 47, 48, 49, 52, 53, 54, 55, 58, 59, 62, 64, 65, 66, 173], "shorter": [43, 44, 45, 47, 48, 49, 52, 53, 54, 55, 58, 59, 62, 64, 65, 66, 173], "_string": [43, 47, 48, 49, 57, 61, 62, 65], "_valid": [43, 44, 45, 46, 47, 48, 49, 52, 53, 54, 59, 61, 62, 65, 66], "parse_check": [43, 44, 45, 46, 47, 48, 49, 52, 53, 54, 59, 61, 62, 65, 66], "cannon": [43, 47, 54, 62, 65], "variant": [44, 56, 57, 73, 76], "anyth": [44, 103, 158, 238, 278], "string_typ": [44, 56, 57], "param_nam": [44, 45, 47, 62, 63, 65], "get_typ": 44, "unit": [45, 51, 60, 249], "append": [45, 131, 132, 238, 249], "grammar_cach": 45, "cach": [45, 95, 210, 211], "_grammar_unit": 45, "numpy_typ": [45, 47, 48, 53, 59, 65, 66], "carri": 47, "inform": [47, 166, 167, 189, 236, 249, 254, 279], "Such": [47, 112], "yield": 47, "pair": [47, 100, 278], "dure": [47, 156, 184, 192, 193, 200, 207, 208, 209, 210, 214, 220, 221, 240, 279], "confus": 47, "missing_valu": [47, 52, 56], "opposit": [47, 249], "absenc": 47, "On": [47, 279], "hand": 47, "identifi": [47, 61, 112, 146, 147, 240], "deafault": 47, "descendatn": 47, "transform_grammar": [47, 63], "chanc": [47, 63], "alter": [47, 63, 238, 279], "configuraion": [47, 52, 56], "can_be_ommit": [47, 52, 56], "ommis": [47, 52, 56], "do_not_output_valu": [47, 52, 56], "_valueerror": 47, "error_messag": 47, "parameternam": 47, "enrich": [47, 62], "abil": [47, 62], "letter": 48, "dd": 49, "mm": 49, "yyyi": 49, "re": [49, 172], "p": [49, 238, 279], "d": [49, 237, 279], "y": 49, "take": [50, 54, 55, 95, 130], "predefin": [50, 54, 103, 158, 177, 279], "rydberg": 51, "specifi": [51, 88, 106, 108, 110, 131, 139, 141, 143, 158, 162, 164, 226, 228, 230, 232, 238, 260, 262, 264, 266, 268, 279], "ev": 51, "ry": 51, "07349864494991327": 51, "convers": 51, "factor": 51, "sign": [53, 71], "skipto": 55, "lineend": 55, "stringend": 55, "word": 58, "char": [58, 64], "w": [58, 64, 238], "z": [58, 64], "fnumber": 59, "insid": 61, "_grammar_nam": 61, "format_al": [62, 65, 81, 83], "allowed_valu": 62, "column": [65, 156], "header": [65, 217], "free_head": 65, "21": [65, 167], "17": [65, 167, 279], "16": [65, 167], "numbering_label": 65, "numbering_format": 65, "row_condit": 65, "named_result": 65, "optionali": 65, "iq": 65, "irefq": 65, "imq": 65, "noq": 65, "itoq": 65, "conc": 65, "000": 65, "accept": [65, 279], "new": [65, 81, 92, 100, 131, 156, 184, 192, 200, 220, 236, 238, 240, 249, 279], "featureless": 65, "cannot": [65, 184, 192, 200, 220], "number_of_collumn": 65, "zero_data": 65, "row": 65, "dtype": 65, "appropri": [70, 84, 238], "format_for_the_typ": 70, "default_format": 70, "canon": [74, 75, 82], "map": [74, 75, 82, 84, 112, 167, 170], "intern": [74, 167], "doctest": [74, 85, 112], "np": [74, 112, 131, 238, 279], "int64": [74, 75], "float64": 75, "bool_": 75, "guess": [81, 83, 235], "becom": 81, "left": [81, 132, 238], "unless": 81, "ordereddict": [82, 84, 90, 273], "collect": [82, 90, 91, 111, 112, 156], "normalize_typ": [82, 273], "descendatnt": 83, "format_for_typ": [83, 273], "gue": 85, "testcas": [87, 89, 105, 107, 108, 109, 110, 138, 140, 141, 142, 143, 161, 163, 164, 225, 227, 228, 229, 230, 231, 232, 259, 261, 262, 263, 264, 265, 266, 267, 268, 273], "unittest": [87, 88, 105, 106, 107, 108, 109, 110, 138, 139, 140, 141, 142, 143, 161, 162, 163, 164, 225, 226, 227, 228, 229, 230, 231, 232, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268], "test": [87, 88, 89, 105, 106, 107, 108, 109, 110, 138, 139, 140, 141, 142, 143, 161, 162, 163, 164, 225, 226, 227, 228, 229, 230, 231, 232, 256, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 273, 279], "init_test": [88, 89, 106, 107, 108, 109, 110, 139, 140, 141, 142, 143, 162, 163, 164, 226, 227, 228, 229, 230, 231, 232, 260, 261, 262, 263, 264, 265, 266, 267, 268, 273], "methodnam": [88, 106, 108, 110, 139, 141, 143, 162, 164, 226, 228, 230, 232, 260, 262, 264, 266, 268], "runtest": [88, 106, 108, 110, 139, 141, 143, 162, 164, 226, 228, 230, 232, 260, 262, 264, 266, 268], "useful": [88, 106, 139, 162, 226, 260], "assert": [88, 106, 139, 162, 226, 260], "comparison": [88, 106, 139, 162, 226, 260], "execut": [88, 106, 108, 110, 130, 131, 132, 134, 139, 141, 143, 159, 162, 164, 226, 228, 230, 232, 238, 260, 262, 264, 266, 268, 278, 279], "valueerror": [88, 106, 108, 110, 139, 141, 143, 162, 164, 226, 228, 230, 232, 260, 262, 264, 266, 268], "doe": [88, 106, 108, 110, 139, 141, 143, 162, 164, 226, 228, 230, 232, 249, 260, 262, 264, 266, 268, 278, 279], "assertasyncequ": [88, 106, 139, 162, 226, 260], "b": [88, 102, 106, 139, 162, 226, 260], "assertasyncrais": [88, 106, 139, 162, 226, 260], "assertalmostequ": [88, 106, 139, 162, 226, 260], "two": [88, 103, 106, 112, 139, 162, 167, 226, 247, 251, 260, 278, 279], "unequ": [88, 106, 139, 162, 226, 260], "differ": [88, 106, 139, 162, 184, 192, 193, 200, 214, 220, 226, 236, 238, 247, 260, 278, 279], "round": [88, 106, 139, 162, 226, 260], "decim": [88, 106, 139, 162, 226, 260], "place": [88, 106, 139, 162, 226, 234, 235, 240, 260, 279], "compar": [88, 106, 139, 162, 226, 260], "between": [88, 106, 112, 139, 162, 167, 226, 260, 278], "more": [88, 106, 139, 162, 210, 226, 236, 239, 240, 260, 275], "than": [88, 106, 139, 162, 193, 214, 220, 226, 260], "delta": [88, 106, 139, 162, 226, 260], "note": [88, 106, 139, 162, 226, 260, 275, 278], "signific": [88, 106, 139, 162, 226, 260], "digit": [88, 106, 139, 162, 226, 260], "measur": [88, 106, 139, 162, 226, 260], "equal": [88, 106, 139, 162, 226, 240, 247, 249, 260], "almost": [88, 106, 139, 162, 226, 260], "runasync": [88, 106, 139, 162, 226, 260], "corr": [88, 106, 139, 162, 226, 260], "setup": [88, 106, 139, 162, 226, 260], "regist": [88, 106, 139, 162, 226, 260], "rel": 89, "work": [89, 275], "__package__": 89, "els": 89, "__name__": 89, "class_properti": [90, 273], "thorough": 90, "misc": [91, 92, 93, 94, 95, 96, 97, 273], "first_item": 91, "func": 92, "keyword_onli": 92, "exampl": [92, 93, 238, 279], "new_param": 92, "param": [92, 99, 100, 131, 170], "decor": [93, 95], "singl": [93, 278], "cl": [93, 279], "directli": [93, 279], "cls_properti": 93, "some_possibly_cached_valu": 93, "x": [93, 279], "uniqu": [94, 112, 221], "retain": 94, "fce": [95, 96, 211], "functool": 95, "care": [95, 130], "mock": 96, "numba": [96, 97], "jit": 96, "compil": [96, 131, 172, 279], "avail": [96, 112, 249, 279], "occur": [97, 247, 278], "instal": [97, 275], "acceler": 97, "customopt": [98, 169, 170, 273], "store": [98, 131, 180, 184, 188, 192, 196, 200, 204, 209, 220, 221, 249, 279], "valuedefinit": [99, 100, 133, 135, 170, 273], "me": 99, "my": [99, 178, 279], "value_definit": 99, "dummi": [100, 238, 278], "compatibil": 100, "get_path": 100, "asynciofileread": [101, 273], "baseprocessoutputread": [101, 134, 151, 152, 154, 155, 157, 158, 273], "reader": [101, 102, 151, 152, 153, 154, 155, 156, 158, 273, 278, 279], "process": [101, 103, 131, 134, 158, 193, 214, 219, 220, 237, 238, 269, 279], "emploi": [101, 238, 278], "stdio": 101, "stderr": [101, 103], "concur": 101, "process_output_read": [102, 103, 131, 134, 151, 152, 154, 155, 157, 158, 273], "filenam": [102, 131, 156, 223, 237, 238, 254, 256, 257, 279], "buffers": 102, "8192": 102, "mimic": 102, "streamread": 102, "fact": [102, 170], "synchron": 102, "close": 102, "readlin": 102, "separator_shift": 102, "sep": 102, "readuntil": 102, "stdout": [103, 131, 152, 155, 238], "asyn": 103, "read_error": [103, 158], "read_output": [103, 152, 155, 158, 278], "run_subprocess": 103, "wait": [103, 158], "postprocess": [103, 158, 278, 279], "intend": [103, 158], "subclass": [103, 158], "cmd": 103, "outfil": 103, "print_output": [103, 131, 238], "return_cod": [103, 153, 156, 159], "commontest": 107, "test_common": [108, 273], "test_asyncio_file_read": 108, "grammartest": 109, "test_grammar_typ": [110, 273], "test_typ": 110, "_test_typ": 110, "solv": 111, "unique_valu": [112, 273], "value_to_class_id": 112, "effect": [112, 249], "distinct": 112, "criterion": 112, "from_valu": 112, "id": [112, 236], "eq": 112, "revers": 112, "start_from": 112, "iter_uniqu": 112, "len_of_uniqu": 112, "none_tupl": 112, "len": [112, 238, 279], "Then": 112, "assign": [112, 156], "uniquevalu": 112, "inputparameterss": [114, 133, 212], "configurt": 114, "arp": [116, 273, 279], "input_parameters_definit": [116, 118, 120, 122, 125, 126, 127, 129, 134, 135, 136, 273], "inputparametersdefinit": [116, 118, 120, 122, 131, 133, 273], "phagen": [120, 131, 238, 273, 279], "scf": [122, 131, 155, 156, 238, 273, 278, 279], "adsi": 124, "suppli": [130, 238, 240, 279], "also": [130, 235, 278, 279], "about": [130, 166, 167, 236, 254, 275], "inputfil": 131, "outputfil": 131, "moreov": 131, "proper": 131, "task_nam": 131, "_default_mpi_runn": 131, "default_mpi_runn": 131, "mpi": [131, 134, 238, 275], "runner": [131, 238, 279], "autodetect": [131, 238], "mpi_runn": 131, "mpirun": [131, 238, 279], "suitabl": 131, "found": [131, 238, 240], "shell": [131, 279], "command": 131, "is_mpi": 131, "Will": 131, "regardless": 131, "explan": 131, "run_process": 131, "input_fil": [131, 238, 279], "output_fil": [131, 238, 279], "executable_postfix": [131, 238], "paamet": 131, "binari": 131, "mode": [131, 197, 238], "too": [131, 238], "info": [131, 238, 279], "select": [131, 278], "infrom": 131, "depend": 131, "postfixi": 131, "processoutputread": 131, "result_read": [131, 134], "read_output_from_fil": 131, "again": [131, 278], "executable_param": 131, "stdin": 131, "popen": 131, "set_opt": 131, "is_it_a_input_parameters_nam": 131, "create_input_paramet": 131, "default_paramet": 131, "from_fil": [131, 223, 279], "sprkkr_executable_suffix": [132, 238, 279], "simlilar": [133, 212], "share": [133, 212, 247, 249, 278, 279], "kkrscf": [134, 159], "whether": [134, 238, 249], "child_class": [134, 135, 147, 214, 216], "grammar_of_delimit": [134, 135, 136, 147, 148, 149, 173, 214, 215, 216], "custom_class": [134, 135, 147, 214, 216], "custom_value_grammar": [134, 216], "ouptut": [135, 147, 214, 238], "testdefinit": 140, "test_definit": [141, 273], "testinputparamet": 142, "test_input_paramet": [143, 273], "test_section_delimiter_valu": 143, "test_custom_valu": 143, "test_input_parameters_definit": 143, "parser": [144, 150, 157], "outputnonamevaluedefinit": [145, 273], "outputvaluedefinit": [145, 146, 147, 149, 273], "outputsectiondefinit": [145, 155, 273], "outputvalueequaldefinit": [145, 273], "obtain": [145, 275, 278, 279], "although": 145, "approach": 145, "output_definit": [146, 147, 148, 149, 155, 273], "defaultoutputread": 151, "task_result": [151, 152, 153, 154, 155, 156, 158, 159, 273], "outputread": [151, 152, 154, 155, 157, 273, 278], "defaultresult": [151, 152], "taskresult": [151, 153, 154, 156, 157, 273], "scfoutputread": [154, 278], "scfresult": [154, 155, 279], "atoms_conf_typ": 155, "potential_filenam": [156, 238, 279], "converg": [156, 278, 279], "charg": [156, 238, 279], "densiti": 156, "further": [156, 210, 238, 275, 279], "hopefulli": 156, "wavefunct": [156, 279], "total": 156, "last": [156, 238], "coverg": 156, "iteration_valu": 156, "etot": 156, "last_iter": [156, 279], "plot": 156, "logscal": 156, "err": 156, "render": 156, "show": 156, "screen": 156, "matplotlib": 156, "ax": 156, "construct": 158, "inputparametersresult": 158, "testoutput": 163, "test_output": [164, 273], "relat": 165, "lattic": [165, 166, 167, 184, 185, 186], "geometri": [165, 184, 249], "latticedata": [166, 273], "lattice_data": [167, 273], "ap": 167, "c_i": 167, "cf": 167, "o_h": 167, "ci": 167, "cp": 167, "hp": 167, "d_6h": 167, "hr": 167, "d_3d": 167, "mp": 167, "c_2h": 167, "oF": 167, "d_2h": 167, "oi": 167, "op": 167, "o": 167, "ti": 167, "d_4h": 167, "tp": 167, "cell_symmetri": 167, "triclin": 167, "13": [167, 279], "cubic": 167, "face": 167, "center": 167, "m3m": 167, "bodi": 167, "12": [167, 214], "11": 167, "hexagon": 167, "6": [167, 238, 279], "mmm": 167, "trigon": 167, "3m": 167, "monoclin": 167, "orthoromb": 167, "9": 167, "tetragon": 167, "pearson": 167, "symbol": [167, 235, 240, 247, 249, 279], "international_numbers_to_ap": 167, "15": 167, "27": 167, "39": 167, "41": 167, "43": 167, "50": 167, "55": 167, "61": 167, "73": 167, "74": 167, "18": 167, "77": 167, "19": 167, "80": 167, "20": 167, "81": 167, "84": 167, "22": 167, "87": 167, "23": 167, "88": 167, "24": 167, "89": 167, "25": 167, "90": 167, "93": 167, "99": 167, "28": 167, "102": 167, "29": 167, "108": 167, "30": 167, "114": 167, "31": 167, "120": 167, "32": 167, "126": 167, "33": 167, "129": 167, "34": 167, "135": 167, "35": 167, "138": 167, "145": 167, "37": 167, "147": 167, "38": 167, "150": 167, "156": 167, "40": 167, "162": 167, "168": 167, "42": 167, "174": 167, "177": 167, "44": 167, "180": 167, "45": 167, "183": 167, "46": 167, "186": 167, "47": 167, "48": 167, "193": 167, "49": 167, "195": 167, "198": 167, "51": 167, "204": 167, "52": 167, "210": 167, "53": 167, "216": 167, "54": 167, "222": 167, "228": 167, "56": 167, "231": 167, "57": 167, "234": 167, "58": 167, "240": 167, "59": 167, "247": 167, "60": 167, "249": 167, "255": 167, "62": 167, "257": 167, "63": 167, "263": 167, "64": [167, 279], "269": 167, "65": 167, "275": 167, "66": 167, "278": 167, "67": 167, "281": 167, "68": 167, "287": 167, "69": 167, "299": 167, "70": 167, "300": 167, "71": 167, "302": 167, "72": 167, "303": 167, "306": 167, "308": 167, "75": 167, "314": 167, "76": 167, "315": 167, "316": 167, "78": 167, "317": 167, "79": 167, "318": 167, "319": 167, "320": 167, "82": 167, "321": 167, "83": 167, "322": 167, "323": 167, "85": 167, "324": 167, "86": 167, "326": 167, "328": 167, "329": 167, "331": 167, "332": 167, "91": 167, "333": 167, "92": 167, "334": 167, "335": 167, "94": 167, "336": 167, "95": 167, "337": 167, "96": 167, "338": 167, "97": 167, "339": 167, "98": 167, "340": 167, "341": 167, "100": [167, 247], "342": 167, "101": 167, "343": 167, "344": 167, "103": 167, "345": 167, "104": 167, "346": 167, "105": 167, "347": 167, "106": 167, "348": 167, "107": 167, "349": 167, "350": 167, "109": 167, "351": 167, "110": 167, "352": 167, "111": 167, "353": 167, "112": 167, "354": 167, "113": 167, "355": 167, "356": 167, "115": 167, "357": 167, "116": 167, "358": 167, "117": 167, "359": 167, "118": 167, "360": 167, "119": 167, "361": 167, "362": 167, "121": 167, "363": 167, "122": 167, "364": 167, "123": 167, "365": 167, "124": 167, "366": 167, "125": 167, "368": 167, "370": 167, "127": 167, "371": 167, "128": 167, "372": 167, "374": 167, "130": 167, "376": 167, "131": 167, "377": 167, "132": 167, "378": 167, "133": 167, "380": 167, "134": 167, "382": 167, "383": 167, "136": 167, "384": 167, "137": 167, "386": 167, "388": 167, "139": 167, "389": 167, "140": 167, "390": 167, "141": 167, "392": 167, "142": 167, "394": 167, "143": 167, "396": 167, "144": 167, "398": 167, "400": 167, "146": 167, "401": 167, "404": 167, "148": 167, "405": 167, "149": 167, "407": 167, "408": 167, "151": 167, "409": 167, "152": 167, "410": 167, "153": 167, "411": 167, "154": 167, "412": 167, "155": 167, "414": 167, "415": 167, "157": 167, "416": 167, "158": 167, "417": 167, "159": 167, "418": 167, "160": 167, "419": 167, "161": 167, "422": 167, "423": 167, "163": 167, "424": 167, "164": 167, "425": 167, "165": 167, "426": 167, "166": 167, "428": 167, "167": 167, "430": 167, "431": 167, "169": 167, "432": 167, "170": 167, "433": 167, "171": 167, "434": 167, "172": 167, "435": 167, "173": 167, "436": 167, "437": 167, "175": 167, "438": 167, "176": 167, "439": 167, "440": 167, "178": 167, "441": 167, "179": 167, "442": 167, "443": 167, "181": 167, "444": 167, "182": 167, "445": 167, "446": 167, "184": 167, "447": 167, "185": 167, "448": 167, "449": 167, "187": 167, "450": 167, "188": 167, "451": 167, "189": 167, "452": 167, "190": 167, "453": 167, "191": 167, "454": 167, "455": 167, "456": 167, "194": 167, "457": 167, "458": 167, "196": 167, "459": 167, "197": 167, "460": 167, "461": 167, "199": 167, "462": 167, "200": 167, "463": 167, "201": 167, "465": 167, "202": 167, "466": 167, "203": 167, "468": 167, "469": 167, "205": 167, "470": 167, "206": 167, "471": 167, "207": 167, "472": 167, "208": 167, "473": 167, "209": 167, "474": 167, "475": 167, "211": 167, "476": 167, "212": 167, "477": 167, "213": 167, "478": 167, "214": 167, "479": 167, "215": 167, "480": 167, "481": 167, "217": 167, "482": 167, "218": 167, "483": 167, "219": 167, "484": 167, "220": 167, "485": 167, "221": 167, "486": 167, "488": 167, "223": 167, "489": 167, "224": 167, "491": 167, "225": 167, "492": 167, "226": 167, "493": 167, "227": 167, "494": 167, "229": 167, "498": 167, "230": 167, "499": 167, "translat": 167, "perlov": 167, "bravais_number_from_pearson_symbol": 167, "pearson_symbol": 167, "custompotentialsect": [169, 216, 273], "custompotentialsectiondefinit": [169, 273], "customsectiontoken": [169, 273], "sectionstr": [169, 273], "custom_potential_sect": [170, 171, 172, 173, 273], "_depends_on": [170, 219, 220], "_set_from_atom": [170, 180, 184, 192, 196, 200, 219, 220, 221], "io_data": [170, 196, 208, 209, 210, 211, 221, 273], "_update_atom": [170, 184, 192, 200, 219, 220, 221, 240], "mandatori": [171, 181, 185, 189, 193, 197, 201, 205, 213, 214, 219], "obvious": 171, "let": [172, 278], "r": [172, 173], "dotal": 172, "parseimpl": 172, "instr": 172, "loc": 172, "doaction": 172, "delimiter_pattern": 173, "here": [175, 209], "potential_fil": [175, 238, 279], "potentialdefinit": [176, 212, 223, 273], "globalsystemparamet": [179, 181], "potential_sect": [179, 180, 183, 184, 187, 188, 191, 192, 195, 196, 199, 200, 203, 204, 219, 220, 221, 273], "potentialsect": [179, 180, 183, 184, 187, 188, 191, 192, 195, 196, 199, 200, 203, 204, 214, 218, 219, 221, 273], "globalsystemparameterdefinit": [179, 182], "potential_definit": [179, 181, 183, 185, 187, 189, 191, 193, 195, 197, 199, 201, 203, 205, 213, 214, 215, 216, 217, 223, 273, 278], "potsectiondefinit": [179, 181, 183, 185, 187, 189, 191, 193, 195, 197, 199, 201, 203, 205, 212, 213, 216, 273], "global_system_paramet": [180, 181, 182, 279], "write_io_data": [180, 184, 188, 192, 196, 200, 204, 220, 221], "propper": [180, 184, 192, 200, 220, 237, 255], "sprkkratom": [180, 184, 192, 200, 219, 220, 221, 238, 247, 248, 254, 273, 278, 279], "writeiodata": [180, 184, 192, 200, 207, 220, 221, 273], "reus": [180, 184, 192, 200, 220], "scale": [180, 184, 192, 200, 220], "constant": [180, 184, 192, 200, 220, 278], "mesh": [180, 184, 188, 189, 192, 200, 210, 220, 221, 241, 242, 247, 249, 273], "global": 181, "document": [181, 185, 189, 193, 197, 201, 205, 213, 214, 219, 238, 277, 279], "latticesect": [183, 185], "latticesectiondefinit": [183, 186], "retriev": [184, 192, 200], "read_io_data": [184, 192, 200, 220, 221], "readiodata": [184, 192, 200, 207, 220, 221, 273], "mechan": [184, 192, 200, 220], "independ": [184, 192, 200, 220], "testabl": [184, 192, 200, 220], "obejct": [184, 192, 200, 220], "been": [184, 192, 200, 220, 238, 279], "adapt": [184, 192, 200, 220], "meshinformationsect": [187, 189], "uniquelistsect": [187, 188, 195, 196, 203, 204, 218, 273], "meshinformationsectiondefinit": [187, 190], "mesh_inform": [188, 189, 190], "_value_nam": [188, 196, 204, 221], "_value_class": [188, 196, 204, 221], "exponentialmesh": [188, 241, 247, 273], "occupationsect": [191, 193], "occupationsectiondefinit": [191, 194], "depends_on": [193, 213, 214], "prerequisit": [193, 214, 220], "referencesystemsect": [195, 197], "referencesystemsectiondefinit": [195, 198], "reference_system": [196, 197, 198, 210, 245, 247, 273], "referencesystem": [196, 244, 247, 273], "refer": [197, 210, 221, 247], "FOR": 197, "tight": 197, "sitessect": [199, 201], "sitessectiondefinit": [199, 202], "typessect": [203, 205], "typessectiondefinit": [203, 206], "atomictyp": [204, 234, 240, 247, 273], "baseiodata": [207, 209, 210, 273], "iodata": 207, "serv": 207, "intermedi": 207, "storag": 207, "futur": 208, "noth": 209, "yet": [209, 279], "itself": [210, 243], "while": [210, 249, 278, 279], "demand": 210, "asearraysectiondefinit": [212, 273], "potvaluedefinit": [212, 214, 217, 273], "array_nam": [213, 219], "setarrai": 213, "predecessor": 213, "size": 213, "asearraysect": [213, 218, 273], "star": 217, "_counter": 217, "divid": [218, 240, 278], "magnet": 219, "_": 219, "accordingli": [219, 221, 278, 279], "someth": 221, "updat": [221, 223, 238, 240, 247, 278, 279], "self_value_class": 221, "from_tupl": 221, "being": 223, "make_complet": 223, "necessari": [223, 249, 279], "update_atom": [223, 240, 247], "set_from_atom": 223, "accor": 223, "from_atom": [223, 279], "testcustomsect": 227, "test_custom_sect": [228, 273], "assertnon": 228, "testpotenti": 229, "test_potenti": [230, 273], "test_grammar": 230, "test_exampl": 230, "test_sequ": 230, "test_reset": 230, "teststructur": 231, "test_structur": [232, 273], "test_lattic": 232, "atomic_typ": [235, 240, 247, 273], "n_core": 235, "n_valenc": 235, "n_semicor": 235, "n_electron": 235, "vacuum": [235, 247, 254], "pseudoel": 235, "valenc": [235, 249], "fe": 235, "attempt": 235, "third": [235, 278], "parti": 235, "done": [235, 278, 279], "semicor": [235, 249], "_mendeleev_modul": 235, "_check_n_electron": 235, "_clear_symbol_cach": 235, "to_tupl": [235, 240, 242, 245], "to_atomic_typ": 235, "is_vacuum": [235, 247], "filenametempl": [236, 238], "getpropertiesmixin": [236, 238], "specif": [236, 278, 279], "spectroscopi": 236, "understood": 236, "msspec": 236, "link": 236, "olymp": 236, "cup": 236, "uni": 236, "muenchen": 236, "de": 236, "php": 236, "com_cont": 236, "view": [236, 279], "articl": 236, "3asprkkr": 236, "catid": 236, "3asoftwar": 236, "itemid": 236, "lang": 236, "en": [236, 278], "placehold": [237, 238, 279], "rememb": 237, "counter": [237, 238, 279], "datetim": 237, "_get": 237, "lambda": 237, "restart": 238, "empty_spher": [238, 273], "auto": 238, "easier": 238, "dto": 238, "perform": [238, 278], "mostli": [238, 278], "begin": 238, "templat": [238, 279], "temporari": 238, "suffix": [238, 279], "per": 238, "cluster": [238, 279], "save_input": [238, 279], "slash": [238, 279], "hostnam": [238, 279], "implemented_properti": 238, "skrkkr_executable_postfix": 238, "environment": [238, 279], "pathnam": 238, "meth": [238, 279], "ouput": 238, "tak": 238, "inputpamat": 238, "time": [238, 279], "bewar": 238, "option_nam": 238, "ambigu": 238, "associ": [238, 240, 279], "explicitli": 238, "sprkkr_atom": [238, 249, 254, 273, 278, 279], "_advance_count": 238, "advanc": [238, 279], "_open_fil": 238, "allow_temporari": 238, "create_subdir": 238, "unchang": 238, "filema": 238, "return_fil": 238, "combin": 238, "stress": 238, "dipol": 238, "magmom": 238, "instead": [238, 249], "later": [238, 279], "calcualtor": 238, "don": 238, "actual": [238, 278, 279], "input_filenam": 238, "output_filenam": 238, "overrid": 238, "executable_postifx": 238, "contructor": 238, "system_chang": 238, "pbc": 238, "initial_charg": 238, "initial_magmom": 238, "alwai": [238, 249], "wiki": 238, "fysik": 238, "dtu": 238, "dk": 238, "sinc": 238, "six": 238, "insert": 238, "like": [238, 240], "shown": 238, "kkrgen": 238, "kkrspec": 238, "kkrch": 238, "run_xband": 238, "xband": [238, 255, 256], "copy_with_potenti": 238, "potential_object": 238, "dct": 240, "alloi": 240, "underli": 240, "enumer": 240, "_find_kei": 240, "correspond": [240, 247, 278], "identif": 240, "th": 240, "orderd": 240, "replace_typ": 240, "primary_atomic_typ": 240, "largest": 240, "primary_atomic_numb": 240, "main": [240, 279], "primary_symbol": [240, 247], "_normal": 240, "except_from": 240, "normal": 240, "sum": 240, "multipli": [240, 242], "remaind": 240, "among": [240, 249], "skip": [240, 278], "total_occup": 240, "to_occup": 240, "radial": [241, 242, 243], "radial_mesh": [242, 243, 273], "r1": 242, "dx": 242, "jrmt": 242, "rmt": 242, "jrw": 242, "rw": 242, "r_n": 242, "r_": 242, "vref": 245, "rmtref": 245, "spatial": [247, 249], "fraction": 247, "belong": 247, "captur": 247, "partial": 247, "occpanc": 247, "pseudoatom": 247, "atomictypeslookup": 247, "enhanc": 248, "initi": 249, "sites_array_nam": 249, "sprkkr_sites_data": 249, "promote_ase_atom": [249, 278, 279], "usabl": 249, "bit": [249, 255], "ugli": 249, "hack": 249, "__class__": 249, "extra": 249, "promot": [249, 279], "consid": 249, "_init": 249, "compute_sites_symmetri": [249, 279], "symprec": 249, "_site": 249, "ident": 249, "firstli": 249, "nearli": 249, "recomput": 249, "won": 249, "newli": [249, 279], "get_spacegroup": 249, "_compute_sites_symmetri": 249, "metod": 249, "cancel_sites_symmetri": 249, "cancel": 249, "uniq": 249, "wa": 249, "_cancel_sites_symmetri": 249, "includ": 249, "fulli": [249, 256], "made": [249, 279], "reflect": [249, 279], "reset_sprkkr_potenti": 249, "atomdata": [250, 273], "layerdata": [250, 273], "helper": [250, 251], "a2s_visualise_in_struct": [250, 271, 273, 279], "structure_file_to_atom": [250, 273], "visualis": [250, 270, 273, 279], "surfac": [250, 254, 279], "in_structur": [250, 251, 254, 279], "inp": [250, 251, 253, 254, 270, 279], "implementaion": 250, "from_text": 251, "get_symbol": 251, "n_bulk": 254, "vacuum_height": 254, "repetit": 254, "bulk": [254, 275], "height": 254, "abov": [254, 278, 279], "thy": 255, "old": [255, 279], "legaci": 255, "caution": 255, "sysfil": [256, 257, 273], "Not": 256, "thoroughli": 256, "nor": [256, 279], "guarant": 256, "calculatortest": 261, "test_calcul": [262, 273], "test_run": 262, "sitestest": 263, "test_sit": [264, 273], "test_vacuum": 264, "test_occup": [264, 266], "sprkkratomstest": 265, "test_sprkkr_atom": [266, 273], "test_extend": 266, "test_atom": 266, "test_symmetri": 266, "sysfiletest": 267, "test_sysfil": [268, 273], "script": [269, 278, 279], "sctipt": 270, "in_struct": 270, "equivalent_sites_for_spacegroup": 273, "possibly_equivalent_sit": 273, "spacegroup_dataset": 273, "add_excluded_names_condit": 273, "unique_dict": 273, "fortran_format": 273, "optional_line_end": 273, "line_end": 273, "end_of_fil": 273, "separator_pattern": 273, "optional_quot": 273, "addconditionex": 273, "addparseactionex": 273, "delimitedlist": 273, "generate_grammar": 273, "replace_whitechar": 273, "normalize_type_map": 273, "type_from_type_map": 273, "type_from_set_map": 273, "line_str": 273, "pot_mix": 273, "defkeyword": 273, "type_from_default_valu": 273, "type_from_typ": 273, "type_from_valu": 273, "patch_packag": 273, "add_to_signatur": 273, "copy_list": 273, "lazy_valu": 273, "njit": 273, "numpy_index": 273, "resolve_executable_postfix": 273, "unique_map": 273, "floatjm": 273, "sysfile_cont": 273, "write_sysfil": 273, "materi": 275, "bundl": 275, "contribut": 275, "report": 275, "manag": [275, 279], "git": [275, 279], "pip": [275, 279], "conda": [275, 279], "One": 275, "step": [275, 278], "bug": 275, "philosophi": 275, "program": 275, "page": 275, "around": 278, "leav": 278, "node": 278, "Their": 278, "mani": [278, 279], "relationship": 278, "subpackag": 278, "miscellan": 278, "mod": 278, "support": [278, 279], "prescrib": 278, "possibli": 278, "simpli": 278, "regex": 278, "rest": 278, "oop": 278, "ancestor": 278, "sprkrr": 278, "readthedoc": 278, "latest": 278, "phase": 278, "input_prameters_definit": 278, "exact": 278, "invok": 278, "sh": 279, "encourag": 279, "somewher": 279, "build": 279, "bash": 279, "kkrscf8": 279, "rc": 279, "export": 279, "topic": 279, "u": 279, "aim": 279, "primarili": 279, "limit": 279, "assum": 279, "experienc": 279, "analyz": 279, "bellow": 279, "sever": 279, "basic": 279, "li": 279, "sprkkr_command_suffix": 279, "licl": 279, "rocksalt": 279, "indistinguish": 279, "br": 279, "lower": 279, "queri": 279, "interoper": 279, "were": 279, "moment": 279, "receiv": 279, "consist": 279, "cycl": 279, "choos": 279, "load": 279, "we": 279, "avoid": 279, "conflict": 279, "through": 279, "acess": 279, "interact": 279, "input_paramt": 279, "uppercas": 279, "least": 279, "im": 279, "tau": 279, "nktab": 279, "my_custom_sect": 279, "my_custom_valu": 279, "necess": 279, "usecas": 279, "subseuent": 279, "repeat": 279, "mai": 279, "an_input_fil": 279, "a_potential_fil": 279, "cours": 279, "my_potential_fil": 279, "irel": 279, "accep": 279, "temp": 279, "interperet": 279, "cf4": 279, "duplic": 279, "therefor": 279, "logic": 279, "behind": 279, "scene": 279, "latter": 279, "indic": 279, "modif": 279, "setter": 279, "thereaft": 279, "batch": 279, "detect": 279, "mpirunn": 279, "openmpi": 279, "mpich": 279, "subdirectori": 279, "visualise_in_struct": 279, "py": 279, "must": 279, "our": 279, "featur": 279, "highli": 279, "appreci": 279}, "objects": {"": [[1, 0, 0, "-", "ase2sprkkr"]], "ase2sprkkr": [[2, 0, 0, "-", "bindings"], [10, 0, 0, "-", "common"], [113, 0, 0, "-", "input_parameters"], [144, 0, 0, "-", "outputs"], [165, 0, 0, "-", "physics"], [168, 0, 0, "-", "potentials"], [233, 0, 0, "-", "sprkkr"], [269, 0, 0, "-", "tools"], [272, 0, 0, "-", "version"]], "ase2sprkkr.bindings": [[3, 0, 0, "-", "es_finder"], [5, 0, 0, "-", "spglib"]], "ase2sprkkr.bindings.es_finder": [[4, 1, 1, "", "empty_spheres"]], "ase2sprkkr.bindings.spglib": [[6, 1, 1, "", "compute_spacegroup"], [7, 1, 1, "", "equivalent_sites_for_spacegroup"], [8, 1, 1, "", "possibly_equivalent_sites"], [9, 1, 1, "", "spacegroup_dataset"]], "ase2sprkkr.common": [[11, 0, 0, "-", "base_configuration"], [13, 0, 0, "-", "configuration_containers"], [19, 0, 0, "-", "configuration_definitions"], [27, 0, 0, "-", "formats"], [29, 0, 0, "-", "grammar"], [42, 0, 0, "-", "grammar_types"], [87, 0, 0, "-", "init_tests"], [90, 0, 0, "-", "misc"], [98, 0, 0, "-", "options"], [101, 0, 0, "-", "process_output_reader"], [104, 0, 0, "-", "test"], [111, 0, 0, "-", "unique_values"]], "ase2sprkkr.common.base_configuration": [[12, 2, 1, "", "BaseConfiguration"]], "ase2sprkkr.common.base_configuration.BaseConfiguration": [[12, 3, 1, "", "__init__"], [12, 4, 1, "", "_container"], [12, 4, 1, "", "_definition"], [12, 3, 1, "", "_get_path"], [12, 3, 1, "", "_get_root_container"], [12, 5, 1, "", "name"], [12, 3, 1, "", "to_dict"]], "ase2sprkkr.common.configuration_containers": [[14, 2, 1, "", "BaseSection"], [15, 2, 1, "", "ConfigurationContainer"], [16, 2, 1, "", "CustomSection"], [17, 2, 1, "", "RootConfigurationContainer"], [18, 2, 1, "", "Section"]], "ase2sprkkr.common.configuration_containers.BaseSection": [[14, 3, 1, "", "__init__"], [14, 3, 1, "", "has_any_value"], [14, 3, 1, "", "save_to_file"]], "ase2sprkkr.common.configuration_containers.ConfigurationContainer": [[15, 3, 1, "", "__init__"], [15, 3, 1, "", "_add"], [15, 3, 1, "", "_find_value"], [15, 3, 1, "", "_get_member"], [15, 3, 1, "", "_interactive_member_name"], [15, 4, 1, "", "_interactive_members"], [15, 4, 1, "", "_members"], [15, 3, 1, "", "add"], [15, 3, 1, "", "as_dict"], [15, 3, 1, "", "clear"], [15, 3, 1, "", "get"], [15, 3, 1, "", "members"], [15, 3, 1, "", "remove_member"], [15, 3, 1, "", "save_to_file"], [15, 3, 1, "", "set"], [15, 3, 1, "", "to_string"]], "ase2sprkkr.common.configuration_containers.CustomSection": [[16, 3, 1, "", "__init__"], [16, 3, 1, "", "factory"], [16, 3, 1, "", "remove"]], "ase2sprkkr.common.configuration_containers.RootConfigurationContainer": [[17, 3, 1, "", "__init__"], [17, 3, 1, "", "find"], [17, 3, 1, "", "read_from_file"], [17, 3, 1, "", "save_to_file"]], "ase2sprkkr.common.configuration_containers.Section": [[18, 3, 1, "", "__init__"], [18, 5, 1, "", "definition"]], "ase2sprkkr.common.configuration_definitions": [[20, 2, 1, "", "BaseContainerDefinition"], [21, 2, 1, "", "BaseDefinition"], [22, 2, 1, "", "BaseSectionDefinition"], [23, 2, 1, "", "BaseValueDefinition"], [24, 2, 1, "", "ConfDefinition"], [25, 1, 1, "", "add_excluded_names_condition"], [26, 1, 1, "", "unique_dict"]], "ase2sprkkr.common.configuration_definitions.BaseContainerDefinition": [[20, 3, 1, "", "__init__"], [20, 3, 1, "", "_dict_from_named_values"], [20, 3, 1, "", "_first_section_is_fixed"], [20, 3, 1, "", "_grammar"], [20, 4, 1, "", "_init_args"], [20, 3, 1, "", "_values_grammar"], [20, 3, 1, "", "all_member_names"], [20, 3, 1, "", "copy"], [20, 3, 1, "", "create_object"], [20, 3, 1, "", "custom_member_grammar"], [20, 4, 1, "", "custom_name_characters"], [20, 3, 1, "", "delimited_custom_value_grammar"], [20, 4, 1, "", "force_order"], [20, 3, 1, "", "members"], [20, 3, 1, "", "names"], [20, 3, 1, "", "parse"], [20, 3, 1, "", "parse_file"], [20, 3, 1, "", "parse_from_stream"], [20, 3, 1, "", "parse_return"], [20, 3, 1, "", "remove"], [20, 4, 1, "", "validate"], [20, 4, 1, "", "value_name_format"]], "ase2sprkkr.common.configuration_definitions.BaseDefinition": [[21, 3, 1, "", "__init__"], [21, 3, 1, "", "_tuple_with_my_name"], [21, 4, 1, "", "alternative_names"], [21, 3, 1, "", "create_object"], [21, 4, 1, "", "description"], [21, 4, 1, "", "do_not_skip_whitespaces_before_name"], [21, 3, 1, "", "grammar"], [21, 4, 1, "", "help"], [21, 4, 1, "", "is_optional"], [21, 4, 1, "", "name"], [21, 4, 1, "", "name_in_grammar"], [21, 4, 1, "", "result_class"]], "ase2sprkkr.common.configuration_definitions.BaseSectionDefinition": [[22, 3, 1, "", "__init__"], [22, 4, 1, "", "custom_value_name"], [22, 3, 1, "", "delimited_custom_value_grammar"], [22, 4, 1, "", "result_class"], [22, 5, 1, "", "values"]], "ase2sprkkr.common.configuration_definitions.BaseValueDefinition": [[23, 3, 1, "", "__init__"], [23, 3, 1, "", "_grammar"], [23, 3, 1, "", "copy"], [23, 5, 1, "", "formated_name"], [23, 3, 1, "", "get_value"], [23, 4, 1, "", "name_in_grammar"], [23, 3, 1, "", "remove"], [23, 4, 1, "", "result_class"], [23, 3, 1, "", "validate"], [23, 5, 1, "", "value_name_format"], [23, 3, 1, "", "write"]], "ase2sprkkr.common.configuration_definitions.ConfDefinition": [[24, 3, 1, "", "__init__"], [24, 3, 1, "", "_grammar"], [24, 3, 1, "", "_tuple_with_my_name"], [24, 4, 1, "", "custom_value_name"], [24, 3, 1, "", "from_dict"], [24, 4, 1, "", "name_in_grammar"], [24, 3, 1, "", "parse_return"], [24, 3, 1, "", "read_from_file"], [24, 5, 1, "", "sections"]], "ase2sprkkr.common.formats": [[28, 1, 1, "", "fortran_format"]], "ase2sprkkr.common.grammar": [[30, 2, 1, "", "White"], [31, 1, 1, "", "addConditionEx"], [32, 1, 1, "", "addParseActionEx"], [33, 1, 1, "", "delimitedList"], [34, 6, 1, "", "end_of_file"], [35, 1, 1, "", "generate_grammar"], [36, 6, 1, "", "line_end"], [37, 6, 1, "", "optional_line_end"], [38, 6, 1, "", "optional_quote"], [39, 1, 1, "", "replace_whitechars"], [40, 6, 1, "", "separator"], [41, 6, 1, "", "separator_pattern"]], "ase2sprkkr.common.grammar.White": [[30, 3, 1, "", "__init__"], [30, 4, 1, "", "_abc_impl"]], "ase2sprkkr.common.grammar_types": [[43, 2, 1, "", "Array"], [44, 2, 1, "", "BaseMixed"], [45, 2, 1, "", "BaseRealWithUnits"], [46, 2, 1, "", "BaseString"], [47, 2, 1, "", "BaseType"], [48, 2, 1, "", "Bool"], [49, 2, 1, "", "Date"], [50, 1, 1, "", "DefKeyword"], [51, 2, 1, "", "Energy"], [52, 2, 1, "", "Flag"], [53, 2, 1, "", "Integer"], [54, 2, 1, "", "Keyword"], [55, 2, 1, "", "LineString"], [56, 2, 1, "", "Mixed"], [57, 2, 1, "", "PotMixed"], [58, 2, 1, "", "QString"], [59, 2, 1, "", "Real"], [60, 2, 1, "", "RealWithUnits"], [61, 2, 1, "", "Separator"], [62, 2, 1, "", "Sequence"], [63, 2, 1, "", "SetOf"], [64, 2, 1, "", "String"], [65, 2, 1, "", "Table"], [66, 2, 1, "", "Unsigned"], [67, 6, 1, "", "boolean"], [68, 6, 1, "", "energy"], [69, 6, 1, "", "flag"], [70, 1, 1, "", "format_for_type"], [71, 6, 1, "", "integer"], [72, 6, 1, "", "line_string"], [73, 6, 1, "", "mixed"], [74, 1, 1, "", "normalize_type"], [75, 6, 1, "", "normalize_type_map"], [76, 6, 1, "", "pot_mixed"], [77, 6, 1, "", "qstring"], [78, 6, 1, "", "real"], [79, 6, 1, "", "separator"], [80, 6, 1, "", "string"], [81, 1, 1, "", "type_from_default_value"], [82, 6, 1, "", "type_from_set_map"], [83, 1, 1, "", "type_from_type"], [84, 6, 1, "", "type_from_type_map"], [85, 1, 1, "", "type_from_value"], [86, 6, 1, "", "unsigned"]], "ase2sprkkr.common.grammar_types.Array": [[43, 3, 1, "", "__init__"], [43, 3, 1, "", "_string"], [43, 3, 1, "", "_validate"], [43, 3, 1, "", "convert"], [43, 4, 1, "", "delimiter"], [43, 4, 1, "", "delimiter_str"], [43, 3, 1, "", "grammar_name"]], "ase2sprkkr.common.grammar_types.BaseMixed": [[44, 3, 1, "", "__init__"], [44, 3, 1, "", "_grammar"], [44, 3, 1, "", "_validate"], [44, 3, 1, "", "get_type"], [44, 3, 1, "", "grammar_name"], [44, 4, 1, "", "string_type"], [44, 4, 1, "", "type"]], "ase2sprkkr.common.grammar_types.BaseRealWithUnits": [[45, 3, 1, "", "__init__"], [45, 3, 1, "", "_grammar"], [45, 3, 1, "", "_grammar_units"], [45, 3, 1, "", "_validate"], [45, 4, 1, "", "grammar_cache"], [45, 3, 1, "", "grammar_name"], [45, 4, 1, "", "numpy_type"]], "ase2sprkkr.common.grammar_types.BaseString": [[46, 3, 1, "", "__init__"], [46, 3, 1, "", "_validate"]], "ase2sprkkr.common.grammar_types.BaseType": [[47, 3, 1, "", "__init__"], [47, 3, 1, "", "_string"], [47, 3, 1, "", "_validate"], [47, 3, 1, "", "_valueError"], [47, 3, 1, "", "convert"], [47, 3, 1, "", "copy"], [47, 4, 1, "", "default_value"], [47, 3, 1, "", "enrich"], [47, 4, 1, "", "format"], [47, 3, 1, "", "grammar"], [47, 3, 1, "", "grammar_name"], [47, 4, 1, "", "has_value"], [47, 3, 1, "", "missing_value"], [47, 4, 1, "", "name_in_grammar"], [47, 4, 1, "", "numpy_type"], [47, 3, 1, "", "parse"], [47, 3, 1, "", "parse_from_stream"], [47, 4, 1, "", "postfix"], [47, 4, 1, "", "prefix"], [47, 3, 1, "", "print"], [47, 3, 1, "", "read"], [47, 3, 1, "", "string"], [47, 3, 1, "", "transform_grammar"], [47, 3, 1, "", "validate"], [47, 3, 1, "", "write"]], "ase2sprkkr.common.grammar_types.Bool": [[48, 4, 1, "", "I"], [48, 3, 1, "", "__init__"], [48, 4, 1, "", "_grammar"], [48, 3, 1, "", "_string"], [48, 3, 1, "", "_validate"], [48, 3, 1, "", "grammar_name"], [48, 4, 1, "", "numpy_type"]], "ase2sprkkr.common.grammar_types.Date": [[49, 4, 1, "", "I"], [49, 3, 1, "", "__init__"], [49, 4, 1, "", "_grammar"], [49, 3, 1, "", "_string"], [49, 3, 1, "", "_validate"], [49, 3, 1, "", "grammar_name"]], "ase2sprkkr.common.grammar_types.Energy": [[51, 4, 1, "", "I"], [51, 3, 1, "", "__init__"], [51, 4, 1, "", "units"]], "ase2sprkkr.common.grammar_types.Flag": [[52, 4, 1, "", "I"], [52, 3, 1, "", "__init__"], [52, 4, 1, "", "_grammar"], [52, 3, 1, "", "_validate"], [52, 3, 1, "", "grammar_name"], [52, 3, 1, "", "missing_value"], [52, 3, 1, "", "str"]], "ase2sprkkr.common.grammar_types.Integer": [[53, 4, 1, "", "I"], [53, 3, 1, "", "__init__"], [53, 4, 1, "", "_grammar"], [53, 3, 1, "", "_validate"], [53, 3, 1, "", "grammar_name"], [53, 4, 1, "", "numpy_type"]], "ase2sprkkr.common.grammar_types.Keyword": [[54, 3, 1, "", "__init__"], [54, 3, 1, "", "_validate"], [54, 3, 1, "", "convert"], [54, 3, 1, "", "grammar_name"]], "ase2sprkkr.common.grammar_types.LineString": [[55, 4, 1, "", "I"], [55, 3, 1, "", "__init__"], [55, 4, 1, "", "_grammar"], [55, 3, 1, "", "grammar_name"]], "ase2sprkkr.common.grammar_types.Mixed": [[56, 4, 1, "", "I"], [56, 3, 1, "", "__init__"], [56, 3, 1, "", "missing_value"], [56, 4, 1, "", "string_type"], [56, 4, 1, "", "types"]], "ase2sprkkr.common.grammar_types.PotMixed": [[57, 4, 1, "", "I"], [57, 3, 1, "", "__init__"], [57, 3, 1, "", "_string"], [57, 4, 1, "", "string_type"], [57, 4, 1, "", "types"]], "ase2sprkkr.common.grammar_types.QString": [[58, 4, 1, "", "I"], [58, 3, 1, "", "__init__"], [58, 4, 1, "", "_grammar"], [58, 3, 1, "", "grammar_name"]], "ase2sprkkr.common.grammar_types.Real": [[59, 4, 1, "", "I"], [59, 3, 1, "", "__init__"], [59, 4, 1, "", "_grammar"], [59, 3, 1, "", "_validate"], [59, 3, 1, "", "grammar_name"], [59, 4, 1, "", "numpy_type"]], "ase2sprkkr.common.grammar_types.RealWithUnits": [[60, 3, 1, "", "__init__"]], "ase2sprkkr.common.grammar_types.Separator": [[61, 4, 1, "", "I"], [61, 3, 1, "", "__init__"], [61, 4, 1, "", "_grammar"], [61, 3, 1, "", "_grammar_name"], [61, 3, 1, "", "_string"], [61, 3, 1, "", "_validate"], [61, 4, 1, "", "has_value"]], "ase2sprkkr.common.grammar_types.Sequence": [[62, 3, 1, "", "__init__"], [62, 3, 1, "", "_grammar"], [62, 3, 1, "", "_string"], [62, 3, 1, "", "_validate"], [62, 3, 1, "", "convert"], [62, 3, 1, "", "enrich"], [62, 3, 1, "", "grammar_name"]], "ase2sprkkr.common.grammar_types.SetOf": [[63, 3, 1, "", "__init__"], [63, 4, 1, "", "delimiter"], [63, 4, 1, "", "delimiter_str"], [63, 3, 1, "", "transform_grammar"]], "ase2sprkkr.common.grammar_types.String": [[64, 4, 1, "", "I"], [64, 3, 1, "", "__init__"], [64, 4, 1, "", "_grammar"], [64, 3, 1, "", "grammar_name"]], "ase2sprkkr.common.grammar_types.Table": [[65, 3, 1, "", "__init__"], [65, 3, 1, "", "_grammar"], [65, 3, 1, "", "_string"], [65, 3, 1, "", "_validate"], [65, 3, 1, "", "convert"], [65, 3, 1, "", "grammar_name"], [65, 4, 1, "", "name_in_grammar"], [65, 3, 1, "", "number_of_collumns"], [65, 5, 1, "", "numpy_type"], [65, 3, 1, "", "zero_data"]], "ase2sprkkr.common.grammar_types.Unsigned": [[66, 4, 1, "", "I"], [66, 3, 1, "", "__init__"], [66, 4, 1, "", "_grammar"], [66, 3, 1, "", "_validate"], [66, 3, 1, "", "grammar_name"], [66, 4, 1, "", "numpy_type"]], "ase2sprkkr.common.init_tests.TestCase": [[88, 3, 1, "", "__init__"], [88, 3, 1, "", "assertAlmostEqual"], [88, 3, 1, "", "assertAsyncEqual"], [88, 3, 1, "", "assertAsyncRaises"], [88, 3, 1, "", "runAsync"], [88, 3, 1, "", "setUp"]], "ase2sprkkr.common.init_tests": [[89, 1, 1, "", "patch_package"]], "ase2sprkkr.common.misc": [[91, 2, 1, "", "OrderedDict"], [92, 1, 1, "", "add_to_signature"], [93, 2, 1, "", "class_property"], [94, 1, 1, "", "copy_list"], [95, 1, 1, "", "lazy_value"], [96, 1, 1, "", "njit"], [97, 1, 1, "", "numpy_index"]], "ase2sprkkr.common.misc.OrderedDict": [[91, 3, 1, "", "__init__"], [91, 3, 1, "", "first_item"], [91, 3, 1, "", "index"]], "ase2sprkkr.common.misc.class_property": [[93, 3, 1, "", "__init__"]], "ase2sprkkr.common.options": [[99, 2, 1, "", "CustomOption"], [100, 2, 1, "", "Option"]], "ase2sprkkr.common.options.CustomOption": [[99, 3, 1, "", "__init__"], [99, 3, 1, "", "factory"], [99, 3, 1, "", "remove"]], "ase2sprkkr.common.options.Option": [[100, 3, 1, "", "__init__"], [100, 3, 1, "", "_find_value"], [100, 3, 1, "", "as_dict"], [100, 3, 1, "", "clear"], [100, 3, 1, "", "get"], [100, 3, 1, "", "get_path"], [100, 5, 1, "", "name"], [100, 3, 1, "", "save_to_file"], [100, 3, 1, "", "set"]], "ase2sprkkr.common.process_output_reader": [[102, 2, 1, "", "AsyncioFileReader"], [103, 2, 1, "", "BaseProcessOutputReader"]], "ase2sprkkr.common.process_output_reader.AsyncioFileReader": [[102, 3, 1, "", "__init__"], [102, 3, 1, "", "close"], [102, 3, 1, "", "readline"], [102, 3, 1, "", "readuntil"], [102, 3, 1, "", "separator_shifts"]], "ase2sprkkr.common.process_output_reader.BaseProcessOutputReader": [[103, 3, 1, "", "__init__"], [103, 3, 1, "", "read_error"], [103, 3, 1, "", "read_from_file"], [103, 3, 1, "", "read_output"], [103, 3, 1, "", "result"], [103, 3, 1, "", "run"], [103, 3, 1, "", "run_subprocess"]], "ase2sprkkr.common.test": [[105, 0, 0, "-", "init_tests"], [107, 0, 0, "-", "test_common"], [109, 0, 0, "-", "test_grammar_types"]], "ase2sprkkr.common.test.init_tests": [[106, 2, 1, "", "TestCase"]], "ase2sprkkr.common.test.init_tests.TestCase": [[106, 3, 1, "", "__init__"], [106, 3, 1, "", "assertAlmostEqual"], [106, 3, 1, "", "assertAsyncEqual"], [106, 3, 1, "", "assertAsyncRaises"], [106, 3, 1, "", "runAsync"], [106, 3, 1, "", "setUp"]], "ase2sprkkr.common.test.test_common": [[108, 2, 1, "", "CommonTest"]], "ase2sprkkr.common.test.test_common.CommonTest": [[108, 3, 1, "", "__init__"], [108, 3, 1, "", "test_asyncio_file_reader"], [108, 3, 1, "", "test_common"]], "ase2sprkkr.common.test.test_grammar_types": [[110, 2, 1, "", "GrammarTest"]], "ase2sprkkr.common.test.test_grammar_types.GrammarTest": [[110, 3, 1, "", "__init__"], [110, 3, 1, "", "_test_types"], [110, 3, 1, "", "test_types"]], "ase2sprkkr.common.unique_values": [[112, 2, 1, "", "UniqueValuesMapping"]], "ase2sprkkr.common.unique_values.UniqueValuesMapping": [[112, 3, 1, "", "__init__"], [112, 3, 1, "", "from_values"], [112, 3, 1, "", "indexes"], [112, 3, 1, "", "iter_unique"], [112, 3, 1, "", "len_of_unique"], [112, 4, 1, "", "mapping"], [112, 3, 1, "", "merge"], [112, 4, 1, "", "value_to_class_id"]], "ase2sprkkr.input_parameters": [[114, 0, 0, "-", "definitions"], [130, 0, 0, "-", "input_parameters"], [133, 0, 0, "-", "input_parameters_definitions"], [137, 0, 0, "-", "test"]], "ase2sprkkr.input_parameters.definitions": [[115, 0, 0, "-", "arpes"], [117, 0, 0, "-", "dos"], [119, 0, 0, "-", "phagen"], [121, 0, 0, "-", "scf"], [123, 0, 0, "-", "sections"]], "ase2sprkkr.input_parameters.definitions.arpes": [[116, 6, 1, "", "input_parameters"]], "ase2sprkkr.input_parameters.definitions.dos": [[118, 6, 1, "", "input_parameters"]], "ase2sprkkr.input_parameters.definitions.phagen": [[120, 6, 1, "", "input_parameters"]], "ase2sprkkr.input_parameters.definitions.scf": [[122, 6, 1, "", "input_parameters"]], "ase2sprkkr.input_parameters.definitions.sections": [[124, 1, 1, "", "CONTROL"], [125, 6, 1, "", "ENERGY"], [126, 6, 1, "", "SCF"], [127, 6, 1, "", "SITES"], [128, 1, 1, "", "TASK"], [129, 6, 1, "", "TAU"]], "ase2sprkkr.input_parameters.input_parameters": [[131, 2, 1, "", "InputParameters"], [132, 1, 1, "", "resolve_executable_postfix"]], "ase2sprkkr.input_parameters.input_parameters.InputParameters": [[131, 3, 1, "", "__init__"], [131, 4, 1, "", "_default_mpi_runner"], [131, 3, 1, "", "calculate"], [131, 3, 1, "", "create"], [131, 3, 1, "", "create_input_parameters"], [131, 3, 1, "", "default_mpi_runner"], [131, 3, 1, "", "default_parameters"], [131, 3, 1, "", "definitions"], [131, 3, 1, "", "executable_params"], [131, 3, 1, "", "from_file"], [131, 3, 1, "", "is_it_a_input_parameters_name"], [131, 3, 1, "", "is_mpi"], [131, 3, 1, "", "mpi_runner"], [131, 3, 1, "", "read_output_from_file"], [131, 3, 1, "", "result_reader"], [131, 3, 1, "", "run_process"], [131, 3, 1, "", "set_option"], [131, 5, 1, "", "task_name"]], "ase2sprkkr.input_parameters.input_parameters_definitions": [[134, 2, 1, "", "InputParametersDefinition"], [135, 2, 1, "", "SectionDefinition"], [136, 2, 1, "", "ValueDefinition"]], "ase2sprkkr.input_parameters.input_parameters_definitions.InputParametersDefinition": [[134, 3, 1, "", "__init__"], [134, 4, 1, "", "child_class"], [134, 3, 1, "", "custom_class"], [134, 3, 1, "", "custom_value_grammar"], [134, 4, 1, "", "delimiter"], [134, 3, 1, "", "grammar_of_delimiter"], [134, 4, 1, "", "result_class"]], "ase2sprkkr.input_parameters.input_parameters_definitions.SectionDefinition": [[135, 3, 1, "", "__init__"], [135, 4, 1, "", "child_class"], [135, 3, 1, "", "custom_class"], [135, 4, 1, "", "delimiter"], [135, 4, 1, "", "do_not_skip_whitespaces_before_name"], [135, 3, 1, "", "grammar_of_delimiter"]], "ase2sprkkr.input_parameters.input_parameters_definitions.ValueDefinition": [[136, 3, 1, "", "__init__"], [136, 4, 1, "", "_init_args"], [136, 3, 1, "", "grammar_of_delimiter"], [136, 4, 1, "", "name_value_delimiter"], [136, 4, 1, "", "prefix"]], "ase2sprkkr.input_parameters.test": [[138, 0, 0, "-", "init_tests"], [140, 0, 0, "-", "test_definitions"], [142, 0, 0, "-", "test_input_parameters"]], "ase2sprkkr.input_parameters.test.init_tests": [[139, 2, 1, "", "TestCase"]], "ase2sprkkr.input_parameters.test.init_tests.TestCase": [[139, 3, 1, "", "__init__"], [139, 3, 1, "", "assertAlmostEqual"], [139, 3, 1, "", "assertAsyncEqual"], [139, 3, 1, "", "assertAsyncRaises"], [139, 3, 1, "", "runAsync"], [139, 3, 1, "", "setUp"]], "ase2sprkkr.input_parameters.test.test_definitions": [[141, 2, 1, "", "TestDefinitions"]], "ase2sprkkr.input_parameters.test.test_definitions.TestDefinitions": [[141, 3, 1, "", "__init__"], [141, 3, 1, "", "test_definitions"]], "ase2sprkkr.input_parameters.test.test_input_parameters": [[143, 2, 1, "", "TestInputParameters"]], "ase2sprkkr.input_parameters.test.test_input_parameters.TestInputParameters": [[143, 3, 1, "", "__init__"], [143, 3, 1, "", "test_custom_value"], [143, 3, 1, "", "test_input_parameters_definition"], [143, 3, 1, "", "test_section_delimiter_value"]], "ase2sprkkr.outputs": [[145, 0, 0, "-", "output_definitions"], [150, 0, 0, "-", "readers"], [157, 0, 0, "-", "task_result"], [160, 0, 0, "-", "test"]], "ase2sprkkr.outputs.output_definitions": [[146, 2, 1, "", "OutputNonameValueDefinition"], [147, 2, 1, "", "OutputSectionDefinition"], [148, 2, 1, "", "OutputValueDefinition"], [149, 2, 1, "", "OutputValueEqualDefinition"]], "ase2sprkkr.outputs.output_definitions.OutputNonameValueDefinition": [[146, 3, 1, "", "__init__"], [146, 4, 1, "", "name_in_grammar"]], "ase2sprkkr.outputs.output_definitions.OutputSectionDefinition": [[147, 3, 1, "", "__init__"], [147, 4, 1, "", "child_class"], [147, 4, 1, "", "custom_class"], [147, 4, 1, "", "delimiter"], [147, 4, 1, "", "force_order"], [147, 3, 1, "", "grammar_of_delimiter"], [147, 4, 1, "", "name_in_grammar"]], "ase2sprkkr.outputs.output_definitions.OutputValueDefinition": [[148, 3, 1, "", "__init__"], [148, 3, 1, "", "grammar_of_delimiter"], [148, 4, 1, "", "prefix"]], "ase2sprkkr.outputs.output_definitions.OutputValueEqualDefinition": [[149, 3, 1, "", "__init__"], [149, 3, 1, "", "grammar_of_delimiter"], [149, 4, 1, "", "name_value_delimiter"]], "ase2sprkkr.outputs.readers": [[151, 0, 0, "-", "default"], [154, 0, 0, "-", "scf"]], "ase2sprkkr.outputs.readers.default": [[152, 2, 1, "", "DefaultOutputReader"], [153, 2, 1, "", "DefaultResult"]], "ase2sprkkr.outputs.readers.default.DefaultOutputReader": [[152, 3, 1, "", "__init__"], [152, 3, 1, "", "read_output"], [152, 4, 1, "", "result_class"]], "ase2sprkkr.outputs.readers.default.DefaultResult": [[153, 3, 1, "", "__init__"]], "ase2sprkkr.outputs.readers.scf": [[155, 2, 1, "", "ScfOutputReader"], [156, 2, 1, "", "ScfResult"]], "ase2sprkkr.outputs.readers.scf.ScfOutputReader": [[155, 3, 1, "", "__init__"], [155, 4, 1, "", "atoms_conf_type"], [155, 3, 1, "", "read_output"], [155, 4, 1, "", "result_class"]], "ase2sprkkr.outputs.readers.scf.ScfResult": [[156, 3, 1, "", "__init__"], [156, 5, 1, "", "calculator"], [156, 5, 1, "", "converged"], [156, 5, 1, "", "energy"], [156, 3, 1, "", "iteration_values"], [156, 5, 1, "", "iterations"], [156, 5, 1, "", "last_iteration"], [156, 3, 1, "", "plot"], [156, 5, 1, "", "potential"], [156, 5, 1, "", "potential_filename"]], "ase2sprkkr.outputs.task_result": [[158, 2, 1, "", "OutputReader"], [159, 2, 1, "", "TaskResult"]], "ase2sprkkr.outputs.task_result.OutputReader": [[158, 3, 1, "", "__init__"], [158, 3, 1, "", "result"]], "ase2sprkkr.outputs.task_result.TaskResult": [[159, 3, 1, "", "__init__"], [159, 5, 1, "", "atoms"]], "ase2sprkkr.outputs.test": [[161, 0, 0, "-", "init_tests"], [163, 0, 0, "-", "test_output"]], "ase2sprkkr.outputs.test.init_tests": [[162, 2, 1, "", "TestCase"]], "ase2sprkkr.outputs.test.init_tests.TestCase": [[162, 3, 1, "", "__init__"], [162, 3, 1, "", "assertAlmostEqual"], [162, 3, 1, "", "assertAsyncEqual"], [162, 3, 1, "", "assertAsyncRaises"], [162, 3, 1, "", "runAsync"], [162, 3, 1, "", "setUp"]], "ase2sprkkr.outputs.test.test_output": [[164, 2, 1, "", "TestOutput"]], "ase2sprkkr.outputs.test.test_output.TestOutput": [[164, 3, 1, "", "__init__"], [164, 3, 1, "", "test_output"]], "ase2sprkkr.physics": [[166, 0, 0, "-", "lattice_data"]], "ase2sprkkr.physics.lattice_data": [[167, 2, 1, "", "LatticeData"]], "ase2sprkkr.physics.lattice_data.LatticeData": [[167, 3, 1, "", "__init__"], [167, 3, 1, "", "bravais_number_from_pearson_symbol"], [167, 4, 1, "", "cell_symmetries"], [167, 4, 1, "", "international_numbers_to_AP"], [167, 4, 1, "", "symmetries"]], "ase2sprkkr.potentials": [[169, 0, 0, "-", "custom_potential_section"], [174, 0, 0, "-", "definitions"], [207, 0, 0, "-", "io_data"], [212, 0, 0, "-", "potential_definitions"], [218, 0, 0, "-", "potential_sections"], [222, 0, 0, "-", "potentials"], [224, 0, 0, "-", "test"]], "ase2sprkkr.potentials.custom_potential_section": [[170, 2, 1, "", "CustomPotentialSection"], [171, 2, 1, "", "CustomPotentialSectionDefinition"], [172, 2, 1, "", "CustomSectionToken"], [173, 2, 1, "", "SectionString"]], "ase2sprkkr.potentials.custom_potential_section.CustomPotentialSection": [[170, 3, 1, "", "__init__"], [170, 3, 1, "", "_depends_on"], [170, 3, 1, "", "_set_from_atoms"], [170, 3, 1, "", "_update_atoms"], [170, 3, 1, "", "reset"]], "ase2sprkkr.potentials.custom_potential_section.CustomPotentialSectionDefinition": [[171, 3, 1, "", "__init__"], [171, 4, 1, "", "mandatory"], [171, 4, 1, "", "name_value_delimiter"], [171, 4, 1, "", "prefix"]], "ase2sprkkr.potentials.custom_potential_section.CustomSectionToken": [[172, 3, 1, "", "__init__"], [172, 4, 1, "", "_abc_impl"], [172, 4, 1, "", "name"], [172, 3, 1, "", "parseImpl"], [172, 4, 1, "", "pattern"]], "ase2sprkkr.potentials.custom_potential_section.SectionString": [[173, 4, 1, "", "I"], [173, 3, 1, "", "__init__"], [173, 4, 1, "", "_grammar"], [173, 4, 1, "", "delimiter_pattern"], [173, 3, 1, "", "grammar_name"], [173, 3, 1, "", "grammar_of_delimiter"], [173, 3, 1, "", "write"]], "ase2sprkkr.potentials.definitions": [[175, 0, 0, "-", "potential"], [177, 0, 0, "-", "sections"]], "ase2sprkkr.potentials.definitions.potential": [[176, 6, 1, "", "potential_definition"]], "ase2sprkkr.potentials.definitions.sections": [[178, 1, 1, "", "_sections"], [179, 0, 0, "-", "global_system_parameter"], [183, 0, 0, "-", "lattice"], [187, 0, 0, "-", "mesh_information"], [191, 0, 0, "-", "occupation"], [195, 0, 0, "-", "reference_system"], [199, 0, 0, "-", "sites"], [203, 0, 0, "-", "types"]], "ase2sprkkr.potentials.definitions.sections.global_system_parameter": [[180, 2, 1, "", "GlobalSystemParameter"], [181, 2, 1, "", "GlobalSystemParameterDefinition"], [182, 4, 1, "", "section"]], "ase2sprkkr.potentials.definitions.sections.global_system_parameter.GlobalSystemParameter": [[180, 3, 1, "", "__init__"], [180, 3, 1, "", "_set_from_atoms"]], "ase2sprkkr.potentials.definitions.sections.global_system_parameter.GlobalSystemParameterDefinition": [[181, 3, 1, "", "__init__"], [181, 4, 1, "", "result_class"]], "ase2sprkkr.potentials.definitions.sections.lattice": [[184, 2, 1, "", "LatticeSection"], [185, 2, 1, "", "LatticeSectionDefinition"], [186, 4, 1, "", "section"]], "ase2sprkkr.potentials.definitions.sections.lattice.LatticeSection": [[184, 3, 1, "", "__init__"], [184, 3, 1, "", "_set_from_atoms"], [184, 3, 1, "", "_update_atoms"]], "ase2sprkkr.potentials.definitions.sections.lattice.LatticeSectionDefinition": [[185, 3, 1, "", "__init__"], [185, 4, 1, "", "result_class"]], "ase2sprkkr.potentials.definitions.sections.mesh_information": [[188, 2, 1, "", "MeshInformationSection"], [189, 2, 1, "", "MeshInformationSectionDefinition"], [190, 4, 1, "", "section"]], "ase2sprkkr.potentials.definitions.sections.mesh_information.MeshInformationSection": [[188, 3, 1, "", "__init__"], [188, 4, 1, "", "_value_class"], [188, 4, 1, "", "_value_name"]], "ase2sprkkr.potentials.definitions.sections.mesh_information.MeshInformationSectionDefinition": [[189, 3, 1, "", "__init__"], [189, 4, 1, "", "result_class"]], "ase2sprkkr.potentials.definitions.sections.occupation": [[192, 2, 1, "", "OccupationSection"], [193, 2, 1, "", "OccupationSectionDefinition"], [194, 4, 1, "", "section"]], "ase2sprkkr.potentials.definitions.sections.occupation.OccupationSection": [[192, 3, 1, "", "__init__"], [192, 3, 1, "", "_set_from_atoms"], [192, 3, 1, "", "_update_atoms"]], "ase2sprkkr.potentials.definitions.sections.occupation.OccupationSectionDefinition": [[193, 3, 1, "", "__init__"], [193, 3, 1, "", "depends_on"], [193, 4, 1, "", "result_class"]], "ase2sprkkr.potentials.definitions.sections.reference_system": [[196, 2, 1, "", "ReferenceSystemSection"], [197, 2, 1, "", "ReferenceSystemSectionDefinition"], [198, 4, 1, "", "section"]], "ase2sprkkr.potentials.definitions.sections.reference_system.ReferenceSystemSection": [[196, 3, 1, "", "__init__"], [196, 3, 1, "", "_set_from_atoms"], [196, 4, 1, "", "_value_class"], [196, 4, 1, "", "_value_name"]], "ase2sprkkr.potentials.definitions.sections.reference_system.ReferenceSystemSectionDefinition": [[197, 3, 1, "", "__init__"], [197, 4, 1, "", "result_class"], [197, 3, 1, "", "validate"]], "ase2sprkkr.potentials.definitions.sections.sites": [[200, 2, 1, "", "SitesSection"], [201, 2, 1, "", "SitesSectionDefinition"], [202, 4, 1, "", "section"]], "ase2sprkkr.potentials.definitions.sections.sites.SitesSection": [[200, 3, 1, "", "__init__"], [200, 3, 1, "", "_set_from_atoms"], [200, 3, 1, "", "_update_atoms"]], "ase2sprkkr.potentials.definitions.sections.sites.SitesSectionDefinition": [[201, 3, 1, "", "__init__"], [201, 4, 1, "", "result_class"]], "ase2sprkkr.potentials.definitions.sections.types": [[204, 2, 1, "", "TypesSection"], [205, 2, 1, "", "TypesSectionDefinition"], [206, 4, 1, "", "section"]], "ase2sprkkr.potentials.definitions.sections.types.TypesSection": [[204, 3, 1, "", "__init__"], [204, 4, 1, "", "_value_class"], [204, 4, 1, "", "_value_name"]], "ase2sprkkr.potentials.definitions.sections.types.TypesSectionDefinition": [[205, 3, 1, "", "__init__"], [205, 4, 1, "", "result_class"]], "ase2sprkkr.potentials.io_data": [[208, 2, 1, "", "BaseIoData"], [209, 2, 1, "", "ReadIoData"], [210, 2, 1, "", "WriteIoData"], [211, 1, 1, "", "unique_mapping"]], "ase2sprkkr.potentials.io_data.BaseIoData": [[208, 3, 1, "", "__init__"]], "ase2sprkkr.potentials.io_data.ReadIoData": [[209, 3, 1, "", "__init__"]], "ase2sprkkr.potentials.io_data.WriteIoData": [[210, 3, 1, "", "__init__"], [210, 5, 1, "", "meshes"], [210, 5, 1, "", "reference_systems"], [210, 5, 1, "", "sites"], [210, 5, 1, "", "types"]], "ase2sprkkr.potentials.potential_definitions": [[213, 2, 1, "", "ASEArraySectionDefinition"], [214, 2, 1, "", "PotSectionDefinition"], [215, 2, 1, "", "PotValueDefinition"], [216, 2, 1, "", "PotentialDefinition"], [217, 2, 1, "", "Separator"]], "ase2sprkkr.potentials.potential_definitions.ASEArraySectionDefinition": [[213, 3, 1, "", "__init__"], [213, 3, 1, "", "depends_on"], [213, 4, 1, "", "result_class"]], "ase2sprkkr.potentials.potential_definitions.PotSectionDefinition": [[214, 3, 1, "", "__init__"], [214, 4, 1, "", "child_class"], [214, 3, 1, "", "custom_class"], [214, 4, 1, "", "delimiter"], [214, 3, 1, "", "depends_on"], [214, 4, 1, "", "force_order"], [214, 3, 1, "", "grammar_of_delimiter"], [214, 4, 1, "", "result_class"], [214, 4, 1, "", "value_name_format"]], "ase2sprkkr.potentials.potential_definitions.PotValueDefinition": [[215, 3, 1, "", "__init__"], [215, 3, 1, "", "grammar_of_delimiter"], [215, 4, 1, "", "name_value_delimiter"], [215, 4, 1, "", "prefix"]], "ase2sprkkr.potentials.potential_definitions.PotentialDefinition": [[216, 3, 1, "", "__init__"], [216, 4, 1, "", "child_class"], [216, 4, 1, "", "custom_class"], [216, 4, 1, "", "custom_name_characters"], [216, 3, 1, "", "custom_value_grammar"], [216, 4, 1, "", "delimiter"], [216, 4, 1, "", "force_order"], [216, 3, 1, "", "grammar_of_delimiter"], [216, 4, 1, "", "result_class"]], "ase2sprkkr.potentials.potential_definitions.Separator": [[217, 3, 1, "", "__init__"], [217, 4, 1, "", "_counter"]], "ase2sprkkr.potentials.potential_sections": [[219, 2, 1, "", "ASEArraySection"], [220, 2, 1, "", "PotentialSection"], [221, 2, 1, "", "UniqueListSection"]], "ase2sprkkr.potentials.potential_sections.ASEArraySection": [[219, 3, 1, "", "__init__"], [219, 3, 1, "", "_depends_on"], [219, 3, 1, "", "_set_from_atoms"], [219, 3, 1, "", "_update_atoms"], [219, 3, 1, "", "has_any_value"]], "ase2sprkkr.potentials.potential_sections.PotentialSection": [[220, 3, 1, "", "__init__"], [220, 3, 1, "", "_depends_on"], [220, 3, 1, "", "_set_from_atoms"], [220, 3, 1, "", "_update_atoms"], [220, 3, 1, "", "reset"]], "ase2sprkkr.potentials.potential_sections.UniqueListSection": [[221, 3, 1, "", "__init__"], [221, 3, 1, "", "_set_from_atoms"], [221, 3, 1, "", "_update_atoms"], [221, 4, 1, "", "_value_class"], [221, 4, 1, "", "_value_name"]], "ase2sprkkr.potentials.potentials": [[223, 2, 1, "", "Potential"]], "ase2sprkkr.potentials.potentials.Potential": [[223, 3, 1, "", "__init__"], [223, 5, 1, "", "atoms"], [223, 3, 1, "", "from_atoms"], [223, 3, 1, "", "from_file"], [223, 3, 1, "", "make_complete"], [223, 4, 1, "", "potential_definition"], [223, 3, 1, "", "read_from_file"], [223, 3, 1, "", "reset"], [223, 3, 1, "", "save_to_file"], [223, 3, 1, "", "set_from_atoms"], [223, 3, 1, "", "update_atoms"]], "ase2sprkkr.potentials.test": [[225, 0, 0, "-", "init_tests"], [227, 0, 0, "-", "test_custom_section"], [229, 0, 0, "-", "test_potential"], [231, 0, 0, "-", "test_structure"]], "ase2sprkkr.potentials.test.init_tests": [[226, 2, 1, "", "TestCase"]], "ase2sprkkr.potentials.test.init_tests.TestCase": [[226, 3, 1, "", "__init__"], [226, 3, 1, "", "assertAlmostEqual"], [226, 3, 1, "", "assertAsyncEqual"], [226, 3, 1, "", "assertAsyncRaises"], [226, 3, 1, "", "runAsync"], [226, 3, 1, "", "setUp"]], "ase2sprkkr.potentials.test.test_custom_section": [[228, 2, 1, "", "TestCustomSection"]], "ase2sprkkr.potentials.test.test_custom_section.TestCustomSection": [[228, 3, 1, "", "__init__"], [228, 3, 1, "", "assertNone"], [228, 3, 1, "", "test_custom_section"]], "ase2sprkkr.potentials.test.test_potential": [[230, 2, 1, "", "TestPotential"]], "ase2sprkkr.potentials.test.test_potential.TestPotential": [[230, 3, 1, "", "__init__"], [230, 3, 1, "", "test_examples"], [230, 3, 1, "", "test_grammar"], [230, 3, 1, "", "test_potential"], [230, 3, 1, "", "test_reset"], [230, 3, 1, "", "test_sequence"]], "ase2sprkkr.potentials.test.test_structure": [[232, 2, 1, "", "TestStructure"]], "ase2sprkkr.potentials.test.test_structure.TestStructure": [[232, 3, 1, "", "__init__"], [232, 3, 1, "", "test_lattice"]], "ase2sprkkr.sprkkr": [[234, 0, 0, "-", "atomic_types"], [236, 0, 0, "-", "calculator"], [239, 0, 0, "-", "occupations"], [241, 0, 0, "-", "radial_meshes"], [244, 0, 0, "-", "reference_systems"], [246, 0, 0, "-", "sites"], [248, 0, 0, "-", "sprkkr_atoms"], [250, 0, 0, "-", "structure"], [255, 0, 0, "-", "sysfile"], [258, 0, 0, "-", "test"]], "ase2sprkkr.sprkkr.atomic_types": [[235, 2, 1, "", "AtomicType"]], "ase2sprkkr.sprkkr.atomic_types.AtomicType": [[235, 3, 1, "", "__init__"], [235, 3, 1, "", "_check_n_electrons"], [235, 3, 1, "", "_clear_symbol_cache"], [235, 4, 1, "", "_mendeleev_module"], [235, 5, 1, "", "atomic_number"], [235, 3, 1, "", "copy"], [235, 3, 1, "", "is_vacuum"], [235, 5, 1, "", "mendeleev"], [235, 5, 1, "", "n_core"], [235, 5, 1, "", "n_electrons"], [235, 5, 1, "", "n_semicore"], [235, 5, 1, "", "n_valence"], [235, 5, 1, "", "symbol"], [235, 3, 1, "", "to_atomic_type"], [235, 3, 1, "", "to_tuple"]], "ase2sprkkr.sprkkr.calculator": [[237, 2, 1, "", "FilenameTemplator"], [238, 2, 1, "", "SPRKKR"]], "ase2sprkkr.sprkkr.calculator.FilenameTemplator": [[237, 3, 1, "", "__init__"], [237, 3, 1, "", "_get"], [237, 4, 1, "", "replacements"]], "ase2sprkkr.sprkkr.calculator.SPRKKR": [[238, 3, 1, "", "__init__"], [238, 4, 1, "", "_abc_impl"], [238, 3, 1, "", "_advance_counter"], [238, 3, 1, "", "_open_file"], [238, 5, 1, "", "atoms"], [238, 3, 1, "", "calculate"], [238, 3, 1, "", "copy_with_potential"], [238, 4, 1, "", "empty_spheres"], [238, 4, 1, "", "executable_postfix"], [238, 3, 1, "", "get"], [238, 4, 1, "", "implemented_properties"], [238, 4, 1, "", "input_file"], [238, 5, 1, "", "input_parameters"], [238, 3, 1, "", "kkrch"], [238, 3, 1, "", "kkrgen"], [238, 3, 1, "", "kkrspec"], [238, 4, 1, "", "mpi"], [238, 4, 1, "", "output_file"], [238, 3, 1, "", "phagen"], [238, 5, 1, "", "potential"], [238, 4, 1, "", "potential_file"], [238, 5, 1, "", "potential_object"], [238, 3, 1, "", "run"], [238, 3, 1, "", "run_xband"], [238, 3, 1, "", "save_input"], [238, 3, 1, "", "scf"], [238, 3, 1, "", "set"]], "ase2sprkkr.sprkkr.occupations": [[240, 2, 1, "", "Occupation"]], "ase2sprkkr.sprkkr.occupations.Occupation": [[240, 3, 1, "", "__init__"], [240, 3, 1, "", "_find_key"], [240, 3, 1, "", "_normalize"], [240, 3, 1, "", "_update_atoms"], [240, 3, 1, "", "add"], [240, 5, 1, "", "as_dict"], [240, 3, 1, "", "atomic_type"], [240, 3, 1, "", "atomic_types"], [240, 3, 1, "", "check"], [240, 3, 1, "", "clean"], [240, 3, 1, "", "copy"], [240, 3, 1, "", "items"], [240, 5, 1, "", "primary_atomic_number"], [240, 5, 1, "", "primary_atomic_type"], [240, 5, 1, "", "primary_symbol"], [240, 3, 1, "", "replace_type"], [240, 3, 1, "", "set"], [240, 3, 1, "", "to_occupation"], [240, 3, 1, "", "to_tuple"], [240, 5, 1, "", "total_occupation"]], "ase2sprkkr.sprkkr.radial_meshes": [[242, 2, 1, "", "ExponentialMesh"], [243, 2, 1, "", "Mesh"]], "ase2sprkkr.sprkkr.radial_meshes.ExponentialMesh": [[242, 3, 1, "", "__init__"], [242, 3, 1, "", "copy"], [242, 3, 1, "", "to_tuple"]], "ase2sprkkr.sprkkr.radial_meshes.Mesh": [[243, 3, 1, "", "__init__"], [243, 3, 1, "", "default"]], "ase2sprkkr.sprkkr.reference_systems": [[245, 2, 1, "", "ReferenceSystem"]], "ase2sprkkr.sprkkr.reference_systems.ReferenceSystem": [[245, 3, 1, "", "__init__"], [245, 3, 1, "", "copy"], [245, 3, 1, "", "default"], [245, 3, 1, "", "to_tuple"]], "ase2sprkkr.sprkkr.sites": [[247, 2, 1, "", "Site"]], "ase2sprkkr.sprkkr.sites.Site": [[247, 3, 1, "", "__init__"], [247, 5, 1, "", "atomic_types"], [247, 3, 1, "", "copy"], [247, 3, 1, "", "index"], [247, 3, 1, "", "is_vacuum"], [247, 5, 1, "", "occupation"], [247, 5, 1, "", "primary_symbol"], [247, 3, 1, "", "reset"], [247, 3, 1, "", "update_atoms"]], "ase2sprkkr.sprkkr.sprkkr_atoms": [[249, 2, 1, "", "SPRKKRAtoms"]], "ase2sprkkr.sprkkr.sprkkr_atoms.SPRKKRAtoms": [[249, 3, 1, "", "__init__"], [249, 3, 1, "", "_cancel_sites_symmetry"], [249, 3, 1, "", "_compute_sites_symmetry"], [249, 3, 1, "", "_init"], [249, 3, 1, "", "cancel_sites_symmetry"], [249, 3, 1, "", "compute_sites_symmetry"], [249, 3, 1, "", "extend"], [249, 5, 1, "", "potential"], [249, 3, 1, "", "promote_ase_atoms"], [249, 3, 1, "", "reset_sprkkr_potential"], [249, 5, 1, "", "sites"], [249, 4, 1, "", "sites_array_name"], [249, 5, 1, "", "symmetry"]], "ase2sprkkr.sprkkr.structure": [[251, 2, 1, "", "AtomData"], [252, 2, 1, "", "LayerData"], [253, 1, 1, "", "floatjm"], [254, 1, 1, "", "structure_file_to_atoms"]], "ase2sprkkr.sprkkr.structure.AtomData": [[251, 3, 1, "", "__init__"], [251, 3, 1, "", "from_text"], [251, 3, 1, "", "get_symbol"]], "ase2sprkkr.sprkkr.structure.LayerData": [[252, 3, 1, "", "__init__"]], "ase2sprkkr.sprkkr.sysfile": [[256, 1, 1, "", "sysfile_content"], [257, 1, 1, "", "write_sysfile"]], "ase2sprkkr.sprkkr.test": [[259, 0, 0, "-", "init_tests"], [261, 0, 0, "-", "test_calculator"], [263, 0, 0, "-", "test_sites"], [265, 0, 0, "-", "test_sprkkr_atoms"], [267, 0, 0, "-", "test_sysfile"]], "ase2sprkkr.sprkkr.test.init_tests": [[260, 2, 1, "", "TestCase"]], "ase2sprkkr.sprkkr.test.init_tests.TestCase": [[260, 3, 1, "", "__init__"], [260, 3, 1, "", "assertAlmostEqual"], [260, 3, 1, "", "assertAsyncEqual"], [260, 3, 1, "", "assertAsyncRaises"], [260, 3, 1, "", "runAsync"], [260, 3, 1, "", "setUp"]], "ase2sprkkr.sprkkr.test.test_calculator": [[262, 2, 1, "", "CalculatorTest"]], "ase2sprkkr.sprkkr.test.test_calculator.CalculatorTest": [[262, 3, 1, "", "__init__"], [262, 3, 1, "", "test_calculator"], [262, 3, 1, "", "test_run"]], "ase2sprkkr.sprkkr.test.test_sites": [[264, 2, 1, "", "SitesTest"]], "ase2sprkkr.sprkkr.test.test_sites.SitesTest": [[264, 3, 1, "", "__init__"], [264, 3, 1, "", "test_occupancy"], [264, 3, 1, "", "test_vacuum"]], "ase2sprkkr.sprkkr.test.test_sprkkr_atoms": [[266, 2, 1, "", "SPRKKRAtomsTest"]], "ase2sprkkr.sprkkr.test.test_sprkkr_atoms.SPRKKRAtomsTest": [[266, 3, 1, "", "__init__"], [266, 3, 1, "", "test_atoms"], [266, 3, 1, "", "test_extend"], [266, 3, 1, "", "test_occupancy"], [266, 3, 1, "", "test_symmetry"]], "ase2sprkkr.sprkkr.test.test_sysfile": [[268, 2, 1, "", "SysfileTest"]], "ase2sprkkr.sprkkr.test.test_sysfile.SysfileTest": [[268, 3, 1, "", "__init__"], [268, 3, 1, "", "test"]], "ase2sprkkr.tools": [[270, 0, 0, "-", "a2s_visualise_in_struct"]], "ase2sprkkr.tools.a2s_visualise_in_struct": [[271, 1, 1, "", "visualise"]]}, "objtypes": {"0": "py:module", "1": "py:function", "2": "py:class", "3": "py:method", "4": "py:attribute", "5": "py:property", "6": "py:data"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "function", "Python function"], "2": ["py", "class", "Python class"], "3": ["py", "method", "Python method"], "4": ["py", "attribute", "Python attribute"], "5": ["py", "property", "Python property"], "6": ["py", "data", "Python data"]}, "titleterms": {"ase2sprkkr": [0, 1, 273, 274, 275, 279], "useful": [0, 275, 277], "link": [0, 275, 277], "instal": [0, 274, 276, 279], "packag": [0, 274, 275, 276, 278], "us": [0, 274, 276, 279], "manag": [0, 274, 276], "further": [0, 274, 276], "note": [0, 274, 276, 279], "from": [0, 274, 276], "git": [0, 274, 276], "sourc": [0, 274, 276], "code": [0, 274, 276], "requir": [0, 274, 276], "obtain": [0, 274, 276], "without": [0, 274, 276], "pip": [0, 274, 276], "conda": [0, 274, 276], "build": [0, 274, 276], "wheel": [0, 274, 276], "One": [0, 274, 276], "step": [0, 274, 276], "document": [0, 274, 275, 276], "how": [0, 274, 276, 279], "contribut": [0, 274, 276, 279], "report": [0, 274, 276, 279], "bug": [0, 274, 276], "bind": 2, "es_find": 3, "empty_spher": 4, "spglib": 5, "compute_spacegroup": 6, "equivalent_sites_for_spacegroup": 7, "possibly_equivalent_sit": 8, "spacegroup_dataset": 9, "common": [10, 278], "base_configur": 11, "baseconfigur": 12, "configuration_contain": 13, "basesect": 14, "configurationcontain": 15, "todo": [15, 256], "customsect": 16, "rootconfigurationcontain": 17, "section": [18, 123, 177, 182, 186, 190, 194, 198, 202, 206], "configuration_definit": 19, "basecontainerdefinit": 20, "basedefinit": 21, "basesectiondefinit": 22, "basevaluedefinit": 23, "confdefinit": 24, "add_excluded_names_condit": 25, "unique_dict": 26, "format": 27, "fortran_format": 28, "grammar": 29, "white": 30, "addconditionex": 31, "addparseactionex": 32, "delimitedlist": 33, "end_of_fil": 34, "generate_grammar": 35, "line_end": 36, "optional_line_end": 37, "optional_quot": 38, "replace_whitechar": 39, "separ": [40, 61, 79, 217], "separator_pattern": 41, "grammar_typ": 42, "arrai": 43, "basemix": 44, "baserealwithunit": 45, "basestr": 46, "basetyp": 47, "bool": 48, "date": 49, "defkeyword": 50, "energi": [51, 68, 125], "flag": [52, 69], "integ": [53, 71], "keyword": 54, "linestr": 55, "mix": [56, 73], "potmix": 57, "qstring": [58, 77], "real": [59, 78], "realwithunit": 60, "sequenc": 62, "setof": 63, "string": [64, 80], "tabl": [65, 275], "unsign": [66, 86], "boolean": 67, "format_for_typ": 70, "line_str": 72, "normalize_typ": 74, "normalize_type_map": 75, "pot_mix": 76, "type_from_default_valu": 81, "type_from_set_map": 82, "type_from_typ": 83, "type_from_type_map": 84, "type_from_valu": 85, "init_test": [87, 105, 138, 161, 225, 259], "testcas": [88, 106, 139, 162, 226, 260], "patch_packag": 89, "misc": 90, "ordereddict": 91, "add_to_signatur": 92, "class_properti": 93, "copy_list": 94, "lazy_valu": 95, "njit": 96, "numpy_index": 97, "option": [98, 100], "customopt": 99, "process_output_read": 101, "asynciofileread": 102, "baseprocessoutputread": 103, "test": [104, 137, 160, 224, 258], "test_common": 107, "commontest": 108, "test_grammar_typ": 109, "grammartest": 110, "unique_valu": 111, "uniquevaluesmap": 112, "input_paramet": [113, 116, 118, 120, 122, 130, 278, 279], "definit": [114, 174], "arp": 115, "do": 117, "phagen": 119, "scf": [121, 126, 154], "control": 124, "site": [127, 199, 246, 247], "task": [128, 279], "tau": 129, "inputparamet": [131, 279], "resolve_executable_postfix": 132, "input_parameters_definit": 133, "inputparametersdefinit": 134, "sectiondefinit": 135, "valuedefinit": 136, "test_definit": 140, "testdefinit": 141, "test_input_paramet": 142, "testinputparamet": 143, "output": [144, 278], "output_definit": 145, "outputnonamevaluedefinit": 146, "outputsectiondefinit": 147, "outputvaluedefinit": 148, "outputvalueequaldefinit": 149, "reader": 150, "default": 151, "defaultoutputread": 152, "defaultresult": 153, "scfoutputread": 155, "scfresult": 156, "task_result": 157, "outputread": 158, "taskresult": 159, "test_output": 163, "testoutput": 164, "physic": 165, "lattice_data": 166, "latticedata": 167, "potenti": [168, 175, 222, 223, 278, 279], "custom_potential_sect": 169, "custompotentialsect": 170, "custompotentialsectiondefinit": 171, "customsectiontoken": 172, "sectionstr": 173, "potential_definit": [176, 212], "_section": 178, "global_system_paramet": 179, "globalsystemparamet": 180, "globalsystemparameterdefinit": 181, "lattic": 183, "latticesect": 184, "latticesectiondefinit": 185, "mesh_inform": 187, "meshinformationsect": 188, "meshinformationsectiondefinit": 189, "occup": [191, 239, 240], "occupationsect": 192, "occupationsectiondefinit": 193, "reference_system": [195, 244], "referencesystemsect": 196, "referencesystemsectiondefinit": 197, "sitessect": 200, "sitessectiondefinit": 201, "type": [203, 279], "typessect": 204, "typessectiondefinit": 205, "io_data": 207, "baseiodata": 208, "readiodata": 209, "writeiodata": 210, "unique_map": 211, "asearraysectiondefinit": 213, "potsectiondefinit": 214, "potvaluedefinit": 215, "potentialdefinit": 216, "potential_sect": 218, "asearraysect": 219, "potentialsect": 220, "uniquelistsect": 221, "test_custom_sect": 227, "testcustomsect": 228, "test_potenti": 229, "testpotenti": 230, "test_structur": 231, "teststructur": 232, "sprkkr": [233, 238, 278], "atomic_typ": 234, "atomictyp": 235, "calcul": [236, 279], "modul": [236, 272], "filenametempl": 237, "radial_mesh": 241, "exponentialmesh": 242, "mesh": 243, "referencesystem": 245, "sprkkr_atom": 248, "sprkkratom": 249, "structur": [250, 278], "atomdata": 251, "layerdata": 252, "floatjm": 253, "structure_file_to_atom": 254, "sysfil": 255, "sysfile_cont": 256, "write_sysfil": 257, "test_calcul": 261, "calculatortest": 262, "test_sit": 263, "sitestest": 264, "test_sprkkr_atom": 265, "sprkkratomstest": 266, "test_sysfil": 267, "sysfiletest": 268, "tool": [269, 278, 279], "a2s_visualise_in_struct": 270, "visualis": 271, "version": 272, "more": [274, 279], "about": [274, 279], "softwar": 275, "content": 275, "class": 275, "indic": 275, "ase2spr": 278, "kkr": 278, "": 278, "philosophi": 278, "develop": 278, "The": 278, "base": 278, "read": [278, 279], "configur": 278, "file": [278, 279], "write": 278, "run": [278, 279], "program": 278, "usag": 279, "comput": 279, "bulk": 279, "materi": 279, "defin": 279, "properti": 279, "result": 279, "set": 279, "input": 279, "paramet": 279, "work": 279, "object": 279, "subsequ": 279, "gener": 279, "A": 279, "atom": 279, "mpi": 279, "bundl": 279, "error": 279}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 6, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.todo": 2, "sphinx.ext.viewcode": 1, "sphinx": 56}})