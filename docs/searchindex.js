Search.setIndex({"docnames": ["README", "auto/ase2sprkkr", "auto/ase2sprkkr.ase", "auto/ase2sprkkr.ase.build", "auto/ase2sprkkr.ase.build.aperiodic_times", "auto/ase2sprkkr.ase.build.stack", "auto/ase2sprkkr.ase.io", "auto/ase2sprkkr.ase.io.read_sprkkr", "auto/ase2sprkkr.ase.io.write_sprkkr", "auto/ase2sprkkr.ase.pbc", "auto/ase2sprkkr.ase.pbc.check_symmetry", "auto/ase2sprkkr.ase.register", "auto/ase2sprkkr.ase.register.ase_register", "auto/ase2sprkkr.ase.register.load_user_preferences", "auto/ase2sprkkr.ase.register.register", "auto/ase2sprkkr.ase.register.user_preferences_file", "auto/ase2sprkkr.ase.symbols", "auto/ase2sprkkr.ase.symbols.filename_from_symbols", "auto/ase2sprkkr.ase.symbols.pretty_symbols", "auto/ase2sprkkr.ase.test", "auto/ase2sprkkr.ase.test.init_tests", "auto/ase2sprkkr.ase.test.init_tests.TestCase", "auto/ase2sprkkr.ase.test.init_tests.arr_testfce", "auto/ase2sprkkr.ase.test.init_tests.assertDictEqual", "auto/ase2sprkkr.ase.test.init_tests.assertListEqual", "auto/ase2sprkkr.ase.test.init_tests.assert_almost_equals", "auto/ase2sprkkr.ase.test.init_tests.assert_equals", "auto/ase2sprkkr.ase.test.init_tests.extdict", "auto/ase2sprkkr.ase.test.init_tests.testfce", "auto/ase2sprkkr.ase.test.test_build", "auto/ase2sprkkr.ase.test.test_build.TestBuild", "auto/ase2sprkkr.ase.visualise", "auto/ase2sprkkr.ase.visualise.view", "auto/ase2sprkkr.asr", "auto/ase2sprkkr.asr.asr", "auto/ase2sprkkr.asr.bader", "auto/ase2sprkkr.asr.bader.print", "auto/ase2sprkkr.asr.bandstructure", "auto/ase2sprkkr.asr.bandstructure.Result", "auto/ase2sprkkr.asr.bandstructure.add_bs_pbe", "auto/ase2sprkkr.asr.bandstructure.bs_pbe", "auto/ase2sprkkr.asr.bandstructure.bs_pbe_html", "auto/ase2sprkkr.asr.bandstructure.plot_with_colors", "auto/ase2sprkkr.asr.bandstructure.webpanel", "auto/ase2sprkkr.asr.berry", "auto/ase2sprkkr.asr.berry.Result", "auto/ase2sprkkr.asr.berry.plot_phases", "auto/ase2sprkkr.asr.berry.webpanel", "auto/ase2sprkkr.asr.borncharges", "auto/ase2sprkkr.asr.borncharges.Result", "auto/ase2sprkkr.asr.borncharges.webpanel", "auto/ase2sprkkr.asr.bse", "auto/ase2sprkkr.asr.bse.Result", "auto/ase2sprkkr.asr.bse.absorption", "auto/ase2sprkkr.asr.bse.get_kpts_size", "auto/ase2sprkkr.asr.bse.webpanel", "auto/ase2sprkkr.asr.calculators", "auto/ase2sprkkr.asr.calculators.get_calculator", "auto/ase2sprkkr.asr.chc", "auto/ase2sprkkr.asr.chc.CHCError", "auto/ase2sprkkr.asr.chc.ConvexHullReference", "auto/ase2sprkkr.asr.chc.Hyperplane", "auto/ase2sprkkr.asr.chc.Intermediate", "auto/ase2sprkkr.asr.chc.LeanIntermediate", "auto/ase2sprkkr.asr.chc.Line", "auto/ase2sprkkr.asr.chc.Reference", "auto/ase2sprkkr.asr.chc.Result", "auto/ase2sprkkr.asr.chc._permutecontain", "auto/ase2sprkkr.asr.chc.append_references", "auto/ase2sprkkr.asr.chc.calculate_intermediates", "auto/ase2sprkkr.asr.chc.chcut_plot", "auto/ase2sprkkr.asr.chc.convex_hull", "auto/ase2sprkkr.asr.chc.convex_hull_planes", "auto/ase2sprkkr.asr.chc.filrefs", "auto/ase2sprkkr.asr.chc.get_coords", "auto/ase2sprkkr.asr.chc.get_hof", "auto/ase2sprkkr.asr.chc.gscheck", "auto/ase2sprkkr.asr.chc.is_collinear", "auto/ase2sprkkr.asr.chc.is_independent", "auto/ase2sprkkr.asr.chc.mgs", "auto/ase2sprkkr.asr.chc.mgsls", "auto/ase2sprkkr.asr.chc.mu_adjustment", "auto/ase2sprkkr.asr.chc.orthogonalize", "auto/ase2sprkkr.asr.chc.projuv", "auto/ase2sprkkr.asr.chc.read_structure", "auto/ase2sprkkr.asr.chc.refs2ims", "auto/ase2sprkkr.asr.chc.results2ref", "auto/ase2sprkkr.asr.chc.row2ref", "auto/ase2sprkkr.asr.chc.tuplespermuted", "auto/ase2sprkkr.asr.chc.webpanel", "auto/ase2sprkkr.asr.convex_hull", "auto/ase2sprkkr.asr.convex_hull.Result", "auto/ase2sprkkr.asr.convex_hull.convex_hull_tables", "auto/ase2sprkkr.asr.convex_hull.get_reference_energies", "auto/ase2sprkkr.asr.convex_hull.hof", "auto/ase2sprkkr.asr.convex_hull.plot", "auto/ase2sprkkr.asr.convex_hull.select_references", "auto/ase2sprkkr.asr.convex_hull.webpanel", "auto/ase2sprkkr.asr.core", "auto/ase2sprkkr.asr.core.cli", "auto/ase2sprkkr.asr.core.cli.append_job", "auto/ase2sprkkr.asr.core.cli.check_git", "auto/ase2sprkkr.asr.core.cli.extract_hash_from_file", "auto/ase2sprkkr.asr.core.cli.format", "auto/ase2sprkkr.asr.core.cli.get_config_dir", "auto/ase2sprkkr.asr.core.cli.get_git_rev_list", "auto/ase2sprkkr.asr.core.cli.initialize_asr_configuration_dir", "auto/ase2sprkkr.asr.core.cli.is_asr_initialized", "auto/ase2sprkkr.asr.core.cli.run_command", "auto/ase2sprkkr.asr.core.command", "auto/ase2sprkkr.asr.core.fix_old_files", "auto/ase2sprkkr.asr.core.fix_old_files.is_results_file", "auto/ase2sprkkr.asr.core.material", "auto/ase2sprkkr.asr.core.material.Material", "auto/ase2sprkkr.asr.core.material.get_material_from_folder", "auto/ase2sprkkr.asr.core.material.get_webpanels_from_material", "auto/ase2sprkkr.asr.core.material.make_panel_figures", "auto/ase2sprkkr.asr.core.results", "auto/ase2sprkkr.asr.core.results.ASRResult", "auto/ase2sprkkr.asr.core.results.DictEncoder", "auto/ase2sprkkr.asr.core.results.HTMLEncoder", "auto/ase2sprkkr.asr.core.results.HackedASRResult", "auto/ase2sprkkr.asr.core.results.JSONEncoder", "auto/ase2sprkkr.asr.core.results.MetaData", "auto/ase2sprkkr.asr.core.results.MetaDataNotSetError", "auto/ase2sprkkr.asr.core.results.ObjectDescription", "auto/ase2sprkkr.asr.core.results.ResultEncoder", "auto/ase2sprkkr.asr.core.results.UnknownASRResultFormat", "auto/ase2sprkkr.asr.core.results.UnknownDataFormat", "auto/ase2sprkkr.asr.core.results.WebPanelEncoder", "auto/ase2sprkkr.asr.core.results.data_to_dict", "auto/ase2sprkkr.asr.core.results.dct_to_result", "auto/ase2sprkkr.asr.core.results.find_class_matching_version", "auto/ase2sprkkr.asr.core.results.format_key_description_pair", "auto/ase2sprkkr.asr.core.results.get_key_descriptions", "auto/ase2sprkkr.asr.core.results.get_object_matching_obj_id", "auto/ase2sprkkr.asr.core.results.get_object_types", "auto/ase2sprkkr.asr.core.results.get_reader_function", "auto/ase2sprkkr.asr.core.results.make_property", "auto/ase2sprkkr.asr.core.results.obj_to_id", "auto/ase2sprkkr.asr.core.results.object_description_to_object", "auto/ase2sprkkr.asr.core.results.prepare_result", "auto/ase2sprkkr.asr.core.results.read_hacked_data", "auto/ase2sprkkr.asr.core.results.read_new_data", "auto/ase2sprkkr.asr.core.results.read_old_data", "auto/ase2sprkkr.asr.core.types", "auto/ase2sprkkr.asr.core.types.AtomsFile", "auto/ase2sprkkr.asr.core.types.DictStr", "auto/ase2sprkkr.asr.core.types.clickify_docstring", "auto/ase2sprkkr.asr.core.utils", "auto/ase2sprkkr.asr.core.utils.chdir", "auto/ase2sprkkr.asr.core.utils.dct_to_object", "auto/ase2sprkkr.asr.core.utils.encode_json", "auto/ase2sprkkr.asr.core.utils.file_barrier", "auto/ase2sprkkr.asr.core.utils.get_dep_tree", "auto/ase2sprkkr.asr.core.utils.get_recipe_from_name", "auto/ase2sprkkr.asr.core.utils.md5sum", "auto/ase2sprkkr.asr.core.utils.parse_dict_string", "auto/ase2sprkkr.asr.core.utils.parse_mod_func", "auto/ase2sprkkr.asr.core.utils.read_json", "auto/ase2sprkkr.asr.core.utils.recursive_update", "auto/ase2sprkkr.asr.core.utils.singleprec_dict", "auto/ase2sprkkr.asr.core.utils.unlink", "auto/ase2sprkkr.asr.core.utils.write_file", "auto/ase2sprkkr.asr.core.utils.write_json", "auto/ase2sprkkr.asr.database", "auto/ase2sprkkr.asr.database.browser", "auto/ase2sprkkr.asr.database.browser.RowWrapper", "auto/ase2sprkkr.asr.database.browser.create_table", "auto/ase2sprkkr.asr.database.browser.describe_entries", "auto/ase2sprkkr.asr.database.browser.describe_entry", "auto/ase2sprkkr.asr.database.browser.dict_to_list", "auto/ase2sprkkr.asr.database.browser.entry_parameter_description", "auto/ase2sprkkr.asr.database.browser.extract_recipe_from_filename", "auto/ase2sprkkr.asr.database.browser.fig", "auto/ase2sprkkr.asr.database.browser.is_results_file", "auto/ase2sprkkr.asr.database.browser.layout", "auto/ase2sprkkr.asr.database.browser.merge_panels", "auto/ase2sprkkr.asr.database.browser.miscellaneous_section", "auto/ase2sprkkr.asr.database.browser.table", "auto/ase2sprkkr.asr.database.browser.val2str", "auto/ase2sprkkr.asr.database.check", "auto/ase2sprkkr.asr.database.clonetree", "auto/ase2sprkkr.asr.database.duplicates", "auto/ase2sprkkr.asr.database.duplicates.compare", "auto/ase2sprkkr.asr.database.duplicates.filter_uids", "auto/ase2sprkkr.asr.database.duplicates.find_duplicate_group", "auto/ase2sprkkr.asr.database.duplicates.parse_filter_string", "auto/ase2sprkkr.asr.database.material_fingerprint", "auto/ase2sprkkr.asr.database.material_fingerprint.get_hash_of_atoms", "auto/ase2sprkkr.asr.database.material_fingerprint.get_uid_of_atoms", "auto/ase2sprkkr.asr.database.material_fingerprint.todict", "auto/ase2sprkkr.asr.database.merge", "auto/ase2sprkkr.asr.database.rmsd", "auto/ase2sprkkr.asr.database.rmsd.get_rmsd", "auto/ase2sprkkr.asr.database.rmsd.normalize_nonpbc_atoms", "auto/ase2sprkkr.asr.database.rmsd.update_rmsd", "auto/ase2sprkkr.asr.database.templates", "auto/ase2sprkkr.asr.database.totree", "auto/ase2sprkkr.asr.database.totree.make_folder_dict", "auto/ase2sprkkr.asr.database.totree.make_folder_tree", "auto/ase2sprkkr.asr.defectformation", "auto/ase2sprkkr.asr.defectformation.check_and_get_general_inputs", "auto/ase2sprkkr.asr.defectformation.collect_data", "auto/ase2sprkkr.asr.defectformation.find_file_in_folder", "auto/ase2sprkkr.asr.defectformation.intersection", "auto/ase2sprkkr.asr.defectformation.line", "auto/ase2sprkkr.asr.defectformation.line_intersection", "auto/ase2sprkkr.asr.defectformation.plot_formation_and_transitions", "auto/ase2sprkkr.asr.deformationpotentials", "auto/ase2sprkkr.asr.deformationpotentials.Result", "auto/ase2sprkkr.asr.deformationpotentials.webpanel", "auto/ase2sprkkr.asr.dimensionality", "auto/ase2sprkkr.asr.dimensionality.get_dimtypes", "auto/ase2sprkkr.asr.dimensionality.plot_dimensionality_histogram", "auto/ase2sprkkr.asr.dimensionality.webpanel", "auto/ase2sprkkr.asr.dos", "auto/ase2sprkkr.asr.dos.collect_data", "auto/ase2sprkkr.asr.dos.plot", "auto/ase2sprkkr.asr.dos.webpanel", "auto/ase2sprkkr.asr.emasses", "auto/ase2sprkkr.asr.emasses.NoGapError", "auto/ase2sprkkr.asr.emasses.Result", "auto/ase2sprkkr.asr.emasses.calculate_bs_along_emass_vecs", "auto/ase2sprkkr.asr.emasses.check_soc", "auto/ase2sprkkr.asr.emasses.convert_key_to_tuple", "auto/ase2sprkkr.asr.emasses.create_columns_fnames", "auto/ase2sprkkr.asr.emasses.custom_table", "auto/ase2sprkkr.asr.emasses.em", "auto/ase2sprkkr.asr.emasses.embands", "auto/ase2sprkkr.asr.emasses.evalmodel", "auto/ase2sprkkr.asr.emasses.fit", "auto/ase2sprkkr.asr.emasses.get_2nd_order_extremum", "auto/ase2sprkkr.asr.emasses.get_3rd_order_extremum", "auto/ase2sprkkr.asr.emasses.get_bt_ks", "auto/ase2sprkkr.asr.emasses.get_emass_dict_from_row", "auto/ase2sprkkr.asr.emasses.get_extremum_type", "auto/ase2sprkkr.asr.emasses.get_gapskn", "auto/ase2sprkkr.asr.emasses.get_name", "auto/ase2sprkkr.asr.emasses.get_range", "auto/ase2sprkkr.asr.emasses.get_vb_cb_indices", "auto/ase2sprkkr.asr.emasses.kptsinsphere", "auto/ase2sprkkr.asr.emasses.make_the_plots", "auto/ase2sprkkr.asr.emasses.model", "auto/ase2sprkkr.asr.emasses.nonsc_sphere", "auto/ase2sprkkr.asr.emasses.preliminary_refine", "auto/ase2sprkkr.asr.emasses.set_default", "auto/ase2sprkkr.asr.emasses.unpack_masses", "auto/ase2sprkkr.asr.emasses.webpanel", "auto/ase2sprkkr.asr.emasses.wideMAE", "auto/ase2sprkkr.asr.exchange", "auto/ase2sprkkr.asr.exchange.get_parameters", "auto/ase2sprkkr.asr.fere", "auto/ase2sprkkr.asr.fere.DBAlreadyExistsError", "auto/ase2sprkkr.asr.fere.MaterialNotFoundError", "auto/ase2sprkkr.asr.fere.ParseError", "auto/ase2sprkkr.asr.fere.count", "auto/ase2sprkkr.asr.fere.create_corrected_db", "auto/ase2sprkkr.asr.fere.elements_from_refs", "auto/ase2sprkkr.asr.fere.formulas_eq", "auto/ase2sprkkr.asr.fere.get_dE_alpha", "auto/ase2sprkkr.asr.fere.get_hof", "auto/ase2sprkkr.asr.fere.load_data", "auto/ase2sprkkr.asr.fere.minimize_error", "auto/ase2sprkkr.asr.fere.multiply_formula", "auto/ase2sprkkr.asr.fere.only", "auto/ase2sprkkr.asr.fere.parse_reactions", "auto/ase2sprkkr.asr.fere.parse_refs", "auto/ase2sprkkr.asr.fere.safe_get", "auto/ase2sprkkr.asr.fere.select", "auto/ase2sprkkr.asr.fere.single", "auto/ase2sprkkr.asr.fere.unique", "auto/ase2sprkkr.asr.fere.where", "auto/ase2sprkkr.asr.fermisurface", "auto/ase2sprkkr.asr.fermisurface.Result", "auto/ase2sprkkr.asr.fermisurface.add_fermi", "auto/ase2sprkkr.asr.fermisurface.bz_vertices", "auto/ase2sprkkr.asr.fermisurface.find_contours", "auto/ase2sprkkr.asr.fermisurface.plot_fermi", "auto/ase2sprkkr.asr.fermisurface.webpanel", "auto/ase2sprkkr.asr.formalpolarization", "auto/ase2sprkkr.asr.formalpolarization.AtomsTooCloseToBoundary", "auto/ase2sprkkr.asr.formalpolarization.distance_to_non_pbc_boundary", "auto/ase2sprkkr.asr.formalpolarization.get_atomic_polarization_phase", "auto/ase2sprkkr.asr.formalpolarization.get_dipole_polarization_phase", "auto/ase2sprkkr.asr.formalpolarization.get_electronic_polarization_phase", "auto/ase2sprkkr.asr.formalpolarization.get_wavefunctions", "auto/ase2sprkkr.asr.gs", "auto/ase2sprkkr.asr.gs.GapsResult", "auto/ase2sprkkr.asr.gs.Result", "auto/ase2sprkkr.asr.gs.VacuumLevelResults", "auto/ase2sprkkr.asr.gs.bz_with_band_extremums", "auto/ase2sprkkr.asr.gs.evacdiff", "auto/ase2sprkkr.asr.gs.gaps", "auto/ase2sprkkr.asr.gs.get_1bz_k", "auto/ase2sprkkr.asr.gs.get_gap_info", "auto/ase2sprkkr.asr.gs.vacuumlevels", "auto/ase2sprkkr.asr.gs.webpanel", "auto/ase2sprkkr.asr.gw", "auto/ase2sprkkr.asr.gw.Result", "auto/ase2sprkkr.asr.gw.bs_gw", "auto/ase2sprkkr.asr.gw.get_kpts_size", "auto/ase2sprkkr.asr.gw.webpanel", "auto/ase2sprkkr.asr.hse", "auto/ase2sprkkr.asr.hse.MP_interpolate", "auto/ase2sprkkr.asr.hse.Result", "auto/ase2sprkkr.asr.hse.bs_hse", "auto/ase2sprkkr.asr.hse.get_kpts_size", "auto/ase2sprkkr.asr.hse.hse", "auto/ase2sprkkr.asr.hse.hse_spinorbit", "auto/ase2sprkkr.asr.hse.webpanel", "auto/ase2sprkkr.asr.infraredpolarizability", "auto/ase2sprkkr.asr.infraredpolarizability.Result", "auto/ase2sprkkr.asr.infraredpolarizability.create_plot", "auto/ase2sprkkr.asr.infraredpolarizability.get_phonon_pol", "auto/ase2sprkkr.asr.infraredpolarizability.webpanel", "auto/ase2sprkkr.asr.magnetic_anisotropy", "auto/ase2sprkkr.asr.magnetic_anisotropy.Result", "auto/ase2sprkkr.asr.magnetic_anisotropy.get_spin_axis", "auto/ase2sprkkr.asr.magnetic_anisotropy.get_spin_index", "auto/ase2sprkkr.asr.magnetic_anisotropy.spin_axis", "auto/ase2sprkkr.asr.magnetic_anisotropy.webpanel", "auto/ase2sprkkr.asr.magstate", "auto/ase2sprkkr.asr.magstate.Result", "auto/ase2sprkkr.asr.magstate.get_magstate", "auto/ase2sprkkr.asr.magstate.webpanel", "auto/ase2sprkkr.asr.pdos", "auto/ase2sprkkr.asr.pdos.Result", "auto/ase2sprkkr.asr.pdos.calculate_pdos", "auto/ase2sprkkr.asr.pdos.get_l_a", "auto/ase2sprkkr.asr.pdos.get_ordered_syl_dict", "auto/ase2sprkkr.asr.pdos.get_yl_colors", "auto/ase2sprkkr.asr.pdos.pdos", "auto/ase2sprkkr.asr.pdos.plot_pdos", "auto/ase2sprkkr.asr.pdos.plot_pdos_nosoc", "auto/ase2sprkkr.asr.pdos.plot_pdos_soc", "auto/ase2sprkkr.asr.pdos.webpanel", "auto/ase2sprkkr.asr.phonons", "auto/ase2sprkkr.asr.phonons.Result", "auto/ase2sprkkr.asr.phonons.creates", "auto/ase2sprkkr.asr.phonons.mingocorrection", "auto/ase2sprkkr.asr.phonons.plot_bandstructure", "auto/ase2sprkkr.asr.phonons.plot_phonons", "auto/ase2sprkkr.asr.phonons.requires", "auto/ase2sprkkr.asr.phonons.todict", "auto/ase2sprkkr.asr.phonons.topckl", "auto/ase2sprkkr.asr.phonons.webpanel", "auto/ase2sprkkr.asr.phonopy", "auto/ase2sprkkr.asr.phonopy.Result", "auto/ase2sprkkr.asr.phonopy.distance_to_sc", "auto/ase2sprkkr.asr.phonopy.lattice_vectors", "auto/ase2sprkkr.asr.phonopy.plot_bandstructure", "auto/ase2sprkkr.asr.phonopy.plot_phonons", "auto/ase2sprkkr.asr.phonopy.requires", "auto/ase2sprkkr.asr.phonopy.webpanel", "auto/ase2sprkkr.asr.piezoelectrictensor", "auto/ase2sprkkr.asr.piezoelectrictensor.Result", "auto/ase2sprkkr.asr.piezoelectrictensor.webpanel", "auto/ase2sprkkr.asr.plasmafrequency", "auto/ase2sprkkr.asr.plasmafrequency.Result", "auto/ase2sprkkr.asr.plasmafrequency.get_kpts_size", "auto/ase2sprkkr.asr.plasmafrequency.webpanel", "auto/ase2sprkkr.asr.polarizability", "auto/ase2sprkkr.asr.polarizability.Result", "auto/ase2sprkkr.asr.polarizability.get_kpts_size", "auto/ase2sprkkr.asr.polarizability.polarizability", "auto/ase2sprkkr.asr.polarizability.webpanel", "auto/ase2sprkkr.asr.projected_bandstructure", "auto/ase2sprkkr.asr.projected_bandstructure.Result", "auto/ase2sprkkr.asr.projected_bandstructure.get_bs_sampling", "auto/ase2sprkkr.asr.projected_bandstructure.get_orbital_ldos", "auto/ase2sprkkr.asr.projected_bandstructure.get_pie_markers", "auto/ase2sprkkr.asr.projected_bandstructure.get_pie_slice", "auto/ase2sprkkr.asr.projected_bandstructure.get_yl_ordering", "auto/ase2sprkkr.asr.projected_bandstructure.projected_bs_pbe", "auto/ase2sprkkr.asr.projected_bandstructure.webpanel", "auto/ase2sprkkr.asr.push", "auto/ase2sprkkr.asr.raman", "auto/ase2sprkkr.asr.raman.Result", "auto/ase2sprkkr.asr.raman.count_deg", "auto/ase2sprkkr.asr.raman.raman", "auto/ase2sprkkr.asr.raman.webpanel", "auto/ase2sprkkr.asr.relax", "auto/ase2sprkkr.asr.relax.BrokenSymmetryError", "auto/ase2sprkkr.asr.relax.Result", "auto/ase2sprkkr.asr.relax.SpgAtoms", "auto/ase2sprkkr.asr.relax.is_relax_done", "auto/ase2sprkkr.asr.relax.myBFGS", "auto/ase2sprkkr.asr.relax.relax", "auto/ase2sprkkr.asr.relax.set_initial_magnetic_moments", "auto/ase2sprkkr.asr.setinfo", "auto/ase2sprkkr.asr.setinfo.KeyValuePair", "auto/ase2sprkkr.asr.setinfo.check_key_value", "auto/ase2sprkkr.asr.setup", "auto/ase2sprkkr.asr.setup.decorate", "auto/ase2sprkkr.asr.setup.decorate.apply_substitution", "auto/ase2sprkkr.asr.setup.decorate.find_substitutions", "auto/ase2sprkkr.asr.setup.decorate.generate_structures", "auto/ase2sprkkr.asr.setup.decorate.get_p_ab", "auto/ase2sprkkr.asr.setup.defects", "auto/ase2sprkkr.asr.setup.defects.collect_data", "auto/ase2sprkkr.asr.setup.defects.create_folder_structure", "auto/ase2sprkkr.asr.setup.defects.setup_defects", "auto/ase2sprkkr.asr.setup.defects.setup_supercell", "auto/ase2sprkkr.asr.setup.displacements", "auto/ase2sprkkr.asr.setup.displacements.create_displacements_folder", "auto/ase2sprkkr.asr.setup.displacements.displace_atom", "auto/ase2sprkkr.asr.setup.displacements.get_all_displacements", "auto/ase2sprkkr.asr.setup.displacements.get_displacement_folder", "auto/ase2sprkkr.asr.setup.magnetize", "auto/ase2sprkkr.asr.setup.materials", "auto/ase2sprkkr.asr.setup.params", "auto/ase2sprkkr.asr.setup.scanparams", "auto/ase2sprkkr.asr.setup.strains", "auto/ase2sprkkr.asr.setup.strains.get_relevant_strains", "auto/ase2sprkkr.asr.setup.strains.get_strained_folder_name", "auto/ase2sprkkr.asr.setup.strains.setup_strains", "auto/ase2sprkkr.asr.setup.symmetrize", "auto/ase2sprkkr.asr.setup.symmetrize.symmetrize_atoms", "auto/ase2sprkkr.asr.stiffness", "auto/ase2sprkkr.asr.stiffness.Result", "auto/ase2sprkkr.asr.stiffness.webpanel", "auto/ase2sprkkr.asr.structureinfo", "auto/ase2sprkkr.asr.structureinfo.Result", "auto/ase2sprkkr.asr.structureinfo.get_reduced_formula", "auto/ase2sprkkr.asr.structureinfo.webpanel", "auto/ase2sprkkr.asr.test", "auto/ase2sprkkr.asr.test.acceptance", "auto/ase2sprkkr.asr.test.acceptance.test_borncharges", "auto/ase2sprkkr.asr.test.acceptance.test_borncharges.test_gpaw_berry_get_berry_phases_integration", "auto/ase2sprkkr.asr.test.acceptance.test_piezoelectrictensor", "auto/ase2sprkkr.asr.test.acceptance.test_piezoelectrictensor.test_piezo_BN", "auto/ase2sprkkr.asr.test.acceptance.test_relax", "auto/ase2sprkkr.asr.test.acceptance.test_relax.test_relax_fe_gpaw", "auto/ase2sprkkr.asr.test.conftest", "auto/ase2sprkkr.asr.test.conftest.pytest_configure", "auto/ase2sprkkr.asr.test.conftest.pytest_sessionstart", "auto/ase2sprkkr.asr.test.fixtures", "auto/ase2sprkkr.asr.test.fixtures._get_webcontent", "auto/ase2sprkkr.asr.test.fixtures.asr_tmpdir", "auto/ase2sprkkr.asr.test.fixtures.asr_tmpdir_w_params", "auto/ase2sprkkr.asr.test.fixtures.duplicates_test_db", "auto/ase2sprkkr.asr.test.fixtures.get_webcontent", "auto/ase2sprkkr.asr.test.fixtures.mockgpaw", "auto/ase2sprkkr.asr.test.fixtures.set_asr_test_environ_variable", "auto/ase2sprkkr.asr.test.fixtures.test_material", "auto/ase2sprkkr.asr.test.materials", "auto/ase2sprkkr.asr.test.mocks", "auto/ase2sprkkr.asr.test.mocks.gpaw", "auto/ase2sprkkr.asr.test.mocks.gpaw.berryphase", "auto/ase2sprkkr.asr.test.mocks.gpaw.berryphase.get_berry_phases", "auto/ase2sprkkr.asr.test.mocks.gpaw.calculator", "auto/ase2sprkkr.asr.test.mocks.gpaw.calculator.ASRCalculator", "auto/ase2sprkkr.asr.test.mocks.gpaw.calculator.DOSCalculator", "auto/ase2sprkkr.asr.test.mocks.gpaw.calculator.Occupations", "auto/ase2sprkkr.asr.test.mocks.gpaw.calculator.Parameters", "auto/ase2sprkkr.asr.test.mocks.gpaw.calculator.Setups", "auto/ase2sprkkr.asr.test.mocks.gpaw.calculator.WaveFunctions", "auto/ase2sprkkr.asr.test.mocks.gpaw.hybrids", "auto/ase2sprkkr.asr.test.mocks.gpaw.hybrids.eigenvalues", "auto/ase2sprkkr.asr.test.mocks.gpaw.kpt_descriptor", "auto/ase2sprkkr.asr.test.mocks.gpaw.kpt_descriptor.kpts2sizeandoffsets", "auto/ase2sprkkr.asr.test.mocks.gpaw.kpt_descriptor.to1bz", "auto/ase2sprkkr.asr.test.mocks.gpaw.mpi", "auto/ase2sprkkr.asr.test.mocks.gpaw.mpi.barrier", "auto/ase2sprkkr.asr.test.mocks.gpaw.mpi.broadcast", "auto/ase2sprkkr.asr.test.mocks.gpaw.mpi.new_communicator", "auto/ase2sprkkr.asr.test.mocks.gpaw.mpi.world_sum", "auto/ase2sprkkr.asr.test.mocks.gpaw.occupations", "auto/ase2sprkkr.asr.test.mocks.gpaw.occupations.FermiDirac", "auto/ase2sprkkr.asr.test.mocks.gpaw.occupations.create_occ_calc", "auto/ase2sprkkr.asr.test.mocks.gpaw.response", "auto/ase2sprkkr.asr.test.mocks.gpaw.response.bse", "auto/ase2sprkkr.asr.test.mocks.gpaw.response.bse.BSE", "auto/ase2sprkkr.asr.test.mocks.gpaw.response.df", "auto/ase2sprkkr.asr.test.mocks.gpaw.response.df.DielectricFunction", "auto/ase2sprkkr.asr.test.mocks.gpaw.response.g0w0", "auto/ase2sprkkr.asr.test.mocks.gpaw.response.g0w0.G0W0", "auto/ase2sprkkr.asr.test.mocks.gpaw.spinorbit", "auto/ase2sprkkr.asr.test.mocks.gpaw.spinorbit.SOC", "auto/ase2sprkkr.asr.test.mocks.gpaw.spinorbit.soc_eigenstates", "auto/ase2sprkkr.asr.test.mocks.gpaw.symmetry", "auto/ase2sprkkr.asr.test.mocks.gpaw.symmetry.Symmetry", "auto/ase2sprkkr.asr.test.mocks.gpaw.utilities", "auto/ase2sprkkr.asr.test.mocks.gpaw.utilities.dos", "auto/ase2sprkkr.asr.test.mocks.gpaw.utilities.dos.raw_orbital_LDOS", "auto/ase2sprkkr.asr.test.mocks.gpaw.utilities.ibz2bz", "auto/ase2sprkkr.asr.test.mocks.gpaw.utilities.ibz2bz.ibz2bz", "auto/ase2sprkkr.asr.test.mocks.gpaw.utilities.progressbar", "auto/ase2sprkkr.asr.test.mocks.gpaw.utilities.progressbar.ProgressBar", "auto/ase2sprkkr.asr.test.mocks.gpaw.xc", "auto/ase2sprkkr.asr.test.mocks.gpaw.xc.exx", "auto/ase2sprkkr.asr.test.mocks.gpaw.xc.tools", "auto/ase2sprkkr.asr.test.test_bandstructure", "auto/ase2sprkkr.asr.test.test_bandstructure.test_bandstructure_main", "auto/ase2sprkkr.asr.test.test_berry", "auto/ase2sprkkr.asr.test.test_berry.test_berry", "auto/ase2sprkkr.asr.test.test_berry.test_berry_nontrivial", "auto/ase2sprkkr.asr.test.test_borncharges", "auto/ase2sprkkr.asr.test.test_borncharges.test_borncharges", "auto/ase2sprkkr.asr.test.test_bse", "auto/ase2sprkkr.asr.test.test_bse.test_bse", "auto/ase2sprkkr.asr.test.test_cli", "auto/ase2sprkkr.asr.test.test_cli.test_asr", "auto/ase2sprkkr.asr.test.test_cli.test_asr_find", "auto/ase2sprkkr.asr.test.test_cli.test_asr_find_help", "auto/ase2sprkkr.asr.test.test_cli.test_asr_find_no_versions", "auto/ase2sprkkr.asr.test.test_cli.test_asr_list", "auto/ase2sprkkr.asr.test.test_cli.test_asr_results_bandstructure", "auto/ase2sprkkr.asr.test.test_cli.test_asr_results_help", "auto/ase2sprkkr.asr.test.test_cli.test_asr_run", "auto/ase2sprkkr.asr.test.test_convex_hull", "auto/ase2sprkkr.asr.test.test_convex_hull.test_convex_hull", "auto/ase2sprkkr.asr.test.test_core", "auto/ase2sprkkr.asr.test.test_core.recipe", "auto/ase2sprkkr.asr.test.test_core.test_core", "auto/ase2sprkkr.asr.test.test_core.test_recipe_defaults", "auto/ase2sprkkr.asr.test.test_core.test_recipe_setting_new_defaults", "auto/ase2sprkkr.asr.test.test_core.test_recipe_setting_overriding_defaults", "auto/ase2sprkkr.asr.test.test_core_material", "auto/ase2sprkkr.asr.test.test_core_material.test_asr_cli_results_figures_gs", "auto/ase2sprkkr.asr.test.test_core_results", "auto/ase2sprkkr.asr.test.test_core_results.MyResult", "auto/ase2sprkkr.asr.test.test_core_results.MyResultVer0", "auto/ase2sprkkr.asr.test.test_core_results.MyWebPanel", "auto/ase2sprkkr.asr.test.test_core_results.test_read_old_format", "auto/ase2sprkkr.asr.test.test_core_results.test_reading_older_version", "auto/ase2sprkkr.asr.test.test_core_results.test_reading_result", "auto/ase2sprkkr.asr.test.test_core_results.test_results_object", "auto/ase2sprkkr.asr.test.test_database_duplicates", "auto/ase2sprkkr.asr.test.test_database_duplicates.test_database_duplicates", "auto/ase2sprkkr.asr.test.test_database_duplicates.test_database_duplicates_filter_magstate", "auto/ase2sprkkr.asr.test.test_database_duplicates.test_database_duplicates_no_duplicates", "auto/ase2sprkkr.asr.test.test_database_fromtree", "auto/ase2sprkkr.asr.test.test_database_fromtree.folder_tree", "auto/ase2sprkkr.asr.test.test_database_fromtree.make_tree", "auto/ase2sprkkr.asr.test.test_database_fromtree.test_database_fromtree_raises_when_missing_uids", "auto/ase2sprkkr.asr.test.test_database_fromtree.test_database_fromtree_totree", "auto/ase2sprkkr.asr.test.test_database_fromtree.test_database_fromtree_works_without_write_permission", "auto/ase2sprkkr.asr.test.test_database_rmsd", "auto/ase2sprkkr.asr.test.test_database_rmsd.rattle_atoms", "auto/ase2sprkkr.asr.test.test_database_rmsd.test_database_rmsd_duplicates", "auto/ase2sprkkr.asr.test.test_database_rmsd.test_database_rmsd_duplicates_comparison_keys", "auto/ase2sprkkr.asr.test.test_database_rmsd.test_database_rmsd_move_one_atom", "auto/ase2sprkkr.asr.test.test_database_rmsd.test_database_rmsd_none_handling", "auto/ase2sprkkr.asr.test.test_database_rmsd.test_database_rmsd_not_equal", "auto/ase2sprkkr.asr.test.test_database_rmsd.test_database_rmsd_rattled", "auto/ase2sprkkr.asr.test.test_database_rmsd.test_database_rmsd_rotation", "auto/ase2sprkkr.asr.test.test_database_totree", "auto/ase2sprkkr.asr.test.test_database_totree.make_test_db", "auto/ase2sprkkr.asr.test.test_database_totree.test_database_totree", "auto/ase2sprkkr.asr.test.test_database_totree.test_database_totree_files_and_hard_links", "auto/ase2sprkkr.asr.test.test_dimensionality", "auto/ase2sprkkr.asr.test.test_dimensionality.test_dimensionality", "auto/ase2sprkkr.asr.test.test_dimensionality.test_dimensionality_cli", "auto/ase2sprkkr.asr.test.test_emasses", "auto/ase2sprkkr.asr.test.test_emasses._get_all_eigenvalues", "auto/ase2sprkkr.asr.test.test_emasses.resultstest", "auto/ase2sprkkr.asr.test.test_emasses.test_emasses_freelectron", "auto/ase2sprkkr.asr.test.test_emasses.test_emasses_indirect", "auto/ase2sprkkr.asr.test.test_fixtures", "auto/ase2sprkkr.asr.test.test_fixtures.test_env_variables", "auto/ase2sprkkr.asr.test.test_formalpolarization", "auto/ase2sprkkr.asr.test.test_formalpolarization.test_formalpolarization", "auto/ase2sprkkr.asr.test.test_formalpolarization.test_formalpolarization_test_atoms_too_close_to_boundary", "auto/ase2sprkkr.asr.test.test_gs", "auto/ase2sprkkr.asr.test.test_gs.test_gs", "auto/ase2sprkkr.asr.test.test_gs.test_gs_asr_cli_results_figures", "auto/ase2sprkkr.asr.test.test_gs.test_gs_integration_gpaw", "auto/ase2sprkkr.asr.test.test_gw", "auto/ase2sprkkr.asr.test.test_gw.test_gw", "auto/ase2sprkkr.asr.test.test_hse", "auto/ase2sprkkr.asr.test.test_hse.test_hse", "auto/ase2sprkkr.asr.test.test_pdos", "auto/ase2sprkkr.asr.test.test_pdos.test_pdos", "auto/ase2sprkkr.asr.test.test_pdos.test_pdos_full", "auto/ase2sprkkr.asr.test.test_phonons", "auto/ase2sprkkr.asr.test.test_phonons.test_phonons", "auto/ase2sprkkr.asr.test.test_phonopy", "auto/ase2sprkkr.asr.test.test_phonopy.test_phonopy", "auto/ase2sprkkr.asr.test.test_piezoelectrictensor", "auto/ase2sprkkr.asr.test.test_piezoelectrictensor.get_strain_from_atoms", "auto/ase2sprkkr.asr.test.test_piezoelectrictensor.test_piezoelectrictensor", "auto/ase2sprkkr.asr.test.test_piezoelectrictensor.zero_pad_non_pbc_strain_directions", "auto/ase2sprkkr.asr.test.test_plasmafrequency", "auto/ase2sprkkr.asr.test.test_plasmafrequency.test_plasmafrequency", "auto/ase2sprkkr.asr.test.test_polarizability", "auto/ase2sprkkr.asr.test.test_polarizability.test_polarizability", "auto/ase2sprkkr.asr.test.test_projected_bandstructure", "auto/ase2sprkkr.asr.test.test_projected_bandstructure.test_projected_bs_mocked", "auto/ase2sprkkr.asr.test.test_raman", "auto/ase2sprkkr.asr.test.test_raman.test_raman", "auto/ase2sprkkr.asr.test.test_relax", "auto/ase2sprkkr.asr.test.test_relax.test_relax_basic", "auto/ase2sprkkr.asr.test.test_relax.test_relax_bn_gpaw", "auto/ase2sprkkr.asr.test.test_relax.test_relax_emt", "auto/ase2sprkkr.asr.test.test_relax.test_relax_emt_fail_broken_symmetry", "auto/ase2sprkkr.asr.test.test_relax.test_relax_find_higher_symmetry", "auto/ase2sprkkr.asr.test.test_relax.test_relax_magmoms", "auto/ase2sprkkr.asr.test.test_relax.test_relax_si_gpaw", "auto/ase2sprkkr.asr.test.test_setinfo", "auto/ase2sprkkr.asr.test.test_setinfo.test_info", "auto/ase2sprkkr.asr.test.test_setinfo.test_info_call_from_cli", "auto/ase2sprkkr.asr.test.test_setinfo.test_info_raises_with_protected_key", "auto/ase2sprkkr.asr.test.test_setup_decorate", "auto/ase2sprkkr.asr.test.test_setup_decorate.test_setup_decorate_si", "auto/ase2sprkkr.asr.test.test_setup_displacements", "auto/ase2sprkkr.asr.test.test_setup_displacements.test_setup_displacements", "auto/ase2sprkkr.asr.test.test_setup_displacements.test_setup_displacements_displace_atom", "auto/ase2sprkkr.asr.test.test_setup_displacements.test_setup_displacements_get_all_displacements", "auto/ase2sprkkr.asr.test.test_setup_magnetize", "auto/ase2sprkkr.asr.test.test_setup_magnetize.test_setup_magnetize", "auto/ase2sprkkr.asr.test.test_setup_magnetize.test_setup_magnetize_state_inputs", "auto/ase2sprkkr.asr.test.test_setup_materials", "auto/ase2sprkkr.asr.test.test_setup_materials.test_setup_magnetize", "auto/ase2sprkkr.asr.test.test_setup_scanparams", "auto/ase2sprkkr.asr.test.test_setup_scanparams.test_setup_params", "auto/ase2sprkkr.asr.test.test_setup_strains", "auto/ase2sprkkr.asr.test.test_setup_strains.test_setup_strains", "auto/ase2sprkkr.asr.test.test_setup_strains.test_setup_strains_get_relevant_strains", "auto/ase2sprkkr.asr.test.test_setup_symmetrize", "auto/ase2sprkkr.asr.test.test_setup_symmetrize.test_setup_symmetrize", "auto/ase2sprkkr.asr.test.test_stiffness", "auto/ase2sprkkr.asr.test.test_stiffness.test_stiffness_emt", "auto/ase2sprkkr.asr.test.test_stiffness.test_stiffness_gpaw", "auto/ase2sprkkr.asr.utils", "auto/ase2sprkkr.asr.utils.args", "auto/ase2sprkkr.asr.utils.args.parse_arg", "auto/ase2sprkkr.asr.utils.calculator_utils", "auto/ase2sprkkr.asr.utils.calculator_utils.fermi_level", "auto/ase2sprkkr.asr.utils.calculator_utils.get_eigenvalues", "auto/ase2sprkkr.asr.utils.gpw2eigs", "auto/ase2sprkkr.asr.utils.gpw2eigs.calc2eigs", "auto/ase2sprkkr.asr.utils.gpw2eigs.gpw2eigs", "auto/ase2sprkkr.asr.utils.kpts", "auto/ase2sprkkr.asr.utils.kpts.get_kpts_size", "auto/ase2sprkkr.asr.utils.magnetism", "auto/ase2sprkkr.asr.utils.magnetism.is_magnetic", "auto/ase2sprkkr.asr.utils.magnetism.magnetic_atoms", "auto/ase2sprkkr.asr.utils.refinegs", "auto/ase2sprkkr.asr.utils.refinegs.get_filenames", "auto/ase2sprkkr.asr.utils.refinegs.get_parstr", "auto/ase2sprkkr.asr.utils.refinegs.nonselfc", "auto/ase2sprkkr.asr.utils.refinegs.refinegs", "auto/ase2sprkkr.asr.utils.something", "auto/ase2sprkkr.asr.utils.something.calculate_something", "auto/ase2sprkkr.asr.utils.something.collect_data", "auto/ase2sprkkr.asr.utils.something.create_plot", "auto/ase2sprkkr.asr.utils.something.webpanel", "auto/ase2sprkkr.asr.utils.symmetry", "auto/ase2sprkkr.asr.utils.symmetry._atoms2symmetry_gpaw", "auto/ase2sprkkr.asr.utils.symmetry.atoms2spgcell", "auto/ase2sprkkr.asr.utils.symmetry.atoms2symmetry", "auto/ase2sprkkr.asr.utils.symmetry.has_inversion", "auto/ase2sprkkr.asr.utils.symmetry.restrict_spin_projection_2d", "auto/ase2sprkkr.asr.utils.utils", "auto/ase2sprkkr.asr.utils.utils.timed_print", "auto/ase2sprkkr.asr.workflow", "auto/ase2sprkkr.bindings", "auto/ase2sprkkr.bindings.empty_spheres", "auto/ase2sprkkr.bindings.empty_spheres.EmptySpheresResult", "auto/ase2sprkkr.bindings.empty_spheres.add_empty_spheres", "auto/ase2sprkkr.bindings.empty_spheres.empty_spheres", "auto/ase2sprkkr.bindings.empty_spheres.empty_spheres_atoms", "auto/ase2sprkkr.bindings.es_finder", "auto/ase2sprkkr.bindings.es_finder.empty_spheres", "auto/ase2sprkkr.bindings.spglib", "auto/ase2sprkkr.bindings.spglib.SpacegroupInfo", "auto/ase2sprkkr.bindings.spglib.possibly_equivalent_sites", "auto/ase2sprkkr.bindings.tests", "auto/ase2sprkkr.bindings.tests.init_tests", "auto/ase2sprkkr.bindings.tests.init_tests.TestCase", "auto/ase2sprkkr.bindings.tests.init_tests.arr_testfce", "auto/ase2sprkkr.bindings.tests.init_tests.assertDictEqual", "auto/ase2sprkkr.bindings.tests.init_tests.assertListEqual", "auto/ase2sprkkr.bindings.tests.init_tests.assert_almost_equals", "auto/ase2sprkkr.bindings.tests.init_tests.assert_equals", "auto/ase2sprkkr.bindings.tests.init_tests.extdict", "auto/ase2sprkkr.bindings.tests.init_tests.testfce", "auto/ase2sprkkr.bindings.tests.test_es_finder", "auto/ase2sprkkr.bindings.tests.test_es_finder.TestEsFinder", "auto/ase2sprkkr.bindings.tests.test_spglib", "auto/ase2sprkkr.bindings.tests.test_spglib.TestSpgilib", "auto/ase2sprkkr.bindings.xband", "auto/ase2sprkkr.bindings.xband.spheres", "auto/ase2sprkkr.bindings.xband.spheres.empty_spheres", "auto/ase2sprkkr.bindings.xband.symmetry", "auto/ase2sprkkr.bindings.xband.symmetry.find_symmetry", "auto/ase2sprkkr.bindings.xband.symmetry.find_symmetry_ex", "auto/ase2sprkkr.bindings.xband.tests", "auto/ase2sprkkr.bindings.xband.tests.init_tests", "auto/ase2sprkkr.bindings.xband.tests.init_tests.TestCase", "auto/ase2sprkkr.bindings.xband.tests.init_tests.arr_testfce", "auto/ase2sprkkr.bindings.xband.tests.init_tests.assertDictEqual", "auto/ase2sprkkr.bindings.xband.tests.init_tests.assertListEqual", "auto/ase2sprkkr.bindings.xband.tests.init_tests.assert_almost_equals", "auto/ase2sprkkr.bindings.xband.tests.init_tests.assert_equals", "auto/ase2sprkkr.bindings.xband.tests.init_tests.extdict", "auto/ase2sprkkr.bindings.xband.tests.init_tests.patch_package", "auto/ase2sprkkr.bindings.xband.tests.init_tests.testfce", "auto/ase2sprkkr.bindings.xband.tests.test_spheres", "auto/ase2sprkkr.bindings.xband.tests.test_spheres.TestSpheres", "auto/ase2sprkkr.common", "auto/ase2sprkkr.common.alternative_types", "auto/ase2sprkkr.common.alternative_types.allowed_types", "auto/ase2sprkkr.common.alternative_types.normalize_type", "auto/ase2sprkkr.common.alternative_types.normalize_type_map", "auto/ase2sprkkr.common.alternative_types.types_alternatives", "auto/ase2sprkkr.common.configuration", "auto/ase2sprkkr.common.configuration.Configuration", "auto/ase2sprkkr.common.configuration_containers", "auto/ase2sprkkr.common.configuration_containers.BaseConfigurationContainer", "auto/ase2sprkkr.common.configuration_containers.BaseSection", "auto/ase2sprkkr.common.configuration_containers.ConfigurationContainer", "auto/ase2sprkkr.common.configuration_containers.CustomSection", "auto/ase2sprkkr.common.configuration_containers.DictAdaptor", "auto/ase2sprkkr.common.configuration_containers.DisabledAttributeError", "auto/ase2sprkkr.common.configuration_containers.RootConfigurationContainer", "auto/ase2sprkkr.common.configuration_containers.Section", "auto/ase2sprkkr.common.configuration_definitions", "auto/ase2sprkkr.common.configuration_definitions.BaseDefinition", "auto/ase2sprkkr.common.configuration_definitions.ControlDefinition", "auto/ase2sprkkr.common.configuration_definitions.Gather", "auto/ase2sprkkr.common.configuration_definitions.Ignored", "auto/ase2sprkkr.common.configuration_definitions.RealItemDefinition", "auto/ase2sprkkr.common.configuration_definitions.SeparatorDefinition", "auto/ase2sprkkr.common.configuration_definitions.Stub", "auto/ase2sprkkr.common.configuration_definitions.Switch", "auto/ase2sprkkr.common.configuration_definitions.VirtualDefinition", "auto/ase2sprkkr.common.configuration_definitions.gather", "auto/ase2sprkkr.common.configuration_definitions.switch", "auto/ase2sprkkr.common.container_definitions", "auto/ase2sprkkr.common.container_definitions.ConfigurationRootDefinition", "auto/ase2sprkkr.common.container_definitions.ContainerDefinition", "auto/ase2sprkkr.common.container_definitions.MergeDictAdaptor", "auto/ase2sprkkr.common.container_definitions.SectionDefinition", "auto/ase2sprkkr.common.container_definitions.add_excluded_names_condition", "auto/ase2sprkkr.common.container_definitions.dict_from_parsed", "auto/ase2sprkkr.common.decorators", "auto/ase2sprkkr.common.decorators.add_called_class_as_argument", "auto/ase2sprkkr.common.decorators.add_to_signature", "auto/ase2sprkkr.common.decorators.cache", "auto/ase2sprkkr.common.decorators.cached_class_property", "auto/ase2sprkkr.common.decorators.cached_property", "auto/ase2sprkkr.common.decorators.class_property", "auto/ase2sprkkr.common.decorators.maybeclassmethod", "auto/ase2sprkkr.common.decorators.std_cached_property", "auto/ase2sprkkr.common.decorators.warnings_from_here", "auto/ase2sprkkr.common.directory", "auto/ase2sprkkr.common.directory.Directory", "auto/ase2sprkkr.common.doc", "auto/ase2sprkkr.common.doc.process_input_parameters_definition", "auto/ase2sprkkr.common.doc.verbatim", "auto/ase2sprkkr.common.formats", "auto/ase2sprkkr.common.formats.format_for_string", "auto/ase2sprkkr.common.formats.fortran_format", "auto/ase2sprkkr.common.formats.full_format_for_string", "auto/ase2sprkkr.common.generated_configuration_definitions", "auto/ase2sprkkr.common.generated_configuration_definitions.BaseGeneratedValueDefinition", "auto/ase2sprkkr.common.generated_configuration_definitions.GeneratedValueDefinition", "auto/ase2sprkkr.common.generated_configuration_definitions.NumpyViewDefinition", "auto/ase2sprkkr.common.grammar", "auto/ase2sprkkr.common.grammar.SkipToRegex", "auto/ase2sprkkr.common.grammar.White", "auto/ase2sprkkr.common.grammar.addConditionEx", "auto/ase2sprkkr.common.grammar.addParseActionEx", "auto/ase2sprkkr.common.grammar.delimitedList", "auto/ase2sprkkr.common.grammar.end_of_file", "auto/ase2sprkkr.common.grammar.generate_grammar", "auto/ase2sprkkr.common.grammar.line_end", "auto/ase2sprkkr.common.grammar.optional_line_end", "auto/ase2sprkkr.common.grammar.optional_quote", "auto/ase2sprkkr.common.grammar.replace_whitechars", "auto/ase2sprkkr.common.grammar.separator_grammar", "auto/ase2sprkkr.common.grammar.separator_pattern", "auto/ase2sprkkr.common.grammar_types", "auto/ase2sprkkr.common.grammar_types.arrays", "auto/ase2sprkkr.common.grammar_types.arrays.Array", "auto/ase2sprkkr.common.grammar_types.arrays.Complex", "auto/ase2sprkkr.common.grammar_types.arrays.Sequence", "auto/ase2sprkkr.common.grammar_types.arrays.SetOf", "auto/ase2sprkkr.common.grammar_types.arrays.SpecialColumn", "auto/ase2sprkkr.common.grammar_types.arrays.Table", "auto/ase2sprkkr.common.grammar_types.arrays.complex_number", "auto/ase2sprkkr.common.grammar_types.arrays.set_of_integers", "auto/ase2sprkkr.common.grammar_types.arrays.set_of_reals", "auto/ase2sprkkr.common.grammar_types.basic", "auto/ase2sprkkr.common.grammar_types.basic.BaseRealWithUnits", "auto/ase2sprkkr.common.grammar_types.basic.BaseString", "auto/ase2sprkkr.common.grammar_types.basic.BasicSeparator", "auto/ase2sprkkr.common.grammar_types.basic.BlankSeparator", "auto/ase2sprkkr.common.grammar_types.basic.Bool", "auto/ase2sprkkr.common.grammar_types.basic.Date", "auto/ase2sprkkr.common.grammar_types.basic.DefKeyword", "auto/ase2sprkkr.common.grammar_types.basic.Energy", "auto/ase2sprkkr.common.grammar_types.basic.FixedPointNumber", "auto/ase2sprkkr.common.grammar_types.basic.Flag", "auto/ase2sprkkr.common.grammar_types.basic.IntBool", "auto/ase2sprkkr.common.grammar_types.basic.Integer", "auto/ase2sprkkr.common.grammar_types.basic.Keyword", "auto/ase2sprkkr.common.grammar_types.basic.LineString", "auto/ase2sprkkr.common.grammar_types.basic.Number", "auto/ase2sprkkr.common.grammar_types.basic.ObjectNumber", "auto/ase2sprkkr.common.grammar_types.basic.QString", "auto/ase2sprkkr.common.grammar_types.basic.Real", "auto/ase2sprkkr.common.grammar_types.basic.RealWithUnits", "auto/ase2sprkkr.common.grammar_types.basic.Separator", "auto/ase2sprkkr.common.grammar_types.basic.String", "auto/ase2sprkkr.common.grammar_types.basic.Unsigned", "auto/ase2sprkkr.common.grammar_types.basic.boolean", "auto/ase2sprkkr.common.grammar_types.basic.date", "auto/ase2sprkkr.common.grammar_types.basic.energy", "auto/ase2sprkkr.common.grammar_types.basic.flag", "auto/ase2sprkkr.common.grammar_types.basic.int_bool", "auto/ase2sprkkr.common.grammar_types.basic.integer", "auto/ase2sprkkr.common.grammar_types.basic.line_string", "auto/ase2sprkkr.common.grammar_types.basic.qstring", "auto/ase2sprkkr.common.grammar_types.basic.real", "auto/ase2sprkkr.common.grammar_types.basic.separator", "auto/ase2sprkkr.common.grammar_types.basic.string", "auto/ase2sprkkr.common.grammar_types.basic.unsigned", "auto/ase2sprkkr.common.grammar_types.data", "auto/ase2sprkkr.common.grammar_types.data.NumpyArray", "auto/ase2sprkkr.common.grammar_types.data.Prefixed", "auto/ase2sprkkr.common.grammar_types.data.RawData", "auto/ase2sprkkr.common.grammar_types.data.RestOfTheFile", "auto/ase2sprkkr.common.grammar_types.grammar_type", "auto/ase2sprkkr.common.grammar_types.grammar_type.GrammarType", "auto/ase2sprkkr.common.grammar_types.grammar_type.TypedGrammarType", "auto/ase2sprkkr.common.grammar_types.grammar_type.compare_numpy_values", "auto/ase2sprkkr.common.grammar_types.grammar_type.format_for_type", "auto/ase2sprkkr.common.grammar_types.grammar_type.recognized_set_types", "auto/ase2sprkkr.common.grammar_types.grammar_type.type_from_default_value", "auto/ase2sprkkr.common.grammar_types.grammar_type.type_from_type", "auto/ase2sprkkr.common.grammar_types.grammar_type.type_from_value", "auto/ase2sprkkr.common.grammar_types.mixed", "auto/ase2sprkkr.common.grammar_types.recognized_set_types", "auto/ase2sprkkr.common.grammar_types.type_from_set_map", "auto/ase2sprkkr.common.grammar_types.type_from_type_map", "auto/ase2sprkkr.common.grammar_types.warnings", "auto/ase2sprkkr.common.grammar_types.warnings.SuspiciousValueWarning", "auto/ase2sprkkr.common.init_tests", "auto/ase2sprkkr.common.init_tests.TestCase", "auto/ase2sprkkr.common.init_tests.arr_testfce", "auto/ase2sprkkr.common.init_tests.assertDictEqual", "auto/ase2sprkkr.common.init_tests.assertListEqual", "auto/ase2sprkkr.common.init_tests.assert_almost_equals", "auto/ase2sprkkr.common.init_tests.assert_equals", "auto/ase2sprkkr.common.init_tests.extdict", "auto/ase2sprkkr.common.init_tests.patch_package", "auto/ase2sprkkr.common.init_tests.testfce", "auto/ase2sprkkr.common.misc", "auto/ase2sprkkr.common.misc.as_integer", "auto/ase2sprkkr.common.misc.copy_list", "auto/ase2sprkkr.common.misc.dict_first_item", "auto/ase2sprkkr.common.misc.first_non_none", "auto/ase2sprkkr.common.misc.njit", "auto/ase2sprkkr.common.misc.numpy_index", "auto/ase2sprkkr.common.no_output", "auto/ase2sprkkr.common.no_output.NoOutput", "auto/ase2sprkkr.common.options", "auto/ase2sprkkr.common.options.BaseOption", "auto/ase2sprkkr.common.options.CustomOption", "auto/ase2sprkkr.common.options.DangerousValue", "auto/ase2sprkkr.common.options.Dummy", "auto/ase2sprkkr.common.options.Option", "auto/ase2sprkkr.common.process_output_reader", "auto/ase2sprkkr.common.process_output_reader.AsyncioFileReader", "auto/ase2sprkkr.common.process_output_reader.ProcessOutputReader", "auto/ase2sprkkr.common.repeated_configuration_containers", "auto/ase2sprkkr.common.repeated_configuration_containers.RepeatedConfigurationContainer", "auto/ase2sprkkr.common.subprocess", "auto/ase2sprkkr.common.subprocess._call_function", "auto/ase2sprkkr.common.subprocess.ignore_signal", "auto/ase2sprkkr.common.subprocess.in_subprocess", "auto/ase2sprkkr.common.test", "auto/ase2sprkkr.common.test.init_tests", "auto/ase2sprkkr.common.test.init_tests.TestCase", "auto/ase2sprkkr.common.test.init_tests.arr_testfce", "auto/ase2sprkkr.common.test.init_tests.assertDictEqual", "auto/ase2sprkkr.common.test.init_tests.assertListEqual", "auto/ase2sprkkr.common.test.init_tests.assert_almost_equals", "auto/ase2sprkkr.common.test.init_tests.assert_equals", "auto/ase2sprkkr.common.test.init_tests.extdict", "auto/ase2sprkkr.common.test.init_tests.testfce", "auto/ase2sprkkr.common.test.test_common", "auto/ase2sprkkr.common.test.test_common.TestCommon", "auto/ase2sprkkr.common.test.test_grammar_types", "auto/ase2sprkkr.common.test.test_grammar_types.TestGrammar", "auto/ase2sprkkr.common.tools", "auto/ase2sprkkr.common.tools.append_id_to_filename", "auto/ase2sprkkr.common.tools.main", "auto/ase2sprkkr.common.tools.parse_inches", "auto/ase2sprkkr.common.tools.parse_named_option", "auto/ase2sprkkr.common.tools.parse_tuple_function", "auto/ase2sprkkr.common.unique_values", "auto/ase2sprkkr.common.unique_values.UniqueValuesMapping", "auto/ase2sprkkr.common.value_definitions", "auto/ase2sprkkr.common.value_definitions.ValueDefinition", "auto/ase2sprkkr.common.warnings", "auto/ase2sprkkr.common.warnings.DataValidityWarning", "auto/ase2sprkkr.config", "auto/ase2sprkkr.config.calculator_parameters", "auto/ase2sprkkr.config.sprkkr_executable_suffix", "auto/ase2sprkkr.examples", "auto/ase2sprkkr.examples.A1_Fe_scf_simple", "auto/ase2sprkkr.examples.A1_Fe_scf_simple.Fe", "auto/ase2sprkkr.examples.A1_Fe_scf_simple.Fe.main", "auto/ase2sprkkr.examples.A2_Fe_scf_input_modifications", "auto/ase2sprkkr.examples.A2_Fe_scf_input_modifications.Fe", "auto/ase2sprkkr.examples.A2_Fe_scf_input_modifications.Fe.main", "auto/ase2sprkkr.examples.A3_Fe_dos", "auto/ase2sprkkr.examples.A3_Fe_dos.Fe", "auto/ase2sprkkr.examples.A3_Fe_dos.Fe.main", "auto/ase2sprkkr.examples.A4_CPA_Example", "auto/ase2sprkkr.examples.A4_CPA_Example.Ni_doped_STO", "auto/ase2sprkkr.examples.A4_CPA_Example.Ni_doped_STO.main", "auto/ase2sprkkr.examples.A5_Al_EOS", "auto/ase2sprkkr.examples.A5_Al_EOS.Al", "auto/ase2sprkkr.examples.A5_Al_EOS.Al.main", "auto/ase2sprkkr.examples.A6_Cu_MSSPEC", "auto/ase2sprkkr.examples.A6_Cu_MSSPEC.Cu", "auto/ase2sprkkr.examples.A6_Cu_MSSPEC.Cu.main", "auto/ase2sprkkr.examples.A7_SrTiO3_MSSPEC", "auto/ase2sprkkr.examples.A7_SrTiO3_MSSPEC.STO", "auto/ase2sprkkr.examples.A7_SrTiO3_MSSPEC.STO.main", "auto/ase2sprkkr.examples.A8_ARPES_and_plotting", "auto/ase2sprkkr.examples.A8_ARPES_and_plotting.arpes", "auto/ase2sprkkr.examples.A8_ARPES_and_plotting.arpes.main", "auto/ase2sprkkr.input_parameters", "auto/ase2sprkkr.input_parameters.definitions", "auto/ase2sprkkr.input_parameters.definitions.arpes", "auto/ase2sprkkr.input_parameters.definitions.arpes.input_parameters", "auto/ase2sprkkr.input_parameters.definitions.bsf", "auto/ase2sprkkr.input_parameters.definitions.bsf.input_parameters", "auto/ase2sprkkr.input_parameters.definitions.dos", "auto/ase2sprkkr.input_parameters.definitions.dos.input_parameters", "auto/ase2sprkkr.input_parameters.definitions.gilbert", "auto/ase2sprkkr.input_parameters.definitions.gilbert.input_parameters", "auto/ase2sprkkr.input_parameters.definitions.jxc", "auto/ase2sprkkr.input_parameters.definitions.jxc.input_parameters", "auto/ase2sprkkr.input_parameters.definitions.marpes", "auto/ase2sprkkr.input_parameters.definitions.phagen", "auto/ase2sprkkr.input_parameters.definitions.phagen.input_parameters", "auto/ase2sprkkr.input_parameters.definitions.scf", "auto/ase2sprkkr.input_parameters.definitions.scf.input_parameters", "auto/ase2sprkkr.input_parameters.definitions.sections", "auto/ase2sprkkr.input_parameters.definitions.sections.CONTROL", "auto/ase2sprkkr.input_parameters.definitions.sections.CPA", "auto/ase2sprkkr.input_parameters.definitions.sections.ENERGY", "auto/ase2sprkkr.input_parameters.definitions.sections.MODE", "auto/ase2sprkkr.input_parameters.definitions.sections.SCF", "auto/ase2sprkkr.input_parameters.definitions.sections.SITES", "auto/ase2sprkkr.input_parameters.definitions.sections.STRCONST", "auto/ase2sprkkr.input_parameters.definitions.sections.TASK", "auto/ase2sprkkr.input_parameters.definitions.sections.TAU", "auto/ase2sprkkr.input_parameters.definitions.sections.TauSection", "auto/ase2sprkkr.input_parameters.definitions.sections._nktab_value", "auto/ase2sprkkr.input_parameters.input_parameters", "auto/ase2sprkkr.input_parameters.input_parameters.InputParameters", "auto/ase2sprkkr.input_parameters.input_parameters.InputSection", "auto/ase2sprkkr.input_parameters.input_parameters_definitions", "auto/ase2sprkkr.input_parameters.input_parameters_definitions.InputParametersDefinition", "auto/ase2sprkkr.input_parameters.input_parameters_definitions.InputSectionDefinition", "auto/ase2sprkkr.input_parameters.input_parameters_definitions.InputValueDefinition", "auto/ase2sprkkr.input_parameters.test", "auto/ase2sprkkr.input_parameters.test.init_tests", "auto/ase2sprkkr.input_parameters.test.init_tests.TestCase", "auto/ase2sprkkr.input_parameters.test.init_tests.arr_testfce", "auto/ase2sprkkr.input_parameters.test.init_tests.assertDictEqual", "auto/ase2sprkkr.input_parameters.test.init_tests.assertListEqual", "auto/ase2sprkkr.input_parameters.test.init_tests.assert_almost_equals", "auto/ase2sprkkr.input_parameters.test.init_tests.assert_equals", "auto/ase2sprkkr.input_parameters.test.init_tests.extdict", "auto/ase2sprkkr.input_parameters.test.init_tests.testfce", "auto/ase2sprkkr.input_parameters.test.test_definitions", "auto/ase2sprkkr.input_parameters.test.test_definitions.TestDefinitions", "auto/ase2sprkkr.input_parameters.test.test_input_parameters", "auto/ase2sprkkr.input_parameters.test.test_input_parameters.TestInputParameters", "auto/ase2sprkkr.input_parameters.test.test_input_parameters.ar", "auto/ase2sprkkr.output_files", "auto/ase2sprkkr.output_files.definitions", "auto/ase2sprkkr.output_files.definitions.Arithmetic", "auto/ase2sprkkr.output_files.definitions.CommonOutputFile", "auto/ase2sprkkr.output_files.definitions.OutputFile", "auto/ase2sprkkr.output_files.definitions.UnknownDataValue", "auto/ase2sprkkr.output_files.definitions.bsf", "auto/ase2sprkkr.output_files.definitions.bsf.BSFDefinition", "auto/ase2sprkkr.output_files.definitions.bsf.BSFOutputFile", "auto/ase2sprkkr.output_files.definitions.bsf.create_definition", "auto/ase2sprkkr.output_files.definitions.dos", "auto/ase2sprkkr.output_files.definitions.dos.DOS", "auto/ase2sprkkr.output_files.definitions.dos.DOSDefinition", "auto/ase2sprkkr.output_files.definitions.dos.DOSOutputFile", "auto/ase2sprkkr.output_files.definitions.dos.create_definition", "auto/ase2sprkkr.output_files.definitions.spc", "auto/ase2sprkkr.output_files.definitions.spc.ARPESDefinition", "auto/ase2sprkkr.output_files.definitions.spc.ARPESOutputFile", "auto/ase2sprkkr.output_files.definitions.spc.create_definition", "auto/ase2sprkkr.output_files.output_files", "auto/ase2sprkkr.output_files.output_files.Arithmetic", "auto/ase2sprkkr.output_files.output_files.CommonOutputFile", "auto/ase2sprkkr.output_files.output_files.OutputFile", "auto/ase2sprkkr.output_files.output_files.UnknownDataValue", "auto/ase2sprkkr.output_files.output_files_definitions", "auto/ase2sprkkr.output_files.output_files_definitions.BlankSeparator", "auto/ase2sprkkr.output_files.output_files_definitions.OutputFileDefinition", "auto/ase2sprkkr.output_files.output_files_definitions.OutputFileValueDefinition", "auto/ase2sprkkr.output_files.output_files_definitions.Separator", "auto/ase2sprkkr.output_files.output_files_definitions.create_output_file_definition", "auto/ase2sprkkr.output_files.output_files_definitions.output_file_header", "auto/ase2sprkkr.output_files.test", "auto/ase2sprkkr.output_files.test.init_tests", "auto/ase2sprkkr.output_files.test.init_tests.TestCase", "auto/ase2sprkkr.output_files.test.init_tests.arr_testfce", "auto/ase2sprkkr.output_files.test.init_tests.assertDictEqual", "auto/ase2sprkkr.output_files.test.init_tests.assertListEqual", "auto/ase2sprkkr.output_files.test.init_tests.assert_almost_equals", "auto/ase2sprkkr.output_files.test.init_tests.assert_equals", "auto/ase2sprkkr.output_files.test.init_tests.extdict", "auto/ase2sprkkr.output_files.test.init_tests.testfce", "auto/ase2sprkkr.output_files.test.test_files", "auto/ase2sprkkr.output_files.test.test_files.TestOutput", "auto/ase2sprkkr.outputs", "auto/ase2sprkkr.outputs.output_definitions", "auto/ase2sprkkr.outputs.output_definitions.OutputNonameValueDefinition", "auto/ase2sprkkr.outputs.output_definitions.OutputSectionDefinition", "auto/ase2sprkkr.outputs.output_definitions.OutputValueDefinition", "auto/ase2sprkkr.outputs.output_definitions.OutputValueEqualDefinition", "auto/ase2sprkkr.outputs.readers", "auto/ase2sprkkr.outputs.readers.arpes", "auto/ase2sprkkr.outputs.readers.arpes.ArpesProcess", "auto/ase2sprkkr.outputs.readers.arpes.ArpesResult", "auto/ase2sprkkr.outputs.readers.default", "auto/ase2sprkkr.outputs.readers.default.DefaultOutputReader", "auto/ase2sprkkr.outputs.readers.default.DefaultProcess", "auto/ase2sprkkr.outputs.readers.default.DefaultResult", "auto/ase2sprkkr.outputs.readers.scf", "auto/ase2sprkkr.outputs.readers.scf.RealOrStars", "auto/ase2sprkkr.outputs.readers.scf.ScfOutputReader", "auto/ase2sprkkr.outputs.readers.scf.ScfProcess", "auto/ase2sprkkr.outputs.readers.scf.ScfResult", "auto/ase2sprkkr.outputs.readers.scf.atomic_types_definition", "auto/ase2sprkkr.outputs.task_result", "auto/ase2sprkkr.outputs.task_result.KkrProcess", "auto/ase2sprkkr.outputs.task_result.TaskResult", "auto/ase2sprkkr.outputs.test", "auto/ase2sprkkr.outputs.test.init_tests", "auto/ase2sprkkr.outputs.test.init_tests.TestCase", "auto/ase2sprkkr.outputs.test.init_tests.arr_testfce", "auto/ase2sprkkr.outputs.test.init_tests.assertDictEqual", "auto/ase2sprkkr.outputs.test.init_tests.assertListEqual", "auto/ase2sprkkr.outputs.test.init_tests.assert_almost_equals", "auto/ase2sprkkr.outputs.test.init_tests.assert_equals", "auto/ase2sprkkr.outputs.test.init_tests.extdict", "auto/ase2sprkkr.outputs.test.init_tests.testfce", "auto/ase2sprkkr.outputs.test.test_output", "auto/ase2sprkkr.outputs.test.test_output.TestOutput", "auto/ase2sprkkr.physics", "auto/ase2sprkkr.physics.lattice_data", "auto/ase2sprkkr.physics.lattice_data.LatticeData", "auto/ase2sprkkr.physics.lattice_data.Pearson", "auto/ase2sprkkr.physics.lattice_data.international_numbers_to_AP", "auto/ase2sprkkr.physics.winger_seitz_radii", "auto/ase2sprkkr.physics.winger_seitz_radii.winger_seitz_radii", "auto/ase2sprkkr.potentials", "auto/ase2sprkkr.potentials.custom_potential_section", "auto/ase2sprkkr.potentials.custom_potential_section.CustomPotentialSection", "auto/ase2sprkkr.potentials.custom_potential_section.CustomPotentialSectionDefinition", "auto/ase2sprkkr.potentials.custom_potential_section.CustomSectionToken", "auto/ase2sprkkr.potentials.custom_potential_section.SectionString", "auto/ase2sprkkr.potentials.definitions", "auto/ase2sprkkr.potentials.definitions.potential", "auto/ase2sprkkr.potentials.definitions.potential.potential_definition", "auto/ase2sprkkr.potentials.definitions.sections", "auto/ase2sprkkr.potentials.definitions.sections._sections", "auto/ase2sprkkr.potentials.definitions.sections.charge", "auto/ase2sprkkr.potentials.definitions.sections.charge.ChargeSection", "auto/ase2sprkkr.potentials.definitions.sections.charge.ChargeSectionDefinition", "auto/ase2sprkkr.potentials.definitions.sections.charge.ChargesSection", "auto/ase2sprkkr.potentials.definitions.sections.charge.section", "auto/ase2sprkkr.potentials.definitions.sections.charge_moments", "auto/ase2sprkkr.potentials.definitions.sections.charge_moments.ChargeMomentsSection", "auto/ase2sprkkr.potentials.definitions.sections.charge_moments.ChargeMomentsSectionDefinition", "auto/ase2sprkkr.potentials.definitions.sections.charge_moments.section", "auto/ase2sprkkr.potentials.definitions.sections.global_system_parameter", "auto/ase2sprkkr.potentials.definitions.sections.global_system_parameter.GlobalSystemParameter", "auto/ase2sprkkr.potentials.definitions.sections.global_system_parameter.GlobalSystemParameterDefinition", "auto/ase2sprkkr.potentials.definitions.sections.global_system_parameter.section", "auto/ase2sprkkr.potentials.definitions.sections.host_madelung_potential", "auto/ase2sprkkr.potentials.definitions.sections.host_madelung_potential.HostMadelungPotentialSection", "auto/ase2sprkkr.potentials.definitions.sections.host_madelung_potential.HostMadelungPotentialSectionDefinition", "auto/ase2sprkkr.potentials.definitions.sections.host_madelung_potential.section", "auto/ase2sprkkr.potentials.definitions.sections.lattice", "auto/ase2sprkkr.potentials.definitions.sections.lattice.LatticeSection", "auto/ase2sprkkr.potentials.definitions.sections.lattice.LatticeSectionDefinition", "auto/ase2sprkkr.potentials.definitions.sections.lattice.section", "auto/ase2sprkkr.potentials.definitions.sections.mesh_information", "auto/ase2sprkkr.potentials.definitions.sections.mesh_information.MeshInformationSection", "auto/ase2sprkkr.potentials.definitions.sections.mesh_information.MeshInformationSectionDefinition", "auto/ase2sprkkr.potentials.definitions.sections.mesh_information.section", "auto/ase2sprkkr.potentials.definitions.sections.moments", "auto/ase2sprkkr.potentials.definitions.sections.moments.MomentSection", "auto/ase2sprkkr.potentials.definitions.sections.moments.MomentsSection", "auto/ase2sprkkr.potentials.definitions.sections.moments.MomentsSectionDefinition", "auto/ase2sprkkr.potentials.definitions.sections.moments.section", "auto/ase2sprkkr.potentials.definitions.sections.occupation", "auto/ase2sprkkr.potentials.definitions.sections.occupation.OccupationSection", "auto/ase2sprkkr.potentials.definitions.sections.occupation.OccupationSectionDefinition", "auto/ase2sprkkr.potentials.definitions.sections.occupation.section", "auto/ase2sprkkr.potentials.definitions.sections.potential", "auto/ase2sprkkr.potentials.definitions.sections.potential.PotentialSection", "auto/ase2sprkkr.potentials.definitions.sections.potential.PotentialSectionDefinition", "auto/ase2sprkkr.potentials.definitions.sections.potential.PotentialsSection", "auto/ase2sprkkr.potentials.definitions.sections.potential.section", "auto/ase2sprkkr.potentials.definitions.sections.reference_system", "auto/ase2sprkkr.potentials.definitions.sections.reference_system.ReferenceSystemSection", "auto/ase2sprkkr.potentials.definitions.sections.reference_system.ReferenceSystemSectionDefinition", "auto/ase2sprkkr.potentials.definitions.sections.reference_system.section", "auto/ase2sprkkr.potentials.definitions.sections.scf_info", "auto/ase2sprkkr.potentials.definitions.sections.scf_info.ScfInfoSection", "auto/ase2sprkkr.potentials.definitions.sections.scf_info.ScfInfoSectionDefinition", "auto/ase2sprkkr.potentials.definitions.sections.scf_info.section", "auto/ase2sprkkr.potentials.definitions.sections.sites", "auto/ase2sprkkr.potentials.definitions.sections.sites.SitesSection", "auto/ase2sprkkr.potentials.definitions.sections.sites.SitesSectionDefinition", "auto/ase2sprkkr.potentials.definitions.sections.sites.section", "auto/ase2sprkkr.potentials.definitions.sections.types", "auto/ase2sprkkr.potentials.definitions.sections.types.TypesSection", "auto/ase2sprkkr.potentials.definitions.sections.types.TypesSectionDefinition", "auto/ase2sprkkr.potentials.definitions.sections.types.section", "auto/ase2sprkkr.potentials.potential_definitions", "auto/ase2sprkkr.potentials.potential_definitions.ASEArraySectionDefinition", "auto/ase2sprkkr.potentials.potential_definitions.PotSectionDefinition", "auto/ase2sprkkr.potentials.potential_definitions.PotValueDefinition", "auto/ase2sprkkr.potentials.potential_definitions.PotentialDefinition", "auto/ase2sprkkr.potentials.potential_definitions.Separator", "auto/ase2sprkkr.potentials.potential_sections", "auto/ase2sprkkr.potentials.potential_sections.ASEArraySection", "auto/ase2sprkkr.potentials.potential_sections.PotentialSection", "auto/ase2sprkkr.potentials.potential_sections.PotentialSectionTrait", "auto/ase2sprkkr.potentials.potential_sections.RepeatedPotentialSection", "auto/ase2sprkkr.potentials.potential_sections.UniqueListSection", "auto/ase2sprkkr.potentials.potentials", "auto/ase2sprkkr.potentials.potentials.Potential", "auto/ase2sprkkr.potentials.test", "auto/ase2sprkkr.potentials.test.init_tests", "auto/ase2sprkkr.potentials.test.init_tests.TestCase", "auto/ase2sprkkr.potentials.test.init_tests.arr_testfce", "auto/ase2sprkkr.potentials.test.init_tests.assertDictEqual", "auto/ase2sprkkr.potentials.test.init_tests.assertListEqual", "auto/ase2sprkkr.potentials.test.init_tests.assert_almost_equals", "auto/ase2sprkkr.potentials.test.init_tests.assert_equals", "auto/ase2sprkkr.potentials.test.init_tests.extdict", "auto/ase2sprkkr.potentials.test.init_tests.testfce", "auto/ase2sprkkr.potentials.test.test_2D", "auto/ase2sprkkr.potentials.test.test_2D.Test2DPotential", "auto/ase2sprkkr.potentials.test.test_custom_section", "auto/ase2sprkkr.potentials.test.test_custom_section.TestCustomSection", "auto/ase2sprkkr.potentials.test.test_potential", "auto/ase2sprkkr.potentials.test.test_potential.TestPotential", "auto/ase2sprkkr.potentials.test.test_structure", "auto/ase2sprkkr.potentials.test.test_structure.TestStructure", "auto/ase2sprkkr.sprkkr", "auto/ase2sprkkr.sprkkr.atomic_types", "auto/ase2sprkkr.sprkkr.atomic_types.AtomicType", "auto/ase2sprkkr.sprkkr.atoms_region", "auto/ase2sprkkr.sprkkr.atoms_region.AtomsRegion", "auto/ase2sprkkr.sprkkr.build", "auto/ase2sprkkr.sprkkr.build.semiinfinite_system", "auto/ase2sprkkr.sprkkr.build.stack", "auto/ase2sprkkr.sprkkr.build.vacuum_like", "auto/ase2sprkkr.sprkkr.calculator", "auto/ase2sprkkr.sprkkr.calculator.FilenameTemplator", "auto/ase2sprkkr.sprkkr.calculator.SPRKKR", "auto/ase2sprkkr.sprkkr.configuration", "auto/ase2sprkkr.sprkkr.configuration.ConfigurationFile", "auto/ase2sprkkr.sprkkr.configuration.ConfigurationFileDefinition", "auto/ase2sprkkr.sprkkr.configuration.ConfigurationSection", "auto/ase2sprkkr.sprkkr.configuration.ConfigurationSectionDefinition", "auto/ase2sprkkr.sprkkr.configuration.ConfigurationSectionTrait", "auto/ase2sprkkr.sprkkr.configuration.ConfigurationValue", "auto/ase2sprkkr.sprkkr.configuration.ConfigurationValueDefinition", "auto/ase2sprkkr.sprkkr.configuration.CustomConfigurationSection", "auto/ase2sprkkr.sprkkr.configuration.CustomConfigurationValue", "auto/ase2sprkkr.sprkkr.configuration.RepeatedConfigurationSection", "auto/ase2sprkkr.sprkkr.io_data", "auto/ase2sprkkr.sprkkr.io_data.BaseIoData", "auto/ase2sprkkr.sprkkr.io_data.ReadIoData", "auto/ase2sprkkr.sprkkr.io_data.WriteIoData", "auto/ase2sprkkr.sprkkr.io_data.unique_mapping", "auto/ase2sprkkr.sprkkr.moments", "auto/ase2sprkkr.sprkkr.moments.Moments", "auto/ase2sprkkr.sprkkr.occupations", "auto/ase2sprkkr.sprkkr.occupations.Occupation", "auto/ase2sprkkr.sprkkr.radial", "auto/ase2sprkkr.sprkkr.radial.RadialCharge", "auto/ase2sprkkr.sprkkr.radial.RadialPotential", "auto/ase2sprkkr.sprkkr.radial.RadialValue", "auto/ase2sprkkr.sprkkr.radial_meshes", "auto/ase2sprkkr.sprkkr.radial_meshes.ExponentialMesh", "auto/ase2sprkkr.sprkkr.radial_meshes.Mesh", "auto/ase2sprkkr.sprkkr.radial_meshes._clearing_property", "auto/ase2sprkkr.sprkkr.reference_systems", "auto/ase2sprkkr.sprkkr.reference_systems.ReferenceSystem", "auto/ase2sprkkr.sprkkr.sites", "auto/ase2sprkkr.sprkkr.sites.Site", "auto/ase2sprkkr.sprkkr.sites.SiteType", "auto/ase2sprkkr.sprkkr.sprkkr_atoms", "auto/ase2sprkkr.sprkkr.sprkkr_atoms.SPRKKRAtoms", "auto/ase2sprkkr.sprkkr.sprkkr_grammar_types", "auto/ase2sprkkr.sprkkr.sprkkr_grammar_types.AtomicType", "auto/ase2sprkkr.sprkkr.sprkkr_grammar_types.Site", "auto/ase2sprkkr.sprkkr.structure", "auto/ase2sprkkr.sprkkr.structure.AtomData", "auto/ase2sprkkr.sprkkr.structure.LayerData", "auto/ase2sprkkr.sprkkr.structure.floatjm", "auto/ase2sprkkr.sprkkr.structure.structure_file_to_atoms", "auto/ase2sprkkr.sprkkr.sysfile", "auto/ase2sprkkr.sprkkr.sysfile.sysfile_content", "auto/ase2sprkkr.sprkkr.sysfile.write_sysfile", "auto/ase2sprkkr.sprkkr.test", "auto/ase2sprkkr.sprkkr.test.init_tests", "auto/ase2sprkkr.sprkkr.test.init_tests.TestCase", "auto/ase2sprkkr.sprkkr.test.init_tests.arr_testfce", "auto/ase2sprkkr.sprkkr.test.init_tests.assertDictEqual", "auto/ase2sprkkr.sprkkr.test.init_tests.assertListEqual", "auto/ase2sprkkr.sprkkr.test.init_tests.assert_almost_equals", "auto/ase2sprkkr.sprkkr.test.init_tests.assert_equals", "auto/ase2sprkkr.sprkkr.test.init_tests.extdict", "auto/ase2sprkkr.sprkkr.test.init_tests.testfce", "auto/ase2sprkkr.sprkkr.test.test_arpes", "auto/ase2sprkkr.sprkkr.test.test_arpes.TestCalculator", "auto/ase2sprkkr.sprkkr.test.test_build", "auto/ase2sprkkr.sprkkr.test.test_build.TestBuild", "auto/ase2sprkkr.sprkkr.test.test_calculator", "auto/ase2sprkkr.sprkkr.test.test_calculator.TestCalculator", "auto/ase2sprkkr.sprkkr.test.test_calculator._fast_atoms", "auto/ase2sprkkr.sprkkr.test.test_occupation", "auto/ase2sprkkr.sprkkr.test.test_occupation.test", "auto/ase2sprkkr.sprkkr.test.test_sites", "auto/ase2sprkkr.sprkkr.test.test_sites.TestSites", "auto/ase2sprkkr.sprkkr.test.test_sprkkr_atoms", "auto/ase2sprkkr.sprkkr.test.test_sprkkr_atoms.TestSPRKKRAtoms", "auto/ase2sprkkr.sprkkr.test.test_sysfile", "auto/ase2sprkkr.sprkkr.test.test_sysfile.TestSysfile", "auto/ase2sprkkr.tools", "auto/ase2sprkkr.tools.ase2sprkkr", "auto/ase2sprkkr.tools.ase2sprkkr.run", "auto/ase2sprkkr.tools.commands", "auto/ase2sprkkr.tools.commands.config", "auto/ase2sprkkr.tools.commands.config.parser", "auto/ase2sprkkr.tools.commands.config.run", "auto/ase2sprkkr.tools.commands.info", "auto/ase2sprkkr.tools.commands.info.TestsArgAction", "auto/ase2sprkkr.tools.commands.info.info_output_files", "auto/ase2sprkkr.tools.commands.info.info_tasks", "auto/ase2sprkkr.tools.commands.info.parser", "auto/ase2sprkkr.tools.commands.info.run", "auto/ase2sprkkr.tools.commands.plot", "auto/ase2sprkkr.tools.commands.plot.parser", "auto/ase2sprkkr.tools.commands.plot.run", "auto/ase2sprkkr.tools.commands.run", "auto/ase2sprkkr.tools.commands.run.parser", "auto/ase2sprkkr.tools.commands.run.run", "auto/ase2sprkkr.tools.commands.show_structure", "auto/ase2sprkkr.tools.commands.show_structure.parser", "auto/ase2sprkkr.tools.commands.show_structure.run", "auto/ase2sprkkr.tools.commands.test", "auto/ase2sprkkr.tools.commands.test.parser", "auto/ase2sprkkr.tools.commands.test.run", "auto/ase2sprkkr.tools.shared", "auto/ase2sprkkr.tools.shared.main", "auto/ase2sprkkr.tools.test", "auto/ase2sprkkr.tools.test.init_tests", "auto/ase2sprkkr.tools.test.init_tests.TestCase", "auto/ase2sprkkr.tools.test.init_tests.arr_testfce", "auto/ase2sprkkr.tools.test.init_tests.assertDictEqual", "auto/ase2sprkkr.tools.test.init_tests.assertListEqual", "auto/ase2sprkkr.tools.test.init_tests.assert_almost_equals", "auto/ase2sprkkr.tools.test.init_tests.assert_equals", "auto/ase2sprkkr.tools.test.init_tests.extdict", "auto/ase2sprkkr.tools.test.init_tests.testfce", "auto/ase2sprkkr.tools.test.test_tools", "auto/ase2sprkkr.tools.test.test_tools.TestCommon", "auto/ase2sprkkr.version", "auto/ase2sprkkr.visualise", "auto/ase2sprkkr.visualise.plot", "auto/ase2sprkkr.visualise.plot.Multiplot", "auto/ase2sprkkr.visualise.plot.auto_range", "auto/ase2sprkkr.visualise.plot.change_default_kwargs", "auto/ase2sprkkr.visualise.plot.colormesh", "auto/ase2sprkkr.visualise.plot.combine_colormaps", "auto/ase2sprkkr.visualise.plot.combined_colormap", "auto/ase2sprkkr.visualise.plot.create_rc_context", "auto/ase2sprkkr.visualise.plot.finish_plot", "auto/ase2sprkkr.visualise.plot.normalize_rc_params", "auto/ase2sprkkr.visualise.plot.plotting_function", "auto/ase2sprkkr.visualise.plot.set_up_common_plot", "auto/ase2sprkkr.visualise.plot.single_plot", "auto/modules", "changelog", "examples", "examples_generated", "how-to-install", "index", "installation", "introduction", "philosophy", "usage"], "filenames": ["README.rst", "auto/ase2sprkkr.rst", "auto/ase2sprkkr.ase.rst", "auto/ase2sprkkr.ase.build.rst", "auto/ase2sprkkr.ase.build.aperiodic_times.rst", "auto/ase2sprkkr.ase.build.stack.rst", "auto/ase2sprkkr.ase.io.rst", "auto/ase2sprkkr.ase.io.read_sprkkr.rst", "auto/ase2sprkkr.ase.io.write_sprkkr.rst", "auto/ase2sprkkr.ase.pbc.rst", "auto/ase2sprkkr.ase.pbc.check_symmetry.rst", "auto/ase2sprkkr.ase.register.rst", "auto/ase2sprkkr.ase.register.ase_register.rst", "auto/ase2sprkkr.ase.register.load_user_preferences.rst", "auto/ase2sprkkr.ase.register.register.rst", "auto/ase2sprkkr.ase.register.user_preferences_file.rst", "auto/ase2sprkkr.ase.symbols.rst", "auto/ase2sprkkr.ase.symbols.filename_from_symbols.rst", "auto/ase2sprkkr.ase.symbols.pretty_symbols.rst", "auto/ase2sprkkr.ase.test.rst", "auto/ase2sprkkr.ase.test.init_tests.rst", "auto/ase2sprkkr.ase.test.init_tests.TestCase.rst", "auto/ase2sprkkr.ase.test.init_tests.arr_testfce.rst", "auto/ase2sprkkr.ase.test.init_tests.assertDictEqual.rst", "auto/ase2sprkkr.ase.test.init_tests.assertListEqual.rst", "auto/ase2sprkkr.ase.test.init_tests.assert_almost_equals.rst", "auto/ase2sprkkr.ase.test.init_tests.assert_equals.rst", "auto/ase2sprkkr.ase.test.init_tests.extdict.rst", "auto/ase2sprkkr.ase.test.init_tests.testfce.rst", "auto/ase2sprkkr.ase.test.test_build.rst", "auto/ase2sprkkr.ase.test.test_build.TestBuild.rst", "auto/ase2sprkkr.ase.visualise.rst", "auto/ase2sprkkr.ase.visualise.view.rst", "auto/ase2sprkkr.asr.rst", "auto/ase2sprkkr.asr.asr.rst", "auto/ase2sprkkr.asr.bader.rst", "auto/ase2sprkkr.asr.bader.print.rst", "auto/ase2sprkkr.asr.bandstructure.rst", "auto/ase2sprkkr.asr.bandstructure.Result.rst", "auto/ase2sprkkr.asr.bandstructure.add_bs_pbe.rst", "auto/ase2sprkkr.asr.bandstructure.bs_pbe.rst", "auto/ase2sprkkr.asr.bandstructure.bs_pbe_html.rst", "auto/ase2sprkkr.asr.bandstructure.plot_with_colors.rst", "auto/ase2sprkkr.asr.bandstructure.webpanel.rst", "auto/ase2sprkkr.asr.berry.rst", "auto/ase2sprkkr.asr.berry.Result.rst", "auto/ase2sprkkr.asr.berry.plot_phases.rst", "auto/ase2sprkkr.asr.berry.webpanel.rst", "auto/ase2sprkkr.asr.borncharges.rst", "auto/ase2sprkkr.asr.borncharges.Result.rst", "auto/ase2sprkkr.asr.borncharges.webpanel.rst", "auto/ase2sprkkr.asr.bse.rst", "auto/ase2sprkkr.asr.bse.Result.rst", "auto/ase2sprkkr.asr.bse.absorption.rst", "auto/ase2sprkkr.asr.bse.get_kpts_size.rst", "auto/ase2sprkkr.asr.bse.webpanel.rst", "auto/ase2sprkkr.asr.calculators.rst", "auto/ase2sprkkr.asr.calculators.get_calculator.rst", "auto/ase2sprkkr.asr.chc.rst", "auto/ase2sprkkr.asr.chc.CHCError.rst", "auto/ase2sprkkr.asr.chc.ConvexHullReference.rst", "auto/ase2sprkkr.asr.chc.Hyperplane.rst", "auto/ase2sprkkr.asr.chc.Intermediate.rst", "auto/ase2sprkkr.asr.chc.LeanIntermediate.rst", "auto/ase2sprkkr.asr.chc.Line.rst", "auto/ase2sprkkr.asr.chc.Reference.rst", "auto/ase2sprkkr.asr.chc.Result.rst", "auto/ase2sprkkr.asr.chc._permutecontain.rst", "auto/ase2sprkkr.asr.chc.append_references.rst", "auto/ase2sprkkr.asr.chc.calculate_intermediates.rst", "auto/ase2sprkkr.asr.chc.chcut_plot.rst", "auto/ase2sprkkr.asr.chc.convex_hull.rst", "auto/ase2sprkkr.asr.chc.convex_hull_planes.rst", "auto/ase2sprkkr.asr.chc.filrefs.rst", "auto/ase2sprkkr.asr.chc.get_coords.rst", "auto/ase2sprkkr.asr.chc.get_hof.rst", "auto/ase2sprkkr.asr.chc.gscheck.rst", "auto/ase2sprkkr.asr.chc.is_collinear.rst", "auto/ase2sprkkr.asr.chc.is_independent.rst", "auto/ase2sprkkr.asr.chc.mgs.rst", "auto/ase2sprkkr.asr.chc.mgsls.rst", "auto/ase2sprkkr.asr.chc.mu_adjustment.rst", "auto/ase2sprkkr.asr.chc.orthogonalize.rst", "auto/ase2sprkkr.asr.chc.projuv.rst", "auto/ase2sprkkr.asr.chc.read_structure.rst", "auto/ase2sprkkr.asr.chc.refs2ims.rst", "auto/ase2sprkkr.asr.chc.results2ref.rst", "auto/ase2sprkkr.asr.chc.row2ref.rst", "auto/ase2sprkkr.asr.chc.tuplespermuted.rst", "auto/ase2sprkkr.asr.chc.webpanel.rst", "auto/ase2sprkkr.asr.convex_hull.rst", "auto/ase2sprkkr.asr.convex_hull.Result.rst", "auto/ase2sprkkr.asr.convex_hull.convex_hull_tables.rst", "auto/ase2sprkkr.asr.convex_hull.get_reference_energies.rst", "auto/ase2sprkkr.asr.convex_hull.hof.rst", "auto/ase2sprkkr.asr.convex_hull.plot.rst", "auto/ase2sprkkr.asr.convex_hull.select_references.rst", "auto/ase2sprkkr.asr.convex_hull.webpanel.rst", "auto/ase2sprkkr.asr.core.rst", "auto/ase2sprkkr.asr.core.cli.rst", "auto/ase2sprkkr.asr.core.cli.append_job.rst", "auto/ase2sprkkr.asr.core.cli.check_git.rst", "auto/ase2sprkkr.asr.core.cli.extract_hash_from_file.rst", "auto/ase2sprkkr.asr.core.cli.format.rst", "auto/ase2sprkkr.asr.core.cli.get_config_dir.rst", "auto/ase2sprkkr.asr.core.cli.get_git_rev_list.rst", "auto/ase2sprkkr.asr.core.cli.initialize_asr_configuration_dir.rst", "auto/ase2sprkkr.asr.core.cli.is_asr_initialized.rst", "auto/ase2sprkkr.asr.core.cli.run_command.rst", "auto/ase2sprkkr.asr.core.command.rst", "auto/ase2sprkkr.asr.core.fix_old_files.rst", "auto/ase2sprkkr.asr.core.fix_old_files.is_results_file.rst", "auto/ase2sprkkr.asr.core.material.rst", "auto/ase2sprkkr.asr.core.material.Material.rst", "auto/ase2sprkkr.asr.core.material.get_material_from_folder.rst", "auto/ase2sprkkr.asr.core.material.get_webpanels_from_material.rst", "auto/ase2sprkkr.asr.core.material.make_panel_figures.rst", "auto/ase2sprkkr.asr.core.results.rst", "auto/ase2sprkkr.asr.core.results.ASRResult.rst", "auto/ase2sprkkr.asr.core.results.DictEncoder.rst", "auto/ase2sprkkr.asr.core.results.HTMLEncoder.rst", "auto/ase2sprkkr.asr.core.results.HackedASRResult.rst", "auto/ase2sprkkr.asr.core.results.JSONEncoder.rst", "auto/ase2sprkkr.asr.core.results.MetaData.rst", "auto/ase2sprkkr.asr.core.results.MetaDataNotSetError.rst", "auto/ase2sprkkr.asr.core.results.ObjectDescription.rst", "auto/ase2sprkkr.asr.core.results.ResultEncoder.rst", "auto/ase2sprkkr.asr.core.results.UnknownASRResultFormat.rst", "auto/ase2sprkkr.asr.core.results.UnknownDataFormat.rst", "auto/ase2sprkkr.asr.core.results.WebPanelEncoder.rst", "auto/ase2sprkkr.asr.core.results.data_to_dict.rst", "auto/ase2sprkkr.asr.core.results.dct_to_result.rst", "auto/ase2sprkkr.asr.core.results.find_class_matching_version.rst", "auto/ase2sprkkr.asr.core.results.format_key_description_pair.rst", "auto/ase2sprkkr.asr.core.results.get_key_descriptions.rst", "auto/ase2sprkkr.asr.core.results.get_object_matching_obj_id.rst", "auto/ase2sprkkr.asr.core.results.get_object_types.rst", "auto/ase2sprkkr.asr.core.results.get_reader_function.rst", "auto/ase2sprkkr.asr.core.results.make_property.rst", "auto/ase2sprkkr.asr.core.results.obj_to_id.rst", "auto/ase2sprkkr.asr.core.results.object_description_to_object.rst", "auto/ase2sprkkr.asr.core.results.prepare_result.rst", "auto/ase2sprkkr.asr.core.results.read_hacked_data.rst", "auto/ase2sprkkr.asr.core.results.read_new_data.rst", "auto/ase2sprkkr.asr.core.results.read_old_data.rst", "auto/ase2sprkkr.asr.core.types.rst", "auto/ase2sprkkr.asr.core.types.AtomsFile.rst", "auto/ase2sprkkr.asr.core.types.DictStr.rst", "auto/ase2sprkkr.asr.core.types.clickify_docstring.rst", "auto/ase2sprkkr.asr.core.utils.rst", "auto/ase2sprkkr.asr.core.utils.chdir.rst", "auto/ase2sprkkr.asr.core.utils.dct_to_object.rst", "auto/ase2sprkkr.asr.core.utils.encode_json.rst", "auto/ase2sprkkr.asr.core.utils.file_barrier.rst", "auto/ase2sprkkr.asr.core.utils.get_dep_tree.rst", "auto/ase2sprkkr.asr.core.utils.get_recipe_from_name.rst", "auto/ase2sprkkr.asr.core.utils.md5sum.rst", "auto/ase2sprkkr.asr.core.utils.parse_dict_string.rst", "auto/ase2sprkkr.asr.core.utils.parse_mod_func.rst", "auto/ase2sprkkr.asr.core.utils.read_json.rst", "auto/ase2sprkkr.asr.core.utils.recursive_update.rst", "auto/ase2sprkkr.asr.core.utils.singleprec_dict.rst", "auto/ase2sprkkr.asr.core.utils.unlink.rst", "auto/ase2sprkkr.asr.core.utils.write_file.rst", "auto/ase2sprkkr.asr.core.utils.write_json.rst", "auto/ase2sprkkr.asr.database.rst", "auto/ase2sprkkr.asr.database.browser.rst", "auto/ase2sprkkr.asr.database.browser.RowWrapper.rst", "auto/ase2sprkkr.asr.database.browser.create_table.rst", "auto/ase2sprkkr.asr.database.browser.describe_entries.rst", "auto/ase2sprkkr.asr.database.browser.describe_entry.rst", "auto/ase2sprkkr.asr.database.browser.dict_to_list.rst", "auto/ase2sprkkr.asr.database.browser.entry_parameter_description.rst", "auto/ase2sprkkr.asr.database.browser.extract_recipe_from_filename.rst", "auto/ase2sprkkr.asr.database.browser.fig.rst", "auto/ase2sprkkr.asr.database.browser.is_results_file.rst", "auto/ase2sprkkr.asr.database.browser.layout.rst", "auto/ase2sprkkr.asr.database.browser.merge_panels.rst", "auto/ase2sprkkr.asr.database.browser.miscellaneous_section.rst", "auto/ase2sprkkr.asr.database.browser.table.rst", "auto/ase2sprkkr.asr.database.browser.val2str.rst", "auto/ase2sprkkr.asr.database.check.rst", "auto/ase2sprkkr.asr.database.clonetree.rst", "auto/ase2sprkkr.asr.database.duplicates.rst", "auto/ase2sprkkr.asr.database.duplicates.compare.rst", "auto/ase2sprkkr.asr.database.duplicates.filter_uids.rst", "auto/ase2sprkkr.asr.database.duplicates.find_duplicate_group.rst", "auto/ase2sprkkr.asr.database.duplicates.parse_filter_string.rst", "auto/ase2sprkkr.asr.database.material_fingerprint.rst", "auto/ase2sprkkr.asr.database.material_fingerprint.get_hash_of_atoms.rst", "auto/ase2sprkkr.asr.database.material_fingerprint.get_uid_of_atoms.rst", "auto/ase2sprkkr.asr.database.material_fingerprint.todict.rst", "auto/ase2sprkkr.asr.database.merge.rst", "auto/ase2sprkkr.asr.database.rmsd.rst", "auto/ase2sprkkr.asr.database.rmsd.get_rmsd.rst", "auto/ase2sprkkr.asr.database.rmsd.normalize_nonpbc_atoms.rst", "auto/ase2sprkkr.asr.database.rmsd.update_rmsd.rst", "auto/ase2sprkkr.asr.database.templates.rst", "auto/ase2sprkkr.asr.database.totree.rst", "auto/ase2sprkkr.asr.database.totree.make_folder_dict.rst", "auto/ase2sprkkr.asr.database.totree.make_folder_tree.rst", "auto/ase2sprkkr.asr.defectformation.rst", "auto/ase2sprkkr.asr.defectformation.check_and_get_general_inputs.rst", "auto/ase2sprkkr.asr.defectformation.collect_data.rst", "auto/ase2sprkkr.asr.defectformation.find_file_in_folder.rst", "auto/ase2sprkkr.asr.defectformation.intersection.rst", "auto/ase2sprkkr.asr.defectformation.line.rst", "auto/ase2sprkkr.asr.defectformation.line_intersection.rst", "auto/ase2sprkkr.asr.defectformation.plot_formation_and_transitions.rst", "auto/ase2sprkkr.asr.deformationpotentials.rst", "auto/ase2sprkkr.asr.deformationpotentials.Result.rst", "auto/ase2sprkkr.asr.deformationpotentials.webpanel.rst", "auto/ase2sprkkr.asr.dimensionality.rst", "auto/ase2sprkkr.asr.dimensionality.get_dimtypes.rst", "auto/ase2sprkkr.asr.dimensionality.plot_dimensionality_histogram.rst", "auto/ase2sprkkr.asr.dimensionality.webpanel.rst", "auto/ase2sprkkr.asr.dos.rst", "auto/ase2sprkkr.asr.dos.collect_data.rst", "auto/ase2sprkkr.asr.dos.plot.rst", "auto/ase2sprkkr.asr.dos.webpanel.rst", "auto/ase2sprkkr.asr.emasses.rst", "auto/ase2sprkkr.asr.emasses.NoGapError.rst", "auto/ase2sprkkr.asr.emasses.Result.rst", "auto/ase2sprkkr.asr.emasses.calculate_bs_along_emass_vecs.rst", "auto/ase2sprkkr.asr.emasses.check_soc.rst", "auto/ase2sprkkr.asr.emasses.convert_key_to_tuple.rst", "auto/ase2sprkkr.asr.emasses.create_columns_fnames.rst", "auto/ase2sprkkr.asr.emasses.custom_table.rst", "auto/ase2sprkkr.asr.emasses.em.rst", "auto/ase2sprkkr.asr.emasses.embands.rst", "auto/ase2sprkkr.asr.emasses.evalmodel.rst", "auto/ase2sprkkr.asr.emasses.fit.rst", "auto/ase2sprkkr.asr.emasses.get_2nd_order_extremum.rst", "auto/ase2sprkkr.asr.emasses.get_3rd_order_extremum.rst", "auto/ase2sprkkr.asr.emasses.get_bt_ks.rst", "auto/ase2sprkkr.asr.emasses.get_emass_dict_from_row.rst", "auto/ase2sprkkr.asr.emasses.get_extremum_type.rst", "auto/ase2sprkkr.asr.emasses.get_gapskn.rst", "auto/ase2sprkkr.asr.emasses.get_name.rst", "auto/ase2sprkkr.asr.emasses.get_range.rst", "auto/ase2sprkkr.asr.emasses.get_vb_cb_indices.rst", "auto/ase2sprkkr.asr.emasses.kptsinsphere.rst", "auto/ase2sprkkr.asr.emasses.make_the_plots.rst", "auto/ase2sprkkr.asr.emasses.model.rst", "auto/ase2sprkkr.asr.emasses.nonsc_sphere.rst", "auto/ase2sprkkr.asr.emasses.preliminary_refine.rst", "auto/ase2sprkkr.asr.emasses.set_default.rst", "auto/ase2sprkkr.asr.emasses.unpack_masses.rst", "auto/ase2sprkkr.asr.emasses.webpanel.rst", "auto/ase2sprkkr.asr.emasses.wideMAE.rst", "auto/ase2sprkkr.asr.exchange.rst", "auto/ase2sprkkr.asr.exchange.get_parameters.rst", "auto/ase2sprkkr.asr.fere.rst", "auto/ase2sprkkr.asr.fere.DBAlreadyExistsError.rst", "auto/ase2sprkkr.asr.fere.MaterialNotFoundError.rst", "auto/ase2sprkkr.asr.fere.ParseError.rst", "auto/ase2sprkkr.asr.fere.count.rst", "auto/ase2sprkkr.asr.fere.create_corrected_db.rst", "auto/ase2sprkkr.asr.fere.elements_from_refs.rst", "auto/ase2sprkkr.asr.fere.formulas_eq.rst", "auto/ase2sprkkr.asr.fere.get_dE_alpha.rst", "auto/ase2sprkkr.asr.fere.get_hof.rst", "auto/ase2sprkkr.asr.fere.load_data.rst", "auto/ase2sprkkr.asr.fere.minimize_error.rst", "auto/ase2sprkkr.asr.fere.multiply_formula.rst", "auto/ase2sprkkr.asr.fere.only.rst", "auto/ase2sprkkr.asr.fere.parse_reactions.rst", "auto/ase2sprkkr.asr.fere.parse_refs.rst", "auto/ase2sprkkr.asr.fere.safe_get.rst", "auto/ase2sprkkr.asr.fere.select.rst", "auto/ase2sprkkr.asr.fere.single.rst", "auto/ase2sprkkr.asr.fere.unique.rst", "auto/ase2sprkkr.asr.fere.where.rst", "auto/ase2sprkkr.asr.fermisurface.rst", "auto/ase2sprkkr.asr.fermisurface.Result.rst", "auto/ase2sprkkr.asr.fermisurface.add_fermi.rst", "auto/ase2sprkkr.asr.fermisurface.bz_vertices.rst", "auto/ase2sprkkr.asr.fermisurface.find_contours.rst", "auto/ase2sprkkr.asr.fermisurface.plot_fermi.rst", "auto/ase2sprkkr.asr.fermisurface.webpanel.rst", "auto/ase2sprkkr.asr.formalpolarization.rst", "auto/ase2sprkkr.asr.formalpolarization.AtomsTooCloseToBoundary.rst", "auto/ase2sprkkr.asr.formalpolarization.distance_to_non_pbc_boundary.rst", "auto/ase2sprkkr.asr.formalpolarization.get_atomic_polarization_phase.rst", "auto/ase2sprkkr.asr.formalpolarization.get_dipole_polarization_phase.rst", "auto/ase2sprkkr.asr.formalpolarization.get_electronic_polarization_phase.rst", "auto/ase2sprkkr.asr.formalpolarization.get_wavefunctions.rst", "auto/ase2sprkkr.asr.gs.rst", "auto/ase2sprkkr.asr.gs.GapsResult.rst", "auto/ase2sprkkr.asr.gs.Result.rst", "auto/ase2sprkkr.asr.gs.VacuumLevelResults.rst", "auto/ase2sprkkr.asr.gs.bz_with_band_extremums.rst", "auto/ase2sprkkr.asr.gs.evacdiff.rst", "auto/ase2sprkkr.asr.gs.gaps.rst", "auto/ase2sprkkr.asr.gs.get_1bz_k.rst", "auto/ase2sprkkr.asr.gs.get_gap_info.rst", "auto/ase2sprkkr.asr.gs.vacuumlevels.rst", "auto/ase2sprkkr.asr.gs.webpanel.rst", "auto/ase2sprkkr.asr.gw.rst", "auto/ase2sprkkr.asr.gw.Result.rst", "auto/ase2sprkkr.asr.gw.bs_gw.rst", "auto/ase2sprkkr.asr.gw.get_kpts_size.rst", "auto/ase2sprkkr.asr.gw.webpanel.rst", "auto/ase2sprkkr.asr.hse.rst", "auto/ase2sprkkr.asr.hse.MP_interpolate.rst", "auto/ase2sprkkr.asr.hse.Result.rst", "auto/ase2sprkkr.asr.hse.bs_hse.rst", "auto/ase2sprkkr.asr.hse.get_kpts_size.rst", "auto/ase2sprkkr.asr.hse.hse.rst", "auto/ase2sprkkr.asr.hse.hse_spinorbit.rst", "auto/ase2sprkkr.asr.hse.webpanel.rst", "auto/ase2sprkkr.asr.infraredpolarizability.rst", "auto/ase2sprkkr.asr.infraredpolarizability.Result.rst", "auto/ase2sprkkr.asr.infraredpolarizability.create_plot.rst", "auto/ase2sprkkr.asr.infraredpolarizability.get_phonon_pol.rst", "auto/ase2sprkkr.asr.infraredpolarizability.webpanel.rst", "auto/ase2sprkkr.asr.magnetic_anisotropy.rst", "auto/ase2sprkkr.asr.magnetic_anisotropy.Result.rst", "auto/ase2sprkkr.asr.magnetic_anisotropy.get_spin_axis.rst", "auto/ase2sprkkr.asr.magnetic_anisotropy.get_spin_index.rst", "auto/ase2sprkkr.asr.magnetic_anisotropy.spin_axis.rst", "auto/ase2sprkkr.asr.magnetic_anisotropy.webpanel.rst", "auto/ase2sprkkr.asr.magstate.rst", "auto/ase2sprkkr.asr.magstate.Result.rst", "auto/ase2sprkkr.asr.magstate.get_magstate.rst", "auto/ase2sprkkr.asr.magstate.webpanel.rst", "auto/ase2sprkkr.asr.pdos.rst", "auto/ase2sprkkr.asr.pdos.Result.rst", "auto/ase2sprkkr.asr.pdos.calculate_pdos.rst", "auto/ase2sprkkr.asr.pdos.get_l_a.rst", "auto/ase2sprkkr.asr.pdos.get_ordered_syl_dict.rst", "auto/ase2sprkkr.asr.pdos.get_yl_colors.rst", "auto/ase2sprkkr.asr.pdos.pdos.rst", "auto/ase2sprkkr.asr.pdos.plot_pdos.rst", "auto/ase2sprkkr.asr.pdos.plot_pdos_nosoc.rst", "auto/ase2sprkkr.asr.pdos.plot_pdos_soc.rst", "auto/ase2sprkkr.asr.pdos.webpanel.rst", "auto/ase2sprkkr.asr.phonons.rst", "auto/ase2sprkkr.asr.phonons.Result.rst", "auto/ase2sprkkr.asr.phonons.creates.rst", "auto/ase2sprkkr.asr.phonons.mingocorrection.rst", "auto/ase2sprkkr.asr.phonons.plot_bandstructure.rst", "auto/ase2sprkkr.asr.phonons.plot_phonons.rst", "auto/ase2sprkkr.asr.phonons.requires.rst", "auto/ase2sprkkr.asr.phonons.todict.rst", "auto/ase2sprkkr.asr.phonons.topckl.rst", "auto/ase2sprkkr.asr.phonons.webpanel.rst", "auto/ase2sprkkr.asr.phonopy.rst", "auto/ase2sprkkr.asr.phonopy.Result.rst", "auto/ase2sprkkr.asr.phonopy.distance_to_sc.rst", "auto/ase2sprkkr.asr.phonopy.lattice_vectors.rst", "auto/ase2sprkkr.asr.phonopy.plot_bandstructure.rst", "auto/ase2sprkkr.asr.phonopy.plot_phonons.rst", "auto/ase2sprkkr.asr.phonopy.requires.rst", "auto/ase2sprkkr.asr.phonopy.webpanel.rst", "auto/ase2sprkkr.asr.piezoelectrictensor.rst", "auto/ase2sprkkr.asr.piezoelectrictensor.Result.rst", "auto/ase2sprkkr.asr.piezoelectrictensor.webpanel.rst", "auto/ase2sprkkr.asr.plasmafrequency.rst", "auto/ase2sprkkr.asr.plasmafrequency.Result.rst", "auto/ase2sprkkr.asr.plasmafrequency.get_kpts_size.rst", "auto/ase2sprkkr.asr.plasmafrequency.webpanel.rst", "auto/ase2sprkkr.asr.polarizability.rst", "auto/ase2sprkkr.asr.polarizability.Result.rst", "auto/ase2sprkkr.asr.polarizability.get_kpts_size.rst", "auto/ase2sprkkr.asr.polarizability.polarizability.rst", "auto/ase2sprkkr.asr.polarizability.webpanel.rst", "auto/ase2sprkkr.asr.projected_bandstructure.rst", "auto/ase2sprkkr.asr.projected_bandstructure.Result.rst", "auto/ase2sprkkr.asr.projected_bandstructure.get_bs_sampling.rst", "auto/ase2sprkkr.asr.projected_bandstructure.get_orbital_ldos.rst", "auto/ase2sprkkr.asr.projected_bandstructure.get_pie_markers.rst", "auto/ase2sprkkr.asr.projected_bandstructure.get_pie_slice.rst", "auto/ase2sprkkr.asr.projected_bandstructure.get_yl_ordering.rst", "auto/ase2sprkkr.asr.projected_bandstructure.projected_bs_pbe.rst", "auto/ase2sprkkr.asr.projected_bandstructure.webpanel.rst", "auto/ase2sprkkr.asr.push.rst", "auto/ase2sprkkr.asr.raman.rst", "auto/ase2sprkkr.asr.raman.Result.rst", "auto/ase2sprkkr.asr.raman.count_deg.rst", "auto/ase2sprkkr.asr.raman.raman.rst", "auto/ase2sprkkr.asr.raman.webpanel.rst", "auto/ase2sprkkr.asr.relax.rst", "auto/ase2sprkkr.asr.relax.BrokenSymmetryError.rst", "auto/ase2sprkkr.asr.relax.Result.rst", "auto/ase2sprkkr.asr.relax.SpgAtoms.rst", "auto/ase2sprkkr.asr.relax.is_relax_done.rst", "auto/ase2sprkkr.asr.relax.myBFGS.rst", "auto/ase2sprkkr.asr.relax.relax.rst", "auto/ase2sprkkr.asr.relax.set_initial_magnetic_moments.rst", "auto/ase2sprkkr.asr.setinfo.rst", "auto/ase2sprkkr.asr.setinfo.KeyValuePair.rst", "auto/ase2sprkkr.asr.setinfo.check_key_value.rst", "auto/ase2sprkkr.asr.setup.rst", "auto/ase2sprkkr.asr.setup.decorate.rst", "auto/ase2sprkkr.asr.setup.decorate.apply_substitution.rst", "auto/ase2sprkkr.asr.setup.decorate.find_substitutions.rst", "auto/ase2sprkkr.asr.setup.decorate.generate_structures.rst", "auto/ase2sprkkr.asr.setup.decorate.get_p_ab.rst", "auto/ase2sprkkr.asr.setup.defects.rst", "auto/ase2sprkkr.asr.setup.defects.collect_data.rst", "auto/ase2sprkkr.asr.setup.defects.create_folder_structure.rst", "auto/ase2sprkkr.asr.setup.defects.setup_defects.rst", "auto/ase2sprkkr.asr.setup.defects.setup_supercell.rst", "auto/ase2sprkkr.asr.setup.displacements.rst", "auto/ase2sprkkr.asr.setup.displacements.create_displacements_folder.rst", "auto/ase2sprkkr.asr.setup.displacements.displace_atom.rst", "auto/ase2sprkkr.asr.setup.displacements.get_all_displacements.rst", "auto/ase2sprkkr.asr.setup.displacements.get_displacement_folder.rst", "auto/ase2sprkkr.asr.setup.magnetize.rst", "auto/ase2sprkkr.asr.setup.materials.rst", "auto/ase2sprkkr.asr.setup.params.rst", "auto/ase2sprkkr.asr.setup.scanparams.rst", "auto/ase2sprkkr.asr.setup.strains.rst", "auto/ase2sprkkr.asr.setup.strains.get_relevant_strains.rst", "auto/ase2sprkkr.asr.setup.strains.get_strained_folder_name.rst", "auto/ase2sprkkr.asr.setup.strains.setup_strains.rst", "auto/ase2sprkkr.asr.setup.symmetrize.rst", "auto/ase2sprkkr.asr.setup.symmetrize.symmetrize_atoms.rst", "auto/ase2sprkkr.asr.stiffness.rst", "auto/ase2sprkkr.asr.stiffness.Result.rst", "auto/ase2sprkkr.asr.stiffness.webpanel.rst", "auto/ase2sprkkr.asr.structureinfo.rst", "auto/ase2sprkkr.asr.structureinfo.Result.rst", "auto/ase2sprkkr.asr.structureinfo.get_reduced_formula.rst", "auto/ase2sprkkr.asr.structureinfo.webpanel.rst", "auto/ase2sprkkr.asr.test.rst", "auto/ase2sprkkr.asr.test.acceptance.rst", "auto/ase2sprkkr.asr.test.acceptance.test_borncharges.rst", "auto/ase2sprkkr.asr.test.acceptance.test_borncharges.test_gpaw_berry_get_berry_phases_integration.rst", "auto/ase2sprkkr.asr.test.acceptance.test_piezoelectrictensor.rst", "auto/ase2sprkkr.asr.test.acceptance.test_piezoelectrictensor.test_piezo_BN.rst", "auto/ase2sprkkr.asr.test.acceptance.test_relax.rst", "auto/ase2sprkkr.asr.test.acceptance.test_relax.test_relax_fe_gpaw.rst", "auto/ase2sprkkr.asr.test.conftest.rst", "auto/ase2sprkkr.asr.test.conftest.pytest_configure.rst", "auto/ase2sprkkr.asr.test.conftest.pytest_sessionstart.rst", "auto/ase2sprkkr.asr.test.fixtures.rst", "auto/ase2sprkkr.asr.test.fixtures._get_webcontent.rst", "auto/ase2sprkkr.asr.test.fixtures.asr_tmpdir.rst", "auto/ase2sprkkr.asr.test.fixtures.asr_tmpdir_w_params.rst", "auto/ase2sprkkr.asr.test.fixtures.duplicates_test_db.rst", "auto/ase2sprkkr.asr.test.fixtures.get_webcontent.rst", "auto/ase2sprkkr.asr.test.fixtures.mockgpaw.rst", "auto/ase2sprkkr.asr.test.fixtures.set_asr_test_environ_variable.rst", "auto/ase2sprkkr.asr.test.fixtures.test_material.rst", "auto/ase2sprkkr.asr.test.materials.rst", "auto/ase2sprkkr.asr.test.mocks.rst", "auto/ase2sprkkr.asr.test.mocks.gpaw.rst", "auto/ase2sprkkr.asr.test.mocks.gpaw.berryphase.rst", "auto/ase2sprkkr.asr.test.mocks.gpaw.berryphase.get_berry_phases.rst", "auto/ase2sprkkr.asr.test.mocks.gpaw.calculator.rst", "auto/ase2sprkkr.asr.test.mocks.gpaw.calculator.ASRCalculator.rst", "auto/ase2sprkkr.asr.test.mocks.gpaw.calculator.DOSCalculator.rst", "auto/ase2sprkkr.asr.test.mocks.gpaw.calculator.Occupations.rst", "auto/ase2sprkkr.asr.test.mocks.gpaw.calculator.Parameters.rst", "auto/ase2sprkkr.asr.test.mocks.gpaw.calculator.Setups.rst", "auto/ase2sprkkr.asr.test.mocks.gpaw.calculator.WaveFunctions.rst", "auto/ase2sprkkr.asr.test.mocks.gpaw.hybrids.rst", "auto/ase2sprkkr.asr.test.mocks.gpaw.hybrids.eigenvalues.rst", "auto/ase2sprkkr.asr.test.mocks.gpaw.kpt_descriptor.rst", "auto/ase2sprkkr.asr.test.mocks.gpaw.kpt_descriptor.kpts2sizeandoffsets.rst", "auto/ase2sprkkr.asr.test.mocks.gpaw.kpt_descriptor.to1bz.rst", "auto/ase2sprkkr.asr.test.mocks.gpaw.mpi.rst", "auto/ase2sprkkr.asr.test.mocks.gpaw.mpi.barrier.rst", "auto/ase2sprkkr.asr.test.mocks.gpaw.mpi.broadcast.rst", "auto/ase2sprkkr.asr.test.mocks.gpaw.mpi.new_communicator.rst", "auto/ase2sprkkr.asr.test.mocks.gpaw.mpi.world_sum.rst", "auto/ase2sprkkr.asr.test.mocks.gpaw.occupations.rst", "auto/ase2sprkkr.asr.test.mocks.gpaw.occupations.FermiDirac.rst", "auto/ase2sprkkr.asr.test.mocks.gpaw.occupations.create_occ_calc.rst", "auto/ase2sprkkr.asr.test.mocks.gpaw.response.rst", "auto/ase2sprkkr.asr.test.mocks.gpaw.response.bse.rst", "auto/ase2sprkkr.asr.test.mocks.gpaw.response.bse.BSE.rst", "auto/ase2sprkkr.asr.test.mocks.gpaw.response.df.rst", "auto/ase2sprkkr.asr.test.mocks.gpaw.response.df.DielectricFunction.rst", "auto/ase2sprkkr.asr.test.mocks.gpaw.response.g0w0.rst", "auto/ase2sprkkr.asr.test.mocks.gpaw.response.g0w0.G0W0.rst", "auto/ase2sprkkr.asr.test.mocks.gpaw.spinorbit.rst", "auto/ase2sprkkr.asr.test.mocks.gpaw.spinorbit.SOC.rst", "auto/ase2sprkkr.asr.test.mocks.gpaw.spinorbit.soc_eigenstates.rst", "auto/ase2sprkkr.asr.test.mocks.gpaw.symmetry.rst", "auto/ase2sprkkr.asr.test.mocks.gpaw.symmetry.Symmetry.rst", "auto/ase2sprkkr.asr.test.mocks.gpaw.utilities.rst", "auto/ase2sprkkr.asr.test.mocks.gpaw.utilities.dos.rst", "auto/ase2sprkkr.asr.test.mocks.gpaw.utilities.dos.raw_orbital_LDOS.rst", "auto/ase2sprkkr.asr.test.mocks.gpaw.utilities.ibz2bz.rst", "auto/ase2sprkkr.asr.test.mocks.gpaw.utilities.ibz2bz.ibz2bz.rst", "auto/ase2sprkkr.asr.test.mocks.gpaw.utilities.progressbar.rst", "auto/ase2sprkkr.asr.test.mocks.gpaw.utilities.progressbar.ProgressBar.rst", "auto/ase2sprkkr.asr.test.mocks.gpaw.xc.rst", "auto/ase2sprkkr.asr.test.mocks.gpaw.xc.exx.rst", "auto/ase2sprkkr.asr.test.mocks.gpaw.xc.tools.rst", "auto/ase2sprkkr.asr.test.test_bandstructure.rst", "auto/ase2sprkkr.asr.test.test_bandstructure.test_bandstructure_main.rst", "auto/ase2sprkkr.asr.test.test_berry.rst", "auto/ase2sprkkr.asr.test.test_berry.test_berry.rst", "auto/ase2sprkkr.asr.test.test_berry.test_berry_nontrivial.rst", "auto/ase2sprkkr.asr.test.test_borncharges.rst", "auto/ase2sprkkr.asr.test.test_borncharges.test_borncharges.rst", "auto/ase2sprkkr.asr.test.test_bse.rst", "auto/ase2sprkkr.asr.test.test_bse.test_bse.rst", "auto/ase2sprkkr.asr.test.test_cli.rst", "auto/ase2sprkkr.asr.test.test_cli.test_asr.rst", "auto/ase2sprkkr.asr.test.test_cli.test_asr_find.rst", "auto/ase2sprkkr.asr.test.test_cli.test_asr_find_help.rst", "auto/ase2sprkkr.asr.test.test_cli.test_asr_find_no_versions.rst", "auto/ase2sprkkr.asr.test.test_cli.test_asr_list.rst", "auto/ase2sprkkr.asr.test.test_cli.test_asr_results_bandstructure.rst", "auto/ase2sprkkr.asr.test.test_cli.test_asr_results_help.rst", "auto/ase2sprkkr.asr.test.test_cli.test_asr_run.rst", "auto/ase2sprkkr.asr.test.test_convex_hull.rst", "auto/ase2sprkkr.asr.test.test_convex_hull.test_convex_hull.rst", "auto/ase2sprkkr.asr.test.test_core.rst", "auto/ase2sprkkr.asr.test.test_core.recipe.rst", "auto/ase2sprkkr.asr.test.test_core.test_core.rst", "auto/ase2sprkkr.asr.test.test_core.test_recipe_defaults.rst", "auto/ase2sprkkr.asr.test.test_core.test_recipe_setting_new_defaults.rst", "auto/ase2sprkkr.asr.test.test_core.test_recipe_setting_overriding_defaults.rst", "auto/ase2sprkkr.asr.test.test_core_material.rst", "auto/ase2sprkkr.asr.test.test_core_material.test_asr_cli_results_figures_gs.rst", "auto/ase2sprkkr.asr.test.test_core_results.rst", "auto/ase2sprkkr.asr.test.test_core_results.MyResult.rst", "auto/ase2sprkkr.asr.test.test_core_results.MyResultVer0.rst", "auto/ase2sprkkr.asr.test.test_core_results.MyWebPanel.rst", "auto/ase2sprkkr.asr.test.test_core_results.test_read_old_format.rst", "auto/ase2sprkkr.asr.test.test_core_results.test_reading_older_version.rst", "auto/ase2sprkkr.asr.test.test_core_results.test_reading_result.rst", "auto/ase2sprkkr.asr.test.test_core_results.test_results_object.rst", "auto/ase2sprkkr.asr.test.test_database_duplicates.rst", "auto/ase2sprkkr.asr.test.test_database_duplicates.test_database_duplicates.rst", "auto/ase2sprkkr.asr.test.test_database_duplicates.test_database_duplicates_filter_magstate.rst", "auto/ase2sprkkr.asr.test.test_database_duplicates.test_database_duplicates_no_duplicates.rst", "auto/ase2sprkkr.asr.test.test_database_fromtree.rst", "auto/ase2sprkkr.asr.test.test_database_fromtree.folder_tree.rst", "auto/ase2sprkkr.asr.test.test_database_fromtree.make_tree.rst", "auto/ase2sprkkr.asr.test.test_database_fromtree.test_database_fromtree_raises_when_missing_uids.rst", "auto/ase2sprkkr.asr.test.test_database_fromtree.test_database_fromtree_totree.rst", "auto/ase2sprkkr.asr.test.test_database_fromtree.test_database_fromtree_works_without_write_permission.rst", "auto/ase2sprkkr.asr.test.test_database_rmsd.rst", "auto/ase2sprkkr.asr.test.test_database_rmsd.rattle_atoms.rst", "auto/ase2sprkkr.asr.test.test_database_rmsd.test_database_rmsd_duplicates.rst", "auto/ase2sprkkr.asr.test.test_database_rmsd.test_database_rmsd_duplicates_comparison_keys.rst", "auto/ase2sprkkr.asr.test.test_database_rmsd.test_database_rmsd_move_one_atom.rst", "auto/ase2sprkkr.asr.test.test_database_rmsd.test_database_rmsd_none_handling.rst", "auto/ase2sprkkr.asr.test.test_database_rmsd.test_database_rmsd_not_equal.rst", "auto/ase2sprkkr.asr.test.test_database_rmsd.test_database_rmsd_rattled.rst", "auto/ase2sprkkr.asr.test.test_database_rmsd.test_database_rmsd_rotation.rst", "auto/ase2sprkkr.asr.test.test_database_totree.rst", "auto/ase2sprkkr.asr.test.test_database_totree.make_test_db.rst", "auto/ase2sprkkr.asr.test.test_database_totree.test_database_totree.rst", "auto/ase2sprkkr.asr.test.test_database_totree.test_database_totree_files_and_hard_links.rst", "auto/ase2sprkkr.asr.test.test_dimensionality.rst", "auto/ase2sprkkr.asr.test.test_dimensionality.test_dimensionality.rst", "auto/ase2sprkkr.asr.test.test_dimensionality.test_dimensionality_cli.rst", "auto/ase2sprkkr.asr.test.test_emasses.rst", "auto/ase2sprkkr.asr.test.test_emasses._get_all_eigenvalues.rst", "auto/ase2sprkkr.asr.test.test_emasses.resultstest.rst", "auto/ase2sprkkr.asr.test.test_emasses.test_emasses_freelectron.rst", "auto/ase2sprkkr.asr.test.test_emasses.test_emasses_indirect.rst", "auto/ase2sprkkr.asr.test.test_fixtures.rst", "auto/ase2sprkkr.asr.test.test_fixtures.test_env_variables.rst", "auto/ase2sprkkr.asr.test.test_formalpolarization.rst", "auto/ase2sprkkr.asr.test.test_formalpolarization.test_formalpolarization.rst", "auto/ase2sprkkr.asr.test.test_formalpolarization.test_formalpolarization_test_atoms_too_close_to_boundary.rst", "auto/ase2sprkkr.asr.test.test_gs.rst", "auto/ase2sprkkr.asr.test.test_gs.test_gs.rst", "auto/ase2sprkkr.asr.test.test_gs.test_gs_asr_cli_results_figures.rst", "auto/ase2sprkkr.asr.test.test_gs.test_gs_integration_gpaw.rst", "auto/ase2sprkkr.asr.test.test_gw.rst", "auto/ase2sprkkr.asr.test.test_gw.test_gw.rst", "auto/ase2sprkkr.asr.test.test_hse.rst", "auto/ase2sprkkr.asr.test.test_hse.test_hse.rst", "auto/ase2sprkkr.asr.test.test_pdos.rst", "auto/ase2sprkkr.asr.test.test_pdos.test_pdos.rst", "auto/ase2sprkkr.asr.test.test_pdos.test_pdos_full.rst", "auto/ase2sprkkr.asr.test.test_phonons.rst", "auto/ase2sprkkr.asr.test.test_phonons.test_phonons.rst", "auto/ase2sprkkr.asr.test.test_phonopy.rst", "auto/ase2sprkkr.asr.test.test_phonopy.test_phonopy.rst", "auto/ase2sprkkr.asr.test.test_piezoelectrictensor.rst", "auto/ase2sprkkr.asr.test.test_piezoelectrictensor.get_strain_from_atoms.rst", "auto/ase2sprkkr.asr.test.test_piezoelectrictensor.test_piezoelectrictensor.rst", "auto/ase2sprkkr.asr.test.test_piezoelectrictensor.zero_pad_non_pbc_strain_directions.rst", "auto/ase2sprkkr.asr.test.test_plasmafrequency.rst", "auto/ase2sprkkr.asr.test.test_plasmafrequency.test_plasmafrequency.rst", "auto/ase2sprkkr.asr.test.test_polarizability.rst", "auto/ase2sprkkr.asr.test.test_polarizability.test_polarizability.rst", "auto/ase2sprkkr.asr.test.test_projected_bandstructure.rst", "auto/ase2sprkkr.asr.test.test_projected_bandstructure.test_projected_bs_mocked.rst", "auto/ase2sprkkr.asr.test.test_raman.rst", "auto/ase2sprkkr.asr.test.test_raman.test_raman.rst", "auto/ase2sprkkr.asr.test.test_relax.rst", "auto/ase2sprkkr.asr.test.test_relax.test_relax_basic.rst", "auto/ase2sprkkr.asr.test.test_relax.test_relax_bn_gpaw.rst", "auto/ase2sprkkr.asr.test.test_relax.test_relax_emt.rst", "auto/ase2sprkkr.asr.test.test_relax.test_relax_emt_fail_broken_symmetry.rst", "auto/ase2sprkkr.asr.test.test_relax.test_relax_find_higher_symmetry.rst", "auto/ase2sprkkr.asr.test.test_relax.test_relax_magmoms.rst", "auto/ase2sprkkr.asr.test.test_relax.test_relax_si_gpaw.rst", "auto/ase2sprkkr.asr.test.test_setinfo.rst", "auto/ase2sprkkr.asr.test.test_setinfo.test_info.rst", "auto/ase2sprkkr.asr.test.test_setinfo.test_info_call_from_cli.rst", "auto/ase2sprkkr.asr.test.test_setinfo.test_info_raises_with_protected_key.rst", "auto/ase2sprkkr.asr.test.test_setup_decorate.rst", "auto/ase2sprkkr.asr.test.test_setup_decorate.test_setup_decorate_si.rst", "auto/ase2sprkkr.asr.test.test_setup_displacements.rst", "auto/ase2sprkkr.asr.test.test_setup_displacements.test_setup_displacements.rst", "auto/ase2sprkkr.asr.test.test_setup_displacements.test_setup_displacements_displace_atom.rst", "auto/ase2sprkkr.asr.test.test_setup_displacements.test_setup_displacements_get_all_displacements.rst", "auto/ase2sprkkr.asr.test.test_setup_magnetize.rst", "auto/ase2sprkkr.asr.test.test_setup_magnetize.test_setup_magnetize.rst", "auto/ase2sprkkr.asr.test.test_setup_magnetize.test_setup_magnetize_state_inputs.rst", "auto/ase2sprkkr.asr.test.test_setup_materials.rst", "auto/ase2sprkkr.asr.test.test_setup_materials.test_setup_magnetize.rst", "auto/ase2sprkkr.asr.test.test_setup_scanparams.rst", "auto/ase2sprkkr.asr.test.test_setup_scanparams.test_setup_params.rst", "auto/ase2sprkkr.asr.test.test_setup_strains.rst", "auto/ase2sprkkr.asr.test.test_setup_strains.test_setup_strains.rst", "auto/ase2sprkkr.asr.test.test_setup_strains.test_setup_strains_get_relevant_strains.rst", "auto/ase2sprkkr.asr.test.test_setup_symmetrize.rst", "auto/ase2sprkkr.asr.test.test_setup_symmetrize.test_setup_symmetrize.rst", "auto/ase2sprkkr.asr.test.test_stiffness.rst", "auto/ase2sprkkr.asr.test.test_stiffness.test_stiffness_emt.rst", "auto/ase2sprkkr.asr.test.test_stiffness.test_stiffness_gpaw.rst", "auto/ase2sprkkr.asr.utils.rst", "auto/ase2sprkkr.asr.utils.args.rst", "auto/ase2sprkkr.asr.utils.args.parse_arg.rst", "auto/ase2sprkkr.asr.utils.calculator_utils.rst", "auto/ase2sprkkr.asr.utils.calculator_utils.fermi_level.rst", "auto/ase2sprkkr.asr.utils.calculator_utils.get_eigenvalues.rst", "auto/ase2sprkkr.asr.utils.gpw2eigs.rst", "auto/ase2sprkkr.asr.utils.gpw2eigs.calc2eigs.rst", "auto/ase2sprkkr.asr.utils.gpw2eigs.gpw2eigs.rst", "auto/ase2sprkkr.asr.utils.kpts.rst", "auto/ase2sprkkr.asr.utils.kpts.get_kpts_size.rst", "auto/ase2sprkkr.asr.utils.magnetism.rst", "auto/ase2sprkkr.asr.utils.magnetism.is_magnetic.rst", "auto/ase2sprkkr.asr.utils.magnetism.magnetic_atoms.rst", "auto/ase2sprkkr.asr.utils.refinegs.rst", "auto/ase2sprkkr.asr.utils.refinegs.get_filenames.rst", "auto/ase2sprkkr.asr.utils.refinegs.get_parstr.rst", "auto/ase2sprkkr.asr.utils.refinegs.nonselfc.rst", "auto/ase2sprkkr.asr.utils.refinegs.refinegs.rst", "auto/ase2sprkkr.asr.utils.something.rst", "auto/ase2sprkkr.asr.utils.something.calculate_something.rst", "auto/ase2sprkkr.asr.utils.something.collect_data.rst", "auto/ase2sprkkr.asr.utils.something.create_plot.rst", "auto/ase2sprkkr.asr.utils.something.webpanel.rst", "auto/ase2sprkkr.asr.utils.symmetry.rst", "auto/ase2sprkkr.asr.utils.symmetry._atoms2symmetry_gpaw.rst", "auto/ase2sprkkr.asr.utils.symmetry.atoms2spgcell.rst", "auto/ase2sprkkr.asr.utils.symmetry.atoms2symmetry.rst", "auto/ase2sprkkr.asr.utils.symmetry.has_inversion.rst", "auto/ase2sprkkr.asr.utils.symmetry.restrict_spin_projection_2d.rst", "auto/ase2sprkkr.asr.utils.utils.rst", "auto/ase2sprkkr.asr.utils.utils.timed_print.rst", "auto/ase2sprkkr.asr.workflow.rst", "auto/ase2sprkkr.bindings.rst", "auto/ase2sprkkr.bindings.empty_spheres.rst", "auto/ase2sprkkr.bindings.empty_spheres.EmptySpheresResult.rst", "auto/ase2sprkkr.bindings.empty_spheres.add_empty_spheres.rst", "auto/ase2sprkkr.bindings.empty_spheres.empty_spheres.rst", "auto/ase2sprkkr.bindings.empty_spheres.empty_spheres_atoms.rst", "auto/ase2sprkkr.bindings.es_finder.rst", "auto/ase2sprkkr.bindings.es_finder.empty_spheres.rst", "auto/ase2sprkkr.bindings.spglib.rst", "auto/ase2sprkkr.bindings.spglib.SpacegroupInfo.rst", "auto/ase2sprkkr.bindings.spglib.possibly_equivalent_sites.rst", "auto/ase2sprkkr.bindings.tests.rst", "auto/ase2sprkkr.bindings.tests.init_tests.rst", "auto/ase2sprkkr.bindings.tests.init_tests.TestCase.rst", "auto/ase2sprkkr.bindings.tests.init_tests.arr_testfce.rst", "auto/ase2sprkkr.bindings.tests.init_tests.assertDictEqual.rst", "auto/ase2sprkkr.bindings.tests.init_tests.assertListEqual.rst", "auto/ase2sprkkr.bindings.tests.init_tests.assert_almost_equals.rst", "auto/ase2sprkkr.bindings.tests.init_tests.assert_equals.rst", "auto/ase2sprkkr.bindings.tests.init_tests.extdict.rst", "auto/ase2sprkkr.bindings.tests.init_tests.testfce.rst", "auto/ase2sprkkr.bindings.tests.test_es_finder.rst", "auto/ase2sprkkr.bindings.tests.test_es_finder.TestEsFinder.rst", "auto/ase2sprkkr.bindings.tests.test_spglib.rst", "auto/ase2sprkkr.bindings.tests.test_spglib.TestSpgilib.rst", "auto/ase2sprkkr.bindings.xband.rst", "auto/ase2sprkkr.bindings.xband.spheres.rst", "auto/ase2sprkkr.bindings.xband.spheres.empty_spheres.rst", "auto/ase2sprkkr.bindings.xband.symmetry.rst", "auto/ase2sprkkr.bindings.xband.symmetry.find_symmetry.rst", "auto/ase2sprkkr.bindings.xband.symmetry.find_symmetry_ex.rst", "auto/ase2sprkkr.bindings.xband.tests.rst", "auto/ase2sprkkr.bindings.xband.tests.init_tests.rst", "auto/ase2sprkkr.bindings.xband.tests.init_tests.TestCase.rst", "auto/ase2sprkkr.bindings.xband.tests.init_tests.arr_testfce.rst", "auto/ase2sprkkr.bindings.xband.tests.init_tests.assertDictEqual.rst", "auto/ase2sprkkr.bindings.xband.tests.init_tests.assertListEqual.rst", "auto/ase2sprkkr.bindings.xband.tests.init_tests.assert_almost_equals.rst", "auto/ase2sprkkr.bindings.xband.tests.init_tests.assert_equals.rst", "auto/ase2sprkkr.bindings.xband.tests.init_tests.extdict.rst", "auto/ase2sprkkr.bindings.xband.tests.init_tests.patch_package.rst", "auto/ase2sprkkr.bindings.xband.tests.init_tests.testfce.rst", "auto/ase2sprkkr.bindings.xband.tests.test_spheres.rst", "auto/ase2sprkkr.bindings.xband.tests.test_spheres.TestSpheres.rst", "auto/ase2sprkkr.common.rst", "auto/ase2sprkkr.common.alternative_types.rst", "auto/ase2sprkkr.common.alternative_types.allowed_types.rst", "auto/ase2sprkkr.common.alternative_types.normalize_type.rst", "auto/ase2sprkkr.common.alternative_types.normalize_type_map.rst", "auto/ase2sprkkr.common.alternative_types.types_alternatives.rst", "auto/ase2sprkkr.common.configuration.rst", "auto/ase2sprkkr.common.configuration.Configuration.rst", "auto/ase2sprkkr.common.configuration_containers.rst", "auto/ase2sprkkr.common.configuration_containers.BaseConfigurationContainer.rst", "auto/ase2sprkkr.common.configuration_containers.BaseSection.rst", "auto/ase2sprkkr.common.configuration_containers.ConfigurationContainer.rst", "auto/ase2sprkkr.common.configuration_containers.CustomSection.rst", "auto/ase2sprkkr.common.configuration_containers.DictAdaptor.rst", "auto/ase2sprkkr.common.configuration_containers.DisabledAttributeError.rst", "auto/ase2sprkkr.common.configuration_containers.RootConfigurationContainer.rst", "auto/ase2sprkkr.common.configuration_containers.Section.rst", "auto/ase2sprkkr.common.configuration_definitions.rst", "auto/ase2sprkkr.common.configuration_definitions.BaseDefinition.rst", "auto/ase2sprkkr.common.configuration_definitions.ControlDefinition.rst", "auto/ase2sprkkr.common.configuration_definitions.Gather.rst", "auto/ase2sprkkr.common.configuration_definitions.Ignored.rst", "auto/ase2sprkkr.common.configuration_definitions.RealItemDefinition.rst", "auto/ase2sprkkr.common.configuration_definitions.SeparatorDefinition.rst", "auto/ase2sprkkr.common.configuration_definitions.Stub.rst", "auto/ase2sprkkr.common.configuration_definitions.Switch.rst", "auto/ase2sprkkr.common.configuration_definitions.VirtualDefinition.rst", "auto/ase2sprkkr.common.configuration_definitions.gather.rst", "auto/ase2sprkkr.common.configuration_definitions.switch.rst", "auto/ase2sprkkr.common.container_definitions.rst", "auto/ase2sprkkr.common.container_definitions.ConfigurationRootDefinition.rst", "auto/ase2sprkkr.common.container_definitions.ContainerDefinition.rst", "auto/ase2sprkkr.common.container_definitions.MergeDictAdaptor.rst", "auto/ase2sprkkr.common.container_definitions.SectionDefinition.rst", "auto/ase2sprkkr.common.container_definitions.add_excluded_names_condition.rst", "auto/ase2sprkkr.common.container_definitions.dict_from_parsed.rst", "auto/ase2sprkkr.common.decorators.rst", "auto/ase2sprkkr.common.decorators.add_called_class_as_argument.rst", "auto/ase2sprkkr.common.decorators.add_to_signature.rst", "auto/ase2sprkkr.common.decorators.cache.rst", "auto/ase2sprkkr.common.decorators.cached_class_property.rst", "auto/ase2sprkkr.common.decorators.cached_property.rst", "auto/ase2sprkkr.common.decorators.class_property.rst", "auto/ase2sprkkr.common.decorators.maybeclassmethod.rst", "auto/ase2sprkkr.common.decorators.std_cached_property.rst", "auto/ase2sprkkr.common.decorators.warnings_from_here.rst", "auto/ase2sprkkr.common.directory.rst", "auto/ase2sprkkr.common.directory.Directory.rst", "auto/ase2sprkkr.common.doc.rst", "auto/ase2sprkkr.common.doc.process_input_parameters_definition.rst", "auto/ase2sprkkr.common.doc.verbatim.rst", "auto/ase2sprkkr.common.formats.rst", "auto/ase2sprkkr.common.formats.format_for_string.rst", "auto/ase2sprkkr.common.formats.fortran_format.rst", "auto/ase2sprkkr.common.formats.full_format_for_string.rst", "auto/ase2sprkkr.common.generated_configuration_definitions.rst", "auto/ase2sprkkr.common.generated_configuration_definitions.BaseGeneratedValueDefinition.rst", "auto/ase2sprkkr.common.generated_configuration_definitions.GeneratedValueDefinition.rst", "auto/ase2sprkkr.common.generated_configuration_definitions.NumpyViewDefinition.rst", "auto/ase2sprkkr.common.grammar.rst", "auto/ase2sprkkr.common.grammar.SkipToRegex.rst", "auto/ase2sprkkr.common.grammar.White.rst", "auto/ase2sprkkr.common.grammar.addConditionEx.rst", "auto/ase2sprkkr.common.grammar.addParseActionEx.rst", "auto/ase2sprkkr.common.grammar.delimitedList.rst", "auto/ase2sprkkr.common.grammar.end_of_file.rst", "auto/ase2sprkkr.common.grammar.generate_grammar.rst", "auto/ase2sprkkr.common.grammar.line_end.rst", "auto/ase2sprkkr.common.grammar.optional_line_end.rst", "auto/ase2sprkkr.common.grammar.optional_quote.rst", "auto/ase2sprkkr.common.grammar.replace_whitechars.rst", "auto/ase2sprkkr.common.grammar.separator_grammar.rst", "auto/ase2sprkkr.common.grammar.separator_pattern.rst", "auto/ase2sprkkr.common.grammar_types.rst", "auto/ase2sprkkr.common.grammar_types.arrays.rst", "auto/ase2sprkkr.common.grammar_types.arrays.Array.rst", "auto/ase2sprkkr.common.grammar_types.arrays.Complex.rst", "auto/ase2sprkkr.common.grammar_types.arrays.Sequence.rst", "auto/ase2sprkkr.common.grammar_types.arrays.SetOf.rst", "auto/ase2sprkkr.common.grammar_types.arrays.SpecialColumn.rst", "auto/ase2sprkkr.common.grammar_types.arrays.Table.rst", "auto/ase2sprkkr.common.grammar_types.arrays.complex_number.rst", "auto/ase2sprkkr.common.grammar_types.arrays.set_of_integers.rst", "auto/ase2sprkkr.common.grammar_types.arrays.set_of_reals.rst", "auto/ase2sprkkr.common.grammar_types.basic.rst", "auto/ase2sprkkr.common.grammar_types.basic.BaseRealWithUnits.rst", "auto/ase2sprkkr.common.grammar_types.basic.BaseString.rst", "auto/ase2sprkkr.common.grammar_types.basic.BasicSeparator.rst", "auto/ase2sprkkr.common.grammar_types.basic.BlankSeparator.rst", "auto/ase2sprkkr.common.grammar_types.basic.Bool.rst", "auto/ase2sprkkr.common.grammar_types.basic.Date.rst", "auto/ase2sprkkr.common.grammar_types.basic.DefKeyword.rst", "auto/ase2sprkkr.common.grammar_types.basic.Energy.rst", "auto/ase2sprkkr.common.grammar_types.basic.FixedPointNumber.rst", "auto/ase2sprkkr.common.grammar_types.basic.Flag.rst", "auto/ase2sprkkr.common.grammar_types.basic.IntBool.rst", "auto/ase2sprkkr.common.grammar_types.basic.Integer.rst", "auto/ase2sprkkr.common.grammar_types.basic.Keyword.rst", "auto/ase2sprkkr.common.grammar_types.basic.LineString.rst", "auto/ase2sprkkr.common.grammar_types.basic.Number.rst", "auto/ase2sprkkr.common.grammar_types.basic.ObjectNumber.rst", "auto/ase2sprkkr.common.grammar_types.basic.QString.rst", "auto/ase2sprkkr.common.grammar_types.basic.Real.rst", "auto/ase2sprkkr.common.grammar_types.basic.RealWithUnits.rst", "auto/ase2sprkkr.common.grammar_types.basic.Separator.rst", "auto/ase2sprkkr.common.grammar_types.basic.String.rst", "auto/ase2sprkkr.common.grammar_types.basic.Unsigned.rst", "auto/ase2sprkkr.common.grammar_types.basic.boolean.rst", "auto/ase2sprkkr.common.grammar_types.basic.date.rst", "auto/ase2sprkkr.common.grammar_types.basic.energy.rst", "auto/ase2sprkkr.common.grammar_types.basic.flag.rst", "auto/ase2sprkkr.common.grammar_types.basic.int_bool.rst", "auto/ase2sprkkr.common.grammar_types.basic.integer.rst", "auto/ase2sprkkr.common.grammar_types.basic.line_string.rst", "auto/ase2sprkkr.common.grammar_types.basic.qstring.rst", "auto/ase2sprkkr.common.grammar_types.basic.real.rst", "auto/ase2sprkkr.common.grammar_types.basic.separator.rst", "auto/ase2sprkkr.common.grammar_types.basic.string.rst", "auto/ase2sprkkr.common.grammar_types.basic.unsigned.rst", "auto/ase2sprkkr.common.grammar_types.data.rst", "auto/ase2sprkkr.common.grammar_types.data.NumpyArray.rst", "auto/ase2sprkkr.common.grammar_types.data.Prefixed.rst", "auto/ase2sprkkr.common.grammar_types.data.RawData.rst", "auto/ase2sprkkr.common.grammar_types.data.RestOfTheFile.rst", "auto/ase2sprkkr.common.grammar_types.grammar_type.rst", "auto/ase2sprkkr.common.grammar_types.grammar_type.GrammarType.rst", "auto/ase2sprkkr.common.grammar_types.grammar_type.TypedGrammarType.rst", "auto/ase2sprkkr.common.grammar_types.grammar_type.compare_numpy_values.rst", "auto/ase2sprkkr.common.grammar_types.grammar_type.format_for_type.rst", "auto/ase2sprkkr.common.grammar_types.grammar_type.recognized_set_types.rst", "auto/ase2sprkkr.common.grammar_types.grammar_type.type_from_default_value.rst", "auto/ase2sprkkr.common.grammar_types.grammar_type.type_from_type.rst", "auto/ase2sprkkr.common.grammar_types.grammar_type.type_from_value.rst", "auto/ase2sprkkr.common.grammar_types.mixed.rst", "auto/ase2sprkkr.common.grammar_types.recognized_set_types.rst", "auto/ase2sprkkr.common.grammar_types.type_from_set_map.rst", "auto/ase2sprkkr.common.grammar_types.type_from_type_map.rst", "auto/ase2sprkkr.common.grammar_types.warnings.rst", "auto/ase2sprkkr.common.grammar_types.warnings.SuspiciousValueWarning.rst", "auto/ase2sprkkr.common.init_tests.rst", "auto/ase2sprkkr.common.init_tests.TestCase.rst", "auto/ase2sprkkr.common.init_tests.arr_testfce.rst", "auto/ase2sprkkr.common.init_tests.assertDictEqual.rst", "auto/ase2sprkkr.common.init_tests.assertListEqual.rst", "auto/ase2sprkkr.common.init_tests.assert_almost_equals.rst", "auto/ase2sprkkr.common.init_tests.assert_equals.rst", "auto/ase2sprkkr.common.init_tests.extdict.rst", "auto/ase2sprkkr.common.init_tests.patch_package.rst", "auto/ase2sprkkr.common.init_tests.testfce.rst", "auto/ase2sprkkr.common.misc.rst", "auto/ase2sprkkr.common.misc.as_integer.rst", "auto/ase2sprkkr.common.misc.copy_list.rst", "auto/ase2sprkkr.common.misc.dict_first_item.rst", "auto/ase2sprkkr.common.misc.first_non_none.rst", "auto/ase2sprkkr.common.misc.njit.rst", "auto/ase2sprkkr.common.misc.numpy_index.rst", "auto/ase2sprkkr.common.no_output.rst", "auto/ase2sprkkr.common.no_output.NoOutput.rst", "auto/ase2sprkkr.common.options.rst", "auto/ase2sprkkr.common.options.BaseOption.rst", "auto/ase2sprkkr.common.options.CustomOption.rst", "auto/ase2sprkkr.common.options.DangerousValue.rst", "auto/ase2sprkkr.common.options.Dummy.rst", "auto/ase2sprkkr.common.options.Option.rst", "auto/ase2sprkkr.common.process_output_reader.rst", "auto/ase2sprkkr.common.process_output_reader.AsyncioFileReader.rst", "auto/ase2sprkkr.common.process_output_reader.ProcessOutputReader.rst", "auto/ase2sprkkr.common.repeated_configuration_containers.rst", "auto/ase2sprkkr.common.repeated_configuration_containers.RepeatedConfigurationContainer.rst", "auto/ase2sprkkr.common.subprocess.rst", "auto/ase2sprkkr.common.subprocess._call_function.rst", "auto/ase2sprkkr.common.subprocess.ignore_signal.rst", "auto/ase2sprkkr.common.subprocess.in_subprocess.rst", "auto/ase2sprkkr.common.test.rst", "auto/ase2sprkkr.common.test.init_tests.rst", "auto/ase2sprkkr.common.test.init_tests.TestCase.rst", "auto/ase2sprkkr.common.test.init_tests.arr_testfce.rst", "auto/ase2sprkkr.common.test.init_tests.assertDictEqual.rst", "auto/ase2sprkkr.common.test.init_tests.assertListEqual.rst", "auto/ase2sprkkr.common.test.init_tests.assert_almost_equals.rst", "auto/ase2sprkkr.common.test.init_tests.assert_equals.rst", "auto/ase2sprkkr.common.test.init_tests.extdict.rst", "auto/ase2sprkkr.common.test.init_tests.testfce.rst", "auto/ase2sprkkr.common.test.test_common.rst", "auto/ase2sprkkr.common.test.test_common.TestCommon.rst", "auto/ase2sprkkr.common.test.test_grammar_types.rst", "auto/ase2sprkkr.common.test.test_grammar_types.TestGrammar.rst", "auto/ase2sprkkr.common.tools.rst", "auto/ase2sprkkr.common.tools.append_id_to_filename.rst", "auto/ase2sprkkr.common.tools.main.rst", "auto/ase2sprkkr.common.tools.parse_inches.rst", "auto/ase2sprkkr.common.tools.parse_named_option.rst", "auto/ase2sprkkr.common.tools.parse_tuple_function.rst", "auto/ase2sprkkr.common.unique_values.rst", "auto/ase2sprkkr.common.unique_values.UniqueValuesMapping.rst", "auto/ase2sprkkr.common.value_definitions.rst", "auto/ase2sprkkr.common.value_definitions.ValueDefinition.rst", "auto/ase2sprkkr.common.warnings.rst", "auto/ase2sprkkr.common.warnings.DataValidityWarning.rst", "auto/ase2sprkkr.config.rst", "auto/ase2sprkkr.config.calculator_parameters.rst", "auto/ase2sprkkr.config.sprkkr_executable_suffix.rst", "auto/ase2sprkkr.examples.rst", "auto/ase2sprkkr.examples.A1_Fe_scf_simple.rst", "auto/ase2sprkkr.examples.A1_Fe_scf_simple.Fe.rst", "auto/ase2sprkkr.examples.A1_Fe_scf_simple.Fe.main.rst", "auto/ase2sprkkr.examples.A2_Fe_scf_input_modifications.rst", "auto/ase2sprkkr.examples.A2_Fe_scf_input_modifications.Fe.rst", "auto/ase2sprkkr.examples.A2_Fe_scf_input_modifications.Fe.main.rst", "auto/ase2sprkkr.examples.A3_Fe_dos.rst", "auto/ase2sprkkr.examples.A3_Fe_dos.Fe.rst", "auto/ase2sprkkr.examples.A3_Fe_dos.Fe.main.rst", "auto/ase2sprkkr.examples.A4_CPA_Example.rst", "auto/ase2sprkkr.examples.A4_CPA_Example.Ni_doped_STO.rst", "auto/ase2sprkkr.examples.A4_CPA_Example.Ni_doped_STO.main.rst", "auto/ase2sprkkr.examples.A5_Al_EOS.rst", "auto/ase2sprkkr.examples.A5_Al_EOS.Al.rst", "auto/ase2sprkkr.examples.A5_Al_EOS.Al.main.rst", "auto/ase2sprkkr.examples.A6_Cu_MSSPEC.rst", "auto/ase2sprkkr.examples.A6_Cu_MSSPEC.Cu.rst", "auto/ase2sprkkr.examples.A6_Cu_MSSPEC.Cu.main.rst", "auto/ase2sprkkr.examples.A7_SrTiO3_MSSPEC.rst", "auto/ase2sprkkr.examples.A7_SrTiO3_MSSPEC.STO.rst", "auto/ase2sprkkr.examples.A7_SrTiO3_MSSPEC.STO.main.rst", "auto/ase2sprkkr.examples.A8_ARPES_and_plotting.rst", "auto/ase2sprkkr.examples.A8_ARPES_and_plotting.arpes.rst", "auto/ase2sprkkr.examples.A8_ARPES_and_plotting.arpes.main.rst", "auto/ase2sprkkr.input_parameters.rst", "auto/ase2sprkkr.input_parameters.definitions.rst", "auto/ase2sprkkr.input_parameters.definitions.arpes.rst", "auto/ase2sprkkr.input_parameters.definitions.arpes.input_parameters.rst", "auto/ase2sprkkr.input_parameters.definitions.bsf.rst", "auto/ase2sprkkr.input_parameters.definitions.bsf.input_parameters.rst", "auto/ase2sprkkr.input_parameters.definitions.dos.rst", "auto/ase2sprkkr.input_parameters.definitions.dos.input_parameters.rst", "auto/ase2sprkkr.input_parameters.definitions.gilbert.rst", "auto/ase2sprkkr.input_parameters.definitions.gilbert.input_parameters.rst", "auto/ase2sprkkr.input_parameters.definitions.jxc.rst", "auto/ase2sprkkr.input_parameters.definitions.jxc.input_parameters.rst", "auto/ase2sprkkr.input_parameters.definitions.marpes.rst", "auto/ase2sprkkr.input_parameters.definitions.phagen.rst", "auto/ase2sprkkr.input_parameters.definitions.phagen.input_parameters.rst", "auto/ase2sprkkr.input_parameters.definitions.scf.rst", "auto/ase2sprkkr.input_parameters.definitions.scf.input_parameters.rst", "auto/ase2sprkkr.input_parameters.definitions.sections.rst", "auto/ase2sprkkr.input_parameters.definitions.sections.CONTROL.rst", "auto/ase2sprkkr.input_parameters.definitions.sections.CPA.rst", "auto/ase2sprkkr.input_parameters.definitions.sections.ENERGY.rst", "auto/ase2sprkkr.input_parameters.definitions.sections.MODE.rst", "auto/ase2sprkkr.input_parameters.definitions.sections.SCF.rst", "auto/ase2sprkkr.input_parameters.definitions.sections.SITES.rst", "auto/ase2sprkkr.input_parameters.definitions.sections.STRCONST.rst", "auto/ase2sprkkr.input_parameters.definitions.sections.TASK.rst", "auto/ase2sprkkr.input_parameters.definitions.sections.TAU.rst", "auto/ase2sprkkr.input_parameters.definitions.sections.TauSection.rst", "auto/ase2sprkkr.input_parameters.definitions.sections._nktab_value.rst", "auto/ase2sprkkr.input_parameters.input_parameters.rst", "auto/ase2sprkkr.input_parameters.input_parameters.InputParameters.rst", "auto/ase2sprkkr.input_parameters.input_parameters.InputSection.rst", "auto/ase2sprkkr.input_parameters.input_parameters_definitions.rst", "auto/ase2sprkkr.input_parameters.input_parameters_definitions.InputParametersDefinition.rst", "auto/ase2sprkkr.input_parameters.input_parameters_definitions.InputSectionDefinition.rst", "auto/ase2sprkkr.input_parameters.input_parameters_definitions.InputValueDefinition.rst", "auto/ase2sprkkr.input_parameters.test.rst", "auto/ase2sprkkr.input_parameters.test.init_tests.rst", "auto/ase2sprkkr.input_parameters.test.init_tests.TestCase.rst", "auto/ase2sprkkr.input_parameters.test.init_tests.arr_testfce.rst", "auto/ase2sprkkr.input_parameters.test.init_tests.assertDictEqual.rst", "auto/ase2sprkkr.input_parameters.test.init_tests.assertListEqual.rst", "auto/ase2sprkkr.input_parameters.test.init_tests.assert_almost_equals.rst", "auto/ase2sprkkr.input_parameters.test.init_tests.assert_equals.rst", "auto/ase2sprkkr.input_parameters.test.init_tests.extdict.rst", "auto/ase2sprkkr.input_parameters.test.init_tests.testfce.rst", "auto/ase2sprkkr.input_parameters.test.test_definitions.rst", "auto/ase2sprkkr.input_parameters.test.test_definitions.TestDefinitions.rst", "auto/ase2sprkkr.input_parameters.test.test_input_parameters.rst", "auto/ase2sprkkr.input_parameters.test.test_input_parameters.TestInputParameters.rst", "auto/ase2sprkkr.input_parameters.test.test_input_parameters.ar.rst", "auto/ase2sprkkr.output_files.rst", "auto/ase2sprkkr.output_files.definitions.rst", "auto/ase2sprkkr.output_files.definitions.Arithmetic.rst", "auto/ase2sprkkr.output_files.definitions.CommonOutputFile.rst", "auto/ase2sprkkr.output_files.definitions.OutputFile.rst", "auto/ase2sprkkr.output_files.definitions.UnknownDataValue.rst", "auto/ase2sprkkr.output_files.definitions.bsf.rst", "auto/ase2sprkkr.output_files.definitions.bsf.BSFDefinition.rst", "auto/ase2sprkkr.output_files.definitions.bsf.BSFOutputFile.rst", "auto/ase2sprkkr.output_files.definitions.bsf.create_definition.rst", "auto/ase2sprkkr.output_files.definitions.dos.rst", "auto/ase2sprkkr.output_files.definitions.dos.DOS.rst", "auto/ase2sprkkr.output_files.definitions.dos.DOSDefinition.rst", "auto/ase2sprkkr.output_files.definitions.dos.DOSOutputFile.rst", "auto/ase2sprkkr.output_files.definitions.dos.create_definition.rst", "auto/ase2sprkkr.output_files.definitions.spc.rst", "auto/ase2sprkkr.output_files.definitions.spc.ARPESDefinition.rst", "auto/ase2sprkkr.output_files.definitions.spc.ARPESOutputFile.rst", "auto/ase2sprkkr.output_files.definitions.spc.create_definition.rst", "auto/ase2sprkkr.output_files.output_files.rst", "auto/ase2sprkkr.output_files.output_files.Arithmetic.rst", "auto/ase2sprkkr.output_files.output_files.CommonOutputFile.rst", "auto/ase2sprkkr.output_files.output_files.OutputFile.rst", "auto/ase2sprkkr.output_files.output_files.UnknownDataValue.rst", "auto/ase2sprkkr.output_files.output_files_definitions.rst", "auto/ase2sprkkr.output_files.output_files_definitions.BlankSeparator.rst", "auto/ase2sprkkr.output_files.output_files_definitions.OutputFileDefinition.rst", "auto/ase2sprkkr.output_files.output_files_definitions.OutputFileValueDefinition.rst", "auto/ase2sprkkr.output_files.output_files_definitions.Separator.rst", "auto/ase2sprkkr.output_files.output_files_definitions.create_output_file_definition.rst", "auto/ase2sprkkr.output_files.output_files_definitions.output_file_header.rst", "auto/ase2sprkkr.output_files.test.rst", "auto/ase2sprkkr.output_files.test.init_tests.rst", "auto/ase2sprkkr.output_files.test.init_tests.TestCase.rst", "auto/ase2sprkkr.output_files.test.init_tests.arr_testfce.rst", "auto/ase2sprkkr.output_files.test.init_tests.assertDictEqual.rst", "auto/ase2sprkkr.output_files.test.init_tests.assertListEqual.rst", "auto/ase2sprkkr.output_files.test.init_tests.assert_almost_equals.rst", "auto/ase2sprkkr.output_files.test.init_tests.assert_equals.rst", "auto/ase2sprkkr.output_files.test.init_tests.extdict.rst", "auto/ase2sprkkr.output_files.test.init_tests.testfce.rst", "auto/ase2sprkkr.output_files.test.test_files.rst", "auto/ase2sprkkr.output_files.test.test_files.TestOutput.rst", "auto/ase2sprkkr.outputs.rst", "auto/ase2sprkkr.outputs.output_definitions.rst", "auto/ase2sprkkr.outputs.output_definitions.OutputNonameValueDefinition.rst", "auto/ase2sprkkr.outputs.output_definitions.OutputSectionDefinition.rst", "auto/ase2sprkkr.outputs.output_definitions.OutputValueDefinition.rst", "auto/ase2sprkkr.outputs.output_definitions.OutputValueEqualDefinition.rst", "auto/ase2sprkkr.outputs.readers.rst", "auto/ase2sprkkr.outputs.readers.arpes.rst", "auto/ase2sprkkr.outputs.readers.arpes.ArpesProcess.rst", "auto/ase2sprkkr.outputs.readers.arpes.ArpesResult.rst", "auto/ase2sprkkr.outputs.readers.default.rst", "auto/ase2sprkkr.outputs.readers.default.DefaultOutputReader.rst", "auto/ase2sprkkr.outputs.readers.default.DefaultProcess.rst", "auto/ase2sprkkr.outputs.readers.default.DefaultResult.rst", "auto/ase2sprkkr.outputs.readers.scf.rst", "auto/ase2sprkkr.outputs.readers.scf.RealOrStars.rst", "auto/ase2sprkkr.outputs.readers.scf.ScfOutputReader.rst", "auto/ase2sprkkr.outputs.readers.scf.ScfProcess.rst", "auto/ase2sprkkr.outputs.readers.scf.ScfResult.rst", "auto/ase2sprkkr.outputs.readers.scf.atomic_types_definition.rst", "auto/ase2sprkkr.outputs.task_result.rst", "auto/ase2sprkkr.outputs.task_result.KkrProcess.rst", "auto/ase2sprkkr.outputs.task_result.TaskResult.rst", "auto/ase2sprkkr.outputs.test.rst", "auto/ase2sprkkr.outputs.test.init_tests.rst", "auto/ase2sprkkr.outputs.test.init_tests.TestCase.rst", "auto/ase2sprkkr.outputs.test.init_tests.arr_testfce.rst", "auto/ase2sprkkr.outputs.test.init_tests.assertDictEqual.rst", "auto/ase2sprkkr.outputs.test.init_tests.assertListEqual.rst", "auto/ase2sprkkr.outputs.test.init_tests.assert_almost_equals.rst", "auto/ase2sprkkr.outputs.test.init_tests.assert_equals.rst", "auto/ase2sprkkr.outputs.test.init_tests.extdict.rst", "auto/ase2sprkkr.outputs.test.init_tests.testfce.rst", "auto/ase2sprkkr.outputs.test.test_output.rst", "auto/ase2sprkkr.outputs.test.test_output.TestOutput.rst", "auto/ase2sprkkr.physics.rst", "auto/ase2sprkkr.physics.lattice_data.rst", "auto/ase2sprkkr.physics.lattice_data.LatticeData.rst", "auto/ase2sprkkr.physics.lattice_data.Pearson.rst", "auto/ase2sprkkr.physics.lattice_data.international_numbers_to_AP.rst", "auto/ase2sprkkr.physics.winger_seitz_radii.rst", "auto/ase2sprkkr.physics.winger_seitz_radii.winger_seitz_radii.rst", "auto/ase2sprkkr.potentials.rst", "auto/ase2sprkkr.potentials.custom_potential_section.rst", "auto/ase2sprkkr.potentials.custom_potential_section.CustomPotentialSection.rst", "auto/ase2sprkkr.potentials.custom_potential_section.CustomPotentialSectionDefinition.rst", "auto/ase2sprkkr.potentials.custom_potential_section.CustomSectionToken.rst", "auto/ase2sprkkr.potentials.custom_potential_section.SectionString.rst", "auto/ase2sprkkr.potentials.definitions.rst", "auto/ase2sprkkr.potentials.definitions.potential.rst", "auto/ase2sprkkr.potentials.definitions.potential.potential_definition.rst", "auto/ase2sprkkr.potentials.definitions.sections.rst", "auto/ase2sprkkr.potentials.definitions.sections._sections.rst", "auto/ase2sprkkr.potentials.definitions.sections.charge.rst", "auto/ase2sprkkr.potentials.definitions.sections.charge.ChargeSection.rst", "auto/ase2sprkkr.potentials.definitions.sections.charge.ChargeSectionDefinition.rst", "auto/ase2sprkkr.potentials.definitions.sections.charge.ChargesSection.rst", "auto/ase2sprkkr.potentials.definitions.sections.charge.section.rst", "auto/ase2sprkkr.potentials.definitions.sections.charge_moments.rst", "auto/ase2sprkkr.potentials.definitions.sections.charge_moments.ChargeMomentsSection.rst", "auto/ase2sprkkr.potentials.definitions.sections.charge_moments.ChargeMomentsSectionDefinition.rst", "auto/ase2sprkkr.potentials.definitions.sections.charge_moments.section.rst", "auto/ase2sprkkr.potentials.definitions.sections.global_system_parameter.rst", "auto/ase2sprkkr.potentials.definitions.sections.global_system_parameter.GlobalSystemParameter.rst", "auto/ase2sprkkr.potentials.definitions.sections.global_system_parameter.GlobalSystemParameterDefinition.rst", "auto/ase2sprkkr.potentials.definitions.sections.global_system_parameter.section.rst", "auto/ase2sprkkr.potentials.definitions.sections.host_madelung_potential.rst", "auto/ase2sprkkr.potentials.definitions.sections.host_madelung_potential.HostMadelungPotentialSection.rst", "auto/ase2sprkkr.potentials.definitions.sections.host_madelung_potential.HostMadelungPotentialSectionDefinition.rst", "auto/ase2sprkkr.potentials.definitions.sections.host_madelung_potential.section.rst", "auto/ase2sprkkr.potentials.definitions.sections.lattice.rst", "auto/ase2sprkkr.potentials.definitions.sections.lattice.LatticeSection.rst", "auto/ase2sprkkr.potentials.definitions.sections.lattice.LatticeSectionDefinition.rst", "auto/ase2sprkkr.potentials.definitions.sections.lattice.section.rst", "auto/ase2sprkkr.potentials.definitions.sections.mesh_information.rst", "auto/ase2sprkkr.potentials.definitions.sections.mesh_information.MeshInformationSection.rst", "auto/ase2sprkkr.potentials.definitions.sections.mesh_information.MeshInformationSectionDefinition.rst", "auto/ase2sprkkr.potentials.definitions.sections.mesh_information.section.rst", "auto/ase2sprkkr.potentials.definitions.sections.moments.rst", "auto/ase2sprkkr.potentials.definitions.sections.moments.MomentSection.rst", "auto/ase2sprkkr.potentials.definitions.sections.moments.MomentsSection.rst", "auto/ase2sprkkr.potentials.definitions.sections.moments.MomentsSectionDefinition.rst", "auto/ase2sprkkr.potentials.definitions.sections.moments.section.rst", "auto/ase2sprkkr.potentials.definitions.sections.occupation.rst", "auto/ase2sprkkr.potentials.definitions.sections.occupation.OccupationSection.rst", "auto/ase2sprkkr.potentials.definitions.sections.occupation.OccupationSectionDefinition.rst", "auto/ase2sprkkr.potentials.definitions.sections.occupation.section.rst", "auto/ase2sprkkr.potentials.definitions.sections.potential.rst", "auto/ase2sprkkr.potentials.definitions.sections.potential.PotentialSection.rst", "auto/ase2sprkkr.potentials.definitions.sections.potential.PotentialSectionDefinition.rst", "auto/ase2sprkkr.potentials.definitions.sections.potential.PotentialsSection.rst", "auto/ase2sprkkr.potentials.definitions.sections.potential.section.rst", "auto/ase2sprkkr.potentials.definitions.sections.reference_system.rst", "auto/ase2sprkkr.potentials.definitions.sections.reference_system.ReferenceSystemSection.rst", "auto/ase2sprkkr.potentials.definitions.sections.reference_system.ReferenceSystemSectionDefinition.rst", "auto/ase2sprkkr.potentials.definitions.sections.reference_system.section.rst", "auto/ase2sprkkr.potentials.definitions.sections.scf_info.rst", "auto/ase2sprkkr.potentials.definitions.sections.scf_info.ScfInfoSection.rst", "auto/ase2sprkkr.potentials.definitions.sections.scf_info.ScfInfoSectionDefinition.rst", "auto/ase2sprkkr.potentials.definitions.sections.scf_info.section.rst", "auto/ase2sprkkr.potentials.definitions.sections.sites.rst", "auto/ase2sprkkr.potentials.definitions.sections.sites.SitesSection.rst", "auto/ase2sprkkr.potentials.definitions.sections.sites.SitesSectionDefinition.rst", "auto/ase2sprkkr.potentials.definitions.sections.sites.section.rst", "auto/ase2sprkkr.potentials.definitions.sections.types.rst", "auto/ase2sprkkr.potentials.definitions.sections.types.TypesSection.rst", "auto/ase2sprkkr.potentials.definitions.sections.types.TypesSectionDefinition.rst", "auto/ase2sprkkr.potentials.definitions.sections.types.section.rst", "auto/ase2sprkkr.potentials.potential_definitions.rst", "auto/ase2sprkkr.potentials.potential_definitions.ASEArraySectionDefinition.rst", "auto/ase2sprkkr.potentials.potential_definitions.PotSectionDefinition.rst", "auto/ase2sprkkr.potentials.potential_definitions.PotValueDefinition.rst", "auto/ase2sprkkr.potentials.potential_definitions.PotentialDefinition.rst", "auto/ase2sprkkr.potentials.potential_definitions.Separator.rst", "auto/ase2sprkkr.potentials.potential_sections.rst", "auto/ase2sprkkr.potentials.potential_sections.ASEArraySection.rst", "auto/ase2sprkkr.potentials.potential_sections.PotentialSection.rst", "auto/ase2sprkkr.potentials.potential_sections.PotentialSectionTrait.rst", "auto/ase2sprkkr.potentials.potential_sections.RepeatedPotentialSection.rst", "auto/ase2sprkkr.potentials.potential_sections.UniqueListSection.rst", "auto/ase2sprkkr.potentials.potentials.rst", "auto/ase2sprkkr.potentials.potentials.Potential.rst", "auto/ase2sprkkr.potentials.test.rst", "auto/ase2sprkkr.potentials.test.init_tests.rst", "auto/ase2sprkkr.potentials.test.init_tests.TestCase.rst", "auto/ase2sprkkr.potentials.test.init_tests.arr_testfce.rst", "auto/ase2sprkkr.potentials.test.init_tests.assertDictEqual.rst", "auto/ase2sprkkr.potentials.test.init_tests.assertListEqual.rst", "auto/ase2sprkkr.potentials.test.init_tests.assert_almost_equals.rst", "auto/ase2sprkkr.potentials.test.init_tests.assert_equals.rst", "auto/ase2sprkkr.potentials.test.init_tests.extdict.rst", "auto/ase2sprkkr.potentials.test.init_tests.testfce.rst", "auto/ase2sprkkr.potentials.test.test_2D.rst", "auto/ase2sprkkr.potentials.test.test_2D.Test2DPotential.rst", "auto/ase2sprkkr.potentials.test.test_custom_section.rst", "auto/ase2sprkkr.potentials.test.test_custom_section.TestCustomSection.rst", "auto/ase2sprkkr.potentials.test.test_potential.rst", "auto/ase2sprkkr.potentials.test.test_potential.TestPotential.rst", "auto/ase2sprkkr.potentials.test.test_structure.rst", "auto/ase2sprkkr.potentials.test.test_structure.TestStructure.rst", "auto/ase2sprkkr.sprkkr.rst", "auto/ase2sprkkr.sprkkr.atomic_types.rst", "auto/ase2sprkkr.sprkkr.atomic_types.AtomicType.rst", "auto/ase2sprkkr.sprkkr.atoms_region.rst", "auto/ase2sprkkr.sprkkr.atoms_region.AtomsRegion.rst", "auto/ase2sprkkr.sprkkr.build.rst", "auto/ase2sprkkr.sprkkr.build.semiinfinite_system.rst", "auto/ase2sprkkr.sprkkr.build.stack.rst", "auto/ase2sprkkr.sprkkr.build.vacuum_like.rst", "auto/ase2sprkkr.sprkkr.calculator.rst", "auto/ase2sprkkr.sprkkr.calculator.FilenameTemplator.rst", "auto/ase2sprkkr.sprkkr.calculator.SPRKKR.rst", "auto/ase2sprkkr.sprkkr.configuration.rst", "auto/ase2sprkkr.sprkkr.configuration.ConfigurationFile.rst", "auto/ase2sprkkr.sprkkr.configuration.ConfigurationFileDefinition.rst", "auto/ase2sprkkr.sprkkr.configuration.ConfigurationSection.rst", "auto/ase2sprkkr.sprkkr.configuration.ConfigurationSectionDefinition.rst", "auto/ase2sprkkr.sprkkr.configuration.ConfigurationSectionTrait.rst", "auto/ase2sprkkr.sprkkr.configuration.ConfigurationValue.rst", "auto/ase2sprkkr.sprkkr.configuration.ConfigurationValueDefinition.rst", "auto/ase2sprkkr.sprkkr.configuration.CustomConfigurationSection.rst", "auto/ase2sprkkr.sprkkr.configuration.CustomConfigurationValue.rst", "auto/ase2sprkkr.sprkkr.configuration.RepeatedConfigurationSection.rst", "auto/ase2sprkkr.sprkkr.io_data.rst", "auto/ase2sprkkr.sprkkr.io_data.BaseIoData.rst", "auto/ase2sprkkr.sprkkr.io_data.ReadIoData.rst", "auto/ase2sprkkr.sprkkr.io_data.WriteIoData.rst", "auto/ase2sprkkr.sprkkr.io_data.unique_mapping.rst", "auto/ase2sprkkr.sprkkr.moments.rst", "auto/ase2sprkkr.sprkkr.moments.Moments.rst", "auto/ase2sprkkr.sprkkr.occupations.rst", "auto/ase2sprkkr.sprkkr.occupations.Occupation.rst", "auto/ase2sprkkr.sprkkr.radial.rst", "auto/ase2sprkkr.sprkkr.radial.RadialCharge.rst", "auto/ase2sprkkr.sprkkr.radial.RadialPotential.rst", "auto/ase2sprkkr.sprkkr.radial.RadialValue.rst", "auto/ase2sprkkr.sprkkr.radial_meshes.rst", "auto/ase2sprkkr.sprkkr.radial_meshes.ExponentialMesh.rst", "auto/ase2sprkkr.sprkkr.radial_meshes.Mesh.rst", "auto/ase2sprkkr.sprkkr.radial_meshes._clearing_property.rst", "auto/ase2sprkkr.sprkkr.reference_systems.rst", "auto/ase2sprkkr.sprkkr.reference_systems.ReferenceSystem.rst", "auto/ase2sprkkr.sprkkr.sites.rst", "auto/ase2sprkkr.sprkkr.sites.Site.rst", "auto/ase2sprkkr.sprkkr.sites.SiteType.rst", "auto/ase2sprkkr.sprkkr.sprkkr_atoms.rst", "auto/ase2sprkkr.sprkkr.sprkkr_atoms.SPRKKRAtoms.rst", "auto/ase2sprkkr.sprkkr.sprkkr_grammar_types.rst", "auto/ase2sprkkr.sprkkr.sprkkr_grammar_types.AtomicType.rst", "auto/ase2sprkkr.sprkkr.sprkkr_grammar_types.Site.rst", "auto/ase2sprkkr.sprkkr.structure.rst", "auto/ase2sprkkr.sprkkr.structure.AtomData.rst", "auto/ase2sprkkr.sprkkr.structure.LayerData.rst", "auto/ase2sprkkr.sprkkr.structure.floatjm.rst", "auto/ase2sprkkr.sprkkr.structure.structure_file_to_atoms.rst", "auto/ase2sprkkr.sprkkr.sysfile.rst", "auto/ase2sprkkr.sprkkr.sysfile.sysfile_content.rst", "auto/ase2sprkkr.sprkkr.sysfile.write_sysfile.rst", "auto/ase2sprkkr.sprkkr.test.rst", "auto/ase2sprkkr.sprkkr.test.init_tests.rst", "auto/ase2sprkkr.sprkkr.test.init_tests.TestCase.rst", "auto/ase2sprkkr.sprkkr.test.init_tests.arr_testfce.rst", "auto/ase2sprkkr.sprkkr.test.init_tests.assertDictEqual.rst", "auto/ase2sprkkr.sprkkr.test.init_tests.assertListEqual.rst", "auto/ase2sprkkr.sprkkr.test.init_tests.assert_almost_equals.rst", "auto/ase2sprkkr.sprkkr.test.init_tests.assert_equals.rst", "auto/ase2sprkkr.sprkkr.test.init_tests.extdict.rst", "auto/ase2sprkkr.sprkkr.test.init_tests.testfce.rst", "auto/ase2sprkkr.sprkkr.test.test_arpes.rst", "auto/ase2sprkkr.sprkkr.test.test_arpes.TestCalculator.rst", "auto/ase2sprkkr.sprkkr.test.test_build.rst", "auto/ase2sprkkr.sprkkr.test.test_build.TestBuild.rst", "auto/ase2sprkkr.sprkkr.test.test_calculator.rst", "auto/ase2sprkkr.sprkkr.test.test_calculator.TestCalculator.rst", "auto/ase2sprkkr.sprkkr.test.test_calculator._fast_atoms.rst", "auto/ase2sprkkr.sprkkr.test.test_occupation.rst", "auto/ase2sprkkr.sprkkr.test.test_occupation.test.rst", "auto/ase2sprkkr.sprkkr.test.test_sites.rst", "auto/ase2sprkkr.sprkkr.test.test_sites.TestSites.rst", "auto/ase2sprkkr.sprkkr.test.test_sprkkr_atoms.rst", "auto/ase2sprkkr.sprkkr.test.test_sprkkr_atoms.TestSPRKKRAtoms.rst", "auto/ase2sprkkr.sprkkr.test.test_sysfile.rst", "auto/ase2sprkkr.sprkkr.test.test_sysfile.TestSysfile.rst", "auto/ase2sprkkr.tools.rst", "auto/ase2sprkkr.tools.ase2sprkkr.rst", "auto/ase2sprkkr.tools.ase2sprkkr.run.rst", "auto/ase2sprkkr.tools.commands.rst", "auto/ase2sprkkr.tools.commands.config.rst", "auto/ase2sprkkr.tools.commands.config.parser.rst", "auto/ase2sprkkr.tools.commands.config.run.rst", "auto/ase2sprkkr.tools.commands.info.rst", "auto/ase2sprkkr.tools.commands.info.TestsArgAction.rst", "auto/ase2sprkkr.tools.commands.info.info_output_files.rst", "auto/ase2sprkkr.tools.commands.info.info_tasks.rst", "auto/ase2sprkkr.tools.commands.info.parser.rst", "auto/ase2sprkkr.tools.commands.info.run.rst", "auto/ase2sprkkr.tools.commands.plot.rst", "auto/ase2sprkkr.tools.commands.plot.parser.rst", "auto/ase2sprkkr.tools.commands.plot.run.rst", "auto/ase2sprkkr.tools.commands.run.rst", "auto/ase2sprkkr.tools.commands.run.parser.rst", "auto/ase2sprkkr.tools.commands.run.run.rst", "auto/ase2sprkkr.tools.commands.show_structure.rst", "auto/ase2sprkkr.tools.commands.show_structure.parser.rst", "auto/ase2sprkkr.tools.commands.show_structure.run.rst", "auto/ase2sprkkr.tools.commands.test.rst", "auto/ase2sprkkr.tools.commands.test.parser.rst", "auto/ase2sprkkr.tools.commands.test.run.rst", "auto/ase2sprkkr.tools.shared.rst", "auto/ase2sprkkr.tools.shared.main.rst", "auto/ase2sprkkr.tools.test.rst", "auto/ase2sprkkr.tools.test.init_tests.rst", "auto/ase2sprkkr.tools.test.init_tests.TestCase.rst", "auto/ase2sprkkr.tools.test.init_tests.arr_testfce.rst", "auto/ase2sprkkr.tools.test.init_tests.assertDictEqual.rst", "auto/ase2sprkkr.tools.test.init_tests.assertListEqual.rst", "auto/ase2sprkkr.tools.test.init_tests.assert_almost_equals.rst", "auto/ase2sprkkr.tools.test.init_tests.assert_equals.rst", "auto/ase2sprkkr.tools.test.init_tests.extdict.rst", "auto/ase2sprkkr.tools.test.init_tests.testfce.rst", "auto/ase2sprkkr.tools.test.test_tools.rst", "auto/ase2sprkkr.tools.test.test_tools.TestCommon.rst", "auto/ase2sprkkr.version.rst", "auto/ase2sprkkr.visualise.rst", "auto/ase2sprkkr.visualise.plot.rst", "auto/ase2sprkkr.visualise.plot.Multiplot.rst", "auto/ase2sprkkr.visualise.plot.auto_range.rst", "auto/ase2sprkkr.visualise.plot.change_default_kwargs.rst", "auto/ase2sprkkr.visualise.plot.colormesh.rst", "auto/ase2sprkkr.visualise.plot.combine_colormaps.rst", "auto/ase2sprkkr.visualise.plot.combined_colormap.rst", "auto/ase2sprkkr.visualise.plot.create_rc_context.rst", "auto/ase2sprkkr.visualise.plot.finish_plot.rst", "auto/ase2sprkkr.visualise.plot.normalize_rc_params.rst", "auto/ase2sprkkr.visualise.plot.plotting_function.rst", "auto/ase2sprkkr.visualise.plot.set_up_common_plot.rst", "auto/ase2sprkkr.visualise.plot.single_plot.rst", "auto/modules.rst", "changelog.rst", "examples.rst", "examples_generated.rst", "how-to-install.rst", "index.rst", "installation.rst", "introduction.rst", "philosophy.rst", "usage.rst"], "titles": ["ASE2SPRKKR", "ase2sprkkr", "ase", "build", "aperiodic_times", "stack", "io", "read_sprkkr", "write_sprkkr", "pbc", "check_symmetry", "register", "ase_register", "load_user_preferences", "register", "user_preferences_file", "symbols", "filename_from_symbols", "pretty_symbols", "test", "init_tests", "TestCase", "arr_testfce", "assertDictEqual", "assertListEqual", "assert_almost_equals", "assert_equals", "extdict", "testfce", "test_build", "TestBuild", "visualise", "view", "asr", "asr", "bader", "print", "bandstructure", "Result", "add_bs_pbe", "bs_pbe", "bs_pbe_html", "plot_with_colors", "webpanel", "berry", "Result", "plot_phases", "webpanel", "borncharges", "Result", "webpanel", "bse", "Result", "absorption", "get_kpts_size", "webpanel", "calculators", "get_calculator", "chc", "ase2sprkkr.asr.chc.CHCError", "ConvexHullReference", "Hyperplane", "Intermediate", "LeanIntermediate", "Line", "Reference", "Result", "_permutecontain", "append_references", "calculate_intermediates", "chcut_plot", "convex_hull", "convex_hull_planes", "filrefs", "get_coords", "get_hof", "gscheck", "is_collinear", "is_independent", "mgs", "mgsls", "mu_adjustment", "orthogonalize", "projuv", "read_structure", "refs2ims", "results2ref", "row2ref", "tuplespermuted", "webpanel", "convex_hull", "Result", "convex_hull_tables", "get_reference_energies", "hof", "plot", "select_references", "webpanel", "core", "cli", "append_job", "check_git", "extract_hash_from_file", "format", "get_config_dir", "get_git_rev_list", "initialize_asr_configuration_dir", "is_asr_initialized", "run_command", "command", "fix_old_files", "is_results_file", "material", "Material", "get_material_from_folder", "get_webpanels_from_material", "make_panel_figures", "results", "ASRResult", "DictEncoder", "HTMLEncoder", "HackedASRResult", "JSONEncoder", "MetaData", "ase2sprkkr.asr.core.results.MetaDataNotSetError", "ObjectDescription", "ResultEncoder", "ase2sprkkr.asr.core.results.UnknownASRResultFormat", "ase2sprkkr.asr.core.results.UnknownDataFormat", "WebPanelEncoder", "data_to_dict", "dct_to_result", "find_class_matching_version", "format_key_description_pair", "get_key_descriptions", "get_object_matching_obj_id", "get_object_types", "get_reader_function", "make_property", "obj_to_id", "object_description_to_object", "prepare_result", "read_hacked_data", "read_new_data", "read_old_data", "types", "AtomsFile", "DictStr", "clickify_docstring", "utils", "chdir", "dct_to_object", "encode_json", "file_barrier", "get_dep_tree", "get_recipe_from_name", "md5sum", "parse_dict_string", "parse_mod_func", "read_json", "recursive_update", "singleprec_dict", "unlink", "write_file", "write_json", "database", "browser", "RowWrapper", "create_table", "describe_entries", "describe_entry", "dict_to_list", "entry_parameter_description", "extract_recipe_from_filename", "fig", "is_results_file", "layout", "merge_panels", "miscellaneous_section", "table", "val2str", "check", "clonetree", "duplicates", "compare", "filter_uids", "find_duplicate_group", "parse_filter_string", "material_fingerprint", "get_hash_of_atoms", "get_uid_of_atoms", "todict", "merge", "rmsd", "get_rmsd", "normalize_nonpbc_atoms", "update_rmsd", "templates", "totree", "make_folder_dict", "make_folder_tree", "defectformation", "check_and_get_general_inputs", "collect_data", "find_file_in_folder", "intersection", "line", "line_intersection", "plot_formation_and_transitions", "deformationpotentials", "Result", "webpanel", "dimensionality", "get_dimtypes", "plot_dimensionality_histogram", "webpanel", "dos", "collect_data", "plot", "webpanel", "emasses", "ase2sprkkr.asr.emasses.NoGapError", "Result", "calculate_bs_along_emass_vecs", "check_soc", "convert_key_to_tuple", "create_columns_fnames", "custom_table", "em", "embands", "evalmodel", "fit", "get_2nd_order_extremum", "get_3rd_order_extremum", "get_bt_ks", "get_emass_dict_from_row", "get_extremum_type", "get_gapskn", "get_name", "get_range", "get_vb_cb_indices", "kptsinsphere", "make_the_plots", "model", "nonsc_sphere", "preliminary_refine", "set_default", "unpack_masses", "webpanel", "wideMAE", "exchange", "get_parameters", "fere", "ase2sprkkr.asr.fere.DBAlreadyExistsError", "ase2sprkkr.asr.fere.MaterialNotFoundError", "ase2sprkkr.asr.fere.ParseError", "count", "create_corrected_db", "elements_from_refs", "formulas_eq", "get_dE_alpha", "get_hof", "load_data", "minimize_error", "multiply_formula", "only", "parse_reactions", "parse_refs", "safe_get", "select", "single", "unique", "where", "fermisurface", "Result", "add_fermi", "bz_vertices", "find_contours", "plot_fermi", "webpanel", "formalpolarization", "ase2sprkkr.asr.formalpolarization.AtomsTooCloseToBoundary", "distance_to_non_pbc_boundary", "get_atomic_polarization_phase", "get_dipole_polarization_phase", "get_electronic_polarization_phase", "get_wavefunctions", "gs", "GapsResult", "Result", "VacuumLevelResults", "bz_with_band_extremums", "evacdiff", "gaps", "get_1bz_k", "get_gap_info", "vacuumlevels", "webpanel", "gw", "Result", "bs_gw", "get_kpts_size", "webpanel", "hse", "MP_interpolate", "Result", "bs_hse", "get_kpts_size", "hse", "hse_spinorbit", "webpanel", "infraredpolarizability", "Result", "create_plot", "get_phonon_pol", "webpanel", "magnetic_anisotropy", "Result", "get_spin_axis", "get_spin_index", "spin_axis", "webpanel", "magstate", "Result", "get_magstate", "webpanel", "pdos", "Result", "calculate_pdos", "get_l_a", "get_ordered_syl_dict", "get_yl_colors", "pdos", "plot_pdos", "plot_pdos_nosoc", "plot_pdos_soc", "webpanel", "phonons", "Result", "creates", "mingocorrection", "plot_bandstructure", "plot_phonons", "requires", "todict", "topckl", "webpanel", "phonopy", "Result", "distance_to_sc", "lattice_vectors", "plot_bandstructure", "plot_phonons", "requires", "webpanel", "piezoelectrictensor", "Result", "webpanel", "plasmafrequency", "Result", "get_kpts_size", "webpanel", "polarizability", "Result", "get_kpts_size", "polarizability", "webpanel", "projected_bandstructure", "Result", "get_bs_sampling", "get_orbital_ldos", "get_pie_markers", "get_pie_slice", "get_yl_ordering", "projected_bs_pbe", "webpanel", "push", "raman", "Result", "count_deg", "raman", "webpanel", "relax", "ase2sprkkr.asr.relax.BrokenSymmetryError", "Result", "SpgAtoms", "is_relax_done", "myBFGS", "relax", "set_initial_magnetic_moments", "setinfo", "KeyValuePair", "check_key_value", "setup", "decorate", "apply_substitution", "find_substitutions", "generate_structures", "get_p_ab", "defects", "collect_data", "create_folder_structure", "setup_defects", "setup_supercell", "displacements", "create_displacements_folder", "displace_atom", "get_all_displacements", "get_displacement_folder", "magnetize", "materials", "params", "scanparams", "strains", "get_relevant_strains", "get_strained_folder_name", "setup_strains", "symmetrize", "symmetrize_atoms", "stiffness", "Result", "webpanel", "structureinfo", "Result", "get_reduced_formula", "webpanel", "test", "acceptance", "test_borncharges", "test_gpaw_berry_get_berry_phases_integration", "test_piezoelectrictensor", "test_piezo_BN", "test_relax", "test_relax_fe_gpaw", "conftest", "pytest_configure", "pytest_sessionstart", "fixtures", "_get_webcontent", "asr_tmpdir", "asr_tmpdir_w_params", "duplicates_test_db", "get_webcontent", "mockgpaw", "set_asr_test_environ_variable", "test_material", "materials", "mocks", "gpaw", "berryphase", "get_berry_phases", "calculator", "ASRCalculator", "DOSCalculator", "Occupations", "Parameters", "Setups", "WaveFunctions", "hybrids", "eigenvalues", "kpt_descriptor", "kpts2sizeandoffsets", "to1bz", "mpi", "barrier", "broadcast", "new_communicator", "world_sum", "occupations", "FermiDirac", "create_occ_calc", "response", "bse", "BSE", "df", "DielectricFunction", "g0w0", "G0W0", "spinorbit", "SOC", "soc_eigenstates", "symmetry", "Symmetry", "utilities", "dos", "raw_orbital_LDOS", "ibz2bz", "ibz2bz", "progressbar", "ProgressBar", "xc", "exx", "tools", "test_bandstructure", "test_bandstructure_main", "test_berry", "test_berry", "test_berry_nontrivial", "test_borncharges", "test_borncharges", "test_bse", "test_bse", "test_cli", "test_asr", "test_asr_find", "test_asr_find_help", "test_asr_find_no_versions", "test_asr_list", "test_asr_results_bandstructure", "test_asr_results_help", "test_asr_run", "test_convex_hull", "test_convex_hull", "test_core", "recipe", "test_core", "test_recipe_defaults", "test_recipe_setting_new_defaults", "test_recipe_setting_overriding_defaults", "test_core_material", "test_asr_cli_results_figures_gs", "test_core_results", "MyResult", "MyResultVer0", "MyWebPanel", "test_read_old_format", "test_reading_older_version", "test_reading_result", "test_results_object", "test_database_duplicates", "test_database_duplicates", "test_database_duplicates_filter_magstate", "test_database_duplicates_no_duplicates", "test_database_fromtree", "folder_tree", "make_tree", "test_database_fromtree_raises_when_missing_uids", "test_database_fromtree_totree", "test_database_fromtree_works_without_write_permission", "test_database_rmsd", "rattle_atoms", "test_database_rmsd_duplicates", "test_database_rmsd_duplicates_comparison_keys", "test_database_rmsd_move_one_atom", "test_database_rmsd_none_handling", "test_database_rmsd_not_equal", "test_database_rmsd_rattled", "test_database_rmsd_rotation", "test_database_totree", "make_test_db", "test_database_totree", "test_database_totree_files_and_hard_links", "test_dimensionality", "test_dimensionality", "test_dimensionality_cli", "test_emasses", "_get_all_eigenvalues", "resultstest", "test_emasses_freelectron", "test_emasses_indirect", "test_fixtures", "test_env_variables", "test_formalpolarization", "test_formalpolarization", "test_formalpolarization_test_atoms_too_close_to_boundary", "test_gs", "test_gs", "test_gs_asr_cli_results_figures", "test_gs_integration_gpaw", "test_gw", "test_gw", "test_hse", "test_hse", "test_pdos", "test_pdos", "test_pdos_full", "test_phonons", "test_phonons", "test_phonopy", "test_phonopy", "test_piezoelectrictensor", "get_strain_from_atoms", "test_piezoelectrictensor", "zero_pad_non_pbc_strain_directions", "test_plasmafrequency", "test_plasmafrequency", "test_polarizability", "test_polarizability", "test_projected_bandstructure", "test_projected_bs_mocked", "test_raman", "test_raman", "test_relax", "test_relax_basic", "test_relax_bn_gpaw", "test_relax_emt", "test_relax_emt_fail_broken_symmetry", "test_relax_find_higher_symmetry", "test_relax_magmoms", "test_relax_si_gpaw", "test_setinfo", "test_info", "test_info_call_from_cli", "test_info_raises_with_protected_key", "test_setup_decorate", "test_setup_decorate_si", "test_setup_displacements", "test_setup_displacements", "test_setup_displacements_displace_atom", "test_setup_displacements_get_all_displacements", "test_setup_magnetize", "test_setup_magnetize", "test_setup_magnetize_state_inputs", "test_setup_materials", "test_setup_magnetize", "test_setup_scanparams", "test_setup_params", "test_setup_strains", "test_setup_strains", "test_setup_strains_get_relevant_strains", "test_setup_symmetrize", "test_setup_symmetrize", "test_stiffness", "test_stiffness_emt", "test_stiffness_gpaw", "utils", "args", "parse_arg", "calculator_utils", "fermi_level", "get_eigenvalues", "gpw2eigs", "calc2eigs", "gpw2eigs", "kpts", "get_kpts_size", "magnetism", "is_magnetic", "magnetic_atoms", "refinegs", "get_filenames", "get_parstr", "nonselfc", "refinegs", "something", "calculate_something", "collect_data", "create_plot", "webpanel", "symmetry", "_atoms2symmetry_gpaw", "atoms2spgcell", "atoms2symmetry", "has_inversion", "restrict_spin_projection_2d", "utils", "timed_print", "workflow", "bindings", "empty_spheres", "EmptySpheresResult", "add_empty_spheres", "empty_spheres", "empty_spheres_atoms", "es_finder", "empty_spheres", "spglib", "SpacegroupInfo", "possibly_equivalent_sites", "tests", "init_tests", "TestCase", "arr_testfce", "assertDictEqual", "assertListEqual", "assert_almost_equals", "assert_equals", "extdict", "testfce", "test_es_finder", "TestEsFinder", "test_spglib", "TestSpgilib", "xband", "spheres", "empty_spheres", "symmetry", "find_symmetry", "find_symmetry_ex", "tests", "init_tests", "TestCase", "arr_testfce", "assertDictEqual", "assertListEqual", "assert_almost_equals", "assert_equals", "extdict", "patch_package", "testfce", "test_spheres", "TestSpheres", "common", "alternative_types", "allowed_types", "normalize_type", "normalize_type_map", "types_alternatives", "configuration", "Configuration", "configuration_containers", "BaseConfigurationContainer", "BaseSection", "ConfigurationContainer", "CustomSection", "DictAdaptor", "ase2sprkkr.common.configuration_containers.DisabledAttributeError", "RootConfigurationContainer", "Section", "configuration_definitions", "BaseDefinition", "ControlDefinition", "Gather", "Ignored", "RealItemDefinition", "SeparatorDefinition", "Stub", "Switch", "VirtualDefinition", "gather", "switch", "container_definitions", "ConfigurationRootDefinition", "ContainerDefinition", "MergeDictAdaptor", "SectionDefinition", "add_excluded_names_condition", "dict_from_parsed", "decorators", "add_called_class_as_argument", "add_to_signature", "cache", "cached_class_property", "cached_property", "class_property", "maybeclassmethod", "std_cached_property", "warnings_from_here", "directory", "Directory", "doc", "process_input_parameters_definition", "verbatim", "formats", "format_for_string", "fortran_format", "full_format_for_string", "generated_configuration_definitions", "BaseGeneratedValueDefinition", "GeneratedValueDefinition", "NumpyViewDefinition", "grammar", "SkipToRegex", "White", "addConditionEx", "addParseActionEx", "delimitedList", "end_of_file", "generate_grammar", "line_end", "optional_line_end", "optional_quote", "replace_whitechars", "separator_grammar", "separator_pattern", "grammar_types", "arrays", "Array", "Complex", "Sequence", "SetOf", "SpecialColumn", "Table", "complex_number", "set_of_integers", "set_of_reals", "basic", "BaseRealWithUnits", "BaseString", "BasicSeparator", "BlankSeparator", "Bool", "Date", "DefKeyword", "Energy", "FixedPointNumber", "Flag", "IntBool", "Integer", "Keyword", "LineString", "Number", "ObjectNumber", "QString", "Real", "RealWithUnits", "Separator", "String", "Unsigned", "boolean", "date", "energy", "flag", "int_bool", "integer", "line_string", "qstring", "real", "separator", "string", "unsigned", "data", "NumpyArray", "Prefixed", "RawData", "RestOfTheFile", "grammar_type", "GrammarType", "TypedGrammarType", "compare_numpy_values", "format_for_type", "recognized_set_types", "type_from_default_value", "type_from_type", "type_from_value", "mixed", "recognized_set_types", "type_from_set_map", "type_from_type_map", "warnings", "ase2sprkkr.common.grammar_types.warnings.SuspiciousValueWarning", "init_tests", "TestCase", "arr_testfce", "assertDictEqual", "assertListEqual", "assert_almost_equals", "assert_equals", "extdict", "patch_package", "testfce", "misc", "as_integer", "copy_list", "dict_first_item", "first_non_none", "njit", "numpy_index", "no_output", "NoOutput", "options", "BaseOption", "CustomOption", "DangerousValue", "Dummy", "Option", "process_output_reader", "AsyncioFileReader", "ProcessOutputReader", "repeated_configuration_containers", "RepeatedConfigurationContainer", "subprocess", "_call_function", "ignore_signal", "in_subprocess", "test", "init_tests", "TestCase", "arr_testfce", "assertDictEqual", "assertListEqual", "assert_almost_equals", "assert_equals", "extdict", "testfce", "test_common", "TestCommon", "test_grammar_types", "TestGrammar", "tools", "append_id_to_filename", "main", "parse_inches", "parse_named_option", "parse_tuple_function", "unique_values", "UniqueValuesMapping", "value_definitions", "ValueDefinition", "warnings", "ase2sprkkr.common.warnings.DataValidityWarning", "config", "calculator_parameters", "sprkkr_executable_suffix", "examples", "A1_Fe_scf_simple", "Fe", "main", "A2_Fe_scf_input_modifications", "Fe", "main", "A3_Fe_dos", "Fe", "main", "A4_CPA_Example", "Ni_doped_STO", "main", "A5_Al_EOS", "Al", "main", "A6_Cu_MSSPEC", "Cu", "main", "A7_SrTiO3_MSSPEC", "STO", "main", "A8_ARPES_and_plotting", "arpes", "main", "input_parameters", "definitions", "arpes", "input_parameters", "bsf", "input_parameters", "dos", "input_parameters", "gilbert", "input_parameters", "jxc", "input_parameters", "marpes", "phagen", "input_parameters", "scf", "input_parameters", "sections", "CONTROL", "CPA", "ENERGY", "MODE", "SCF", "SITES", "STRCONST", "TASK", "TAU", "TauSection", "_nktab_value", "input_parameters", "InputParameters", "InputSection", "input_parameters_definitions", "InputParametersDefinition", "InputSectionDefinition", "InputValueDefinition", "test", "init_tests", "TestCase", "arr_testfce", "assertDictEqual", "assertListEqual", "assert_almost_equals", "assert_equals", "extdict", "testfce", "test_definitions", "TestDefinitions", "test_input_parameters", "TestInputParameters", "ar", "output_files", "definitions", "Arithmetic", "CommonOutputFile", "OutputFile", "UnknownDataValue", "bsf", "BSFDefinition", "BSFOutputFile", "create_definition", "dos", "DOS", "DOSDefinition", "DOSOutputFile", "create_definition", "spc", "ARPESDefinition", "ARPESOutputFile", "create_definition", "output_files", "Arithmetic", "CommonOutputFile", "OutputFile", "UnknownDataValue", "output_files_definitions", "BlankSeparator", "OutputFileDefinition", "OutputFileValueDefinition", "Separator", "create_output_file_definition", "output_file_header", "test", "init_tests", "TestCase", "arr_testfce", "assertDictEqual", "assertListEqual", "assert_almost_equals", "assert_equals", "extdict", "testfce", "test_files", "TestOutput", "outputs", "output_definitions", "OutputNonameValueDefinition", "OutputSectionDefinition", "OutputValueDefinition", "OutputValueEqualDefinition", "readers", "arpes", "ArpesProcess", "ArpesResult", "default", "DefaultOutputReader", "DefaultProcess", "DefaultResult", "scf", "RealOrStars", "ScfOutputReader", "ScfProcess", "ScfResult", "atomic_types_definition", "task_result", "KkrProcess", "TaskResult", "test", "init_tests", "TestCase", "arr_testfce", "assertDictEqual", "assertListEqual", "assert_almost_equals", "assert_equals", "extdict", "testfce", "test_output", "TestOutput", "physics", "lattice_data", "LatticeData", "Pearson", "international_numbers_to_AP", "winger_seitz_radii", "winger_seitz_radii", "potentials", "custom_potential_section", "CustomPotentialSection", "CustomPotentialSectionDefinition", "CustomSectionToken", "SectionString", "definitions", "potential", "potential_definition", "sections", "_sections", "charge", "ChargeSection", "ChargeSectionDefinition", "ChargesSection", "section", "charge_moments", "ChargeMomentsSection", "ChargeMomentsSectionDefinition", "section", "global_system_parameter", "GlobalSystemParameter", "GlobalSystemParameterDefinition", "section", "host_madelung_potential", "HostMadelungPotentialSection", "HostMadelungPotentialSectionDefinition", "section", "lattice", "LatticeSection", "LatticeSectionDefinition", "section", "mesh_information", "MeshInformationSection", "MeshInformationSectionDefinition", "section", "moments", "MomentSection", "MomentsSection", "MomentsSectionDefinition", "section", "occupation", "OccupationSection", "OccupationSectionDefinition", "section", "potential", "PotentialSection", "PotentialSectionDefinition", "PotentialsSection", "section", "reference_system", "ReferenceSystemSection", "ReferenceSystemSectionDefinition", "section", "scf_info", "ScfInfoSection", "ScfInfoSectionDefinition", "section", "sites", "SitesSection", "SitesSectionDefinition", "section", "types", "TypesSection", "TypesSectionDefinition", "section", "potential_definitions", "ASEArraySectionDefinition", "PotSectionDefinition", "PotValueDefinition", "PotentialDefinition", "Separator", "potential_sections", "ASEArraySection", "PotentialSection", "PotentialSectionTrait", "RepeatedPotentialSection", "UniqueListSection", "potentials", "Potential", "test", "init_tests", "TestCase", "arr_testfce", "assertDictEqual", "assertListEqual", "assert_almost_equals", "assert_equals", "extdict", "testfce", "test_2D", "Test2DPotential", "test_custom_section", "TestCustomSection", "test_potential", "TestPotential", "test_structure", "TestStructure", "sprkkr", "atomic_types", "AtomicType", "atoms_region", "AtomsRegion", "build", "semiinfinite_system", "stack", "vacuum_like", "calculator", "FilenameTemplator", "SPRKKR", "configuration", "ConfigurationFile", "ConfigurationFileDefinition", "ConfigurationSection", "ConfigurationSectionDefinition", "ConfigurationSectionTrait", "ConfigurationValue", "ConfigurationValueDefinition", "CustomConfigurationSection", "CustomConfigurationValue", "RepeatedConfigurationSection", "io_data", "BaseIoData", "ReadIoData", "WriteIoData", "unique_mapping", "moments", "Moments", "occupations", "Occupation", "radial", "RadialCharge", "RadialPotential", "RadialValue", "radial_meshes", "ExponentialMesh", "Mesh", "_clearing_property", "reference_systems", "ReferenceSystem", "sites", "Site", "SiteType", "sprkkr_atoms", "SPRKKRAtoms", "sprkkr_grammar_types", "AtomicType", "Site", "structure", "AtomData", "LayerData", "floatjm", "structure_file_to_atoms", "sysfile", "sysfile_content", "write_sysfile", "test", "init_tests", "TestCase", "arr_testfce", "assertDictEqual", "assertListEqual", "assert_almost_equals", "assert_equals", "extdict", "testfce", "test_arpes", "TestCalculator", "test_build", "TestBuild", "test_calculator", "TestCalculator", "_fast_atoms", "test_occupation", "test", "test_sites", "TestSites", "test_sprkkr_atoms", "TestSPRKKRAtoms", "test_sysfile", "TestSysfile", "tools", "ase2sprkkr", "run", "commands", "config", "parser", "run", "info", "TestsArgAction", "info_output_files", "info_tasks", "parser", "run", "plot", "parser", "run", "run", "parser", "run", "show_structure", "parser", "run", "test", "parser", "run", "shared", "main", "test", "init_tests", "TestCase", "arr_testfce", "assertDictEqual", "assertListEqual", "assert_almost_equals", "assert_equals", "extdict", "testfce", "test_tools", "TestCommon", "version", "visualise", "plot", "Multiplot", "auto_range", "change_default_kwargs", "colormesh", "combine_colormaps", "combined_colormap", "create_rc_context", "finish_plot", "normalize_rc_params", "plotting_function", "set_up_common_plot", "single_plot", "ase2sprkkr", "Changelog", "Some examples of ase2sprkkr", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">A1_Fe_scf_simple</span></code>", "More about installing of the ASE2SPRKKR package", "ASE2SPRKKR software package", "Installation of the package using package managers", "Usefull links", "ASE2SPR-KKR\u2019s philosophy for the developers", "How to use ASE2SPRKKR"], "terms": {"provid": [0, 1, 100, 118, 126, 452, 629, 665, 667, 745, 777, 778, 780, 896, 898, 964, 1007, 1025, 1027, 1028, 1059, 1068, 1134, 1182, 1194, 1207, 1305, 1307, 1309], "an": [0, 10, 102, 112, 113, 114, 118, 131, 144, 382, 385, 387, 445, 452, 525, 596, 651, 652, 663, 703, 709, 713, 719, 723, 724, 732, 733, 735, 746, 765, 767, 770, 771, 773, 779, 788, 789, 790, 791, 796, 797, 799, 800, 802, 803, 806, 807, 823, 825, 827, 828, 832, 852, 862, 865, 870, 898, 927, 931, 956, 959, 962, 963, 964, 984, 987, 988, 992, 996, 997, 1002, 1006, 1007, 1025, 1026, 1027, 1028, 1067, 1068, 1070, 1132, 1134, 1135, 1144, 1165, 1167, 1174, 1176, 1177, 1179, 1182, 1194, 1200, 1205, 1207, 1208, 1209, 1301, 1302, 1303, 1304, 1305, 1306, 1307, 1308, 1309], "interfac": [0, 1, 99, 867, 1174, 1305, 1307], "allow": [0, 33, 597, 628, 665, 704, 709, 713, 717, 720, 724, 726, 733, 737, 743, 758, 759, 760, 767, 777, 778, 780, 787, 792, 794, 795, 798, 801, 802, 804, 805, 808, 870, 898, 931, 933, 935, 937, 939, 942, 944, 959, 961, 984, 1002, 1031, 1038, 1131, 1133, 1144, 1176, 1182, 1209, 1211, 1212, 1301, 1304, 1305, 1306, 1307, 1308, 1309], "spr": [0, 1, 929, 930, 946, 958, 959, 1023, 1029, 1039, 1065, 1071, 1143, 1144, 1163, 1168, 1172, 1174, 1175, 1182, 1199, 1201, 1209, 1210, 1246, 1304, 1305, 1306, 1307, 1308, 1309], "kkr": [0, 1, 929, 930, 933, 939, 944, 946, 958, 959, 984, 1002, 1023, 1029, 1039, 1065, 1071, 1143, 1144, 1163, 1168, 1172, 1174, 1175, 1182, 1199, 1201, 1209, 1210, 1246, 1304, 1305, 1306, 1307, 1309], "electron": [0, 1, 37, 44, 287, 312, 452, 629, 931, 937, 1064, 1165, 1209, 1305, 1307], "structur": [0, 1, 32, 37, 42, 44, 91, 113, 114, 188, 217, 296, 303, 304, 337, 347, 367, 369, 374, 382, 384, 394, 399, 401, 402, 403, 404, 409, 413, 417, 422, 452, 534, 543, 546, 547, 593, 597, 652, 663, 665, 667, 720, 782, 824, 898, 931, 933, 939, 944, 961, 1131, 1163, 1174, 1209, 1214, 1215, 1216, 1217, 1300, 1301, 1305, 1307, 1309], "calcul": [0, 1, 3, 33, 57, 205, 207, 243, 244, 280, 286, 292, 296, 304, 328, 332, 355, 382, 385, 447, 452, 453, 454, 455, 456, 457, 473, 477, 628, 629, 630, 642, 643, 865, 906, 912, 915, 918, 921, 924, 927, 931, 933, 935, 937, 939, 942, 944, 959, 1031, 1032, 1035, 1036, 1040, 1041, 1044, 1045, 1163, 1168, 1173, 1174, 1209, 1300, 1301, 1302, 1303, 1305, 1307, 1308], "within": [0, 204, 229, 240, 385, 782, 1305, 1307], "atom": [0, 4, 5, 8, 32, 54, 91, 93, 113, 146, 147, 185, 188, 189, 190, 191, 217, 282, 286, 289, 292, 296, 301, 307, 323, 328, 329, 340, 349, 360, 364, 382, 384, 385, 386, 387, 388, 389, 391, 394, 395, 399, 404, 406, 407, 409, 413, 417, 418, 445, 452, 540, 564, 568, 581, 635, 638, 646, 650, 651, 652, 653, 661, 662, 663, 665, 667, 668, 685, 687, 865, 931, 933, 935, 937, 939, 942, 944, 956, 959, 962, 991, 993, 1042, 1045, 1060, 1067, 1079, 1086, 1094, 1103, 1107, 1113, 1116, 1120, 1124, 1132, 1138, 1140, 1142, 1144, 1164, 1165, 1166, 1167, 1169, 1170, 1171, 1174, 1176, 1180, 1181, 1182, 1184, 1188, 1189, 1193, 1194, 1200, 1205, 1206, 1207, 1208, 1209, 1211, 1212, 1214, 1217, 1219, 1220, 1301, 1305, 1307, 1308], "simul": [0, 937, 1305, 1307], "environ": [0, 561, 1174, 1301, 1305, 1307, 1309], "abbrevi": [0, 1305, 1307], "ASE": [0, 1, 3, 5, 129, 192, 452, 629, 663, 667, 1094, 1107, 1120, 1124, 1132, 1138, 1144, 1174, 1180, 1207, 1209, 1217, 1301, 1305, 1307, 1308, 1309], "python": [0, 667, 705, 746, 763, 777, 778, 779, 780, 787, 788, 789, 790, 791, 796, 797, 799, 800, 803, 806, 807, 823, 825, 827, 828, 833, 834, 837, 838, 1070, 1301, 1304, 1305, 1306, 1307, 1308, 1309], "tool": [0, 890, 891, 892, 893, 894, 1247, 1248, 1249, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1265, 1266, 1267, 1268, 1269, 1270, 1271, 1272, 1273, 1274, 1275, 1276, 1277, 1278, 1279, 1280, 1281, 1282, 1283, 1284, 1300, 1305, 1307], "integr": [0, 123, 181, 931, 933, 935, 937, 939, 942, 944, 1301, 1305, 1307], "variou": [0, 549, 738, 761, 775, 851, 959, 1059, 1174, 1301, 1305, 1307, 1308, 1309], "onlin": [0, 1304, 1305, 1306, 1307], "version": [0, 38, 118, 123, 127, 132, 384, 522, 523, 746, 962, 1174, 1208, 1300, 1304, 1305, 1306, 1307, 1308, 1309], "thi": [0, 1, 3, 5, 18, 33, 91, 113, 117, 118, 141, 146, 147, 153, 202, 229, 280, 296, 330, 355, 373, 382, 385, 398, 426, 434, 446, 452, 628, 629, 650, 658, 703, 708, 709, 710, 711, 713, 715, 716, 720, 721, 724, 727, 732, 733, 734, 735, 739, 740, 745, 746, 758, 759, 760, 763, 777, 778, 779, 780, 782, 787, 788, 789, 790, 791, 792, 796, 797, 798, 799, 800, 801, 803, 804, 806, 807, 808, 821, 822, 823, 824, 825, 827, 828, 829, 838, 861, 863, 864, 865, 868, 870, 889, 891, 896, 898, 899, 900, 901, 902, 915, 931, 933, 935, 937, 939, 942, 944, 956, 959, 961, 962, 963, 964, 981, 984, 987, 992, 996, 999, 1002, 1006, 1007, 1023, 1024, 1025, 1026, 1027, 1028, 1032, 1039, 1041, 1042, 1043, 1058, 1059, 1061, 1063, 1067, 1068, 1070, 1074, 1078, 1079, 1083, 1086, 1087, 1091, 1094, 1095, 1099, 1103, 1104, 1107, 1108, 1112, 1113, 1117, 1120, 1121, 1124, 1125, 1129, 1131, 1133, 1134, 1135, 1137, 1140, 1144, 1166, 1167, 1168, 1172, 1174, 1175, 1176, 1177, 1179, 1180, 1182, 1207, 1208, 1209, 1210, 1213, 1250, 1253, 1259, 1262, 1265, 1268, 1271, 1287, 1288, 1302, 1303, 1304, 1305, 1306, 1307, 1308, 1309], "github": [0, 667, 1304, 1305, 1306, 1307, 1309], "repositori": [0, 1305, 1307, 1309], "manual": [0, 118, 390, 931, 1144, 1305, 1307, 1308, 1309], "The": [0, 4, 5, 117, 118, 185, 280, 355, 382, 385, 387, 398, 402, 452, 628, 665, 667, 709, 711, 713, 718, 720, 724, 727, 732, 733, 735, 739, 740, 742, 744, 755, 758, 759, 760, 777, 778, 779, 780, 782, 787, 788, 789, 790, 791, 792, 794, 796, 797, 799, 800, 802, 803, 806, 807, 822, 823, 824, 825, 827, 828, 829, 831, 833, 836, 838, 858, 859, 860, 861, 862, 864, 865, 868, 870, 894, 896, 898, 903, 930, 931, 933, 935, 937, 938, 939, 942, 944, 949, 951, 952, 953, 955, 956, 958, 959, 962, 963, 964, 984, 985, 987, 992, 993, 996, 1002, 1003, 1005, 1006, 1007, 1008, 1025, 1026, 1027, 1028, 1030, 1032, 1041, 1067, 1068, 1069, 1070, 1071, 1079, 1098, 1103, 1108, 1113, 1116, 1120, 1124, 1128, 1132, 1133, 1134, 1135, 1136, 1138, 1140, 1142, 1144, 1167, 1169, 1170, 1173, 1174, 1176, 1177, 1179, 1180, 1181, 1182, 1184, 1194, 1205, 1207, 1209, 1247, 1288, 1297, 1299, 1301, 1304, 1305, 1306, 1309], "simplest": [0, 1304, 1306], "wai": [0, 4, 33, 117, 401, 402, 452, 711, 720, 723, 724, 758, 759, 760, 777, 778, 779, 782, 790, 791, 792, 797, 806, 822, 823, 824, 827, 833, 898, 931, 933, 935, 937, 939, 942, 944, 959, 964, 1007, 1025, 1027, 1028, 1068, 1134, 1174, 1182, 1301, 1304, 1306, 1308], "i": [0, 4, 5, 32, 33, 101, 107, 117, 118, 132, 139, 141, 185, 187, 229, 244, 280, 296, 323, 355, 368, 370, 373, 385, 387, 398, 402, 415, 452, 455, 544, 561, 597, 629, 641, 643, 665, 667, 668, 704, 705, 709, 711, 712, 713, 715, 716, 717, 718, 720, 723, 724, 727, 728, 732, 733, 735, 736, 737, 739, 740, 742, 744, 746, 757, 758, 759, 760, 777, 778, 779, 780, 782, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 806, 807, 808, 822, 823, 824, 825, 827, 828, 829, 830, 832, 833, 835, 852, 853, 856, 857, 858, 859, 861, 863, 865, 867, 868, 870, 896, 898, 902, 903, 931, 933, 935, 937, 939, 942, 944, 956, 959, 962, 963, 964, 984, 987, 992, 993, 996, 1002, 1005, 1006, 1007, 1008, 1024, 1025, 1026, 1027, 1028, 1041, 1042, 1044, 1064, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1078, 1079, 1083, 1087, 1091, 1094, 1095, 1099, 1103, 1104, 1107, 1108, 1112, 1113, 1117, 1120, 1121, 1124, 1125, 1129, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1140, 1142, 1143, 1144, 1165, 1167, 1169, 1174, 1176, 1177, 1179, 1180, 1182, 1188, 1194, 1207, 1209, 1211, 1212, 1213, 1253, 1259, 1262, 1265, 1288, 1297, 1299, 1301, 1304, 1306, 1308, 1309], "them": [0, 1, 33, 434, 709, 710, 711, 713, 861, 865, 870, 959, 1075, 1194, 1209, 1288, 1297, 1304, 1306], "either": [0, 710, 711, 713, 724, 733, 735, 760, 799, 802, 803, 827, 835, 865, 870, 896, 959, 993, 1079, 1094, 1103, 1107, 1113, 1120, 1124, 1140, 1165, 1174, 1194, 1207, 1297, 1299, 1304, 1306, 1308, 1309], "c": [0, 232, 233, 384, 667, 713, 737, 854, 858, 859, 931, 933, 939, 944, 1064, 1173, 1174, 1291, 1304, 1306, 1309], "In": [0, 434, 452, 710, 717, 763, 779, 788, 789, 790, 791, 796, 797, 799, 800, 803, 806, 807, 823, 825, 827, 828, 865, 867, 898, 903, 933, 939, 944, 964, 1006, 1007, 1025, 1027, 1028, 1064, 1067, 1068, 1070, 1071, 1134, 1137, 1174, 1175, 1182, 1210, 1287, 1304, 1306, 1308, 1309], "some": [0, 21, 118, 434, 452, 515, 545, 665, 671, 691, 709, 713, 724, 732, 777, 778, 779, 782, 788, 789, 790, 791, 792, 796, 797, 799, 800, 803, 806, 807, 822, 823, 824, 825, 827, 828, 842, 865, 870, 877, 898, 900, 933, 939, 944, 959, 964, 967, 1007, 1013, 1025, 1027, 1028, 1048, 1068, 1070, 1079, 1094, 1103, 1107, 1113, 1120, 1124, 1134, 1140, 1147, 1167, 1174, 1176, 1181, 1182, 1189, 1209, 1223, 1275, 1301, 1304, 1306, 1308, 1309], "system": [0, 323, 401, 410, 931, 933, 935, 937, 939, 942, 944, 1087, 1117, 1142, 1167, 1168, 1169, 1207, 1304, 1306, 1309], "util": [0, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 382, 387, 442, 484, 485, 486, 487, 488, 489, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 656, 739, 865, 1213, 1300, 1304, 1306, 1308], "python3": [0, 33, 1304, 1306], "call": [0, 33, 452, 709, 720, 727, 737, 739, 741, 782, 827, 852, 865, 894, 898, 921, 924, 931, 933, 935, 937, 939, 942, 944, 959, 1079, 1086, 1094, 1103, 1107, 1113, 1120, 1124, 1140, 1144, 1174, 1176, 1209, 1297, 1301, 1304, 1306, 1308, 1309], "pip3": [0, 1304, 1306], "If": [0, 4, 5, 32, 125, 146, 387, 424, 452, 455, 643, 665, 667, 709, 711, 713, 720, 724, 732, 733, 735, 739, 740, 758, 759, 760, 777, 778, 780, 782, 787, 799, 824, 827, 830, 833, 857, 861, 865, 870, 893, 896, 898, 931, 933, 935, 937, 939, 942, 944, 956, 959, 963, 964, 984, 987, 992, 996, 1002, 1006, 1007, 1025, 1026, 1027, 1028, 1041, 1068, 1079, 1094, 1103, 1107, 1113, 1120, 1124, 1134, 1135, 1138, 1140, 1144, 1165, 1167, 1169, 1174, 1177, 1179, 1180, 1182, 1194, 1207, 1209, 1288, 1297, 1299, 1304, 1306, 1308, 1309], "you": [0, 446, 452, 746, 787, 827, 898, 933, 939, 944, 964, 984, 1002, 1007, 1144, 1304, 1306, 1309], "can": [0, 5, 117, 118, 125, 185, 387, 398, 401, 426, 442, 452, 536, 537, 650, 664, 667, 709, 713, 717, 720, 723, 724, 727, 732, 733, 735, 739, 740, 742, 744, 745, 746, 758, 759, 760, 775, 777, 778, 779, 780, 782, 787, 793, 794, 796, 799, 801, 802, 822, 824, 827, 829, 832, 833, 835, 838, 862, 863, 865, 868, 870, 891, 894, 896, 898, 933, 939, 944, 956, 959, 962, 963, 964, 984, 987, 988, 992, 993, 996, 997, 1002, 1006, 1007, 1025, 1026, 1027, 1028, 1041, 1044, 1066, 1068, 1079, 1094, 1103, 1107, 1108, 1113, 1120, 1124, 1133, 1134, 1135, 1138, 1140, 1144, 1165, 1167, 1168, 1174, 1176, 1177, 1179, 1181, 1182, 1193, 1194, 1207, 1209, 1213, 1271, 1288, 1301, 1304, 1306, 1308, 1309], "linux": [0, 1304, 1306], "distribut": [0, 1304, 1306], "e": [0, 185, 187, 289, 290, 387, 401, 402, 424, 667, 668, 703, 704, 705, 709, 711, 712, 713, 716, 717, 718, 719, 720, 724, 726, 732, 733, 735, 755, 760, 777, 778, 779, 780, 782, 796, 799, 827, 831, 833, 835, 836, 863, 865, 898, 930, 931, 933, 935, 939, 942, 944, 956, 959, 963, 964, 987, 992, 996, 1006, 1007, 1025, 1026, 1027, 1028, 1041, 1044, 1064, 1066, 1068, 1069, 1070, 1078, 1079, 1083, 1086, 1087, 1091, 1094, 1095, 1099, 1103, 1104, 1107, 1108, 1112, 1113, 1117, 1120, 1121, 1124, 1125, 1129, 1133, 1134, 1135, 1138, 1140, 1142, 1144, 1165, 1167, 1168, 1173, 1174, 1176, 1177, 1179, 1180, 1182, 1194, 1207, 1209, 1301, 1304, 1306, 1308, 1309], "g": [0, 123, 244, 245, 251, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 387, 401, 424, 525, 642, 667, 703, 709, 711, 716, 717, 719, 720, 724, 726, 732, 733, 735, 760, 777, 778, 779, 780, 782, 796, 799, 827, 831, 833, 835, 836, 863, 865, 898, 930, 933, 939, 942, 944, 956, 959, 963, 964, 987, 992, 996, 1006, 1007, 1025, 1026, 1027, 1028, 1041, 1044, 1068, 1079, 1086, 1094, 1103, 1107, 1113, 1120, 1124, 1134, 1135, 1138, 1140, 1142, 1144, 1165, 1167, 1168, 1173, 1174, 1176, 1177, 1179, 1180, 1182, 1194, 1209, 1300, 1301, 1304, 1306, 1308, 1309], "debian": [0, 1304, 1306], "ubuntu": [0, 1304, 1306], "apt": [0, 77, 1304, 1306], "zypper": [0, 1304, 1306], "opensus": [0, 1304, 1306], "For": [0, 123, 187, 385, 452, 667, 732, 733, 735, 827, 865, 931, 933, 935, 937, 939, 942, 944, 956, 962, 963, 987, 992, 996, 1006, 1026, 1078, 1083, 1087, 1091, 1095, 1099, 1104, 1108, 1112, 1117, 1121, 1125, 1129, 1132, 1133, 1135, 1172, 1174, 1177, 1179, 1187, 1209, 1304, 1306, 1309], "instruct": [0, 1304, 1306], "see": [0, 4, 5, 91, 118, 280, 371, 373, 398, 401, 402, 447, 667, 711, 722, 723, 724, 732, 733, 735, 744, 779, 827, 833, 837, 896, 898, 904, 931, 933, 935, 937, 939, 942, 944, 956, 959, 962, 963, 964, 987, 992, 996, 1006, 1007, 1025, 1026, 1027, 1028, 1044, 1068, 1078, 1083, 1087, 1091, 1095, 1099, 1104, 1108, 1112, 1117, 1121, 1125, 1129, 1132, 1133, 1134, 1135, 1138, 1167, 1173, 1174, 1177, 1179, 1182, 1194, 1209, 1247, 1253, 1259, 1262, 1265, 1291, 1304, 1306, 1308, 1309], "anaconda": [0, 1304, 1306], "http": [0, 667, 787, 1172, 1174, 1304, 1306, 1308, 1309], "doc": [0, 91, 138, 148, 709, 751, 752, 1204, 1253, 1259, 1262, 1265, 1300, 1304, 1306, 1308], "com": [0, 787, 1304, 1306, 1309], "howev": [0, 4, 33, 387, 724, 732, 733, 758, 759, 760, 777, 778, 779, 780, 782, 787, 791, 792, 796, 797, 798, 799, 800, 803, 804, 807, 808, 822, 825, 827, 829, 865, 868, 896, 898, 964, 984, 993, 1002, 1007, 1025, 1027, 1028, 1068, 1070, 1134, 1182, 1188, 1207, 1209, 1304, 1306, 1308, 1309], "user": [0, 13, 15, 713, 714, 724, 733, 758, 759, 760, 777, 778, 779, 782, 795, 799, 802, 804, 805, 822, 824, 827, 828, 862, 870, 898, 964, 1007, 1025, 1027, 1028, 1068, 1134, 1182, 1304, 1305, 1306, 1309], "unexperienc": [0, 1304, 1306], "simpler": [0, 1304, 1306], "recommend": [0, 1304, 1306], "do": [0, 153, 208, 217, 218, 219, 228, 244, 296, 328, 332, 382, 401, 452, 485, 709, 711, 713, 717, 720, 724, 728, 732, 733, 737, 740, 746, 758, 763, 777, 778, 779, 782, 787, 790, 791, 792, 797, 799, 806, 822, 823, 824, 827, 863, 870, 896, 898, 912, 930, 931, 933, 936, 937, 939, 942, 944, 959, 984, 992, 993, 994, 1002, 1006, 1031, 1144, 1174, 1176, 1180, 1300, 1301, 1302, 1303, 1304, 1306, 1309], "want": [0, 766, 868, 1304, 1306, 1309], "public": [0, 452, 1304, 1306], "develop": [0, 1041, 1174, 1304, 1305, 1306], "3": [0, 168, 228, 232, 233, 236, 241, 243, 348, 452, 729, 763, 780, 787, 894, 896, 931, 933, 935, 937, 939, 942, 944, 991, 1061, 1062, 1064, 1174, 1289, 1304, 1305, 1306, 1309], "7": [0, 665, 894, 1061, 1062, 1064, 1172, 1289, 1304, 1305, 1306], "check": [0, 5, 10, 101, 118, 202, 382, 392, 561, 568, 709, 713, 720, 735, 764, 779, 788, 789, 790, 791, 796, 797, 799, 800, 803, 806, 807, 823, 825, 827, 828, 865, 870, 959, 988, 997, 1070, 1176, 1194, 1300, 1301, 1304, 1306, 1309], "setup": [0, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 451, 452, 1300, 1304, 1306], "cfg": [0, 1304, 1306], "clone": [0, 182, 1304, 1306, 1309], "checkout": [0, 1304, 1306], "releas": [0, 650, 1304, 1306], "first": [0, 4, 5, 177, 185, 709, 713, 717, 722, 724, 729, 733, 739, 740, 758, 759, 760, 793, 824, 854, 857, 870, 898, 931, 933, 935, 937, 939, 944, 959, 964, 984, 1002, 1007, 1010, 1025, 1027, 1028, 1068, 1134, 1144, 1169, 1174, 1176, 1182, 1194, 1200, 1304, 1306, 1308, 1309], "line": [0, 58, 99, 205, 207, 251, 720, 724, 733, 782, 790, 799, 800, 806, 815, 822, 823, 824, 827, 898, 1005, 1006, 1008, 1136, 1174, 1214, 1300, 1304, 1306, 1308, 1309], "fetch": [0, 1304, 1306], "second": [0, 185, 656, 824, 933, 939, 942, 944, 1169, 1304, 1306, 1308], "one": [0, 4, 5, 452, 667, 668, 724, 733, 766, 777, 782, 793, 794, 799, 815, 827, 860, 865, 896, 898, 931, 933, 935, 937, 939, 942, 944, 959, 963, 964, 984, 991, 1002, 1006, 1007, 1025, 1026, 1027, 1028, 1068, 1079, 1086, 1094, 1103, 1107, 1113, 1120, 1124, 1133, 1134, 1140, 1169, 1170, 1174, 1180, 1182, 1189, 1193, 1194, 1206, 1209, 1213, 1288, 1301, 1304, 1306, 1308, 1309], "out": [0, 21, 228, 289, 290, 292, 671, 691, 842, 868, 877, 959, 967, 1006, 1013, 1048, 1147, 1174, 1223, 1275, 1301, 1304, 1306, 1309], "product": [0, 1304, 1306], "current": [0, 204, 439, 716, 720, 727, 868, 898, 959, 964, 1007, 1025, 1027, 1028, 1030, 1031, 1068, 1134, 1174, 1182, 1207, 1209, 1304, 1306, 1308, 1309], "earlier": [0, 746, 1304, 1306, 1309], "download": [0, 1304, 1306], "run": [0, 32, 108, 181, 382, 657, 868, 891, 903, 959, 962, 982, 991, 1000, 1044, 1045, 1174, 1250, 1253, 1259, 1263, 1265, 1268, 1271, 1300, 1301, 1304, 1305, 1306], "altern": [0, 706, 707, 713, 724, 758, 759, 760, 870, 898, 964, 1007, 1025, 1027, 1028, 1068, 1134, 1174, 1182, 1304, 1306], "master": [0, 1167, 1304, 1306], "branch": [0, 726, 1304, 1306], "newer": [0, 1304, 1306], "thorougli": [0, 1304, 1306], "test": [0, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 410, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 841, 849, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 966, 967, 968, 969, 970, 971, 972, 973, 974, 975, 976, 977, 978, 979, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1146, 1147, 1148, 1149, 1150, 1151, 1152, 1153, 1154, 1155, 1156, 1157, 1158, 1159, 1160, 1161, 1162, 1174, 1219, 1222, 1223, 1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1238, 1240, 1241, 1242, 1243, 1244, 1245, 1250, 1269, 1270, 1274, 1275, 1276, 1277, 1278, 1279, 1280, 1281, 1282, 1283, 1284, 1300, 1301, 1304, 1306, 1309], "yet": [0, 18, 960, 1304, 1306, 1309], "bleed": [0, 1304, 1306], "edg": [0, 296, 1304, 1306], "feel": [0, 1304, 1306, 1309], "free": [0, 1064, 1304, 1306, 1309], "try": [0, 54, 301, 360, 364, 635, 713, 720, 735, 870, 984, 1002, 1174, 1304, 1306], "just": [0, 5, 33, 667, 708, 709, 711, 720, 721, 724, 728, 732, 733, 735, 740, 758, 777, 778, 780, 782, 799, 803, 807, 822, 827, 830, 853, 861, 864, 896, 898, 899, 931, 933, 935, 937, 939, 942, 944, 964, 984, 1002, 1007, 1025, 1027, 1028, 1031, 1042, 1067, 1068, 1069, 1134, 1138, 1174, 1182, 1209, 1218, 1250, 1268, 1285, 1297, 1304, 1306, 1308, 1309], "add": [0, 4, 662, 713, 720, 724, 733, 736, 739, 740, 751, 764, 765, 777, 778, 779, 782, 790, 791, 792, 797, 806, 822, 823, 824, 827, 870, 898, 931, 933, 939, 944, 954, 964, 1007, 1009, 1025, 1027, 1028, 1068, 1134, 1167, 1174, 1182, 1194, 1209, 1301, 1304, 1306, 1309], "src": [0, 853, 984, 1002, 1304, 1306], "directori": [0, 21, 204, 401, 439, 452, 671, 691, 842, 868, 877, 959, 967, 1013, 1031, 1032, 1035, 1036, 1040, 1041, 1044, 1045, 1048, 1147, 1174, 1223, 1275, 1300, 1301, 1304, 1306], "your": [0, 204, 446, 787, 1304, 1306, 1309], "pythonpath": [0, 1304, 1306], "build": [0, 4, 5, 382, 787, 1169, 1170, 1171, 1300, 1301, 1304, 1306, 1309], "describ": [0, 118, 667, 668, 724, 733, 760, 782, 802, 827, 933, 939, 944, 959, 962, 963, 964, 981, 999, 1006, 1007, 1026, 1061, 1133, 1135, 1144, 1163, 1166, 1167, 1209, 1304, 1306, 1308, 1309], "below": [0, 118, 746, 1304, 1306], "To": [0, 118, 280, 382, 709, 724, 733, 739, 861, 865, 1209, 1304, 1306, 1308, 1309], "m": [0, 33, 241, 420, 453, 787, 792, 1061, 1304, 1306], "mayb": [0, 1304, 1306], "have": [0, 5, 177, 385, 452, 545, 546, 652, 667, 713, 720, 724, 728, 733, 740, 746, 755, 777, 778, 779, 780, 782, 787, 799, 801, 827, 865, 870, 898, 930, 931, 933, 935, 937, 939, 942, 944, 961, 962, 964, 1007, 1025, 1026, 1027, 1028, 1031, 1068, 1131, 1134, 1167, 1169, 1174, 1179, 1182, 1209, 1297, 1301, 1304, 1306, 1309], "replac": [0, 739, 896, 1167, 1169, 1173, 1174, 1194, 1209, 1304, 1306, 1309], "edit": [0, 732, 733, 735, 956, 963, 987, 992, 996, 1006, 1026, 1135, 1177, 1179, 1304, 1306], "pleas": [0, 280, 452, 962, 1209, 1218, 1304, 1306, 1309], "py": [0, 13, 426, 901, 984, 1002, 1304, 1306, 1309], "ignor": [0, 146, 424, 452, 467, 719, 732, 959, 1006, 1174, 1300, 1304, 1306], "deprec": [0, 452, 1304, 1306], "warn": [0, 724, 758, 759, 760, 959, 1300, 1301, 1304, 1306], "aim": [0, 1304, 1306, 1309], "type": [0, 92, 114, 115, 116, 118, 131, 133, 136, 141, 142, 143, 144, 146, 147, 148, 174, 176, 180, 185, 187, 213, 214, 228, 229, 240, 292, 293, 305, 329, 330, 331, 338, 359, 371, 372, 373, 384, 385, 390, 391, 402, 403, 424, 452, 629, 630, 633, 652, 653, 667, 668, 688, 704, 705, 706, 707, 709, 711, 713, 714, 717, 720, 724, 727, 733, 735, 737, 755, 767, 769, 770, 771, 775, 776, 777, 778, 779, 780, 782, 783, 784, 785, 788, 789, 790, 791, 792, 794, 796, 797, 798, 799, 800, 802, 803, 804, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 822, 823, 825, 826, 827, 828, 830, 831, 832, 833, 834, 835, 836, 837, 838, 862, 863, 865, 868, 870, 893, 894, 896, 898, 931, 933, 935, 937, 939, 942, 944, 947, 954, 956, 959, 962, 963, 964, 983, 984, 985, 991, 993, 1001, 1002, 1003, 1006, 1007, 1025, 1026, 1027, 1028, 1038, 1041, 1067, 1068, 1070, 1079, 1094, 1103, 1107, 1108, 1113, 1120, 1124, 1128, 1129, 1130, 1133, 1134, 1135, 1140, 1142, 1144, 1165, 1174, 1176, 1180, 1181, 1182, 1184, 1189, 1193, 1194, 1207, 1209, 1211, 1212, 1217, 1254, 1300, 1301, 1304, 1305, 1306, 1308], "onli": [0, 4, 5, 185, 441, 628, 629, 665, 709, 713, 715, 724, 732, 733, 734, 735, 740, 742, 746, 758, 759, 760, 787, 796, 827, 837, 861, 863, 865, 870, 898, 931, 937, 956, 959, 963, 964, 984, 987, 992, 996, 1002, 1006, 1007, 1024, 1025, 1026, 1027, 1028, 1068, 1134, 1135, 1167, 1169, 1174, 1177, 1179, 1182, 1207, 1209, 1213, 1300, 1301, 1304, 1306, 1308, 1309], "ad": [0, 4, 178, 185, 385, 663, 665, 713, 720, 740, 779, 788, 789, 790, 791, 796, 797, 799, 800, 803, 806, 807, 823, 825, 827, 828, 862, 870, 1070, 1133, 1174, 1297, 1301, 1304, 1306, 1308], "local": [0, 363, 891, 1272, 1304, 1306], "site": [0, 32, 402, 663, 665, 865, 931, 933, 935, 937, 939, 942, 944, 993, 1124, 1125, 1126, 1144, 1164, 1165, 1167, 1169, 1180, 1189, 1193, 1194, 1200, 1207, 1209, 1210, 1300, 1301, 1304, 1306, 1309], "which": [0, 5, 54, 115, 117, 118, 177, 185, 244, 301, 307, 329, 360, 364, 372, 434, 452, 635, 667, 711, 713, 718, 719, 720, 727, 733, 760, 779, 782, 787, 789, 796, 827, 863, 870, 898, 900, 937, 939, 959, 962, 1010, 1041, 1044, 1144, 1167, 1168, 1169, 1174, 1180, 1194, 1207, 1209, 1213, 1304, 1306, 1308, 1309], "changesy": [0, 1304, 1306], "make": [0, 18, 113, 116, 118, 129, 148, 178, 382, 434, 440, 452, 536, 537, 549, 698, 849, 865, 866, 896, 1194, 1209, 1301, 1304, 1306, 1309], "publish": [0, 1304, 1306], "io": [0, 7, 8, 387, 667, 1300, 1304, 1306, 1308], "ar": [0, 4, 5, 117, 185, 202, 240, 296, 329, 382, 385, 452, 517, 518, 541, 542, 551, 568, 598, 601, 602, 628, 629, 665, 667, 704, 709, 710, 711, 713, 717, 718, 719, 724, 732, 733, 735, 737, 740, 758, 759, 760, 767, 782, 794, 822, 824, 827, 831, 832, 836, 837, 865, 870, 896, 898, 900, 931, 933, 935, 937, 939, 942, 944, 956, 958, 959, 962, 963, 964, 987, 992, 996, 1006, 1007, 1024, 1025, 1026, 1027, 1028, 1041, 1044, 1064, 1066, 1067, 1068, 1071, 1133, 1134, 1135, 1137, 1138, 1144, 1167, 1169, 1173, 1174, 1175, 1176, 1177, 1179, 1182, 1186, 1188, 1189, 1194, 1201, 1209, 1210, 1287, 1301, 1304, 1306, 1308, 1309], "open": [0, 387, 713, 733, 870, 898, 959, 1174, 1304, 1306], "index": [0, 288, 289, 330, 368, 370, 373, 452, 724, 760, 857, 865, 896, 993, 1172, 1207, 1304, 1305, 1306], "html": [0, 41, 118, 120, 667, 1174, 1304, 1306], "offlin": [0, 1304, 1306], "contain": [0, 3, 38, 45, 49, 52, 61, 66, 91, 118, 121, 123, 142, 210, 222, 274, 288, 289, 290, 299, 305, 312, 317, 323, 327, 338, 348, 355, 356, 359, 363, 368, 378, 384, 401, 420, 423, 424, 426, 437, 441, 446, 447, 452, 522, 523, 549, 652, 653, 658, 667, 703, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 720, 721, 724, 727, 728, 732, 733, 734, 735, 755, 758, 759, 760, 775, 782, 787, 821, 824, 827, 861, 862, 864, 865, 870, 889, 894, 898, 901, 930, 931, 933, 935, 937, 939, 942, 944, 956, 958, 959, 960, 961, 962, 963, 964, 983, 984, 985, 987, 988, 992, 993, 996, 997, 1001, 1002, 1003, 1006, 1007, 1009, 1023, 1024, 1025, 1026, 1027, 1028, 1032, 1041, 1043, 1058, 1059, 1063, 1067, 1068, 1071, 1074, 1077, 1078, 1079, 1082, 1083, 1086, 1087, 1090, 1091, 1094, 1095, 1098, 1099, 1102, 1103, 1104, 1107, 1108, 1111, 1112, 1113, 1116, 1117, 1119, 1120, 1121, 1124, 1125, 1128, 1129, 1131, 1132, 1133, 1134, 1135, 1138, 1139, 1141, 1142, 1144, 1167, 1168, 1172, 1174, 1176, 1177, 1178, 1179, 1180, 1181, 1182, 1183, 1184, 1185, 1189, 1208, 1209, 1213, 1217, 1218, 1304, 1306, 1308, 1309], "part": [0, 4, 712, 719, 724, 865, 868, 931, 933, 935, 937, 939, 942, 944, 1024, 1026, 1066, 1167, 1169, 1304, 1306, 1308], "gener": [0, 3, 117, 118, 394, 399, 401, 404, 407, 408, 409, 410, 411, 412, 413, 417, 452, 522, 523, 655, 713, 720, 721, 724, 732, 739, 751, 757, 758, 760, 827, 861, 865, 870, 898, 921, 924, 931, 964, 1007, 1025, 1027, 1028, 1058, 1068, 1079, 1086, 1094, 1103, 1107, 1113, 1120, 1124, 1134, 1137, 1140, 1174, 1182, 1209, 1287, 1288, 1301, 1302, 1303, 1304, 1305, 1306, 1308], "docstr": [0, 133, 148, 750, 751, 1301, 1304, 1306], "regener": [0, 1304, 1306], "sphinx": [0, 1304, 1306], "toolbox": [0, 1304, 1306], "pandoc": [0, 1304, 1306], "readm": [0, 1304, 1306], "md": [0, 385, 1304, 1306], "need": [0, 149, 296, 387, 452, 667, 727, 739, 863, 898, 964, 1007, 1174, 1189, 1209, 1301, 1304, 1306, 1308, 1309], "offici": [0, 1304, 1306], "miss": [0, 146, 452, 709, 724, 758, 759, 760, 898, 959, 964, 1007, 1025, 1027, 1028, 1068, 1134, 1176, 1182, 1289, 1304, 1306], "attribut": [0, 118, 129, 703, 716, 720, 724, 738, 746, 761, 775, 776, 782, 786, 826, 827, 896, 898, 901, 930, 931, 933, 935, 937, 939, 942, 944, 946, 1025, 1037, 1059, 1063, 1072, 1174, 1209, 1301, 1304, 1306, 1309], "when": [0, 124, 127, 384, 385, 452, 518, 543, 547, 629, 665, 720, 724, 727, 732, 735, 745, 758, 759, 760, 782, 863, 865, 898, 964, 1007, 1025, 1027, 1028, 1068, 1079, 1094, 1103, 1107, 1113, 1120, 1124, 1134, 1140, 1174, 1182, 1194, 1209, 1304, 1306, 1308, 1309], "so": [0, 5, 398, 424, 447, 711, 724, 732, 746, 758, 759, 760, 777, 778, 779, 782, 787, 790, 791, 792, 797, 799, 806, 822, 823, 824, 827, 831, 836, 853, 863, 865, 959, 961, 1058, 1079, 1103, 1108, 1113, 1120, 1124, 1131, 1133, 1140, 1173, 1174, 1189, 1194, 1209, 1301, 1304, 1306, 1308, 1309], "till": [0, 1304, 1306], "pullrequest": [0, 1304, 1306, 1309], "correct": [0, 296, 304, 516, 544, 568, 720, 1219, 1301, 1304, 1306, 1309], "behavior": [0, 720, 724, 735, 822, 898, 1025, 1304, 1306], "merg": [0, 5, 177, 732, 733, 734, 735, 896, 956, 963, 987, 992, 996, 1006, 1026, 1135, 1177, 1179, 1300, 1301, 1304, 1306], "follow": [0, 401, 402, 727, 740, 824, 1172, 1174, 1304, 1306, 1308, 1309], "fork": [0, 1304, 1306], "lokik": [0, 1304, 1306], "pull": [0, 1304, 1306], "request": [0, 439, 441, 445, 667, 1174, 1304, 1306, 1309], "post": [0, 1304, 1306, 1309], "issu": [0, 724, 758, 759, 760, 900, 1304, 1306, 1309], "full": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 28, 29, 31, 32, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 46, 47, 48, 50, 51, 53, 54, 55, 56, 57, 58, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 114, 115, 116, 117, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 275, 276, 277, 278, 279, 280, 282, 283, 284, 285, 286, 287, 291, 292, 293, 294, 295, 296, 297, 298, 300, 301, 302, 303, 304, 306, 307, 308, 309, 310, 311, 313, 314, 315, 316, 318, 319, 320, 321, 322, 324, 325, 326, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 339, 340, 341, 342, 343, 344, 345, 346, 347, 349, 350, 351, 352, 353, 354, 355, 357, 358, 360, 361, 362, 364, 365, 366, 367, 369, 370, 371, 372, 373, 374, 375, 376, 377, 379, 380, 381, 382, 386, 388, 389, 390, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 421, 422, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 470, 471, 472, 474, 476, 478, 480, 481, 483, 484, 485, 486, 487, 488, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 661, 662, 663, 664, 665, 666, 668, 669, 670, 672, 673, 674, 675, 676, 678, 679, 681, 683, 684, 685, 686, 687, 688, 689, 690, 692, 693, 694, 695, 696, 698, 699, 700, 702, 703, 704, 705, 706, 707, 708, 709, 710, 713, 719, 729, 730, 731, 736, 737, 738, 739, 740, 741, 746, 747, 748, 750, 751, 752, 753, 754, 755, 756, 757, 761, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 783, 784, 785, 786, 793, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 826, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 841, 843, 844, 845, 846, 847, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 860, 866, 869, 870, 871, 872, 873, 874, 875, 876, 878, 879, 880, 881, 882, 884, 885, 887, 889, 890, 891, 892, 893, 894, 895, 897, 899, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 923, 924, 925, 926, 927, 928, 929, 930, 931, 932, 933, 934, 935, 936, 937, 938, 939, 940, 941, 942, 943, 944, 945, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 957, 958, 959, 961, 965, 966, 968, 969, 970, 971, 972, 974, 975, 977, 979, 980, 981, 986, 989, 990, 994, 995, 998, 999, 1004, 1009, 1010, 1011, 1012, 1014, 1015, 1016, 1017, 1018, 1020, 1021, 1023, 1024, 1029, 1030, 1033, 1037, 1042, 1043, 1046, 1047, 1049, 1050, 1051, 1052, 1053, 1055, 1056, 1058, 1059, 1062, 1063, 1064, 1065, 1066, 1071, 1072, 1073, 1074, 1075, 1076, 1081, 1085, 1089, 1093, 1097, 1101, 1106, 1110, 1115, 1119, 1123, 1127, 1131, 1137, 1143, 1145, 1146, 1148, 1149, 1150, 1151, 1152, 1154, 1155, 1157, 1159, 1161, 1163, 1164, 1166, 1168, 1169, 1170, 1171, 1172, 1175, 1176, 1180, 1186, 1190, 1191, 1193, 1195, 1199, 1202, 1203, 1205, 1208, 1210, 1213, 1216, 1217, 1218, 1219, 1220, 1221, 1222, 1224, 1225, 1226, 1227, 1228, 1230, 1231, 1233, 1235, 1237, 1238, 1240, 1242, 1244, 1246, 1247, 1248, 1249, 1250, 1251, 1252, 1253, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1265, 1266, 1267, 1268, 1269, 1270, 1271, 1272, 1273, 1274, 1276, 1277, 1278, 1279, 1280, 1282, 1283, 1285, 1286, 1287, 1289, 1290, 1291, 1292, 1293, 1294, 1295, 1296, 1297, 1298, 1299], "name": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 28, 29, 31, 32, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 46, 47, 48, 50, 51, 53, 54, 55, 56, 57, 58, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 114, 115, 116, 117, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 275, 276, 277, 278, 279, 280, 282, 283, 284, 285, 286, 287, 291, 292, 293, 294, 295, 296, 297, 298, 300, 301, 302, 303, 304, 306, 307, 308, 309, 310, 311, 313, 314, 315, 316, 318, 319, 320, 321, 322, 324, 325, 326, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 339, 340, 341, 342, 343, 344, 345, 346, 347, 349, 350, 351, 352, 353, 354, 355, 357, 358, 360, 361, 362, 364, 365, 366, 367, 369, 370, 371, 372, 373, 374, 375, 376, 377, 379, 380, 381, 382, 386, 387, 388, 389, 390, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 421, 422, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 470, 471, 472, 474, 476, 478, 480, 481, 483, 484, 485, 486, 487, 488, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 672, 673, 674, 675, 676, 678, 679, 681, 683, 684, 685, 686, 687, 688, 689, 690, 692, 693, 694, 695, 696, 698, 699, 700, 702, 703, 704, 705, 706, 707, 708, 709, 710, 713, 714, 717, 719, 720, 721, 722, 724, 726, 727, 728, 729, 730, 731, 732, 733, 735, 736, 737, 738, 739, 740, 741, 746, 747, 748, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 779, 780, 782, 783, 784, 785, 786, 787, 790, 791, 792, 793, 796, 797, 798, 799, 800, 803, 804, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 825, 826, 827, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 841, 843, 844, 845, 846, 847, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 860, 861, 865, 866, 869, 870, 871, 872, 873, 874, 875, 876, 878, 879, 880, 881, 882, 884, 885, 887, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 923, 924, 925, 926, 927, 928, 929, 930, 931, 932, 933, 934, 935, 936, 937, 938, 939, 940, 941, 942, 943, 944, 945, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 961, 962, 963, 964, 965, 966, 968, 969, 970, 971, 972, 974, 975, 977, 979, 980, 981, 986, 987, 989, 990, 992, 994, 995, 996, 998, 999, 1004, 1006, 1007, 1009, 1010, 1011, 1012, 1014, 1015, 1016, 1017, 1018, 1020, 1021, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1032, 1033, 1037, 1038, 1041, 1042, 1043, 1046, 1047, 1049, 1050, 1051, 1052, 1053, 1055, 1056, 1058, 1059, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1078, 1079, 1081, 1083, 1085, 1087, 1089, 1091, 1093, 1095, 1097, 1098, 1099, 1101, 1103, 1104, 1106, 1108, 1110, 1112, 1113, 1115, 1116, 1117, 1119, 1120, 1121, 1123, 1124, 1125, 1127, 1128, 1129, 1131, 1132, 1133, 1134, 1135, 1137, 1138, 1140, 1142, 1143, 1145, 1146, 1148, 1149, 1150, 1151, 1152, 1154, 1155, 1157, 1159, 1161, 1163, 1164, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1174, 1175, 1177, 1179, 1182, 1186, 1190, 1191, 1193, 1194, 1195, 1199, 1202, 1203, 1205, 1208, 1209, 1210, 1213, 1216, 1217, 1218, 1219, 1220, 1221, 1222, 1224, 1225, 1226, 1227, 1228, 1230, 1231, 1233, 1235, 1237, 1238, 1240, 1242, 1244, 1246, 1247, 1248, 1249, 1250, 1251, 1252, 1253, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1265, 1266, 1267, 1268, 1269, 1270, 1271, 1272, 1273, 1274, 1276, 1277, 1278, 1279, 1280, 1282, 1283, 1285, 1286, 1287, 1289, 1290, 1291, 1292, 1293, 1294, 1295, 1296, 1297, 1298, 1299, 1301, 1308, 1309], "descript": [1, 2, 3, 6, 9, 11, 16, 19, 20, 29, 31, 33, 34, 35, 37, 44, 48, 51, 56, 58, 90, 98, 99, 109, 110, 112, 117, 118, 125, 133, 134, 140, 141, 145, 146, 147, 149, 165, 166, 169, 170, 181, 182, 183, 188, 192, 193, 197, 198, 201, 209, 212, 216, 220, 250, 252, 273, 280, 287, 298, 303, 311, 316, 322, 326, 337, 347, 355, 358, 362, 367, 376, 377, 382, 390, 393, 394, 399, 404, 409, 410, 411, 412, 413, 417, 419, 422, 426, 427, 428, 430, 432, 434, 437, 446, 447, 448, 449, 451, 458, 459, 460, 463, 468, 471, 472, 474, 476, 478, 481, 483, 484, 486, 488, 490, 491, 492, 493, 495, 498, 500, 502, 511, 513, 519, 521, 522, 523, 529, 533, 539, 548, 552, 555, 560, 562, 565, 569, 571, 573, 576, 578, 580, 584, 586, 588, 590, 592, 600, 604, 606, 610, 613, 615, 617, 620, 622, 625, 626, 628, 631, 634, 636, 639, 644, 649, 655, 657, 658, 659, 664, 666, 667, 669, 670, 679, 681, 683, 684, 686, 689, 690, 700, 702, 703, 708, 710, 719, 720, 724, 731, 733, 735, 738, 748, 750, 753, 757, 758, 759, 760, 761, 775, 776, 786, 787, 788, 789, 790, 791, 792, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 807, 808, 821, 822, 823, 824, 825, 826, 827, 828, 835, 839, 841, 851, 858, 860, 866, 869, 871, 875, 876, 885, 887, 889, 895, 897, 898, 899, 901, 904, 905, 906, 908, 909, 911, 912, 914, 915, 917, 918, 920, 921, 923, 924, 926, 927, 929, 930, 931, 933, 935, 937, 939, 941, 942, 944, 946, 956, 958, 961, 963, 964, 965, 966, 975, 977, 980, 981, 986, 990, 995, 999, 1004, 1007, 1011, 1012, 1021, 1023, 1024, 1026, 1029, 1030, 1033, 1037, 1038, 1043, 1046, 1047, 1056, 1058, 1059, 1063, 1065, 1066, 1068, 1070, 1071, 1072, 1074, 1076, 1081, 1085, 1089, 1093, 1097, 1101, 1106, 1110, 1115, 1119, 1123, 1127, 1131, 1137, 1143, 1145, 1146, 1155, 1157, 1159, 1161, 1163, 1164, 1166, 1168, 1172, 1175, 1179, 1182, 1186, 1191, 1193, 1195, 1199, 1203, 1205, 1208, 1210, 1211, 1212, 1213, 1218, 1221, 1222, 1231, 1233, 1235, 1238, 1240, 1242, 1244, 1246, 1247, 1249, 1250, 1253, 1259, 1262, 1265, 1268, 1271, 1273, 1274, 1283, 1285, 1286, 1287], "root": [1, 465, 709, 732, 1176, 1177], "packag": [1, 426, 447, 658, 664, 698, 702, 849, 851, 904, 933, 939, 944, 1023, 1071, 1074, 1209, 1285, 1307, 1309], "import": [1, 33, 117, 185, 426, 434, 446, 698, 787, 849, 865, 1075, 1206, 1207, 1309], "few": [1, 735, 761, 807, 823, 1174, 1297, 1308], "most": [1, 117, 185, 208, 656, 737, 799, 827, 852, 894, 903, 1068, 1206, 1207, 1309], "us": [1, 4, 20, 32, 117, 125, 141, 149, 304, 371, 382, 385, 387, 401, 426, 452, 633, 643, 652, 665, 667, 670, 687, 688, 690, 702, 709, 715, 720, 724, 732, 735, 739, 755, 758, 759, 760, 761, 777, 778, 779, 780, 784, 785, 787, 788, 789, 790, 791, 796, 797, 799, 800, 802, 803, 806, 807, 821, 823, 825, 827, 828, 841, 851, 863, 865, 876, 896, 898, 912, 931, 933, 935, 937, 939, 942, 944, 946, 959, 964, 966, 1007, 1012, 1024, 1025, 1027, 1028, 1041, 1042, 1043, 1044, 1047, 1061, 1068, 1070, 1071, 1074, 1079, 1086, 1094, 1103, 1107, 1113, 1119, 1120, 1124, 1134, 1140, 1142, 1144, 1146, 1163, 1165, 1167, 1168, 1169, 1172, 1173, 1174, 1176, 1178, 1182, 1183, 1185, 1186, 1187, 1189, 1194, 1199, 1207, 1208, 1209, 1213, 1218, 1222, 1274, 1288, 1301, 1302, 1303, 1305, 1307, 1308], "object": [1, 5, 112, 113, 117, 118, 119, 120, 122, 123, 125, 126, 129, 131, 134, 136, 139, 140, 141, 146, 147, 151, 328, 369, 387, 391, 445, 452, 457, 522, 524, 643, 650, 651, 652, 667, 668, 709, 711, 713, 718, 719, 720, 721, 723, 724, 727, 728, 733, 735, 758, 759, 760, 762, 763, 779, 787, 788, 789, 790, 791, 796, 797, 799, 800, 801, 802, 803, 806, 807, 823, 825, 827, 828, 832, 852, 853, 861, 862, 864, 865, 870, 895, 896, 898, 958, 959, 964, 984, 985, 991, 1002, 1003, 1007, 1025, 1027, 1028, 1032, 1041, 1059, 1061, 1067, 1068, 1069, 1070, 1079, 1086, 1094, 1103, 1107, 1113, 1120, 1124, 1134, 1138, 1140, 1142, 1143, 1144, 1166, 1167, 1169, 1170, 1174, 1180, 1181, 1182, 1184, 1186, 1187, 1188, 1194, 1207, 1209, 1214, 1217, 1219, 1293, 1308], "shortcut": [1, 174, 1174], "modul": [1, 2, 3, 19, 20, 29, 33, 34, 37, 44, 48, 51, 58, 90, 98, 112, 117, 139, 145, 165, 166, 209, 220, 273, 280, 287, 298, 303, 311, 316, 322, 326, 337, 347, 355, 358, 362, 367, 377, 382, 390, 393, 404, 419, 422, 426, 427, 437, 446, 447, 448, 451, 458, 468, 471, 472, 474, 476, 478, 481, 483, 488, 490, 521, 600, 625, 628, 649, 657, 658, 659, 666, 669, 670, 679, 681, 683, 689, 690, 700, 702, 703, 708, 710, 719, 731, 738, 748, 751, 757, 761, 775, 776, 786, 787, 821, 826, 841, 858, 860, 866, 869, 872, 874, 875, 876, 885, 887, 889, 895, 897, 899, 901, 904, 905, 908, 911, 914, 917, 920, 923, 926, 929, 930, 931, 933, 935, 937, 939, 942, 944, 946, 958, 961, 965, 966, 975, 977, 980, 981, 984, 986, 990, 995, 999, 1002, 1004, 1011, 1012, 1021, 1023, 1024, 1029, 1030, 1033, 1037, 1043, 1046, 1047, 1056, 1058, 1059, 1063, 1065, 1066, 1071, 1072, 1074, 1075, 1076, 1081, 1085, 1089, 1093, 1097, 1101, 1106, 1110, 1115, 1119, 1123, 1127, 1131, 1137, 1143, 1145, 1146, 1155, 1157, 1159, 1161, 1163, 1164, 1166, 1168, 1175, 1186, 1191, 1193, 1195, 1199, 1203, 1205, 1208, 1210, 1213, 1218, 1221, 1222, 1231, 1233, 1235, 1238, 1240, 1242, 1244, 1246, 1249, 1253, 1273, 1274, 1283, 1286, 1287, 1300, 1305, 1308], "ase2sprkkr": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 125, 126, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 923, 924, 925, 926, 927, 928, 929, 930, 931, 932, 933, 934, 935, 936, 937, 938, 939, 940, 941, 942, 943, 944, 945, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 966, 967, 968, 969, 970, 971, 972, 973, 974, 975, 976, 977, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1144, 1145, 1146, 1147, 1148, 1149, 1150, 1151, 1152, 1153, 1154, 1155, 1156, 1157, 1158, 1159, 1160, 1161, 1162, 1163, 1164, 1165, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1174, 1175, 1176, 1177, 1178, 1179, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 1194, 1195, 1196, 1197, 1198, 1199, 1200, 1201, 1202, 1203, 1204, 1205, 1206, 1207, 1208, 1209, 1210, 1211, 1212, 1213, 1214, 1215, 1216, 1217, 1218, 1219, 1220, 1221, 1222, 1223, 1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1238, 1239, 1240, 1241, 1242, 1243, 1244, 1245, 1246, 1248, 1249, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1265, 1266, 1267, 1268, 1269, 1270, 1271, 1272, 1273, 1274, 1275, 1276, 1277, 1278, 1279, 1280, 1281, 1282, 1283, 1284, 1285, 1286, 1287, 1288, 1289, 1290, 1291, 1292, 1293, 1294, 1295, 1296, 1297, 1298, 1299, 1301, 1306, 1307, 1308], "ase": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 112, 113, 146, 369, 382, 385, 387, 445, 451, 452, 651, 652, 1167, 1170, 1172, 1174, 1208, 1209, 1300, 1309], "routin": [3, 16, 20, 658, 670, 690, 709, 753, 761, 779, 788, 789, 790, 791, 796, 797, 799, 800, 803, 806, 807, 823, 825, 827, 828, 841, 851, 868, 876, 959, 966, 1012, 1047, 1065, 1070, 1146, 1168, 1176, 1180, 1209, 1222, 1274, 1287, 1301, 1308], "materi": [3, 114, 115, 116, 185, 296, 323, 390, 423, 426, 441, 445, 452, 1064, 1300, 1305], "unlik": [3, 720, 896, 1180, 1209], "sprkkr": [3, 33, 663, 702, 712, 782, 865, 902, 909, 921, 924, 930, 931, 933, 935, 937, 939, 942, 944, 946, 956, 958, 959, 960, 961, 962, 963, 964, 981, 983, 984, 985, 986, 987, 988, 990, 992, 993, 995, 996, 997, 999, 1001, 1002, 1003, 1004, 1006, 1007, 1061, 1065, 1066, 1067, 1068, 1071, 1076, 1077, 1078, 1079, 1081, 1082, 1083, 1085, 1086, 1087, 1089, 1090, 1091, 1093, 1094, 1095, 1097, 1098, 1099, 1101, 1102, 1103, 1104, 1106, 1107, 1108, 1110, 1111, 1112, 1113, 1115, 1116, 1117, 1119, 1120, 1121, 1123, 1124, 1125, 1127, 1128, 1129, 1131, 1132, 1133, 1134, 1135, 1137, 1138, 1139, 1141, 1142, 1143, 1144, 1164, 1165, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1175, 1176, 1177, 1178, 1179, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 1194, 1195, 1196, 1197, 1198, 1199, 1200, 1201, 1202, 1203, 1204, 1205, 1206, 1207, 1208, 1209, 1210, 1211, 1212, 1213, 1214, 1215, 1216, 1217, 1218, 1219, 1220, 1221, 1222, 1223, 1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1238, 1239, 1240, 1241, 1242, 1243, 1244, 1245, 1300, 1302, 1303, 1305, 1309], "possibl": [3, 185, 369, 402, 633, 713, 724, 727, 782, 796, 799, 801, 808, 827, 865, 866, 870, 896, 898, 903, 931, 933, 935, 937, 939, 942, 944, 959, 1028, 1061, 1209, 1301, 1308, 1309], "usabl": [3, 1209], "plain": 3, "ani": [3, 38, 45, 49, 52, 66, 91, 92, 118, 121, 174, 176, 210, 222, 274, 288, 289, 290, 299, 305, 312, 317, 323, 327, 338, 348, 356, 359, 363, 368, 378, 382, 384, 392, 420, 423, 452, 522, 523, 711, 713, 732, 733, 735, 736, 760, 782, 784, 785, 787, 788, 789, 790, 791, 792, 794, 795, 796, 797, 798, 800, 801, 802, 803, 804, 807, 808, 822, 823, 824, 825, 827, 828, 865, 870, 893, 896, 931, 933, 935, 937, 939, 942, 944, 956, 963, 984, 987, 992, 996, 1002, 1006, 1026, 1038, 1066, 1070, 1135, 1174, 1177, 1179, 1180, 1211, 1212, 1301, 1308, 1309], "function": [3, 5, 6, 9, 11, 16, 20, 31, 35, 37, 38, 44, 45, 48, 49, 51, 52, 56, 58, 66, 90, 91, 98, 99, 110, 112, 117, 126, 141, 145, 166, 178, 183, 188, 193, 198, 201, 205, 206, 207, 208, 209, 210, 212, 216, 220, 222, 250, 252, 273, 274, 280, 287, 289, 298, 299, 303, 305, 311, 312, 316, 317, 322, 323, 326, 327, 332, 337, 338, 347, 348, 355, 356, 358, 359, 362, 363, 367, 368, 377, 378, 382, 387, 390, 394, 399, 404, 413, 417, 419, 420, 422, 423, 428, 430, 432, 434, 437, 442, 449, 452, 460, 463, 468, 478, 484, 486, 493, 495, 498, 500, 502, 511, 513, 519, 521, 529, 533, 539, 548, 552, 555, 560, 562, 565, 569, 571, 573, 576, 578, 580, 584, 586, 588, 590, 592, 600, 604, 606, 610, 613, 615, 617, 620, 622, 626, 628, 631, 634, 636, 639, 644, 649, 655, 659, 664, 665, 666, 670, 684, 686, 690, 703, 714, 719, 720, 731, 733, 738, 739, 740, 750, 753, 760, 761, 779, 786, 788, 789, 790, 791, 796, 797, 799, 800, 803, 806, 807, 823, 825, 826, 827, 828, 841, 851, 857, 858, 859, 862, 865, 868, 871, 876, 889, 891, 894, 898, 906, 909, 912, 915, 918, 921, 924, 927, 946, 961, 966, 977, 982, 986, 988, 990, 991, 995, 1000, 1004, 1012, 1041, 1047, 1070, 1074, 1079, 1086, 1094, 1103, 1107, 1108, 1113, 1120, 1124, 1131, 1133, 1140, 1144, 1146, 1168, 1170, 1173, 1174, 1186, 1188, 1190, 1199, 1213, 1218, 1222, 1235, 1247, 1250, 1253, 1259, 1262, 1265, 1268, 1271, 1274, 1287, 1290, 1297, 1299, 1302, 1303, 1309], "time": [4, 118, 123, 398, 720, 1144, 1169, 1174, 1180, 1309], "axi": [4, 5, 32, 317, 452, 543, 760, 931, 991, 1169, 1170, 1291, 1297, 1298], "none": [4, 5, 21, 32, 38, 42, 45, 49, 52, 60, 66, 91, 100, 103, 104, 105, 106, 107, 108, 113, 116, 118, 121, 125, 146, 153, 157, 162, 174, 186, 194, 210, 214, 218, 222, 228, 229, 237, 244, 245, 251, 261, 271, 274, 275, 277, 278, 288, 289, 290, 299, 305, 312, 317, 323, 327, 338, 348, 356, 359, 363, 368, 378, 384, 385, 387, 388, 418, 420, 423, 452, 453, 456, 457, 473, 477, 480, 485, 522, 523, 544, 629, 632, 633, 642, 643, 650, 651, 665, 667, 668, 671, 685, 691, 709, 711, 712, 713, 714, 717, 718, 720, 721, 722, 723, 724, 725, 726, 727, 728, 730, 732, 733, 735, 740, 742, 743, 744, 745, 758, 759, 760, 762, 765, 777, 778, 779, 780, 782, 787, 788, 789, 790, 791, 792, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 806, 807, 808, 822, 823, 824, 825, 827, 828, 830, 842, 861, 862, 863, 864, 865, 868, 870, 874, 877, 894, 896, 898, 903, 956, 959, 960, 962, 963, 964, 967, 978, 983, 984, 985, 988, 991, 993, 997, 1001, 1002, 1003, 1005, 1006, 1007, 1008, 1009, 1013, 1025, 1026, 1027, 1028, 1032, 1036, 1038, 1041, 1044, 1045, 1048, 1061, 1067, 1068, 1070, 1077, 1079, 1082, 1086, 1090, 1094, 1098, 1102, 1103, 1107, 1111, 1113, 1116, 1120, 1124, 1128, 1134, 1136, 1138, 1139, 1140, 1141, 1142, 1144, 1147, 1165, 1167, 1169, 1174, 1176, 1178, 1179, 1180, 1181, 1182, 1183, 1184, 1185, 1188, 1194, 1198, 1206, 1207, 1209, 1211, 1212, 1223, 1254, 1275, 1288, 1289, 1291, 1295, 1298, 1299, 1309], "direct": [4, 52, 53, 288, 289, 295, 296, 299, 305, 312, 317, 452, 473, 724, 732, 733, 735, 758, 759, 760, 931, 933, 937, 939, 944, 956, 963, 987, 992, 996, 1006, 1026, 1135, 1138, 1177, 1179], "1": [4, 5, 42, 118, 122, 123, 223, 228, 229, 241, 243, 278, 282, 333, 348, 386, 416, 420, 452, 453, 473, 480, 522, 629, 665, 667, 727, 729, 733, 737, 747, 755, 760, 780, 782, 794, 797, 859, 894, 896, 931, 933, 935, 937, 939, 942, 944, 991, 1061, 1062, 1064, 1194, 1200, 1207, 1293, 1305, 1308, 1309], "sourc": [4, 5, 7, 8, 10, 12, 13, 14, 15, 17, 18, 21, 22, 23, 24, 27, 28, 30, 32, 36, 38, 39, 40, 41, 42, 43, 45, 46, 47, 49, 50, 52, 53, 54, 55, 57, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 91, 92, 93, 94, 95, 96, 97, 100, 101, 102, 103, 104, 105, 106, 107, 108, 111, 113, 114, 115, 116, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 146, 147, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 184, 185, 186, 187, 189, 190, 191, 194, 195, 196, 199, 200, 202, 203, 204, 205, 206, 207, 208, 210, 211, 213, 214, 215, 217, 218, 219, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 251, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 274, 275, 276, 277, 278, 279, 281, 282, 283, 284, 285, 286, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 299, 300, 301, 302, 304, 305, 306, 307, 308, 309, 310, 312, 313, 314, 315, 317, 318, 319, 320, 321, 323, 324, 325, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 338, 339, 340, 341, 342, 343, 344, 345, 346, 348, 349, 350, 351, 352, 353, 354, 356, 357, 359, 360, 361, 363, 364, 365, 366, 368, 369, 370, 371, 372, 373, 374, 375, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 391, 392, 395, 396, 397, 398, 400, 401, 402, 403, 405, 406, 407, 408, 414, 415, 416, 418, 420, 421, 423, 424, 425, 429, 431, 433, 435, 436, 438, 439, 440, 441, 442, 443, 444, 445, 450, 452, 453, 454, 455, 456, 457, 461, 462, 464, 465, 466, 467, 469, 470, 473, 475, 477, 479, 480, 482, 485, 487, 489, 494, 496, 497, 499, 501, 503, 504, 505, 506, 507, 508, 509, 510, 512, 514, 515, 516, 517, 518, 520, 522, 523, 524, 525, 526, 527, 528, 530, 531, 532, 534, 535, 536, 537, 538, 540, 541, 542, 543, 544, 545, 546, 547, 549, 550, 551, 553, 554, 556, 557, 558, 559, 561, 563, 564, 566, 567, 568, 570, 572, 574, 575, 577, 579, 581, 582, 583, 585, 587, 589, 591, 593, 594, 595, 596, 597, 598, 599, 601, 602, 603, 605, 607, 608, 609, 611, 612, 614, 616, 618, 619, 621, 623, 624, 627, 629, 630, 632, 633, 635, 637, 638, 640, 641, 642, 643, 645, 646, 647, 648, 650, 651, 652, 653, 654, 656, 660, 661, 662, 663, 665, 667, 668, 671, 672, 673, 674, 677, 678, 680, 682, 691, 692, 693, 694, 697, 698, 699, 701, 705, 709, 711, 712, 713, 714, 715, 716, 717, 718, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 732, 733, 734, 735, 736, 737, 739, 740, 741, 742, 743, 744, 745, 747, 749, 751, 752, 754, 755, 756, 758, 759, 760, 762, 763, 764, 765, 766, 768, 772, 773, 774, 777, 778, 779, 780, 781, 782, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 822, 823, 824, 825, 827, 828, 829, 830, 832, 833, 834, 840, 842, 843, 844, 845, 848, 849, 850, 852, 853, 854, 855, 856, 857, 859, 861, 862, 863, 864, 865, 867, 868, 870, 872, 873, 874, 877, 878, 879, 880, 883, 884, 886, 888, 890, 891, 892, 893, 894, 896, 898, 900, 907, 910, 913, 916, 919, 922, 925, 928, 947, 954, 956, 957, 959, 960, 962, 963, 964, 967, 968, 969, 970, 973, 974, 976, 978, 979, 982, 983, 984, 985, 987, 988, 989, 991, 992, 993, 994, 996, 997, 998, 1000, 1001, 1002, 1003, 1005, 1006, 1007, 1008, 1009, 1010, 1013, 1014, 1015, 1016, 1019, 1020, 1022, 1025, 1026, 1027, 1028, 1031, 1032, 1034, 1035, 1036, 1038, 1039, 1040, 1041, 1044, 1045, 1048, 1049, 1050, 1051, 1054, 1055, 1057, 1060, 1061, 1067, 1068, 1069, 1070, 1075, 1077, 1078, 1079, 1082, 1083, 1086, 1087, 1090, 1091, 1094, 1095, 1098, 1099, 1102, 1103, 1104, 1107, 1108, 1111, 1112, 1113, 1116, 1117, 1120, 1121, 1124, 1125, 1128, 1129, 1132, 1133, 1134, 1135, 1136, 1138, 1139, 1140, 1141, 1142, 1144, 1147, 1148, 1149, 1150, 1153, 1154, 1156, 1158, 1160, 1162, 1165, 1167, 1169, 1170, 1171, 1173, 1174, 1176, 1177, 1178, 1179, 1180, 1181, 1182, 1183, 1184, 1185, 1187, 1188, 1189, 1190, 1192, 1194, 1196, 1197, 1198, 1200, 1201, 1202, 1204, 1206, 1207, 1209, 1211, 1212, 1214, 1215, 1216, 1217, 1219, 1220, 1223, 1224, 1225, 1226, 1229, 1230, 1232, 1234, 1236, 1237, 1239, 1241, 1243, 1245, 1248, 1251, 1252, 1254, 1255, 1256, 1257, 1258, 1260, 1261, 1263, 1264, 1266, 1267, 1269, 1270, 1272, 1275, 1276, 1277, 1278, 1281, 1282, 1284, 1288, 1289, 1290, 1291, 1292, 1293, 1294, 1295, 1296, 1297, 1298, 1299, 1302, 1303, 1305, 1309], "multipli": [4, 1194, 1200], "repeat": [4, 32, 720, 724, 732, 733, 735, 898, 956, 963, 964, 987, 992, 996, 1006, 1007, 1025, 1026, 1027, 1028, 1068, 1134, 1135, 1141, 1169, 1177, 1179, 1182, 1188, 1301, 1309], "same": [4, 5, 32, 33, 177, 185, 304, 424, 667, 668, 709, 713, 720, 733, 735, 740, 746, 780, 782, 827, 865, 867, 896, 898, 959, 1024, 1167, 1169, 1173, 1174, 1176, 1180, 1194, 1207, 1209, 1290, 1308, 1309], "__mult__": 4, "oper": [4, 185, 687, 688, 931, 933, 935, 937, 939, 942, 944], "accept": [4, 185, 428, 429, 430, 431, 432, 433, 720, 735, 782, 787, 831, 835, 836, 865, 898, 964, 1007, 1025, 1027, 1028, 1068, 1134, 1170, 1180, 1182, 1300, 1301, 1309], "float": [4, 32, 52, 91, 229, 240, 288, 289, 290, 292, 296, 299, 305, 312, 317, 323, 327, 328, 338, 348, 356, 359, 363, 368, 372, 374, 384, 387, 403, 420, 423, 629, 652, 665, 667, 704, 706, 707, 755, 782, 787, 794, 804, 805, 811, 837, 838, 852, 894, 1041, 1194, 1200, 1209, 1217], "too": [4, 740, 863, 959, 1169, 1174], "last": [4, 5, 732, 737, 760, 852, 894, 984, 1002, 1041, 1174], "cell": [4, 5, 276, 289, 296, 317, 327, 350, 384, 385, 402, 403, 423, 452, 651, 664, 665, 666, 667, 687, 688, 1094, 1167, 1174, 1209, 1309], "paramet": [4, 5, 32, 38, 45, 49, 52, 66, 91, 92, 100, 108, 111, 113, 114, 115, 116, 118, 119, 120, 121, 122, 123, 125, 131, 133, 140, 141, 146, 153, 162, 173, 174, 176, 180, 185, 187, 202, 210, 214, 222, 228, 229, 240, 243, 244, 251, 274, 288, 289, 290, 296, 299, 305, 312, 317, 323, 327, 329, 330, 331, 338, 348, 356, 359, 363, 368, 369, 371, 372, 373, 374, 378, 384, 387, 401, 402, 403, 411, 412, 420, 423, 424, 451, 452, 518, 522, 523, 535, 568, 629, 630, 633, 641, 643, 652, 653, 665, 667, 668, 687, 709, 711, 713, 714, 717, 720, 724, 727, 732, 733, 735, 740, 751, 755, 758, 759, 760, 762, 767, 769, 770, 771, 777, 778, 779, 780, 782, 787, 788, 789, 790, 791, 792, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 822, 823, 824, 825, 827, 828, 830, 833, 859, 861, 863, 864, 865, 868, 870, 893, 896, 898, 931, 932, 933, 934, 935, 936, 937, 938, 939, 940, 942, 943, 944, 945, 946, 947, 954, 956, 958, 959, 960, 962, 963, 964, 984, 987, 988, 992, 993, 996, 997, 1002, 1006, 1007, 1024, 1025, 1026, 1027, 1028, 1038, 1041, 1044, 1061, 1068, 1070, 1078, 1079, 1083, 1086, 1087, 1091, 1094, 1095, 1099, 1103, 1104, 1107, 1108, 1112, 1113, 1117, 1120, 1121, 1124, 1125, 1129, 1132, 1133, 1134, 1135, 1138, 1140, 1142, 1144, 1165, 1167, 1169, 1170, 1174, 1176, 1177, 1179, 1180, 1181, 1182, 1184, 1194, 1200, 1206, 1207, 1209, 1211, 1212, 1217, 1220, 1288, 1294, 1295, 1299, 1301, 1305, 1308], "union": [4, 32, 153, 162, 387, 665, 709, 713, 733, 760, 782, 787, 788, 789, 790, 791, 792, 794, 795, 796, 797, 798, 800, 801, 802, 803, 804, 807, 808, 822, 823, 824, 825, 827, 828, 833, 859, 861, 865, 870, 896, 898, 959, 964, 1007, 1025, 1027, 1028, 1038, 1068, 1070, 1134, 1167, 1169, 1174, 1182, 1194, 1206, 1209, 1211, 1212], "int": [4, 5, 32, 38, 91, 100, 108, 118, 288, 289, 296, 323, 329, 348, 369, 372, 374, 384, 423, 452, 522, 523, 629, 633, 665, 703, 704, 705, 706, 707, 727, 733, 782, 787, 792, 794, 795, 798, 801, 802, 804, 808, 822, 833, 837, 838, 859, 868, 896, 898, 1038, 1165, 1169, 1170, 1174, 1194, 1200, 1209, 1211, 1212, 1217], "list": [4, 5, 49, 52, 91, 92, 105, 115, 116, 123, 153, 176, 185, 187, 213, 299, 305, 312, 323, 327, 328, 329, 330, 338, 348, 356, 359, 363, 368, 370, 371, 373, 384, 420, 446, 452, 633, 653, 667, 668, 720, 724, 733, 740, 758, 759, 760, 766, 777, 778, 780, 782, 827, 831, 836, 853, 896, 898, 903, 944, 959, 961, 964, 984, 1002, 1007, 1025, 1027, 1028, 1041, 1068, 1098, 1116, 1128, 1131, 1134, 1142, 1167, 1170, 1174, 1182, 1189, 1209], "three": [4, 933, 939, 944], "integ": [4, 784, 786, 802, 808, 813, 820, 824, 833, 834, 838, 852, 865, 896, 931, 933, 935, 937, 939, 942, 944, 993, 1169, 1174, 1194, 1207, 1309], "sai": [4, 724], "how": [4, 641, 713, 723, 724, 732, 733, 760, 777, 778, 779, 782, 787, 790, 791, 792, 797, 806, 822, 823, 824, 827, 833, 870, 898, 909, 931, 933, 935, 937, 939, 942, 944, 964, 1006, 1007, 1025, 1027, 1028, 1068, 1133, 1134, 1169, 1174, 1182, 1194, 1302, 1303, 1305, 1308], "mani": [4, 667, 1169, 1308, 1309], "should": [4, 5, 115, 372, 446, 452, 709, 713, 720, 724, 732, 733, 758, 759, 760, 777, 778, 779, 782, 788, 789, 790, 791, 792, 796, 797, 799, 800, 802, 803, 806, 807, 822, 823, 824, 825, 827, 828, 830, 863, 865, 870, 894, 898, 900, 930, 933, 939, 944, 959, 964, 1007, 1009, 1025, 1027, 1028, 1041, 1044, 1058, 1068, 1070, 1079, 1086, 1094, 1103, 1107, 1108, 1113, 1120, 1124, 1133, 1134, 1140, 1142, 1169, 1174, 1179, 1181, 1182, 1207, 1209, 1288, 1299, 1309], "along": [4, 5, 32, 304, 369, 376, 452, 933, 1169, 1170], "given": [4, 5, 17, 32, 205, 207, 208, 329, 402, 403, 452, 665, 667, 668, 687, 688, 704, 705, 709, 713, 714, 717, 720, 724, 729, 732, 733, 735, 736, 740, 754, 755, 756, 758, 759, 760, 762, 764, 765, 775, 777, 778, 779, 780, 782, 787, 788, 789, 790, 791, 796, 797, 799, 800, 802, 803, 806, 807, 822, 823, 824, 825, 827, 828, 830, 833, 838, 854, 858, 859, 861, 862, 865, 870, 893, 894, 896, 898, 903, 933, 939, 944, 956, 959, 963, 964, 982, 987, 991, 992, 993, 996, 1000, 1006, 1007, 1025, 1026, 1027, 1028, 1041, 1061, 1068, 1070, 1079, 1103, 1108, 1113, 1120, 1124, 1133, 1134, 1135, 1138, 1140, 1144, 1165, 1167, 1169, 1170, 1174, 1176, 1177, 1179, 1180, 1182, 1188, 1190, 1194, 1201, 1207, 1209, 1217, 1219, 1289, 1295, 1297, 1299, 1308, 1309], "all": [4, 5, 32, 129, 130, 141, 146, 153, 178, 202, 213, 401, 402, 407, 426, 434, 437, 446, 447, 452, 633, 704, 709, 713, 720, 723, 724, 733, 758, 782, 796, 800, 827, 861, 865, 868, 870, 898, 982, 991, 1000, 1025, 1041, 1061, 1069, 1075, 1139, 1141, 1144, 1170, 1173, 1174, 1194, 1209, 1309], "ax": [4, 5, 32, 39, 42, 275, 760, 1041, 1167], "unless": [4, 832], "argument": [4, 5, 125, 387, 452, 601, 602, 628, 713, 720, 733, 737, 739, 740, 742, 744, 760, 779, 782, 788, 789, 790, 791, 796, 797, 799, 800, 803, 806, 807, 822, 823, 824, 825, 827, 828, 865, 870, 898, 903, 921, 924, 959, 962, 964, 993, 1007, 1025, 1027, 1028, 1041, 1068, 1070, 1134, 1167, 1169, 1174, 1180, 1182, 1194, 1209, 1297, 1301, 1309], "decim": [4, 1169], "mean": [4, 5, 118, 185, 387, 709, 713, 720, 724, 732, 733, 735, 758, 759, 760, 777, 778, 779, 780, 782, 788, 789, 790, 791, 796, 797, 799, 800, 803, 806, 807, 823, 825, 827, 828, 861, 865, 870, 896, 898, 956, 959, 962, 963, 964, 984, 987, 992, 996, 1002, 1006, 1007, 1025, 1026, 1027, 1028, 1038, 1068, 1070, 1134, 1135, 1174, 1176, 1177, 1179, 1180, 1182, 1309], "won": [4, 1209], "t": [4, 67, 296, 385, 452, 629, 713, 722, 791, 931, 933, 935, 937, 939, 942, 944, 964, 1007, 1069, 1070, 1134, 1167, 1173, 1174, 1207, 1209, 1309], "whole": [4, 709, 732, 733, 739, 822, 898, 1308], "its": [4, 113, 452, 712, 713, 714, 717, 718, 719, 724, 732, 733, 736, 740, 758, 759, 760, 782, 827, 862, 865, 868, 870, 891, 898, 927, 931, 933, 935, 937, 939, 942, 944, 959, 960, 964, 983, 984, 985, 988, 993, 997, 1001, 1002, 1003, 1007, 1025, 1026, 1027, 1028, 1044, 1061, 1064, 1067, 1068, 1077, 1079, 1082, 1086, 1090, 1094, 1098, 1102, 1103, 1107, 1111, 1113, 1116, 1120, 1124, 1128, 1132, 1134, 1138, 1139, 1141, 1142, 1144, 1167, 1169, 1174, 1176, 1178, 1181, 1182, 1183, 1184, 1185, 1189, 1194, 1271, 1302, 1303, 1308, 1309], "option": [4, 5, 21, 91, 100, 108, 118, 121, 125, 126, 229, 371, 372, 387, 423, 452, 629, 667, 671, 691, 708, 709, 713, 719, 720, 723, 724, 727, 728, 729, 755, 758, 759, 760, 762, 767, 769, 770, 771, 777, 779, 780, 782, 787, 788, 789, 790, 791, 792, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 806, 807, 808, 822, 823, 824, 825, 827, 828, 833, 842, 861, 862, 863, 864, 868, 870, 877, 893, 896, 898, 930, 931, 933, 935, 937, 939, 942, 944, 957, 959, 961, 962, 963, 964, 967, 981, 985, 988, 993, 997, 999, 1003, 1006, 1007, 1013, 1025, 1026, 1027, 1028, 1038, 1048, 1066, 1067, 1068, 1070, 1119, 1131, 1133, 1134, 1135, 1147, 1167, 1169, 1172, 1174, 1175, 1180, 1181, 1182, 1184, 1194, 1206, 1209, 1211, 1212, 1223, 1275, 1288, 1295, 1299, 1300, 1301, 1308, 1309], "each": [4, 331, 368, 370, 373, 382, 385, 401, 452, 724, 733, 775, 782, 823, 853, 898, 930, 964, 993, 1007, 1010, 1025, 1027, 1028, 1041, 1068, 1134, 1182, 1209, 1308, 1309], "neg": [4, 452], "partial": [4, 915, 1207, 1301, 1302, 1303], "begin": [4, 724, 732, 733, 735, 782, 824, 898, 931, 933, 939, 942, 944, 956, 963, 987, 992, 996, 1006, 1026, 1135, 1174, 1177, 1179], "stack": [4, 1300], "otherwis": [4, 711, 713, 717, 733, 746, 827, 833, 870, 898, 902, 933, 939, 944, 959, 984, 1002, 1041, 1144, 1174, 1179, 1309], "atoms": [5, 1170], "rel": [5, 32, 698, 849, 898, 933, 939, 944, 959, 964, 1007, 1025, 1027, 1028, 1044, 1068, 1134, 1174, 1182], "fals": [5, 21, 32, 42, 46, 61, 108, 118, 146, 150, 218, 231, 244, 251, 289, 385, 387, 388, 403, 415, 416, 418, 424, 452, 632, 633, 640, 641, 643, 661, 667, 668, 671, 685, 687, 688, 691, 709, 711, 713, 717, 720, 722, 723, 724, 725, 726, 732, 733, 735, 740, 758, 759, 760, 762, 777, 778, 779, 780, 782, 788, 789, 790, 791, 796, 797, 799, 800, 803, 806, 807, 822, 823, 824, 825, 827, 828, 832, 833, 842, 861, 865, 868, 870, 877, 896, 898, 931, 933, 935, 937, 939, 942, 944, 956, 959, 963, 964, 967, 984, 987, 992, 996, 1002, 1006, 1007, 1013, 1025, 1026, 1027, 1028, 1044, 1048, 1068, 1070, 1134, 1135, 1144, 1147, 1167, 1174, 1177, 1179, 1180, 1182, 1194, 1206, 1207, 1209, 1223, 1254, 1275, 1288, 1291, 1299, 1301, 1309], "scale": [5, 275, 278, 288, 289, 371, 384, 452, 480, 540, 931, 933, 935, 937, 939, 942, 944, 1079, 1086, 1094, 1103, 1107, 1113, 1120, 1124, 1140, 1301], "pbc": [5, 10, 385, 414, 473, 619, 1167, 1174, 1300], "check_strain": 5, "auto": [5, 21, 662, 671, 691, 842, 877, 902, 959, 967, 1013, 1048, 1147, 1174, 1223, 1275], "max_strain": 5, "1e": [5, 632, 633, 650, 652, 667, 933, 939, 942, 944, 1209], "10": [5, 17, 42, 123, 278, 300, 306, 328, 374, 713, 763, 870, 931, 988, 991, 997, 1061, 1062, 1217], "check_pbc": 5, "true": [5, 38, 40, 41, 42, 45, 49, 52, 66, 91, 118, 141, 146, 153, 154, 210, 222, 230, 237, 245, 274, 275, 278, 288, 289, 290, 293, 299, 300, 305, 306, 312, 317, 323, 327, 333, 338, 348, 356, 359, 363, 368, 371, 378, 384, 385, 388, 402, 416, 420, 423, 424, 452, 522, 523, 632, 633, 653, 663, 665, 667, 685, 687, 709, 711, 713, 717, 720, 724, 728, 732, 733, 735, 740, 758, 759, 760, 762, 777, 778, 779, 780, 782, 788, 789, 790, 791, 796, 797, 799, 800, 803, 806, 807, 822, 823, 825, 827, 828, 859, 861, 863, 865, 870, 894, 896, 898, 902, 931, 956, 959, 962, 963, 964, 984, 987, 988, 991, 992, 993, 996, 997, 1002, 1006, 1007, 1025, 1026, 1027, 1028, 1068, 1069, 1070, 1117, 1132, 1133, 1134, 1135, 1144, 1167, 1170, 1174, 1176, 1177, 1179, 1180, 1182, 1194, 1209, 1288, 1294, 1299, 1309], "period": [5, 296, 1167, 1169], "concaten": 5, "veri": [5, 739], "similiar": [5, 782, 827], "support": [5, 382, 452, 889, 898, 964, 1007, 1025, 1027, 1028, 1068, 1134, 1182, 1301, 1308, 1309], "more": [5, 18, 141, 185, 280, 452, 733, 827, 835, 894, 898, 931, 933, 935, 937, 939, 942, 944, 1172, 1182, 1189, 1193, 1194, 1288, 1297, 1301, 1305], "than": [5, 141, 296, 424, 452, 824, 894, 937, 1079, 1103, 1108, 1113, 1120, 1124, 1133, 1140], "two": [5, 205, 207, 401, 709, 711, 782, 824, 835, 861, 864, 868, 896, 898, 933, 1167, 1169, 1207, 1214, 1301, 1308, 1309], "themselv": [5, 799, 827], "bit": [5, 1209, 1218], "differ": [5, 117, 118, 290, 292, 296, 370, 402, 412, 667, 709, 713, 717, 732, 733, 735, 782, 787, 861, 865, 870, 898, 956, 963, 964, 987, 992, 996, 1006, 1007, 1010, 1026, 1079, 1094, 1103, 1107, 1108, 1113, 1120, 1124, 1133, 1135, 1140, 1144, 1172, 1174, 1177, 1179, 1207, 1301, 1308, 1309], "todo": [5, 18, 228, 665, 732, 733, 735, 898, 942, 956, 963, 964, 987, 992, 996, 1006, 1007, 1025, 1026, 1027, 1028, 1068, 1134, 1135, 1177, 1179, 1182, 1204, 1213, 1218], "could": [5, 732, 782, 827, 901, 1164, 1165], "togeth": [5, 113], "0": [5, 32, 38, 39, 40, 42, 46, 103, 118, 123, 171, 223, 229, 241, 249, 251, 275, 278, 289, 300, 306, 312, 359, 371, 372, 374, 384, 386, 387, 388, 397, 416, 450, 452, 453, 473, 475, 480, 523, 540, 541, 542, 543, 547, 629, 632, 633, 642, 652, 665, 667, 685, 755, 760, 787, 794, 797, 834, 852, 865, 868, 894, 896, 931, 933, 935, 937, 939, 942, 944, 991, 1044, 1167, 1174, 1194, 1207, 1217, 1293, 1305, 1308, 1309], "coordin": [5, 228, 288, 289, 317, 369, 667, 931, 933, 939, 944, 1169], "n": [5, 240, 296, 368, 370, 420, 465, 630, 688, 733, 824, 867, 896, 962, 963, 1006, 1026, 1064, 1068, 1069, 1070, 1133, 1135, 1165, 1194, 1200], "th": [5, 1064, 1194], "locat": [5, 724, 898, 1025, 1308, 1309], "respepect": 5, "accord": [5, 185, 654, 663, 712, 713, 714, 717, 718, 733, 827, 870, 896, 898, 930, 931, 933, 935, 937, 939, 942, 944, 956, 959, 960, 964, 983, 984, 988, 993, 997, 1001, 1002, 1007, 1025, 1027, 1028, 1068, 1077, 1079, 1082, 1086, 1090, 1094, 1098, 1102, 1103, 1107, 1111, 1113, 1116, 1120, 1124, 1128, 1134, 1138, 1139, 1141, 1142, 1144, 1169, 1174, 1176, 1178, 1180, 1182, 1183, 1185, 1194, 1207, 1209, 1217, 1297, 1299, 1308, 1309], "nth": 5, "shift": [5, 289, 760, 931], "distanc": [5, 240, 387], "determin": [5, 107, 137, 202, 322, 324, 329, 452, 652, 653, 664, 709, 724, 727, 824, 833, 898, 933, 939, 944, 959, 962, 964, 1007, 1025, 1027, 1028, 1044, 1068, 1134, 1165, 1169, 1174, 1182, 1194, 1207, 1209, 1308, 1309], "posit": [5, 204, 384, 385, 452, 660, 664, 665, 688, 724, 733, 740, 758, 759, 760, 782, 827, 898, 931, 933, 935, 937, 939, 942, 944, 1025, 1026, 1107, 1120, 1124, 1167, 1174, 1207, 1209], "origin": [5, 33, 424, 768, 898, 933, 939, 942, 944], "result": [5, 37, 43, 44, 47, 48, 50, 51, 55, 58, 89, 90, 97, 102, 118, 119, 120, 121, 122, 123, 125, 126, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 209, 211, 215, 219, 220, 248, 273, 279, 287, 288, 290, 297, 298, 302, 303, 310, 311, 315, 316, 321, 322, 325, 326, 336, 337, 346, 347, 354, 355, 357, 358, 361, 362, 366, 367, 375, 377, 381, 382, 419, 421, 422, 425, 521, 522, 523, 524, 525, 557, 568, 648, 663, 667, 710, 714, 719, 720, 724, 732, 733, 739, 740, 760, 766, 779, 780, 782, 787, 788, 789, 790, 791, 796, 797, 799, 800, 802, 803, 806, 807, 822, 823, 825, 827, 828, 832, 833, 865, 868, 896, 898, 927, 931, 933, 935, 937, 939, 942, 944, 947, 954, 959, 962, 964, 993, 1007, 1024, 1025, 1027, 1028, 1029, 1030, 1031, 1032, 1036, 1041, 1044, 1045, 1068, 1070, 1134, 1135, 1169, 1174, 1182, 1190, 1209, 1246, 1288, 1300, 1301, 1302, 1303, 1305, 1308], "plu": 5, "vector": [5, 350, 403, 547, 931, 933, 939, 944, 1167, 1169], "There": [5, 732, 737, 782, 1026, 1135, 1207, 1308, 1309], "item": [5, 118, 709, 713, 720, 721, 722, 723, 724, 726, 727, 730, 732, 733, 735, 758, 779, 789, 827, 835, 854, 857, 865, 870, 896, 898, 956, 963, 987, 992, 996, 1006, 1026, 1133, 1135, 1167, 1177, 1179, 1189, 1194, 1200], "scalar": [5, 727, 933, 939, 944], "r": [5, 787, 1069, 1070], "consid": [5, 713, 733, 827, 870, 931, 933, 935, 937, 939, 942, 944, 1169, 1209], "unitari": 5, "bool": [5, 32, 38, 45, 49, 52, 66, 91, 108, 118, 121, 146, 210, 222, 229, 244, 274, 288, 289, 290, 299, 305, 312, 317, 323, 327, 338, 348, 356, 359, 363, 368, 371, 378, 384, 387, 402, 403, 420, 423, 424, 452, 522, 523, 633, 643, 652, 653, 667, 668, 704, 706, 707, 709, 711, 713, 717, 720, 724, 732, 733, 735, 758, 759, 760, 762, 782, 786, 787, 788, 789, 790, 792, 794, 795, 796, 797, 798, 800, 801, 802, 803, 804, 807, 808, 809, 813, 822, 823, 824, 825, 827, 828, 833, 838, 861, 863, 865, 870, 893, 896, 898, 956, 959, 962, 963, 964, 987, 988, 992, 993, 996, 997, 1006, 1007, 1025, 1026, 1027, 1028, 1038, 1068, 1070, 1132, 1133, 1134, 1135, 1167, 1174, 1177, 1179, 1180, 1182, 1206, 1207, 1209, 1211, 1212, 1288, 1294, 1295, 1299, 1301], "corner": 5, "dimens": [5, 760, 782], "correspond": [5, 131, 331, 371, 424, 633, 918, 991, 1061, 1194, 1207, 1302, 1303, 1308], "default": [5, 113, 118, 218, 229, 382, 385, 387, 452, 516, 517, 518, 629, 643, 665, 709, 711, 713, 718, 720, 724, 733, 749, 758, 759, 760, 777, 778, 779, 780, 782, 787, 788, 789, 790, 791, 792, 793, 794, 796, 797, 798, 799, 800, 803, 804, 806, 807, 808, 822, 823, 825, 827, 828, 832, 833, 859, 861, 865, 870, 896, 898, 930, 933, 939, 944, 947, 954, 959, 962, 964, 1007, 1025, 1027, 1028, 1034, 1035, 1036, 1068, 1070, 1134, 1173, 1174, 1176, 1179, 1180, 1182, 1194, 1201, 1204, 1207, 1209, 1254, 1290, 1294, 1300, 1301, 1308, 1309], "valu": [5, 113, 118, 123, 146, 147, 160, 170, 185, 199, 229, 296, 329, 387, 390, 391, 392, 452, 665, 667, 708, 709, 710, 711, 713, 714, 717, 718, 720, 722, 723, 724, 725, 726, 727, 728, 729, 730, 732, 733, 734, 735, 736, 737, 742, 744, 746, 755, 757, 758, 759, 760, 775, 777, 778, 779, 780, 782, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 811, 822, 823, 824, 825, 827, 828, 831, 832, 834, 835, 836, 838, 840, 852, 860, 861, 862, 863, 865, 868, 870, 893, 894, 896, 898, 903, 930, 931, 933, 935, 937, 939, 942, 944, 947, 954, 956, 959, 961, 963, 964, 978, 985, 987, 992, 996, 1003, 1005, 1006, 1007, 1008, 1009, 1010, 1025, 1026, 1027, 1028, 1038, 1041, 1067, 1068, 1070, 1079, 1086, 1094, 1103, 1107, 1113, 1116, 1117, 1120, 1124, 1131, 1133, 1134, 1135, 1136, 1138, 1140, 1142, 1144, 1165, 1167, 1173, 1174, 1176, 1177, 1179, 1180, 1181, 1182, 1184, 1194, 1196, 1197, 1198, 1201, 1211, 1212, 1289, 1301, 1308, 1309], "done": [5, 244, 711, 933, 939, 944, 1165, 1209, 1301, 1308, 1309], "compat": [5, 129, 148, 1174], "other": [5, 185, 452, 658, 710, 720, 721, 722, 726, 733, 757, 758, 760, 793, 822, 824, 827, 896, 898, 959, 962, 964, 982, 988, 991, 997, 1000, 1007, 1025, 1027, 1028, 1041, 1068, 1078, 1083, 1087, 1091, 1095, 1099, 1104, 1108, 1112, 1117, 1121, 1125, 1129, 1132, 1133, 1134, 1142, 1170, 1174, 1182, 1209, 1301, 1308, 1309], "maxim": [5, 777, 778, 780, 787, 792, 794, 795, 798, 801, 802, 804, 805, 808, 931, 933, 935, 937, 939, 942, 944, 1038, 1211, 1212], "strain": [5, 414, 415, 416, 420, 1300], "cannot": [5, 603, 777, 779, 782, 822, 829, 852, 898, 1079, 1094, 1103, 1107, 1113, 1120, 1124, 1140], "exceed": 5, "valueerror": [5, 10, 894], "rais": [5, 10, 124, 132, 146, 382, 596, 709, 713, 716, 733, 764, 765, 852, 870, 959, 984, 1002, 1176], "limit": [5, 937, 1309], "norm": [5, 1291], "displac": [5, 405, 406, 407, 408, 543, 937, 1300], "fd": [7, 8, 859], "symmetri": [10, 54, 301, 307, 360, 364, 382, 385, 423, 596, 597, 635, 650, 651, 652, 653, 654, 666, 667, 687, 688, 931, 933, 935, 937, 939, 942, 944, 1061, 1166, 1207, 1209, 1300, 1301, 1309], "error": [10, 124, 146, 382, 452, 596, 709, 713, 733, 777, 778, 779, 782, 787, 788, 789, 790, 791, 795, 796, 797, 799, 800, 801, 802, 803, 806, 807, 808, 822, 823, 825, 827, 828, 865, 868, 870, 899, 900, 959, 1032, 1036, 1041, 1044, 1045, 1070, 1176, 1209, 1305, 1308], "err_class": 10, "class": [10, 20, 21, 27, 29, 30, 37, 38, 44, 45, 48, 49, 51, 52, 58, 60, 61, 62, 63, 64, 65, 66, 90, 91, 109, 112, 113, 117, 118, 119, 120, 121, 122, 123, 125, 126, 129, 132, 139, 141, 145, 146, 147, 166, 167, 209, 210, 220, 222, 273, 274, 287, 288, 289, 290, 298, 299, 303, 305, 311, 312, 316, 317, 322, 323, 326, 327, 337, 338, 347, 348, 355, 356, 358, 359, 362, 363, 367, 368, 377, 378, 382, 384, 385, 387, 390, 391, 419, 420, 422, 423, 451, 452, 453, 454, 455, 456, 457, 468, 469, 472, 473, 474, 475, 476, 477, 478, 479, 481, 482, 488, 489, 521, 522, 523, 524, 659, 660, 666, 667, 668, 670, 671, 677, 679, 680, 681, 682, 690, 691, 697, 700, 701, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 731, 732, 733, 734, 735, 738, 739, 742, 743, 744, 745, 748, 749, 757, 758, 759, 760, 761, 762, 763, 775, 776, 777, 778, 779, 780, 781, 782, 786, 787, 788, 789, 790, 791, 792, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 821, 822, 823, 824, 825, 826, 827, 828, 831, 833, 836, 837, 838, 841, 842, 848, 851, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 876, 877, 883, 885, 886, 887, 888, 895, 896, 897, 898, 899, 946, 956, 958, 959, 960, 961, 962, 963, 964, 966, 967, 973, 975, 976, 977, 978, 981, 982, 983, 984, 985, 986, 987, 988, 990, 991, 992, 993, 995, 996, 997, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1012, 1013, 1019, 1021, 1022, 1024, 1025, 1026, 1027, 1028, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1043, 1044, 1045, 1047, 1048, 1054, 1056, 1057, 1059, 1060, 1061, 1066, 1067, 1068, 1069, 1070, 1076, 1077, 1078, 1079, 1081, 1082, 1083, 1085, 1086, 1087, 1089, 1090, 1091, 1093, 1094, 1095, 1097, 1098, 1099, 1101, 1102, 1103, 1104, 1106, 1107, 1108, 1110, 1111, 1112, 1113, 1115, 1116, 1117, 1119, 1120, 1121, 1123, 1124, 1125, 1127, 1128, 1129, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1144, 1146, 1147, 1153, 1155, 1156, 1157, 1158, 1159, 1160, 1161, 1162, 1164, 1165, 1166, 1167, 1172, 1173, 1174, 1175, 1176, 1177, 1178, 1179, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1191, 1192, 1193, 1194, 1195, 1196, 1197, 1198, 1199, 1200, 1201, 1203, 1204, 1205, 1206, 1207, 1208, 1209, 1210, 1211, 1212, 1213, 1214, 1215, 1222, 1223, 1229, 1231, 1232, 1233, 1234, 1235, 1236, 1238, 1239, 1240, 1241, 1242, 1243, 1244, 1245, 1253, 1254, 1274, 1275, 1281, 1283, 1284, 1287, 1288, 1301, 1308, 1309], "pcb": [10, 1167], "except": [10, 58, 59, 117, 124, 127, 128, 178, 220, 221, 252, 253, 254, 255, 280, 281, 382, 383, 709, 710, 713, 716, 737, 764, 765, 827, 839, 840, 870, 899, 900, 959, 984, 1002, 1174, 1176], "thei": [10, 665, 667, 719, 721, 724, 729, 732, 740, 758, 759, 760, 799, 827, 866, 868, 896, 898, 961, 964, 1007, 1025, 1026, 1027, 1028, 1066, 1068, 1079, 1094, 1103, 1107, 1113, 1120, 1124, 1131, 1134, 1140, 1169, 1174, 1182, 1301, 1308, 1309], "satisfi": [10, 782, 863], "requir": [10, 123, 385, 713, 717, 720, 724, 758, 759, 760, 769, 779, 782, 788, 789, 790, 791, 796, 797, 799, 800, 803, 806, 807, 823, 825, 827, 828, 863, 865, 870, 898, 959, 964, 1007, 1025, 1027, 1028, 1068, 1070, 1078, 1083, 1087, 1091, 1095, 1099, 1104, 1108, 1112, 1117, 1121, 1125, 1129, 1132, 1133, 1134, 1144, 1174, 1180, 1182, 1254, 1300, 1305, 1308, 1309], "regist": [12, 13, 15, 720, 1207, 1300], "plugin": 12, "load": [13, 717, 1144, 1309], "defin": [13, 112, 132, 141, 205, 206, 280, 329, 385, 426, 665, 709, 711, 718, 720, 724, 728, 739, 740, 758, 759, 760, 782, 787, 805, 865, 898, 959, 962, 964, 1007, 1025, 1027, 1028, 1044, 1068, 1072, 1134, 1166, 1167, 1172, 1182, 1205, 1301, 1305, 1308], "prefer": [13, 15], "from": [13, 52, 102, 105, 114, 118, 125, 146, 147, 160, 168, 204, 229, 292, 296, 382, 391, 408, 424, 452, 544, 629, 630, 650, 667, 668, 698, 709, 711, 713, 714, 717, 720, 724, 727, 732, 733, 734, 735, 737, 739, 742, 744, 746, 754, 756, 757, 758, 759, 760, 777, 778, 779, 782, 793, 795, 799, 802, 804, 822, 823, 824, 827, 828, 829, 832, 833, 834, 835, 849, 861, 862, 864, 865, 868, 870, 896, 898, 931, 933, 935, 937, 939, 942, 944, 956, 959, 961, 962, 963, 964, 984, 987, 988, 992, 996, 997, 1002, 1006, 1007, 1024, 1025, 1026, 1027, 1028, 1041, 1042, 1068, 1075, 1079, 1094, 1103, 1107, 1113, 1116, 1120, 1124, 1131, 1134, 1135, 1138, 1140, 1142, 1144, 1165, 1167, 1169, 1174, 1176, 1177, 1179, 1180, 1182, 1190, 1209, 1214, 1217, 1301, 1305, 1308, 1309], "home": [13, 104, 105, 106, 107, 382, 984, 1002], "config": [13, 435, 902, 903, 959, 1174, 1251, 1252, 1300], "__init__": [13, 21, 27, 30, 38, 45, 49, 52, 60, 61, 62, 63, 64, 65, 66, 91, 113, 118, 119, 120, 121, 122, 123, 125, 126, 129, 146, 147, 167, 210, 222, 274, 288, 289, 290, 299, 305, 312, 317, 323, 327, 338, 348, 356, 359, 363, 368, 378, 384, 385, 387, 391, 420, 423, 452, 453, 454, 455, 456, 457, 469, 473, 475, 477, 479, 482, 489, 522, 523, 524, 660, 667, 671, 677, 680, 682, 691, 697, 701, 709, 711, 712, 713, 714, 715, 717, 718, 720, 721, 722, 723, 724, 725, 726, 727, 728, 732, 733, 734, 735, 742, 743, 744, 745, 749, 758, 759, 760, 762, 763, 777, 778, 779, 780, 781, 782, 787, 788, 789, 790, 791, 792, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 822, 823, 824, 825, 827, 828, 842, 848, 859, 861, 862, 863, 864, 865, 867, 868, 870, 877, 883, 886, 888, 896, 898, 901, 956, 959, 960, 962, 963, 964, 967, 973, 976, 978, 982, 983, 984, 985, 987, 988, 991, 992, 993, 996, 997, 1000, 1001, 1002, 1003, 1005, 1006, 1007, 1008, 1013, 1019, 1022, 1025, 1026, 1027, 1028, 1031, 1032, 1034, 1035, 1036, 1038, 1039, 1040, 1041, 1044, 1045, 1048, 1054, 1057, 1060, 1061, 1067, 1068, 1069, 1070, 1077, 1078, 1079, 1082, 1083, 1086, 1087, 1090, 1091, 1094, 1095, 1098, 1099, 1102, 1103, 1104, 1107, 1108, 1111, 1112, 1113, 1116, 1117, 1120, 1121, 1124, 1125, 1128, 1129, 1132, 1133, 1134, 1135, 1136, 1138, 1139, 1140, 1141, 1142, 1144, 1147, 1153, 1156, 1158, 1160, 1162, 1165, 1167, 1173, 1174, 1176, 1177, 1178, 1179, 1180, 1181, 1182, 1183, 1184, 1185, 1187, 1188, 1189, 1192, 1194, 1196, 1197, 1198, 1200, 1201, 1204, 1206, 1207, 1209, 1211, 1212, 1214, 1215, 1223, 1229, 1232, 1234, 1236, 1239, 1241, 1243, 1245, 1254, 1275, 1281, 1284, 1288], "return": [15, 92, 114, 115, 116, 118, 123, 131, 132, 137, 141, 142, 143, 144, 146, 147, 149, 157, 173, 174, 176, 180, 184, 185, 187, 199, 214, 228, 240, 292, 293, 328, 329, 330, 331, 350, 369, 370, 371, 372, 373, 385, 391, 402, 403, 424, 442, 445, 452, 514, 516, 629, 630, 633, 643, 652, 653, 662, 667, 668, 705, 709, 711, 713, 714, 718, 720, 724, 727, 732, 733, 734, 735, 739, 742, 744, 754, 755, 756, 758, 759, 760, 767, 769, 770, 771, 777, 778, 779, 780, 782, 787, 788, 789, 790, 791, 792, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 806, 807, 808, 822, 823, 824, 825, 827, 828, 830, 832, 833, 854, 857, 861, 862, 865, 868, 870, 893, 894, 896, 898, 947, 954, 959, 962, 963, 964, 993, 1006, 1007, 1010, 1026, 1027, 1028, 1038, 1041, 1042, 1044, 1061, 1070, 1079, 1094, 1103, 1107, 1108, 1113, 1120, 1124, 1133, 1134, 1135, 1140, 1167, 1174, 1190, 1194, 1207, 1209, 1219, 1290, 1301, 1308, 1309], "filenam": [15, 40, 41, 42, 53, 102, 146, 147, 156, 159, 163, 164, 173, 174, 175, 204, 218, 229, 244, 300, 306, 333, 344, 345, 374, 380, 391, 473, 643, 867, 890, 959, 962, 984, 988, 993, 997, 1002, 1041, 1144, 1173, 1174, 1217, 1219, 1220, 1288, 1295, 1299, 1309], "deal": [16, 703], "symbol": [17, 18, 49, 96, 162, 328, 330, 331, 368, 370, 373, 384, 385, 452, 1061, 1064, 1165, 1167, 1173, 1194, 1206, 1207, 1209, 1300, 1309], "max_len": 17, "choos": [17, 403, 1309], "best": [17, 665], "short": [17, 724, 758, 759, 760], "represent": [17, 117, 139, 348], "gextexgextexgextexgextex9": [17, 18], "12": [17, 420, 452, 782, 1006, 1061, 1062, 1133], "gextex": [17, 18], "4x8": [17, 18], "ge4te4x16": 17, "gextexgextexh": 17, "2h": 17, "gextexgextex": 17, "c4h4oc4h4oc2c4h4oc4h4oc2": [17, 18], "c20h16o4": 17, "co2": [17, 18], "string": [18, 100, 122, 139, 146, 147, 149, 157, 187, 329, 331, 368, 370, 387, 391, 424, 627, 641, 643, 709, 713, 724, 732, 733, 735, 754, 755, 756, 760, 775, 777, 778, 779, 782, 786, 787, 788, 789, 790, 791, 792, 793, 796, 797, 798, 799, 800, 803, 804, 806, 808, 815, 816, 822, 823, 824, 825, 827, 828, 838, 870, 892, 893, 898, 931, 933, 935, 937, 939, 942, 944, 947, 954, 956, 959, 963, 987, 992, 993, 996, 1006, 1026, 1067, 1068, 1070, 1135, 1144, 1174, 1176, 1177, 1179, 1180, 1194, 1207, 1301, 1309], "pretti": 18, "especi": 18, "suitabl": [18, 720, 735, 959], "long": 18, "2d": [18, 296, 359, 371, 403, 931, 933, 935, 937, 939, 942, 944, 1167, 1168, 1291, 1301], "semiinfinit": [18, 1167, 1168, 1169], "bulk": [18, 931, 1064, 1169, 1217, 1305], "doe": [18, 22, 652, 672, 692, 720, 721, 735, 799, 827, 843, 878, 968, 1014, 1049, 1148, 1209, 1224, 1276, 1308, 1309], "work": [18, 22, 439, 452, 525, 629, 672, 692, 698, 843, 849, 878, 933, 939, 944, 968, 1014, 1049, 1148, 1209, 1224, 1276, 1305], "c4h4o": 18, "2c2": 18, "2": [18, 41, 42, 103, 123, 179, 180, 251, 278, 338, 348, 379, 387, 423, 629, 665, 685, 729, 737, 760, 780, 782, 792, 834, 854, 894, 896, 931, 933, 935, 937, 939, 942, 944, 988, 993, 997, 1061, 1062, 1064, 1169, 1217, 1289, 1305, 1309], "hierarchi": [20, 21, 27, 29, 30, 37, 38, 44, 45, 48, 49, 51, 52, 58, 60, 61, 62, 63, 64, 65, 66, 90, 91, 112, 113, 117, 118, 119, 120, 121, 122, 123, 125, 126, 129, 132, 145, 146, 147, 166, 167, 209, 210, 220, 222, 273, 274, 287, 288, 289, 290, 298, 299, 303, 305, 311, 312, 316, 317, 322, 323, 326, 327, 337, 338, 347, 348, 355, 356, 358, 359, 362, 363, 367, 368, 377, 378, 382, 384, 385, 387, 390, 391, 419, 420, 422, 423, 451, 452, 453, 454, 455, 456, 457, 468, 469, 472, 473, 474, 475, 476, 477, 478, 479, 481, 482, 488, 489, 521, 522, 523, 524, 659, 660, 666, 667, 670, 671, 677, 679, 680, 681, 682, 690, 691, 697, 700, 701, 708, 709, 710, 711, 712, 713, 714, 715, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 731, 732, 733, 734, 735, 738, 742, 743, 744, 745, 748, 749, 757, 758, 759, 760, 761, 762, 763, 776, 777, 778, 779, 780, 781, 782, 786, 787, 788, 789, 790, 791, 792, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 821, 822, 823, 824, 825, 826, 827, 828, 841, 842, 848, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 876, 877, 883, 885, 886, 887, 888, 895, 896, 897, 898, 946, 956, 958, 959, 960, 961, 962, 963, 964, 966, 967, 973, 975, 976, 977, 978, 981, 982, 983, 984, 985, 986, 987, 988, 990, 991, 992, 993, 995, 996, 997, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1012, 1013, 1019, 1021, 1022, 1024, 1025, 1026, 1027, 1028, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1043, 1044, 1045, 1047, 1048, 1054, 1056, 1057, 1059, 1060, 1061, 1066, 1067, 1068, 1069, 1070, 1076, 1077, 1078, 1079, 1081, 1082, 1083, 1085, 1086, 1087, 1089, 1090, 1091, 1093, 1094, 1095, 1097, 1098, 1099, 1101, 1102, 1103, 1104, 1106, 1107, 1108, 1110, 1111, 1112, 1113, 1115, 1116, 1117, 1119, 1120, 1121, 1123, 1124, 1125, 1127, 1128, 1129, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1144, 1146, 1147, 1153, 1155, 1156, 1157, 1158, 1159, 1160, 1161, 1162, 1164, 1165, 1166, 1167, 1172, 1173, 1174, 1175, 1176, 1177, 1178, 1179, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1191, 1192, 1193, 1194, 1195, 1196, 1197, 1198, 1199, 1200, 1201, 1203, 1204, 1205, 1206, 1207, 1208, 1209, 1210, 1211, 1212, 1213, 1214, 1215, 1222, 1223, 1229, 1231, 1232, 1233, 1234, 1235, 1236, 1238, 1239, 1240, 1241, 1242, 1243, 1244, 1245, 1253, 1254, 1274, 1275, 1281, 1283, 1284, 1287, 1288], "common": [20, 21, 27, 29, 30, 670, 671, 677, 679, 680, 681, 682, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 931, 933, 935, 937, 939, 942, 944, 946, 956, 958, 959, 960, 961, 962, 963, 964, 966, 967, 973, 975, 976, 977, 978, 981, 983, 984, 985, 986, 987, 988, 990, 992, 993, 995, 996, 997, 999, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1010, 1012, 1013, 1019, 1021, 1022, 1024, 1025, 1026, 1027, 1028, 1033, 1034, 1037, 1038, 1039, 1044, 1047, 1048, 1054, 1056, 1057, 1066, 1067, 1068, 1070, 1076, 1077, 1078, 1079, 1081, 1082, 1083, 1085, 1086, 1087, 1089, 1090, 1091, 1093, 1094, 1095, 1097, 1098, 1099, 1101, 1102, 1103, 1104, 1106, 1107, 1108, 1110, 1111, 1112, 1113, 1115, 1116, 1117, 1119, 1120, 1121, 1123, 1124, 1125, 1127, 1128, 1129, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1141, 1142, 1143, 1144, 1146, 1147, 1153, 1155, 1156, 1157, 1158, 1159, 1160, 1161, 1162, 1175, 1176, 1177, 1178, 1179, 1181, 1182, 1183, 1184, 1185, 1210, 1211, 1212, 1222, 1223, 1229, 1231, 1232, 1233, 1234, 1235, 1236, 1238, 1239, 1240, 1241, 1242, 1243, 1244, 1245, 1274, 1275, 1281, 1283, 1284, 1300, 1305, 1309], "testcas": [20, 29, 30, 670, 679, 680, 681, 682, 690, 698, 700, 701, 841, 849, 876, 885, 886, 887, 888, 966, 975, 976, 977, 978, 1012, 1021, 1022, 1047, 1056, 1057, 1146, 1155, 1156, 1157, 1158, 1159, 1160, 1161, 1162, 1222, 1231, 1232, 1233, 1234, 1235, 1236, 1238, 1239, 1240, 1241, 1242, 1243, 1244, 1245, 1274, 1283, 1284, 1300], "extdict": [20, 670, 690, 841, 876, 966, 1012, 1047, 1146, 1222, 1274, 1300], "init_test": [21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 842, 843, 844, 845, 846, 847, 848, 849, 850, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 967, 968, 969, 970, 971, 972, 973, 974, 975, 976, 977, 978, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1147, 1148, 1149, 1150, 1151, 1152, 1153, 1154, 1155, 1156, 1157, 1158, 1159, 1160, 1161, 1162, 1223, 1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1238, 1239, 1240, 1241, 1242, 1243, 1244, 1245, 1275, 1276, 1277, 1278, 1279, 1280, 1281, 1282, 1283, 1284, 1300], "A": [21, 112, 117, 118, 387, 424, 439, 452, 522, 523, 671, 691, 712, 713, 718, 724, 733, 739, 740, 755, 758, 759, 760, 777, 779, 781, 783, 784, 785, 791, 792, 793, 796, 797, 799, 800, 804, 805, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 827, 833, 842, 861, 863, 865, 870, 877, 896, 931, 959, 967, 1005, 1008, 1013, 1038, 1045, 1048, 1062, 1132, 1136, 1137, 1138, 1139, 1140, 1141, 1147, 1174, 1201, 1209, 1214, 1223, 1275, 1305, 1308], "useful": [21, 671, 691, 826, 827, 842, 877, 967, 1013, 1048, 1147, 1174, 1223, 1275], "assert": [21, 123, 671, 691, 842, 877, 967, 1013, 1048, 1147, 1223, 1275], "better": [21, 671, 691, 732, 842, 877, 967, 1013, 1048, 1147, 1223, 1275, 1301], "numpi": [21, 671, 691, 703, 704, 705, 706, 707, 711, 737, 760, 777, 779, 782, 791, 795, 796, 797, 798, 804, 822, 827, 829, 831, 836, 842, 877, 896, 967, 1013, 1048, 1147, 1211, 1212, 1223, 1275, 1308], "arrai": [21, 49, 328, 329, 369, 370, 371, 384, 385, 386, 452, 475, 630, 665, 671, 691, 703, 711, 713, 737, 760, 778, 779, 780, 781, 782, 783, 784, 785, 822, 827, 829, 831, 835, 836, 842, 857, 865, 877, 896, 898, 931, 933, 935, 937, 939, 942, 944, 964, 967, 993, 1007, 1013, 1025, 1027, 1028, 1041, 1048, 1068, 1132, 1134, 1138, 1147, 1182, 1207, 1209, 1223, 1275, 1300, 1301, 1308, 1309], "comparison": [21, 185, 671, 691, 827, 842, 877, 967, 1013, 1048, 1147, 1223, 1275], "constructor": [21, 27, 30, 38, 45, 49, 52, 60, 61, 62, 63, 64, 65, 66, 91, 113, 118, 119, 120, 121, 122, 123, 125, 126, 129, 146, 147, 167, 210, 222, 274, 288, 289, 290, 299, 305, 312, 317, 323, 327, 338, 348, 356, 359, 363, 368, 378, 384, 385, 387, 391, 420, 423, 452, 453, 454, 455, 456, 457, 469, 473, 475, 477, 479, 482, 489, 522, 523, 524, 660, 667, 671, 677, 680, 682, 691, 697, 701, 709, 711, 712, 713, 714, 715, 717, 718, 720, 721, 722, 723, 724, 725, 726, 727, 728, 732, 733, 734, 735, 742, 743, 744, 745, 749, 758, 759, 760, 762, 763, 777, 778, 779, 780, 781, 782, 787, 788, 789, 790, 791, 792, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 822, 823, 824, 825, 827, 828, 842, 848, 859, 861, 862, 863, 864, 865, 867, 868, 870, 877, 883, 886, 888, 896, 898, 956, 959, 960, 962, 963, 964, 967, 973, 976, 978, 982, 983, 984, 985, 987, 988, 991, 992, 993, 996, 997, 1000, 1001, 1002, 1003, 1005, 1006, 1007, 1008, 1013, 1019, 1022, 1025, 1026, 1027, 1028, 1031, 1032, 1034, 1035, 1036, 1038, 1039, 1040, 1041, 1044, 1045, 1048, 1054, 1057, 1060, 1061, 1067, 1068, 1069, 1070, 1077, 1078, 1079, 1082, 1083, 1086, 1087, 1090, 1091, 1094, 1095, 1098, 1099, 1102, 1103, 1104, 1107, 1108, 1111, 1112, 1113, 1116, 1117, 1120, 1121, 1124, 1125, 1128, 1129, 1132, 1133, 1134, 1135, 1136, 1138, 1139, 1140, 1141, 1142, 1144, 1147, 1153, 1156, 1158, 1160, 1162, 1165, 1167, 1173, 1174, 1176, 1177, 1178, 1179, 1180, 1181, 1182, 1183, 1184, 1185, 1187, 1188, 1189, 1192, 1194, 1196, 1197, 1198, 1200, 1201, 1204, 1206, 1207, 1209, 1211, 1212, 1214, 1215, 1223, 1229, 1232, 1234, 1236, 1239, 1241, 1243, 1245, 1254, 1275, 1281, 1284, 1288, 1309], "_print_output": [21, 671, 691, 842, 877, 967, 1013, 1048, 1147, 1223, 1275], "_calc_arg": [21, 671, 691, 842, 877, 967, 1013, 1048, 1147, 1223, 1275], "empty_spher": [21, 660, 661, 663, 671, 691, 842, 877, 902, 967, 1013, 1048, 1147, 1174, 1223, 1275, 1300], "input_fil": [21, 671, 691, 842, 877, 959, 967, 1013, 1032, 1036, 1041, 1044, 1045, 1048, 1147, 1174, 1223, 1275, 1309], "output_test_calc": [21, 671, 691, 842, 877, 967, 1013, 1048, 1147, 1223, 1275], "inp": [21, 671, 691, 842, 877, 931, 967, 1013, 1048, 1147, 1213, 1214, 1216, 1217, 1223, 1253, 1259, 1262, 1265, 1275, 1309], "mpi": [21, 464, 465, 466, 467, 671, 691, 842, 877, 902, 903, 959, 962, 967, 1013, 1048, 1147, 1174, 1223, 1275, 1305], "ne": [21, 671, 691, 713, 760, 842, 870, 877, 931, 933, 935, 937, 939, 942, 944, 967, 1013, 1048, 1064, 1147, 1223, 1275, 1309], "20": [21, 642, 656, 671, 691, 842, 877, 944, 967, 1013, 1048, 1062, 1147, 1223, 1237, 1275], "nktab": [21, 671, 691, 842, 877, 931, 933, 935, 937, 939, 942, 944, 956, 967, 1013, 1048, 1147, 1223, 1275, 1309], "5": [21, 32, 40, 42, 278, 300, 306, 333, 359, 374, 671, 691, 713, 760, 842, 865, 870, 877, 894, 896, 931, 933, 935, 937, 939, 942, 944, 967, 1013, 1048, 1061, 1062, 1064, 1147, 1223, 1275, 1289, 1293, 1309], "output_fil": [21, 671, 691, 842, 877, 959, 967, 981, 982, 983, 984, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 997, 998, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1032, 1036, 1041, 1044, 1045, 1048, 1147, 1174, 1223, 1275, 1300, 1309], "potential_fil": [21, 671, 691, 842, 877, 967, 1013, 1048, 1072, 1147, 1174, 1223, 1275, 1309], "pot": [21, 228, 671, 691, 724, 735, 758, 759, 760, 842, 877, 967, 1013, 1048, 1147, 1213, 1223, 1275, 1301, 1309], "print_output": [21, 671, 691, 842, 868, 877, 902, 959, 967, 1013, 1044, 1048, 1147, 1174, 1223, 1275], "temporary_dir": [21, 671, 691, 701, 842, 877, 967, 1013, 1048, 1147, 1160, 1223, 1232, 1236, 1275], "classmethod": [21, 118, 125, 385, 671, 691, 714, 732, 733, 735, 745, 842, 862, 877, 959, 962, 967, 984, 1002, 1013, 1048, 1135, 1144, 1147, 1165, 1223, 1275, 1301], "calc_arg": [21, 671, 691, 842, 877, 967, 1013, 1048, 1147, 1223, 1275], "kwarg": [21, 22, 27, 28, 118, 123, 125, 126, 141, 146, 334, 335, 385, 387, 452, 455, 456, 461, 469, 473, 475, 477, 482, 640, 641, 643, 661, 662, 663, 671, 672, 677, 678, 691, 692, 697, 699, 713, 720, 722, 726, 732, 733, 740, 777, 778, 779, 780, 782, 793, 799, 805, 806, 822, 824, 842, 843, 848, 850, 868, 870, 872, 874, 877, 878, 883, 884, 959, 962, 967, 968, 973, 974, 987, 988, 991, 992, 993, 996, 997, 1006, 1009, 1013, 1014, 1019, 1020, 1025, 1027, 1028, 1041, 1044, 1048, 1049, 1054, 1055, 1078, 1083, 1087, 1091, 1095, 1099, 1104, 1108, 1112, 1117, 1121, 1125, 1129, 1132, 1133, 1134, 1135, 1147, 1148, 1153, 1154, 1170, 1174, 1177, 1187, 1209, 1223, 1224, 1229, 1230, 1275, 1276, 1281, 1282, 1288, 1290, 1291, 1299], "run_sprkkr": [21, 671, 691, 842, 877, 967, 1013, 1048, 1147, 1223, 1275], "assertasyncequ": [21, 671, 691, 842, 877, 967, 1013, 1048, 1147, 1223, 1275], "b": [21, 22, 23, 24, 25, 26, 40, 41, 42, 300, 306, 374, 384, 398, 523, 671, 672, 673, 674, 675, 676, 691, 692, 693, 694, 695, 696, 737, 739, 777, 779, 782, 822, 827, 829, 842, 843, 844, 845, 846, 847, 867, 877, 878, 879, 880, 881, 882, 896, 967, 968, 969, 970, 971, 972, 1013, 1014, 1015, 1016, 1017, 1018, 1048, 1049, 1050, 1051, 1052, 1053, 1064, 1147, 1148, 1149, 1150, 1151, 1152, 1223, 1224, 1225, 1226, 1227, 1228, 1237, 1275, 1276, 1277, 1278, 1279, 1280], "assertasyncrais": [21, 671, 691, 842, 877, 967, 1013, 1048, 1147, 1223, 1275], "assertrais": [21, 671, 691, 842, 877, 967, 1013, 1048, 1147, 1223, 1275], "assertalmostequ": [21, 671, 691, 842, 877, 967, 1013, 1048, 1147, 1223, 1275], "assertisnon": [21, 671, 691, 842, 877, 967, 1013, 1048, 1147, 1223, 1275], "static": [21, 363, 667, 671, 691, 713, 733, 777, 779, 782, 822, 827, 842, 867, 877, 896, 962, 963, 967, 993, 1013, 1048, 1061, 1133, 1144, 1147, 1167, 1194, 1197, 1201, 1204, 1206, 1209, 1214, 1223, 1275], "runasync": [21, 671, 691, 842, 877, 967, 1013, 1048, 1147, 1223, 1275], "corr": [21, 671, 691, 842, 877, 967, 1013, 1048, 1147, 1223, 1275], "asserttru": [21, 671, 691, 842, 877, 967, 1013, 1048, 1147, 1223, 1275], "val": [21, 671, 691, 732, 733, 777, 778, 779, 781, 790, 791, 792, 797, 806, 824, 827, 842, 877, 967, 1013, 1048, 1147, 1158, 1223, 1275], "assertfals": [21, 671, 691, 842, 877, 967, 1013, 1048, 1147, 1223, 1275], "assertequ": [21, 671, 691, 842, 877, 967, 1013, 1048, 1147, 1223, 1275], "msg": [21, 22, 23, 24, 25, 26, 28, 671, 672, 673, 674, 675, 676, 678, 691, 692, 693, 694, 695, 696, 699, 842, 843, 844, 845, 846, 847, 850, 877, 878, 879, 880, 881, 882, 884, 967, 968, 969, 970, 971, 972, 974, 1013, 1014, 1015, 1016, 1017, 1018, 1020, 1048, 1049, 1050, 1051, 1052, 1053, 1055, 1147, 1148, 1149, 1150, 1151, 1152, 1154, 1223, 1224, 1225, 1226, 1227, 1228, 1230, 1275, 1276, 1277, 1278, 1279, 1280, 1282], "assertnotequ": [21, 671, 691, 842, 877, 967, 1013, 1048, 1147, 1223, 1275], "almost_equal_precis": [21, 671, 691, 842, 877, 967, 1013, 1048, 1147, 1223, 1275], "assert_almost_equ": [22, 672, 692, 843, 878, 968, 1014, 1049, 1148, 1224, 1276, 1300], "non": [22, 244, 401, 452, 628, 642, 672, 692, 709, 713, 724, 732, 733, 735, 737, 758, 759, 760, 843, 861, 865, 870, 878, 896, 899, 931, 933, 935, 937, 939, 942, 944, 956, 963, 968, 987, 992, 996, 1006, 1014, 1026, 1049, 1135, 1148, 1169, 1174, 1177, 1179, 1209, 1224, 1276, 1308, 1309], "numer": [22, 672, 692, 760, 782, 787, 843, 878, 968, 1014, 1049, 1148, 1224, 1276], "dtype": [22, 672, 692, 782, 822, 827, 843, 878, 896, 968, 1014, 1049, 1148, 1224, 1276], "kwar": [25, 26, 675, 676, 695, 696, 846, 847, 881, 882, 971, 972, 1017, 1018, 1052, 1053, 1151, 1152, 1227, 1228, 1279, 1280], "arg": [27, 60, 70, 118, 125, 126, 141, 146, 242, 334, 335, 385, 452, 455, 456, 461, 469, 473, 475, 477, 482, 627, 656, 677, 697, 720, 733, 740, 805, 806, 824, 848, 855, 872, 874, 883, 922, 925, 959, 973, 1019, 1025, 1027, 1028, 1044, 1054, 1079, 1094, 1103, 1107, 1113, 1120, 1124, 1132, 1133, 1134, 1140, 1153, 1170, 1174, 1187, 1209, 1229, 1252, 1255, 1256, 1258, 1261, 1264, 1267, 1270, 1281, 1299, 1300], "fce": [28, 678, 699, 850, 856, 884, 974, 1020, 1055, 1154, 1190, 1230, 1282], "testbuild": [29, 1233], "test_build": [30, 1234, 1300], "test_stack": 30, "visualis": [32, 1213, 1253, 1259, 1262, 1265, 1287, 1288, 1289, 1290, 1291, 1292, 1293, 1294, 1295, 1296, 1297, 1298, 1299, 1300, 1301, 1309], "scale_radii": 32, "rotat": [32, 543, 547, 931, 1169], "bond": 32, "graph": 32, "termin": 32, "block": [32, 153, 824], "viewer": 32, "tupl": [32, 125, 176, 185, 187, 288, 289, 338, 348, 368, 391, 667, 724, 732, 733, 777, 778, 780, 824, 827, 831, 836, 868, 893, 894, 1169], "x": [32, 52, 53, 296, 312, 317, 359, 363, 382, 420, 737, 742, 744, 787, 893, 898, 931, 933, 935, 937, 939, 942, 944, 979, 1291, 1309], "y": [32, 52, 296, 312, 317, 330, 331, 359, 363, 368, 370, 420, 737, 792, 933, 939, 944, 1064, 1291], "z": [32, 52, 296, 312, 317, 329, 363, 803, 807, 933, 939, 944, 1197], "number": [32, 100, 127, 185, 296, 323, 329, 369, 374, 385, 387, 396, 398, 423, 452, 629, 645, 665, 667, 668, 687, 688, 720, 755, 760, 782, 783, 786, 787, 792, 794, 795, 798, 802, 804, 805, 808, 822, 824, 835, 853, 865, 893, 896, 898, 931, 933, 935, 937, 939, 942, 944, 959, 964, 993, 1007, 1025, 1027, 1028, 1037, 1038, 1062, 1068, 1079, 1086, 1094, 1103, 1107, 1113, 1120, 1124, 1134, 1140, 1142, 1144, 1165, 1169, 1174, 1180, 1182, 1194, 1207, 1209, 1210, 1211, 1212, 1217, 1301, 1309], "size": [32, 54, 301, 307, 360, 364, 372, 374, 452, 665, 1132, 1301], "str": [32, 38, 45, 49, 52, 66, 91, 92, 100, 108, 114, 118, 121, 122, 125, 133, 141, 146, 147, 153, 162, 173, 174, 176, 180, 185, 187, 210, 222, 229, 244, 274, 288, 289, 290, 296, 299, 305, 312, 317, 323, 327, 329, 338, 348, 356, 359, 363, 368, 378, 384, 387, 420, 423, 424, 452, 522, 523, 535, 633, 643, 665, 709, 713, 714, 717, 720, 724, 727, 733, 755, 758, 759, 760, 767, 769, 770, 771, 777, 779, 780, 782, 787, 788, 789, 790, 791, 792, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 806, 807, 808, 822, 823, 824, 825, 827, 828, 830, 833, 838, 861, 865, 870, 893, 896, 898, 959, 962, 963, 964, 988, 993, 997, 1006, 1007, 1025, 1026, 1027, 1028, 1038, 1041, 1061, 1068, 1070, 1079, 1095, 1098, 1103, 1108, 1113, 1116, 1120, 1124, 1128, 1132, 1133, 1134, 1135, 1140, 1142, 1144, 1165, 1167, 1170, 1174, 1176, 1180, 1182, 1194, 1211, 1212, 1217, 1220, 1288, 1295, 1299], "exampl": [32, 118, 123, 187, 289, 382, 401, 424, 452, 727, 739, 740, 742, 744, 787, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 923, 924, 925, 926, 927, 928, 1174, 1300, 1303, 1305, 1309], "x90": 32, "y90": 32, "z90": 32, "show": [32, 42, 46, 218, 709, 724, 733, 898, 988, 993, 997, 1041, 1288, 1295, 1297, 1299, 1302, 1303], "between": [32, 205, 206, 207, 208, 317, 896, 931, 1301, 1308], "subprocess": [32, 687, 872, 873, 874, 1300], "achiev": 32, "nonblock": 32, "recip": [33, 115, 118, 173, 202, 280, 355, 382, 446, 504, 515, 516, 517, 518, 577, 579, 585, 593, 644], "thu": [33, 703, 713, 739, 782, 865, 959, 1044, 1209, 1308, 1309], "relax": [33, 384, 385, 386, 387, 389, 401, 593, 1300], "avail": [33, 114, 434, 856, 896, 959, 1209, 1247, 1301, 1309], "main": [34, 280, 332, 355, 384, 401, 402, 452, 503, 1194, 1247, 1300, 1309], "asr": [35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 125, 126, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 1300, 1301], "charg": [35, 36, 48, 208, 385, 402, 452, 931, 933, 935, 937, 939, 942, 944, 1032, 1041, 1077, 1078, 1079, 1080, 1083, 1174, 1206, 1207, 1301, 1309], "analysi": [35, 44, 90], "bader": [36, 1300], "core": [37, 38, 44, 45, 48, 49, 51, 52, 58, 66, 90, 91, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 125, 126, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 209, 210, 220, 222, 273, 274, 287, 288, 289, 290, 298, 299, 303, 305, 311, 312, 316, 317, 322, 323, 326, 327, 337, 338, 347, 348, 355, 356, 358, 359, 362, 363, 367, 368, 377, 378, 382, 384, 419, 420, 422, 423, 521, 522, 523, 524, 761, 762, 763, 1066, 1069, 1165, 1300], "asrresult": [37, 38, 44, 45, 48, 49, 51, 52, 58, 66, 90, 91, 117, 119, 120, 121, 122, 125, 139, 209, 210, 220, 222, 273, 274, 287, 288, 289, 290, 298, 299, 303, 305, 311, 312, 316, 317, 322, 323, 326, 327, 337, 338, 347, 348, 355, 356, 358, 359, 362, 363, 367, 368, 377, 378, 382, 384, 419, 420, 422, 423, 521, 522, 523], "band": [37, 42, 45, 217, 223, 229, 240, 288, 289, 299, 303, 304, 305, 337, 347, 367, 369, 374, 452, 633, 931], "bandstructur": [38, 39, 40, 41, 42, 43, 299, 305, 338, 348, 1300], "bs_nosoc": 38, "bs_soc": 38, "dict": [38, 45, 49, 52, 66, 91, 92, 113, 118, 119, 121, 123, 125, 131, 149, 157, 168, 174, 176, 185, 210, 222, 274, 288, 289, 290, 299, 305, 312, 317, 323, 327, 329, 330, 338, 348, 356, 359, 363, 368, 378, 384, 387, 402, 420, 423, 452, 522, 523, 633, 652, 665, 667, 713, 715, 720, 734, 830, 833, 854, 870, 896, 898, 1041, 1170, 1174, 1194, 1207, 1209], "instanti": [38, 45, 49, 52, 66, 91, 118, 121, 125, 140, 210, 222, 274, 288, 289, 290, 299, 305, 312, 317, 323, 327, 338, 348, 356, 359, 363, 368, 378, 384, 420, 423, 522, 523, 724, 827, 898, 959, 1025, 1308], "data": [38, 45, 49, 52, 66, 91, 113, 114, 118, 121, 141, 152, 164, 172, 210, 222, 274, 288, 289, 290, 299, 305, 312, 317, 323, 327, 338, 348, 356, 359, 363, 368, 378, 384, 396, 398, 420, 423, 522, 523, 549, 703, 709, 713, 716, 717, 724, 733, 758, 759, 760, 782, 822, 823, 824, 825, 868, 870, 898, 899, 900, 937, 959, 964, 982, 984, 991, 993, 1000, 1002, 1007, 1009, 1024, 1025, 1027, 1028, 1041, 1042, 1061, 1068, 1095, 1098, 1116, 1128, 1132, 1134, 1138, 1142, 1143, 1144, 1163, 1176, 1180, 1181, 1182, 1188, 1194, 1207, 1209, 1214, 1217, 1289, 1291, 1300, 1301, 1308], "input": [38, 45, 49, 52, 66, 91, 118, 121, 202, 210, 222, 274, 288, 289, 290, 299, 305, 312, 317, 323, 327, 338, 348, 356, 359, 363, 368, 378, 384, 402, 403, 420, 423, 522, 523, 640, 713, 717, 724, 732, 733, 735, 751, 758, 759, 760, 773, 789, 796, 812, 816, 827, 833, 870, 896, 898, 909, 929, 931, 932, 933, 934, 935, 936, 937, 938, 939, 940, 942, 943, 944, 945, 946, 947, 949, 951, 952, 953, 954, 955, 956, 958, 959, 960, 962, 963, 964, 987, 992, 996, 1006, 1007, 1024, 1025, 1026, 1027, 1028, 1044, 1065, 1068, 1134, 1135, 1144, 1174, 1177, 1179, 1182, 1301, 1302, 1303, 1305, 1308], "wrap": [38, 45, 49, 52, 66, 91, 117, 118, 121, 210, 222, 274, 288, 289, 290, 299, 305, 312, 317, 323, 327, 338, 348, 356, 359, 363, 368, 378, 384, 420, 423, 522, 523, 715, 739, 824], "metadata": [38, 45, 49, 52, 66, 91, 117, 118, 121, 124, 142, 210, 222, 274, 288, 289, 290, 299, 305, 312, 317, 323, 327, 338, 348, 356, 359, 363, 368, 378, 384, 420, 423, 522, 523], "dictionari": [38, 45, 49, 52, 66, 91, 117, 118, 121, 125, 143, 144, 147, 151, 185, 199, 210, 222, 274, 288, 289, 290, 299, 305, 312, 317, 323, 327, 330, 331, 338, 348, 356, 359, 363, 368, 371, 372, 378, 384, 402, 420, 423, 452, 455, 522, 523, 667, 709, 713, 720, 727, 732, 733, 737, 861, 865, 870, 896, 898, 1064, 1174, 1207, 1308], "strict": [38, 45, 49, 52, 66, 91, 118, 121, 141, 210, 222, 274, 288, 289, 290, 299, 305, 312, 317, 323, 327, 338, 348, 356, 359, 363, 368, 378, 384, 420, 423, 522, 523, 863, 896], "strictli": [38, 45, 49, 52, 66, 91, 118, 121, 210, 222, 274, 288, 289, 290, 299, 305, 312, 317, 323, 327, 338, 348, 356, 359, 363, 368, 378, 384, 420, 423, 522, 523], "enforc": [38, 45, 49, 52, 66, 91, 118, 121, 210, 222, 274, 288, 289, 290, 299, 305, 312, 317, 323, 327, 338, 348, 356, 359, 363, 368, 378, 382, 384, 420, 423, 522, 523, 713, 827, 865, 870], "entri": [38, 45, 49, 52, 66, 91, 118, 121, 172, 177, 210, 222, 274, 288, 289, 290, 299, 305, 312, 317, 323, 327, 338, 348, 356, 359, 363, 368, 378, 384, 420, 423, 522, 523], "properti": [38, 45, 49, 52, 62, 65, 91, 118, 123, 125, 141, 287, 288, 289, 290, 299, 305, 312, 317, 323, 327, 338, 348, 356, 359, 363, 368, 384, 420, 423, 452, 456, 515, 522, 523, 636, 667, 709, 711, 718, 720, 724, 728, 732, 733, 735, 740, 742, 743, 744, 758, 759, 760, 762, 779, 782, 802, 806, 823, 827, 832, 861, 864, 865, 898, 959, 964, 984, 991, 993, 1002, 1007, 1025, 1027, 1028, 1032, 1041, 1044, 1045, 1060, 1068, 1079, 1094, 1098, 1103, 1107, 1113, 1116, 1120, 1124, 1128, 1134, 1138, 1140, 1142, 1144, 1165, 1167, 1173, 1174, 1182, 1189, 1194, 1197, 1198, 1200, 1205, 1206, 1207, 1209, 1305, 1308], "spin": [38, 223, 229, 240, 288, 289, 323, 328, 330, 331, 450, 452, 453, 485, 629, 654, 931, 933, 937, 939, 942, 944, 991, 993], "orbit": [38, 229, 328, 367, 368, 370, 933, 939, 944, 993], "coupl": [38, 229, 244, 382, 633, 933, 939, 944], "without": [38, 289, 290, 363, 382, 597, 667, 713, 782, 803, 807, 827, 870, 1305, 1308], "key_descript": [38, 43, 45, 47, 49, 50, 52, 55, 89, 91, 97, 118, 129, 168, 176, 178, 211, 215, 219, 248, 279, 288, 289, 290, 297, 299, 302, 305, 310, 312, 315, 317, 321, 323, 325, 327, 336, 338, 346, 348, 354, 356, 357, 359, 361, 363, 366, 368, 375, 381, 384, 420, 421, 423, 425, 522, 523, 648], "format": [38, 45, 49, 52, 66, 91, 94, 118, 123, 126, 128, 133, 201, 208, 210, 222, 274, 289, 299, 305, 312, 317, 323, 327, 338, 348, 356, 359, 363, 368, 378, 420, 423, 522, 709, 724, 732, 733, 754, 755, 756, 777, 778, 779, 780, 781, 782, 787, 788, 789, 790, 791, 792, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 806, 807, 808, 822, 823, 824, 825, 827, 828, 830, 832, 833, 862, 865, 893, 900, 931, 933, 935, 937, 939, 942, 944, 959, 961, 962, 963, 964, 985, 1003, 1006, 1007, 1026, 1038, 1067, 1070, 1071, 1072, 1073, 1131, 1133, 1135, 1176, 1181, 1184, 1197, 1211, 1212, 1300, 1301, 1308, 1309], "ase_webpanel": [38, 45, 49, 52, 66, 91, 210, 222, 274, 289, 299, 305, 312, 317, 323, 327, 338, 348, 356, 359, 363, 368, 378, 420, 423, 522], "webpanel": [38, 45, 49, 52, 66, 91, 115, 118, 129, 210, 222, 274, 289, 299, 305, 312, 317, 323, 327, 338, 348, 356, 359, 363, 368, 378, 420, 423, 524, 1300], "_known_data_kei": [38, 45, 49, 52, 66, 91, 210, 222, 274, 288, 289, 290, 299, 305, 312, 317, 323, 327, 338, 348, 356, 359, 363, 368, 378, 384, 420, 423, 522, 523], "row": [39, 40, 41, 43, 47, 50, 53, 55, 70, 87, 89, 92, 95, 97, 129, 167, 168, 169, 176, 178, 179, 180, 185, 199, 211, 214, 215, 218, 219, 226, 235, 242, 248, 261, 275, 278, 279, 291, 297, 300, 302, 306, 310, 313, 315, 321, 325, 333, 336, 341, 342, 346, 351, 352, 354, 357, 361, 365, 366, 374, 375, 380, 381, 421, 425, 647, 648, 782], "refer": [39, 58, 60, 61, 62, 63, 68, 71, 91, 93, 185, 252, 1117, 1142, 1189, 1207, 1300], "color": [39, 42, 331, 1291, 1293], "c1": 39, "plot": [39, 42, 208, 374, 760, 927, 988, 991, 993, 997, 1041, 1260, 1261, 1288, 1289, 1290, 1291, 1292, 1293, 1294, 1295, 1296, 1297, 1298, 1299, 1300, 1301, 1302, 1303], "pbe": [39, 40, 41, 217, 304, 374, 933, 939, 942, 944], "soc": [39, 217, 223, 229, 237, 238, 244, 245, 247, 289, 290, 293, 295, 299, 305, 317, 327, 333, 452, 478, 632, 633, 933, 939, 944], "png": [40, 218, 300, 306, 374], "figsiz": [40, 41, 300, 306, 333, 374, 988, 993, 997, 1288, 1299], "show_legend": [40, 41, 300, 306], "": [40, 41, 42, 275, 300, 306, 330, 331, 368, 370, 371, 372, 420, 709, 713, 724, 733, 740, 752, 777, 779, 782, 787, 822, 829, 865, 870, 898, 931, 933, 939, 942, 944, 984, 991, 1002, 1025, 1041, 1064, 1132, 1165, 1174, 1189], "6": [41, 416, 903, 931, 933, 935, 937, 939, 942, 944, 988, 993, 997, 1061, 1062, 1064, 1174, 1288, 1299, 1305, 1309], "4": [41, 452, 781, 787, 792, 852, 854, 894, 896, 931, 933, 935, 937, 939, 942, 944, 959, 993, 1061, 1062, 1064, 1172, 1174, 1288, 1289, 1299, 1305, 1309], "emin": [42, 388, 933, 935, 939, 942, 944, 1041], "emax": [42, 933, 935], "energi": [42, 52, 75, 91, 93, 94, 185, 187, 201, 208, 252, 289, 292, 317, 328, 384, 387, 452, 453, 633, 709, 786, 865, 918, 931, 933, 935, 937, 939, 942, 944, 991, 993, 1041, 1174, 1301, 1302, 1303, 1309], "colorbar": [42, 1291], "ylabel": [42, 1291, 1298], "clabel": 42, "s_z": 42, "cmin": 42, "cmax": 42, "sortcolor": 42, "loc": [42, 762, 1069], "topolog": 44, "berri": [45, 46, 47, 452, 1300], "topologi": [45, 497], "fname": [46, 84, 95, 278, 291, 313, 341, 342, 351, 352, 647], "effect": [48, 220, 228, 229, 363, 760, 896, 898, 1209], "born": 48, "borncharg": [49, 50, 1300], "z_avv": [49, 314], "sym_a": 49, "ndarrai": [49, 228, 240, 243, 289, 290, 384, 452, 629, 665, 688, 777, 778, 780, 782, 831, 836, 896, 1167, 1209], "chemic": [49, 328, 330, 331, 368, 384, 394, 423, 424, 665, 1064, 1165, 1194, 1206, 1207, 1309], "beth": 51, "salpet": 51, "absorpt": [51, 1300], "spectrum": [51, 369, 377], "bse": [52, 53, 54, 55, 1300], "bse_alphay_w": 52, "bse_alphaz_w": 52, "bse_alphax_w": 52, "e_b": 52, "exciton": 52, "bind": [52, 113, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 1117, 1174, 1300], "ev": [52, 91, 229, 288, 289, 290, 292, 296, 299, 305, 312, 317, 327, 328, 338, 348, 359, 363, 384, 629, 794, 865, 931, 933, 935, 937, 939, 942, 944], "polariz": [52, 311, 312, 363, 364, 366, 1300], "kptdensiti": [54, 301, 307, 308, 416, 642], "get": [54, 104, 105, 113, 118, 125, 134, 136, 139, 185, 205, 207, 296, 301, 331, 360, 364, 370, 371, 372, 373, 385, 398, 424, 452, 629, 630, 635, 640, 641, 713, 822, 865, 870, 898, 959, 964, 984, 1002, 1007, 1025, 1027, 1028, 1068, 1075, 1134, 1138, 1174, 1182, 1309], "reason": [54, 301, 307, 360, 364, 635, 827], "monkhorst": [54, 301, 307, 360, 364, 635], "hit": [54, 301, 307, 360, 364, 635], "high": [54, 301, 307, 338, 360, 364, 420, 635, 933, 939, 944], "point": [54, 208, 228, 288, 289, 290, 299, 301, 305, 307, 360, 364, 369, 372, 374, 402, 423, 452, 635, 653, 687, 688, 931, 933, 935, 937, 939, 942, 944], "convexhullrefer": [58, 1300], "hyperplan": [58, 1300], "intermedi": [58, 81, 1186, 1300], "leanintermedi": [58, 1300], "chc": [60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 1300], "element": [60, 68, 74, 185, 252, 424, 452, 665, 720, 722, 724, 727, 733, 736, 758, 759, 760, 761, 827, 833, 861, 898, 964, 1007, 1025, 1027, 1028, 1068, 1134, 1165, 1182, 1194, 1206, 1207, 1301], "_construct_coordin": 60, "from_refer": 60, "is_singl": 60, "pt": [61, 77, 1064], "find_t": 61, "p": [61, 64, 787, 792, 931, 991, 1064, 1174, 1309], "mat_refer": [62, 63], "reactant_refer": [62, 63], "to_dict": [62, 63, 65, 709], "from_dict": [62, 63, 65], "label": [62, 452, 667, 781, 782, 1174], "to_result": [62, 63], "_get_hform_data": 62, "reactant_cont": 62, "pt1": 64, "pt2": 64, "intersect": [64, 207, 1300], "plane": [64, 289, 290, 292], "find_": 64, "formula": [65, 75, 86, 261, 423, 424, 933, 939, 944], "hform": [65, 91], "to_el": 65, "natom": [65, 185, 187, 688], "tl": [67, 1064], "db": [68, 75, 87, 96, 112, 113, 257, 260, 261, 268, 438], "mat_ref": [69, 71, 81, 85], "reactant_ref": [69, 81, 85], "ref": [69, 73, 74, 85, 258, 260, 787], "chref": 72, "mat_formula": 72, "react_formula": 72, "u": [76, 80, 82, 83, 1064, 1309], "ind": 77, "eq": [77, 896], "si": [77, 382, 1064], "oh": 77, "v1": 78, "v2": 78, "u0": 79, "v": [83, 727, 787, 933, 939, 942, 944, 1064], "t1": 88, "t2": 88, "convex": [90, 91], "hull": [90, 91], "stabil": [90, 91, 337, 338, 348, 420, 1301], "convex_hul": [91, 92, 93, 94, 95, 96, 97, 1300], "thermodynamic_stability_level": 91, "ehul": 91, "indic": [91, 240, 329, 331, 369, 931, 1301, 1309], "coef": 91, "abov": [91, 187, 328, 1174, 1217, 1308, 1309], "heat": [91, 94], "relev": 91, "thermodynam": 91, "level": [91, 229, 240, 288, 289, 290, 292, 296, 299, 305, 327, 452, 629, 633, 724, 733, 931], "fraction": [91, 374, 1207], "decompos": 91, "atomsrow": [92, 112, 113, 176, 214], "energy_kei": [93, 512], "count": [94, 398, 1300], "ref_energi": 94, "command": [99, 108, 959, 1044, 1247, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1265, 1266, 1267, 1268, 1269, 1270, 1300], "cli": [100, 101, 102, 103, 104, 105, 106, 107, 108, 503, 602, 891, 1271, 1300], "job_num": [100, 108], "append": [100, 787, 902, 959, 1174, 1209], "job": 100, "messag": [100, 724, 758, 759, 760, 764, 765, 777, 778, 779, 782, 787, 788, 789, 790, 791, 795, 796, 797, 799, 800, 801, 802, 803, 806, 807, 808, 822, 823, 825, 827, 828, 840, 1070, 1309], "git": [101, 105, 1305, 1309], "instal": [101, 382, 857, 1301, 1305], "extract": [102, 251], "hash": [102, 105, 188, 190], "file": [102, 123, 142, 146, 153, 159, 162, 202, 204, 218, 244, 296, 387, 401, 411, 426, 434, 452, 525, 640, 643, 709, 710, 712, 713, 717, 719, 720, 722, 723, 724, 725, 726, 727, 729, 732, 733, 735, 757, 758, 759, 760, 767, 773, 782, 789, 796, 809, 811, 812, 815, 816, 818, 821, 822, 824, 825, 827, 859, 861, 862, 863, 865, 867, 868, 870, 898, 899, 901, 909, 929, 931, 933, 935, 937, 939, 942, 944, 946, 947, 949, 951, 952, 953, 954, 955, 956, 958, 959, 961, 962, 963, 964, 981, 984, 985, 987, 988, 991, 992, 996, 997, 999, 1002, 1003, 1005, 1006, 1007, 1008, 1009, 1010, 1023, 1024, 1025, 1026, 1027, 1028, 1031, 1032, 1041, 1043, 1044, 1067, 1068, 1073, 1078, 1079, 1083, 1086, 1087, 1091, 1094, 1095, 1099, 1103, 1104, 1107, 1108, 1112, 1113, 1117, 1120, 1121, 1124, 1125, 1129, 1131, 1133, 1134, 1135, 1137, 1140, 1143, 1144, 1174, 1175, 1176, 1177, 1178, 1179, 1181, 1182, 1183, 1184, 1185, 1186, 1188, 1189, 1208, 1213, 1214, 1217, 1253, 1259, 1262, 1265, 1287, 1295, 1301, 1302, 1303, 1305], "content": [103, 115, 116, 401, 704, 713, 718, 724, 732, 733, 782, 870, 959, 984, 1002, 1066, 1067, 1068, 1069, 1144, 1219, 1308, 1309], "indent": [103, 122, 171, 724, 733, 824, 898], "titl": [103, 177, 179, 227, 1291, 1298], "pad": 103, "path": [104, 111, 139, 153, 162, 176, 214, 304, 338, 348, 384, 387, 709, 898, 931, 933, 935, 937, 939, 942, 944, 959, 964, 1007, 1025, 1027, 1028, 1044, 1068, 1134, 1174, 1182, 1309], "configur": [104, 106, 401, 402, 426, 434, 435, 710, 711, 712, 713, 714, 717, 718, 719, 720, 724, 732, 733, 757, 758, 759, 760, 775, 796, 827, 860, 861, 862, 864, 865, 869, 870, 898, 899, 901, 946, 956, 958, 959, 960, 961, 962, 963, 964, 981, 983, 984, 985, 986, 987, 988, 990, 992, 993, 995, 996, 997, 999, 1001, 1002, 1003, 1004, 1006, 1007, 1025, 1027, 1028, 1066, 1067, 1068, 1076, 1077, 1078, 1079, 1081, 1082, 1083, 1085, 1086, 1087, 1089, 1090, 1091, 1093, 1094, 1095, 1097, 1098, 1099, 1101, 1102, 1103, 1104, 1106, 1107, 1108, 1110, 1111, 1112, 1113, 1115, 1116, 1117, 1119, 1120, 1121, 1123, 1124, 1125, 1127, 1128, 1129, 1131, 1132, 1133, 1134, 1135, 1137, 1138, 1139, 1141, 1142, 1143, 1144, 1176, 1177, 1178, 1179, 1180, 1181, 1182, 1183, 1184, 1185, 1300, 1301, 1305], "dir": [104, 106, 440, 450, 452, 749], "rev": 105, "hash1": 105, "hash2": 105, "construct": [106, 113, 114, 125, 185, 452, 667], "initi": [107, 123, 125, 146, 387, 598, 931, 1174, 1209], "folder": [108, 114, 150, 182, 198, 199, 200, 204, 401, 402, 405, 408, 412, 420, 439, 534, 535], "not_recip": 108, "dry_run": 108, "skip_if_don": 108, "dont_rais": 108, "updat": [108, 160, 452, 663, 667, 1142, 1144, 1174, 1181, 1194, 1207, 1209, 1308, 1309], "must_exist": [108, 146], "implement": [109, 117, 118, 145, 149, 437, 452, 709, 720, 732, 739, 746, 827, 898, 899, 959, 1176, 1182, 1308, 1309], "asrcommand": [109, 115], "relat": [109, 117, 146, 289, 667, 959, 1044, 1058], "decor": [109, 395, 396, 397, 398, 739, 740, 741, 742, 743, 744, 745, 746, 747, 1297, 1300], "fix_old_fil": [111, 1300], "close": [112, 113, 867], "mimic": [112, 113, 867], "behaviour": [112, 118], "kvp": [113, 305, 338, 359], "instanc": [113, 114, 115, 118, 125, 130, 452, 455, 709, 719, 724, 732, 733, 746, 782, 783, 784, 785, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 827, 832, 833, 865, 896, 898, 962, 964, 1007, 1025, 1027, 1028, 1068, 1134, 1135, 1182], "kei": [113, 118, 123, 124, 133, 134, 138, 141, 168, 178, 179, 180, 185, 199, 225, 329, 330, 331, 373, 390, 391, 392, 603, 713, 727, 737, 760, 896, 993, 1064], "pair": [113, 390, 392, 827, 861, 898, 964, 1007, 1025, 1027, 1028, 1068, 1134, 1182, 1308], "raw": [113, 385, 760], "associ": [113, 117, 1174, 1194, 1309], "stuctur": [113, 304], "toatom": 113, "contruct": 114, "where": [114, 185, 199, 713, 720, 733, 735, 827, 870, 896, 959, 1038, 1174, 1207, 1217, 1288, 1299, 1300, 1309], "collect": [114, 837, 895, 896, 1041], "output": [114, 504, 643, 665, 722, 723, 724, 729, 733, 755, 757, 758, 759, 760, 777, 778, 779, 782, 788, 789, 790, 791, 792, 796, 797, 799, 800, 803, 806, 807, 821, 822, 823, 824, 825, 827, 828, 832, 858, 859, 865, 866, 868, 898, 931, 933, 935, 937, 939, 942, 944, 959, 962, 964, 981, 984, 988, 999, 1002, 1005, 1006, 1007, 1008, 1009, 1010, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1065, 1068, 1070, 1134, 1174, 1182, 1300, 1301, 1305, 1309], "web": 115, "panel": [115, 116, 177], "evalu": [115, 296, 440], "figur": [116, 174], "interest": 116, "dictencod": [117, 118], "resultencod": [117, 119, 120, 122, 129, 521, 524], "abc": [117, 119, 120, 122, 126, 129, 451, 452, 521, 524, 761, 762, 763, 1041, 1066, 1069, 1172, 1174], "htmlencod": [117, 118], "hackedasrresult": 117, "jsonencod": [117, 118], "objectdescript": [117, 118, 140, 142, 143, 144], "webpanelencod": [117, 521, 522, 524], "quantiti": 117, "ha": [117, 118, 382, 423, 452, 653, 709, 711, 713, 716, 720, 721, 724, 732, 733, 735, 739, 740, 758, 759, 760, 782, 789, 824, 827, 830, 832, 863, 898, 956, 959, 960, 963, 964, 984, 987, 992, 996, 1002, 1006, 1007, 1025, 1026, 1027, 1028, 1041, 1066, 1068, 1079, 1094, 1103, 1107, 1113, 1120, 1124, 1134, 1135, 1140, 1142, 1167, 1174, 1177, 1179, 1182, 1209, 1301, 1308, 1309], "bunch": 117, "encod": [117, 119, 120, 122, 126, 129], "repres": [117, 131, 445, 446, 629, 709, 775, 791, 797, 937, 1165, 1207], "potenti": [117, 209, 290, 452, 710, 718, 733, 782, 809, 811, 815, 818, 827, 862, 865, 931, 933, 935, 937, 939, 942, 944, 961, 962, 985, 1003, 1006, 1024, 1026, 1032, 1041, 1044, 1066, 1067, 1068, 1069, 1070, 1071, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1145, 1146, 1147, 1148, 1149, 1150, 1151, 1152, 1153, 1154, 1155, 1156, 1157, 1158, 1159, 1160, 1161, 1162, 1174, 1180, 1181, 1184, 1186, 1187, 1188, 1189, 1197, 1206, 1207, 1209, 1214, 1217, 1265, 1300, 1301, 1305], "also": [117, 141, 177, 382, 387, 452, 643, 724, 733, 896, 898, 958, 964, 1007, 1025, 1027, 1028, 1068, 1134, 1165, 1182, 1209, 1308, 1309], "decod": [117, 119, 122, 126], "These": [117, 933, 939, 944, 958, 1138, 1308], "convert": [117, 125, 131, 146, 147, 149, 151, 157, 198, 391, 651, 742, 744, 755, 777, 778, 779, 782, 787, 788, 789, 790, 791, 792, 795, 796, 797, 799, 800, 802, 803, 804, 806, 807, 822, 823, 824, 825, 827, 828, 833, 893, 1070, 1174, 1209], "through": [117, 118, 132, 1309], "dct_to_result": 117, "base": [118, 126, 296, 642, 708, 709, 713, 717, 720, 724, 728, 733, 735, 758, 782, 787, 788, 801, 827, 861, 870, 896, 1045, 1139, 1141, 1175, 1187, 1201, 1305], "It": [118, 141, 382, 665, 713, 715, 720, 724, 735, 758, 759, 760, 779, 788, 789, 790, 791, 796, 797, 799, 800, 803, 806, 807, 823, 825, 827, 828, 832, 862, 868, 896, 898, 931, 933, 935, 937, 939, 942, 944, 959, 1044, 1070, 1144, 1165, 1174, 1207, 1309], "circumst": 118, "under": [118, 328], "were": [118, 205, 1301, 1309], "respect": [118, 240, 763, 931], "set": [118, 123, 141, 185, 244, 245, 246, 385, 387, 390, 402, 403, 426, 434, 440, 441, 446, 452, 517, 518, 534, 561, 598, 603, 698, 707, 709, 711, 713, 720, 723, 724, 758, 759, 760, 768, 777, 778, 779, 780, 782, 787, 788, 789, 791, 792, 793, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 807, 808, 822, 825, 827, 828, 832, 833, 849, 861, 864, 865, 870, 896, 898, 931, 933, 935, 937, 939, 942, 944, 956, 959, 964, 1007, 1025, 1027, 1028, 1041, 1068, 1070, 1079, 1086, 1094, 1095, 1103, 1107, 1113, 1116, 1117, 1120, 1124, 1134, 1138, 1140, 1142, 1144, 1167, 1174, 1176, 1180, 1182, 1194, 1206, 1207, 1209, 1288, 1294, 1299, 1301, 1305, 1308], "access": [118, 739, 742, 744, 777, 778, 779, 782, 822, 827, 865, 898, 964, 1007, 1025, 1027, 1028, 1068, 1134, 1174, 1182, 1207, 1209, 1301], "directli": [118, 742, 744, 865, 1174, 1309], "present": [118, 141, 385, 717, 724, 827, 898, 959, 1025, 1144, 1174, 1175, 1194, 1206, 1207, 1210, 1287, 1309], "obtain": [118, 208, 452, 667, 827, 898, 1024, 1209, 1305, 1308, 1309], "get_format": 118, "method": [118, 452, 662, 667, 709, 720, 732, 733, 735, 738, 739, 742, 744, 745, 777, 779, 782, 788, 789, 790, 791, 796, 797, 799, 800, 803, 806, 807, 822, 823, 825, 827, 828, 829, 865, 891, 896, 898, 915, 931, 933, 935, 937, 939, 942, 944, 959, 1070, 1174, 1194, 1207, 1209, 1271, 1301, 1302, 1303, 1308, 1309], "new": [118, 143, 643, 740, 749, 782, 824, 832, 865, 959, 1032, 1041, 1079, 1094, 1103, 1107, 1113, 1120, 1124, 1140, 1172, 1174, 1188, 1194, 1206, 1209, 1309], "inherit": [118, 1167], "overwrit": 118, "appropri": [118, 629, 830, 838, 1044, 1174], "namespac": [118, 452, 475], "like": [118, 452, 534, 734, 1174, 1194, 1301], "prepare_result": 118, "fromdata": 118, "resourc": [118, 123], "good": [118, 931, 933, 935, 937, 939, 942, 944], "other_result": 118, "print": [118, 129, 656, 709, 724, 732, 733, 735, 739, 740, 755, 758, 759, 760, 779, 782, 788, 789, 790, 791, 796, 797, 799, 800, 803, 806, 807, 823, 824, 825, 827, 828, 931, 933, 935, 937, 939, 942, 944, 959, 1006, 1070, 1133, 1174, 1300, 1301, 1309], "json": [118, 122, 159, 218, 382, 387, 401, 411, 440, 517, 593], "object_id": [118, 125], "prev_vers": [118, 132, 522], "get_obj_id": 118, "from_format": 118, "input_data": 118, "format_a": 118, "specif": [118, 126, 204, 452, 709, 898, 959, 964, 1007, 1025, 1027, 1028, 1068, 1134, 1172, 1176, 1182, 1210, 1308, 1309], "get_object_desc": 118, "todict": [118, 123, 125, 130, 454, 1300], "fromdict": [118, 125], "dct": [118, 119, 125, 130, 131, 137, 142, 143, 144, 151, 157, 160, 161, 171, 228, 309, 345, 470, 1194], "self": [118, 556, 642, 643, 709, 713, 720, 724, 739, 745, 764, 765, 854, 861, 865, 868, 870, 896, 944, 962, 1144, 1174, 1209, 1309], "cl": [119, 122, 139, 141, 739, 742, 744, 745, 868, 1009, 1064, 1309], "_abc_impl": [119, 120, 122, 126, 129, 452, 524, 762, 763, 1069, 1174], "_abc": [119, 120, 122, 126, 129, 452, 524, 762, 763, 1069, 1174], "_abc_data": [119, 120, 122, 126, 129, 452, 524, 762, 763, 1069, 1174], "json_str": 122, "asr_nam": 123, "code_vers": 123, "param": [123, 146, 147, 391, 401, 440, 455, 517, 740, 862, 865, 959, 985, 1003, 1067, 1181, 1184, 1296, 1300], "accepted_kei": 123, "creat": [123, 150, 168, 178, 213, 401, 439, 440, 442, 650, 667, 709, 711, 712, 713, 714, 717, 718, 720, 724, 728, 732, 733, 737, 745, 758, 775, 779, 788, 789, 790, 791, 796, 797, 799, 800, 803, 806, 807, 823, 824, 825, 827, 828, 832, 861, 864, 870, 891, 896, 898, 947, 954, 959, 960, 964, 983, 984, 988, 993, 997, 1001, 1002, 1007, 1009, 1070, 1077, 1079, 1082, 1086, 1090, 1094, 1098, 1102, 1103, 1107, 1111, 1113, 1116, 1120, 1124, 1128, 1138, 1139, 1140, 1141, 1142, 1144, 1167, 1169, 1170, 1171, 1174, 1176, 1178, 1180, 1183, 1185, 1188, 1189, 1190, 1194, 1206, 1207, 1209, 1214, 1217, 1294, 1297, 1299, 1300, 1308, 1309], "valid": [123, 392, 709, 713, 715, 720, 724, 733, 735, 758, 759, 760, 777, 778, 779, 782, 787, 788, 789, 790, 791, 795, 796, 797, 799, 800, 801, 802, 803, 806, 807, 808, 822, 823, 825, 827, 828, 863, 864, 865, 870, 898, 959, 1070, 1095, 1117, 1176, 1180, 1301], "code": [123, 658, 698, 824, 849, 921, 924, 1218, 1301, 1302, 1303, 1305, 1309], "_set": 123, "_get": [123, 713, 1173], "encount": [124, 127, 146], "unknown": [124, 127, 128, 713, 733, 827, 865, 870, 984, 1002, 1067, 1069, 1135, 1174, 1219], "descriptor": [125, 739, 858, 859], "id": [125, 870, 890, 896, 898, 964, 991, 993, 1007, 1025, 1027, 1028, 1068, 1134, 1167, 1172, 1182], "eg": 125, "produc": [125, 374, 568, 593, 1044, 1301], "obj_to_id": 125, "keyword": [125, 452, 713, 727, 740, 786, 827, 870, 1009, 1010, 1174, 1301], "ie": [125, 139, 629], "callabl": [125, 714, 720, 787, 788, 789, 790, 791, 792, 794, 795, 796, 797, 798, 800, 801, 802, 803, 804, 807, 808, 822, 823, 824, 825, 827, 828, 865, 898, 964, 1007, 1025, 1027, 1028, 1038, 1068, 1070, 1134, 1174, 1182, 1211, 1212, 1299], "unset": 125, "extra": [125, 387, 452, 782, 1209], "suppli": [125, 727, 898, 931, 958, 1009, 1174, 1194, 1309], "abstract": [126, 802], "formatted_result": 126, "basic": [129, 452, 628, 709, 713, 725, 733, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 826, 861, 865, 870, 898, 959, 1037, 1038, 1176, 1210, 1211, 1212, 1300, 1309], "simpli": [129, 1308], "recurs": [130, 160, 732], "find": [132, 204, 240, 307, 597, 665, 687, 688, 713, 717, 720, 735, 870, 896, 1174, 1194, 1209, 1301], "match": [132, 787, 822, 824, 825], "walk": 132, "search": [132, 387, 713, 933, 939, 942, 944, 1305, 1308], "fulfil": [132, 720], "unknownasrresultformat": 132, "found": [132, 959, 1174, 1194], "attr_typ": 133, "document": [133, 667, 724, 733, 898, 931, 933, 935, 937, 939, 942, 944, 962, 1006, 1078, 1083, 1087, 1091, 1095, 1099, 1104, 1108, 1112, 1117, 1121, 1125, 1129, 1132, 1133, 1135, 1138, 1174, 1301, 1307, 1309], "obj": [134, 136, 139, 369, 643, 1209], "asr_obj_id": 135, "hint": [136, 984, 1002], "dataformat": 137, "approri": 137, "reader": [137, 866, 867, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1044, 1300, 1308, 1309], "return_typ": 138, "live": 139, "correspind": 139, "would": [139, 187, 732, 900, 959], "object_descript": 140, "prepar": [141, 1288, 1301], "read": [141, 146, 147, 153, 159, 382, 391, 452, 525, 709, 715, 717, 720, 722, 723, 724, 733, 734, 758, 822, 824, 866, 868, 898, 959, 962, 964, 984, 1002, 1007, 1024, 1025, 1027, 1028, 1039, 1044, 1066, 1068, 1069, 1079, 1094, 1103, 1107, 1108, 1113, 1120, 1124, 1133, 1134, 1138, 1140, 1142, 1144, 1174, 1176, 1182, 1186, 1187, 1188, 1213, 1214, 1217, 1305], "assign": [141, 720, 727, 735, 782, 827, 898, 964, 1007, 1025, 1027, 1028, 1041, 1068, 1134, 1182, 1291], "ensur": [141, 720], "chang": [141, 439, 452, 709, 713, 720, 724, 861, 865, 870, 898, 901, 933, 939, 942, 944, 959, 964, 1007, 1025, 1027, 1028, 1068, 1134, 1174, 1182, 1197, 1209, 1290, 1305, 1308, 1309], "signatur": [141, 714, 740], "someth": [141, 153, 645, 646, 647, 648, 942, 1142, 1300], "help": [141, 178, 709, 724, 758, 759, 760, 865, 1254, 1301, 1309], "fix": [142, 732, 733, 763, 822, 898, 931, 964, 1006, 1007, 1025, 1026, 1027, 1028, 1068, 1133, 1134, 1135, 1182, 1301], "hack": [142, 1209], "necessari": [142, 202, 452, 782, 931, 933, 935, 937, 939, 942, 944, 1144, 1209, 1309], "pars": [143, 144, 173, 187, 710, 713, 719, 720, 724, 728, 732, 733, 758, 759, 760, 764, 765, 775, 779, 782, 788, 789, 790, 791, 796, 797, 799, 800, 803, 806, 807, 823, 825, 827, 828, 863, 868, 870, 893, 894, 898, 900, 959, 962, 964, 978, 984, 1002, 1007, 1025, 1026, 1027, 1028, 1039, 1042, 1066, 1068, 1070, 1134, 1135, 1182, 1301, 1308], "style": [143, 144, 739], "old": [144, 525, 667, 740, 824, 931, 1218, 1309], "atomsfil": [145, 200], "click": [145, 146, 147, 148, 390, 391], "paramtyp": [145, 146, 147, 390, 391], "dictstr": 145, "custom": [145, 434, 713, 714, 733, 735, 777, 778, 780, 870, 931, 933, 935, 937, 939, 942, 944, 962, 963, 1006, 1026, 1066, 1068, 1069, 1070, 1133, 1174, 1183, 1184, 1308, 1309], "empti": [146, 150, 662, 663, 664, 665, 727, 732, 733, 735, 790, 796, 956, 963, 987, 992, 996, 1006, 1026, 1135, 1174, 1177, 1179, 1301, 1309], "case": [146, 545, 709, 713, 732, 779, 788, 789, 790, 791, 796, 797, 799, 800, 803, 806, 807, 823, 825, 827, 828, 861, 865, 898, 903, 931, 933, 935, 937, 939, 942, 944, 1068, 1070, 1188, 1209, 1309], "ctx": [146, 147, 391], "dictionary_str": 147, "take": [148, 229, 628, 740, 793, 799, 800, 802, 822, 931, 933, 935, 937, 939, 942, 944, 958], "standard": [148, 373, 705, 718, 723, 783, 784, 785, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 838, 931, 933, 935, 937, 939, 942, 944, 961, 963, 1006, 1026, 1131, 1133, 1135, 1174, 1182, 1308], "sever": [149, 1301, 1309], "featur": [149, 382, 455, 931, 1309], "parse_dict_str": 149, "serial": [149, 157], "real": [149, 157, 387, 667, 720, 785, 786, 787, 794, 805, 834, 838, 865, 898, 931, 933, 935, 937, 939, 942, 944, 964, 1007, 1025, 1027, 1028, 1037, 1038, 1068, 1134, 1165, 1169, 1182], "world": [153, 162, 452], "delet": [153, 162, 743, 746], "context": [153, 439, 858, 859, 1294], "manag": [153, 439, 858, 859, 1305, 1309], "write": [153, 200, 244, 452, 643, 710, 713, 719, 723, 724, 733, 758, 759, 760, 822, 827, 861, 865, 870, 898, 959, 964, 1007, 1025, 1027, 1028, 1068, 1070, 1079, 1086, 1094, 1103, 1107, 1108, 1113, 1120, 1124, 1133, 1134, 1140, 1142, 1144, 1174, 1182, 1186, 1187, 1189, 1218, 1301, 1305], "after": [153, 330, 373, 382, 713, 720, 724, 732, 740, 760, 779, 782, 788, 789, 790, 791, 796, 797, 799, 800, 803, 806, 807, 822, 823, 825, 827, 828, 865, 870, 898, 933, 939, 942, 944, 959, 1025, 1070, 1079, 1094, 1103, 1107, 1113, 1120, 1124, 1138, 1140, 1174, 1309], "abl": [153, 710, 719, 739, 1174, 1209], "txt": [153, 251, 452, 640, 642, 643], "remov": [153, 713, 714, 720, 733, 756, 862, 898, 1194], "wait": [153, 656, 868], "reload": 154, "defaultdct": 160, "defualtdct": 160, "safe": 162, "link": [162, 174, 551, 1172, 1304, 1306], "text": [163, 724, 782, 824, 978, 984, 1002, 1214, 1309], "databas": [166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 410, 438, 441, 533, 536, 537, 549, 1300], "rowwrapp": 166, "browser": [167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 1300], "header": [168, 177, 781, 782, 827, 981, 984, 999, 1002, 1005, 1007, 1008, 1010, 1136], "digit": [168, 179, 180], "tabl": [168, 177, 178, 776, 781, 827, 1041, 1062], "char": [171, 773, 774, 803, 806, 807, 822], "caption": 174, "prefix": [176, 452, 724, 732, 733, 760, 777, 778, 779, 780, 782, 787, 788, 789, 790, 791, 792, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 806, 807, 808, 821, 822, 824, 825, 827, 828, 898, 964, 1007, 1025, 1027, 1028, 1038, 1068, 1070, 1134, 1182, 1211, 1212], "page": [176, 177, 1305], "exclud": [178, 452, 740], "miscellan": [178, 1308], "section": [178, 708, 709, 710, 711, 712, 713, 714, 717, 719, 720, 724, 728, 732, 733, 734, 735, 758, 759, 760, 773, 806, 862, 865, 870, 898, 931, 933, 935, 937, 939, 942, 944, 947, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 960, 961, 962, 963, 964, 987, 992, 996, 1006, 1007, 1025, 1026, 1027, 1028, 1042, 1066, 1067, 1068, 1069, 1070, 1071, 1075, 1076, 1077, 1078, 1079, 1081, 1082, 1083, 1085, 1086, 1087, 1089, 1090, 1091, 1093, 1094, 1095, 1097, 1098, 1099, 1101, 1102, 1103, 1104, 1106, 1107, 1108, 1110, 1111, 1112, 1113, 1115, 1116, 1117, 1119, 1120, 1121, 1123, 1124, 1125, 1127, 1128, 1129, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1144, 1174, 1175, 1177, 1178, 1179, 1180, 1182, 1183, 1185, 1189, 1300, 1301, 1308, 1309], "those": [178, 401], "kd": [179, 457], "tree": [182, 198, 200, 204, 401, 534, 709, 1308], "duplic": [184, 185, 186, 187, 441, 541, 542, 737, 1300, 1309], "value1": [184, 452, 1301], "value2": [184, 452, 1301], "all_row": 185, "duplicate_id": 185, "ops_and_kei": [185, 187], "uid_kei": 185, "filterstr": [185, 187], "uid": [185, 186, 199, 420], "iter": [185, 387, 426, 456, 665, 859, 896, 933, 939, 942, 944, 1041, 1174, 1190, 1194, 1301, 1308, 1309], "filter": [185, 187], "compar": [185, 543, 547, 777, 779, 782, 822, 827, 829], "addit": [185, 452, 628, 717, 724, 732, 758, 759, 760, 777, 778, 779, 782, 788, 789, 790, 791, 792, 796, 797, 799, 800, 803, 806, 807, 822, 823, 824, 825, 827, 828, 898, 1009, 1070, 1144, 1174, 1180, 1209], "complex": [185, 312, 348, 363, 420, 704, 706, 707, 727, 776, 783, 827, 838, 852, 931, 1301], "pick": 185, "lower": [185, 387, 713, 937, 1309], "AND": 185, "fewer": 185, "exist": [185, 202, 387, 452, 713, 716, 726, 1138, 1174, 1194, 1207, 1309], "connect": 185, "filtered_uid": 185, "rmsd_by_id": [186, 196], "rmsd_tol": 186, "already_considered_uid": 186, "comma": [187, 894], "separ": [187, 452, 724, 725, 773, 786, 789, 790, 827, 1004, 1005, 1066, 1069, 1070, 1131, 1133, 1300, 1301, 1308], "uniqu": [188, 737, 853, 896, 1142, 1300], "material_fingerprint": [189, 190, 191, 1300], "rmsd": [194, 195, 196, 541, 542, 543, 546, 547, 1300], "atoms1": [194, 195, 545], "atoms2": [194, 195, 545, 1169], "adaptor": 194, "matcher": 194, "rowid": 196, "otherrowid": 196, "totre": [199, 200, 1300], "tree_structur": 199, "chunk": 200, "copi": [200, 661, 711, 713, 720, 727, 733, 827, 833, 853, 861, 865, 870, 898, 991, 1165, 1169, 1171, 1174, 1194, 1198, 1200, 1204, 1206, 1207, 1209], "pattern": [200, 762, 773, 824, 1069, 1308], "update_tre": 200, "disk": [200, 382], "defect": [201, 208, 400, 401, 402, 403, 1300], "defectform": [202, 203, 204, 205, 206, 207, 208, 1300], "whether": [202, 720, 735, 782, 827, 865, 896, 962, 1174, 1209], "acess": [202, 1309], "foldernam": 204, "start": [204, 372, 733, 782, 827, 896, 933, 939, 942, 944, 1309], "l1": 205, "l2": 205, "helper": [205, 206, 207, 703, 1213, 1214], "upper": [205, 937], "p1": 206, "p2": 206, "line1": 207, "line2": 207, "defect_dict": 208, "defectnam": 208, "gap": [208, 288, 289, 299, 305, 452, 558, 559, 566, 664, 1300], "xxx": 208, "me": [208, 228, 862], "versu": 208, "fermi": [208, 229, 240, 273, 288, 289, 290, 299, 305, 327, 328, 452, 629, 633, 931, 933, 939, 942, 944], "transit": 208, "stabl": 208, "state": [208, 216, 287, 289, 322, 323, 325, 326, 327, 328, 402, 612, 641, 643, 720, 768, 902, 918, 931, 936, 993, 1144, 1179, 1180, 1302, 1303], "deform": 209, "deformationpotenti": [210, 211, 1300], "dimension": [213, 214, 215, 241, 382, 933, 1300], "densiti": [216, 326, 327, 328, 360, 364, 635, 642, 643, 931, 933, 935, 936, 937, 939, 942, 944, 993, 1032, 1041], "gw": [217, 299, 300, 301, 302, 1300], "mass": [220, 228, 229, 239, 247, 249, 385], "emass": [222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 1300], "masses_dict": 223, "bt": [223, 238, 247, 249, 1197], "calc": [223, 283, 285, 293, 294, 295, 296, 304, 309, 324, 328, 332, 370, 450, 473, 477, 480, 485, 629, 630, 632, 643], "erang": [223, 241, 249], "25": [223, 275, 420, 931, 1062, 1064], "npoint": [223, 241, 369, 374], "91": [223, 1062, 1064], "nband": [223, 452, 485, 629], "spin_band_dict": 224, "values_dict": 227, "kpts_kv": [228, 230, 231, 243], "eps_k": [228, 231], "bandtyp": [228, 229, 234, 244, 245], "ndim": [228, 232, 233, 236], "nk": [228, 240, 243, 630, 933], "shape": [228, 240, 243, 629, 630, 713, 760, 822, 991, 1061], "k": [228, 288, 289, 299, 305, 368, 369, 370, 452, 931, 933, 935, 937, 939, 942, 944, 1064], "cartesian": [228, 933, 939, 944], "unit": [228, 243, 289, 296, 317, 327, 423, 452, 787, 794, 805, 1209], "bohr": [228, 243], "eigenvalu": [228, 240, 338, 348, 420, 452, 479, 480, 629, 630, 633], "hartre": [228, 359, 931, 933, 935, 937, 939, 942, 944], "m_e": 228, "eigenvector": 228, "extremum": 228, "gpw": [229, 237, 244, 245, 296, 633, 640, 642, 643], "delta": [229, 240, 406], "extrema": [229, 240], "includ": [229, 240, 369, 724, 733, 824, 1209, 1301], "vb": [229, 240, 244], "cb": [229, 240, 244], "efermi": [229, 240, 288, 289, 328, 633], "em": [229, 1300], "fit": [229, 252, 799, 827, 1300], "c_p": 230, "thirdord": [230, 231], "xm": 233, "ym": 233, "zm": 233, "extremum_typ": 233, "k1_c": 234, "k2_c": 234, "dxx": 236, "dyi": 236, "dzz": 236, "dxy": 236, "dxz": 236, "dyz": 236, "fallback": [237, 244], "_erang": 239, "e_skn": [240, 630, 633], "nb": [240, 630, 1064], "vb_indic": 240, "cb_indic": 240, "aka": 240, "sbandex": 240, "cell_cv": [241, 249, 284, 314, 462], "9": [241, 787, 1061, 1062, 1064], "001": [241, 249], "simpl": [243, 514, 515, 577, 579, 741, 760, 827, 899, 906, 921, 1302, 1303], "third": [243, 1165, 1308], "order": [243, 330, 331, 373, 385, 424, 732, 733, 735, 760, 898, 956, 963, 964, 987, 992, 996, 1006, 1007, 1025, 1026, 1027, 1028, 1068, 1079, 1103, 1108, 1113, 1120, 1124, 1133, 1134, 1135, 1140, 1177, 1179, 1182, 1207, 1308], "sc": [244, 401, 402, 1064], "kpt": [244, 452, 635, 654, 1300], "sphere": [244, 662, 663, 664, 665, 685, 939, 1064, 1174, 1300, 1301], "around": [244, 372, 374, 931, 933, 935, 937, 939, 942, 944, 1308], "vbm": [244, 288, 289], "cbm": [244, 288, 289], "em_circle_vb_soc": 244, "em_circle_cb_soc": 244, "em_circle_vb_nosoc": 244, "em_circle_cb_nosoc": 244, "spinorbit": [244, 479, 480, 633], "we": [244, 385, 1309], "both": [244, 290, 296, 629, 633, 708, 719, 720, 727, 745, 775, 861, 898, 964, 1007, 1025, 1027, 1028, 1068, 1134, 1167, 1182, 1308, 1309], "results_dict": 247, "exchang": [251, 382, 933, 939, 942, 944, 1300], "dis_cut": 251, "a0": 251, "heisenberg": 251, "fere": [256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 1300], "pred": [256, 265, 269, 270, 272], "l": [256, 265, 269, 270, 271, 272, 330, 331, 368, 370, 453, 787, 931, 933, 935, 937, 939, 944, 991, 993, 1173], "newnam": 257, "reaction": [257, 260], "els_dmu": 257, "form1": 259, "form2": 259, "queri": [261, 268, 1309], "reactionsstr": [262, 266], "refsstr": [262, 267], "de": [263, 382, 1172], "alpha": [263, 384, 387], "prod": [264, 268], "j": [264, 415], "selector": [271, 760], "surfac": [273, 387, 1213, 1217, 1309], "fermisurfac": [274, 275, 276, 277, 278, 279, 1300], "annot": [275, 278], "angl": [275, 278, 372, 547, 652, 688, 931, 937], "eigs_nk": 277, "bzk_kv": 277, "s_nk": 277, "fontsiz": [278, 300, 306, 374], "svbm": 278, "100": [278, 665, 1062, 1207], "scbm": 278, "40": [278, 369, 374, 933, 939, 942, 944, 1062], "lwvbm": 278, "sf": 278, "dpi": [278, 988, 993, 997, 1288, 1295, 1299], "200": [278, 933, 939, 942, 944, 1062], "scalecb": 278, "bbox_to_anchor": 278, "formal": 280, "polar": [280, 317, 931, 933, 939, 944], "phase": [280, 452, 931, 1308], "modern": 280, "theori": 280, "learn": 280, "about": [280, 667, 733, 739, 751, 899, 937, 958, 1059, 1061, 1172, 1209, 1217, 1305], "our": [280, 1309], "explan": [280, 898, 959], "particular": [280, 434, 827, 933, 939, 944], "definit": [280, 709, 711, 712, 713, 714, 717, 718, 719, 720, 721, 722, 723, 724, 727, 728, 729, 732, 733, 734, 735, 757, 758, 760, 827, 861, 862, 864, 865, 870, 898, 929, 931, 932, 933, 934, 935, 936, 937, 938, 939, 940, 941, 942, 943, 944, 945, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 959, 960, 961, 963, 964, 982, 983, 984, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 997, 998, 1001, 1002, 1003, 1006, 1007, 1009, 1024, 1025, 1026, 1027, 1028, 1042, 1067, 1068, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1134, 1135, 1138, 1139, 1141, 1142, 1144, 1174, 1176, 1177, 1178, 1179, 1181, 1182, 1183, 1184, 1185, 1199, 1200, 1207, 1300, 1301, 1308, 1309], "central": [280, 355, 931, 933, 935, 937, 939, 942, 944, 1167, 1169], "formalpolar": [282, 283, 284, 285, 286, 1300], "ep": 282, "dipole_v": 284, "gapsresult": [287, 289, 293, 1300], "vacuumlevelresult": [287, 289, 1300], "ground": [287, 289, 641, 643], "skn2": [288, 289], "skn1": [288, 289], "vbm_dir": [288, 289], "skn2_dir": [288, 289], "k_cbm_dir_c": [288, 289], "skn1_dir": [288, 289], "k_vbm_c": [288, 289], "gap_dir": [288, 289], "cbm_dir": [288, 289], "k_vbm_dir_c": [288, 289], "k_cbm_c": [288, 289], "valenc": [288, 289, 299, 305, 452, 1165, 1209], "maximum": [288, 289, 299, 305, 387, 403, 665, 931, 944], "conduct": [288, 289, 299, 305, 452], "minimum": [288, 289, 299, 305, 338, 348, 665, 931], "calenc": [288, 289], "forc": [289, 348, 382, 385, 387, 452, 667, 733, 931, 933, 935, 937, 939, 942, 944, 984, 1002, 1174], "vacuumlevel": [289, 1300], "stress": [289, 385, 387, 452, 1174], "gaps_nosoc": 289, "gap_nosoc": 289, "evacdiff": [289, 290, 1300], "gap_dir_nosoc": 289, "dipz": [289, 290], "workfunct": 289, "evac": [289, 296], "etot": [289, 384, 1041], "re": [289, 371, 372, 374, 787, 792, 825, 1064, 1069], "angstrom": 289, "dim": [289, 420], "total": [289, 317, 323, 384, 452, 918, 931, 933, 935, 937, 939, 942, 944, 993, 1041, 1301, 1302, 1303], "vacuum": [289, 290, 292, 665, 1165, 1168, 1169, 1171, 1207, 1217], "dipol": [289, 290, 292, 296, 452, 1174], "ang": [289, 290, 338, 348, 359, 363, 384, 423], "bandgap": [289, 452], "v_z": 290, "efermi_nosoc": 290, "evac2": 290, "evacmean": 290, "z_z": 290, "evac1": 290, "grid": [290, 312, 363, 635, 665, 931, 933, 935, 937, 939, 942, 944, 1291], "\u00e5": [290, 387, 403], "electrostat": [290, 452], "side": [290, 296], "slab": [290, 292], "top": [290, 374], "bottom": 290, "averag": [290, 931, 933, 935, 937, 939, 942, 944], "deriv": [292, 732, 754, 756, 835, 898, 964, 1007, 1025, 1027, 1028, 1068, 1134, 1182], "moment": [292, 296, 323, 452, 598, 933, 939, 942, 944, 1083, 1102, 1103, 1104, 1105, 1206, 1207, 1300, 1301, 1309], "assum": [292, 296, 933, 939, 944, 1309], "xy": [292, 385], "ibzkpt": 294, "k_index": 294, "8": [296, 854, 903, 1061, 1062, 1064, 1172, 1309], "Will": [296, 959], "dft": [296, 298, 382, 384, 388], "janu": 296, "center": [296, 382, 652, 931, 933, 935, 937, 939, 942, 944, 1061], "dipcorrg": 296, "evacdiffmin": 296, "thresshold": 296, "predict": 296, "less": [296, 387, 931, 933, 935, 937, 939, 942, 944], "don": [296, 385, 452, 1174], "gridpoint": 296, "awai": 296, "vac": 296, "kcbm": [299, 305], "gap_gw_nosoc": 299, "cbm_gw": 299, "efermi_gw_nosoc": 299, "kvbm_nosoc": [299, 305], "vbm_gw": 299, "gap_dir_gw": 299, "kcbm_nosoc": [299, 305], "vbm_gw_nosoc": 299, "gap_dir_gw_nosoc": 299, "cbm_gw_nosoc": 299, "kvbm": [299, 305], "efermi_gw_soc": 299, "gap_gw": 299, "w": [299, 305, 327, 633, 803, 807, 1038, 1064, 1174], "o": [299, 305, 327, 633, 1061, 1064, 1182], "g0w0": 299, "hse": [304, 305, 306, 307, 309, 310, 1300], "delta_skn": 304, "lb": 304, "ub": 304, "interpol": [304, 338, 1198, 1201], "patch": [304, 452], "onto": [304, 329], "gap_dir_hse_nosoc": 305, "gap_hse_nosoc": 305, "gap_dir_hs": 305, "vbm_hse": 305, "efermi_hse_nosoc": 305, "efermi_hse_soc": 305, "cbm_hse": 305, "gap_hs": 305, "cbm_hse_nosoc": 305, "vbm_hse_nosoc": 305, "pack": [307, 536, 537, 635], "emptyband": [308, 642], "infrar": 311, "infraredpolariz": [312, 313, 314, 315, 1300], "alphax": 312, "alphay_lat": 312, "alphax_lat": 312, "alpha_wvv": 312, "alphai": 312, "alphaz_lat": 312, "omega_w": [312, 314], "alphaz": 312, "lattic": [312, 350, 403, 933, 937, 939, 944, 1058, 1059, 1061, 1094, 1095, 1096, 1169], "frequenc": [312, 338, 348, 358, 359, 363], "omega": 312, "freqs_l": [314, 379], "modes_xl": 314, "m_a": 314, "eta": [314, 473, 933, 939, 944], "magnet": [316, 317, 322, 323, 325, 452, 598, 637, 638, 931, 933, 935, 937, 939, 942, 944, 1138, 1300], "anisotropi": [316, 317], "magnetic_anisotropi": [317, 318, 319, 320, 321, 1300], "de_zi": 317, "spin_axi": [317, 1300], "e_x": 317, "e_z": 317, "e_i": 317, "de_zx": 317, "phi": [317, 320, 452, 480, 632, 633, 931], "theta": [317, 320, 372, 452, 480, 632, 633, 931], "easi": [317, 452, 1031, 1301], "radian": 317, "mev": 317, "magstat": [323, 324, 325, 1300], "is_magnet": 323, "magmom": [323, 385, 452, 651, 1174], "nspin": [323, 582, 629], "project": [326, 327, 328, 329, 367, 370, 374, 654, 931], "pdo": [327, 328, 329, 330, 331, 333, 334, 335, 336, 1300], "dos_at_ef_soc": 327, "pdos_nosoc": 327, "pdos_soc": 327, "dos_at_ef_nosoc": 327, "nd": [328, 349, 370, 1064], "pdos_syl": 328, "defaultdict": 328, "angular": [328, 329, 330, 331, 368, 370, 485, 667, 931], "momentum": [328, 329, 330, 331, 368, 370, 931, 933, 935, 937, 939, 944], "z1": 329, "z2": 329, "zi": 329, "l_a": 329, "spd": 329, "dct_syl": [330, 331], "syl": 330, "f": [330, 331, 643, 740, 791, 827, 991, 1064, 1070, 1290, 1309], "sort": [330, 373], "outdct_syl": 330, "ordereddict": [330, 331], "color_yl": 331, "singl": [332, 372, 720, 735, 742, 744, 865, 1299, 1300, 1308], "lw": 333, "dynam": [337, 338, 348, 382, 385, 387, 420, 452], "phonon": [338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 376, 577, 1300], "omega_kl": [338, 348], "q_qc": [338, 348], "minhessianeig": [338, 348], "modes_kl": 338, "dynamic_stability_phonon": 338, "interp_freqs_kl": 338, "bandpath": [338, 348], "hessian": [338, 348, 387], "low": [338, 420], "momenta": [338, 348, 385], "consist": [338, 348, 642, 643, 823, 944, 1301, 1309], "supercel": [338, 340, 348, 350, 401, 403], "mode": [338, 348, 376, 452, 898, 931, 933, 935, 937, 939, 942, 944, 959, 964, 1007, 1025, 1027, 1028, 1068, 1117, 1134, 1174, 1182, 1291, 1301], "cin_nvv": 340, "phonopi": [348, 349, 350, 351, 352, 353, 354, 1300], "u_klav": 348, "eigs_kl": 348, "phi_anv": 348, "irr_l": 348, "dynamic_stability_level": 348, "matrix": [348, 385, 387, 398, 931, 933, 935, 937, 939, 942, 944], "constant": [348, 933, 939, 944, 1079, 1086, 1094, 1103, 1107, 1113, 1120, 1124, 1140, 1308], "irreduc": [348, 452], "dist_max": 349, "n_c": 350, "piezoelectr": [355, 356], "tensor": [355, 356, 359, 363, 385, 419, 420], "piezoelectrictensor": [356, 357, 1300], "eps_vvv": 356, "eps_clamped_vvv": 356, "plasma": [358, 359, 585], "plasmafrequ": [359, 360, 361, 363, 1300], "plasmafreq_vv": [359, 363, 475], "plasmafrequency_i": 359, "plasmafrequency_x": 359, "optic": 362, "alpha0y_w": 363, "alphaz_w": 363, "alphax_w": 363, "alphay_w": 363, "alphaz_el": 363, "alpha0x_w": 363, "alphax_el": 363, "alphay_el": 363, "alpha0z_w": 363, "interband": 363, "field": [363, 787, 931, 933, 935, 937, 939, 942, 944], "fx": 365, "fy": 365, "fz": 365, "projected_bandstructur": [368, 369, 370, 371, 372, 373, 374, 375, 1300], "yl_i": [368, 370, 373], "weight_skni": [368, 370], "weight": [368, 370, 371, 374, 452, 933, 939, 944], "projector": [368, 370], "bsp": 369, "sampl": [369, 931, 933, 935, 937, 939, 942, 944], "evenli": 369, "allwai": 369, "special": [369, 452, 455, 711, 723, 739, 781, 790, 803, 806, 807, 821, 931, 933, 935, 937, 939, 942, 944, 960, 1005, 1008, 1031, 1136, 1308, 1309], "band_structur": 369, "bandstructureplot": 369, "chosenx_x": 369, "1d": 369, "np": [369, 371, 452, 705, 777, 778, 780, 782, 852, 896, 931, 959, 1064, 1174, 1309], "chosen": 369, "k_x": 369, "weight_xi": 371, "scale_mark": 371, "36": [371, 372, 374, 420, 1062], "64": [371, 372, 374, 420, 1062, 1064, 1309], "pie": [371, 372, 374], "marker": [371, 372, 374, 434], "sum": [371, 452, 933, 939, 944, 988, 997, 1194], "markers": [371, 374], "get_pie_slic": [371, 1300], "pie_xi": 371, "mpl": 371, "theta0": 372, "slice": [372, 633, 760, 988, 993, 997, 1167], "cover": 372, "resolut": [372, 374], "circumfer": [372, 374], "matplotlib": [372, 1041, 1291, 1293], "pyplot": [372, 1291], "scatter": [372, 931, 933, 935, 937, 939, 942, 944], "yl": 373, "get_orbital_ldo": [373, 1300], "c_i": [373, 1061], "chart": 374, "per": [374, 387, 452, 1064, 1174], "raman": [378, 379, 381, 1300], "freq_err": 379, "spgatom": [382, 1300], "mybfg": [382, 1300], "optim": [382, 387], "bfg": [382, 387], "iocontext": [382, 387], "By": [382, 452, 720, 724, 758, 760, 777, 779, 782, 787, 791, 792, 796, 797, 798, 799, 800, 803, 804, 806, 807, 808, 825, 827, 898, 933, 939, 944, 1025, 1070, 1174, 1207], "unrelax": [382, 401], "save": [382, 398, 709, 713, 733, 827, 864, 865, 868, 870, 959, 962, 1174, 1176, 1180, 1181, 1288, 1295, 1297, 1299, 1308, 1309], "final": [382, 931], "note": [382, 650, 898, 931, 964, 1007, 1025, 1027, 1028, 1068, 1134, 1182, 1305, 1308], "worthi": 382, "automat": [382, 787, 1194, 1209, 1308, 1309], "handl": [382, 452, 544, 602, 649, 713, 720, 739, 768, 870, 1174, 1213, 1271, 1301], "tri": [382, 984, 1002], "contin": 382, "step": [382, 387, 1308], "broken": [382, 452, 596], "happen": 382, "vdw": 382, "dftd3": [382, 388], "mkdir": 382, "cd": [382, 787, 1064], "wget": 382, "chemi": 382, "uni": [382, 1172], "bonn": 382, "pctc": 382, "mulliken": 382, "softwar": 382, "d3": 382, "tgz": 382, "tar": 382, "zxf": 382, "echo": 382, "export": [382, 898, 964, 1007, 1025, 1027, 1028, 1068, 1134, 1182, 1309], "ase_dftd3_command": 382, "bashrc": 382, "diamond": 382, "nod3": 382, "lda": 382, "correl": [382, 933, 939, 942, 944], "xc": [382, 455, 491, 492, 787], "imag": [384, 1288], "spo": 384, "edft": 384, "gamma": 384, "beta": [384, 1305], "taken": [384, 629, 746, 760, 931, 933, 935, 937, 939, 942, 944, 1167], "deg": 384, "tag": [385, 896], "scaled_posit": 385, "celldisp": 385, "constraint": [385, 717, 720, 1144], "info": [385, 667, 709, 720, 724, 733, 735, 758, 759, 760, 865, 898, 902, 956, 959, 963, 964, 1007, 1026, 1068, 1119, 1121, 1174, 1179, 1182, 1209, 1254, 1255, 1256, 1257, 1258, 1300, 1309], "veloc": 385, "from_atom": [385, 667, 1144, 1167, 1209, 1309], "set_symmetri": 385, "translat": [385, 865, 1061, 1062], "get_stress": 385, "voigt": 385, "six": [385, 1174], "independ": [385, 1079, 1094, 1103, 1107, 1113, 1120, 1124, 1140], "compon": [385, 420], "symmetr": [385, 418, 665, 1167, 1209, 1300], "tradit": 385, "xx": 385, "yy": 385, "zz": 385, "yz": 385, "xz": 385, "3x3": [385, 653], "ideal": [385, 664], "ga": [385, 1064], "contribut": [385, 1305], "include_ideal_ga": 385, "get_forc": 385, "ask": 385, "attach": [385, 452, 959], "appli": [385, 517, 739, 777, 778, 779, 782, 788, 789, 790, 791, 792, 796, 797, 799, 800, 803, 806, 807, 822, 823, 824, 825, 827, 828, 832, 833, 933, 939, 944, 1070, 1188], "apply_constraint": 385, "molecular": [385, 931, 933, 935, 937, 939, 942, 944], "holonom": 385, "rigid": 385, "linear": [385, 931, 937], "triatom": 385, "molecul": 385, "redistribut": 385, "tripl": 385, "fmax": [386, 388], "01": [386, 388, 540, 652, 755, 935], "smax": 386, "002": 386, "smask": [386, 388], "restart": [387, 452, 1174], "logfil": 387, "trajectori": 387, "append_trajectori": 387, "maxstep": 387, "store": [387, 720, 746, 860, 863, 865, 959, 1079, 1086, 1094, 1098, 1103, 1107, 1113, 1116, 1120, 1124, 1128, 1140, 1142, 1188, 1209, 1288, 1299, 1309], "optimis": [387, 933, 939, 944], "stdout": [387, 827, 859, 868, 959, 1034, 1039, 1174], "move": [387, 1301], "guess": [387, 832, 833, 898, 933, 939, 942, 944, 964, 984, 1002, 1007, 1165], "curvatur": [387, 452], "conserv": 387, "70": [387, 1062], "converg": [387, 633, 933, 939, 944, 1032, 1041, 1308, 1309], "might": [387, 452, 933, 939, 944], "risk": 387, "instabl": 387, "pass": [387, 452, 713, 717, 779, 782, 788, 789, 790, 791, 796, 797, 799, 800, 803, 806, 807, 822, 823, 824, 825, 827, 828, 832, 868, 870, 898, 1041, 1070, 1079, 1094, 1103, 1107, 1113, 1120, 1124, 1140, 1144, 1174, 1209, 1301, 1308, 1309], "log": 387, "dummi": [387, 860, 861, 865, 1174, 1300, 1308], "placehold": [387, 861, 1173, 1174, 1309], "logger": 387, "tmp_atoms_fil": 388, "inf": 388, "fixcel": 388, "allow_symmetry_break": 388, "enforce_symmetri": 388, "keyvaluepair": [390, 1300], "setinfo": [391, 392, 600, 1300], "protect": [392, 603], "similar": [394, 398], "substitut": [395, 398, 650, 944], "threshold": [396, 397, 665, 933, 939, 942, 944, 1209], "prototyp": [397, 423], "p_ab": 397, "08": 397, "s_ab": 398, "give": [398, 633, 802, 827, 931, 933, 935, 937, 939, 942, 944], "icsd": 398, "normal": [398, 745, 896, 1061, 1194], "probabl": [398, 1044, 1194, 1206, 1207], "succes": 398, "structure_dict": [401, 402], "chargest": 401, "intrins": [401, 402], "vacanc": [401, 402], "max_lattic": [401, 402, 403], "is_2d": [401, 402, 403], "everi": [401, 656], "further": [401, 1041, 1044, 1174, 1189, 1305, 1309], "process": [401, 720, 866, 868, 959, 962, 1044, 1079, 1103, 1108, 1113, 1120, 1124, 1133, 1138, 1140, 1173, 1174, 1246, 1301, 1309], "charge_st": 402, "up": [402, 403, 441, 443, 447, 452, 534, 732, 733, 739, 800, 822, 824, 825, 931, 933, 935, 937, 939, 942, 944, 1010, 1066, 1069, 1197, 1218, 1308], "anti": 402, "extrins": 402, "primit": [402, 403, 664, 665, 666, 931, 1061, 1167, 1309], "incorpor": 402, "built": [402, 1308], "depend": [403, 720, 931, 933, 937, 939, 944, 959, 1209, 1301], "length": [403, 725, 777, 778, 780, 782, 784, 785, 806, 894, 896, 931, 933, 939, 942, 944, 1005, 1008, 1136, 1209], "3d": [403, 931, 933, 935, 937, 939, 942, 944, 1167, 1169, 1291], "structure_sc": 403, "ia": [406, 407, 408], "iv": [406, 407, 408, 787], "sign": [406, 407, 408, 798, 814, 827], "atomic_index": 408, "cartesian_index": 408, "displacement_sign": 408, "strain_perc": [415, 416], "clamp": 415, "copyparam": 416, "clamp_atom": 416, "toler": [418, 650, 652, 667, 933, 939, 942, 944], "angle_toler": [418, 652], "return_dataset": 418, "stiff": [420, 421, 1300], "c_42": 420, "c_15": 420, "c_24": 420, "c_66": 420, "c_43": 420, "__links__": 420, "dynamic_stability_stiff": 420, "c_63": 420, "c_13": 420, "c_25": 420, "c_53": 420, "c_35": 420, "c_52": 420, "c_45": 420, "c_51": 420, "speed_of_sound_i": 420, "c_26": 420, "c_16": 420, "c_54": 420, "c_14": 420, "c_34": 420, "c_22": 420, "c_61": 420, "stiffness_tensor": 420, "c_62": 420, "c_11": 420, "c_55": 420, "c_56": 420, "c_31": 420, "c_44": 420, "c_36": 420, "c_65": 420, "c_32": 420, "c_21": 420, "c_46": 420, "c_64": 420, "c_33": 420, "speed_of_sound_x": 420, "c_23": 420, "c_41": 420, "c_12": 420, "11": [420, 1061, 1062, 1301], "13": [420, 1061, 1062, 1064, 1309], "14": [420, 754, 755, 756, 782, 1061, 1062, 1064], "15": [420, 1062, 1293], "16": [420, 782, 1062], "21": [420, 1062], "22": [420, 782, 1062, 1064], "23": [420, 1062, 1064], "24": [420, 665, 1062], "26": [420, 1062], "31": [420, 1062, 1064], "32": [420, 933, 939, 942, 944, 1062, 1064], "33": [420, 1062], "34": [420, 1062], "35": [420, 1062], "41": [420, 1062], "42": [420, 540, 1062], "43": [420, 1062], "44": [420, 1062, 1064], "45": [420, 931, 1062, 1064], "46": [420, 1062, 1064], "51": [420, 933, 1062], "52": [420, 1062, 1064], "53": [420, 1062], "54": [420, 1062], "55": [420, 1062, 1064], "56": [420, 1062, 1064], "61": [420, 1062, 1064], "62": [420, 1062, 1064], "63": [420, 1062, 1064], "65": [420, 685, 1062, 1064], "66": [420, 1062, 1064], "speed": [420, 739, 933, 939, 944], "sound": 420, "inform": [422, 667, 724, 733, 739, 751, 758, 759, 760, 827, 898, 937, 1059, 1061, 1099, 1172, 1209, 1217, 1309], "structureinfo": [423, 424, 425, 1300], "crystal_prototyp": 423, "has_inversion_symmetri": 423, "spacegroup": [423, 667, 688, 1209], "spglib_dataset": 423, "spgnum": 423, "pointgroup": 423, "stoichiometri": [423, 424], "cell_area": 423, "area": 423, "invers": [423, 652, 653], "space": [423, 724, 733, 824, 898, 931, 933, 935, 937, 939, 944, 1028, 1135], "group": [423, 653, 713, 782, 787, 870], "crystal": [423, 667, 931], "spglib": [423, 651, 652, 667, 668, 1209, 1300], "dataset": [423, 652, 667, 931, 933, 935, 937, 939, 942, 944], "reduc": 424, "cu2s4": 424, "cus2": 424, "appear": [424, 720, 729, 732, 733, 735, 775, 796, 898, 956, 963, 964, 981, 987, 992, 996, 999, 1005, 1006, 1007, 1008, 1025, 1026, 1027, 1028, 1068, 1134, 1135, 1136, 1177, 1179, 1182], "ab2": 424, "rather": 424, "mos2": 424, "sub": [426, 447, 891], "notabl": 426, "conftest": [426, 435, 436, 1300], "containt": 426, "pytest": [426, 434, 435, 437, 452, 1301], "fixtur": [426, 434, 438, 439, 440, 441, 442, 443, 444, 445, 1300], "over": 426, "test_borncharg": [429, 1300], "asr_tmpdir_w_param": [429, 431, 494, 496, 497, 499, 501, 506, 510, 512, 515, 550, 558, 559, 563, 564, 566, 567, 570, 572, 574, 575, 577, 579, 582, 585, 587, 591, 593, 595, 596, 597, 598, 605, 607, 611, 612, 614, 616, 618, 619, 621, 623, 624], "test_piezoelectrictensor": [431, 581, 583, 1300], "test_relax": [433, 593, 594, 595, 596, 597, 598, 599, 1300], "asr_tmpdir": [433, 440, 441, 508, 516, 517, 518, 536, 537, 538, 544, 549, 553, 554, 568, 589, 591, 594, 599, 601, 602, 603], "global": [434, 720, 1087], "session": 436, "tmp_path_factori": 439, "temp": [439, 440, 1309], "temporari": [439, 1174, 1301], "isol": 439, "filesystem": 439, "fast": 440, "webcont": 442, "monkeypatch": [443, 444, 596, 597], "mock": [443, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 856, 1300], "gpaw": [443, 447, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 568, 643, 650], "std": 445, "variabl": [446, 452, 561, 724, 758, 759, 760, 796, 827, 931, 944, 959, 1142, 1174, 1301, 1309], "std_test_materi": 446, "minim": [446, 777, 778, 780, 787, 792, 794, 795, 798, 801, 802, 804, 805, 808, 931, 933, 935, 937, 939, 942, 944, 1038, 1211, 1212], "all_test_materi": 446, "far": [447, 777, 779, 782, 822, 829, 1301], "berryphas": 450, "asrcalcul": 451, "basecalcul": [451, 452, 1172, 1174], "getpropertiesmixin": [451, 452, 1172, 1174], "doscalcul": 451, "occup": [451, 452, 469, 470, 668, 915, 1107, 1108, 1109, 1206, 1207, 1209, 1300, 1301, 1302, 1303, 1309], "wavefunct": [451, 452, 1041, 1309], "ignore_bad_restart_fil": 452, "design": 452, "look": 452, "monkei": 452, "ident": [452, 1169, 1209], "privat": 452, "prefac": 452, "underscor": 452, "easili": 452, "mocker": [452, 496, 499, 501, 508, 558, 559, 566, 570, 572, 582, 598, 624], "get_fermi_level": 452, "_get_fermi_level": 452, "furthermor": 452, "_get_band_gap": 452, "zero": [452, 755, 782, 808, 896, 1138, 1165, 1167, 1174, 1194, 1201], "manipul": 452, "mai": [452, 703, 827, 1309], "stop": [452, 944], "futur": [452, 650, 1187], "purepath": 452, "perform": [452, 643, 1174, 1308], "Not": [452, 727, 827, 1219], "instead": [452, 787, 827, 933, 939, 942, 944, 1174, 1209, 1301], "implemented_properti": [452, 1174], "fermi_level": [452, 453, 479, 558, 559, 566], "berry_phas": 452, "default_paramet": [452, 959], "gridsiz": 452, "wf": 452, "rank": [452, 466], "broadcast": 452, "barrier": 452, "new_commun": 452, "world_sum": 452, "stead": 452, "amend": 452, "key1": 452, "key2": 452, "been": [452, 667, 713, 733, 863, 870, 1079, 1094, 1103, 1107, 1113, 1120, 1124, 1140, 1174, 1301, 1309], "subclass": [452, 827, 868, 898], "must": [452, 1309], "chaneg": 452, "decid": 452, "reset": [452, 713, 870, 1067, 1140, 1144, 1174, 1206, 1207, 1309], "harmless": 452, "verbos": [452, 665, 685, 687, 688, 709, 724, 733, 760, 898, 931, 933, 935, 937, 939, 942, 944, 1309], "spos_ac": 452, "_get_scaled_posit": 452, "_get_setup": 452, "_get_setup_fingerprint": 452, "element_numb": 452, "fingerprint": 452, "_get_setup_symbol": 452, "_get_setup_nval": 452, "control": [452, 709, 721, 727, 728, 931, 933, 935, 937, 939, 942, 944, 954, 1301], "simplenamespac": [452, 652], "resembl": 452, "_get_berry_phas": 452, "channel": [452, 629], "_get_dipole_mo": 452, "cach": [452, 743, 744, 746, 787, 1189, 1190, 1197, 1300], "formi": 452, "_get_forc": 452, "_get_magmom": 452, "_get_potential_energi": 452, "_get_stress": 452, "get_all_eigenvalu": 452, "get_number_of_valence_electron": 452, "get_eigenvalu": 452, "get_k_point_weight": 452, "get_ibz_k_point": 452, "get_bz_k_point": 452, "get_bz_to_ibz_map": 452, "bz": [452, 931, 933, 935, 937, 939, 942, 944], "ibz": 452, "map": [452, 667, 705, 706, 707, 837, 838, 896, 1061, 1067], "get_number_of_spin": 452, "get_number_of_band": 452, "get_number_of_conduction_electron": 452, "get_number_of_electron": 452, "dope": [452, 915, 1302, 1303], "due": [452, 937, 1301], "get_electrostatic_potenti": 452, "diagonalize_full_hamiltonian": 452, "ecut": 452, "diagon": 452, "hamiltonian": 452, "shift_fermi_level": 452, "fixed_dens": 452, "raw_do": 453, "width": [453, 632], "raw_pdo": 453, "shorthand": 455, "nvalenc": [456, 457], "id_a": [456, 650], "griddescriptor": 457, "kpointdescriptor": 457, "banddescriptor": 457, "gd": [457, 1064], "bd": 457, "hybrid": 459, "kpt_descriptor": [461, 462], "bzk_kc": 462, "fermidirac": 468, "respons": [472, 473, 474, 475, 476, 477], "get_polariz": [473, 475], "w_w": 473, "q_c": 473, "pol_bs": 473, "csv": 473, "readfil": 473, "write_eig": 473, "eig": 473, "dat": 473, "dielectricfunct": 474, "df": 475, "chi0": 475, "get_frequ": 475, "e_km": 479, "s_kvm": 479, "spin_project": 479, "calculate_band_energi": 479, "n1": [480, 1292, 1293], "n2": [480, 1292, 1293], "occcalc": 480, "analyz": [482, 1309], "name1": [487, 898, 964, 1007, 1025, 1027, 1028, 1068, 1134, 1182, 1301], "name2": [487, 898, 964, 1007, 1025, 1027, 1028, 1068, 1134, 1182, 1301], "enumer": [489, 1194], "lst": 489, "test_bandstructur": [494, 1300], "mockgpaw": [494, 496, 499, 501, 508, 512, 558, 559, 563, 564, 566, 567, 570, 572, 574, 577, 579, 582, 585, 587, 589, 593, 598, 605, 618, 624], "test_materi": [494, 496, 499, 501, 543, 546, 547, 553, 554, 558, 559, 563, 566, 570, 572, 574, 577, 582, 585, 587, 589, 591, 593, 598, 607, 608, 609, 618, 624], "get_webcont": [494, 496, 497, 501, 512, 566, 570, 572, 574, 577, 579, 582, 585, 587, 589, 591, 623, 624], "test_berri": [497, 1300], "test_cli": [503, 504, 505, 506, 507, 508, 509, 510, 1300], "hashish": 504, "metal": 512, "test_cor": [514, 516, 517, 518, 1300], "get_default": 516, "correctli": [517, 518, 541, 542, 551, 598, 601, 602], "overridden": 518, "test_core_materi": [520, 1300], "myresult": 521, "myresultver0": [521, 522], "mywebpanel": 521, "test_core_result": [522, 523, 524, 525, 526, 527, 528, 1300], "alia": [522, 709, 733, 735, 758, 787, 788, 791, 792, 794, 795, 796, 797, 798, 801, 804, 825, 827, 828, 898, 962, 963, 987, 992, 996, 1006, 1026, 1031, 1035, 1040, 1078, 1080, 1083, 1084, 1087, 1088, 1091, 1092, 1095, 1096, 1098, 1099, 1100, 1104, 1105, 1108, 1109, 1112, 1114, 1116, 1117, 1118, 1121, 1122, 1125, 1126, 1128, 1129, 1130, 1132, 1133, 1135, 1179, 1182, 1211, 1212], "capsi": [528, 596, 597], "duplicates_test_db": [530, 531, 532, 541, 542], "test_database_dupl": [531, 532, 1300], "from_tre": 533, "test_database_fromtre": [534, 535, 536, 537, 538, 1300], "folder_tre": [536, 537, 538], "sure": [536, 537], "unpack": [536, 537, 732, 733, 865], "faithfulli": [536, 537], "njob": 537, "test_database_rmsd": [540, 541, 542, 543, 544, 545, 546, 547, 1300], "seed": 540, "identifi": [541, 542, 733, 782, 799, 827, 896, 1025, 1026, 1194], "atom_index": 543, "get_rmsd": 544, "explicit": 545, "previous": [545, 713, 959, 1209, 1301], "pose": 545, "problem": [545, 703, 709, 713, 717, 724, 775, 870, 900, 931, 933, 935, 937, 939, 942, 944, 956, 1301, 1309], "rattl": 546, "finit": [546, 937], "test_database_totre": [549, 551, 1300], "form": [549, 724, 729, 777, 778, 779, 782, 787, 792, 795, 799, 802, 804, 822, 824, 827, 828, 830, 898, 964, 1007, 1025, 1027, 1028, 1068, 1134, 1143, 1144, 1182, 1308, 1309], "make_test_db": 551, "hard": [551, 900, 1209], "reproduc": 551, "test_dimension": [554, 1300], "test_emass": [556, 557, 558, 559, 1300], "vbmass": [557, 558, 559], "cbmass": [557, 558, 559], "test_fixtur": [561, 1300], "test_formalpolar": [564, 1300], "test_g": [567, 568, 1300], "groundstat": 568, "test_pdo": [575, 1300], "phononpi": 579, "inv_cell_vc": 581, "matrix_cvv": 583, "pbc_c": 583, "freuquenc": 585, "test_projected_bandstructur": [589, 1300], "actual": [593, 777, 778, 779, 782, 790, 791, 792, 797, 806, 822, 823, 824, 827, 896, 1009, 1174, 1308, 1309], "higher": [597, 931, 933, 935, 937, 939, 942, 944], "fail": [597, 713, 739, 764, 765, 870, 1309], "initial_magmom": [598, 1174], "set_magmom": 598, "final_magmom": 598, "test_setinfo": [601, 602, 603, 1300], "overwritten": 601, "arbitrarili": 603, "test_setup_decor": [605, 1300], "test_setup_displac": [608, 609, 1300], "inputatom": [611, 612, 621], "test_setup_magnet": [612, 1300], "test_setup_materi": [614, 1300], "test_setup_scanparam": [616, 1300], "test_setup_strain": [619, 1300], "test_stiff": [623, 624, 1300], "contan": 628, "essenti": 628, "calculator_util": [629, 630, 1300], "nelectron": 629, "fill": [629, 664, 665, 1171, 1289], "nkpoint": 629, "eps_skn": 629, "gpw2eig": [632, 1300], "return_spin": [632, 633], "symmetry_toler": [632, 633], "07": [632, 633, 650, 652], "els": [633, 698, 849], "conta": 633, "refineg": [640, 641, 642, 1300], "selfc": [640, 641, 643], "specifi": [640, 641, 643, 724, 733, 782, 787, 794, 931, 933, 935, 937, 939, 942, 944, 959, 1174, 1309], "refin": [641, 643], "cycl": [643, 933, 939, 942, 944, 1301, 1309], "refinedgs_": 643, "parstr": 643, "anoth": [643, 720, 723, 724, 726, 735, 739, 758, 759, 760, 782, 896, 1079, 1086, 1094, 1103, 1107, 1113, 1120, 1124, 1140, 1189], "written": [643, 713, 724, 733, 865, 870, 898, 964, 1006, 1007, 1025, 1027, 1028, 1068, 1133, 1134, 1174, 1182, 1301, 1305, 1308], "templat": [644, 721, 727, 728, 1174, 1300, 1309], "atoms2symmetri": 650, "has_invers": 652, "rotations_n": 653, "matric": 653, "op_scc": 654, "s_vm": 654, "restrict": [654, 939, 993], "purpos": [655, 732, 933, 939, 944, 1213], "wrapper": [658, 666], "physic": [658, 1059, 1060, 1061, 1062, 1063, 1064, 1300], "librari": [658, 1165], "emptyspheresresult": [659, 1300], "radii": [660, 663, 665, 931, 933, 935, 937, 939, 942, 944, 1063, 1064, 1301], "centr": 662, "round_zero": 663, "shphere": 663, "es_find": [665, 1300, 1301], "overlap_matrix": 665, "18": [665, 728, 1062], "radii_ratios_map": 665, "max_es_overlap": 665, "adjust_overlap": 665, "28": [665, 1062, 1064], "min_es_radiu": 665, "max_es_radiu": 665, "symmetrize_threshold": 665, "max_iter": 665, "48": [665, 1062], "comput": [665, 666, 720, 742, 746, 758, 760, 896, 898, 931, 933, 935, 937, 939, 942, 944, 1032, 1041, 1119, 1163, 1182, 1194, 1201, 1209, 1305], "coverag": 665, "pseudoatom": [665, 1168, 1169, 1171, 1207, 1301], "extend": [665, 898, 1209], "ratio": 665, "dimensionless": 665, "matter": 665, "walu": 665, "winger": [665, 1063, 1064], "seitz": [665, 1063, 1064], "supplement": 665, "max": [665, 787, 792, 794, 795, 798, 801, 802, 804, 805, 808, 824, 1038, 1211, 1212], "overlap": 665, "radiu": [665, 931, 933, 935, 937, 939, 942, 944, 1064], "shpere": 665, "symetrize_threshold": 665, "algorithm": [665, 933, 939, 942, 944], "spacegroupinfo": [666, 1209, 1300], "equivalent_sit": 667, "carri": [667, 827], "sprkkr_atom": [667, 1174, 1209, 1217, 1300, 1308, 1309], "sprkkratom": [667, 1079, 1086, 1094, 1103, 1107, 1113, 1120, 1124, 1138, 1140, 1142, 1174, 1180, 1181, 1184, 1207, 1208, 1217, 1300, 1308, 1309], "uniquevaluesmap": [667, 668, 895, 1190, 1300], "desrib": [667, 719, 727], "recomput": [667, 1209], "equival": [667, 668, 895, 896, 1207, 1209], "allow_chang": 667, "compute_spacegroup_info": 667, "atomic_numb": [667, 668, 1165, 1209], "consider_old": [667, 668, 1209], "precis": [667, 1182], "05": [667, 931, 933, 939, 942, 944, 1064, 1209], "angular_precis": 667, "suit": [667, 754, 756], "member": [667, 711, 712, 713, 714, 717, 718, 720, 724, 729, 732, 733, 735, 758, 759, 760, 837, 870, 896, 898, 956, 959, 960, 962, 963, 964, 983, 984, 987, 988, 992, 993, 996, 997, 1001, 1002, 1006, 1007, 1010, 1025, 1026, 1027, 1028, 1068, 1077, 1079, 1082, 1086, 1090, 1094, 1098, 1102, 1103, 1107, 1111, 1113, 1116, 1120, 1124, 1128, 1134, 1135, 1138, 1139, 1141, 1142, 1144, 1176, 1177, 1178, 1179, 1182, 1183, 1185], "slightli": [667, 933, 939, 944], "overriden": [667, 827, 1174], "partiali": [667, 1309], "break": 667, "ones": [667, 705, 706, 733, 740, 861, 1044, 1079, 1094, 1103, 1107, 1113, 1120, 1124, 1140, 1309], "treat": [667, 711, 933, 939, 944], "unprecis": 667, "etc": [668, 709, 711, 718, 720, 724, 733, 777, 778, 779, 782, 786, 790, 791, 792, 797, 806, 822, 823, 824, 827, 852, 898, 931, 964, 982, 991, 1000, 1007, 1025, 1027, 1028, 1032, 1041, 1068, 1079, 1086, 1094, 1103, 1107, 1113, 1120, 1124, 1134, 1140, 1142, 1144, 1173, 1174, 1180, 1182, 1301, 1308], "testesfind": 679, "test_es_find": [680, 1300], "testspgilib": 681, "test_spglib": [682, 1300], "test_possibly_equivalent_sit": 682, "test_spacegroup_info": 682, "xband": [684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 1061, 1174, 1218, 1219, 1300], "min_radiu": 685, "max_radiu": 685, "point_symmetri": 685, "max_spher": 685, "256": 685, "return_atom_rw": 685, "use_spacegroup": [685, 687], "align": [687, 688, 931], "latvec": 688, "cposit": 688, "magnetic_direct": 688, "memoryview": 688, "usag": [698, 713, 849, 858, 859, 865, 870, 904, 1305], "__package__": [698, 849], "__name__": [698, 849], "testspher": 700, "test_spher": 701, "test_xband": 701, "own": [703, 709, 711, 713, 717, 861, 862, 864, 865, 891, 898, 985, 1003, 1067, 1167, 1181, 1184, 1207, 1271, 1301, 1309], "datatyp": [703, 788, 791, 792, 794, 795, 796, 797, 798, 801, 804, 825, 828, 1211, 1212], "what": [703, 777, 779, 782, 787, 791, 792, 796, 797, 798, 799, 800, 803, 804, 807, 808, 825, 827, 898, 964, 984, 1002, 1007, 1025, 1027, 1028, 1041, 1068, 1070, 1134, 1174, 1182], "seem": 703, "alternative_typ": [704, 705, 706, 707, 1300], "int64": [704, 705, 706, 707, 795, 798, 852, 1211, 1212], "float64": [704, 706, 707, 804], "complex128": [704, 706, 707], "bool_": [704, 706, 707, 791, 796, 797], "datetim": [704, 706, 707, 792, 1173], "datetime64": [704, 706, 707], "types_altern": [704, 1300], "primari": 704, "itself": [704, 1189, 1201], "canon": [705, 706, 837], "intern": [705, 865, 1062, 1305], "doctest": [705, 834, 896], "configuration_definit": [709, 711, 714, 718, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 735, 757, 758, 759, 760, 861, 864, 897, 898, 946, 956, 961, 962, 963, 964, 986, 987, 990, 992, 995, 996, 1004, 1005, 1006, 1007, 1008, 1024, 1025, 1026, 1027, 1028, 1066, 1068, 1076, 1078, 1081, 1083, 1085, 1087, 1089, 1091, 1093, 1095, 1097, 1099, 1101, 1104, 1106, 1108, 1110, 1112, 1115, 1117, 1119, 1121, 1123, 1125, 1127, 1129, 1131, 1132, 1133, 1134, 1135, 1136, 1175, 1177, 1179, 1182, 1300, 1308], "basedefinit": [709, 711, 714, 719, 721, 724, 725, 726, 727, 728, 731, 732, 733, 735, 757, 758, 759, 760, 861, 864, 897, 898, 946, 956, 961, 962, 963, 964, 986, 987, 990, 992, 995, 996, 1004, 1005, 1006, 1007, 1008, 1024, 1025, 1026, 1027, 1028, 1066, 1068, 1076, 1078, 1081, 1083, 1085, 1087, 1089, 1091, 1093, 1095, 1097, 1099, 1101, 1104, 1106, 1108, 1110, 1112, 1115, 1117, 1119, 1121, 1123, 1125, 1127, 1129, 1131, 1132, 1133, 1134, 1135, 1136, 1175, 1177, 1179, 1182, 1300], "configuration_contain": [709, 711, 712, 713, 714, 715, 717, 718, 861, 864, 865, 869, 870, 958, 959, 960, 981, 983, 984, 986, 988, 990, 993, 995, 997, 999, 1001, 1002, 1076, 1077, 1079, 1081, 1082, 1085, 1086, 1089, 1090, 1093, 1094, 1097, 1098, 1101, 1102, 1103, 1106, 1107, 1110, 1111, 1113, 1115, 1116, 1119, 1120, 1123, 1124, 1127, 1128, 1137, 1138, 1139, 1141, 1142, 1143, 1144, 1175, 1176, 1178, 1183, 1185, 1300, 1308], "configurationcontain": [709, 710, 711, 712, 714, 717, 718, 861, 864, 865, 958, 959, 960, 981, 983, 984, 986, 988, 990, 993, 995, 997, 999, 1001, 1002, 1076, 1077, 1081, 1082, 1085, 1086, 1089, 1090, 1093, 1094, 1097, 1098, 1101, 1102, 1106, 1107, 1110, 1111, 1115, 1116, 1119, 1120, 1123, 1124, 1127, 1128, 1137, 1138, 1139, 1142, 1143, 1144, 1175, 1176, 1178, 1183, 1300, 1301, 1308], "_definit": 709, "_contain": 709, "parent": [709, 714, 740, 862, 1167], "hold": [709, 710, 711, 720, 724, 758, 759, 760, 861, 896, 898, 930, 959, 964, 984, 991, 1002, 1007, 1025, 1027, 1028, 1032, 1041, 1061, 1067, 1068, 1134, 1143, 1144, 1182, 1209, 1301, 1308, 1309], "_get_path": 709, "include_root": 709, "dot": [709, 1174, 1309], "delimit": [709, 713, 722, 723, 724, 725, 726, 732, 733, 735, 766, 777, 780, 790, 822, 824, 861, 870, 894, 898, 962, 963, 1006, 1026, 1068, 1133, 1135], "_get_root_contain": 709, "as_dict": [709, 713, 861, 865, 870, 1194], "only_chang": [709, 713, 861, 865, 870], "redefin": [709, 720, 724, 732, 733, 735, 758, 759, 760, 782, 827, 861, 865, 868, 898, 964, 1007, 1025, 1027, 1028, 1068, 1134, 1142, 1182], "descend": [709, 713, 720, 724, 733, 801, 802, 833, 861, 865, 868, 870, 898, 964, 1007, 1025, 1044, 1142, 1174, 1308], "expert": [709, 713, 724, 758, 759, 760, 861, 865, 870, 898, 931, 933, 935, 937, 939, 942, 944, 964, 1007, 1025, 1027, 1028, 1068, 1134, 1182, 1301], "show_hidden": [709, 724, 733, 760, 898], "save_to_fil": [709, 959, 1176, 1308], "stuff": [709, 959, 1025, 1058, 1176, 1308], "_save_to_fil": [709, 713, 722, 723, 725, 726, 733, 861, 870, 898, 959, 1176], "complet": [709, 827, 959, 1176, 1297, 1309], "select": [709, 760, 959, 993, 1176, 1300, 1308], "to_str": 709, "baseconfigurationcontain": [710, 712, 713, 714, 717, 718, 733, 869, 870, 958, 959, 960, 981, 983, 984, 986, 988, 990, 993, 995, 997, 999, 1001, 1002, 1076, 1077, 1079, 1081, 1082, 1085, 1086, 1089, 1090, 1093, 1094, 1097, 1098, 1101, 1102, 1103, 1106, 1107, 1110, 1111, 1113, 1115, 1116, 1119, 1120, 1123, 1124, 1127, 1128, 1137, 1138, 1139, 1141, 1142, 1143, 1144, 1175, 1176, 1178, 1183, 1185, 1300], "basesect": [710, 714, 718, 958, 960, 1076, 1077, 1081, 1082, 1085, 1086, 1089, 1090, 1093, 1094, 1097, 1098, 1101, 1102, 1106, 1107, 1110, 1111, 1115, 1116, 1119, 1120, 1123, 1124, 1127, 1128, 1137, 1138, 1139, 1142, 1175, 1178, 1183, 1300], "customsect": [710, 1175, 1183, 1300], "dictadaptor": [710, 1300], "rootconfigurationcontain": [710, 958, 959, 981, 983, 984, 986, 988, 990, 993, 995, 997, 999, 1001, 1002, 1143, 1144, 1175, 1176, 1300], "task": [710, 714, 718, 724, 751, 758, 759, 760, 862, 865, 929, 930, 931, 932, 933, 934, 935, 937, 939, 940, 942, 943, 944, 945, 946, 947, 949, 951, 952, 953, 955, 958, 959, 962, 963, 964, 985, 1003, 1029, 1031, 1039, 1041, 1045, 1067, 1173, 1174, 1181, 1184, 1301, 1305, 1308], "classic": 711, "copy_valu": [711, 760, 780, 822, 827, 898, 991], "modif": [711, 865, 1309], "affect": [711, 931, 933, 935, 937, 939, 942, 944], "has_any_valu": [711, 713, 864, 865, 1138], "containerdefinit": [711, 718, 731, 732, 735, 946, 956, 961, 962, 963, 986, 987, 990, 992, 995, 996, 1004, 1006, 1024, 1026, 1076, 1078, 1081, 1083, 1085, 1087, 1089, 1091, 1093, 1095, 1097, 1099, 1101, 1104, 1106, 1108, 1110, 1112, 1115, 1117, 1119, 1121, 1123, 1125, 1127, 1129, 1131, 1132, 1133, 1135, 1175, 1177, 1179, 1300, 1308], "_init_members_from_the_definit": 713, "_get_memb": 713, "interactive_memb": 713, "clear": [713, 717, 861, 865, 870, 1144, 1197], "do_not_check_requir": [713, 861, 865, 870], "call_hook": [713, 861, 865, 870], "eras": [713, 870], "subcontain": [713, 870], "throw": [713, 827, 870, 1174], "prevent": [713, 870, 900], "neverthenless": [713, 870], "previou": [713, 724, 733, 735, 870, 898, 1025], "anywai": [713, 777, 778, 780, 870], "theirs": [713, 870], "hook": [713, 720, 727, 865, 870, 898, 962], "child": [713, 733, 735, 740, 870, 963, 1006, 1026, 1133, 1135], "insensit": 713, "conain": [713, 870], "find_exact": 713, "sensit": 713, "mix": [713, 755, 827, 862, 863, 865, 868, 870, 898, 933, 939, 942, 944, 959, 964, 985, 1003, 1007, 1025, 1027, 1028, 1067, 1068, 1134, 1181, 1182, 1184, 1300], "input_paramet": [713, 865, 870, 930, 931, 933, 935, 937, 939, 941, 942, 944, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 959, 960, 961, 962, 963, 964, 965, 966, 967, 968, 969, 970, 971, 972, 973, 974, 975, 976, 977, 978, 979, 1031, 1032, 1035, 1036, 1040, 1041, 1044, 1045, 1074, 1174, 1186, 1300, 1301, 1305], "niter": [713, 870, 933, 939, 942, 944], "unkwnown": [713, 870], "known": [713, 870, 931, 933, 935, 937, 939, 942, 944, 984, 1002, 1025, 1026, 1174, 1309], "syntax": [713, 719, 870, 1174, 1301], "syntact": [713, 827, 870, 1174], "sugar": [713, 870, 1174], "remove_memb": 713, "nest": [713, 724, 777, 779, 782, 822, 829, 870], "transform": [713, 737, 760, 777, 778, 779, 782, 790, 791, 792, 797, 802, 806, 822, 823, 824, 827, 865, 870, 898, 964, 1007, 1025, 1027, 1028, 1068, 1134, 1182, 1308], "well": [713, 870], "_find_valu": [713, 861], "sought": [713, 1174], "lowercas": 713, "_interactive_member_nam": 713, "sanit": 713, "acces": 713, "notat": [713, 755, 1174, 1301, 1309], "_add": 713, "is_chang": [713, 865, 870], "alwai": [713, 722, 723, 725, 726, 733, 861, 865, 870, 898, 931, 1174, 1209, 1288, 1299, 1301], "name_in_grammar": [713, 717, 722, 723, 724, 725, 726, 732, 733, 735, 758, 759, 760, 782, 827, 861, 870, 898, 956, 963, 964, 1007, 1025, 1026, 1027, 1028, 1068, 1134, 1179, 1182], "condit": [713, 720, 721, 724, 726, 728, 733, 736, 758, 759, 760, 764, 779, 782, 787, 788, 789, 790, 791, 792, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 806, 807, 808, 822, 823, 824, 825, 827, 828, 865, 870, 898, 964, 1007, 1025, 1027, 1028, 1038, 1068, 1070, 1134, 1182, 1211, 1212], "something_have_been_written": [713, 733, 870], "why": [713, 733, 777, 778, 779, 782, 787, 788, 789, 795, 796, 799, 801, 802, 808, 822, 827, 828, 829, 864, 865, 870, 898, 1095, 1117, 1180], "dure": [713, 715, 724, 758, 759, 760, 782, 827, 870, 1041, 1079, 1094, 1103, 1107, 1108, 1113, 1120, 1124, 1133, 1140, 1142, 1181, 1186, 1187, 1188, 1189, 1194, 1309], "parser": [713, 787, 870, 1023, 1029, 1043], "skip": [713, 720, 724, 758, 759, 760, 762, 782, 827, 865, 870, 898, 933, 939, 942, 944, 964, 1007, 1025, 1027, 1028, 1068, 1134, 1182, 1194, 1308], "factori": [714, 862, 962, 963], "definition_typ": 714, "behav": [715, 782], "disabl": 716, "becaus": 716, "sens": [716, 724, 758, 759, 760], "capabl": [717, 1308, 1309], "read_from_fil": [717, 733, 868, 1044, 1144, 1301], "clear_first": [717, 1144], "allow_danger": [717, 720, 722, 725, 726, 732, 733, 898, 959, 1144], "preserv": [717, 787, 1144], "dangerous_valu": [717, 1144], "violat": [717, 1144], "lower_cas": [717, 720, 724, 861], "whose": [718, 720, 727, 728, 740, 791, 797, 1066, 1069, 1079, 1094, 1103, 1107, 1113, 1120, 1124, 1140, 1142, 1174], "predefind": 718, "sectiondefinit": [718, 731, 946, 956, 961, 963, 1024, 1026, 1076, 1078, 1081, 1083, 1085, 1087, 1089, 1091, 1093, 1095, 1097, 1099, 1101, 1104, 1106, 1108, 1110, 1112, 1115, 1117, 1119, 1121, 1123, 1125, 1127, 1129, 1131, 1132, 1133, 1175, 1179, 1300], "controldefinit": [719, 727, 1300], "virtualdefinit": [719, 721, 725, 726, 727, 1004, 1005, 1008, 1131, 1136, 1300], "gather": [719, 723, 1300, 1301], "realitemdefinit": [719, 731, 732, 733, 735, 757, 758, 759, 760, 897, 898, 946, 956, 961, 962, 963, 964, 986, 987, 990, 992, 995, 996, 1004, 1006, 1007, 1024, 1025, 1026, 1027, 1028, 1066, 1068, 1076, 1078, 1081, 1083, 1085, 1087, 1089, 1091, 1093, 1095, 1097, 1099, 1101, 1104, 1106, 1108, 1110, 1112, 1115, 1117, 1119, 1121, 1123, 1125, 1127, 1129, 1131, 1132, 1133, 1134, 1135, 1175, 1177, 1179, 1182, 1300], "separatordefinit": [719, 1004, 1005, 1008, 1131, 1136, 1300], "stub": [719, 1300], "switch": [719, 726, 933, 939, 944, 1300, 1301], "is_opt": [720, 724, 733, 735, 758, 759, 760, 898, 956, 963, 964, 1007, 1025, 1026, 1027, 1028, 1068, 1134, 1179, 1182], "virtual": [720, 1209], "grammar": [720, 721, 722, 724, 727, 732, 733, 735, 758, 759, 760, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 787, 788, 791, 792, 794, 796, 797, 798, 799, 800, 803, 804, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 824, 825, 827, 832, 833, 834, 835, 837, 861, 863, 898, 964, 978, 1007, 1024, 1025, 1027, 1028, 1068, 1069, 1070, 1134, 1135, 1182, 1300, 1301, 1308], "omit": [720, 898, 964, 1007, 1025, 1027, 1028, 1068, 1134, 1182], "parse_condit": [720, 724, 758, 759, 760, 898, 964, 1007, 1025, 1027, 1028, 1068, 1134, 1182], "invok": [720, 724, 758, 759, 760, 898, 964, 1007, 1025, 1027, 1028, 1068, 1134, 1182, 1308], "hide": [720, 724, 758, 759, 760, 898, 964, 1007, 1025, 1027, 1028, 1068, 1134, 1182], "inact": [720, 724, 758, 759, 760, 898, 964, 1007, 1025, 1027, 1028, 1068, 1134, 1182], "has_nam": [720, 724], "add_grammar_hook": 720, "remove_grammar_hook": 720, "pypars": [720, 724, 737, 761, 762, 763, 764, 765, 768, 827, 1066, 1069, 1308], "danger": [720, 865, 959, 1301], "_grammar": [720, 721, 722, 723, 758, 779, 782, 787, 790, 791, 792, 796, 797, 798, 800, 803, 804, 806, 807, 808, 822, 823, 824, 825, 827, 898, 1038, 1070], "conditionali": [720, 898], "func": [720, 739, 740, 743, 898, 982, 991, 1000, 1297], "has_grammar": [720, 723], "_hooked_grammar": 720, "whitespac": [720, 767, 803, 807], "propper": [720, 760, 827, 1070, 1079, 1086, 1094, 1103, 1107, 1113, 1120, 1124, 1140, 1173, 1218], "_create_grammar": [720, 725, 726, 732, 733, 898], "creation": [720, 1144, 1180], "_add_hooks_to_grammar": 720, "added_to_contain": [720, 727, 824, 827, 898], "get_path": [720, 861], "_get_copy_arg": [720, 898], "create_object": [720, 727, 728, 733], "can_be_rep": [720, 898], "multipl": [720, 931, 933, 935, 937, 939, 942, 944], "is_numbered_arrai": [720, 724, 898, 964, 1007, 1025, 1027, 1028, 1068, 1134, 1182], "is_independent_on_the_predecessor": [720, 724, 799, 827, 898], "_copy_excluded_arg": [720, 724, 898], "grammar_hook": [720, 724, 898], "enrich": [720, 750, 758, 760, 779, 827, 898], "output_definit": [720, 1025, 1026, 1027, 1028, 1300], "accept_valu": [720, 735], "here": [720, 735, 756, 777, 778, 779, 782, 790, 791, 792, 797, 806, 822, 823, 824, 827, 865, 898, 1072, 1209], "modifi": [721, 729, 733, 740, 933, 939, 942, 944, 1174, 1182, 1301, 1309], "name_delimit": 722, "value_delimit": 722, "value_delimiter_grammar": 722, "besid": 722, "himself": 722, "goe": 722, "go": 722, "overrid": [723, 827, 1174], "writen": 723, "singleton": 723, "written_nam": [724, 758, 759, 760, 898, 964, 1007, 1025, 1027, 1028, 1068, 1134, 1182], "alternative_nam": [724, 733, 735, 758, 759, 760, 898, 956, 963, 964, 1007, 1025, 1026, 1027, 1028, 1068, 1117, 1134, 1179, 1182], "is_hidden": [724, 728, 733, 735, 758, 759, 760, 898, 956, 963, 964, 1007, 1025, 1026, 1027, 1028, 1068, 1134, 1179, 1182], "is_expert": [724, 733, 735, 758, 759, 760, 898, 956, 963, 964, 1007, 1025, 1026, 1027, 1028, 1068, 1134, 1179, 1182], "write_alternative_nam": [724, 733, 735, 758, 759, 760, 898, 956, 963, 964, 1007, 1025, 1026, 1027, 1028, 1068, 1117, 1134, 1179, 1182], "write_condit": [724, 758, 759, 760, 898, 964, 1007, 1025, 1027, 1028, 1068, 1134, 1182], "result_class": [724, 733, 735, 758, 759, 760, 898, 956, 962, 963, 964, 987, 992, 996, 1006, 1007, 1025, 1026, 1027, 1028, 1031, 1035, 1040, 1044, 1068, 1078, 1083, 1087, 1091, 1095, 1099, 1104, 1108, 1112, 1117, 1121, 1125, 1129, 1132, 1133, 1134, 1135, 1179, 1182], "warning_condit": [724, 758, 759, 760], "denot": [724, 758, 759, 760, 896, 898, 964, 1007, 1025, 1027, 1028, 1068, 1134, 1182, 1209, 1309], "contrari": [724, 758, 759, 760], "still": [724, 758, 759, 760, 777, 779, 782, 822, 829, 865, 898, 964, 1007, 1025, 1027, 1028, 1068, 1134, 1182, 1309], "boolean": [724, 758, 759, 760, 791, 796, 797, 812, 1174], "hidden": [724, 733, 758, 759, 760, 898, 964, 1005, 1007, 1008, 1025, 1027, 1028, 1068, 1134, 1136, 1182], "offer": [724, 758, 759, 760, 867], "usual": [724, 758, 759, 760], "somewhat": [724, 758, 759, 760, 898, 964, 1007, 1025, 1027, 1028, 1068, 1134, 1182], "recogn": [724, 758, 759, 760, 787, 831, 836, 893, 984, 1002], "perex": [724, 758, 759, 760], "wheter": [724, 758, 759, 760, 898, 964, 1007, 1025, 1027, 1028, 1068, 1134, 1182], "lambda": [724, 758, 759, 760, 1173], "ommit": [724, 796, 827], "expect": [724, 837, 898, 1025], "_info": [724, 956, 963, 964], "_descript": [724, 956, 963, 964], "longer": [724, 824], "validate_warn": 724, "all_names_in_grammar": [724, 728], "allow_dupl": [724, 733, 898], "predecessor": [724, 799, 827, 898, 1132], "much": 724, "_description_indent": 724, "detail": [724, 733, 898], "commonli": [724, 732, 733, 782, 827, 863, 898], "_grammar_of_nam": 724, "_tuple_with_my_nam": [724, 732], "expr": [724, 732, 766, 772], "has_valu": [724, 789, 827], "expres": 724, "express": [724, 777, 779, 782, 787, 791, 792, 796, 797, 798, 799, 800, 803, 804, 807, 808, 813, 825, 827, 1070], "grammar_typ": [724, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 863, 1037, 1038, 1066, 1070, 1210, 1211, 1212, 1300, 1308], "do_not_skip_whitespaces_before_nam": [724, 963], "separator_typ": [725, 1005, 1008, 1136], "reus": [726, 1079, 1086, 1094, 1103, 1107, 1113, 1120, 1124, 1140], "place": [726, 824, 1164, 1165, 1194, 1309], "activ": 727, "1e5": 727, "7e5": 727, "autogener": 727, "parserel": [727, 761, 762, 763, 767, 769, 770, 771, 777, 780, 790, 791, 792, 796, 797, 798, 800, 803, 804, 807, 808, 825, 962, 963, 964, 1006, 1007, 1026, 1027, 1028, 1038, 1066, 1069, 1070, 1133, 1134, 1135], "all_valu": [727, 760, 898], "item_hook": 727, "prepare_grammar": 727, "remove_from_contain": 727, "flow": 728, "counter": [728, 1173, 1174, 1309], "configurationrootdefinit": [731, 961, 962, 986, 987, 990, 992, 995, 996, 1004, 1006, 1131, 1135, 1175, 1177, 1300], "mergedictadaptor": [731, 1300], "container_definit": [732, 733, 734, 735, 736, 737, 946, 956, 961, 962, 963, 986, 987, 990, 992, 995, 996, 1004, 1006, 1024, 1026, 1076, 1078, 1081, 1083, 1085, 1087, 1089, 1091, 1093, 1095, 1097, 1099, 1101, 1104, 1106, 1108, 1110, 1112, 1115, 1117, 1119, 1121, 1123, 1125, 1127, 1129, 1131, 1132, 1133, 1135, 1175, 1177, 1179, 1300], "rest": [732, 733, 735, 824, 956, 963, 984, 987, 992, 996, 1002, 1006, 1026, 1135, 1177, 1179, 1297, 1308], "has_hidden_memb": [732, 733, 735, 956, 963, 987, 992, 996, 1006, 1026, 1135, 1177, 1179], "intend": [732, 733, 735, 868, 956, 963, 987, 992, 996, 1006, 1026, 1135, 1177, 1179], "is_rep": [732, 733, 735, 898, 956, 963, 964, 987, 992, 996, 1006, 1007, 1025, 1026, 1027, 1028, 1068, 1134, 1135, 1177, 1179, 1182], "onc": [732, 733, 735, 742, 746, 853, 956, 963, 987, 992, 996, 1006, 1026, 1135, 1177, 1179], "valuedefinit": [732, 733, 735, 782, 827, 862, 865, 897, 956, 961, 963, 964, 985, 987, 992, 996, 1003, 1004, 1006, 1007, 1024, 1025, 1026, 1027, 1028, 1066, 1067, 1068, 1131, 1134, 1135, 1175, 1177, 1179, 1181, 1182, 1184, 1300, 1308], "swtich": [732, 733, 735, 956, 963, 987, 992, 996, 1006, 1026, 1135, 1177, 1179], "divid": [732, 733, 735, 956, 963, 987, 992, 996, 1006, 1026, 1135, 1137, 1177, 1179, 1194, 1308], "force_ord": [732, 733, 735, 956, 963, 987, 992, 996, 1006, 1026, 1133, 1135, 1177, 1179], "retain": [732, 733, 735, 740, 827, 853, 865, 956, 959, 963, 987, 992, 996, 1006, 1026, 1135, 1174, 1177, 1179, 1209], "write_last_delimit": [732, 733], "newlin": [732, 768, 769, 770, 962, 963, 1006, 1026, 1068, 1070, 1133, 1135], "kind": [732, 898, 964, 1007, 1025, 1027, 1028, 1068, 1134, 1182], "definition_from_dict": 732, "def": [732, 739, 740, 742, 744], "custom_value_nam": [732, 735], "custom_sect": 732, "parse_return": [732, 733], "return_value_onli": [732, 733], "clean": [732, 733, 1194, 1218], "unnecessari": [732, 733], "tweak": [732, 1301], "comment": 732, "add_ignor": [732, 1006], "inputparamet": [733, 735, 865, 958, 962, 963, 1174, 1300, 1301, 1308], "value_name_format": [733, 898, 1006, 1133], "_dict_from_named_valu": 733, "auxiliari": 733, "configuration_type_nam": [733, 898, 962, 1006, 1135], "runtim": [733, 751, 898, 962, 964, 1006, 1007, 1025, 1027, 1028, 1068, 1134, 1135, 1182, 1301], "data_descript": [733, 760, 898], "additional_data_descript": [733, 898], "children": 733, "even": [733, 777, 779, 782, 787, 791, 792, 796, 797, 798, 799, 800, 803, 804, 807, 808, 825, 827, 852, 865, 1070, 1301], "copy_memb": 733, "new_meber": 733, "newli": [733, 1188, 1209, 1309], "all_member_nam": 733, "_grammar_of_valu": [733, 898], "_allow_duplicates_of": 733, "delimited_custom_value_grammar": [733, 735], "custom_name_charact": [733, 1135], "abcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyz0123456789_": [733, 1135], "charact": [733, 824], "custom_member_grammar": 733, "value_nam": 733, "_first_section_has_to_be_first": 733, "ve": 733, "unord": 733, "sequenc": [733, 776, 782, 827], "parse_fil": 733, "whole_str": [733, 827], "async": [733, 827, 867, 868, 1034, 1039], "parse_from_stream": [733, 827], "stream": [733, 827, 1070, 1308], "up_to": [733, 827], "asyncio": [733, 866, 867, 1308], "read_from_dict": 733, "read_from_str": 733, "repeated_class": [733, 1078, 1104, 1112], "repeatedconfigurationcontain": [733, 869, 1076, 1079, 1101, 1103, 1110, 1113, 1137, 1141, 1175, 1185, 1300], "belong": [733, 1044, 1167, 1207], "Then": 733, "typic": [735, 896, 1189], "custom_valu": 735, "_generic_info": [735, 898, 962, 1135], "allowed_dupl": 737, "moreov": [737, 739, 959], "subdictionari": 737, "Such": [737, 827, 898, 964, 1007, 1025, 1027, 1028, 1068, 1134, 1182], "traceback": [737, 852, 894], "recent": [737, 852, 894], "parseexcept": 737, "cached_class_properti": [738, 744, 1300], "cached_properti": [738, 746, 1300], "functool": [738, 743, 746], "class_properti": [738, 742, 1300], "maybeclassmethod": [738, 1300], "mainli": 738, "lost": 739, "As": [739, 1064], "consequ": [739, 912, 1302, 1303], "execut": [739, 902, 903, 958, 959, 962, 1045, 1174, 1188, 1308, 1309], "super": 739, "tricki": 739, "situat": 739, "__set_name__": 739, "lose": 739, "recov": 739, "protocol": 739, "thing": [739, 898], "alreadi": [739, 766, 863, 896, 1209, 1309], "know": 739, "everyth": 739, "end": [739, 767, 800, 822, 824, 825, 898, 931, 964, 1007, 1025, 1027, 1028, 1068, 1070, 1134, 1182], "ab": 739, "prepend": 740, "keyword_onli": 740, "new_param": 740, "alter": [740, 780, 827, 1174, 1309], "regular": [740, 787, 931, 933, 935, 937, 939, 942, 944], "user_funct": 741, "lightweight": 741, "unbound": 741, "sometim": [741, 777, 779, 782, 787, 791, 792, 796, 797, 798, 799, 800, 803, 804, 807, 808, 825, 827, 863, 959, 1070], "memoiz": 741, "cls_properti": [742, 744], "some_cached_valu": 742, "another_cls_properti": 742, "another_cached_valu": 742, "fset": 743, "fdel": 743, "setter": [743, 759, 760, 1209, 1309], "desir": [744, 777, 779, 782, 787, 791, 792, 796, 797, 798, 799, 800, 803, 804, 807, 808, 825, 827, 1070, 1194], "some_valu": 744, "behaw": 745, "invalid": [746, 779, 788, 789, 790, 791, 796, 797, 799, 800, 803, 806, 807, 823, 825, 827, 828, 900, 1070], "stacklevel": 747, "chdir": 749, "14e": [754, 756], "12e": 755, "lead": [755, 931, 933, 935, 937, 939, 942, 944, 1309], "fortran": [755, 858, 859], "scientif": 755, "1000000000000e": 755, "00": 755, "6e": 755, "1000000e": 755, "cokoli": 756, "tu": 756, "14g": 756, "basegeneratedvaluedefinit": [757, 759, 760, 1300], "generatedvaluedefinit": [757, 1300], "numpyviewdefinit": [757, 1300], "generated_configuration_definit": [758, 759, 760, 1300], "is_gener": [758, 898], "is_stor": [758, 898, 964, 1007, 1025, 1027, 1028, 1068, 1134, 1182], "sinc": [758, 865, 1174, 1301], "reciev": [758, 760], "enhanc": [758, 760, 1208], "getter": [759, 760], "transpos": 760, "reorder": 760, "transform_kei": 760, "possibli": [760, 898, 964, 1007, 1025, 1027, 1028, 1068, 1134, 1182, 1206, 1308], "reshap": 760, "view": [760, 1172, 1300, 1309], "larg": [760, 821], "befor": [760, 779, 782, 788, 789, 790, 791, 796, 797, 799, 800, 803, 806, 807, 822, 823, 824, 825, 827, 828, 898, 962, 1070, 1079, 1086, 1094, 1103, 1107, 1108, 1113, 1120, 1124, 1133, 1140, 1174, 1309], "idnex": 760, "plotinfo": 760, "determine_shap": 760, "skiptoregex": [761, 1300], "token": [761, 762, 763, 787, 1066, 1069], "white": [761, 1300], "include_pattern": 762, "parse_pattern": 762, "regex": [762, 787, 824, 1308], "custom_nam": 762, "parseimpl": [762, 1069], "instr": [762, 1069], "doaction": [762, 1069], "whitechar": 763, "pp": [763, 787], "default_white_char": 763, "parseel": 764, "pa": [765, 1064], "action": [765, 827, 1253, 1254], "parseelemenet": 765, "delim": 766, "suppress": [766, 771, 777, 858, 859, 963, 1026, 1070, 1135], "eof": 767, "restor": 768, "optin": 770, "quot": [771, 803, 816, 893], "definitionfil": 775, "grammartyp": [776, 777, 778, 779, 780, 782, 786, 787, 788, 789, 790, 791, 792, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 821, 822, 823, 824, 825, 826, 828, 833, 863, 898, 964, 1007, 1025, 1027, 1028, 1037, 1038, 1066, 1068, 1070, 1134, 1180, 1182, 1210, 1211, 1212, 1301, 1308], "setof": [776, 778, 784, 785, 831, 836, 837], "specialcolumn": 776, "default_valu": [777, 778, 779, 780, 782, 787, 788, 789, 790, 791, 792, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 806, 807, 808, 822, 823, 824, 825, 827, 828, 865, 898, 964, 1007, 1025, 1027, 1028, 1038, 1068, 1070, 1134, 1182, 1211, 1212], "max_length": [777, 778, 780, 894], "min_length": [777, 778, 780], "as_list": [777, 778, 779, 780], "min_": [777, 778, 780], "sp": [777, 933, 939, 944, 963], "tab": [777, 963, 1309], "delimiter_str": [777, 780], "array_access": [777, 778, 782, 822, 827], "_set_convert_act": 777, "grammar_nam": [777, 779, 782, 787, 791, 792, 796, 797, 798, 799, 800, 803, 804, 807, 808, 825, 827, 1070], "human": [777, 779, 782, 787, 791, 792, 796, 797, 798, 799, 800, 803, 804, 807, 808, 825, 827, 1070], "readabl": [777, 779, 782, 787, 791, 792, 796, 797, 798, 799, 800, 803, 804, 807, 808, 825, 827, 1070], "setnam": [777, 779, 782, 787, 791, 792, 796, 797, 798, 799, 800, 803, 804, 807, 808, 825, 827, 1070], "shorter": [777, 779, 782, 787, 791, 792, 796, 797, 798, 799, 800, 803, 804, 807, 808, 825, 827, 1070], "_string": [777, 778, 779, 782, 790, 791, 792, 797, 806, 822, 823, 824, 827], "ouput": [777, 778, 779, 782, 790, 791, 792, 797, 806, 822, 823, 824, 827, 898, 964, 1007, 1025, 1027, 1028, 1068, 1134, 1174, 1182], "postfix": [777, 778, 779, 782, 787, 788, 789, 790, 791, 792, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 806, 807, 808, 822, 823, 824, 825, 827, 828, 959, 1038, 1070, 1174, 1211, 1212], "_valid": [777, 778, 779, 782, 787, 788, 789, 795, 796, 799, 801, 802, 808, 822, 827, 828], "cannon": [777, 778, 779, 782, 795, 799, 802, 804, 822, 824, 827, 828, 1061], "is_the_same_valu": [777, 779, 782, 822, 827], "perfect": [777, 779, 782, 822, 829], "_grammar_nam": [778, 790, 806], "format_al": [779, 782, 832, 833], "allowed_valu": 779, "after_format": [779, 787, 788, 789, 790, 791, 792, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 806, 807, 808, 822, 823, 824, 825, 827, 828, 1038, 1070, 1211, 1212], "interpret": [779, 788, 789, 790, 791, 796, 797, 799, 800, 803, 806, 807, 823, 825, 827, 828, 852, 959, 1070, 1174, 1309], "explain": [779, 788, 789, 790, 791, 796, 797, 799, 800, 803, 806, 807, 823, 825, 827, 828, 1070], "after_convert": [779, 787, 788, 789, 790, 791, 792, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 806, 807, 808, 822, 823, 824, 825, 827, 828, 1038, 1070, 1211, 1212], "enter": [779, 788, 789, 790, 791, 796, 797, 799, 800, 803, 806, 807, 823, 825, 827, 828, 1070], "param_nam": [779, 780, 782, 787, 822, 824, 827], "abil": [779, 827], "transform_grammar": [780, 827], "chanc": [780, 827], "column": [781, 782, 1041], "default_format": [781, 830], "add_grammar": 781, "add_header_grammar": 781, "format_str": [781, 782, 827], "free_head": 782, "numbering_label": 782, "numbering_format": 782, "grouping_label": 782, "grouping_format": 782, "row_condit": 782, "flatten": 782, "named_result": 782, "group_siz": 782, "group_size_format": 782, "groups_as_list": 782, "optionali": 782, "iq": 782, "irefq": 782, "imq": 782, "noq": 782, "itoq": 782, "conc": 782, "000": 782, "exact": [782, 1308], "similiard": 782, "meaning": 782, "autodetect": [782, 903, 959, 1174], "least": [782, 894, 1309], "subtabl": 782, "column1_nam": 782, "column2_nam": 782, "special_column": 782, "numpy_typ": [782, 787, 791, 792, 795, 796, 797, 804, 827], "featureless": 782, "_numpy_typ": 782, "number_of_column": 782, "zero_data": 782, "variant": [784, 785, 835], "baserealwithunit": [786, 794, 805], "typedgrammartyp": [786, 787, 788, 791, 792, 794, 795, 796, 797, 798, 800, 801, 802, 803, 804, 805, 807, 808, 826, 1037, 1038, 1210, 1211, 1212], "basestr": [786, 800, 803, 807], "basicsepar": [786, 790, 806], "blanksepar": [786, 1004, 1300], "date": [786, 787, 1174, 1309], "fixedpointnumb": [786, 798, 802, 808, 1210, 1211, 1212], "flag": [786, 827, 832, 931, 933, 935, 937, 939, 942, 944, 964, 1301], "intbool": [786, 813], "linestr": [786, 815, 1007], "objectnumb": [786, 1210, 1211, 1212], "unsign": [786, 802, 1210, 1211, 1212], "qstring": 786, "realwithunit": 786, "min": [787, 792, 794, 795, 798, 801, 802, 804, 805, 808, 931, 933, 935, 937, 939, 942, 944, 1038, 1211, 1212], "grammar_cach": 787, "_grammar_unit": 787, "stdlib": 787, "parseresult": 787, "wish": 787, "compil": [787, 856, 959, 1069, 1309], "wa": [787, 865, 1209, 1301], "realnum": 787, "d": [787, 792, 991, 1173, 1309], "stackoverflow": 787, "question": 787, "267399": 787, "roman": 787, "cm": [787, 1064], "xl": 787, "ix": 787, "year": 787, "month": 787, "dai": 787, "datatype_nam": [788, 791, 792, 795, 796, 797, 798, 801, 804, 808, 825, 828], "allowed_typ": [788, 791, 792, 795, 796, 797, 798, 801, 804, 828, 1211, 1212, 1300], "fake": 789, "blank": [790, 1005, 1008], "fact": [790, 835, 867, 1067, 1068], "letter": [791, 797], "type_nam": [791, 792, 797], "dd": 792, "mm": 792, "yyyi": 792, "predefin": [793, 799, 868, 933, 1074, 1309], "rydberg": 794, "ry": [794, 865, 931, 933, 935, 937, 939, 942, 944], "07349864494991327": 794, "convers": 794, "factor": [794, 931, 933, 935, 937, 939, 942, 944], "missing_valu": [796, 827], "configuraion": [796, 827], "can_be_ommit": [796, 827], "ommis": [796, 827], "do_not_output_the_opt": [796, 827], "revers": [797, 896], "_rev_grammar": 797, "alias": 799, "additional_descript": [799, 827], "choic": [799, 827, 898, 1254], "multilin": [799, 827], "hoewev": [799, 827], "skipto": 800, "lineend": [800, 963], "stringend": 800, "reffer": 802, "care": [802, 958], "te": [802, 1064], "word": 803, "fnumber": [804, 1038], "79": [806, 1062, 1064], "insid": 806, "star": 806, "numpyarrai": [821, 1301], "rawdata": [821, 822], "restofthefil": [821, 1301], "written_shap": 822, "item_format": 822, "18e": 822, "no_newline_at_end": 822, "anyth": [822, 824, 825, 868, 1174, 1308], "resiz": 822, "data_prefix": 823, "allow_empti": 823, "line_length": 824, "ends_with": 824, "ends_with_str": 824, "include_ends_with": 824, "split": [824, 1301], "_n_lines_grammar": 824, "yield": [827, 900], "confus": 827, "opposit": [827, 1209], "absenc": 827, "On": [827, 1309], "hand": [827, 933, 939, 944], "descendatn": 827, "equal": [827, 865, 896, 931, 1064, 1194, 1207, 1209], "rare": 827, "incomplet": 827, "set_from_atom": [827, 956, 1144, 1180, 1182, 1211, 1212], "_valueerror": 827, "error_messag": 827, "apply_format": 827, "manner": 827, "type_valid": 827, "typenam": 827, "suffici": [827, 896, 903], "ok": 827, "used_in_definit": 827, "format_for_the_typ": 830, "array_lik": [831, 836], "type_map": [832, 833, 834], "becom": 832, "left": [832, 931, 959, 1169, 1174], "descendatnt": 833, "format_for_typ": 833, "gue": 834, "rang": [835, 896, 931, 933, 939, 944, 1289], "normalize_typ": [837, 1300], "thorough": 851, "misc": [852, 853, 854, 855, 856, 857, 1300], "typeerror": 852, "h": [854, 931, 1064], "numba": [856, 857], "jit": 856, "occur": [857, 1207, 1308], "acceler": 857, "nooutput": [858, 1300], "no_output": [859, 1300], "baseopt": [860, 862, 864, 865, 981, 985, 999, 1003, 1066, 1067, 1175, 1181, 1184, 1300], "customopt": [860, 1066, 1067, 1175, 1184, 1300], "dangerousvalu": [860, 865, 898, 1300], "leaf": 861, "my": [862, 1075, 1309], "value_definit": [862, 898, 961, 964, 1004, 1007, 1024, 1025, 1027, 1028, 1066, 1068, 1131, 1134, 1175, 1182, 1300], "value_typ": 863, "encapsul": [863, 899], "overcam": 863, "enfor": 863, "stringifi": 863, "again": [863, 959, 1308], "write_valu": [863, 898], "conf": [865, 898, 964, 1007, 1025, 1027, 1028, 1068, 1134, 1182], "im": [865, 931, 933, 935, 937, 939, 942, 944, 1309], "set_danger": 865, "1j": 865, "is_danger": 865, "bypass": 865, "proper": [865, 959], "completli": 865, "_create_dangerous_valu": 865, "underlin": [865, 1044], "compatibil": 865, "_post_set": 865, "add_hook": 865, "_check_array_access": 865, "_set_item": 865, "saniti": 865, "_getitem": 865, "_unpack_valu": 865, "potention": 865, "_pack_valu": 865, "clear_result": 865, "is_set": 865, "_written_valu": 865, "value_and_chang": 865, "is_it_the_default_valu": 865, "wildcard": 865, "asynciofileread": [866, 1300], "processoutputread": [866, 959, 962, 1033, 1034, 1037, 1039, 1044, 1300, 1301], "emploi": [866, 1174, 1308], "stdio": 866, "stderr": [866, 868], "concur": 866, "process_output_read": [867, 868, 959, 962, 1033, 1034, 1037, 1039, 1044, 1300], "buffers": 867, "8192": 867, "streamread": 867, "synchron": 867, "readlin": 867, "separator_shift": 867, "sep": 867, "readuntil": 867, "read_error": 868, "read_output": [868, 1034, 1039, 1308], "run_subprocess": 868, "postprocess": [868, 1308, 1309], "return_cod": [868, 1032, 1036, 1041, 1044, 1045], "cmd": [868, 1044], "outfil": [868, 1044], "result_from_fil": 868, "repeated_configuration_contain": [870, 1076, 1079, 1101, 1103, 1110, 1113, 1137, 1141, 1175, 1185, 1300], "num": 873, "lmbda": 874, "testcommon": [885, 1283], "test_common": [886, 1300], "test_asyncio_file_read": 886, "test_cached_properti": 886, "testgrammar": 887, "test_grammar_typ": [888, 1300], "test_is_the_same_valu": 888, "test_typ": 888, "_test_typ": 888, "connector": 890, "_": [890, 993, 1138], "subcommand": [891, 1271], "script": [891, 1246, 1247, 1301, 1308, 1309], "solv": [895, 1301], "unique_valu": [896, 1300], "value_to_class_id": 896, "distinct": [896, 1301], "criterion": 896, "from_valu": 896, "int32": 896, "start_from": 896, "unique_index": 896, "iter_uniqu": 896, "unique_item": 896, "len_of_uniqu": 896, "len": [896, 1174, 1309], "_create_map": 896, "uniquevalu": 896, "is_equivalent_to": 896, "regardless": [896, 959], "are_equival": 896, "is_equival": 896, "noth": [896, 960, 1031, 1174], "mappind": 896, "equivalence_class": 896, "unique_values_map": 896, "default_value_from_contain": [898, 964, 1007, 1068, 1182], "fixed_valu": [898, 964, 1007, 1025, 1027, 1028, 1068, 1134, 1182], "init_by_default": [898, 964, 1007, 1025, 1027, 1028, 1068, 1134, 1182], "result_is_vis": [898, 964, 1007, 1025, 1027, 1028, 1068, 1134, 1182], "is_always_ad": [898, 964, 1007, 1025, 1027, 1028, 1068, 1134, 1182], "name_format": [898, 964, 1007, 1025, 1027, 1028, 1068, 1134, 1182], "anyt": [898, 964, 1007, 1025, 1027, 1028, 1068, 1134, 1182], "alternativelli": [898, 964, 1007, 1025, 1027, 1028, 1068, 1134, 1182], "callback": [898, 964, 1007, 1025, 1027, 1028, 1068, 1134, 1182, 1299], "met": [898, 964, 1007, 1025, 1027, 1028, 1068, 1134, 1182], "init": [898, 964, 1007, 1025, 1027, 1028, 1068, 1134, 1182], "visibl": [898, 964, 1007, 1025, 1027, 1028, 1068, 1134, 1182], "absolut": [898, 964, 1007, 1025, 1027, 1028, 1068, 1134, 1182], "spars": [898, 964, 1007, 1025, 1027, 1028, 1068, 1134, 1182], "name_value_delimit": [898, 964, 1007, 1025, 1027, 1028, 1068, 1134, 1182], "type_from_type_map": [898, 964, 1007, 1300], "docst": 898, "formated_nam": 898, "retriev": [898, 1094, 1107, 1120, 1124], "convert_and_valid": 898, "get_valu": 898, "write_nam": 898, "builtin": 898, "critic": 899, "suspici": 899, "preferr": 901, "suffix": [902, 1174, 1309], "sumodul": 904, "a1_fe_scf_simpl": [906, 907, 1300, 1305], "scf": [906, 912, 918, 921, 924, 930, 933, 939, 942, 945, 959, 1032, 1038, 1039, 1040, 1041, 1042, 1119, 1121, 1174, 1300, 1301, 1302, 1303, 1308, 1309], "bcc": [906, 1302, 1303], "fe": [907, 910, 913, 1064, 1165, 1300, 1302, 1303], "a2_fe_scf_input_modif": [909, 910, 1300, 1305], "demonstr": [909, 915, 1302, 1303], "chage": [909, 1302, 1303], "a3_fe_do": [912, 913, 1300, 1305], "kkrscf": [912, 933, 939, 944, 962, 1045, 1302, 1303], "kkrgen": [912, 933, 939, 944, 1174, 1302, 1303], "a4_cpa_exampl": [915, 916, 1300, 1305], "ni": [915, 1064, 1302, 1303], "srtio3": [915, 924, 1302, 1303], "cpa": [915, 944, 1302, 1303], "ni_doped_sto": [916, 1300], "a5_al_eo": [918, 919, 1300, 1305], "volum": [918, 1064, 1302, 1303], "equat": [918, 1302, 1303], "fite": [918, 1302, 1303], "al": [919, 1064, 1300], "a6_cu_msspec": [921, 922, 1300, 1305], "fcc": [921, 1302, 1303], "combin": [921, 924, 1174, 1302, 1303], "msspec": [921, 924, 1172, 1302, 1303], "photoelectron": [921, 924, 931, 1302, 1303], "diffract": [921, 924, 1302, 1303], "commandlin": [921, 924], "cu": [922, 1064, 1300, 1302, 1303], "a7_srtio3_msspec": [924, 925, 1300, 1305], "sto": [925, 1300], "a8_arpes_and_plot": [927, 928, 1300, 1305], "arp": [928, 930, 932, 959, 1031, 1032, 1174, 1300, 1301, 1302, 1303, 1309], "inputparameterss": [930, 961, 1131], "configurt": 930, "resolv": [931, 1174], "photoemiss": 931, "spectroscopi": [931, 1172], "ext": [931, 933, 935, 937, 939, 942, 944], "adsi": [931, 933, 935, 937, 939, 942, 944, 947], "fixedvalu": [931, 933, 935, 937, 939, 942, 944], "potfil": [931, 933, 935, 937, 939, 942, 944], "isn": [931, 933, 935, 937, 939, 942, 944], "krw": [931, 933, 935, 937, 939, 942, 944, 1301], "rw": [931, 933, 935, 937, 939, 942, 944, 1200], "muffin": [931, 933, 935, 937, 939, 942, 944], "tin": [931, 933, 935, 937, 939, 942, 944], "fullpot": [931, 933, 935, 937, 939, 942, 944, 1301], "krmt": [931, 933, 935, 937, 939, 942, 944, 1301], "anyof": [931, 933, 935, 937, 939, 942, 944], "rmt": [931, 933, 935, 937, 939, 942, 944, 1200], "d_ij": [931, 933, 935, 937, 939, 942, 944], "amount": [931, 933, 935, 937, 939, 942, 944], "nonmag": [931, 933, 935, 937, 939, 942, 944], "faster": [931, 933, 935, 937, 939, 942, 944], "tau": [931, 933, 935, 937, 939, 942, 944, 956, 1309], "bzint": [931, 933, 935, 937, 939, 942, 944], "weyl": [931, 933, 935, 937, 939, 942, 944], "ran": [931, 933, 935, 937, 939, 942, 944], "dom": [931, 933, 935, 937, 939, 942, 944], "vari": [931, 933, 935, 937, 939, 942, 944], "quadrat": [931, 933, 935, 937, 939, 942, 944], "tween": [931, 933, 935, 937, 939, 942, 944], "imaginari": [931, 933, 935, 937, 939, 942, 944], "compromis": [931, 933, 935, 937, 939, 942, 944], "concern": [931, 933, 935, 937, 939, 942, 944], "accuraci": [931, 933, 935, 937, 939, 942, 944], "effici": [931, 933, 935, 937, 939, 942, 944], "adjust": [931, 933, 935, 937, 939, 942, 944], "mesh": [931, 933, 935, 937, 939, 942, 944, 1079, 1086, 1094, 1098, 1099, 1103, 1107, 1113, 1120, 1124, 1140, 1142, 1189, 1196, 1197, 1198, 1199, 1200, 1206, 1207, 1209, 1300], "\u03c4": [931, 933, 935, 937, 939, 942, 944], "250": [931, 933, 935, 937, 939, 942, 944], "nktab2d": [931, 933, 935, 937, 939, 942, 944], "region": [931, 933, 935, 937, 939, 942, 944, 1166, 1167, 1169, 1170, 1209], "nktab3d": [931, 933, 935, 937, 939, 942, 944], "nkmin": [931, 933, 935, 937, 939, 942, 944], "300": [931, 933, 935, 937, 939, 942, 944, 1062], "nkmax": [931, 933, 935, 937, 939, 942, 944], "500": [931, 933, 935, 937, 939, 942, 944], "cluster": [931, 933, 935, 937, 939, 942, 944, 1174, 1309], "nshlclu": [931, 933, 935, 937, 939, 942, 944], "shell": [931, 933, 935, 937, 939, 942, 944, 959, 1309], "clurad": [931, 933, 935, 937, 939, 942, 944], "alat": [931, 933, 935, 937, 939, 942, 944], "iqcntr": [931, 933, 935, 937, 939, 942, 944], "basi": [931, 933, 935, 937, 939, 942, 944], "itcntr": [931, 933, 935, 937, 939, 942, 944], "atomictyp": [931, 933, 935, 937, 939, 942, 944, 1128, 1164, 1194, 1207, 1210, 1300], "occupi": [931, 933, 935, 937, 939, 942, 944], "nlout": [931, 933, 935, 937, 939, 942, 944], "lmax": [931, 933, 935, 937, 939, 942, 944], "mol": [931, 933, 935, 937, 939, 942, 944], "eminev": 931, "window": [931, 1288], "emaxev": 931, "ework_ev": 931, "inner": 931, "imv_ini_ev": 931, "imv_fin_ev": 931, "nl": [931, 933, 935, 937, 939, 944], "angula": [931, 933, 935, 937, 939, 944], "cutoff": [931, 933, 935, 937, 939, 944], "discard": [931, 933, 935, 937, 939, 944], "aip": 931, "spleed": 931, "leed": 931, "experiment": [931, 1301], "iq_at_surf": 931, "miller_hkl": 931, "crys_vec": 931, "miller": [931, 1169], "crystalograph": [931, 1059], "strver": 931, "struc": 931, "inpver": 931, "rslab": 931, "spec_ph": 931, "photon": 931, "azimuth": 931, "pol_p": 931, "light": [931, 933, 939, 944], "ephot": 931, "alq": 931, "pol": 931, "ellipsi": 931, "delq": 931, "90": [931, 1062], "circular": 931, "npol": 931, "unpolar": 931, "dichroism": 931, "rcp": 931, "ellipt": 931, "icirc": 931, "lcp": 931, "ddad": 931, "ldad": 931, "arbitrari": [931, 933, 939, 944], "idreh": 931, "linearli": 931, "right": [931, 1169], "helic": 931, "ifsp": 931, "theta_fix": 931, "spec_el": 931, "nt": 931, "pol_": 931, "pz": 931, "spol": 931, "pspin": 931, "beta1": [931, 1305], "beta2": [931, 1305], "rotaxi": 931, "typ": 931, "diagram": 931, "scan": 931, "orthonorm": 931, "stereograph": 931, "pe": 931, "xp": 931, "nx": 931, "ny": 931, "coordinat": 931, "splout": 931, "xpsrun": 931, "upsrun": 931, "istr": 931, "beam": 931, "pol0": 931, "pol0l": 931, "laboratori": 931, "q1": 931, "0j": 931, "amplitud": 931, "q2": 931, "q3": 931, "q4": 931, "spec_str": 931, "n_laydbl": 931, "nlat_g_vec": 931, "57": [931, 1062, 1064], "n_layer": 931, "50": [931, 1062], "surf_bar": 931, "transp_bar": 931, "blochisf": 933, "blochsf": 933, "lowest": [933, 935, 939, 942, 944], "highest": 933, "kpath": 933, "nkdir": 933, "ka": 933, "segment": 933, "2\u03c0": 933, "rectangular": 933, "ke": 933, "nk1": 933, "k1": 933, "nk2": 933, "k2": 933, "\ufb01rst": 933, "span": 933, "mixop": [933, 939, 942, 944], "vxc": [933, 939, 942, 944], "vwn": [933, 939, 942, 944], "mjw": [933, 939, 942, 944], "vbh": [933, 939, 942, 944], "pw92": [933, 939, 942, 944], "gga": [933, 939, 942, 944], "bj": [933, 939, 942, 944], "mbj": [933, 939, 942, 944], "vosko": [933, 939, 942, 944], "wilk": [933, 939, 942, 944], "nusair": [933, 939, 942, 944], "janak": [933, 939, 942, 944], "william": [933, 939, 942, 944], "moruzzigit": [933, 939, 942, 944], "von": [933, 939, 942, 944], "barth": [933, 939, 942, 944], "hedin": [933, 939, 942, 944], "perdew": [933, 939, 942, 944], "burk": [933, 939, 942, 944], "ernzendorf": [933, 939, 942, 944], "wang": [933, 939, 942, 944], "engel": [933, 939, 942, 944], "beck": [933, 939, 942, 944], "johnson": [933, 939, 942, 944], "parametris": [933, 939, 942, 944], "alg": [933, 939, 942, 944], "broyden2": [933, 939, 942, 944], "tchebi": [933, 939, 942, 944], "broyden": [933, 939, 942, 944], "tchebychev": [933, 939, 942, 944], "efguess": [933, 939, 942, 944], "tol": [933, 939, 942, 944], "istbri": [933, 939, 942, 944], "spheric": [933, 939, 942, 944], "callcul": [933, 939, 942, 944], "asa": [933, 939, 942, 944], "itdept": [933, 939, 942, 944], "depth": [933, 939, 942, 944], "histori": [933, 939, 942, 944], "qion": [933, 939, 942, 944], "ionic": [933, 939, 942, 944], "qt": [933, 939, 942, 944], "mspin": [933, 939, 942, 944], "\u03bc_": [933, 939, 942, 944], "usevmatt": [933, 939, 942, 944], "mattheissconstruct": [933, 939, 942, 944], "nrel": [933, 939, 944], "srel": [933, 939, 944], "nonrelativist": [933, 939, 944], "relativist": [933, 939, 944], "frel": [933, 939, 944], "lloyd": [933, 939, 944], "improv": [933, 939, 944, 1301], "mdir": [933, 939, 944, 1301], "magnetis": [933, 939, 944], "normalis": [933, 939, 944], "strength": [933, 939, 944], "program": [933, 939, 944, 1305], "fulli": [933, 939, 944, 1209, 1219, 1301], "strconst": [933, 939, 944], "ewald": [933, 939, 944], "rmax": [933, 939, 944], "gmax": [933, 939, 944], "reciproc": [933, 939, 944], "respec": [933, 939, 944], "tive": [933, 939, 944], "anew": [933, 939, 944], "via": [933, 939, 944, 1174, 1309], "necesseri": [933, 939, 944], "bsf": [934, 959, 984, 987, 988, 989, 1002, 1300, 1301], "jxc": [934, 940, 959, 976, 1300, 1301], "damp": [937, 938], "ntmp": 937, "temperatur": 937, "\u03b1": 937, "setfluct": 937, "mlin": 937, "m_t": 937, "account": 937, "vibrat": 937, "nftet": 937, "nfphi": 937, "nvibra": 937, "bigger": 937, "fluctuat": 937, "thermal": 937, "tmpmin": 937, "setlfunc": 937, "tmpmax": 937, "fluctfil": 937, "\ufb01le": 937, "magnetizst": 937, "experi": 937, "mont": 937, "carlo": 937, "\u03b8": 937, "\u03c6": 937, "gilbert": [938, 959, 1300, 1301], "meaningful": 942, "phagen": [943, 959, 1174, 1300, 1309], "0001": 944, "disord": 944, "tausect": 946, "input_parameters_definit": [946, 956, 962, 963, 964, 1300], "inputsectiondefinit": [946, 947, 954, 956, 961, 962, 1300], "configurationsectiondefinit": [946, 956, 961, 963, 1076, 1078, 1081, 1083, 1085, 1087, 1089, 1091, 1093, 1095, 1097, 1099, 1101, 1104, 1106, 1108, 1110, 1112, 1115, 1117, 1119, 1121, 1123, 1125, 1127, 1129, 1131, 1132, 1133, 1175, 1300], "io_data": [956, 1067, 1116, 1142, 1144, 1180, 1181, 1184, 1187, 1188, 1189, 1190, 1211, 1212, 1300], "xd": 956, "_copy_arg": [956, 962, 963, 964], "_member": [956, 962, 963], "configurationfil": [958, 959, 981, 983, 984, 986, 988, 990, 993, 995, 997, 999, 1001, 1002, 1143, 1144, 1175, 1300], "configurationsectiontrait": [958, 959, 960, 981, 983, 984, 986, 988, 990, 993, 995, 997, 999, 1001, 1002, 1076, 1077, 1079, 1081, 1082, 1085, 1086, 1089, 1090, 1093, 1094, 1097, 1098, 1101, 1102, 1103, 1106, 1107, 1110, 1111, 1113, 1115, 1116, 1119, 1120, 1123, 1124, 1127, 1128, 1137, 1138, 1139, 1141, 1142, 1143, 1144, 1175, 1176, 1178, 1183, 1185, 1300], "inputsect": [958, 963, 1300], "configurationsect": [958, 960, 1076, 1077, 1081, 1082, 1085, 1086, 1089, 1090, 1093, 1094, 1097, 1098, 1101, 1102, 1106, 1107, 1110, 1111, 1115, 1116, 1119, 1120, 1123, 1124, 1127, 1128, 1137, 1138, 1139, 1142, 1175, 1179, 1300], "inputfil": 959, "outputfil": [959, 981, 999, 1006, 1300], "resolve_executable_suffix": 959, "sprkkr_executable_suffix": [959, 1174, 1300, 1309], "env": 959, "user_defined_valu": 959, "task_nam": 959, "inputparametersdefinit": [959, 961, 1300], "_default_mpi_runn": 959, "default_mpi_runn": 959, "runner": [959, 1174, 1309], "cpu": 959, "mpi_runn": 959, "mpirun": [959, 1174, 1309], "is_mpi": 959, "run_process": 959, "executable_suffix": [959, 1174, 1301], "gdb": [959, 1174], "paamet": 959, "binari": 959, "infrom": 959, "postfixi": 959, "result_read": [959, 962], "ruther": 959, "read_output_from_fil": 959, "executable_param": 959, "stdin": 959, "popen": 959, "set_opt": 959, "marp": [959, 1300], "is_it_a_input_parameters_nam": 959, "create_input_paramet": 959, "task_definit": 959, "from_fil": [959, 984, 1002, 1144, 1309], "fullfil": 959, "change_task": [959, 976, 1174, 1301], "configurationfiledefinit": [961, 962, 986, 987, 990, 992, 995, 996, 1004, 1006, 1131, 1135, 1175, 1300], "inputvaluedefinit": [961, 963, 1300], "configurationvaluedefinit": [961, 964, 1004, 1007, 1066, 1068, 1131, 1134, 1175, 1300], "simlilar": [961, 1131], "share": [961, 1131, 1207, 1209, 1272, 1300, 1301, 1308, 1309], "save_hook": 962, "child_class": [962, 963, 1006, 1026, 1133, 1135], "custom_class": [962, 963, 1006, 1026, 1133, 1135], "grammar_of_delimit": [962, 963, 964, 1006, 1007, 1026, 1027, 1028, 1070, 1133, 1134, 1135], "printabl": 962, "custom_value_grammar": [962, 1135], "ouptut": [963, 1006, 1026, 1133, 1174], "wordstart": [963, 1026, 1027], "type_of_danger": [964, 1007, 1134], "testdefinit": 975, "test_definit": [976, 1300], "test_default": 976, "testinputparamet": 977, "test_input_paramet": [978, 979, 1300], "assertpars": 978, "assertnotvalid": 978, "test_section_delimiter_valu": 978, "test_custom_valu": 978, "test_dangerous_valu": 978, "test_write_condit": 978, "test_input_parameters_definit": 978, "test_set_valu": 978, "test_numbered_arrai": 978, "test_gath": 978, "test_numpy_arrai": 978, "test_repeated_valu": 978, "test_copi": 978, "test_switch": 978, "arithmet": [981, 986, 988, 990, 991, 995, 997, 999, 1300, 1301], "commonoutputfil": [981, 986, 988, 990, 993, 995, 997, 999, 1300], "unknowndatavalu": [981, 999, 1300], "configurationvalu": [981, 985, 999, 1003, 1175, 1182, 1300], "_check_arithmet": [982, 991, 1000], "_do_arithmet": [982, 991, 1000], "summabl": [982, 991, 1000], "subtract": [982, 991, 1000], "n_atom": [983, 1001], "n_type": [983, 1001], "site_type_index": [983, 1001], "n_orbit": [983, 1001], "unknown_output_file_definit": [984, 1002], "logik": [984, 1002], "skola": [984, 1002], "spc": [984, 996, 997, 998, 1002, 1031, 1032, 1300, 1301], "first_tri": [984, 1002], "try_onli": [984, 1002], "certain": [984, 1002], "extens": [984, 1002], "as_arrai": [985, 1003], "bsfdefinit": 986, "output_files_definit": [986, 987, 990, 992, 995, 996, 1005, 1006, 1007, 1008, 1009, 1010, 1300], "outputfiledefinit": [986, 987, 990, 992, 995, 996, 1004, 1009, 1300], "bsfoutputfil": [986, 987], "bloch": 988, "spectral": 988, "layout": [988, 993, 997, 1288], "latex": [988, 993, 997, 1288, 1294, 1299], "600": [988, 993, 997, 1288, 1295, 1299], "_arithmetic_valu": [988, 997], "raw_data": [988, 997], "_assert_arithmet": [988, 997], "subtrack": [988, 997], "dosdefinit": 990, "dosoutputfil": [990, 992], "legend_ncol": 991, "legend_height": 991, "legend_fonts": 991, "_clear_comput": 993, "total_do": 993, "ll": 993, "_resolve_spin": 993, "iterate_data_slic": 993, "iterate_do": 993, "index_of_dos_for_site_typ": 993, "dos_for_site_typ": 993, "_create_do": 993, "n_orbitals_for": 993, "record": 993, "n_spin": 993, "arpesdefinit": 995, "arpesoutputfil": [995, 996], "outputfilevaluedefinit": [1004, 1006, 1300], "No": 1006, "doublecross": [1006, 1136], "potmix": [1007, 1134], "One": [1009, 1297], "testoutput": [1021, 1056], "test_fil": [1022, 1300], "test_output": [1022, 1057, 1300], "outputnonamevaluedefinit": [1024, 1300], "outputvaluedefinit": [1024, 1025, 1026, 1028, 1300], "outputsectiondefinit": [1024, 1300], "outputvalueequaldefinit": [1024, 1300], "although": 1024, "approach": 1024, "arpesprocess": 1030, "task_result": [1030, 1031, 1032, 1033, 1035, 1036, 1037, 1040, 1041, 1044, 1045, 1300], "kkrprocess": [1030, 1031, 1033, 1035, 1037, 1040, 1043, 1300], "arpesresult": [1030, 1031], "taskresult": [1030, 1032, 1033, 1036, 1037, 1041, 1043, 1044, 1300], "acc": 1031, "reader_class": [1031, 1035, 1040, 1044], "defaultoutputread": [1031, 1033, 1035], "spc_filenam": 1032, "defaultprocess": 1033, "defaultresult": [1033, 1035], "realorstar": 1037, "scfoutputread": [1037, 1040, 1308], "scfprocess": 1037, "scfresult": [1037, 1040, 1309], "nan": 1038, "potential_filenam": [1041, 1174, 1309], "hopefulli": 1041, "new_task": 1041, "coverg": 1041, "iteration_valu": 1041, "last_iter": [1041, 1309], "logscal": 1041, "err": 1041, "render": 1041, "screen": 1041, "wich": 1044, "_wrap": 1044, "test_scf": 1057, "geometri": [1058, 1094, 1209], "latticedata": [1059, 1300, 1301], "pearson": [1059, 1300], "classif": 1059, "lattice_data": [1060, 1061, 1062, 1300], "bravais_numb": [1060, 1061], "shoenflies_symbol": 1060, "pearson_symbol": 1061, "famili": 1061, "centering_typ": 1061, "herman_mauguin": 1061, "shoenfli": 1061, "xband_data": 1061, "sysfil": [1061, 1219, 1220, 1300], "from_symbol": 1061, "normalize_symbol": 1061, "ap": 1061, "triclin": 1061, "cf": [1061, 1064], "cubic": 1061, "face": 1061, "m3m": 1061, "o_h": 1061, "ci": 1061, "bodi": 1061, "cp": 1061, "hp": 1061, "hexagon": 1061, "mmm": 1061, "d_6h": 1061, "hr": 1061, "trigon": 1061, "3m": 1061, "d_3d": 1061, "mp": 1061, "monoclin": 1061, "c_2h": 1061, "oF": 1061, "orthoromb": 1061, "d_2h": 1061, "oi": 1061, "op": 1061, "ti": [1061, 1064], "tetragon": 1061, "d_4h": 1061, "tp": 1061, "27": [1062, 1064], "39": [1062, 1064], "73": [1062, 1064], "17": [1062, 1064, 1309], "74": 1062, "77": [1062, 1064], "19": 1062, "80": 1062, "81": [1062, 1064], "84": [1062, 1064], "87": 1062, "88": [1062, 1064], "89": [1062, 1064], "93": [1062, 1064], "99": [1062, 1064], "102": 1062, "29": 1062, "108": 1062, "30": 1062, "114": 1062, "120": 1062, "126": 1062, "129": 1062, "135": 1062, "138": 1062, "145": 1062, "37": [1062, 1064], "147": 1062, "38": 1062, "150": 1062, "156": 1062, "162": 1062, "168": 1062, "174": 1062, "177": 1062, "180": 1062, "183": 1062, "186": 1062, "47": 1062, "192": 1062, "193": 1062, "49": 1062, "195": 1062, "198": 1062, "204": 1062, "210": 1062, "216": 1062, "222": 1062, "228": 1062, "231": 1062, "234": 1062, "58": 1062, "240": 1062, "59": 1062, "247": 1062, "60": 1062, "249": 1062, "255": 1062, "257": 1062, "263": 1062, "269": 1062, "275": 1062, "278": 1062, "67": [1062, 1064], "281": 1062, "68": 1062, "287": 1062, "69": 1062, "299": 1062, "71": [1062, 1064], "302": 1062, "72": 1062, "303": 1062, "306": 1062, "308": 1062, "75": [1062, 1064], "314": 1062, "76": [1062, 1064], "315": 1062, "316": 1062, "78": [1062, 1064], "317": 1062, "318": 1062, "319": 1062, "320": 1062, "82": [1062, 1064], "321": 1062, "83": [1062, 1064], "322": 1062, "323": 1062, "85": [1062, 1064], "324": 1062, "86": [1062, 1064], "326": 1062, "328": 1062, "329": 1062, "331": 1062, "332": 1062, "333": 1062, "92": 1062, "334": 1062, "335": 1062, "94": [1062, 1064], "336": 1062, "95": [1062, 1064], "337": 1062, "96": [1062, 1064], "338": 1062, "97": 1062, "339": 1062, "98": [1062, 1064], "340": 1062, "341": 1062, "342": 1062, "101": 1062, "343": 1062, "344": 1062, "103": 1062, "345": 1062, "104": 1062, "346": 1062, "105": 1062, "347": 1062, "106": 1062, "348": 1062, "107": 1062, "349": 1062, "350": 1062, "109": 1062, "351": 1062, "110": 1062, "352": 1062, "111": 1062, "353": 1062, "112": 1062, "354": 1062, "113": 1062, "355": 1062, "356": 1062, "115": 1062, "357": 1062, "116": 1062, "358": 1062, "117": 1062, "359": 1062, "118": 1062, "360": 1062, "119": 1062, "361": 1062, "362": 1062, "121": 1062, "363": 1062, "122": 1062, "364": 1062, "123": 1062, "365": 1062, "124": 1062, "366": 1062, "125": 1062, "368": 1062, "370": 1062, "127": 1062, "371": 1062, "128": 1062, "372": 1062, "374": 1062, "130": 1062, "376": 1062, "131": 1062, "377": 1062, "132": 1062, "378": 1062, "133": 1062, "380": 1062, "134": 1062, "382": 1062, "383": 1062, "136": 1062, "384": 1062, "137": 1062, "386": 1062, "388": 1062, "139": 1062, "389": 1062, "140": 1062, "390": 1062, "141": 1062, "392": 1062, "142": 1062, "394": 1062, "143": 1062, "396": 1062, "144": 1062, "398": 1062, "400": 1062, "146": 1062, "401": 1062, "404": 1062, "148": 1062, "405": 1062, "149": 1062, "407": 1062, "408": 1062, "151": 1062, "409": 1062, "152": 1062, "410": 1062, "153": 1062, "411": 1062, "154": 1062, "412": 1062, "155": 1062, "414": 1062, "415": 1062, "157": 1062, "416": 1062, "158": 1062, "417": 1062, "159": 1062, "418": 1062, "160": 1062, "419": 1062, "161": 1062, "422": 1062, "423": 1062, "163": 1062, "424": 1062, "164": 1062, "425": 1062, "165": 1062, "426": 1062, "166": 1062, "428": 1062, "167": 1062, "430": 1062, "431": 1062, "169": 1062, "432": 1062, "170": 1062, "433": 1062, "171": 1062, "434": 1062, "172": 1062, "435": 1062, "173": 1062, "436": 1062, "437": 1062, "175": 1062, "438": 1062, "176": 1062, "439": 1062, "440": 1062, "178": 1062, "441": 1062, "179": 1062, "442": 1062, "443": 1062, "181": 1062, "444": 1062, "182": 1062, "445": 1062, "446": 1062, "184": 1062, "447": 1062, "185": 1062, "448": 1062, "449": 1062, "187": 1062, "450": 1062, "188": 1062, "451": 1062, "189": 1062, "452": 1062, "190": 1062, "453": 1062, "191": 1062, "454": 1062, "455": 1062, "456": 1062, "194": 1062, "457": 1062, "458": 1062, "196": 1062, "459": 1062, "197": 1062, "460": 1062, "461": 1062, "199": 1062, "462": 1062, "463": 1062, "201": 1062, "465": 1062, "202": 1062, "466": 1062, "203": 1062, "468": 1062, "469": 1062, "205": 1062, "470": 1062, "206": 1062, "471": 1062, "207": 1062, "472": 1062, "208": 1062, "473": 1062, "209": 1062, "474": 1062, "475": 1062, "211": 1062, "476": 1062, "212": 1062, "477": 1062, "213": 1062, "478": 1062, "214": 1062, "479": 1062, "215": 1062, "480": 1062, "481": 1062, "217": 1062, "482": 1062, "218": 1062, "483": 1062, "219": 1062, "484": 1062, "220": 1062, "485": 1062, "221": 1062, "486": 1062, "488": 1062, "223": 1062, "489": 1062, "224": 1062, "491": 1062, "225": 1062, "492": 1062, "226": 1062, "493": 1062, "227": 1062, "494": 1062, "229": 1062, "498": 1062, "230": 1062, "499": 1062, "perlov": 1062, "ac": 1064, "ag": 1064, "am": 1064, "At": 1064, "au": 1064, "ba": 1064, "Be": 1064, "bi": 1064, "bk": 1064, "br": [1064, 1309], "ca": 1064, "ce": 1064, "co": 1064, "cr": 1064, "dy": 1064, "er": 1064, "eu": 1064, "fm": 1064, "fr": 1064, "ge": 1064, "he": 1064, "hf": 1064, "hg": 1064, "ho": 1064, "ir": 1064, "kr": 1064, "la": 1064, "li": [1064, 1309], "04": 1064, "lu": 1064, "mg": [1064, 1300], "mn": 1064, "mo": 1064, "na": 1064, "03": 1064, "02": 1064, "pb": 1064, "14351193885013": 1064, "pd": 1064, "pm": 1064, "po": 1064, "pr": 1064, "pu": 1064, "ra": 1064, "rb": 1064, "rh": 1064, "rn": 1064, "ru": 1064, "sb": 1064, "se": 1064, "sm": 1064, "sn": 1064, "sr": 1064, "ta": 1064, "tb": 1064, "tc": 1064, "tm": 1064, "vc": 1064, "xe": 1064, "yb": 1064, "zn": 1064, "zr": [1064, 1197], "custompotentialsect": [1066, 1135, 1300], "customconfigurationvalu": [1066, 1067, 1175, 1300], "custompotentialsectiondefinit": [1066, 1300], "customsectiontoken": [1066, 1300], "sectionstr": [1066, 1300], "custom_potential_sect": [1067, 1068, 1069, 1070, 1300], "_depends_on": [1067, 1079, 1103, 1113, 1120, 1124, 1138, 1140], "_set_from_atom": [1067, 1079, 1086, 1094, 1103, 1107, 1113, 1116, 1120, 1124, 1138, 1140, 1142, 1180, 1181, 1182, 1184], "_update_atom": [1067, 1079, 1094, 1103, 1107, 1113, 1120, 1124, 1138, 1140, 1142, 1194], "mandatori": [1068, 1078, 1083, 1087, 1091, 1095, 1099, 1104, 1108, 1112, 1117, 1121, 1125, 1129, 1132, 1133, 1138], "obvious": 1068, "let": [1069, 1308], "dotal": 1069, "endofsect": [1069, 1070], "delimiter_pattern": 1070, "potentialdefinit": [1073, 1131, 1144, 1300], "chargesect": [1076, 1078], "potential_sect": [1076, 1077, 1079, 1081, 1082, 1085, 1086, 1089, 1090, 1093, 1094, 1097, 1098, 1101, 1102, 1103, 1106, 1107, 1110, 1111, 1113, 1115, 1116, 1119, 1120, 1123, 1124, 1127, 1128, 1138, 1139, 1140, 1141, 1142, 1300], "potentialsect": [1076, 1077, 1081, 1082, 1085, 1086, 1089, 1090, 1093, 1094, 1097, 1098, 1101, 1102, 1106, 1107, 1110, 1112, 1115, 1116, 1119, 1120, 1123, 1124, 1127, 1128, 1133, 1137, 1138, 1142, 1300], "potentialsectiontrait": [1076, 1077, 1079, 1081, 1082, 1085, 1086, 1089, 1090, 1093, 1094, 1097, 1098, 1101, 1102, 1103, 1106, 1107, 1110, 1111, 1113, 1115, 1116, 1119, 1120, 1123, 1124, 1127, 1128, 1137, 1138, 1139, 1141, 1142, 1300], "chargesectiondefinit": [1076, 1080], "potential_definit": [1076, 1078, 1081, 1083, 1085, 1087, 1089, 1091, 1093, 1095, 1097, 1099, 1101, 1104, 1106, 1108, 1110, 1112, 1115, 1117, 1119, 1121, 1123, 1125, 1127, 1129, 1132, 1133, 1134, 1135, 1136, 1144, 1300, 1308], "potsectiondefinit": [1076, 1078, 1081, 1083, 1085, 1087, 1089, 1091, 1093, 1095, 1097, 1099, 1101, 1104, 1106, 1108, 1110, 1112, 1115, 1117, 1119, 1121, 1123, 1125, 1127, 1129, 1131, 1132, 1135, 1300], "chargessect": [1076, 1078], "repeatedpotentialsect": [1076, 1079, 1101, 1103, 1110, 1113, 1137, 1300], "repeatedconfigurationsect": [1076, 1079, 1101, 1103, 1110, 1113, 1137, 1141, 1175, 1300], "write_io_data": [1079, 1086, 1094, 1098, 1103, 1107, 1113, 1116, 1120, 1124, 1128, 1140, 1142], "writeiodata": [1079, 1086, 1094, 1103, 1107, 1113, 1120, 1124, 1140, 1142, 1144, 1180, 1181, 1184, 1186, 1300], "read_io_data": [1079, 1094, 1103, 1107, 1113, 1120, 1124, 1140, 1142], "readiodata": [1079, 1094, 1103, 1107, 1113, 1120, 1124, 1140, 1142, 1186, 1300], "mechan": [1079, 1094, 1103, 1107, 1113, 1120, 1124, 1140], "testabl": [1079, 1094, 1103, 1107, 1113, 1120, 1124, 1140], "obejct": [1079, 1094, 1103, 1107, 1113, 1120, 1124, 1140], "adapt": [1079, 1094, 1103, 1107, 1113, 1120, 1124, 1140], "prerequisit": [1079, 1103, 1108, 1113, 1120, 1124, 1133, 1140], "chargemomentssect": [1081, 1083], "asearraysect": [1081, 1082, 1089, 1090, 1132, 1137, 1300], "chargemomentssectiondefinit": [1081, 1084], "charge_mo": [1082, 1083, 1084], "array_nam": [1083, 1091, 1132, 1138], "globalsystemparamet": [1085, 1087], "globalsystemparameterdefinit": [1085, 1088], "global_system_paramet": [1086, 1087, 1088, 1309], "hostmadelungpotentialsect": [1089, 1091], "hostmadelungpotentialsectiondefinit": [1089, 1092], "host_madelung_potenti": [1090, 1091, 1092], "host": [1091, 1301], "madelung": [1091, 1301], "latticesect": [1093, 1095], "latticesectiondefinit": [1093, 1096], "meshinformationsect": [1097, 1099], "uniquelistsect": [1097, 1098, 1115, 1116, 1127, 1128, 1137, 1300], "meshinformationsectiondefinit": [1097, 1100], "mesh_inform": [1098, 1099, 1100], "_value_nam": [1098, 1116, 1128, 1142], "_value_class": [1098, 1116, 1128, 1142], "exponentialmesh": [1098, 1199, 1207, 1300], "momentsect": [1101, 1104], "momentssect": [1101, 1104], "momentssectiondefinit": [1101, 1105], "occupationsect": [1106, 1108], "occupationsectiondefinit": [1106, 1109], "depends_on": [1108, 1132, 1133], "potentialsectiondefinit": [1110, 1114], "potentialssect": [1110, 1112], "referencesystemsect": [1115, 1117], "referencesystemsectiondefinit": [1115, 1118], "reference_system": [1116, 1117, 1118, 1189, 1204, 1206, 1207, 1300], "referencesystem": [1116, 1203, 1207, 1300], "FOR": 1117, "tight": 1117, "scfinfosect": [1119, 1121], "scfinfosectiondefinit": [1119, 1122], "scf_info": [1120, 1121, 1122], "sitessect": [1123, 1125], "sitessectiondefinit": [1123, 1126], "typessect": [1127, 1129], "typessectiondefinit": [1127, 1130], "asearraysectiondefinit": [1131, 1300], "potvaluedefinit": [1131, 1133, 1300], "setarrai": 1132, "accordingli": [1138, 1142, 1308, 1309], "trait": 1140, "self_value_class": 1142, "from_tupl": 1142, "being": 1144, "make_complet": 1144, "update_atom": [1144, 1188, 1194, 1207], "frozen": [1144, 1180], "from_str": 1144, "test2dpotenti": 1155, "test_2d": [1156, 1160, 1236, 1300], "testcustomsect": 1157, "test_custom_sect": [1158, 1300], "assertnon": 1158, "testpotenti": 1159, "test_potenti": [1160, 1241, 1300], "test_grammar": 1160, "test_potential_data": 1160, "test_exampl": 1160, "test_sequ": 1160, "test_reset": 1160, "teststructur": 1161, "test_structur": [1162, 1300], "test_lattic": 1162, "atomic_typ": [1165, 1194, 1206, 1207, 1300], "n_core": 1165, "n_valenc": 1165, "n_semicor": 1165, "n_electron": 1165, "pseudoel": 1165, "attempt": 1165, "parti": 1165, "semicor": [1165, 1209], "_mendeleev_modul": 1165, "mendeleev": 1165, "_check_n_electron": 1165, "_clear_symbol_cach": 1165, "to_tupl": [1165, 1194, 1200, 1204], "to_atomic_typ": 1165, "is_vacuum": [1165, 1206, 1207], "atomsregion": [1166, 1300], "atoms_region": [1167, 1300], "inherit_cel": [1167, 1170], "__": 1167, "___________________": 1167, "spatial": [1167, 1207, 1209], "peridod": 1167, "_clear_cach": 1167, "set_atom": 1167, "create_atom": 1167, "shared_ids_with": 1167, "set_of_id": 1167, "only_vacuum_atom": 1167, "hkl": 1169, "hkl2": 1169, "pseudo": 1169, "outer": 1169, "complement": 1169, "filenametempl": [1172, 1174, 1300], "understood": 1172, "olymp": 1172, "cup": 1172, "muenchen": 1172, "php": 1172, "com_cont": 1172, "articl": 1172, "3asprkkr": 1172, "catid": 1172, "3asoftwar": 1172, "itemid": 1172, "lang": 1172, "en": [1172, 1308], "rememb": 1173, "easier": 1174, "dto": 1174, "mostli": [1174, 1308], "save_input": [1174, 1301, 1309], "slash": [1174, 1309], "hostnam": [1174, 1309], "add_empty_spher": [1174, 1300], "skrkkr_executable_postfix": 1174, "environment": [1174, 1309], "pathnam": 1174, "meth": [1174, 1309], "tak": 1174, "inputpamat": 1174, "bewar": 1174, "option_nam": 1174, "ambigu": 1174, "explicitli": 1174, "_advance_count": 1174, "advanc": [1174, 1309], "_open_fil": 1174, "allow_temporari": 1174, "create_subdir": 1174, "unchang": 1174, "filema": 1174, "return_fil": 1174, "later": [1174, 1188, 1309], "calcualtor": 1174, "input_filenam": 1174, "output_filenam": 1174, "executable_postifx": 1174, "contructor": 1174, "value_or_default": 1174, "system_chang": 1174, "initial_charg": 1174, "wiki": 1174, "fysik": 1174, "dtu": 1174, "dk": 1174, "insert": 1174, "shown": 1174, "kkrspec": 1174, "kkrch": 1174, "run_xband": 1174, "copy_with_potenti": 1174, "potential_object": 1174, "customconfigurationsect": [1175, 1300], "node": [1177, 1308], "non_underscor": 1180, "reli": 1182, "underli": [1182, 1194], "baseiodata": [1186, 1188, 1189, 1300], "iodata": 1186, "serv": 1186, "storag": 1186, "apply_on_atom": 1188, "handler": 1188, "replai": 1188, "while": [1189, 1209, 1308, 1309], "demand": 1189, "has_converged_data": 1189, "qel": 1192, "nos": 1192, "smt": 1192, "omt": 1192, "hff": 1192, "as_tupl": 1192, "alloi": 1194, "_find_kei": 1194, "identif": 1194, "orderd": 1194, "replace_typ": 1194, "primary_atomic_typ": 1194, "largest": 1194, "primary_atomic_numb": [1194, 1206, 1207], "primary_symbol": [1194, 1206, 1207], "_normal": 1194, "except_from": 1194, "remaind": 1194, "among": [1194, 1209], "total_occup": 1194, "to_occup": 1194, "radialcharg": [1195, 1300], "radialvalu": [1195, 1196, 1197, 1300], "radialpotenti": [1195, 1300], "radial": [1196, 1197, 1198, 1199, 1200, 1201, 1207, 1300], "from_munchen": 1197, "from_julich": 1197, "vt": 1197, "munchen": 1197, "julich": 1197, "down": 1197, "_clear": [1197, 1200], "for_mesh": 1198, "coor": [1198, 1200, 1201], "raw_valu": 1198, "radial_mesh": [1200, 1201, 1202, 1300], "r1": [1200, 1237], "dx": 1200, "jrmt": 1200, "jrw": [1200, 1237], "r_n": 1200, "r_": 1200, "interpolator_for_coor": 1201, "vref": 1204, "rmtref": 1204, "sitetyp": [1205, 1206, 1300, 1301], "site_typ": [1206, 1301], "copy_sit": 1206, "has_symmetri": [1206, 1207, 1301], "break_symmetri": [1206, 1207, 1301], "exit": 1206, "_clear_data": [1206, 1207], "unregist": 1207, "captur": 1207, "occpanc": 1207, "atomictypeslookup": 1207, "sites_array_nam": 1209, "sprkkr_sites_data": 1209, "promote_ase_atom": [1209, 1308, 1309], "ugli": 1209, "__class__": 1209, "promot": [1209, 1309], "_init": 1209, "add_region": 1209, "remove_region": 1209, "set_region": 1209, "compute_sites_symmetri": [1209, 1309], "symmetry_precis": 1209, "_site": 1209, "firstli": 1209, "nearli": 1209, "get_spacegroup": 1209, "_init_sit": 1209, "metod": 1209, "distinguish": 1209, "infom": 1209, "cancel_sites_symmetri": 1209, "cancel": 1209, "uniq": 1209, "made": [1209, 1309], "reflect": [1209, 1309], "are_sites_init": 1209, "set_sit": 1209, "spacegroup_info": 1209, "spacegoup_info": 1209, "sg_info": 1209, "has_potenti": 1209, "reset_sprkkr_potenti": 1209, "sprkkr_grammar_typ": [1211, 1212, 1300], "atomdata": [1213, 1300], "layerdata": [1213, 1300], "a2s_visualise_in_struct": [1213, 1301, 1309], "structure_file_to_atom": [1213, 1300], "in_structur": [1213, 1214, 1217, 1309], "implementaion": 1213, "from_text": 1214, "get_symbol": 1214, "n_bulk": 1217, "vacuum_height": 1217, "repetit": 1217, "height": 1217, "thy": 1218, "legaci": 1218, "caution": 1218, "thoroughli": 1219, "nor": [1219, 1309], "guarant": 1219, "testcalcul": [1231, 1235], "test_arp": [1232, 1300], "test_run": [1232, 1236], "test_calcul": [1236, 1237, 1300], "test_phagen": 1236, "2e": 1237, "06": 1237, "test_occup": [1239, 1241, 1243, 1300], "testsit": 1240, "test_sit": [1241, 1300], "test_ad": 1241, "test_vacuum": 1241, "testsprkkratom": 1242, "test_sprkkr_atom": [1243, 1300], "test_extend": 1243, "test_atom": 1243, "test_symmetri": 1243, "testsysfil": 1244, "test_sysfil": [1245, 1300], "subdir": 1247, "testsargact": 1253, "argpars": [1253, 1254], "sctipt": [1253, 1259, 1262, 1265], "in_struct": [1253, 1259, 1262, 1265], "option_str": 1254, "dest": 1254, "narg": 1254, "const": 1254, "metavar": 1254, "show_structur": [1266, 1267, 1300], "test_tool": [1284, 1300], "multiplot": [1287, 1300], "updown_layout": 1288, "plot_info": 1288, "finish": 1288, "never": [1288, 1299], "rng": 1289, "xrang": 1291, "yrang": 1291, "colormap": 1291, "show_zero_lin": 1291, "vmin": 1291, "vmax": 1291, "xlabel": [1291, 1298], "xticklabel": [1291, 1298], "yticklabel": [1291, 1298], "xtick": [1291, 1298], "ytick": [1291, 1298], "pcolormesh": 1291, "cmap1": [1292, 1293], "cmap2": [1292, 1293], "index1": 1292, "index2": 1292, "range1": 1293, "range2": 1293, "8000": 1293, "15000": 1293, "linearsegmentedcolormap": 1293, "draw": 1297, "matplolib": 1297, "drawn": 1297, "fn": 1299, "empty_spheres_atom": 1300, "possibly_equivalent_sit": 1300, "calculator_paramet": 1300, "floatjm": 1300, "semiinfinite_system": 1300, "vacuum_lik": 1300, "_clearing_properti": 1300, "sysfile_cont": 1300, "write_sysfil": 1300, "unique_map": 1300, "international_numbers_to_ap": 1300, "winger_seitz_radii": 1300, "check_symmetri": 1300, "read_sprkkr": 1300, "write_sprkkr": 1300, "filename_from_symbol": 1300, "pretty_symbol": 1300, "aperiodic_tim": 1300, "ase_regist": 1300, "load_user_prefer": 1300, "user_preferences_fil": 1300, "add_bs_pb": 1300, "bs_pbe": 1300, "bs_pbe_html": 1300, "plot_with_color": 1300, "plot_phas": 1300, "get_kpts_siz": 1300, "get_calcul": 1300, "_permutecontain": 1300, "append_refer": 1300, "calculate_intermedi": 1300, "chcut_plot": 1300, "convex_hull_plan": 1300, "filref": 1300, "get_coord": 1300, "get_hof": 1300, "gscheck": 1300, "is_collinear": 1300, "is_independ": 1300, "mgsl": 1300, "mu_adjust": 1300, "orthogon": 1300, "projuv": 1300, "read_structur": 1300, "refs2im": 1300, "results2ref": 1300, "row2ref": 1300, "tuplespermut": 1300, "chcerror": 1300, "convex_hull_t": 1300, "get_reference_energi": 1300, "hof": 1300, "select_refer": 1300, "clonetre": 1300, "check_and_get_general_input": 1300, "collect_data": 1300, "find_file_in_fold": 1300, "line_intersect": 1300, "plot_formation_and_transit": 1300, "get_dimtyp": 1300, "plot_dimensionality_histogram": 1300, "calculate_bs_along_emass_vec": 1300, "check_soc": 1300, "convert_key_to_tupl": 1300, "create_columns_fnam": 1300, "custom_t": 1300, "emband": 1300, "evalmodel": 1300, "get_2nd_order_extremum": 1300, "get_3rd_order_extremum": 1300, "get_bt_k": 1300, "get_emass_dict_from_row": 1300, "get_extremum_typ": 1300, "get_gapskn": 1300, "get_nam": 1300, "get_rang": 1300, "get_vb_cb_indic": 1300, "kptsinspher": 1300, "make_the_plot": 1300, "model": 1300, "nonsc_spher": 1300, "preliminary_refin": 1300, "set_default": 1300, "unpack_mass": 1300, "widema": 1300, "nogaperror": 1300, "get_paramet": 1300, "create_corrected_db": 1300, "elements_from_ref": 1300, "formulas_eq": 1300, "get_de_alpha": 1300, "load_data": 1300, "minimize_error": 1300, "multiply_formula": 1300, "parse_react": 1300, "parse_ref": 1300, "safe_get": 1300, "dbalreadyexistserror": 1300, "materialnotfounderror": 1300, "parseerror": 1300, "add_fermi": 1300, "bz_vertic": 1300, "find_contour": 1300, "plot_fermi": 1300, "distance_to_non_pbc_boundari": 1300, "get_atomic_polarization_phas": 1300, "get_dipole_polarization_phas": 1300, "get_electronic_polarization_phas": 1300, "get_wavefunct": 1300, "atomstooclosetoboundari": 1300, "bz_with_band_extremum": 1300, "get_1bz_k": 1300, "get_gap_info": 1300, "bs_gw": 1300, "mp_interpol": 1300, "bs_hse": 1300, "hse_spinorbit": 1300, "create_plot": 1300, "get_phonon_pol": 1300, "get_spin_axi": 1300, "get_spin_index": 1300, "get_magst": 1300, "calculate_pdo": 1300, "get_l_a": 1300, "get_ordered_syl_dict": 1300, "get_yl_color": 1300, "plot_pdo": 1300, "plot_pdos_nosoc": 1300, "plot_pdos_soc": 1300, "mingocorrect": 1300, "plot_bandstructur": 1300, "plot_phonon": 1300, "topckl": 1300, "distance_to_sc": 1300, "lattice_vector": 1300, "get_bs_sampl": 1300, "get_pie_mark": 1300, "get_yl_ord": 1300, "projected_bs_pb": 1300, "push": 1300, "count_deg": 1300, "is_relax_don": 1300, "set_initial_magnetic_mo": 1300, "brokensymmetryerror": 1300, "check_key_valu": 1300, "scanparam": 1300, "get_reduced_formula": 1300, "test_bs": 1300, "test_convex_hul": 1300, "test_gw": 1300, "test_hs": 1300, "test_phonon": 1300, "test_phonopi": 1300, "test_plasmafrequ": 1300, "test_polariz": 1300, "test_raman": 1300, "test_setup_symmetr": 1300, "workflow": 1300, "auto_rang": 1300, "change_default_kwarg": 1300, "colormesh": 1300, "combine_colormap": 1300, "combined_colormap": 1300, "create_rc_context": 1300, "finish_plot": 1300, "normalize_rc_param": 1300, "plotting_funct": 1300, "set_up_common_plot": 1300, "single_plot": 1300, "create_output_file_definit": 1300, "output_file_head": 1300, "normalize_type_map": 1300, "disabledattributeerror": 1300, "std_cached_properti": 1300, "add_called_class_as_argu": 1300, "add_to_signatur": 1300, "warnings_from_her": 1300, "format_for_str": 1300, "fortran_format": 1300, "full_format_for_str": 1300, "_call_funct": 1300, "ignore_sign": 1300, "in_subprocess": 1300, "append_id_to_filenam": 1300, "parse_inch": 1300, "parse_named_opt": 1300, "parse_tuple_funct": 1300, "datavaliditywarn": 1300, "arr_testfc": 1300, "assertdictequ": 1300, "assertlistequ": 1300, "assert_equ": 1300, "patch_packag": 1300, "testfc": 1300, "as_integ": 1300, "copy_list": 1300, "dict_first_item": 1300, "first_non_non": 1300, "njit": 1300, "numpy_index": 1300, "process_input_parameters_definit": 1300, "verbatim": 1300, "optional_line_end": 1300, "line_end": 1300, "end_of_fil": 1300, "optional_quot": 1300, "addconditionex": 1300, "addparseactionex": 1300, "delimitedlist": 1300, "generate_grammar": 1300, "replace_whitechar": 1300, "separator_grammar": 1300, "separator_pattern": 1300, "add_excluded_names_condit": 1300, "dict_from_pars": 1300, "type_from_set_map": 1300, "recognized_set_typ": 1300, "fixi": 1301, "now": 1301, "upnorm": 1301, "vacum": 1301, "uniform": 1301, "a2s_": 1301, "introduc": 1301, "linint": 1301, "emit": 1301, "backend": 1301, "meson": 1301, "cython": 1301, "unittest": 1301, "drop": 1301, "set_valu": 1301, "a2s_plot_output": 1301, "executable_postfix": 1301, "renam": 1301, "repeatedli": 1301, "hope": 1301, "small": 1301, "minor": 1301, "grammmartyp": 1301, "repcipi": 1301, "subpackag": [1301, 1308], "sy": 1301, "hastili": [1301, 1305], "slide": [1301, 1305], "bracket": 1301, "abus": 1301, "basesometh": 1301, "descirpt": 1301, "mdir1": 1301, "mdir2": 1301, "bundl": 1305, "report": 1305, "pip": [1305, 1309], "conda": [1305, 1309], "bug": 1305, "philosophi": 1305, "changelog": 1305, "refactor": 1305, "architectur": 1305, "leav": 1308, "Their": 1308, "relationship": 1308, "prescrib": 1308, "oop": 1308, "ancestor": 1308, "sprkrr": 1308, "readthedoc": 1308, "latest": 1308, "input_prameters_definit": 1308, "outputread": 1308, "sh": 1309, "encourag": 1309, "somewher": 1309, "bash": 1309, "kkrscf8": 1309, "rc": 1309, "topic": 1309, "primarili": 1309, "experienc": 1309, "bellow": 1309, "sprkkr_command_suffix": 1309, "licl": 1309, "rocksalt": 1309, "indistinguish": 1309, "interoper": 1309, "receiv": 1309, "avoid": 1309, "conflict": 1309, "interact": 1309, "input_paramt": 1309, "uppercas": 1309, "my_custom_sect": 1309, "my_custom_valu": 1309, "necess": 1309, "usecas": 1309, "subseuent": 1309, "an_input_fil": 1309, "a_potential_fil": 1309, "cours": 1309, "my_potential_fil": 1309, "irel": 1309, "accep": 1309, "interperet": 1309, "cf4": 1309, "therefor": 1309, "logic": 1309, "behind": 1309, "scene": 1309, "latter": 1309, "thereaft": 1309, "batch": 1309, "detect": 1309, "mpirunn": 1309, "openmpi": 1309, "mpich": 1309, "subdirectori": 1309, "visualise_in_struct": 1309, "highli": 1309, "appreci": 1309}, "objects": {"": [[1, 0, 0, "-", "ase2sprkkr"]], "ase2sprkkr": [[2, 0, 0, "-", "ase"], [33, 0, 0, "-", "asr"], [658, 0, 0, "-", "bindings"], [702, 0, 0, "-", "common"], [901, 0, 0, "-", "config"], [904, 0, 0, "-", "examples"], [929, 0, 0, "-", "input_parameters"], [980, 0, 0, "-", "output_files"], [1023, 0, 0, "-", "outputs"], [1058, 0, 0, "-", "physics"], [1065, 0, 0, "-", "potentials"], [1163, 0, 0, "-", "sprkkr"], [1246, 0, 0, "-", "tools"], [1285, 0, 0, "-", "version"], [1286, 0, 0, "-", "visualise"]], "ase2sprkkr.ase": [[3, 0, 0, "-", "build"], [6, 0, 0, "-", "io"], [9, 0, 0, "-", "pbc"], [11, 0, 0, "-", "register"], [16, 0, 0, "-", "symbols"], [19, 0, 0, "-", "test"], [31, 0, 0, "-", "visualise"]], "ase2sprkkr.ase.build": [[4, 1, 1, "", "aperiodic_times"], [5, 1, 1, "", "stack"]], "ase2sprkkr.ase.io": [[7, 1, 1, "", "read_sprkkr"], [8, 1, 1, "", "write_sprkkr"]], "ase2sprkkr.ase.pbc": [[10, 1, 1, "", "check_symmetry"]], "ase2sprkkr.ase.register": [[12, 1, 1, "", "ase_register"], [13, 1, 1, "", "load_user_preferences"], [14, 1, 1, "", "register"], [15, 1, 1, "", "user_preferences_file"]], "ase2sprkkr.ase.symbols": [[17, 1, 1, "", "filename_from_symbols"], [18, 1, 1, "", "pretty_symbols"]], "ase2sprkkr.ase.test": [[20, 0, 0, "-", "init_tests"], [29, 0, 0, "-", "test_build"]], "ase2sprkkr.ase.test.init_tests": [[21, 2, 1, "", "TestCase"], [22, 1, 1, "", "arr_testfce"], [23, 1, 1, "", "assertDictEqual"], [24, 1, 1, "", "assertListEqual"], [25, 1, 1, "", "assert_almost_equals"], [26, 1, 1, "", "assert_equals"], [27, 2, 1, "", "extdict"], [28, 1, 1, "", "testfce"]], "ase2sprkkr.ase.test.init_tests.TestCase": [[21, 3, 1, "", "__init__"], [21, 4, 1, "", "_calc_args"], [21, 4, 1, "", "_print_output"], [21, 3, 1, "", "almost_equal_precision"], [21, 3, 1, "", "assertAlmostEqual"], [21, 3, 1, "", "assertAsyncEqual"], [21, 3, 1, "", "assertAsyncRaises"], [21, 3, 1, "", "assertEqual"], [21, 3, 1, "", "assertFalse"], [21, 3, 1, "", "assertIsNone"], [21, 3, 1, "", "assertNotEqual"], [21, 3, 1, "", "assertRaises"], [21, 3, 1, "", "assertTrue"], [21, 3, 1, "", "calc_args"], [21, 3, 1, "", "runAsync"], [21, 3, 1, "", "run_sprkkr"], [21, 3, 1, "", "temporary_dir"]], "ase2sprkkr.ase.test.init_tests.extdict": [[27, 3, 1, "", "__init__"]], "ase2sprkkr.ase.test.test_build": [[30, 2, 1, "", "TestBuild"]], "ase2sprkkr.ase.test.test_build.TestBuild": [[30, 3, 1, "", "__init__"], [30, 3, 1, "", "test"], [30, 3, 1, "", "test_stack"]], "ase2sprkkr.ase.visualise": [[32, 1, 1, "", "view"]], "ase2sprkkr.asr": [[34, 0, 0, "-", "asr"], [35, 0, 0, "-", "bader"], [37, 0, 0, "-", "bandstructure"], [44, 0, 0, "-", "berry"], [48, 0, 0, "-", "borncharges"], [51, 0, 0, "-", "bse"], [56, 0, 0, "-", "calculators"], [58, 0, 0, "-", "chc"], [90, 0, 0, "-", "convex_hull"], [98, 0, 0, "-", "core"], [165, 0, 0, "-", "database"], [201, 0, 0, "-", "defectformation"], [209, 0, 0, "-", "deformationpotentials"], [212, 0, 0, "-", "dimensionality"], [216, 0, 0, "-", "dos"], [220, 0, 0, "-", "emasses"], [250, 0, 0, "-", "exchange"], [252, 0, 0, "-", "fere"], [273, 0, 0, "-", "fermisurface"], [280, 0, 0, "-", "formalpolarization"], [287, 0, 0, "-", "gs"], [298, 0, 0, "-", "gw"], [303, 0, 0, "-", "hse"], [311, 0, 0, "-", "infraredpolarizability"], [316, 0, 0, "-", "magnetic_anisotropy"], [322, 0, 0, "-", "magstate"], [326, 0, 0, "-", "pdos"], [337, 0, 0, "-", "phonons"], [347, 0, 0, "-", "phonopy"], [355, 0, 0, "-", "piezoelectrictensor"], [358, 0, 0, "-", "plasmafrequency"], [362, 0, 0, "-", "polarizability"], [367, 0, 0, "-", "projected_bandstructure"], [376, 0, 0, "-", "push"], [377, 0, 0, "-", "raman"], [382, 0, 0, "-", "relax"], [390, 0, 0, "-", "setinfo"], [393, 0, 0, "-", "setup"], [419, 0, 0, "-", "stiffness"], [422, 0, 0, "-", "structureinfo"], [426, 0, 0, "-", "test"], [625, 0, 0, "-", "utils"], [657, 0, 0, "-", "workflow"]], "ase2sprkkr.asr.bader": [[36, 1, 1, "", "print"]], "ase2sprkkr.asr.bandstructure": [[38, 2, 1, "", "Result"], [39, 1, 1, "", "add_bs_pbe"], [40, 1, 1, "", "bs_pbe"], [41, 1, 1, "", "bs_pbe_html"], [42, 1, 1, "", "plot_with_colors"], [43, 1, 1, "", "webpanel"]], "ase2sprkkr.asr.bandstructure.Result": [[38, 3, 1, "", "__init__"], [38, 4, 1, "", "_known_data_keys"], [38, 5, 1, "", "bs_nosoc"], [38, 5, 1, "", "bs_soc"], [38, 4, 1, "", "formats"], [38, 4, 1, "", "key_descriptions"], [38, 4, 1, "", "strict"], [38, 4, 1, "", "version"]], "ase2sprkkr.asr.berry": [[45, 2, 1, "", "Result"], [46, 1, 1, "", "plot_phases"], [47, 1, 1, "", "webpanel"]], "ase2sprkkr.asr.berry.Result": [[45, 5, 1, "", "Topology"], [45, 3, 1, "", "__init__"], [45, 4, 1, "", "_known_data_keys"], [45, 4, 1, "", "formats"], [45, 4, 1, "", "key_descriptions"], [45, 4, 1, "", "strict"]], "ase2sprkkr.asr.borncharges": [[49, 2, 1, "", "Result"], [50, 1, 1, "", "webpanel"]], "ase2sprkkr.asr.borncharges.Result": [[49, 5, 1, "", "Z_avv"], [49, 3, 1, "", "__init__"], [49, 4, 1, "", "_known_data_keys"], [49, 4, 1, "", "formats"], [49, 4, 1, "", "key_descriptions"], [49, 4, 1, "", "strict"], [49, 5, 1, "", "sym_a"]], "ase2sprkkr.asr.bse": [[52, 2, 1, "", "Result"], [53, 1, 1, "", "absorption"], [54, 1, 1, "", "get_kpts_size"], [55, 1, 1, "", "webpanel"]], "ase2sprkkr.asr.bse.Result": [[52, 5, 1, "", "E_B"], [52, 3, 1, "", "__init__"], [52, 4, 1, "", "_known_data_keys"], [52, 5, 1, "", "bse_alphax_w"], [52, 5, 1, "", "bse_alphay_w"], [52, 5, 1, "", "bse_alphaz_w"], [52, 4, 1, "", "formats"], [52, 4, 1, "", "key_descriptions"], [52, 4, 1, "", "strict"]], "ase2sprkkr.asr.calculators": [[57, 1, 1, "", "get_calculator"]], "ase2sprkkr.asr.chc": [[59, 6, 1, "", "CHCError"], [60, 2, 1, "", "ConvexHullReference"], [61, 2, 1, "", "Hyperplane"], [62, 2, 1, "", "Intermediate"], [63, 2, 1, "", "LeanIntermediate"], [64, 2, 1, "", "Line"], [65, 2, 1, "", "Reference"], [66, 2, 1, "", "Result"], [67, 1, 1, "", "_permutecontain"], [68, 1, 1, "", "append_references"], [69, 1, 1, "", "calculate_intermediates"], [70, 1, 1, "", "chcut_plot"], [71, 1, 1, "", "convex_hull"], [72, 1, 1, "", "convex_hull_planes"], [73, 1, 1, "", "filrefs"], [74, 1, 1, "", "get_coords"], [75, 1, 1, "", "get_hof"], [76, 1, 1, "", "gscheck"], [77, 1, 1, "", "is_collinear"], [78, 1, 1, "", "is_independent"], [79, 1, 1, "", "mgs"], [80, 1, 1, "", "mgsls"], [81, 1, 1, "", "mu_adjustment"], [82, 1, 1, "", "orthogonalize"], [83, 1, 1, "", "projuv"], [84, 1, 1, "", "read_structure"], [85, 1, 1, "", "refs2ims"], [86, 1, 1, "", "results2ref"], [87, 1, 1, "", "row2ref"], [88, 1, 1, "", "tuplespermuted"], [89, 1, 1, "", "webpanel"]], "ase2sprkkr.asr.chc.ConvexHullReference": [[60, 3, 1, "", "__init__"], [60, 3, 1, "", "_construct_coordinates"], [60, 3, 1, "", "from_reference"], [60, 3, 1, "", "is_single"]], "ase2sprkkr.asr.chc.Hyperplane": [[61, 3, 1, "", "__init__"], [61, 3, 1, "", "contains"], [61, 3, 1, "", "find_ts"]], "ase2sprkkr.asr.chc.Intermediate": [[62, 3, 1, "", "__init__"], [62, 3, 1, "", "_get_hform_data"], [62, 3, 1, "", "from_dict"], [62, 5, 1, "", "label"], [62, 5, 1, "", "reactant_content"], [62, 3, 1, "", "to_dict"], [62, 3, 1, "", "to_result"]], "ase2sprkkr.asr.chc.LeanIntermediate": [[63, 3, 1, "", "__init__"], [63, 3, 1, "", "from_dict"], [63, 3, 1, "", "to_dict"], [63, 3, 1, "", "to_result"]], "ase2sprkkr.asr.chc.Line": [[64, 3, 1, "", "__init__"], [64, 3, 1, "", "find_s"], [64, 3, 1, "", "intersects"]], "ase2sprkkr.asr.chc.Reference": [[65, 3, 1, "", "__init__"], [65, 3, 1, "", "from_dict"], [65, 5, 1, "", "natoms"], [65, 3, 1, "", "to_dict"], [65, 3, 1, "", "to_elements"]], "ase2sprkkr.asr.chc.Result": [[66, 3, 1, "", "__init__"], [66, 4, 1, "", "_known_data_keys"], [66, 4, 1, "", "formats"], [66, 4, 1, "", "strict"]], "ase2sprkkr.asr.convex_hull": [[91, 2, 1, "", "Result"], [92, 1, 1, "", "convex_hull_tables"], [93, 1, 1, "", "get_reference_energies"], [94, 1, 1, "", "hof"], [95, 1, 1, "", "plot"], [96, 1, 1, "", "select_references"], [97, 1, 1, "", "webpanel"]], "ase2sprkkr.asr.convex_hull.Result": [[91, 3, 1, "", "__init__"], [91, 4, 1, "", "_known_data_keys"], [91, 5, 1, "", "coefs"], [91, 5, 1, "", "ehull"], [91, 4, 1, "", "formats"], [91, 5, 1, "", "hform"], [91, 5, 1, "", "indices"], [91, 4, 1, "", "key_descriptions"], [91, 5, 1, "", "references"], [91, 4, 1, "", "strict"], [91, 5, 1, "", "thermodynamic_stability_level"]], "ase2sprkkr.asr.core": [[99, 0, 0, "-", "cli"], [109, 0, 0, "-", "command"], [110, 0, 0, "-", "fix_old_files"], [112, 0, 0, "-", "material"], [117, 0, 0, "-", "results"], [145, 0, 0, "-", "types"], [149, 0, 0, "-", "utils"]], "ase2sprkkr.asr.core.cli": [[100, 1, 1, "", "append_job"], [101, 1, 1, "", "check_git"], [102, 1, 1, "", "extract_hash_from_file"], [103, 1, 1, "", "format"], [104, 1, 1, "", "get_config_dir"], [105, 1, 1, "", "get_git_rev_list"], [106, 1, 1, "", "initialize_asr_configuration_dir"], [107, 1, 1, "", "is_asr_initialized"], [108, 1, 1, "", "run_command"]], "ase2sprkkr.asr.core.fix_old_files": [[111, 1, 1, "", "is_results_file"]], "ase2sprkkr.asr.core.material": [[113, 2, 1, "", "Material"], [114, 1, 1, "", "get_material_from_folder"], [115, 1, 1, "", "get_webpanels_from_material"], [116, 1, 1, "", "make_panel_figures"]], "ase2sprkkr.asr.core.material.Material": [[113, 3, 1, "", "__init__"], [113, 3, 1, "", "get"], [113, 3, 1, "", "toatoms"]], "ase2sprkkr.asr.core.results": [[118, 2, 1, "", "ASRResult"], [119, 2, 1, "", "DictEncoder"], [120, 2, 1, "", "HTMLEncoder"], [121, 2, 1, "", "HackedASRResult"], [122, 2, 1, "", "JSONEncoder"], [123, 2, 1, "", "MetaData"], [124, 6, 1, "", "MetaDataNotSetError"], [125, 2, 1, "", "ObjectDescription"], [126, 2, 1, "", "ResultEncoder"], [127, 6, 1, "", "UnknownASRResultFormat"], [128, 6, 1, "", "UnknownDataFormat"], [129, 2, 1, "", "WebPanelEncoder"], [130, 1, 1, "", "data_to_dict"], [131, 1, 1, "", "dct_to_result"], [132, 1, 1, "", "find_class_matching_version"], [133, 1, 1, "", "format_key_description_pair"], [134, 1, 1, "", "get_key_descriptions"], [135, 1, 1, "", "get_object_matching_obj_id"], [136, 1, 1, "", "get_object_types"], [137, 1, 1, "", "get_reader_function"], [138, 1, 1, "", "make_property"], [139, 1, 1, "", "obj_to_id"], [140, 1, 1, "", "object_description_to_object"], [141, 1, 1, "", "prepare_result"], [142, 1, 1, "", "read_hacked_data"], [143, 1, 1, "", "read_new_data"], [144, 1, 1, "", "read_old_data"]], "ase2sprkkr.asr.core.results.ASRResult": [[118, 3, 1, "", "__init__"], [118, 5, 1, "", "data"], [118, 3, 1, "", "format_as"], [118, 4, 1, "", "formats"], [118, 3, 1, "", "from_format"], [118, 3, 1, "", "fromdata"], [118, 3, 1, "", "fromdict"], [118, 3, 1, "", "get"], [118, 3, 1, "", "get_formats"], [118, 3, 1, "", "get_obj_id"], [118, 3, 1, "", "get_object_desc"], [118, 3, 1, "", "items"], [118, 4, 1, "", "key_descriptions"], [118, 3, 1, "", "keys"], [118, 5, 1, "", "metadata"], [118, 4, 1, "", "prev_version"], [118, 4, 1, "", "strict"], [118, 3, 1, "", "todict"], [118, 3, 1, "", "values"], [118, 4, 1, "", "version"]], "ase2sprkkr.asr.core.results.DictEncoder": [[119, 3, 1, "", "__init__"], [119, 4, 1, "", "_abc_impl"], [119, 3, 1, "", "decode"], [119, 3, 1, "", "encode"]], "ase2sprkkr.asr.core.results.HTMLEncoder": [[120, 3, 1, "", "__init__"], [120, 4, 1, "", "_abc_impl"], [120, 3, 1, "", "encode"]], "ase2sprkkr.asr.core.results.HackedASRResult": [[121, 3, 1, "", "__init__"]], "ase2sprkkr.asr.core.results.JSONEncoder": [[122, 3, 1, "", "__init__"], [122, 4, 1, "", "_abc_impl"], [122, 3, 1, "", "decode"], [122, 3, 1, "", "encode"]], "ase2sprkkr.asr.core.results.MetaData": [[123, 3, 1, "", "__init__"], [123, 3, 1, "", "_get"], [123, 3, 1, "", "_set"], [123, 4, 1, "", "accepted_keys"], [123, 5, 1, "", "asr_name"], [123, 5, 1, "", "code_versions"], [123, 5, 1, "", "creates"], [123, 5, 1, "", "params"], [123, 5, 1, "", "requires"], [123, 5, 1, "", "resources"], [123, 3, 1, "", "set"], [123, 3, 1, "", "todict"], [123, 3, 1, "", "validate"]], "ase2sprkkr.asr.core.results.ObjectDescription": [[125, 3, 1, "", "__init__"], [125, 5, 1, "", "args"], [125, 5, 1, "", "constructor"], [125, 3, 1, "", "fromdict"], [125, 3, 1, "", "instantiate"], [125, 5, 1, "", "kwargs"], [125, 5, 1, "", "object_id"], [125, 3, 1, "", "todict"]], "ase2sprkkr.asr.core.results.ResultEncoder": [[126, 3, 1, "", "__init__"], [126, 4, 1, "", "_abc_impl"], [126, 3, 1, "", "decode"], [126, 3, 1, "", "encode"]], "ase2sprkkr.asr.core.results.WebPanelEncoder": [[129, 3, 1, "", "__init__"], [129, 4, 1, "", "_abc_impl"], [129, 3, 1, "", "encode"]], "ase2sprkkr.asr.core.types": [[146, 2, 1, "", "AtomsFile"], [147, 2, 1, "", "DictStr"], [148, 1, 1, "", "clickify_docstring"]], "ase2sprkkr.asr.core.types.AtomsFile": [[146, 3, 1, "", "__init__"], [146, 3, 1, "", "convert"], [146, 4, 1, "", "name"]], "ase2sprkkr.asr.core.types.DictStr": [[147, 3, 1, "", "__init__"], [147, 3, 1, "", "convert"], [147, 4, 1, "", "name"]], "ase2sprkkr.asr.core.utils": [[150, 1, 1, "", "chdir"], [151, 1, 1, "", "dct_to_object"], [152, 1, 1, "", "encode_json"], [153, 1, 1, "", "file_barrier"], [154, 1, 1, "", "get_dep_tree"], [155, 1, 1, "", "get_recipe_from_name"], [156, 1, 1, "", "md5sum"], [157, 1, 1, "", "parse_dict_string"], [158, 1, 1, "", "parse_mod_func"], [159, 1, 1, "", "read_json"], [160, 1, 1, "", "recursive_update"], [161, 1, 1, "", "singleprec_dict"], [162, 1, 1, "", "unlink"], [163, 1, 1, "", "write_file"], [164, 1, 1, "", "write_json"]], "ase2sprkkr.asr.database": [[166, 0, 0, "-", "browser"], [181, 0, 0, "-", "check"], [182, 0, 0, "-", "clonetree"], [183, 0, 0, "-", "duplicates"], [188, 0, 0, "-", "material_fingerprint"], [192, 0, 0, "-", "merge"], [193, 0, 0, "-", "rmsd"], [197, 0, 0, "-", "templates"], [198, 0, 0, "-", "totree"]], "ase2sprkkr.asr.database.browser": [[167, 2, 1, "", "RowWrapper"], [168, 1, 1, "", "create_table"], [169, 1, 1, "", "describe_entries"], [170, 1, 1, "", "describe_entry"], [171, 1, 1, "", "dict_to_list"], [172, 1, 1, "", "entry_parameter_description"], [173, 1, 1, "", "extract_recipe_from_filename"], [174, 1, 1, "", "fig"], [175, 1, 1, "", "is_results_file"], [176, 1, 1, "", "layout"], [177, 1, 1, "", "merge_panels"], [178, 1, 1, "", "miscellaneous_section"], [179, 1, 1, "", "table"], [180, 1, 1, "", "val2str"]], "ase2sprkkr.asr.database.browser.RowWrapper": [[167, 3, 1, "", "__init__"]], "ase2sprkkr.asr.database.duplicates": [[184, 1, 1, "", "compare"], [185, 1, 1, "", "filter_uids"], [186, 1, 1, "", "find_duplicate_group"], [187, 1, 1, "", "parse_filter_string"]], "ase2sprkkr.asr.database.material_fingerprint": [[189, 1, 1, "", "get_hash_of_atoms"], [190, 1, 1, "", "get_uid_of_atoms"], [191, 1, 1, "", "todict"]], "ase2sprkkr.asr.database.rmsd": [[194, 1, 1, "", "get_rmsd"], [195, 1, 1, "", "normalize_nonpbc_atoms"], [196, 1, 1, "", "update_rmsd"]], "ase2sprkkr.asr.database.totree": [[199, 1, 1, "", "make_folder_dict"], [200, 1, 1, "", "make_folder_tree"]], "ase2sprkkr.asr.defectformation": [[202, 1, 1, "", "check_and_get_general_inputs"], [203, 1, 1, "", "collect_data"], [204, 1, 1, "", "find_file_in_folder"], [205, 1, 1, "", "intersection"], [206, 1, 1, "", "line"], [207, 1, 1, "", "line_intersection"], [208, 1, 1, "", "plot_formation_and_transitions"]], "ase2sprkkr.asr.deformationpotentials": [[210, 2, 1, "", "Result"], [211, 1, 1, "", "webpanel"]], "ase2sprkkr.asr.deformationpotentials.Result": [[210, 3, 1, "", "__init__"], [210, 4, 1, "", "_known_data_keys"], [210, 4, 1, "", "formats"], [210, 4, 1, "", "strict"]], "ase2sprkkr.asr.dimensionality": [[213, 1, 1, "", "get_dimtypes"], [214, 1, 1, "", "plot_dimensionality_histogram"], [215, 1, 1, "", "webpanel"]], "ase2sprkkr.asr.dos": [[217, 1, 1, "", "collect_data"], [218, 1, 1, "", "plot"], [219, 1, 1, "", "webpanel"]], "ase2sprkkr.asr.emasses": [[221, 6, 1, "", "NoGapError"], [222, 2, 1, "", "Result"], [223, 1, 1, "", "calculate_bs_along_emass_vecs"], [224, 1, 1, "", "check_soc"], [225, 1, 1, "", "convert_key_to_tuple"], [226, 1, 1, "", "create_columns_fnames"], [227, 1, 1, "", "custom_table"], [228, 1, 1, "", "em"], [229, 1, 1, "", "embands"], [230, 1, 1, "", "evalmodel"], [231, 1, 1, "", "fit"], [232, 1, 1, "", "get_2nd_order_extremum"], [233, 1, 1, "", "get_3rd_order_extremum"], [234, 1, 1, "", "get_bt_ks"], [235, 1, 1, "", "get_emass_dict_from_row"], [236, 1, 1, "", "get_extremum_type"], [237, 1, 1, "", "get_gapskn"], [238, 1, 1, "", "get_name"], [239, 1, 1, "", "get_range"], [240, 1, 1, "", "get_vb_cb_indices"], [241, 1, 1, "", "kptsinsphere"], [242, 1, 1, "", "make_the_plots"], [243, 1, 1, "", "model"], [244, 1, 1, "", "nonsc_sphere"], [245, 1, 1, "", "preliminary_refine"], [246, 1, 1, "", "set_default"], [247, 1, 1, "", "unpack_masses"], [248, 1, 1, "", "webpanel"], [249, 1, 1, "", "wideMAE"]], "ase2sprkkr.asr.emasses.Result": [[222, 3, 1, "", "__init__"], [222, 4, 1, "", "_known_data_keys"], [222, 4, 1, "", "formats"], [222, 4, 1, "", "strict"]], "ase2sprkkr.asr.exchange": [[251, 1, 1, "", "get_parameters"]], "ase2sprkkr.asr.fere": [[253, 6, 1, "", "DBAlreadyExistsError"], [254, 6, 1, "", "MaterialNotFoundError"], [255, 6, 1, "", "ParseError"], [256, 1, 1, "", "count"], [257, 1, 1, "", "create_corrected_db"], [258, 1, 1, "", "elements_from_refs"], [259, 1, 1, "", "formulas_eq"], [260, 1, 1, "", "get_dE_alpha"], [261, 1, 1, "", "get_hof"], [262, 1, 1, "", "load_data"], [263, 1, 1, "", "minimize_error"], [264, 1, 1, "", "multiply_formula"], [265, 1, 1, "", "only"], [266, 1, 1, "", "parse_reactions"], [267, 1, 1, "", "parse_refs"], [268, 1, 1, "", "safe_get"], [269, 1, 1, "", "select"], [270, 1, 1, "", "single"], [271, 1, 1, "", "unique"], [272, 1, 1, "", "where"]], "ase2sprkkr.asr.fermisurface": [[274, 2, 1, "", "Result"], [275, 1, 1, "", "add_fermi"], [276, 1, 1, "", "bz_vertices"], [277, 1, 1, "", "find_contours"], [278, 1, 1, "", "plot_fermi"], [279, 1, 1, "", "webpanel"]], "ase2sprkkr.asr.fermisurface.Result": [[274, 3, 1, "", "__init__"], [274, 4, 1, "", "_known_data_keys"], [274, 4, 1, "", "formats"], [274, 4, 1, "", "strict"]], "ase2sprkkr.asr.formalpolarization": [[281, 6, 1, "", "AtomsTooCloseToBoundary"], [282, 1, 1, "", "distance_to_non_pbc_boundary"], [283, 1, 1, "", "get_atomic_polarization_phase"], [284, 1, 1, "", "get_dipole_polarization_phase"], [285, 1, 1, "", "get_electronic_polarization_phase"], [286, 1, 1, "", "get_wavefunctions"]], "ase2sprkkr.asr.gs": [[288, 2, 1, "", "GapsResult"], [289, 2, 1, "", "Result"], [290, 2, 1, "", "VacuumLevelResults"], [291, 1, 1, "", "bz_with_band_extremums"], [292, 1, 1, "", "evacdiff"], [293, 1, 1, "", "gaps"], [294, 1, 1, "", "get_1bz_k"], [295, 1, 1, "", "get_gap_info"], [296, 1, 1, "", "vacuumlevels"], [297, 1, 1, "", "webpanel"]], "ase2sprkkr.asr.gs.GapsResult": [[288, 3, 1, "", "__init__"], [288, 4, 1, "", "_known_data_keys"], [288, 5, 1, "", "cbm"], [288, 5, 1, "", "cbm_dir"], [288, 5, 1, "", "efermi"], [288, 5, 1, "", "gap"], [288, 5, 1, "", "gap_dir"], [288, 5, 1, "", "k_cbm_c"], [288, 5, 1, "", "k_cbm_dir_c"], [288, 5, 1, "", "k_vbm_c"], [288, 5, 1, "", "k_vbm_dir_c"], [288, 4, 1, "", "key_descriptions"], [288, 5, 1, "", "skn1"], [288, 5, 1, "", "skn1_dir"], [288, 5, 1, "", "skn2"], [288, 5, 1, "", "skn2_dir"], [288, 4, 1, "", "strict"], [288, 5, 1, "", "vbm"], [288, 5, 1, "", "vbm_dir"]], "ase2sprkkr.asr.gs.Result": [[289, 3, 1, "", "__init__"], [289, 4, 1, "", "_known_data_keys"], [289, 5, 1, "", "cbm"], [289, 5, 1, "", "cbm_dir"], [289, 5, 1, "", "dipz"], [289, 5, 1, "", "efermi"], [289, 5, 1, "", "etot"], [289, 5, 1, "", "evac"], [289, 5, 1, "", "evacdiff"], [289, 5, 1, "", "forces"], [289, 4, 1, "", "formats"], [289, 5, 1, "", "gap"], [289, 5, 1, "", "gap_dir"], [289, 5, 1, "", "gap_dir_nosoc"], [289, 5, 1, "", "gap_nosoc"], [289, 5, 1, "", "gaps_nosoc"], [289, 5, 1, "", "k_cbm_c"], [289, 5, 1, "", "k_cbm_dir_c"], [289, 5, 1, "", "k_vbm_c"], [289, 5, 1, "", "k_vbm_dir_c"], [289, 4, 1, "", "key_descriptions"], [289, 5, 1, "", "skn1"], [289, 5, 1, "", "skn1_dir"], [289, 5, 1, "", "skn2"], [289, 5, 1, "", "skn2_dir"], [289, 5, 1, "", "stresses"], [289, 4, 1, "", "strict"], [289, 5, 1, "", "vacuumlevels"], [289, 5, 1, "", "vbm"], [289, 5, 1, "", "vbm_dir"], [289, 5, 1, "", "workfunction"]], "ase2sprkkr.asr.gs.VacuumLevelResults": [[290, 3, 1, "", "__init__"], [290, 4, 1, "", "_known_data_keys"], [290, 5, 1, "", "dipz"], [290, 5, 1, "", "efermi_nosoc"], [290, 5, 1, "", "evac1"], [290, 5, 1, "", "evac2"], [290, 5, 1, "", "evacdiff"], [290, 5, 1, "", "evacmean"], [290, 4, 1, "", "key_descriptions"], [290, 4, 1, "", "strict"], [290, 5, 1, "", "v_z"], [290, 5, 1, "", "z_z"]], "ase2sprkkr.asr.gw": [[299, 2, 1, "", "Result"], [300, 1, 1, "", "bs_gw"], [301, 1, 1, "", "get_kpts_size"], [302, 1, 1, "", "webpanel"]], "ase2sprkkr.asr.gw.Result": [[299, 3, 1, "", "__init__"], [299, 4, 1, "", "_known_data_keys"], [299, 5, 1, "", "bandstructure"], [299, 5, 1, "", "cbm_gw"], [299, 5, 1, "", "cbm_gw_nosoc"], [299, 5, 1, "", "efermi_gw_nosoc"], [299, 5, 1, "", "efermi_gw_soc"], [299, 4, 1, "", "formats"], [299, 5, 1, "", "gap_dir_gw"], [299, 5, 1, "", "gap_dir_gw_nosoc"], [299, 5, 1, "", "gap_gw"], [299, 5, 1, "", "gap_gw_nosoc"], [299, 5, 1, "", "kcbm"], [299, 5, 1, "", "kcbm_nosoc"], [299, 4, 1, "", "key_descriptions"], [299, 5, 1, "", "kvbm"], [299, 5, 1, "", "kvbm_nosoc"], [299, 4, 1, "", "strict"], [299, 5, 1, "", "vbm_gw"], [299, 5, 1, "", "vbm_gw_nosoc"]], "ase2sprkkr.asr.hse": [[304, 1, 1, "", "MP_interpolate"], [305, 2, 1, "", "Result"], [306, 1, 1, "", "bs_hse"], [307, 1, 1, "", "get_kpts_size"], [308, 1, 1, "", "hse"], [309, 1, 1, "", "hse_spinorbit"], [310, 1, 1, "", "webpanel"]], "ase2sprkkr.asr.hse.Result": [[305, 3, 1, "", "__init__"], [305, 4, 1, "", "_known_data_keys"], [305, 5, 1, "", "bandstructure"], [305, 5, 1, "", "cbm_hse"], [305, 5, 1, "", "cbm_hse_nosoc"], [305, 5, 1, "", "efermi_hse_nosoc"], [305, 5, 1, "", "efermi_hse_soc"], [305, 4, 1, "", "formats"], [305, 5, 1, "", "gap_dir_hse"], [305, 5, 1, "", "gap_dir_hse_nosoc"], [305, 5, 1, "", "gap_hse"], [305, 5, 1, "", "gap_hse_nosoc"], [305, 5, 1, "", "kcbm"], [305, 5, 1, "", "kcbm_nosoc"], [305, 4, 1, "", "key_descriptions"], [305, 5, 1, "", "kvbm"], [305, 5, 1, "", "kvbm_nosoc"], [305, 4, 1, "", "strict"], [305, 5, 1, "", "vbm_hse"], [305, 5, 1, "", "vbm_hse_nosoc"]], "ase2sprkkr.asr.infraredpolarizability": [[312, 2, 1, "", "Result"], [313, 1, 1, "", "create_plot"], [314, 1, 1, "", "get_phonon_pol"], [315, 1, 1, "", "webpanel"]], "ase2sprkkr.asr.infraredpolarizability.Result": [[312, 3, 1, "", "__init__"], [312, 4, 1, "", "_known_data_keys"], [312, 5, 1, "", "alpha_wvv"], [312, 5, 1, "", "alphax"], [312, 5, 1, "", "alphax_lat"], [312, 5, 1, "", "alphay"], [312, 5, 1, "", "alphay_lat"], [312, 5, 1, "", "alphaz"], [312, 5, 1, "", "alphaz_lat"], [312, 4, 1, "", "formats"], [312, 4, 1, "", "key_descriptions"], [312, 5, 1, "", "omega_w"], [312, 4, 1, "", "strict"]], "ase2sprkkr.asr.magnetic_anisotropy": [[317, 2, 1, "", "Result"], [318, 1, 1, "", "get_spin_axis"], [319, 1, 1, "", "get_spin_index"], [320, 1, 1, "", "spin_axis"], [321, 1, 1, "", "webpanel"]], "ase2sprkkr.asr.magnetic_anisotropy.Result": [[317, 5, 1, "", "E_x"], [317, 5, 1, "", "E_y"], [317, 5, 1, "", "E_z"], [317, 3, 1, "", "__init__"], [317, 4, 1, "", "_known_data_keys"], [317, 5, 1, "", "dE_zx"], [317, 5, 1, "", "dE_zy"], [317, 4, 1, "", "formats"], [317, 4, 1, "", "key_descriptions"], [317, 5, 1, "", "phi"], [317, 5, 1, "", "spin_axis"], [317, 4, 1, "", "strict"], [317, 5, 1, "", "theta"]], "ase2sprkkr.asr.magstate": [[323, 2, 1, "", "Result"], [324, 1, 1, "", "get_magstate"], [325, 1, 1, "", "webpanel"]], "ase2sprkkr.asr.magstate.Result": [[323, 3, 1, "", "__init__"], [323, 4, 1, "", "_known_data_keys"], [323, 4, 1, "", "formats"], [323, 5, 1, "", "is_magnetic"], [323, 4, 1, "", "key_descriptions"], [323, 5, 1, "", "magmom"], [323, 5, 1, "", "magmoms"], [323, 5, 1, "", "magstate"], [323, 5, 1, "", "nspins"], [323, 4, 1, "", "strict"]], "ase2sprkkr.asr.pdos": [[327, 2, 1, "", "Result"], [328, 1, 1, "", "calculate_pdos"], [329, 1, 1, "", "get_l_a"], [330, 1, 1, "", "get_ordered_syl_dict"], [331, 1, 1, "", "get_yl_colors"], [332, 1, 1, "", "pdos"], [333, 1, 1, "", "plot_pdos"], [334, 1, 1, "", "plot_pdos_nosoc"], [335, 1, 1, "", "plot_pdos_soc"], [336, 1, 1, "", "webpanel"]], "ase2sprkkr.asr.pdos.Result": [[327, 3, 1, "", "__init__"], [327, 4, 1, "", "_known_data_keys"], [327, 5, 1, "", "dos_at_ef_nosoc"], [327, 5, 1, "", "dos_at_ef_soc"], [327, 4, 1, "", "formats"], [327, 4, 1, "", "key_descriptions"], [327, 5, 1, "", "pdos_nosoc"], [327, 5, 1, "", "pdos_soc"], [327, 4, 1, "", "strict"]], "ase2sprkkr.asr.phonons": [[338, 2, 1, "", "Result"], [339, 1, 1, "", "creates"], [340, 1, 1, "", "mingocorrection"], [341, 1, 1, "", "plot_bandstructure"], [342, 1, 1, "", "plot_phonons"], [343, 1, 1, "", "requires"], [344, 1, 1, "", "todict"], [345, 1, 1, "", "topckl"], [346, 1, 1, "", "webpanel"]], "ase2sprkkr.asr.phonons.Result": [[338, 3, 1, "", "__init__"], [338, 4, 1, "", "_known_data_keys"], [338, 5, 1, "", "dynamic_stability_phonons"], [338, 4, 1, "", "formats"], [338, 5, 1, "", "interp_freqs_kl"], [338, 4, 1, "", "key_descriptions"], [338, 5, 1, "", "minhessianeig"], [338, 5, 1, "", "modes_kl"], [338, 5, 1, "", "omega_kl"], [338, 5, 1, "", "path"], [338, 5, 1, "", "q_qc"], [338, 4, 1, "", "strict"]], "ase2sprkkr.asr.phonopy": [[348, 2, 1, "", "Result"], [349, 1, 1, "", "distance_to_sc"], [350, 1, 1, "", "lattice_vectors"], [351, 1, 1, "", "plot_bandstructure"], [352, 1, 1, "", "plot_phonons"], [353, 1, 1, "", "requires"], [354, 1, 1, "", "webpanel"]], "ase2sprkkr.asr.phonopy.Result": [[348, 3, 1, "", "__init__"], [348, 4, 1, "", "_known_data_keys"], [348, 5, 1, "", "dynamic_stability_level"], [348, 5, 1, "", "eigs_kl"], [348, 4, 1, "", "formats"], [348, 5, 1, "", "irr_l"], [348, 4, 1, "", "key_descriptions"], [348, 5, 1, "", "minhessianeig"], [348, 5, 1, "", "omega_kl"], [348, 5, 1, "", "path"], [348, 5, 1, "", "phi_anv"], [348, 5, 1, "", "q_qc"], [348, 4, 1, "", "strict"], [348, 5, 1, "", "u_klav"]], "ase2sprkkr.asr.piezoelectrictensor": [[356, 2, 1, "", "Result"], [357, 1, 1, "", "webpanel"]], "ase2sprkkr.asr.piezoelectrictensor.Result": [[356, 3, 1, "", "__init__"], [356, 4, 1, "", "_known_data_keys"], [356, 5, 1, "", "eps_clamped_vvv"], [356, 5, 1, "", "eps_vvv"], [356, 4, 1, "", "formats"], [356, 4, 1, "", "key_descriptions"], [356, 4, 1, "", "strict"]], "ase2sprkkr.asr.plasmafrequency": [[359, 2, 1, "", "Result"], [360, 1, 1, "", "get_kpts_size"], [361, 1, 1, "", "webpanel"]], "ase2sprkkr.asr.plasmafrequency.Result": [[359, 3, 1, "", "__init__"], [359, 4, 1, "", "_known_data_keys"], [359, 4, 1, "", "formats"], [359, 4, 1, "", "key_descriptions"], [359, 5, 1, "", "plasmafreq_vv"], [359, 5, 1, "", "plasmafrequency_x"], [359, 5, 1, "", "plasmafrequency_y"], [359, 4, 1, "", "strict"]], "ase2sprkkr.asr.polarizability": [[363, 2, 1, "", "Result"], [364, 1, 1, "", "get_kpts_size"], [365, 1, 1, "", "polarizability"], [366, 1, 1, "", "webpanel"]], "ase2sprkkr.asr.polarizability.Result": [[363, 3, 1, "", "__init__"], [363, 4, 1, "", "_known_data_keys"], [363, 5, 1, "", "alpha0x_w"], [363, 5, 1, "", "alpha0y_w"], [363, 5, 1, "", "alpha0z_w"], [363, 5, 1, "", "alphax_el"], [363, 5, 1, "", "alphax_w"], [363, 5, 1, "", "alphay_el"], [363, 5, 1, "", "alphay_w"], [363, 5, 1, "", "alphaz_el"], [363, 5, 1, "", "alphaz_w"], [363, 4, 1, "", "formats"], [363, 5, 1, "", "frequencies"], [363, 4, 1, "", "key_descriptions"], [363, 5, 1, "", "plasmafreq_vv"], [363, 4, 1, "", "strict"]], "ase2sprkkr.asr.projected_bandstructure": [[368, 2, 1, "", "Result"], [369, 1, 1, "", "get_bs_sampling"], [370, 1, 1, "", "get_orbital_ldos"], [371, 1, 1, "", "get_pie_markers"], [372, 1, 1, "", "get_pie_slice"], [373, 1, 1, "", "get_yl_ordering"], [374, 1, 1, "", "projected_bs_pbe"], [375, 1, 1, "", "webpanel"]], "ase2sprkkr.asr.projected_bandstructure.Result": [[368, 3, 1, "", "__init__"], [368, 4, 1, "", "_known_data_keys"], [368, 4, 1, "", "formats"], [368, 4, 1, "", "key_descriptions"], [368, 4, 1, "", "strict"], [368, 5, 1, "", "symbols"], [368, 5, 1, "", "weight_skni"], [368, 5, 1, "", "yl_i"]], "ase2sprkkr.asr.raman": [[378, 2, 1, "", "Result"], [379, 1, 1, "", "count_deg"], [380, 1, 1, "", "raman"], [381, 1, 1, "", "webpanel"]], "ase2sprkkr.asr.raman.Result": [[378, 3, 1, "", "__init__"], [378, 4, 1, "", "_known_data_keys"], [378, 4, 1, "", "formats"], [378, 4, 1, "", "strict"]], "ase2sprkkr.asr.relax": [[383, 6, 1, "", "BrokenSymmetryError"], [384, 2, 1, "", "Result"], [385, 2, 1, "", "SpgAtoms"], [386, 1, 1, "", "is_relax_done"], [387, 2, 1, "", "myBFGS"], [388, 1, 1, "", "relax"], [389, 1, 1, "", "set_initial_magnetic_moments"]], "ase2sprkkr.asr.relax.Result": [[384, 3, 1, "", "__init__"], [384, 4, 1, "", "_known_data_keys"], [384, 5, 1, "", "a"], [384, 5, 1, "", "alpha"], [384, 5, 1, "", "atoms"], [384, 5, 1, "", "b"], [384, 5, 1, "", "beta"], [384, 5, 1, "", "c"], [384, 5, 1, "", "edft"], [384, 5, 1, "", "etot"], [384, 5, 1, "", "gamma"], [384, 5, 1, "", "images"], [384, 4, 1, "", "key_descriptions"], [384, 5, 1, "", "spos"], [384, 4, 1, "", "strict"], [384, 5, 1, "", "symbols"], [384, 4, 1, "", "version"]], "ase2sprkkr.asr.relax.SpgAtoms": [[385, 3, 1, "", "__init__"], [385, 3, 1, "", "from_atoms"], [385, 3, 1, "", "get_forces"], [385, 3, 1, "", "get_stress"], [385, 3, 1, "", "set_symmetries"]], "ase2sprkkr.asr.relax.myBFGS": [[387, 3, 1, "", "__init__"], [387, 3, 1, "", "log"]], "ase2sprkkr.asr.setinfo": [[391, 2, 1, "", "KeyValuePair"], [392, 1, 1, "", "check_key_value"]], "ase2sprkkr.asr.setinfo.KeyValuePair": [[391, 3, 1, "", "__init__"], [391, 3, 1, "", "convert"]], "ase2sprkkr.asr.setup": [[394, 0, 0, "-", "decorate"], [399, 0, 0, "-", "defects"], [404, 0, 0, "-", "displacements"], [409, 0, 0, "-", "magnetize"], [410, 0, 0, "-", "materials"], [411, 0, 0, "-", "params"], [412, 0, 0, "-", "scanparams"], [413, 0, 0, "-", "strains"], [417, 0, 0, "-", "symmetrize"]], "ase2sprkkr.asr.setup.decorate": [[395, 1, 1, "", "apply_substitution"], [396, 1, 1, "", "find_substitutions"], [397, 1, 1, "", "generate_structures"], [398, 1, 1, "", "get_p_ab"]], "ase2sprkkr.asr.setup.defects": [[400, 1, 1, "", "collect_data"], [401, 1, 1, "", "create_folder_structure"], [402, 1, 1, "", "setup_defects"], [403, 1, 1, "", "setup_supercell"]], "ase2sprkkr.asr.setup.displacements": [[405, 1, 1, "", "create_displacements_folder"], [406, 1, 1, "", "displace_atom"], [407, 1, 1, "", "get_all_displacements"], [408, 1, 1, "", "get_displacement_folder"]], "ase2sprkkr.asr.setup.strains": [[414, 1, 1, "", "get_relevant_strains"], [415, 1, 1, "", "get_strained_folder_name"], [416, 1, 1, "", "setup_strains"]], "ase2sprkkr.asr.setup.symmetrize": [[418, 1, 1, "", "symmetrize_atoms"]], "ase2sprkkr.asr.stiffness": [[420, 2, 1, "", "Result"], [421, 1, 1, "", "webpanel"]], "ase2sprkkr.asr.stiffness.Result": [[420, 3, 1, "", "__init__"], [420, 4, 1, "", "_known_data_keys"], [420, 5, 1, "", "c_11"], [420, 5, 1, "", "c_12"], [420, 5, 1, "", "c_13"], [420, 5, 1, "", "c_14"], [420, 5, 1, "", "c_15"], [420, 5, 1, "", "c_16"], [420, 5, 1, "", "c_21"], [420, 5, 1, "", "c_22"], [420, 5, 1, "", "c_23"], [420, 5, 1, "", "c_24"], [420, 5, 1, "", "c_25"], [420, 5, 1, "", "c_26"], [420, 5, 1, "", "c_31"], [420, 5, 1, "", "c_32"], [420, 5, 1, "", "c_33"], [420, 5, 1, "", "c_34"], [420, 5, 1, "", "c_35"], [420, 5, 1, "", "c_36"], [420, 5, 1, "", "c_41"], [420, 5, 1, "", "c_42"], [420, 5, 1, "", "c_43"], [420, 5, 1, "", "c_44"], [420, 5, 1, "", "c_45"], [420, 5, 1, "", "c_46"], [420, 5, 1, "", "c_51"], [420, 5, 1, "", "c_52"], [420, 5, 1, "", "c_53"], [420, 5, 1, "", "c_54"], [420, 5, 1, "", "c_55"], [420, 5, 1, "", "c_56"], [420, 5, 1, "", "c_61"], [420, 5, 1, "", "c_62"], [420, 5, 1, "", "c_63"], [420, 5, 1, "", "c_64"], [420, 5, 1, "", "c_65"], [420, 5, 1, "", "c_66"], [420, 5, 1, "", "dynamic_stability_stiffness"], [420, 5, 1, "", "eigenvalues"], [420, 4, 1, "", "formats"], [420, 4, 1, "", "key_descriptions"], [420, 5, 1, "", "speed_of_sound_x"], [420, 5, 1, "", "speed_of_sound_y"], [420, 5, 1, "", "stiffness_tensor"], [420, 4, 1, "", "strict"]], "ase2sprkkr.asr.structureinfo": [[423, 2, 1, "", "Result"], [424, 1, 1, "", "get_reduced_formula"], [425, 1, 1, "", "webpanel"]], "ase2sprkkr.asr.structureinfo.Result": [[423, 3, 1, "", "__init__"], [423, 4, 1, "", "_known_data_keys"], [423, 5, 1, "", "cell_area"], [423, 5, 1, "", "crystal_prototype"], [423, 4, 1, "", "formats"], [423, 5, 1, "", "formula"], [423, 5, 1, "", "has_inversion_symmetry"], [423, 4, 1, "", "key_descriptions"], [423, 5, 1, "", "pointgroup"], [423, 5, 1, "", "spacegroup"], [423, 5, 1, "", "spglib_dataset"], [423, 5, 1, "", "spgnum"], [423, 5, 1, "", "stoichiometry"], [423, 4, 1, "", "strict"]], "ase2sprkkr.asr.test": [[427, 0, 0, "-", "acceptance"], [434, 0, 0, "-", "conftest"], [437, 0, 0, "-", "fixtures"], [446, 0, 0, "-", "materials"], [447, 0, 0, "-", "mocks"], [493, 0, 0, "-", "test_bandstructure"], [495, 0, 0, "-", "test_berry"], [498, 0, 0, "-", "test_borncharges"], [500, 0, 0, "-", "test_bse"], [502, 0, 0, "-", "test_cli"], [511, 0, 0, "-", "test_convex_hull"], [513, 0, 0, "-", "test_core"], [519, 0, 0, "-", "test_core_material"], [521, 0, 0, "-", "test_core_results"], [529, 0, 0, "-", "test_database_duplicates"], [533, 0, 0, "-", "test_database_fromtree"], [539, 0, 0, "-", "test_database_rmsd"], [548, 0, 0, "-", "test_database_totree"], [552, 0, 0, "-", "test_dimensionality"], [555, 0, 0, "-", "test_emasses"], [560, 0, 0, "-", "test_fixtures"], [562, 0, 0, "-", "test_formalpolarization"], [565, 0, 0, "-", "test_gs"], [569, 0, 0, "-", "test_gw"], [571, 0, 0, "-", "test_hse"], [573, 0, 0, "-", "test_pdos"], [576, 0, 0, "-", "test_phonons"], [578, 0, 0, "-", "test_phonopy"], [580, 0, 0, "-", "test_piezoelectrictensor"], [584, 0, 0, "-", "test_plasmafrequency"], [586, 0, 0, "-", "test_polarizability"], [588, 0, 0, "-", "test_projected_bandstructure"], [590, 0, 0, "-", "test_raman"], [592, 0, 0, "-", "test_relax"], [600, 0, 0, "-", "test_setinfo"], [604, 0, 0, "-", "test_setup_decorate"], [606, 0, 0, "-", "test_setup_displacements"], [610, 0, 0, "-", "test_setup_magnetize"], [613, 0, 0, "-", "test_setup_materials"], [615, 0, 0, "-", "test_setup_scanparams"], [617, 0, 0, "-", "test_setup_strains"], [620, 0, 0, "-", "test_setup_symmetrize"], [622, 0, 0, "-", "test_stiffness"]], "ase2sprkkr.asr.test.acceptance": [[428, 0, 0, "-", "test_borncharges"], [430, 0, 0, "-", "test_piezoelectrictensor"], [432, 0, 0, "-", "test_relax"]], "ase2sprkkr.asr.test.acceptance.test_borncharges": [[429, 1, 1, "", "test_gpaw_berry_get_berry_phases_integration"]], "ase2sprkkr.asr.test.acceptance.test_piezoelectrictensor": [[431, 1, 1, "", "test_piezo_BN"]], "ase2sprkkr.asr.test.acceptance.test_relax": [[433, 1, 1, "", "test_relax_fe_gpaw"]], "ase2sprkkr.asr.test.conftest": [[435, 1, 1, "", "pytest_configure"], [436, 1, 1, "", "pytest_sessionstart"]], "ase2sprkkr.asr.test.fixtures": [[438, 1, 1, "", "_get_webcontent"], [439, 1, 1, "", "asr_tmpdir"], [440, 1, 1, "", "asr_tmpdir_w_params"], [441, 1, 1, "", "duplicates_test_db"], [442, 1, 1, "", "get_webcontent"], [443, 1, 1, "", "mockgpaw"], [444, 1, 1, "", "set_asr_test_environ_variable"], [445, 1, 1, "", "test_material"]], "ase2sprkkr.asr.test.mocks": [[448, 0, 0, "-", "gpaw"]], "ase2sprkkr.asr.test.mocks.gpaw": [[449, 0, 0, "-", "berryphase"], [451, 0, 0, "-", "calculator"], [458, 0, 0, "-", "hybrids"], [460, 0, 0, "-", "kpt_descriptor"], [463, 0, 0, "-", "mpi"], [468, 0, 0, "-", "occupations"], [471, 0, 0, "-", "response"], [478, 0, 0, "-", "spinorbit"], [481, 0, 0, "-", "symmetry"], [483, 0, 0, "-", "utilities"], [490, 0, 0, "-", "xc"]], "ase2sprkkr.asr.test.mocks.gpaw.berryphase": [[450, 1, 1, "", "get_berry_phases"]], "ase2sprkkr.asr.test.mocks.gpaw.calculator": [[452, 2, 1, "", "ASRCalculator"], [453, 2, 1, "", "DOSCalculator"], [454, 2, 1, "", "Occupations"], [455, 2, 1, "", "Parameters"], [456, 2, 1, "", "Setups"], [457, 2, 1, "", "WaveFunctions"]], "ase2sprkkr.asr.test.mocks.gpaw.calculator.ASRCalculator": [[452, 3, 1, "", "__init__"], [452, 4, 1, "", "_abc_impl"], [452, 3, 1, "", "_get_band_gap"], [452, 3, 1, "", "_get_berry_phases"], [452, 3, 1, "", "_get_dipole_moment"], [452, 3, 1, "", "_get_fermi_level"], [452, 3, 1, "", "_get_forces"], [452, 3, 1, "", "_get_magmom"], [452, 3, 1, "", "_get_magmoms"], [452, 3, 1, "", "_get_potential_energy"], [452, 3, 1, "", "_get_scaled_positions"], [452, 3, 1, "", "_get_setup"], [452, 3, 1, "", "_get_setup_fingerprint"], [452, 3, 1, "", "_get_setup_nvalence"], [452, 3, 1, "", "_get_setup_symbol"], [452, 3, 1, "", "_get_setups"], [452, 3, 1, "", "_get_stress"], [452, 3, 1, "", "calculate"], [452, 4, 1, "", "default_parameters"], [452, 3, 1, "", "diagonalize_full_hamiltonian"], [452, 3, 1, "", "dos"], [452, 3, 1, "", "fixed_density"], [452, 3, 1, "", "get_all_eigenvalues"], [452, 3, 1, "", "get_bz_k_points"], [452, 3, 1, "", "get_bz_to_ibz_map"], [452, 3, 1, "", "get_eigenvalues"], [452, 3, 1, "", "get_electrostatic_potential"], [452, 3, 1, "", "get_fermi_level"], [452, 3, 1, "", "get_ibz_k_points"], [452, 3, 1, "", "get_k_point_weights"], [452, 3, 1, "", "get_number_of_bands"], [452, 3, 1, "", "get_number_of_conduction_electrons"], [452, 3, 1, "", "get_number_of_electrons"], [452, 3, 1, "", "get_number_of_spins"], [452, 3, 1, "", "get_number_of_valence_electrons"], [452, 4, 1, "", "implemented_properties"], [452, 4, 1, "", "occupations"], [452, 3, 1, "", "read"], [452, 3, 1, "", "set"], [452, 5, 1, "", "spos_ac"], [452, 4, 1, "", "wfs"], [452, 4, 1, "", "world"], [452, 3, 1, "", "write"]], "ase2sprkkr.asr.test.mocks.gpaw.calculator.DOSCalculator": [[453, 3, 1, "", "__init__"], [453, 3, 1, "", "raw_dos"], [453, 3, 1, "", "raw_pdos"]], "ase2sprkkr.asr.test.mocks.gpaw.calculator.Occupations": [[454, 3, 1, "", "__init__"], [454, 3, 1, "", "todict"]], "ase2sprkkr.asr.test.mocks.gpaw.calculator.Parameters": [[455, 3, 1, "", "__init__"]], "ase2sprkkr.asr.test.mocks.gpaw.calculator.Setups": [[456, 3, 1, "", "__init__"], [456, 5, 1, "", "id_a"], [456, 4, 1, "", "nvalence"]], "ase2sprkkr.asr.test.mocks.gpaw.calculator.WaveFunctions": [[457, 2, 1, "", "BandDescriptor"], [457, 2, 1, "", "GridDescriptor"], [457, 2, 1, "", "KPointDescriptor"], [457, 3, 1, "", "__init__"], [457, 4, 1, "", "bd"], [457, 4, 1, "", "gd"], [457, 4, 1, "", "kd"], [457, 4, 1, "", "nvalence"]], "ase2sprkkr.asr.test.mocks.gpaw.hybrids": [[459, 0, 0, "-", "eigenvalues"]], "ase2sprkkr.asr.test.mocks.gpaw.kpt_descriptor": [[461, 1, 1, "", "kpts2sizeandoffsets"], [462, 1, 1, "", "to1bz"]], "ase2sprkkr.asr.test.mocks.gpaw.mpi": [[464, 1, 1, "", "barrier"], [465, 1, 1, "", "broadcast"], [466, 1, 1, "", "new_communicator"], [467, 1, 1, "", "world_sum"]], "ase2sprkkr.asr.test.mocks.gpaw.occupations": [[469, 2, 1, "", "FermiDirac"], [470, 1, 1, "", "create_occ_calc"]], "ase2sprkkr.asr.test.mocks.gpaw.occupations.FermiDirac": [[469, 3, 1, "", "__init__"]], "ase2sprkkr.asr.test.mocks.gpaw.response": [[472, 0, 0, "-", "bse"], [474, 0, 0, "-", "df"], [476, 0, 0, "-", "g0w0"]], "ase2sprkkr.asr.test.mocks.gpaw.response.bse": [[473, 2, 1, "", "BSE"]], "ase2sprkkr.asr.test.mocks.gpaw.response.bse.BSE": [[473, 3, 1, "", "__init__"], [473, 3, 1, "", "calculate"], [473, 3, 1, "", "get_polarizability"]], "ase2sprkkr.asr.test.mocks.gpaw.response.df": [[475, 2, 1, "", "DielectricFunction"]], "ase2sprkkr.asr.test.mocks.gpaw.response.df.DielectricFunction": [[475, 3, 1, "", "__init__"], [475, 4, 1, "", "chi0"], [475, 3, 1, "", "get_frequencies"], [475, 3, 1, "", "get_polarizability"]], "ase2sprkkr.asr.test.mocks.gpaw.response.g0w0": [[477, 2, 1, "", "G0W0"]], "ase2sprkkr.asr.test.mocks.gpaw.response.g0w0.G0W0": [[477, 3, 1, "", "__init__"], [477, 3, 1, "", "calculate"]], "ase2sprkkr.asr.test.mocks.gpaw.spinorbit": [[479, 2, 1, "", "SOC"], [480, 1, 1, "", "soc_eigenstates"]], "ase2sprkkr.asr.test.mocks.gpaw.spinorbit.SOC": [[479, 3, 1, "", "__init__"], [479, 3, 1, "", "calculate_band_energy"], [479, 3, 1, "", "eigenvalues"], [479, 3, 1, "", "spin_projections"]], "ase2sprkkr.asr.test.mocks.gpaw.symmetry": [[482, 2, 1, "", "Symmetry"]], "ase2sprkkr.asr.test.mocks.gpaw.symmetry.Symmetry": [[482, 3, 1, "", "__init__"], [482, 3, 1, "", "analyze"]], "ase2sprkkr.asr.test.mocks.gpaw.utilities": [[484, 0, 0, "-", "dos"], [486, 0, 0, "-", "ibz2bz"], [488, 0, 0, "-", "progressbar"]], "ase2sprkkr.asr.test.mocks.gpaw.utilities.dos": [[485, 1, 1, "", "raw_orbital_LDOS"]], "ase2sprkkr.asr.test.mocks.gpaw.utilities.ibz2bz": [[487, 1, 1, "", "ibz2bz"]], "ase2sprkkr.asr.test.mocks.gpaw.utilities.progressbar": [[489, 2, 1, "", "ProgressBar"]], "ase2sprkkr.asr.test.mocks.gpaw.utilities.progressbar.ProgressBar": [[489, 3, 1, "", "__init__"], [489, 3, 1, "", "enumerate"]], "ase2sprkkr.asr.test.mocks.gpaw.xc": [[491, 0, 0, "-", "exx"], [492, 0, 0, "-", "tools"]], "ase2sprkkr.asr.test.test_bandstructure": [[494, 1, 1, "", "test_bandstructure_main"]], "ase2sprkkr.asr.test.test_berry": [[496, 1, 1, "", "test_berry"], [497, 1, 1, "", "test_berry_nontrivial"]], "ase2sprkkr.asr.test.test_borncharges": [[499, 1, 1, "", "test_borncharges"]], "ase2sprkkr.asr.test.test_bse": [[501, 1, 1, "", "test_bse"]], "ase2sprkkr.asr.test.test_cli": [[503, 1, 1, "", "test_asr"], [504, 1, 1, "", "test_asr_find"], [505, 1, 1, "", "test_asr_find_help"], [506, 1, 1, "", "test_asr_find_no_versions"], [507, 1, 1, "", "test_asr_list"], [508, 1, 1, "", "test_asr_results_bandstructure"], [509, 1, 1, "", "test_asr_results_help"], [510, 1, 1, "", "test_asr_run"]], "ase2sprkkr.asr.test.test_convex_hull": [[512, 1, 1, "", "test_convex_hull"]], "ase2sprkkr.asr.test.test_core": [[514, 1, 1, "", "recipe"], [515, 1, 1, "", "test_core"], [516, 1, 1, "", "test_recipe_defaults"], [517, 1, 1, "", "test_recipe_setting_new_defaults"], [518, 1, 1, "", "test_recipe_setting_overriding_defaults"]], "ase2sprkkr.asr.test.test_core_material": [[520, 1, 1, "", "test_asr_cli_results_figures_gs"]], "ase2sprkkr.asr.test.test_core_results": [[522, 2, 1, "", "MyResult"], [523, 2, 1, "", "MyResultVer0"], [524, 2, 1, "", "MyWebPanel"], [525, 1, 1, "", "test_read_old_format"], [526, 1, 1, "", "test_reading_older_version"], [527, 1, 1, "", "test_reading_result"], [528, 1, 1, "", "test_results_object"]], "ase2sprkkr.asr.test.test_core_results.MyResult": [[522, 3, 1, "", "__init__"], [522, 4, 1, "", "_known_data_keys"], [522, 5, 1, "", "a"], [522, 4, 1, "", "formats"], [522, 4, 1, "", "key_descriptions"], [522, 4, 1, "", "prev_version"], [522, 4, 1, "", "strict"], [522, 4, 1, "", "version"]], "ase2sprkkr.asr.test.test_core_results.MyResultVer0": [[523, 3, 1, "", "__init__"], [523, 4, 1, "", "_known_data_keys"], [523, 5, 1, "", "a"], [523, 5, 1, "", "b"], [523, 4, 1, "", "key_descriptions"], [523, 4, 1, "", "strict"], [523, 4, 1, "", "version"]], "ase2sprkkr.asr.test.test_core_results.MyWebPanel": [[524, 3, 1, "", "__init__"], [524, 4, 1, "", "_abc_impl"]], "ase2sprkkr.asr.test.test_database_duplicates": [[530, 1, 1, "", "test_database_duplicates"], [531, 1, 1, "", "test_database_duplicates_filter_magstate"], [532, 1, 1, "", "test_database_duplicates_no_duplicates"]], "ase2sprkkr.asr.test.test_database_fromtree": [[534, 1, 1, "", "folder_tree"], [535, 1, 1, "", "make_tree"], [536, 1, 1, "", "test_database_fromtree_raises_when_missing_uids"], [537, 1, 1, "", "test_database_fromtree_totree"], [538, 1, 1, "", "test_database_fromtree_works_without_write_permission"]], "ase2sprkkr.asr.test.test_database_rmsd": [[540, 1, 1, "", "rattle_atoms"], [541, 1, 1, "", "test_database_rmsd_duplicates"], [542, 1, 1, "", "test_database_rmsd_duplicates_comparison_keys"], [543, 1, 1, "", "test_database_rmsd_move_one_atom"], [544, 1, 1, "", "test_database_rmsd_none_handling"], [545, 1, 1, "", "test_database_rmsd_not_equal"], [546, 1, 1, "", "test_database_rmsd_rattled"], [547, 1, 1, "", "test_database_rmsd_rotation"]], "ase2sprkkr.asr.test.test_database_totree": [[549, 1, 1, "", "make_test_db"], [550, 1, 1, "", "test_database_totree"], [551, 1, 1, "", "test_database_totree_files_and_hard_links"]], "ase2sprkkr.asr.test.test_dimensionality": [[553, 1, 1, "", "test_dimensionality"], [554, 1, 1, "", "test_dimensionality_cli"]], "ase2sprkkr.asr.test.test_emasses": [[556, 1, 1, "", "_get_all_eigenvalues"], [557, 1, 1, "", "resultstest"], [558, 1, 1, "", "test_emasses_freelectron"], [559, 1, 1, "", "test_emasses_indirect"]], "ase2sprkkr.asr.test.test_fixtures": [[561, 1, 1, "", "test_env_variables"]], "ase2sprkkr.asr.test.test_formalpolarization": [[563, 1, 1, "", "test_formalpolarization"], [564, 1, 1, "", "test_formalpolarization_test_atoms_too_close_to_boundary"]], "ase2sprkkr.asr.test.test_gs": [[566, 1, 1, "", "test_gs"], [567, 1, 1, "", "test_gs_asr_cli_results_figures"], [568, 1, 1, "", "test_gs_integration_gpaw"]], "ase2sprkkr.asr.test.test_gw": [[570, 1, 1, "", "test_gw"]], "ase2sprkkr.asr.test.test_hse": [[572, 1, 1, "", "test_hse"]], "ase2sprkkr.asr.test.test_pdos": [[574, 1, 1, "", "test_pdos"], [575, 1, 1, "", "test_pdos_full"]], "ase2sprkkr.asr.test.test_phonons": [[577, 1, 1, "", "test_phonons"]], "ase2sprkkr.asr.test.test_phonopy": [[579, 1, 1, "", "test_phonopy"]], "ase2sprkkr.asr.test.test_piezoelectrictensor": [[581, 1, 1, "", "get_strain_from_atoms"], [582, 1, 1, "", "test_piezoelectrictensor"], [583, 1, 1, "", "zero_pad_non_pbc_strain_directions"]], "ase2sprkkr.asr.test.test_plasmafrequency": [[585, 1, 1, "", "test_plasmafrequency"]], "ase2sprkkr.asr.test.test_polarizability": [[587, 1, 1, "", "test_polarizability"]], "ase2sprkkr.asr.test.test_projected_bandstructure": [[589, 1, 1, "", "test_projected_bs_mocked"]], "ase2sprkkr.asr.test.test_raman": [[591, 1, 1, "", "test_raman"]], "ase2sprkkr.asr.test.test_relax": [[593, 1, 1, "", "test_relax_basic"], [594, 1, 1, "", "test_relax_bn_gpaw"], [595, 1, 1, "", "test_relax_emt"], [596, 1, 1, "", "test_relax_emt_fail_broken_symmetry"], [597, 1, 1, "", "test_relax_find_higher_symmetry"], [598, 1, 1, "", "test_relax_magmoms"], [599, 1, 1, "", "test_relax_si_gpaw"]], "ase2sprkkr.asr.test.test_setinfo": [[601, 1, 1, "", "test_info"], [602, 1, 1, "", "test_info_call_from_cli"], [603, 1, 1, "", "test_info_raises_with_protected_key"]], "ase2sprkkr.asr.test.test_setup_decorate": [[605, 1, 1, "", "test_setup_decorate_si"]], "ase2sprkkr.asr.test.test_setup_displacements": [[607, 1, 1, "", "test_setup_displacements"], [608, 1, 1, "", "test_setup_displacements_displace_atom"], [609, 1, 1, "", "test_setup_displacements_get_all_displacements"]], "ase2sprkkr.asr.test.test_setup_magnetize": [[611, 1, 1, "", "test_setup_magnetize"], [612, 1, 1, "", "test_setup_magnetize_state_inputs"]], "ase2sprkkr.asr.test.test_setup_materials": [[614, 1, 1, "", "test_setup_magnetize"]], "ase2sprkkr.asr.test.test_setup_scanparams": [[616, 1, 1, "", "test_setup_params"]], "ase2sprkkr.asr.test.test_setup_strains": [[618, 1, 1, "", "test_setup_strains"], [619, 1, 1, "", "test_setup_strains_get_relevant_strains"]], "ase2sprkkr.asr.test.test_setup_symmetrize": [[621, 1, 1, "", "test_setup_symmetrize"]], "ase2sprkkr.asr.test.test_stiffness": [[623, 1, 1, "", "test_stiffness_emt"], [624, 1, 1, "", "test_stiffness_gpaw"]], "ase2sprkkr.asr.utils": [[626, 0, 0, "-", "args"], [628, 0, 0, "-", "calculator_utils"], [631, 0, 0, "-", "gpw2eigs"], [634, 0, 0, "-", "kpts"], [636, 0, 0, "-", "magnetism"], [639, 0, 0, "-", "refinegs"], [644, 0, 0, "-", "something"], [649, 0, 0, "-", "symmetry"], [655, 0, 0, "-", "utils"]], "ase2sprkkr.asr.utils.args": [[627, 1, 1, "", "parse_arg"]], "ase2sprkkr.asr.utils.calculator_utils": [[629, 1, 1, "", "fermi_level"], [630, 1, 1, "", "get_eigenvalues"]], "ase2sprkkr.asr.utils.gpw2eigs": [[632, 1, 1, "", "calc2eigs"], [633, 1, 1, "", "gpw2eigs"]], "ase2sprkkr.asr.utils.kpts": [[635, 1, 1, "", "get_kpts_size"]], "ase2sprkkr.asr.utils.magnetism": [[637, 1, 1, "", "is_magnetic"], [638, 1, 1, "", "magnetic_atoms"]], "ase2sprkkr.asr.utils.refinegs": [[640, 1, 1, "", "get_filenames"], [641, 1, 1, "", "get_parstr"], [642, 1, 1, "", "nonselfc"], [643, 1, 1, "", "refinegs"]], "ase2sprkkr.asr.utils.something": [[645, 1, 1, "", "calculate_something"], [646, 1, 1, "", "collect_data"], [647, 1, 1, "", "create_plot"], [648, 1, 1, "", "webpanel"]], "ase2sprkkr.asr.utils.symmetry": [[650, 1, 1, "", "_atoms2symmetry_gpaw"], [651, 1, 1, "", "atoms2spgcell"], [652, 1, 1, "", "atoms2symmetry"], [653, 1, 1, "", "has_inversion"], [654, 1, 1, "", "restrict_spin_projection_2d"]], "ase2sprkkr.asr.utils.utils": [[656, 1, 1, "", "timed_print"]], "ase2sprkkr.bindings": [[659, 0, 0, "-", "empty_spheres"], [664, 0, 0, "-", "es_finder"], [666, 0, 0, "-", "spglib"], [669, 0, 0, "-", "tests"], [683, 0, 0, "-", "xband"]], "ase2sprkkr.bindings.empty_spheres": [[660, 2, 1, "", "EmptySpheresResult"], [661, 1, 1, "", "add_empty_spheres"], [662, 1, 1, "", "empty_spheres"], [663, 1, 1, "", "empty_spheres_atoms"]], "ase2sprkkr.bindings.empty_spheres.EmptySpheresResult": [[660, 3, 1, "", "__init__"]], "ase2sprkkr.bindings.es_finder": [[665, 1, 1, "", "empty_spheres"]], "ase2sprkkr.bindings.spglib": [[667, 2, 1, "", "SpacegroupInfo"], [668, 1, 1, "", "possibly_equivalent_sites"]], "ase2sprkkr.bindings.spglib.SpacegroupInfo": [[667, 3, 1, "", "__init__"], [667, 3, 1, "", "compute_spacegroup_info"], [667, 5, 1, "", "dataset"], [667, 5, 1, "", "equivalent_sites"], [667, 3, 1, "", "from_atoms"], [667, 3, 1, "", "number"], [667, 3, 1, "", "recompute"]], "ase2sprkkr.bindings.tests": [[670, 0, 0, "-", "init_tests"], [679, 0, 0, "-", "test_es_finder"], [681, 0, 0, "-", "test_spglib"]], "ase2sprkkr.bindings.tests.init_tests": [[671, 2, 1, "", "TestCase"], [672, 1, 1, "", "arr_testfce"], [673, 1, 1, "", "assertDictEqual"], [674, 1, 1, "", "assertListEqual"], [675, 1, 1, "", "assert_almost_equals"], [676, 1, 1, "", "assert_equals"], [677, 2, 1, "", "extdict"], [678, 1, 1, "", "testfce"]], "ase2sprkkr.bindings.tests.init_tests.TestCase": [[671, 3, 1, "", "__init__"], [671, 4, 1, "", "_calc_args"], [671, 4, 1, "", "_print_output"], [671, 3, 1, "", "almost_equal_precision"], [671, 3, 1, "", "assertAlmostEqual"], [671, 3, 1, "", "assertAsyncEqual"], [671, 3, 1, "", "assertAsyncRaises"], [671, 3, 1, "", "assertEqual"], [671, 3, 1, "", "assertFalse"], [671, 3, 1, "", "assertIsNone"], [671, 3, 1, "", "assertNotEqual"], [671, 3, 1, "", "assertRaises"], [671, 3, 1, "", "assertTrue"], [671, 3, 1, "", "calc_args"], [671, 3, 1, "", "runAsync"], [671, 3, 1, "", "run_sprkkr"], [671, 3, 1, "", "temporary_dir"]], "ase2sprkkr.bindings.tests.init_tests.extdict": [[677, 3, 1, "", "__init__"]], "ase2sprkkr.bindings.tests.test_es_finder": [[680, 2, 1, "", "TestEsFinder"]], "ase2sprkkr.bindings.tests.test_es_finder.TestEsFinder": [[680, 3, 1, "", "__init__"], [680, 3, 1, "", "test_es_finder"]], "ase2sprkkr.bindings.tests.test_spglib": [[682, 2, 1, "", "TestSpgilib"]], "ase2sprkkr.bindings.tests.test_spglib.TestSpgilib": [[682, 3, 1, "", "__init__"], [682, 3, 1, "", "test_possibly_equivalent_sites"], [682, 3, 1, "", "test_spacegroup_info"]], "ase2sprkkr.bindings.xband": [[684, 0, 0, "-", "spheres"], [686, 0, 0, "-", "symmetry"], [689, 0, 0, "-", "tests"]], "ase2sprkkr.bindings.xband.spheres": [[685, 1, 1, "", "empty_spheres"]], "ase2sprkkr.bindings.xband.symmetry": [[687, 1, 1, "", "find_symmetry"], [688, 1, 1, "", "find_symmetry_ex"]], "ase2sprkkr.bindings.xband.tests": [[690, 0, 0, "-", "init_tests"], [700, 0, 0, "-", "test_spheres"]], "ase2sprkkr.bindings.xband.tests.init_tests": [[691, 2, 1, "", "TestCase"], [692, 1, 1, "", "arr_testfce"], [693, 1, 1, "", "assertDictEqual"], [694, 1, 1, "", "assertListEqual"], [695, 1, 1, "", "assert_almost_equals"], [696, 1, 1, "", "assert_equals"], [697, 2, 1, "", "extdict"], [698, 1, 1, "", "patch_package"], [699, 1, 1, "", "testfce"]], "ase2sprkkr.bindings.xband.tests.init_tests.TestCase": [[691, 3, 1, "", "__init__"], [691, 4, 1, "", "_calc_args"], [691, 4, 1, "", "_print_output"], [691, 3, 1, "", "almost_equal_precision"], [691, 3, 1, "", "assertAlmostEqual"], [691, 3, 1, "", "assertAsyncEqual"], [691, 3, 1, "", "assertAsyncRaises"], [691, 3, 1, "", "assertEqual"], [691, 3, 1, "", "assertFalse"], [691, 3, 1, "", "assertIsNone"], [691, 3, 1, "", "assertNotEqual"], [691, 3, 1, "", "assertRaises"], [691, 3, 1, "", "assertTrue"], [691, 3, 1, "", "calc_args"], [691, 3, 1, "", "runAsync"], [691, 3, 1, "", "run_sprkkr"], [691, 3, 1, "", "temporary_dir"]], "ase2sprkkr.bindings.xband.tests.init_tests.extdict": [[697, 3, 1, "", "__init__"]], "ase2sprkkr.bindings.xband.tests.test_spheres": [[701, 2, 1, "", "TestSpheres"]], "ase2sprkkr.bindings.xband.tests.test_spheres.TestSpheres": [[701, 3, 1, "", "__init__"], [701, 3, 1, "", "test"], [701, 3, 1, "", "test_xband"]], "ase2sprkkr.common": [[703, 0, 0, "-", "alternative_types"], [708, 0, 0, "-", "configuration"], [710, 0, 0, "-", "configuration_containers"], [719, 0, 0, "-", "configuration_definitions"], [731, 0, 0, "-", "container_definitions"], [738, 0, 0, "-", "decorators"], [748, 0, 0, "-", "directory"], [750, 0, 0, "-", "doc"], [753, 0, 0, "-", "formats"], [757, 0, 0, "-", "generated_configuration_definitions"], [761, 0, 0, "-", "grammar"], [775, 0, 0, "-", "grammar_types"], [841, 0, 0, "-", "init_tests"], [851, 0, 0, "-", "misc"], [858, 0, 0, "-", "no_output"], [860, 0, 0, "-", "options"], [866, 0, 0, "-", "process_output_reader"], [869, 0, 0, "-", "repeated_configuration_containers"], [871, 0, 0, "-", "subprocess"], [875, 0, 0, "-", "test"], [889, 0, 0, "-", "tools"], [895, 0, 0, "-", "unique_values"], [897, 0, 0, "-", "value_definitions"], [899, 0, 0, "-", "warnings"]], "ase2sprkkr.common.alternative_types": [[704, 7, 1, "", "allowed_types"], [705, 1, 1, "", "normalize_type"], [706, 7, 1, "", "normalize_type_map"], [707, 7, 1, "", "types_alternatives"]], "ase2sprkkr.common.configuration": [[709, 2, 1, "", "Configuration"]], "ase2sprkkr.common.configuration.Configuration": [[709, 3, 1, "", "__init__"], [709, 4, 1, "", "_container"], [709, 4, 1, "", "_definition"], [709, 3, 1, "", "_get_path"], [709, 3, 1, "", "_get_root_container"], [709, 3, 1, "", "as_dict"], [709, 5, 1, "", "doc"], [709, 3, 1, "", "help"], [709, 5, 1, "", "info"], [709, 5, 1, "", "name"], [709, 3, 1, "", "save_to_file"], [709, 3, 1, "", "show"], [709, 3, 1, "", "to_dict"], [709, 3, 1, "", "to_string"]], "ase2sprkkr.common.configuration_containers": [[711, 2, 1, "", "BaseConfigurationContainer"], [712, 2, 1, "", "BaseSection"], [713, 2, 1, "", "ConfigurationContainer"], [714, 2, 1, "", "CustomSection"], [715, 2, 1, "", "DictAdaptor"], [716, 6, 1, "", "DisabledAttributeError"], [717, 2, 1, "", "RootConfigurationContainer"], [718, 2, 1, "", "Section"]], "ase2sprkkr.common.configuration_containers.BaseConfigurationContainer": [[711, 3, 1, "", "__init__"], [711, 3, 1, "", "copy"], [711, 5, 1, "", "definition"], [711, 3, 1, "", "has_any_value"]], "ase2sprkkr.common.configuration_containers.BaseSection": [[712, 3, 1, "", "__init__"]], "ase2sprkkr.common.configuration_containers.ConfigurationContainer": [[713, 3, 1, "", "__init__"], [713, 3, 1, "", "_add"], [713, 3, 1, "", "_find_value"], [713, 3, 1, "", "_get"], [713, 3, 1, "", "_get_member"], [713, 3, 1, "", "_init_members_from_the_definition"], [713, 3, 1, "", "_interactive_member_name"], [713, 3, 1, "", "_save_to_file"], [713, 3, 1, "", "add"], [713, 3, 1, "", "as_dict"], [713, 3, 1, "", "clear"], [713, 3, 1, "", "get"], [713, 3, 1, "", "has_any_value"], [713, 3, 1, "", "is_changed"], [713, 3, 1, "", "items"], [713, 3, 1, "", "remove_member"], [713, 3, 1, "", "set"], [713, 3, 1, "", "validate"]], "ase2sprkkr.common.configuration_containers.CustomSection": [[714, 3, 1, "", "__init__"], [714, 3, 1, "", "factory"], [714, 3, 1, "", "remove"]], "ase2sprkkr.common.configuration_containers.DictAdaptor": [[715, 3, 1, "", "__init__"]], "ase2sprkkr.common.configuration_containers.RootConfigurationContainer": [[717, 3, 1, "", "__init__"], [717, 3, 1, "", "find"], [717, 4, 1, "", "name_in_grammar"], [717, 3, 1, "", "read_from_file"]], "ase2sprkkr.common.configuration_containers.Section": [[718, 3, 1, "", "__init__"], [718, 5, 1, "", "definition"]], "ase2sprkkr.common.configuration_definitions": [[720, 2, 1, "", "BaseDefinition"], [721, 2, 1, "", "ControlDefinition"], [722, 2, 1, "", "Gather"], [723, 2, 1, "", "Ignored"], [724, 2, 1, "", "RealItemDefinition"], [725, 2, 1, "", "SeparatorDefinition"], [726, 2, 1, "", "Stub"], [727, 2, 1, "", "Switch"], [728, 2, 1, "", "VirtualDefinition"], [729, 1, 1, "", "gather"], [730, 1, 1, "", "switch"]], "ase2sprkkr.common.configuration_definitions.BaseDefinition": [[720, 3, 1, "", "__init__"], [720, 3, 1, "", "_add_hooks_to_grammar"], [720, 4, 1, "", "_copy_excluded_args"], [720, 3, 1, "", "_get_copy_args"], [720, 5, 1, "", "_grammar"], [720, 3, 1, "", "_hooked_grammar"], [720, 3, 1, "", "accept_value"], [720, 3, 1, "", "add_grammar_hook"], [720, 3, 1, "", "added_to_container"], [720, 4, 1, "", "can_be_repeated"], [720, 3, 1, "", "copy"], [720, 3, 1, "", "create_object"], [720, 3, 1, "", "description"], [720, 3, 1, "", "enrich"], [720, 3, 1, "", "get_path"], [720, 3, 1, "", "grammar"], [720, 3, 1, "", "has_grammar"], [720, 3, 1, "", "has_name"], [720, 3, 1, "", "info"], [720, 4, 1, "", "is_independent_on_the_predecessor"], [720, 5, 1, "", "output_definition"], [720, 3, 1, "", "remove_grammar_hook"]], "ase2sprkkr.common.configuration_definitions.ControlDefinition": [[721, 3, 1, "", "__init__"], [721, 4, 1, "", "_grammar"]], "ase2sprkkr.common.configuration_definitions.Gather": [[722, 3, 1, "", "__init__"], [722, 3, 1, "", "_grammar"], [722, 3, 1, "", "_save_to_file"]], "ase2sprkkr.common.configuration_definitions.Ignored": [[723, 3, 1, "", "__init__"], [723, 4, 1, "", "_grammar"], [723, 3, 1, "", "_save_to_file"], [723, 3, 1, "", "has_grammar"], [723, 4, 1, "", "singleton"]], "ase2sprkkr.common.configuration_definitions.RealItemDefinition": [[724, 3, 1, "", "__init__"], [724, 4, 1, "", "_copy_excluded_args"], [724, 4, 1, "", "_description"], [724, 4, 1, "", "_description_indentation"], [724, 3, 1, "", "_grammar_of_name"], [724, 4, 1, "", "_info"], [724, 3, 1, "", "_tuple_with_my_name"], [724, 3, 1, "", "all_names_in_grammar"], [724, 3, 1, "", "allow_duplication"], [724, 3, 1, "", "description"], [724, 4, 1, "", "do_not_skip_whitespaces_before_name"], [724, 3, 1, "", "has_name"], [724, 3, 1, "", "info"], [724, 4, 1, "", "is_hidden"], [724, 5, 1, "", "is_independent_on_the_predecessor"], [724, 4, 1, "", "name_in_grammar"], [724, 4, 1, "", "result_class"], [724, 3, 1, "", "validate_warning"], [724, 4, 1, "", "written_name"]], "ase2sprkkr.common.configuration_definitions.SeparatorDefinition": [[725, 3, 1, "", "__init__"], [725, 3, 1, "", "_create_grammar"], [725, 3, 1, "", "_save_to_file"]], "ase2sprkkr.common.configuration_definitions.Stub": [[726, 3, 1, "", "__init__"], [726, 3, 1, "", "_create_grammar"], [726, 3, 1, "", "_save_to_file"]], "ase2sprkkr.common.configuration_definitions.Switch": [[727, 3, 1, "", "__init__"], [727, 3, 1, "", "added_to_container"], [727, 3, 1, "", "all_values"], [727, 3, 1, "", "copy"], [727, 4, 1, "", "create_object"], [727, 4, 1, "", "empty"], [727, 3, 1, "", "item_hook"], [727, 3, 1, "", "prepare_grammar"], [727, 3, 1, "", "remove_from_container"]], "ase2sprkkr.common.configuration_definitions.VirtualDefinition": [[728, 3, 1, "", "__init__"], [728, 3, 1, "", "all_names_in_grammar"], [728, 4, 1, "", "counter"], [728, 3, 1, "", "create_object"], [728, 4, 1, "", "is_hidden"]], "ase2sprkkr.common.container_definitions": [[732, 2, 1, "", "ConfigurationRootDefinition"], [733, 2, 1, "", "ContainerDefinition"], [734, 2, 1, "", "MergeDictAdaptor"], [735, 2, 1, "", "SectionDefinition"], [736, 1, 1, "", "add_excluded_names_condition"], [737, 1, 1, "", "dict_from_parsed"]], "ase2sprkkr.common.container_definitions.ConfigurationRootDefinition": [[732, 3, 1, "", "__init__"], [732, 3, 1, "", "_create_grammar"], [732, 3, 1, "", "_tuple_with_my_name"], [732, 3, 1, "", "add_ignored"], [732, 4, 1, "", "custom_value_name"], [732, 3, 1, "", "definition_from_dict"], [732, 4, 1, "", "name_in_grammar"], [732, 3, 1, "", "parse_return"], [732, 5, 1, "", "sections"], [732, 4, 1, "", "write_last_delimiter"]], "ase2sprkkr.common.container_definitions.ContainerDefinition": [[733, 3, 1, "", "__init__"], [733, 3, 1, "", "_allow_duplicates_of"], [733, 3, 1, "", "_create_grammar"], [733, 3, 1, "", "_dict_from_named_values"], [733, 3, 1, "", "_first_section_has_to_be_first"], [733, 3, 1, "", "_grammar_of_values"], [733, 3, 1, "", "_save_to_file"], [733, 3, 1, "", "additional_data_description"], [733, 3, 1, "", "all_member_names"], [733, 3, 1, "", "allow_duplication"], [733, 4, 1, "", "configuration_type_name"], [733, 3, 1, "", "copy"], [733, 3, 1, "", "copy_member"], [733, 3, 1, "", "create_object"], [733, 3, 1, "", "custom_member_grammar"], [733, 4, 1, "", "custom_name_characters"], [733, 3, 1, "", "data_description"], [733, 3, 1, "", "delimited_custom_value_grammar"], [733, 4, 1, "", "force_order"], [733, 3, 1, "", "members"], [733, 3, 1, "", "names"], [733, 3, 1, "", "parse"], [733, 3, 1, "", "parse_file"], [733, 3, 1, "", "parse_from_stream"], [733, 3, 1, "", "parse_return"], [733, 3, 1, "", "read_from_dict"], [733, 3, 1, "", "read_from_file"], [733, 3, 1, "", "read_from_string"], [733, 3, 1, "", "remove"], [733, 4, 1, "", "repeated_class"], [733, 3, 1, "", "validate"], [733, 4, 1, "", "value_name_format"], [733, 4, 1, "", "write_last_delimiter"]], "ase2sprkkr.common.container_definitions.MergeDictAdaptor": [[734, 3, 1, "", "__init__"]], "ase2sprkkr.common.container_definitions.SectionDefinition": [[735, 3, 1, "", "__init__"], [735, 3, 1, "", "_generic_info"], [735, 3, 1, "", "accept_value"], [735, 4, 1, "", "custom_value_name"], [735, 3, 1, "", "delimited_custom_value_grammar"], [735, 4, 1, "", "result_class"], [735, 5, 1, "", "values"]], "ase2sprkkr.common.decorators": [[739, 1, 1, "", "add_called_class_as_argument"], [740, 1, 1, "", "add_to_signature"], [741, 1, 1, "", "cache"], [742, 2, 1, "", "cached_class_property"], [743, 2, 1, "", "cached_property"], [744, 2, 1, "", "class_property"], [745, 2, 1, "", "maybeclassmethod"], [746, 4, 1, "", "std_cached_property"], [747, 1, 1, "", "warnings_from_here"]], "ase2sprkkr.common.decorators.cached_class_property": [[742, 3, 1, "", "__init__"]], "ase2sprkkr.common.decorators.cached_property": [[743, 3, 1, "", "__init__"], [743, 3, 1, "", "deleter"], [743, 3, 1, "", "setter"]], "ase2sprkkr.common.decorators.class_property": [[744, 3, 1, "", "__init__"]], "ase2sprkkr.common.decorators.maybeclassmethod": [[745, 3, 1, "", "__init__"]], "ase2sprkkr.common.directory": [[749, 2, 1, "", "Directory"]], "ase2sprkkr.common.directory.Directory": [[749, 3, 1, "", "__init__"], [749, 3, 1, "", "chdir"], [749, 3, 1, "", "new"]], "ase2sprkkr.common.doc": [[751, 1, 1, "", "process_input_parameters_definition"], [752, 1, 1, "", "verbatim"]], "ase2sprkkr.common.formats": [[754, 1, 1, "", "format_for_string"], [755, 1, 1, "", "fortran_format"], [756, 1, 1, "", "full_format_for_string"]], "ase2sprkkr.common.generated_configuration_definitions": [[758, 2, 1, "", "BaseGeneratedValueDefinition"], [759, 2, 1, "", "GeneratedValueDefinition"], [760, 2, 1, "", "NumpyViewDefinition"]], "ase2sprkkr.common.generated_configuration_definitions.BaseGeneratedValueDefinition": [[758, 3, 1, "", "__init__"], [758, 4, 1, "", "_grammar"], [758, 3, 1, "", "enrich"], [758, 4, 1, "", "is_generated"], [758, 4, 1, "", "is_stored"], [758, 4, 1, "", "result_class"]], "ase2sprkkr.common.generated_configuration_definitions.GeneratedValueDefinition": [[759, 3, 1, "", "__init__"], [759, 5, 1, "", "setter"]], "ase2sprkkr.common.generated_configuration_definitions.NumpyViewDefinition": [[760, 3, 1, "", "__init__"], [760, 3, 1, "", "copy_value"], [760, 3, 1, "", "data_description"], [760, 3, 1, "", "determine_shape"], [760, 3, 1, "", "enrich"], [760, 3, 1, "", "getter"], [760, 3, 1, "", "setter"], [760, 3, 1, "", "source"]], "ase2sprkkr.common.grammar": [[762, 2, 1, "", "SkipToRegex"], [763, 2, 1, "", "White"], [764, 1, 1, "", "addConditionEx"], [765, 1, 1, "", "addParseActionEx"], [766, 1, 1, "", "delimitedList"], [767, 7, 1, "", "end_of_file"], [768, 1, 1, "", "generate_grammar"], [769, 7, 1, "", "line_end"], [770, 7, 1, "", "optional_line_end"], [771, 7, 1, "", "optional_quote"], [772, 1, 1, "", "replace_whitechars"], [773, 1, 1, "", "separator_grammar"], [774, 1, 1, "", "separator_pattern"]], "ase2sprkkr.common.grammar.SkipToRegex": [[762, 3, 1, "", "__init__"], [762, 4, 1, "", "_abc_impl"], [762, 5, 1, "", "custom_name"], [762, 3, 1, "", "parseImpl"]], "ase2sprkkr.common.grammar.White": [[763, 3, 1, "", "__init__"], [763, 4, 1, "", "_abc_impl"]], "ase2sprkkr.common.grammar_types": [[776, 0, 0, "-", "arrays"], [786, 0, 0, "-", "basic"], [821, 0, 0, "-", "data"], [826, 0, 0, "-", "grammar_type"], [835, 0, 0, "-", "mixed"], [836, 7, 1, "", "recognized_set_types"], [837, 7, 1, "", "type_from_set_map"], [838, 7, 1, "", "type_from_type_map"], [839, 0, 0, "-", "warnings"]], "ase2sprkkr.common.grammar_types.arrays": [[777, 2, 1, "", "Array"], [778, 2, 1, "", "Complex"], [779, 2, 1, "", "Sequence"], [780, 2, 1, "", "SetOf"], [781, 2, 1, "", "SpecialColumn"], [782, 2, 1, "", "Table"], [783, 7, 1, "", "complex_number"], [784, 7, 1, "", "set_of_integers"], [785, 7, 1, "", "set_of_reals"]], "ase2sprkkr.common.grammar_types.arrays.Array": [[777, 3, 1, "", "__init__"], [777, 3, 1, "", "_set_convert_action"], [777, 3, 1, "", "_string"], [777, 3, 1, "", "_validate"], [777, 4, 1, "", "array_access"], [777, 3, 1, "", "convert"], [777, 4, 1, "", "delimiter"], [777, 4, 1, "", "delimiter_str"], [777, 3, 1, "", "grammar_name"], [777, 3, 1, "", "is_the_same_value"]], "ase2sprkkr.common.grammar_types.arrays.Complex": [[778, 4, 1, "", "I"], [778, 3, 1, "", "__init__"], [778, 3, 1, "", "_grammar_name"], [778, 3, 1, "", "_string"], [778, 3, 1, "", "_validate"], [778, 4, 1, "", "array_access"], [778, 3, 1, "", "convert"]], "ase2sprkkr.common.grammar_types.arrays.Sequence": [[779, 3, 1, "", "__init__"], [779, 3, 1, "", "_grammar"], [779, 3, 1, "", "_string"], [779, 3, 1, "", "_validate"], [779, 3, 1, "", "convert"], [779, 3, 1, "", "enrich"], [779, 3, 1, "", "grammar_name"], [779, 3, 1, "", "is_the_same_value"]], "ase2sprkkr.common.grammar_types.arrays.SetOf": [[780, 3, 1, "", "__init__"], [780, 3, 1, "", "copy_value"], [780, 4, 1, "", "delimiter"], [780, 4, 1, "", "delimiter_str"], [780, 3, 1, "", "transform_grammar"]], "ase2sprkkr.common.grammar_types.arrays.SpecialColumn": [[781, 3, 1, "", "__init__"], [781, 3, 1, "", "add_grammar"], [781, 3, 1, "", "add_header_grammar"], [781, 3, 1, "", "format_string"], [781, 3, 1, "", "header"]], "ase2sprkkr.common.grammar_types.arrays.Table": [[782, 3, 1, "", "__init__"], [782, 3, 1, "", "_grammar"], [782, 5, 1, "", "_numpy_type"], [782, 3, 1, "", "_string"], [782, 3, 1, "", "_validate"], [782, 4, 1, "", "array_access"], [782, 3, 1, "", "convert"], [782, 3, 1, "", "grammar_name"], [782, 3, 1, "", "is_the_same_value"], [782, 4, 1, "", "name_in_grammar"], [782, 3, 1, "", "number_of_columns"], [782, 5, 1, "", "numpy_type"], [782, 3, 1, "", "special_columns"], [782, 3, 1, "", "zero_data"]], "ase2sprkkr.common.grammar_types.basic": [[787, 2, 1, "", "BaseRealWithUnits"], [788, 2, 1, "", "BaseString"], [789, 2, 1, "", "BasicSeparator"], [790, 2, 1, "", "BlankSeparator"], [791, 2, 1, "", "Bool"], [792, 2, 1, "", "Date"], [793, 1, 1, "", "DefKeyword"], [794, 2, 1, "", "Energy"], [795, 2, 1, "", "FixedPointNumber"], [796, 2, 1, "", "Flag"], [797, 2, 1, "", "IntBool"], [798, 2, 1, "", "Integer"], [799, 2, 1, "", "Keyword"], [800, 2, 1, "", "LineString"], [801, 2, 1, "", "Number"], [802, 2, 1, "", "ObjectNumber"], [803, 2, 1, "", "QString"], [804, 2, 1, "", "Real"], [805, 2, 1, "", "RealWithUnits"], [806, 2, 1, "", "Separator"], [807, 2, 1, "", "String"], [808, 2, 1, "", "Unsigned"], [809, 7, 1, "", "boolean"], [810, 7, 1, "", "date"], [811, 7, 1, "", "energy"], [812, 7, 1, "", "flag"], [813, 7, 1, "", "int_bool"], [814, 7, 1, "", "integer"], [815, 7, 1, "", "line_string"], [816, 7, 1, "", "qstring"], [817, 7, 1, "", "real"], [818, 7, 1, "", "separator"], [819, 7, 1, "", "string"], [820, 7, 1, "", "unsigned"]], "ase2sprkkr.common.grammar_types.basic.BaseRealWithUnits": [[787, 3, 1, "", "__init__"], [787, 3, 1, "", "_grammar"], [787, 3, 1, "", "_grammar_units"], [787, 3, 1, "", "_validate"], [787, 4, 1, "", "grammar_cache"], [787, 3, 1, "", "grammar_name"], [787, 4, 1, "", "numpy_type"]], "ase2sprkkr.common.grammar_types.basic.BaseString": [[788, 3, 1, "", "__init__"], [788, 3, 1, "", "_validate"], [788, 4, 1, "", "allowed_types"], [788, 4, 1, "", "datatype"], [788, 4, 1, "", "datatype_name"]], "ase2sprkkr.common.grammar_types.basic.BasicSeparator": [[789, 3, 1, "", "__init__"], [789, 3, 1, "", "_validate"], [789, 4, 1, "", "has_value"]], "ase2sprkkr.common.grammar_types.basic.BlankSeparator": [[790, 3, 1, "", "__init__"], [790, 4, 1, "", "_grammar"], [790, 3, 1, "", "_grammar_name"], [790, 3, 1, "", "_string"]], "ase2sprkkr.common.grammar_types.basic.Bool": [[791, 4, 1, "", "I"], [791, 3, 1, "", "__init__"], [791, 4, 1, "", "_grammar"], [791, 3, 1, "", "_string"], [791, 4, 1, "", "allowed_types"], [791, 4, 1, "", "datatype"], [791, 4, 1, "", "datatype_name"], [791, 3, 1, "", "grammar_name"], [791, 4, 1, "", "numpy_type"], [791, 4, 1, "", "type_name"]], "ase2sprkkr.common.grammar_types.basic.Date": [[792, 4, 1, "", "I"], [792, 3, 1, "", "__init__"], [792, 4, 1, "", "_grammar"], [792, 3, 1, "", "_string"], [792, 4, 1, "", "allowed_types"], [792, 4, 1, "", "datatype"], [792, 4, 1, "", "datatype_name"], [792, 3, 1, "", "grammar_name"], [792, 4, 1, "", "numpy_type"], [792, 4, 1, "", "type_name"]], "ase2sprkkr.common.grammar_types.basic.Energy": [[794, 4, 1, "", "I"], [794, 3, 1, "", "__init__"], [794, 4, 1, "", "datatype"], [794, 4, 1, "", "units"]], "ase2sprkkr.common.grammar_types.basic.FixedPointNumber": [[795, 3, 1, "", "__init__"], [795, 3, 1, "", "_validate"], [795, 4, 1, "", "allowed_types"], [795, 3, 1, "", "convert"], [795, 4, 1, "", "datatype"], [795, 4, 1, "", "datatype_name"], [795, 4, 1, "", "numpy_type"]], "ase2sprkkr.common.grammar_types.basic.Flag": [[796, 4, 1, "", "I"], [796, 3, 1, "", "__init__"], [796, 4, 1, "", "_grammar"], [796, 3, 1, "", "_validate"], [796, 4, 1, "", "allowed_types"], [796, 4, 1, "", "datatype"], [796, 4, 1, "", "datatype_name"], [796, 3, 1, "", "grammar_name"], [796, 3, 1, "", "missing_value"], [796, 4, 1, "", "numpy_type"], [796, 3, 1, "", "str"]], "ase2sprkkr.common.grammar_types.basic.IntBool": [[797, 4, 1, "", "I"], [797, 3, 1, "", "__init__"], [797, 4, 1, "", "_grammar"], [797, 4, 1, "", "_rev_grammar"], [797, 3, 1, "", "_string"], [797, 4, 1, "", "allowed_types"], [797, 4, 1, "", "datatype"], [797, 4, 1, "", "datatype_name"], [797, 3, 1, "", "grammar_name"], [797, 4, 1, "", "numpy_type"], [797, 4, 1, "", "type_name"]], "ase2sprkkr.common.grammar_types.basic.Integer": [[798, 4, 1, "", "I"], [798, 3, 1, "", "__init__"], [798, 4, 1, "", "_grammar"], [798, 4, 1, "", "allowed_types"], [798, 4, 1, "", "datatype"], [798, 4, 1, "", "datatype_name"], [798, 3, 1, "", "grammar_name"]], "ase2sprkkr.common.grammar_types.basic.Keyword": [[799, 3, 1, "", "__init__"], [799, 3, 1, "", "_validate"], [799, 3, 1, "", "additional_description"], [799, 3, 1, "", "convert"], [799, 3, 1, "", "grammar_name"], [799, 4, 1, "", "is_independent_on_the_predecessor"]], "ase2sprkkr.common.grammar_types.basic.LineString": [[800, 4, 1, "", "I"], [800, 3, 1, "", "__init__"], [800, 4, 1, "", "_grammar"], [800, 3, 1, "", "grammar_name"]], "ase2sprkkr.common.grammar_types.basic.Number": [[801, 3, 1, "", "__init__"], [801, 3, 1, "", "_validate"], [801, 4, 1, "", "allowed_types"], [801, 4, 1, "", "datatype"], [801, 4, 1, "", "datatype_name"]], "ase2sprkkr.common.grammar_types.basic.ObjectNumber": [[802, 3, 1, "", "__init__"], [802, 3, 1, "", "_validate"], [802, 3, 1, "", "convert"]], "ase2sprkkr.common.grammar_types.basic.QString": [[803, 4, 1, "", "I"], [803, 3, 1, "", "__init__"], [803, 4, 1, "", "_grammar"], [803, 3, 1, "", "grammar_name"]], "ase2sprkkr.common.grammar_types.basic.Real": [[804, 4, 1, "", "I"], [804, 3, 1, "", "__init__"], [804, 4, 1, "", "_grammar"], [804, 4, 1, "", "allowed_types"], [804, 3, 1, "", "convert"], [804, 4, 1, "", "datatype"], [804, 4, 1, "", "datatype_name"], [804, 3, 1, "", "grammar_name"], [804, 4, 1, "", "numpy_type"]], "ase2sprkkr.common.grammar_types.basic.RealWithUnits": [[805, 3, 1, "", "__init__"]], "ase2sprkkr.common.grammar_types.basic.Separator": [[806, 4, 1, "", "I"], [806, 3, 1, "", "__init__"], [806, 5, 1, "", "_grammar"], [806, 3, 1, "", "_grammar_name"], [806, 3, 1, "", "_string"]], "ase2sprkkr.common.grammar_types.basic.String": [[807, 4, 1, "", "I"], [807, 3, 1, "", "__init__"], [807, 4, 1, "", "_grammar"], [807, 3, 1, "", "grammar_name"]], "ase2sprkkr.common.grammar_types.basic.Unsigned": [[808, 4, 1, "", "I"], [808, 3, 1, "", "__init__"], [808, 4, 1, "", "_grammar"], [808, 3, 1, "", "_validate"], [808, 4, 1, "", "datatype_name"], [808, 3, 1, "", "grammar_name"]], "ase2sprkkr.common.grammar_types.data": [[822, 2, 1, "", "NumpyArray"], [823, 2, 1, "", "Prefixed"], [824, 2, 1, "", "RawData"], [825, 2, 1, "", "RestOfTheFile"]], "ase2sprkkr.common.grammar_types.data.NumpyArray": [[822, 3, 1, "", "__init__"], [822, 3, 1, "", "_grammar"], [822, 3, 1, "", "_string"], [822, 3, 1, "", "_validate"], [822, 4, 1, "", "array_access"], [822, 3, 1, "", "convert"], [822, 3, 1, "", "copy_value"], [822, 3, 1, "", "is_the_same_value"]], "ase2sprkkr.common.grammar_types.data.Prefixed": [[823, 3, 1, "", "__init__"], [823, 5, 1, "", "_grammar"], [823, 3, 1, "", "_string"]], "ase2sprkkr.common.grammar_types.data.RawData": [[824, 3, 1, "", "__init__"], [824, 3, 1, "", "_grammar"], [824, 3, 1, "", "_n_lines_grammar"], [824, 3, 1, "", "_string"], [824, 3, 1, "", "added_to_container"], [824, 3, 1, "", "convert"]], "ase2sprkkr.common.grammar_types.data.RestOfTheFile": [[825, 3, 1, "", "__init__"], [825, 4, 1, "", "_grammar"], [825, 4, 1, "", "datatype"], [825, 4, 1, "", "datatype_name"], [825, 3, 1, "", "grammar_name"]], "ase2sprkkr.common.grammar_types.grammar_type": [[827, 2, 1, "", "GrammarType"], [828, 2, 1, "", "TypedGrammarType"], [829, 1, 1, "", "compare_numpy_values"], [830, 1, 1, "", "format_for_type"], [831, 7, 1, "", "recognized_set_types"], [832, 1, 1, "", "type_from_default_value"], [833, 1, 1, "", "type_from_type"], [834, 1, 1, "", "type_from_value"]], "ase2sprkkr.common.grammar_types.grammar_type.GrammarType": [[827, 3, 1, "", "__init__"], [827, 3, 1, "", "_string"], [827, 3, 1, "", "_validate"], [827, 3, 1, "", "_valueError"], [827, 3, 1, "", "added_to_container"], [827, 3, 1, "", "additional_description"], [827, 4, 1, "", "after_format"], [827, 3, 1, "", "apply_format"], [827, 4, 1, "", "array_access"], [827, 3, 1, "", "convert"], [827, 3, 1, "", "copy"], [827, 3, 1, "", "copy_value"], [827, 4, 1, "", "default_value"], [827, 3, 1, "", "enrich"], [827, 5, 1, "", "format"], [827, 3, 1, "", "format_string"], [827, 3, 1, "", "grammar"], [827, 3, 1, "", "grammar_name"], [827, 4, 1, "", "has_value"], [827, 4, 1, "", "is_independent_on_the_predecessor"], [827, 3, 1, "", "is_the_same_value"], [827, 3, 1, "", "missing_value"], [827, 4, 1, "", "name_in_grammar"], [827, 4, 1, "", "numpy_type"], [827, 3, 1, "", "parse"], [827, 3, 1, "", "parse_from_stream"], [827, 4, 1, "", "postfix"], [827, 4, 1, "", "prefix"], [827, 3, 1, "", "print"], [827, 3, 1, "", "string"], [827, 3, 1, "", "transform_grammar"], [827, 3, 1, "", "type_validation"], [827, 3, 1, "", "used_in_definition"], [827, 3, 1, "", "validate"], [827, 3, 1, "", "write"]], "ase2sprkkr.common.grammar_types.grammar_type.TypedGrammarType": [[828, 3, 1, "", "__init__"], [828, 3, 1, "", "_validate"], [828, 4, 1, "", "allowed_types"], [828, 3, 1, "", "convert"], [828, 4, 1, "", "datatype"], [828, 4, 1, "", "datatype_name"]], "ase2sprkkr.common.grammar_types.warnings": [[840, 6, 1, "", "SuspiciousValueWarning"]], "ase2sprkkr.common.init_tests.TestCase": [[842, 3, 1, "", "__init__"], [842, 4, 1, "", "_calc_args"], [842, 4, 1, "", "_print_output"], [842, 3, 1, "", "almost_equal_precision"], [842, 3, 1, "", "assertAlmostEqual"], [842, 3, 1, "", "assertAsyncEqual"], [842, 3, 1, "", "assertAsyncRaises"], [842, 3, 1, "", "assertEqual"], [842, 3, 1, "", "assertFalse"], [842, 3, 1, "", "assertIsNone"], [842, 3, 1, "", "assertNotEqual"], [842, 3, 1, "", "assertRaises"], [842, 3, 1, "", "assertTrue"], [842, 3, 1, "", "calc_args"], [842, 3, 1, "", "runAsync"], [842, 3, 1, "", "run_sprkkr"], [842, 3, 1, "", "temporary_dir"]], "ase2sprkkr.common.init_tests": [[843, 1, 1, "", "arr_testfce"], [844, 1, 1, "", "assertDictEqual"], [845, 1, 1, "", "assertListEqual"], [846, 1, 1, "", "assert_almost_equals"], [847, 1, 1, "", "assert_equals"], [849, 1, 1, "", "patch_package"], [850, 1, 1, "", "testfce"]], "ase2sprkkr.common.init_tests.extdict": [[848, 3, 1, "", "__init__"]], "ase2sprkkr.common.misc": [[852, 1, 1, "", "as_integer"], [853, 1, 1, "", "copy_list"], [854, 1, 1, "", "dict_first_item"], [855, 1, 1, "", "first_non_none"], [856, 1, 1, "", "njit"], [857, 1, 1, "", "numpy_index"]], "ase2sprkkr.common.no_output": [[859, 2, 1, "", "NoOutput"]], "ase2sprkkr.common.no_output.NoOutput": [[859, 3, 1, "", "__init__"]], "ase2sprkkr.common.options": [[861, 2, 1, "", "BaseOption"], [862, 2, 1, "", "CustomOption"], [863, 2, 1, "", "DangerousValue"], [864, 2, 1, "", "Dummy"], [865, 2, 1, "", "Option"]], "ase2sprkkr.common.options.BaseOption": [[861, 3, 1, "", "__init__"], [861, 3, 1, "", "_find_value"], [861, 3, 1, "", "_save_to_file"], [861, 3, 1, "", "as_dict"], [861, 3, 1, "", "clear"], [861, 3, 1, "", "get_path"]], "ase2sprkkr.common.options.CustomOption": [[862, 3, 1, "", "__init__"], [862, 3, 1, "", "factory"], [862, 3, 1, "", "remove"]], "ase2sprkkr.common.options.DangerousValue": [[863, 3, 1, "", "__init__"], [863, 3, 1, "", "write_value"]], "ase2sprkkr.common.options.Dummy": [[864, 3, 1, "", "__init__"], [864, 3, 1, "", "has_any_value"], [864, 3, 1, "", "validate"]], "ase2sprkkr.common.options.Option": [[865, 3, 1, "", "__init__"], [865, 3, 1, "", "_check_array_access"], [865, 3, 1, "", "_create_dangerous_value"], [865, 3, 1, "", "_getitem"], [865, 3, 1, "", "_pack_value"], [865, 3, 1, "", "_post_set"], [865, 3, 1, "", "_set_item"], [865, 3, 1, "", "_unpack_value"], [865, 3, 1, "", "_written_value"], [865, 3, 1, "", "add_hook"], [865, 3, 1, "", "as_dict"], [865, 3, 1, "", "clear"], [865, 3, 1, "", "clear_result"], [865, 5, 1, "", "default_value"], [865, 3, 1, "", "get"], [865, 3, 1, "", "has_any_value"], [865, 3, 1, "", "is_changed"], [865, 3, 1, "", "is_dangerous"], [865, 3, 1, "", "is_it_the_default_value"], [865, 3, 1, "", "is_set"], [865, 5, 1, "", "name"], [865, 5, 1, "", "result"], [865, 3, 1, "", "set"], [865, 3, 1, "", "set_dangerous"], [865, 3, 1, "", "validate"], [865, 3, 1, "", "value_and_changed"]], "ase2sprkkr.common.process_output_reader": [[867, 2, 1, "", "AsyncioFileReader"], [868, 2, 1, "", "ProcessOutputReader"]], "ase2sprkkr.common.process_output_reader.AsyncioFileReader": [[867, 3, 1, "", "__init__"], [867, 3, 1, "", "close"], [867, 3, 1, "", "readline"], [867, 3, 1, "", "readuntil"], [867, 3, 1, "", "separator_shifts"]], "ase2sprkkr.common.process_output_reader.ProcessOutputReader": [[868, 3, 1, "", "__init__"], [868, 3, 1, "", "read_error"], [868, 3, 1, "", "read_from_file"], [868, 3, 1, "", "read_output"], [868, 3, 1, "", "result"], [868, 3, 1, "", "result_from_file"], [868, 3, 1, "", "run"], [868, 3, 1, "", "run_subprocess"]], "ase2sprkkr.common.repeated_configuration_containers": [[870, 2, 1, "", "RepeatedConfigurationContainer"]], "ase2sprkkr.common.repeated_configuration_containers.RepeatedConfigurationContainer": [[870, 3, 1, "", "__init__"], [870, 3, 1, "", "_save_to_file"], [870, 3, 1, "", "add"], [870, 3, 1, "", "as_dict"], [870, 3, 1, "", "clear"], [870, 3, 1, "", "get"], [870, 3, 1, "", "is_changed"], [870, 3, 1, "", "items"], [870, 3, 1, "", "set"], [870, 3, 1, "", "validate"], [870, 3, 1, "", "values"]], "ase2sprkkr.common.subprocess": [[872, 1, 1, "", "_call_function"], [873, 1, 1, "", "ignore_signal"], [874, 1, 1, "", "in_subprocess"]], "ase2sprkkr.common.test": [[876, 0, 0, "-", "init_tests"], [885, 0, 0, "-", "test_common"], [887, 0, 0, "-", "test_grammar_types"]], "ase2sprkkr.common.test.init_tests": [[877, 2, 1, "", "TestCase"], [878, 1, 1, "", "arr_testfce"], [879, 1, 1, "", "assertDictEqual"], [880, 1, 1, "", "assertListEqual"], [881, 1, 1, "", "assert_almost_equals"], [882, 1, 1, "", "assert_equals"], [883, 2, 1, "", "extdict"], [884, 1, 1, "", "testfce"]], "ase2sprkkr.common.test.init_tests.TestCase": [[877, 3, 1, "", "__init__"], [877, 4, 1, "", "_calc_args"], [877, 4, 1, "", "_print_output"], [877, 3, 1, "", "almost_equal_precision"], [877, 3, 1, "", "assertAlmostEqual"], [877, 3, 1, "", "assertAsyncEqual"], [877, 3, 1, "", "assertAsyncRaises"], [877, 3, 1, "", "assertEqual"], [877, 3, 1, "", "assertFalse"], [877, 3, 1, "", "assertIsNone"], [877, 3, 1, "", "assertNotEqual"], [877, 3, 1, "", "assertRaises"], [877, 3, 1, "", "assertTrue"], [877, 3, 1, "", "calc_args"], [877, 3, 1, "", "runAsync"], [877, 3, 1, "", "run_sprkkr"], [877, 3, 1, "", "temporary_dir"]], "ase2sprkkr.common.test.init_tests.extdict": [[883, 3, 1, "", "__init__"]], "ase2sprkkr.common.test.test_common": [[886, 2, 1, "", "TestCommon"]], "ase2sprkkr.common.test.test_common.TestCommon": [[886, 3, 1, "", "__init__"], [886, 3, 1, "", "test_asyncio_file_reader"], [886, 3, 1, "", "test_cached_property"], [886, 3, 1, "", "test_common"]], "ase2sprkkr.common.test.test_grammar_types": [[888, 2, 1, "", "TestGrammar"]], "ase2sprkkr.common.test.test_grammar_types.TestGrammar": [[888, 3, 1, "", "__init__"], [888, 3, 1, "", "_test_types"], [888, 3, 1, "", "test_is_the_same_value"], [888, 3, 1, "", "test_types"]], "ase2sprkkr.common.tools": [[890, 1, 1, "", "append_id_to_filename"], [891, 1, 1, "", "main"], [892, 1, 1, "", "parse_inches"], [893, 1, 1, "", "parse_named_option"], [894, 1, 1, "", "parse_tuple_function"]], "ase2sprkkr.common.unique_values": [[896, 2, 1, "", "UniqueValuesMapping"]], "ase2sprkkr.common.unique_values.UniqueValuesMapping": [[896, 3, 1, "", "__init__"], [896, 3, 1, "", "_create_mapping"], [896, 3, 1, "", "are_equivalent"], [896, 3, 1, "", "from_values"], [896, 3, 1, "", "indexes"], [896, 3, 1, "", "is_equivalent_to"], [896, 3, 1, "", "iter_unique"], [896, 3, 1, "", "len_of_unique"], [896, 4, 1, "", "mapping"], [896, 3, 1, "", "merge"], [896, 3, 1, "", "normalize"], [896, 3, 1, "", "normalized"], [896, 3, 1, "", "unique_indexes"], [896, 3, 1, "", "unique_items"], [896, 4, 1, "", "value_to_class_id"]], "ase2sprkkr.common.value_definitions": [[898, 2, 1, "", "ValueDefinition"]], "ase2sprkkr.common.value_definitions.ValueDefinition": [[898, 3, 1, "", "__init__"], [898, 4, 1, "", "_copy_excluded_args"], [898, 3, 1, "", "_create_grammar"], [898, 3, 1, "", "_generic_info"], [898, 3, 1, "", "_get_copy_args"], [898, 5, 1, "", "_grammar"], [898, 3, 1, "", "_grammar_of_value"], [898, 3, 1, "", "_save_to_file"], [898, 3, 1, "", "added_to_container"], [898, 3, 1, "", "additional_data_description"], [898, 3, 1, "", "allow_duplication"], [898, 5, 1, "", "can_be_repeated"], [898, 4, 1, "", "configuration_type_name"], [898, 3, 1, "", "convert_and_validate"], [898, 3, 1, "", "copy_value"], [898, 3, 1, "", "data_description"], [898, 3, 1, "", "enrich"], [898, 5, 1, "", "formated_name"], [898, 3, 1, "", "get_value"], [898, 4, 1, "", "is_generated"], [898, 5, 1, "", "is_independent_on_the_predecessor"], [898, 4, 1, "", "name_in_grammar"], [898, 3, 1, "", "remove"], [898, 4, 1, "", "result_class"], [898, 4, 1, "", "type_from_type_map"], [898, 3, 1, "", "validate"], [898, 5, 1, "", "value_name_format"], [898, 3, 1, "", "write"], [898, 3, 1, "", "write_name"], [898, 3, 1, "", "write_value"]], "ase2sprkkr.common.warnings": [[900, 6, 1, "", "DataValidityWarning"]], "ase2sprkkr.config": [[902, 7, 1, "", "calculator_parameters"], [903, 7, 1, "", "sprkkr_executable_suffix"]], "ase2sprkkr.examples": [[905, 0, 0, "-", "A1_Fe_scf_simple"], [908, 0, 0, "-", "A2_Fe_scf_input_modifications"], [911, 0, 0, "-", "A3_Fe_dos"], [914, 0, 0, "-", "A4_CPA_Example"], [917, 0, 0, "-", "A5_Al_EOS"], [920, 0, 0, "-", "A6_Cu_MSSPEC"], [923, 0, 0, "-", "A7_SrTiO3_MSSPEC"], [926, 0, 0, "-", "A8_ARPES_and_plotting"]], "ase2sprkkr.examples.A1_Fe_scf_simple": [[906, 0, 0, "-", "Fe"]], "ase2sprkkr.examples.A1_Fe_scf_simple.Fe": [[907, 1, 1, "", "main"]], "ase2sprkkr.examples.A2_Fe_scf_input_modifications": [[909, 0, 0, "-", "Fe"]], "ase2sprkkr.examples.A2_Fe_scf_input_modifications.Fe": [[910, 1, 1, "", "main"]], "ase2sprkkr.examples.A3_Fe_dos": [[912, 0, 0, "-", "Fe"]], "ase2sprkkr.examples.A3_Fe_dos.Fe": [[913, 1, 1, "", "main"]], "ase2sprkkr.examples.A4_CPA_Example": [[915, 0, 0, "-", "Ni_doped_STO"]], "ase2sprkkr.examples.A4_CPA_Example.Ni_doped_STO": [[916, 1, 1, "", "main"]], "ase2sprkkr.examples.A5_Al_EOS": [[918, 0, 0, "-", "Al"]], "ase2sprkkr.examples.A5_Al_EOS.Al": [[919, 1, 1, "", "main"]], "ase2sprkkr.examples.A6_Cu_MSSPEC": [[921, 0, 0, "-", "Cu"]], "ase2sprkkr.examples.A6_Cu_MSSPEC.Cu": [[922, 1, 1, "", "main"]], "ase2sprkkr.examples.A7_SrTiO3_MSSPEC": [[924, 0, 0, "-", "STO"]], "ase2sprkkr.examples.A7_SrTiO3_MSSPEC.STO": [[925, 1, 1, "", "main"]], "ase2sprkkr.examples.A8_ARPES_and_plotting": [[927, 0, 0, "-", "arpes"]], "ase2sprkkr.examples.A8_ARPES_and_plotting.arpes": [[928, 1, 1, "", "main"]], "ase2sprkkr.input_parameters": [[930, 0, 0, "-", "definitions"], [958, 0, 0, "-", "input_parameters"], [961, 0, 0, "-", "input_parameters_definitions"], [965, 0, 0, "-", "test"]], "ase2sprkkr.input_parameters.definitions": [[931, 0, 0, "-", "arpes"], [933, 0, 0, "-", "bsf"], [935, 0, 0, "-", "dos"], [937, 0, 0, "-", "gilbert"], [939, 0, 0, "-", "jxc"], [941, 0, 0, "-", "marpes"], [942, 0, 0, "-", "phagen"], [944, 0, 0, "-", "scf"], [946, 0, 0, "-", "sections"]], "ase2sprkkr.input_parameters.definitions.arpes": [[932, 7, 1, "", "input_parameters"]], "ase2sprkkr.input_parameters.definitions.bsf": [[934, 7, 1, "", "input_parameters"]], "ase2sprkkr.input_parameters.definitions.dos": [[936, 7, 1, "", "input_parameters"]], "ase2sprkkr.input_parameters.definitions.gilbert": [[938, 7, 1, "", "input_parameters"]], "ase2sprkkr.input_parameters.definitions.jxc": [[940, 7, 1, "", "input_parameters"]], "ase2sprkkr.input_parameters.definitions.phagen": [[943, 7, 1, "", "input_parameters"]], "ase2sprkkr.input_parameters.definitions.scf": [[945, 7, 1, "", "input_parameters"]], "ase2sprkkr.input_parameters.definitions.sections": [[947, 1, 1, "", "CONTROL"], [948, 7, 1, "", "CPA"], [949, 7, 1, "", "ENERGY"], [950, 7, 1, "", "MODE"], [951, 7, 1, "", "SCF"], [952, 7, 1, "", "SITES"], [953, 7, 1, "", "STRCONST"], [954, 1, 1, "", "TASK"], [955, 7, 1, "", "TAU"], [956, 2, 1, "", "TauSection"], [957, 1, 1, "", "_nktab_value"]], "ase2sprkkr.input_parameters.definitions.sections.TauSection": [[956, 3, 1, "", "__init__"], [956, 4, 1, "", "_copy_args"], [956, 3, 1, "", "set_from_atoms"]], "ase2sprkkr.input_parameters.input_parameters": [[959, 2, 1, "", "InputParameters"], [960, 2, 1, "", "InputSection"]], "ase2sprkkr.input_parameters.input_parameters.InputParameters": [[959, 3, 1, "", "__init__"], [959, 4, 1, "", "_default_mpi_runner"], [959, 3, 1, "", "calculate"], [959, 3, 1, "", "change_task"], [959, 3, 1, "", "create"], [959, 3, 1, "", "create_input_parameters"], [959, 3, 1, "", "default_mpi_runner"], [959, 3, 1, "", "default_parameters"], [959, 4, 1, "", "definitions"], [959, 3, 1, "", "executable_params"], [959, 3, 1, "", "from_file"], [959, 3, 1, "", "is_it_a_input_parameters_name"], [959, 3, 1, "", "is_mpi"], [959, 3, 1, "", "mpi_runner"], [959, 3, 1, "", "read_output_from_file"], [959, 3, 1, "", "resolve_executable_suffix"], [959, 3, 1, "", "result_reader"], [959, 3, 1, "", "run_process"], [959, 3, 1, "", "save_to_file"], [959, 3, 1, "", "set_option"], [959, 3, 1, "", "task_definition"], [959, 5, 1, "", "task_name"]], "ase2sprkkr.input_parameters.input_parameters.InputSection": [[960, 3, 1, "", "__init__"]], "ase2sprkkr.input_parameters.input_parameters_definitions": [[962, 2, 1, "", "InputParametersDefinition"], [963, 2, 1, "", "InputSectionDefinition"], [964, 2, 1, "", "InputValueDefinition"]], "ase2sprkkr.input_parameters.input_parameters_definitions.InputParametersDefinition": [[962, 3, 1, "", "__init__"], [962, 4, 1, "", "_copy_args"], [962, 3, 1, "", "_generic_info"], [962, 4, 1, "", "child_class"], [962, 4, 1, "", "configuration_type_name"], [962, 3, 1, "", "custom_class"], [962, 3, 1, "", "custom_value_grammar"], [962, 4, 1, "", "delimiter"], [962, 4, 1, "", "grammar_of_delimiter"], [962, 4, 1, "", "result_class"], [962, 4, 1, "", "save_hook"]], "ase2sprkkr.input_parameters.input_parameters_definitions.InputSectionDefinition": [[963, 3, 1, "", "__init__"], [963, 4, 1, "", "_copy_args"], [963, 4, 1, "", "child_class"], [963, 3, 1, "", "custom_class"], [963, 4, 1, "", "delimiter"], [963, 4, 1, "", "do_not_skip_whitespaces_before_name"], [963, 4, 1, "", "grammar_of_delimiter"], [963, 4, 1, "", "result_class"]], "ase2sprkkr.input_parameters.input_parameters_definitions.InputValueDefinition": [[964, 3, 1, "", "__init__"], [964, 4, 1, "", "_copy_args"], [964, 4, 1, "", "grammar_of_delimiter"], [964, 4, 1, "", "name_value_delimiter"], [964, 4, 1, "", "prefix"], [964, 4, 1, "", "type_from_type_map"], [964, 4, 1, "", "type_of_dangerous"]], "ase2sprkkr.input_parameters.test": [[966, 0, 0, "-", "init_tests"], [975, 0, 0, "-", "test_definitions"], [977, 0, 0, "-", "test_input_parameters"]], "ase2sprkkr.input_parameters.test.init_tests": [[967, 2, 1, "", "TestCase"], [968, 1, 1, "", "arr_testfce"], [969, 1, 1, "", "assertDictEqual"], [970, 1, 1, "", "assertListEqual"], [971, 1, 1, "", "assert_almost_equals"], [972, 1, 1, "", "assert_equals"], [973, 2, 1, "", "extdict"], [974, 1, 1, "", "testfce"]], "ase2sprkkr.input_parameters.test.init_tests.TestCase": [[967, 3, 1, "", "__init__"], [967, 4, 1, "", "_calc_args"], [967, 4, 1, "", "_print_output"], [967, 3, 1, "", "almost_equal_precision"], [967, 3, 1, "", "assertAlmostEqual"], [967, 3, 1, "", "assertAsyncEqual"], [967, 3, 1, "", "assertAsyncRaises"], [967, 3, 1, "", "assertEqual"], [967, 3, 1, "", "assertFalse"], [967, 3, 1, "", "assertIsNone"], [967, 3, 1, "", "assertNotEqual"], [967, 3, 1, "", "assertRaises"], [967, 3, 1, "", "assertTrue"], [967, 3, 1, "", "calc_args"], [967, 3, 1, "", "runAsync"], [967, 3, 1, "", "run_sprkkr"], [967, 3, 1, "", "temporary_dir"]], "ase2sprkkr.input_parameters.test.init_tests.extdict": [[973, 3, 1, "", "__init__"]], "ase2sprkkr.input_parameters.test.test_definitions": [[976, 2, 1, "", "TestDefinitions"]], "ase2sprkkr.input_parameters.test.test_definitions.TestDefinitions": [[976, 3, 1, "", "__init__"], [976, 3, 1, "", "change_task"], [976, 3, 1, "", "jxc"], [976, 3, 1, "", "test_defaults"], [976, 3, 1, "", "test_definitions"]], "ase2sprkkr.input_parameters.test.test_input_parameters": [[978, 2, 1, "", "TestInputParameters"], [979, 1, 1, "", "ar"]], "ase2sprkkr.input_parameters.test.test_input_parameters.TestInputParameters": [[978, 3, 1, "", "__init__"], [978, 3, 1, "", "assertNotValid"], [978, 3, 1, "", "assertParse"], [978, 3, 1, "", "parse"], [978, 3, 1, "", "test_copy"], [978, 3, 1, "", "test_custom_value"], [978, 3, 1, "", "test_dangerous_value"], [978, 3, 1, "", "test_gather"], [978, 3, 1, "", "test_input_parameters_definition"], [978, 3, 1, "", "test_numbered_array"], [978, 3, 1, "", "test_numpy_array"], [978, 3, 1, "", "test_repeated_value"], [978, 3, 1, "", "test_section_delimiter_value"], [978, 3, 1, "", "test_set_values"], [978, 3, 1, "", "test_switch"], [978, 3, 1, "", "test_write_condition"]], "ase2sprkkr.output_files": [[981, 0, 0, "-", "definitions"], [999, 0, 0, "-", "output_files"], [1004, 0, 0, "-", "output_files_definitions"], [1011, 0, 0, "-", "test"]], "ase2sprkkr.output_files.definitions": [[982, 2, 1, "", "Arithmetic"], [983, 2, 1, "", "CommonOutputFile"], [984, 2, 1, "", "OutputFile"], [985, 2, 1, "", "UnknownDataValue"], [986, 0, 0, "-", "bsf"], [990, 0, 0, "-", "dos"], [995, 0, 0, "-", "spc"]], "ase2sprkkr.output_files.definitions.Arithmetic": [[982, 3, 1, "", "__init__"], [982, 3, 1, "", "_check_arithmetic"], [982, 3, 1, "", "_do_arithmetic"]], "ase2sprkkr.output_files.definitions.CommonOutputFile": [[983, 3, 1, "", "__init__"], [983, 3, 1, "", "n_atoms"], [983, 3, 1, "", "n_orbitals"], [983, 3, 1, "", "n_types"], [983, 3, 1, "", "site_type_index"]], "ase2sprkkr.output_files.definitions.OutputFile": [[984, 3, 1, "", "__init__"], [984, 4, 1, "", "definitions"], [984, 3, 1, "", "from_file"], [984, 4, 1, "", "unknown_output_file_definition"]], "ase2sprkkr.output_files.definitions.UnknownDataValue": [[985, 3, 1, "", "__init__"], [985, 3, 1, "", "as_array"]], "ase2sprkkr.output_files.definitions.bsf": [[987, 2, 1, "", "BSFDefinition"], [988, 2, 1, "", "BSFOutputFile"], [989, 1, 1, "", "create_definition"]], "ase2sprkkr.output_files.definitions.bsf.BSFDefinition": [[987, 3, 1, "", "__init__"], [987, 4, 1, "", "result_class"]], "ase2sprkkr.output_files.definitions.bsf.BSFOutputFile": [[988, 3, 1, "", "__init__"], [988, 4, 1, "", "_arithmetic_values"], [988, 3, 1, "", "_assert_arithmetic"], [988, 3, 1, "", "plot"]], "ase2sprkkr.output_files.definitions.dos": [[991, 2, 1, "", "DOS"], [992, 2, 1, "", "DOSDefinition"], [993, 2, 1, "", "DOSOutputFile"], [994, 1, 1, "", "create_definition"]], "ase2sprkkr.output_files.definitions.dos.DOS": [[991, 3, 1, "", "__init__"], [991, 3, 1, "", "_check_arithmetic"], [991, 3, 1, "", "_do_arithmetic"], [991, 3, 1, "", "copy"], [991, 3, 1, "", "plot"], [991, 5, 1, "", "shape"]], "ase2sprkkr.output_files.definitions.dos.DOSDefinition": [[992, 3, 1, "", "__init__"], [992, 4, 1, "", "result_class"]], "ase2sprkkr.output_files.definitions.dos.DOSOutputFile": [[993, 3, 1, "", "__init__"], [993, 3, 1, "", "_clear_computed"], [993, 3, 1, "", "_create_dos"], [993, 3, 1, "", "_resolve_spin"], [993, 3, 1, "", "dos_for_site_type"], [993, 5, 1, "", "energy"], [993, 3, 1, "", "index_of_dos_for_site_type"], [993, 3, 1, "", "iterate_data_slices"], [993, 3, 1, "", "iterate_dos"], [993, 3, 1, "", "n_orbitals_for"], [993, 3, 1, "", "n_spins"], [993, 3, 1, "", "plot"], [993, 3, 1, "", "total_dos"]], "ase2sprkkr.output_files.definitions.spc": [[996, 2, 1, "", "ARPESDefinition"], [997, 2, 1, "", "ARPESOutputFile"], [998, 1, 1, "", "create_definition"]], "ase2sprkkr.output_files.definitions.spc.ARPESDefinition": [[996, 3, 1, "", "__init__"], [996, 4, 1, "", "result_class"]], "ase2sprkkr.output_files.definitions.spc.ARPESOutputFile": [[997, 3, 1, "", "__init__"], [997, 4, 1, "", "_arithmetic_values"], [997, 3, 1, "", "_assert_arithmetic"], [997, 3, 1, "", "plot"]], "ase2sprkkr.output_files.output_files": [[1000, 2, 1, "", "Arithmetic"], [1001, 2, 1, "", "CommonOutputFile"], [1002, 2, 1, "", "OutputFile"], [1003, 2, 1, "", "UnknownDataValue"]], "ase2sprkkr.output_files.output_files.Arithmetic": [[1000, 3, 1, "", "__init__"], [1000, 3, 1, "", "_check_arithmetic"], [1000, 3, 1, "", "_do_arithmetic"]], "ase2sprkkr.output_files.output_files.CommonOutputFile": [[1001, 3, 1, "", "__init__"], [1001, 3, 1, "", "n_atoms"], [1001, 3, 1, "", "n_orbitals"], [1001, 3, 1, "", "n_types"], [1001, 3, 1, "", "site_type_index"]], "ase2sprkkr.output_files.output_files.OutputFile": [[1002, 3, 1, "", "__init__"], [1002, 4, 1, "", "definitions"], [1002, 3, 1, "", "from_file"], [1002, 4, 1, "", "unknown_output_file_definition"]], "ase2sprkkr.output_files.output_files.UnknownDataValue": [[1003, 3, 1, "", "__init__"], [1003, 3, 1, "", "as_array"]], "ase2sprkkr.output_files.output_files_definitions": [[1005, 2, 1, "", "BlankSeparator"], [1006, 2, 1, "", "OutputFileDefinition"], [1007, 2, 1, "", "OutputFileValueDefinition"], [1008, 2, 1, "", "Separator"], [1009, 1, 1, "", "create_output_file_definition"], [1010, 1, 1, "", "output_file_header"]], "ase2sprkkr.output_files.output_files_definitions.BlankSeparator": [[1005, 3, 1, "", "__init__"], [1005, 4, 1, "", "separator_type"]], "ase2sprkkr.output_files.output_files_definitions.OutputFileDefinition": [[1006, 3, 1, "", "__init__"], [1006, 3, 1, "", "add_ignored"], [1006, 4, 1, "", "child_class"], [1006, 4, 1, "", "configuration_type_name"], [1006, 4, 1, "", "custom_class"], [1006, 4, 1, "", "delimiter"], [1006, 4, 1, "", "force_order"], [1006, 4, 1, "", "grammar_of_delimiter"], [1006, 4, 1, "", "result_class"], [1006, 4, 1, "", "value_name_format"]], "ase2sprkkr.output_files.output_files_definitions.OutputFileValueDefinition": [[1007, 3, 1, "", "__init__"], [1007, 4, 1, "", "grammar_of_delimiter"], [1007, 4, 1, "", "name_value_delimiter"], [1007, 4, 1, "", "prefix"], [1007, 4, 1, "", "type_from_type_map"], [1007, 4, 1, "", "type_of_dangerous"]], "ase2sprkkr.output_files.output_files_definitions.Separator": [[1008, 3, 1, "", "__init__"], [1008, 4, 1, "", "separator_type"]], "ase2sprkkr.output_files.test": [[1012, 0, 0, "-", "init_tests"], [1021, 0, 0, "-", "test_files"]], "ase2sprkkr.output_files.test.init_tests": [[1013, 2, 1, "", "TestCase"], [1014, 1, 1, "", "arr_testfce"], [1015, 1, 1, "", "assertDictEqual"], [1016, 1, 1, "", "assertListEqual"], [1017, 1, 1, "", "assert_almost_equals"], [1018, 1, 1, "", "assert_equals"], [1019, 2, 1, "", "extdict"], [1020, 1, 1, "", "testfce"]], "ase2sprkkr.output_files.test.init_tests.TestCase": [[1013, 3, 1, "", "__init__"], [1013, 4, 1, "", "_calc_args"], [1013, 4, 1, "", "_print_output"], [1013, 3, 1, "", "almost_equal_precision"], [1013, 3, 1, "", "assertAlmostEqual"], [1013, 3, 1, "", "assertAsyncEqual"], [1013, 3, 1, "", "assertAsyncRaises"], [1013, 3, 1, "", "assertEqual"], [1013, 3, 1, "", "assertFalse"], [1013, 3, 1, "", "assertIsNone"], [1013, 3, 1, "", "assertNotEqual"], [1013, 3, 1, "", "assertRaises"], [1013, 3, 1, "", "assertTrue"], [1013, 3, 1, "", "calc_args"], [1013, 3, 1, "", "runAsync"], [1013, 3, 1, "", "run_sprkkr"], [1013, 3, 1, "", "temporary_dir"]], "ase2sprkkr.output_files.test.init_tests.extdict": [[1019, 3, 1, "", "__init__"]], "ase2sprkkr.output_files.test.test_files": [[1022, 2, 1, "", "TestOutput"]], "ase2sprkkr.output_files.test.test_files.TestOutput": [[1022, 3, 1, "", "__init__"], [1022, 3, 1, "", "test_output"]], "ase2sprkkr.outputs": [[1024, 0, 0, "-", "output_definitions"], [1029, 0, 0, "-", "readers"], [1043, 0, 0, "-", "task_result"], [1046, 0, 0, "-", "test"]], "ase2sprkkr.outputs.output_definitions": [[1025, 2, 1, "", "OutputNonameValueDefinition"], [1026, 2, 1, "", "OutputSectionDefinition"], [1027, 2, 1, "", "OutputValueDefinition"], [1028, 2, 1, "", "OutputValueEqualDefinition"]], "ase2sprkkr.outputs.output_definitions.OutputNonameValueDefinition": [[1025, 3, 1, "", "__init__"], [1025, 4, 1, "", "name_in_grammar"]], "ase2sprkkr.outputs.output_definitions.OutputSectionDefinition": [[1026, 3, 1, "", "__init__"], [1026, 4, 1, "", "child_class"], [1026, 4, 1, "", "custom_class"], [1026, 4, 1, "", "delimiter"], [1026, 4, 1, "", "force_order"], [1026, 4, 1, "", "grammar_of_delimiter"], [1026, 4, 1, "", "name_in_grammar"]], "ase2sprkkr.outputs.output_definitions.OutputValueDefinition": [[1027, 3, 1, "", "__init__"], [1027, 4, 1, "", "grammar_of_delimiter"], [1027, 4, 1, "", "prefix"]], "ase2sprkkr.outputs.output_definitions.OutputValueEqualDefinition": [[1028, 3, 1, "", "__init__"], [1028, 4, 1, "", "grammar_of_delimiter"], [1028, 4, 1, "", "name_value_delimiter"]], "ase2sprkkr.outputs.readers": [[1030, 0, 0, "-", "arpes"], [1033, 0, 0, "-", "default"], [1037, 0, 0, "-", "scf"]], "ase2sprkkr.outputs.readers.arpes": [[1031, 2, 1, "", "ArpesProcess"], [1032, 2, 1, "", "ArpesResult"]], "ase2sprkkr.outputs.readers.arpes.ArpesProcess": [[1031, 3, 1, "", "__init__"], [1031, 4, 1, "", "reader_class"], [1031, 4, 1, "", "result_class"]], "ase2sprkkr.outputs.readers.arpes.ArpesResult": [[1032, 3, 1, "", "__init__"], [1032, 5, 1, "", "spc"], [1032, 5, 1, "", "spc_filename"]], "ase2sprkkr.outputs.readers.default": [[1034, 2, 1, "", "DefaultOutputReader"], [1035, 2, 1, "", "DefaultProcess"], [1036, 2, 1, "", "DefaultResult"]], "ase2sprkkr.outputs.readers.default.DefaultOutputReader": [[1034, 3, 1, "", "__init__"], [1034, 3, 1, "", "read_output"]], "ase2sprkkr.outputs.readers.default.DefaultProcess": [[1035, 3, 1, "", "__init__"], [1035, 4, 1, "", "reader_class"], [1035, 4, 1, "", "result_class"]], "ase2sprkkr.outputs.readers.default.DefaultResult": [[1036, 3, 1, "", "__init__"]], "ase2sprkkr.outputs.readers.scf": [[1038, 2, 1, "", "RealOrStars"], [1039, 2, 1, "", "ScfOutputReader"], [1040, 2, 1, "", "ScfProcess"], [1041, 2, 1, "", "ScfResult"], [1042, 7, 1, "", "atomic_types_definition"]], "ase2sprkkr.outputs.readers.scf.RealOrStars": [[1038, 3, 1, "", "__init__"], [1038, 4, 1, "", "_grammar"]], "ase2sprkkr.outputs.readers.scf.ScfOutputReader": [[1039, 3, 1, "", "__init__"], [1039, 3, 1, "", "read_output"]], "ase2sprkkr.outputs.readers.scf.ScfProcess": [[1040, 3, 1, "", "__init__"], [1040, 4, 1, "", "reader_class"], [1040, 4, 1, "", "result_class"]], "ase2sprkkr.outputs.readers.scf.ScfResult": [[1041, 3, 1, "", "__init__"], [1041, 5, 1, "", "calculator"], [1041, 5, 1, "", "converged"], [1041, 5, 1, "", "energies"], [1041, 5, 1, "", "energy"], [1041, 3, 1, "", "iteration_values"], [1041, 5, 1, "", "iterations"], [1041, 5, 1, "", "last_iteration"], [1041, 3, 1, "", "new_task"], [1041, 3, 1, "", "plot"], [1041, 5, 1, "", "potential"], [1041, 5, 1, "", "potential_filename"]], "ase2sprkkr.outputs.task_result": [[1044, 2, 1, "", "KkrProcess"], [1045, 2, 1, "", "TaskResult"]], "ase2sprkkr.outputs.task_result.KkrProcess": [[1044, 3, 1, "", "__init__"], [1044, 3, 1, "", "_wraps"], [1044, 4, 1, "", "calculator"], [1044, 4, 1, "", "directory"], [1044, 4, 1, "", "input_parameters"], [1044, 3, 1, "", "read_from_file"], [1044, 3, 1, "", "run"]], "ase2sprkkr.outputs.task_result.TaskResult": [[1045, 3, 1, "", "__init__"], [1045, 5, 1, "", "atoms"]], "ase2sprkkr.outputs.test": [[1047, 0, 0, "-", "init_tests"], [1056, 0, 0, "-", "test_output"]], "ase2sprkkr.outputs.test.init_tests": [[1048, 2, 1, "", "TestCase"], [1049, 1, 1, "", "arr_testfce"], [1050, 1, 1, "", "assertDictEqual"], [1051, 1, 1, "", "assertListEqual"], [1052, 1, 1, "", "assert_almost_equals"], [1053, 1, 1, "", "assert_equals"], [1054, 2, 1, "", "extdict"], [1055, 1, 1, "", "testfce"]], "ase2sprkkr.outputs.test.init_tests.TestCase": [[1048, 3, 1, "", "__init__"], [1048, 4, 1, "", "_calc_args"], [1048, 4, 1, "", "_print_output"], [1048, 3, 1, "", "almost_equal_precision"], [1048, 3, 1, "", "assertAlmostEqual"], [1048, 3, 1, "", "assertAsyncEqual"], [1048, 3, 1, "", "assertAsyncRaises"], [1048, 3, 1, "", "assertEqual"], [1048, 3, 1, "", "assertFalse"], [1048, 3, 1, "", "assertIsNone"], [1048, 3, 1, "", "assertNotEqual"], [1048, 3, 1, "", "assertRaises"], [1048, 3, 1, "", "assertTrue"], [1048, 3, 1, "", "calc_args"], [1048, 3, 1, "", "runAsync"], [1048, 3, 1, "", "run_sprkkr"], [1048, 3, 1, "", "temporary_dir"]], "ase2sprkkr.outputs.test.init_tests.extdict": [[1054, 3, 1, "", "__init__"]], "ase2sprkkr.outputs.test.test_output": [[1057, 2, 1, "", "TestOutput"]], "ase2sprkkr.outputs.test.test_output.TestOutput": [[1057, 3, 1, "", "__init__"], [1057, 3, 1, "", "test_output"], [1057, 3, 1, "", "test_scf"]], "ase2sprkkr.physics": [[1059, 0, 0, "-", "lattice_data"], [1063, 0, 0, "-", "winger_seitz_radii"]], "ase2sprkkr.physics.lattice_data": [[1060, 2, 1, "", "LatticeData"], [1061, 2, 1, "", "Pearson"], [1062, 7, 1, "", "international_numbers_to_AP"]], "ase2sprkkr.physics.lattice_data.LatticeData": [[1060, 3, 1, "", "__init__"], [1060, 5, 1, "", "bravais_number"], [1060, 5, 1, "", "shoenflies_symbol"]], "ase2sprkkr.physics.lattice_data.Pearson": [[1061, 3, 1, "", "__init__"], [1061, 3, 1, "", "from_symbol"], [1061, 3, 1, "", "normalize_symbol"], [1061, 4, 1, "", "pearson"], [1061, 4, 1, "", "pearsons"], [1061, 3, 1, "", "xband_data"]], "ase2sprkkr.physics.winger_seitz_radii": [[1064, 7, 1, "", "winger_seitz_radii"]], "ase2sprkkr.potentials": [[1066, 0, 0, "-", "custom_potential_section"], [1071, 0, 0, "-", "definitions"], [1131, 0, 0, "-", "potential_definitions"], [1137, 0, 0, "-", "potential_sections"], [1143, 0, 0, "-", "potentials"], [1145, 0, 0, "-", "test"]], "ase2sprkkr.potentials.custom_potential_section": [[1067, 2, 1, "", "CustomPotentialSection"], [1068, 2, 1, "", "CustomPotentialSectionDefinition"], [1069, 2, 1, "", "CustomSectionToken"], [1070, 2, 1, "", "SectionString"]], "ase2sprkkr.potentials.custom_potential_section.CustomPotentialSection": [[1067, 3, 1, "", "__init__"], [1067, 3, 1, "", "_depends_on"], [1067, 3, 1, "", "_set_from_atoms"], [1067, 3, 1, "", "_update_atoms"], [1067, 3, 1, "", "reset"]], "ase2sprkkr.potentials.custom_potential_section.CustomPotentialSectionDefinition": [[1068, 3, 1, "", "__init__"], [1068, 4, 1, "", "mandatory"], [1068, 4, 1, "", "name_value_delimiter"], [1068, 4, 1, "", "prefix"]], "ase2sprkkr.potentials.custom_potential_section.CustomSectionToken": [[1069, 3, 1, "", "__init__"], [1069, 4, 1, "", "_abc_impl"], [1069, 4, 1, "", "name"], [1069, 3, 1, "", "parseImpl"], [1069, 4, 1, "", "pattern"]], "ase2sprkkr.potentials.custom_potential_section.SectionString": [[1070, 4, 1, "", "I"], [1070, 3, 1, "", "__init__"], [1070, 4, 1, "", "_grammar"], [1070, 4, 1, "", "delimiter_pattern"], [1070, 3, 1, "", "grammar_name"], [1070, 4, 1, "", "grammar_of_delimiter"], [1070, 3, 1, "", "write"]], "ase2sprkkr.potentials.definitions": [[1072, 0, 0, "-", "potential"], [1074, 0, 0, "-", "sections"]], "ase2sprkkr.potentials.definitions.potential": [[1073, 7, 1, "", "potential_definition"]], "ase2sprkkr.potentials.definitions.sections": [[1075, 1, 1, "", "_sections"], [1076, 0, 0, "-", "charge"], [1081, 0, 0, "-", "charge_moments"], [1085, 0, 0, "-", "global_system_parameter"], [1089, 0, 0, "-", "host_madelung_potential"], [1093, 0, 0, "-", "lattice"], [1097, 0, 0, "-", "mesh_information"], [1101, 0, 0, "-", "moments"], [1106, 0, 0, "-", "occupation"], [1110, 0, 0, "-", "potential"], [1115, 0, 0, "-", "reference_system"], [1119, 0, 0, "-", "scf_info"], [1123, 0, 0, "-", "sites"], [1127, 0, 0, "-", "types"]], "ase2sprkkr.potentials.definitions.sections.charge": [[1077, 2, 1, "", "ChargeSection"], [1078, 2, 1, "", "ChargeSectionDefinition"], [1079, 2, 1, "", "ChargesSection"], [1080, 4, 1, "", "section"]], "ase2sprkkr.potentials.definitions.sections.charge.ChargeSection": [[1077, 3, 1, "", "__init__"]], "ase2sprkkr.potentials.definitions.sections.charge.ChargeSectionDefinition": [[1078, 3, 1, "", "__init__"], [1078, 4, 1, "", "repeated_class"], [1078, 4, 1, "", "result_class"]], "ase2sprkkr.potentials.definitions.sections.charge.ChargesSection": [[1079, 3, 1, "", "__init__"], [1079, 3, 1, "", "_depends_on"], [1079, 3, 1, "", "_set_from_atoms"], [1079, 3, 1, "", "_update_atoms"]], "ase2sprkkr.potentials.definitions.sections.charge_moments": [[1082, 2, 1, "", "ChargeMomentsSection"], [1083, 2, 1, "", "ChargeMomentsSectionDefinition"], [1084, 4, 1, "", "section"]], "ase2sprkkr.potentials.definitions.sections.charge_moments.ChargeMomentsSection": [[1082, 3, 1, "", "__init__"]], "ase2sprkkr.potentials.definitions.sections.charge_moments.ChargeMomentsSectionDefinition": [[1083, 3, 1, "", "__init__"], [1083, 4, 1, "", "array_name"], [1083, 4, 1, "", "result_class"]], "ase2sprkkr.potentials.definitions.sections.global_system_parameter": [[1086, 2, 1, "", "GlobalSystemParameter"], [1087, 2, 1, "", "GlobalSystemParameterDefinition"], [1088, 4, 1, "", "section"]], "ase2sprkkr.potentials.definitions.sections.global_system_parameter.GlobalSystemParameter": [[1086, 3, 1, "", "__init__"], [1086, 3, 1, "", "_set_from_atoms"]], "ase2sprkkr.potentials.definitions.sections.global_system_parameter.GlobalSystemParameterDefinition": [[1087, 3, 1, "", "__init__"], [1087, 4, 1, "", "result_class"]], "ase2sprkkr.potentials.definitions.sections.host_madelung_potential": [[1090, 2, 1, "", "HostMadelungPotentialSection"], [1091, 2, 1, "", "HostMadelungPotentialSectionDefinition"], [1092, 4, 1, "", "section"]], "ase2sprkkr.potentials.definitions.sections.host_madelung_potential.HostMadelungPotentialSection": [[1090, 3, 1, "", "__init__"]], "ase2sprkkr.potentials.definitions.sections.host_madelung_potential.HostMadelungPotentialSectionDefinition": [[1091, 3, 1, "", "__init__"], [1091, 4, 1, "", "array_name"], [1091, 4, 1, "", "result_class"]], "ase2sprkkr.potentials.definitions.sections.lattice": [[1094, 2, 1, "", "LatticeSection"], [1095, 2, 1, "", "LatticeSectionDefinition"], [1096, 4, 1, "", "section"]], "ase2sprkkr.potentials.definitions.sections.lattice.LatticeSection": [[1094, 3, 1, "", "__init__"], [1094, 3, 1, "", "_set_from_atoms"], [1094, 3, 1, "", "_update_atoms"]], "ase2sprkkr.potentials.definitions.sections.lattice.LatticeSectionDefinition": [[1095, 3, 1, "", "__init__"], [1095, 4, 1, "", "result_class"], [1095, 3, 1, "", "validate"]], "ase2sprkkr.potentials.definitions.sections.mesh_information": [[1098, 2, 1, "", "MeshInformationSection"], [1099, 2, 1, "", "MeshInformationSectionDefinition"], [1100, 4, 1, "", "section"]], "ase2sprkkr.potentials.definitions.sections.mesh_information.MeshInformationSection": [[1098, 3, 1, "", "__init__"], [1098, 4, 1, "", "_value_class"], [1098, 4, 1, "", "_value_name"]], "ase2sprkkr.potentials.definitions.sections.mesh_information.MeshInformationSectionDefinition": [[1099, 3, 1, "", "__init__"], [1099, 4, 1, "", "result_class"]], "ase2sprkkr.potentials.definitions.sections.moments": [[1102, 2, 1, "", "MomentSection"], [1103, 2, 1, "", "MomentsSection"], [1104, 2, 1, "", "MomentsSectionDefinition"], [1105, 4, 1, "", "section"]], "ase2sprkkr.potentials.definitions.sections.moments.MomentSection": [[1102, 3, 1, "", "__init__"]], "ase2sprkkr.potentials.definitions.sections.moments.MomentsSection": [[1103, 3, 1, "", "__init__"], [1103, 3, 1, "", "_depends_on"], [1103, 3, 1, "", "_set_from_atoms"], [1103, 3, 1, "", "_update_atoms"]], "ase2sprkkr.potentials.definitions.sections.moments.MomentsSectionDefinition": [[1104, 3, 1, "", "__init__"], [1104, 4, 1, "", "repeated_class"], [1104, 4, 1, "", "result_class"]], "ase2sprkkr.potentials.definitions.sections.occupation": [[1107, 2, 1, "", "OccupationSection"], [1108, 2, 1, "", "OccupationSectionDefinition"], [1109, 4, 1, "", "section"]], "ase2sprkkr.potentials.definitions.sections.occupation.OccupationSection": [[1107, 3, 1, "", "__init__"], [1107, 3, 1, "", "_set_from_atoms"], [1107, 3, 1, "", "_update_atoms"]], "ase2sprkkr.potentials.definitions.sections.occupation.OccupationSectionDefinition": [[1108, 3, 1, "", "__init__"], [1108, 3, 1, "", "depends_on"], [1108, 4, 1, "", "result_class"]], "ase2sprkkr.potentials.definitions.sections.potential": [[1111, 2, 1, "", "PotentialSection"], [1112, 2, 1, "", "PotentialSectionDefinition"], [1113, 2, 1, "", "PotentialsSection"], [1114, 4, 1, "", "section"]], "ase2sprkkr.potentials.definitions.sections.potential.PotentialSection": [[1111, 3, 1, "", "__init__"]], "ase2sprkkr.potentials.definitions.sections.potential.PotentialSectionDefinition": [[1112, 3, 1, "", "__init__"], [1112, 4, 1, "", "repeated_class"], [1112, 4, 1, "", "result_class"]], "ase2sprkkr.potentials.definitions.sections.potential.PotentialsSection": [[1113, 3, 1, "", "__init__"], [1113, 3, 1, "", "_depends_on"], [1113, 3, 1, "", "_set_from_atoms"], [1113, 3, 1, "", "_update_atoms"]], "ase2sprkkr.potentials.definitions.sections.reference_system": [[1116, 2, 1, "", "ReferenceSystemSection"], [1117, 2, 1, "", "ReferenceSystemSectionDefinition"], [1118, 4, 1, "", "section"]], "ase2sprkkr.potentials.definitions.sections.reference_system.ReferenceSystemSection": [[1116, 3, 1, "", "__init__"], [1116, 3, 1, "", "_set_from_atoms"], [1116, 4, 1, "", "_value_class"], [1116, 4, 1, "", "_value_name"]], "ase2sprkkr.potentials.definitions.sections.reference_system.ReferenceSystemSectionDefinition": [[1117, 3, 1, "", "__init__"], [1117, 4, 1, "", "result_class"], [1117, 3, 1, "", "validate"]], "ase2sprkkr.potentials.definitions.sections.scf_info": [[1120, 2, 1, "", "ScfInfoSection"], [1121, 2, 1, "", "ScfInfoSectionDefinition"], [1122, 4, 1, "", "section"]], "ase2sprkkr.potentials.definitions.sections.scf_info.ScfInfoSection": [[1120, 3, 1, "", "__init__"], [1120, 3, 1, "", "_depends_on"], [1120, 3, 1, "", "_set_from_atoms"], [1120, 3, 1, "", "_update_atoms"]], "ase2sprkkr.potentials.definitions.sections.scf_info.ScfInfoSectionDefinition": [[1121, 3, 1, "", "__init__"], [1121, 4, 1, "", "result_class"]], "ase2sprkkr.potentials.definitions.sections.sites": [[1124, 2, 1, "", "SitesSection"], [1125, 2, 1, "", "SitesSectionDefinition"], [1126, 4, 1, "", "section"]], "ase2sprkkr.potentials.definitions.sections.sites.SitesSection": [[1124, 3, 1, "", "__init__"], [1124, 3, 1, "", "_depends_on"], [1124, 3, 1, "", "_set_from_atoms"], [1124, 3, 1, "", "_update_atoms"]], "ase2sprkkr.potentials.definitions.sections.sites.SitesSectionDefinition": [[1125, 3, 1, "", "__init__"], [1125, 4, 1, "", "result_class"]], "ase2sprkkr.potentials.definitions.sections.types": [[1128, 2, 1, "", "TypesSection"], [1129, 2, 1, "", "TypesSectionDefinition"], [1130, 4, 1, "", "section"]], "ase2sprkkr.potentials.definitions.sections.types.TypesSection": [[1128, 3, 1, "", "__init__"], [1128, 4, 1, "", "_value_class"], [1128, 4, 1, "", "_value_name"]], "ase2sprkkr.potentials.definitions.sections.types.TypesSectionDefinition": [[1129, 3, 1, "", "__init__"], [1129, 4, 1, "", "result_class"]], "ase2sprkkr.potentials.potential_definitions": [[1132, 2, 1, "", "ASEArraySectionDefinition"], [1133, 2, 1, "", "PotSectionDefinition"], [1134, 2, 1, "", "PotValueDefinition"], [1135, 2, 1, "", "PotentialDefinition"], [1136, 2, 1, "", "Separator"]], "ase2sprkkr.potentials.potential_definitions.ASEArraySectionDefinition": [[1132, 3, 1, "", "__init__"], [1132, 3, 1, "", "depends_on"], [1132, 4, 1, "", "result_class"]], "ase2sprkkr.potentials.potential_definitions.PotSectionDefinition": [[1133, 3, 1, "", "__init__"], [1133, 4, 1, "", "child_class"], [1133, 3, 1, "", "custom_class"], [1133, 4, 1, "", "delimiter"], [1133, 3, 1, "", "depends_on"], [1133, 4, 1, "", "force_order"], [1133, 4, 1, "", "grammar_of_delimiter"], [1133, 4, 1, "", "result_class"], [1133, 4, 1, "", "value_name_format"]], "ase2sprkkr.potentials.potential_definitions.PotValueDefinition": [[1134, 3, 1, "", "__init__"], [1134, 4, 1, "", "grammar_of_delimiter"], [1134, 4, 1, "", "name_value_delimiter"], [1134, 4, 1, "", "prefix"], [1134, 4, 1, "", "type_of_dangerous"]], "ase2sprkkr.potentials.potential_definitions.PotentialDefinition": [[1135, 3, 1, "", "__init__"], [1135, 3, 1, "", "_generic_info"], [1135, 4, 1, "", "child_class"], [1135, 4, 1, "", "configuration_type_name"], [1135, 4, 1, "", "custom_class"], [1135, 4, 1, "", "custom_name_characters"], [1135, 3, 1, "", "custom_value_grammar"], [1135, 4, 1, "", "delimiter"], [1135, 4, 1, "", "force_order"], [1135, 4, 1, "", "grammar_of_delimiter"], [1135, 4, 1, "", "result_class"]], "ase2sprkkr.potentials.potential_definitions.Separator": [[1136, 3, 1, "", "__init__"], [1136, 4, 1, "", "separator_type"]], "ase2sprkkr.potentials.potential_sections": [[1138, 2, 1, "", "ASEArraySection"], [1139, 2, 1, "", "PotentialSection"], [1140, 2, 1, "", "PotentialSectionTrait"], [1141, 2, 1, "", "RepeatedPotentialSection"], [1142, 2, 1, "", "UniqueListSection"]], "ase2sprkkr.potentials.potential_sections.ASEArraySection": [[1138, 3, 1, "", "__init__"], [1138, 3, 1, "", "_depends_on"], [1138, 3, 1, "", "_set_from_atoms"], [1138, 3, 1, "", "_update_atoms"], [1138, 3, 1, "", "has_any_value"]], "ase2sprkkr.potentials.potential_sections.PotentialSection": [[1139, 3, 1, "", "__init__"]], "ase2sprkkr.potentials.potential_sections.PotentialSectionTrait": [[1140, 3, 1, "", "__init__"], [1140, 3, 1, "", "_depends_on"], [1140, 3, 1, "", "_set_from_atoms"], [1140, 3, 1, "", "_update_atoms"], [1140, 3, 1, "", "reset"]], "ase2sprkkr.potentials.potential_sections.RepeatedPotentialSection": [[1141, 3, 1, "", "__init__"]], "ase2sprkkr.potentials.potential_sections.UniqueListSection": [[1142, 3, 1, "", "__init__"], [1142, 3, 1, "", "_set_from_atoms"], [1142, 3, 1, "", "_update_atoms"], [1142, 4, 1, "", "_value_class"], [1142, 4, 1, "", "_value_name"]], "ase2sprkkr.potentials.potentials": [[1144, 2, 1, "", "Potential"]], "ase2sprkkr.potentials.potentials.Potential": [[1144, 3, 1, "", "__init__"], [1144, 5, 1, "", "atoms"], [1144, 3, 1, "", "from_atoms"], [1144, 3, 1, "", "from_file"], [1144, 3, 1, "", "from_string"], [1144, 3, 1, "", "make_complete"], [1144, 4, 1, "", "potential_definition"], [1144, 3, 1, "", "read_from_file"], [1144, 3, 1, "", "reset"], [1144, 3, 1, "", "set_from_atoms"], [1144, 3, 1, "", "update_atoms"]], "ase2sprkkr.potentials.test": [[1146, 0, 0, "-", "init_tests"], [1155, 0, 0, "-", "test_2D"], [1157, 0, 0, "-", "test_custom_section"], [1159, 0, 0, "-", "test_potential"], [1161, 0, 0, "-", "test_structure"]], "ase2sprkkr.potentials.test.init_tests": [[1147, 2, 1, "", "TestCase"], [1148, 1, 1, "", "arr_testfce"], [1149, 1, 1, "", "assertDictEqual"], [1150, 1, 1, "", "assertListEqual"], [1151, 1, 1, "", "assert_almost_equals"], [1152, 1, 1, "", "assert_equals"], [1153, 2, 1, "", "extdict"], [1154, 1, 1, "", "testfce"]], "ase2sprkkr.potentials.test.init_tests.TestCase": [[1147, 3, 1, "", "__init__"], [1147, 4, 1, "", "_calc_args"], [1147, 4, 1, "", "_print_output"], [1147, 3, 1, "", "almost_equal_precision"], [1147, 3, 1, "", "assertAlmostEqual"], [1147, 3, 1, "", "assertAsyncEqual"], [1147, 3, 1, "", "assertAsyncRaises"], [1147, 3, 1, "", "assertEqual"], [1147, 3, 1, "", "assertFalse"], [1147, 3, 1, "", "assertIsNone"], [1147, 3, 1, "", "assertNotEqual"], [1147, 3, 1, "", "assertRaises"], [1147, 3, 1, "", "assertTrue"], [1147, 3, 1, "", "calc_args"], [1147, 3, 1, "", "runAsync"], [1147, 3, 1, "", "run_sprkkr"], [1147, 3, 1, "", "temporary_dir"]], "ase2sprkkr.potentials.test.init_tests.extdict": [[1153, 3, 1, "", "__init__"]], "ase2sprkkr.potentials.test.test_2D": [[1156, 2, 1, "", "Test2DPotential"]], "ase2sprkkr.potentials.test.test_2D.Test2DPotential": [[1156, 3, 1, "", "__init__"], [1156, 3, 1, "", "test"]], "ase2sprkkr.potentials.test.test_custom_section": [[1158, 2, 1, "", "TestCustomSection"]], "ase2sprkkr.potentials.test.test_custom_section.TestCustomSection": [[1158, 3, 1, "", "__init__"], [1158, 3, 1, "", "assertNone"], [1158, 3, 1, "", "test_custom_section"]], "ase2sprkkr.potentials.test.test_potential": [[1160, 2, 1, "", "TestPotential"]], "ase2sprkkr.potentials.test.test_potential.TestPotential": [[1160, 3, 1, "", "__init__"], [1160, 3, 1, "", "test_2D"], [1160, 3, 1, "", "test_examples"], [1160, 3, 1, "", "test_grammar"], [1160, 3, 1, "", "test_potential"], [1160, 3, 1, "", "test_potential_data"], [1160, 3, 1, "", "test_reset"], [1160, 3, 1, "", "test_sequence"]], "ase2sprkkr.potentials.test.test_structure": [[1162, 2, 1, "", "TestStructure"]], "ase2sprkkr.potentials.test.test_structure.TestStructure": [[1162, 3, 1, "", "__init__"], [1162, 3, 1, "", "test_lattice"]], "ase2sprkkr.sprkkr": [[1164, 0, 0, "-", "atomic_types"], [1166, 0, 0, "-", "atoms_region"], [1168, 0, 0, "-", "build"], [1172, 0, 0, "-", "calculator"], [1175, 0, 0, "-", "configuration"], [1186, 0, 0, "-", "io_data"], [1191, 0, 0, "-", "moments"], [1193, 0, 0, "-", "occupations"], [1195, 0, 0, "-", "radial"], [1199, 0, 0, "-", "radial_meshes"], [1203, 0, 0, "-", "reference_systems"], [1205, 0, 0, "-", "sites"], [1208, 0, 0, "-", "sprkkr_atoms"], [1210, 0, 0, "-", "sprkkr_grammar_types"], [1213, 0, 0, "-", "structure"], [1218, 0, 0, "-", "sysfile"], [1221, 0, 0, "-", "test"]], "ase2sprkkr.sprkkr.atomic_types": [[1165, 2, 1, "", "AtomicType"]], "ase2sprkkr.sprkkr.atomic_types.AtomicType": [[1165, 3, 1, "", "__init__"], [1165, 3, 1, "", "_check_n_electrons"], [1165, 3, 1, "", "_clear_symbol_cache"], [1165, 4, 1, "", "_mendeleev_module"], [1165, 5, 1, "", "atomic_number"], [1165, 3, 1, "", "copy"], [1165, 3, 1, "", "is_vacuum"], [1165, 5, 1, "", "mendeleev"], [1165, 5, 1, "", "n_core"], [1165, 5, 1, "", "n_electrons"], [1165, 5, 1, "", "n_semicore"], [1165, 5, 1, "", "n_valence"], [1165, 5, 1, "", "symbol"], [1165, 3, 1, "", "to_atomic_type"], [1165, 3, 1, "", "to_tuple"]], "ase2sprkkr.sprkkr.atoms_region": [[1167, 2, 1, "", "AtomsRegion"]], "ase2sprkkr.sprkkr.atoms_region.AtomsRegion": [[1167, 3, 1, "", "__init__"], [1167, 3, 1, "", "_clear_cache"], [1167, 5, 1, "", "cell"], [1167, 3, 1, "", "create_atoms"], [1167, 3, 1, "", "from_atoms"], [1167, 5, 1, "", "ids"], [1167, 3, 1, "", "only_vacuum_atoms"], [1167, 5, 1, "", "pbc"], [1167, 5, 1, "", "positions"], [1167, 3, 1, "", "set_atoms"], [1167, 5, 1, "", "set_of_ids"], [1167, 3, 1, "", "shared_ids_with"], [1167, 5, 1, "", "slice"], [1167, 5, 1, "", "symbols"]], "ase2sprkkr.sprkkr.build": [[1169, 1, 1, "", "semiinfinite_system"], [1170, 1, 1, "", "stack"], [1171, 1, 1, "", "vacuum_like"]], "ase2sprkkr.sprkkr.calculator": [[1173, 2, 1, "", "FilenameTemplator"], [1174, 2, 1, "", "SPRKKR"]], "ase2sprkkr.sprkkr.calculator.FilenameTemplator": [[1173, 3, 1, "", "__init__"], [1173, 3, 1, "", "_get"], [1173, 4, 1, "", "replacements"]], "ase2sprkkr.sprkkr.calculator.SPRKKR": [[1174, 3, 1, "", "__init__"], [1174, 4, 1, "", "_abc_impl"], [1174, 3, 1, "", "_advance_counter"], [1174, 3, 1, "", "_open_file"], [1174, 5, 1, "", "atoms"], [1174, 3, 1, "", "calculate"], [1174, 3, 1, "", "change_task"], [1174, 3, 1, "", "copy_with_potential"], [1174, 4, 1, "", "empty_spheres"], [1174, 4, 1, "", "executable_suffix"], [1174, 3, 1, "", "get"], [1174, 4, 1, "", "implemented_properties"], [1174, 4, 1, "", "input_file"], [1174, 5, 1, "", "input_parameters"], [1174, 3, 1, "", "kkrch"], [1174, 3, 1, "", "kkrgen"], [1174, 3, 1, "", "kkrspec"], [1174, 4, 1, "", "mpi"], [1174, 4, 1, "", "output_file"], [1174, 3, 1, "", "phagen"], [1174, 5, 1, "", "potential"], [1174, 4, 1, "", "potential_file"], [1174, 5, 1, "", "potential_object"], [1174, 3, 1, "", "run"], [1174, 3, 1, "", "run_xband"], [1174, 3, 1, "", "save_input"], [1174, 3, 1, "", "scf"], [1174, 3, 1, "", "set"], [1174, 3, 1, "", "value_or_default"]], "ase2sprkkr.sprkkr.configuration": [[1176, 2, 1, "", "ConfigurationFile"], [1177, 2, 1, "", "ConfigurationFileDefinition"], [1178, 2, 1, "", "ConfigurationSection"], [1179, 2, 1, "", "ConfigurationSectionDefinition"], [1180, 2, 1, "", "ConfigurationSectionTrait"], [1181, 2, 1, "", "ConfigurationValue"], [1182, 2, 1, "", "ConfigurationValueDefinition"], [1183, 2, 1, "", "CustomConfigurationSection"], [1184, 2, 1, "", "CustomConfigurationValue"], [1185, 2, 1, "", "RepeatedConfigurationSection"]], "ase2sprkkr.sprkkr.configuration.ConfigurationFile": [[1176, 3, 1, "", "__init__"], [1176, 3, 1, "", "save_to_file"]], "ase2sprkkr.sprkkr.configuration.ConfigurationFileDefinition": [[1177, 3, 1, "", "__init__"]], "ase2sprkkr.sprkkr.configuration.ConfigurationSection": [[1178, 3, 1, "", "__init__"]], "ase2sprkkr.sprkkr.configuration.ConfigurationSectionDefinition": [[1179, 3, 1, "", "__init__"], [1179, 4, 1, "", "result_class"]], "ase2sprkkr.sprkkr.configuration.ConfigurationSectionTrait": [[1180, 3, 1, "", "__init__"], [1180, 3, 1, "", "_set_from_atoms"], [1180, 3, 1, "", "set_from_atoms"]], "ase2sprkkr.sprkkr.configuration.ConfigurationValue": [[1181, 3, 1, "", "__init__"], [1181, 3, 1, "", "_set_from_atoms"]], "ase2sprkkr.sprkkr.configuration.ConfigurationValueDefinition": [[1182, 3, 1, "", "__init__"], [1182, 5, 1, "", "_set_from_atoms"], [1182, 4, 1, "", "result_class"]], "ase2sprkkr.sprkkr.configuration.CustomConfigurationSection": [[1183, 3, 1, "", "__init__"]], "ase2sprkkr.sprkkr.configuration.CustomConfigurationValue": [[1184, 3, 1, "", "__init__"], [1184, 3, 1, "", "_set_from_atoms"]], "ase2sprkkr.sprkkr.configuration.RepeatedConfigurationSection": [[1185, 3, 1, "", "__init__"]], "ase2sprkkr.sprkkr.io_data": [[1187, 2, 1, "", "BaseIoData"], [1188, 2, 1, "", "ReadIoData"], [1189, 2, 1, "", "WriteIoData"], [1190, 1, 1, "", "unique_mapping"]], "ase2sprkkr.sprkkr.io_data.BaseIoData": [[1187, 3, 1, "", "__init__"]], "ase2sprkkr.sprkkr.io_data.ReadIoData": [[1188, 3, 1, "", "__init__"], [1188, 3, 1, "", "apply_on_atoms"], [1188, 3, 1, "", "update_atoms"]], "ase2sprkkr.sprkkr.io_data.WriteIoData": [[1189, 3, 1, "", "__init__"], [1189, 3, 1, "", "has_converged_data"], [1189, 5, 1, "", "meshes"], [1189, 5, 1, "", "reference_systems"], [1189, 5, 1, "", "sites"], [1189, 5, 1, "", "types"]], "ase2sprkkr.sprkkr.moments": [[1192, 2, 1, "", "Moments"]], "ase2sprkkr.sprkkr.moments.Moments": [[1192, 3, 1, "", "__init__"], [1192, 3, 1, "", "as_tuple"]], "ase2sprkkr.sprkkr.occupations": [[1194, 2, 1, "", "Occupation"]], "ase2sprkkr.sprkkr.occupations.Occupation": [[1194, 3, 1, "", "__init__"], [1194, 3, 1, "", "_find_key"], [1194, 3, 1, "", "_normalize"], [1194, 3, 1, "", "_update_atoms"], [1194, 3, 1, "", "add"], [1194, 5, 1, "", "as_dict"], [1194, 3, 1, "", "atomic_type"], [1194, 3, 1, "", "atomic_types"], [1194, 3, 1, "", "check"], [1194, 3, 1, "", "clean"], [1194, 3, 1, "", "copy"], [1194, 3, 1, "", "items"], [1194, 5, 1, "", "primary_atomic_number"], [1194, 5, 1, "", "primary_atomic_type"], [1194, 5, 1, "", "primary_symbol"], [1194, 3, 1, "", "replace_type"], [1194, 3, 1, "", "set"], [1194, 3, 1, "", "to_occupation"], [1194, 3, 1, "", "to_tuple"], [1194, 5, 1, "", "total_occupation"]], "ase2sprkkr.sprkkr.radial": [[1196, 2, 1, "", "RadialCharge"], [1197, 2, 1, "", "RadialPotential"], [1198, 2, 1, "", "RadialValue"]], "ase2sprkkr.sprkkr.radial.RadialCharge": [[1196, 3, 1, "", "__init__"]], "ase2sprkkr.sprkkr.radial.RadialPotential": [[1197, 3, 1, "", "__init__"], [1197, 3, 1, "", "_clear"], [1197, 5, 1, "", "bt"], [1197, 5, 1, "", "down"], [1197, 3, 1, "", "from_julich"], [1197, 3, 1, "", "from_munchen"], [1197, 5, 1, "", "julich"], [1197, 5, 1, "", "munchen"], [1197, 5, 1, "", "up"], [1197, 5, 1, "", "vt"], [1197, 5, 1, "", "zr"]], "ase2sprkkr.sprkkr.radial.RadialValue": [[1198, 3, 1, "", "__init__"], [1198, 3, 1, "", "copy"], [1198, 3, 1, "", "for_mesh"], [1198, 3, 1, "", "interpolate"], [1198, 5, 1, "", "interpolator"], [1198, 5, 1, "", "mesh"], [1198, 5, 1, "", "raw_value"]], "ase2sprkkr.sprkkr.radial_meshes": [[1200, 2, 1, "", "ExponentialMesh"], [1201, 2, 1, "", "Mesh"], [1202, 1, 1, "", "_clearing_property"]], "ase2sprkkr.sprkkr.radial_meshes.ExponentialMesh": [[1200, 3, 1, "", "__init__"], [1200, 3, 1, "", "_clear"], [1200, 5, 1, "", "coors"], [1200, 3, 1, "", "copy"], [1200, 5, 1, "", "dx"], [1200, 5, 1, "", "jrmt"], [1200, 5, 1, "", "jrws"], [1200, 5, 1, "", "r1"], [1200, 5, 1, "", "rmt"], [1200, 5, 1, "", "rws"], [1200, 3, 1, "", "to_tuple"]], "ase2sprkkr.sprkkr.radial_meshes.Mesh": [[1201, 3, 1, "", "__init__"], [1201, 3, 1, "", "default"], [1201, 3, 1, "", "interpolate"], [1201, 3, 1, "", "interpolator"], [1201, 3, 1, "", "interpolator_for_coors"]], "ase2sprkkr.sprkkr.reference_systems": [[1204, 2, 1, "", "ReferenceSystem"]], "ase2sprkkr.sprkkr.reference_systems.ReferenceSystem": [[1204, 3, 1, "", "__init__"], [1204, 3, 1, "", "copy"], [1204, 3, 1, "", "default"], [1204, 3, 1, "", "to_tuple"]], "ase2sprkkr.sprkkr.sites": [[1206, 2, 1, "", "Site"], [1207, 2, 1, "", "SiteType"]], "ase2sprkkr.sprkkr.sites.Site": [[1206, 3, 1, "", "__init__"], [1206, 3, 1, "", "_clear_data"], [1206, 5, 1, "", "atomic_types"], [1206, 5, 1, "", "atoms"], [1206, 3, 1, "", "break_symmetry"], [1206, 5, 1, "", "charge"], [1206, 3, 1, "", "copy"], [1206, 3, 1, "", "copy_sites"], [1206, 3, 1, "", "create"], [1206, 5, 1, "", "has_symmetry"], [1206, 5, 1, "", "is_vacuum"], [1206, 5, 1, "", "mesh"], [1206, 5, 1, "", "moments"], [1206, 5, 1, "", "occupation"], [1206, 5, 1, "", "potential"], [1206, 5, 1, "", "primary_atomic_number"], [1206, 5, 1, "", "primary_symbol"], [1206, 5, 1, "", "reference_system"], [1206, 3, 1, "", "reset"], [1206, 5, 1, "", "site_type"]], "ase2sprkkr.sprkkr.sites.SiteType": [[1207, 3, 1, "", "__init__"], [1207, 3, 1, "", "_clear_data"], [1207, 5, 1, "", "atomic_types"], [1207, 3, 1, "", "break_symmetry"], [1207, 5, 1, "", "charge"], [1207, 3, 1, "", "copy"], [1207, 5, 1, "", "has_symmetry"], [1207, 3, 1, "", "index"], [1207, 3, 1, "", "is_vacuum"], [1207, 5, 1, "", "mesh"], [1207, 5, 1, "", "moments"], [1207, 5, 1, "", "occupation"], [1207, 5, 1, "", "potential"], [1207, 5, 1, "", "primary_atomic_number"], [1207, 5, 1, "", "primary_symbol"], [1207, 3, 1, "", "register"], [1207, 3, 1, "", "reset"], [1207, 3, 1, "", "unregister"], [1207, 3, 1, "", "update_atoms"]], "ase2sprkkr.sprkkr.sprkkr_atoms": [[1209, 2, 1, "", "SPRKKRAtoms"]], "ase2sprkkr.sprkkr.sprkkr_atoms.SPRKKRAtoms": [[1209, 3, 1, "", "__init__"], [1209, 3, 1, "", "_init"], [1209, 3, 1, "", "_init_sites"], [1209, 3, 1, "", "add_region"], [1209, 3, 1, "", "are_sites_inited"], [1209, 3, 1, "", "cancel_sites_symmetry"], [1209, 3, 1, "", "compute_sites_symmetry"], [1209, 3, 1, "", "copy"], [1209, 3, 1, "", "extend"], [1209, 3, 1, "", "has_potential"], [1209, 5, 1, "", "potential"], [1209, 3, 1, "", "promote_ase_atoms"], [1209, 5, 1, "", "regions"], [1209, 3, 1, "", "remove_region"], [1209, 3, 1, "", "reset_sprkkr_potential"], [1209, 3, 1, "", "set_regions"], [1209, 3, 1, "", "set_sites"], [1209, 5, 1, "", "sites"], [1209, 4, 1, "", "sites_array_name"], [1209, 5, 1, "", "spacegroup_info"], [1209, 5, 1, "", "symmetry"]], "ase2sprkkr.sprkkr.sprkkr_grammar_types": [[1211, 2, 1, "", "AtomicType"], [1212, 2, 1, "", "Site"]], "ase2sprkkr.sprkkr.sprkkr_grammar_types.AtomicType": [[1211, 4, 1, "", "I"], [1211, 3, 1, "", "__init__"], [1211, 4, 1, "", "allowed_types"], [1211, 4, 1, "", "datatype"], [1211, 3, 1, "", "set_from_atoms"], [1211, 4, 1, "", "type"]], "ase2sprkkr.sprkkr.sprkkr_grammar_types.Site": [[1212, 4, 1, "", "I"], [1212, 3, 1, "", "__init__"], [1212, 4, 1, "", "allowed_types"], [1212, 4, 1, "", "datatype"], [1212, 3, 1, "", "set_from_atoms"], [1212, 4, 1, "", "type"]], "ase2sprkkr.sprkkr.structure": [[1214, 2, 1, "", "AtomData"], [1215, 2, 1, "", "LayerData"], [1216, 1, 1, "", "floatjm"], [1217, 1, 1, "", "structure_file_to_atoms"]], "ase2sprkkr.sprkkr.structure.AtomData": [[1214, 3, 1, "", "__init__"], [1214, 3, 1, "", "from_text"], [1214, 3, 1, "", "get_symbol"]], "ase2sprkkr.sprkkr.structure.LayerData": [[1215, 3, 1, "", "__init__"]], "ase2sprkkr.sprkkr.sysfile": [[1219, 1, 1, "", "sysfile_content"], [1220, 1, 1, "", "write_sysfile"]], "ase2sprkkr.sprkkr.test": [[1222, 0, 0, "-", "init_tests"], [1231, 0, 0, "-", "test_arpes"], [1233, 0, 0, "-", "test_build"], [1235, 0, 0, "-", "test_calculator"], [1238, 0, 0, "-", "test_occupation"], [1240, 0, 0, "-", "test_sites"], [1242, 0, 0, "-", "test_sprkkr_atoms"], [1244, 0, 0, "-", "test_sysfile"]], "ase2sprkkr.sprkkr.test.init_tests": [[1223, 2, 1, "", "TestCase"], [1224, 1, 1, "", "arr_testfce"], [1225, 1, 1, "", "assertDictEqual"], [1226, 1, 1, "", "assertListEqual"], [1227, 1, 1, "", "assert_almost_equals"], [1228, 1, 1, "", "assert_equals"], [1229, 2, 1, "", "extdict"], [1230, 1, 1, "", "testfce"]], "ase2sprkkr.sprkkr.test.init_tests.TestCase": [[1223, 3, 1, "", "__init__"], [1223, 4, 1, "", "_calc_args"], [1223, 4, 1, "", "_print_output"], [1223, 3, 1, "", "almost_equal_precision"], [1223, 3, 1, "", "assertAlmostEqual"], [1223, 3, 1, "", "assertAsyncEqual"], [1223, 3, 1, "", "assertAsyncRaises"], [1223, 3, 1, "", "assertEqual"], [1223, 3, 1, "", "assertFalse"], [1223, 3, 1, "", "assertIsNone"], [1223, 3, 1, "", "assertNotEqual"], [1223, 3, 1, "", "assertRaises"], [1223, 3, 1, "", "assertTrue"], [1223, 3, 1, "", "calc_args"], [1223, 3, 1, "", "runAsync"], [1223, 3, 1, "", "run_sprkkr"], [1223, 3, 1, "", "temporary_dir"]], "ase2sprkkr.sprkkr.test.init_tests.extdict": [[1229, 3, 1, "", "__init__"]], "ase2sprkkr.sprkkr.test.test_arpes": [[1232, 2, 1, "", "TestCalculator"]], "ase2sprkkr.sprkkr.test.test_arpes.TestCalculator": [[1232, 3, 1, "", "__init__"], [1232, 3, 1, "", "test_run"]], "ase2sprkkr.sprkkr.test.test_build": [[1234, 2, 1, "", "TestBuild"]], "ase2sprkkr.sprkkr.test.test_build.TestBuild": [[1234, 3, 1, "", "__init__"], [1234, 3, 1, "", "test"]], "ase2sprkkr.sprkkr.test.test_calculator": [[1236, 2, 1, "", "TestCalculator"], [1237, 1, 1, "", "_fast_atoms"]], "ase2sprkkr.sprkkr.test.test_calculator.TestCalculator": [[1236, 3, 1, "", "__init__"], [1236, 3, 1, "", "test_2D"], [1236, 3, 1, "", "test_calculator"], [1236, 3, 1, "", "test_phagen"], [1236, 3, 1, "", "test_run"]], "ase2sprkkr.sprkkr.test.test_occupation": [[1239, 2, 1, "", "test"]], "ase2sprkkr.sprkkr.test.test_occupation.test": [[1239, 3, 1, "", "__init__"], [1239, 3, 1, "", "test"]], "ase2sprkkr.sprkkr.test.test_sites": [[1241, 2, 1, "", "TestSites"]], "ase2sprkkr.sprkkr.test.test_sites.TestSites": [[1241, 3, 1, "", "__init__"], [1241, 3, 1, "", "test_adding"], [1241, 3, 1, "", "test_occupancy"], [1241, 3, 1, "", "test_potential"], [1241, 3, 1, "", "test_vacuum"]], "ase2sprkkr.sprkkr.test.test_sprkkr_atoms": [[1243, 2, 1, "", "TestSPRKKRAtoms"]], "ase2sprkkr.sprkkr.test.test_sprkkr_atoms.TestSPRKKRAtoms": [[1243, 3, 1, "", "__init__"], [1243, 3, 1, "", "test_atoms"], [1243, 3, 1, "", "test_extend"], [1243, 3, 1, "", "test_occupancy"], [1243, 3, 1, "", "test_symmetry"]], "ase2sprkkr.sprkkr.test.test_sysfile": [[1245, 2, 1, "", "TestSysfile"]], "ase2sprkkr.sprkkr.test.test_sysfile.TestSysfile": [[1245, 3, 1, "", "__init__"], [1245, 3, 1, "", "test"]], "ase2sprkkr.tools": [[1247, 0, 0, "-", "ase2sprkkr"], [1249, 0, 0, "-", "commands"], [1271, 0, 0, "-", "shared"], [1273, 0, 0, "-", "test"]], "ase2sprkkr.tools.ase2sprkkr": [[1248, 1, 1, "", "run"]], "ase2sprkkr.tools.commands": [[1250, 0, 0, "-", "config"], [1253, 0, 0, "-", "info"], [1259, 0, 0, "-", "plot"], [1262, 0, 0, "-", "run"], [1265, 0, 0, "-", "show_structure"], [1268, 0, 0, "-", "test"]], "ase2sprkkr.tools.commands.config": [[1251, 1, 1, "", "parser"], [1252, 1, 1, "", "run"]], "ase2sprkkr.tools.commands.info": [[1254, 2, 1, "", "TestsArgAction"], [1255, 1, 1, "", "info_output_files"], [1256, 1, 1, "", "info_tasks"], [1257, 1, 1, "", "parser"], [1258, 1, 1, "", "run"]], "ase2sprkkr.tools.commands.info.TestsArgAction": [[1254, 3, 1, "", "__init__"]], "ase2sprkkr.tools.commands.plot": [[1260, 1, 1, "", "parser"], [1261, 1, 1, "", "run"]], "ase2sprkkr.tools.commands.run": [[1263, 1, 1, "", "parser"], [1264, 1, 1, "", "run"]], "ase2sprkkr.tools.commands.show_structure": [[1266, 1, 1, "", "parser"], [1267, 1, 1, "", "run"]], "ase2sprkkr.tools.commands.test": [[1269, 1, 1, "", "parser"], [1270, 1, 1, "", "run"]], "ase2sprkkr.tools.shared": [[1272, 1, 1, "", "main"]], "ase2sprkkr.tools.test": [[1274, 0, 0, "-", "init_tests"], [1283, 0, 0, "-", "test_tools"]], "ase2sprkkr.tools.test.init_tests": [[1275, 2, 1, "", "TestCase"], [1276, 1, 1, "", "arr_testfce"], [1277, 1, 1, "", "assertDictEqual"], [1278, 1, 1, "", "assertListEqual"], [1279, 1, 1, "", "assert_almost_equals"], [1280, 1, 1, "", "assert_equals"], [1281, 2, 1, "", "extdict"], [1282, 1, 1, "", "testfce"]], "ase2sprkkr.tools.test.init_tests.TestCase": [[1275, 3, 1, "", "__init__"], [1275, 4, 1, "", "_calc_args"], [1275, 4, 1, "", "_print_output"], [1275, 3, 1, "", "almost_equal_precision"], [1275, 3, 1, "", "assertAlmostEqual"], [1275, 3, 1, "", "assertAsyncEqual"], [1275, 3, 1, "", "assertAsyncRaises"], [1275, 3, 1, "", "assertEqual"], [1275, 3, 1, "", "assertFalse"], [1275, 3, 1, "", "assertIsNone"], [1275, 3, 1, "", "assertNotEqual"], [1275, 3, 1, "", "assertRaises"], [1275, 3, 1, "", "assertTrue"], [1275, 3, 1, "", "calc_args"], [1275, 3, 1, "", "runAsync"], [1275, 3, 1, "", "run_sprkkr"], [1275, 3, 1, "", "temporary_dir"]], "ase2sprkkr.tools.test.init_tests.extdict": [[1281, 3, 1, "", "__init__"]], "ase2sprkkr.tools.test.test_tools": [[1284, 2, 1, "", "TestCommon"]], "ase2sprkkr.tools.test.test_tools.TestCommon": [[1284, 3, 1, "", "__init__"], [1284, 3, 1, "", "test"]], "ase2sprkkr.visualise": [[1287, 0, 0, "-", "plot"]], "ase2sprkkr.visualise.plot": [[1288, 2, 1, "", "Multiplot"], [1289, 1, 1, "", "auto_range"], [1290, 1, 1, "", "change_default_kwargs"], [1291, 1, 1, "", "colormesh"], [1292, 1, 1, "", "combine_colormaps"], [1293, 1, 1, "", "combined_colormap"], [1294, 1, 1, "", "create_rc_context"], [1295, 1, 1, "", "finish_plot"], [1296, 1, 1, "", "normalize_rc_params"], [1297, 1, 1, "", "plotting_function"], [1298, 1, 1, "", "set_up_common_plot"], [1299, 1, 1, "", "single_plot"]], "ase2sprkkr.visualise.plot.Multiplot": [[1288, 3, 1, "", "__init__"], [1288, 3, 1, "", "finish"], [1288, 3, 1, "", "plot"]]}, "objtypes": {"0": "py:module", "1": "py:function", "2": "py:class", "3": "py:method", "4": "py:attribute", "5": "py:property", "6": "py:exception", "7": "py:data"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "function", "Python function"], "2": ["py", "class", "Python class"], "3": ["py", "method", "Python method"], "4": ["py", "attribute", "Python attribute"], "5": ["py", "property", "Python property"], "6": ["py", "exception", "Python exception"], "7": ["py", "data", "Python data"]}, "titleterms": {"ase2sprkkr": [0, 1, 59, 124, 127, 128, 221, 253, 254, 255, 281, 383, 716, 840, 900, 1247, 1300, 1302, 1304, 1305, 1309], "useful": [0, 1305, 1307], "link": [0, 1305, 1307], "instal": [0, 1304, 1306, 1309], "packag": [0, 1304, 1305, 1306, 1308], "us": [0, 1304, 1306, 1309], "manag": [0, 1304, 1306], "further": [0, 1304, 1306], "note": [0, 1304, 1306, 1309], "from": [0, 1304, 1306], "git": [0, 1304, 1306], "sourc": [0, 1304, 1306], "code": [0, 1304, 1306], "requir": [0, 343, 353, 1304, 1306], "obtain": [0, 1304, 1306], "without": [0, 1304, 1306], "pip": [0, 1304, 1306], "conda": [0, 1304, 1306], "document": [0, 1304, 1305, 1306], "how": [0, 1304, 1306, 1309], "contribut": [0, 1304, 1306, 1309], "report": [0, 1304, 1306, 1309], "bug": [0, 1304, 1306], "ase": 2, "build": [3, 1168], "aperiodic_tim": 4, "stack": [5, 1170], "io": 6, "read_sprkkr": 7, "write_sprkkr": 8, "pbc": 9, "check_symmetri": 10, "regist": [11, 14], "ase_regist": 12, "load_user_prefer": 13, "user_preferences_fil": 15, "symbol": 16, "filename_from_symbol": 17, "pretty_symbol": 18, "test": [19, 426, 669, 689, 875, 965, 1011, 1046, 1145, 1221, 1239, 1268, 1273], "init_test": [20, 670, 690, 841, 876, 966, 1012, 1047, 1146, 1222, 1274], "testcas": [21, 671, 691, 842, 877, 967, 1013, 1048, 1147, 1223, 1275], "arr_testfc": [22, 672, 692, 843, 878, 968, 1014, 1049, 1148, 1224, 1276], "assertdictequ": [23, 673, 693, 844, 879, 969, 1015, 1050, 1149, 1225, 1277], "assertlistequ": [24, 674, 694, 845, 880, 970, 1016, 1051, 1150, 1226, 1278], "assert_almost_equ": [25, 675, 695, 846, 881, 971, 1017, 1052, 1151, 1227, 1279], "assert_equ": [26, 676, 696, 847, 882, 972, 1018, 1053, 1152, 1228, 1280], "extdict": [27, 677, 697, 848, 883, 973, 1019, 1054, 1153, 1229, 1281], "testfc": [28, 678, 699, 850, 884, 974, 1020, 1055, 1154, 1230, 1282], "test_build": [29, 1233], "testbuild": [30, 1234], "visualis": [31, 1286], "view": 32, "asr": [33, 34, 59, 124, 127, 128, 221, 253, 254, 255, 281, 383], "bader": 35, "print": 36, "bandstructur": 37, "result": [38, 45, 49, 52, 66, 91, 117, 124, 127, 128, 210, 222, 274, 289, 299, 305, 312, 317, 323, 327, 338, 348, 356, 359, 363, 368, 378, 384, 420, 423, 1309], "add_bs_pb": 39, "bs_pbe": 40, "bs_pbe_html": 41, "plot_with_color": 42, "webpanel": [43, 47, 50, 55, 89, 97, 211, 215, 219, 248, 279, 297, 302, 310, 315, 321, 325, 336, 346, 354, 357, 361, 366, 375, 381, 421, 425, 648], "berri": 44, "plot_phas": 46, "borncharg": 48, "bse": [51, 472, 473], "absorpt": 53, "get_kpts_siz": [54, 301, 307, 360, 364, 635], "calcul": [56, 451, 1172, 1309], "get_calcul": 57, "chc": [58, 59], "chcerror": 59, "convexhullrefer": 60, "hyperplan": 61, "intermedi": 62, "leanintermedi": 63, "line": [64, 206], "refer": 65, "_permutecontain": 67, "append_refer": 68, "calculate_intermedi": 69, "chcut_plot": 70, "convex_hul": [71, 90], "convex_hull_plan": 72, "filref": 73, "get_coord": 74, "get_hof": [75, 261], "gscheck": 76, "is_collinear": 77, "is_independ": 78, "mg": 79, "mgsl": 80, "mu_adjust": 81, "orthogon": 82, "projuv": 83, "read_structur": 84, "refs2im": 85, "results2ref": 86, "row2ref": 87, "tuplespermut": 88, "convex_hull_t": 92, "get_reference_energi": 93, "hof": 94, "plot": [95, 218, 1259, 1287], "select_refer": 96, "core": [98, 124, 127, 128], "cli": 99, "append_job": 100, "check_git": 101, "extract_hash_from_fil": 102, "format": [103, 753], "get_config_dir": 104, "get_git_rev_list": 105, "initialize_asr_configuration_dir": 106, "is_asr_initi": 107, "run_command": 108, "command": [109, 1249], "fix_old_fil": 110, "is_results_fil": [111, 175], "materi": [112, 113, 410, 446, 1309], "get_material_from_fold": 114, "get_webpanels_from_materi": 115, "make_panel_figur": 116, "asrresult": 118, "dictencod": 119, "htmlencod": 120, "hackedasrresult": 121, "jsonencod": 122, "metadata": 123, "metadatanotseterror": 124, "objectdescript": 125, "resultencod": 126, "unknownasrresultformat": 127, "unknowndataformat": 128, "webpanelencod": 129, "data_to_dict": 130, "dct_to_result": 131, "find_class_matching_vers": 132, "format_key_description_pair": 133, "get_key_descript": 134, "get_object_matching_obj_id": 135, "get_object_typ": 136, "get_reader_funct": 137, "make_properti": 138, "obj_to_id": 139, "object_description_to_object": 140, "prepare_result": 141, "read_hacked_data": 142, "read_new_data": 143, "read_old_data": 144, "type": [145, 1127, 1309], "atomsfil": 146, "dictstr": 147, "clickify_docstr": 148, "util": [149, 483, 625, 655], "function": 149, "chdir": 150, "dct_to_object": 151, "encode_json": 152, "file_barri": 153, "get_dep_tre": 154, "get_recipe_from_nam": 155, "md5sum": 156, "parse_dict_str": 157, "parse_mod_func": 158, "read_json": 159, "recursive_upd": 160, "singleprec_dict": 161, "unlink": 162, "write_fil": 163, "write_json": 164, "databas": 165, "browser": 166, "rowwrapp": 167, "create_t": 168, "describe_entri": [169, 170], "dict_to_list": 171, "entry_parameter_descript": 172, "extract_recipe_from_filenam": 173, "fig": 174, "layout": 176, "merge_panel": 177, "miscellaneous_sect": 178, "tabl": [179, 782, 1305], "val2str": 180, "check": 181, "clonetre": 182, "duplic": 183, "compar": 184, "filter_uid": 185, "find_duplicate_group": 186, "parse_filter_str": 187, "material_fingerprint": 188, "get_hash_of_atom": 189, "get_uid_of_atom": 190, "todict": [191, 344], "merg": 192, "rmsd": 193, "get_rmsd": 194, "normalize_nonpbc_atom": 195, "update_rmsd": 196, "templat": 197, "totre": 198, "make_folder_dict": 199, "make_folder_tre": 200, "defectform": 201, "check_and_get_general_input": 202, "collect_data": [203, 217, 400, 646], "find_file_in_fold": 204, "intersect": 205, "line_intersect": 207, "plot_formation_and_transit": 208, "deformationpotenti": 209, "dimension": 212, "get_dimtyp": 213, "plot_dimensionality_histogram": 214, "do": [216, 484, 935, 990, 991], "emass": [220, 221], "nogaperror": 221, "calculate_bs_along_emass_vec": 223, "check_soc": 224, "convert_key_to_tupl": 225, "create_columns_fnam": 226, "custom_t": 227, "em": 228, "emband": 229, "evalmodel": 230, "fit": 231, "get_2nd_order_extremum": 232, "get_3rd_order_extremum": 233, "get_bt_k": 234, "get_emass_dict_from_row": 235, "get_extremum_typ": 236, "get_gapskn": 237, "get_nam": 238, "get_rang": 239, "get_vb_cb_indic": 240, "kptsinspher": 241, "make_the_plot": 242, "model": 243, "nonsc_spher": 244, "preliminary_refin": 245, "set_default": 246, "unpack_mass": 247, "widema": 249, "exchang": 250, "get_paramet": 251, "fere": [252, 253, 254, 255], "dbalreadyexistserror": 253, "materialnotfounderror": 254, "parseerror": 255, "count": 256, "create_corrected_db": 257, "elements_from_ref": 258, "formulas_eq": 259, "get_de_alpha": 260, "load_data": 262, "minimize_error": 263, "multiply_formula": 264, "onli": 265, "parse_react": 266, "parse_ref": 267, "safe_get": 268, "select": 269, "singl": 270, "uniqu": 271, "where": 272, "fermisurfac": 273, "add_fermi": 275, "bz_vertic": 276, "find_contour": 277, "plot_fermi": 278, "formalpolar": [280, 281], "atomstooclosetoboundari": 281, "distance_to_non_pbc_boundari": 282, "get_atomic_polarization_phas": 283, "get_dipole_polarization_phas": 284, "get_electronic_polarization_phas": 285, "get_wavefunct": 286, "g": 287, "gapsresult": 288, "vacuumlevelresult": 290, "bz_with_band_extremum": 291, "evacdiff": 292, "gap": 293, "get_1bz_k": 294, "get_gap_info": 295, "vacuumlevel": 296, "gw": 298, "bs_gw": 300, "hse": [303, 308], "mp_interpol": 304, "bs_hse": 306, "hse_spinorbit": 309, "infraredpolariz": 311, "create_plot": [313, 647], "get_phonon_pol": 314, "magnetic_anisotropi": 316, "get_spin_axi": 318, "get_spin_index": 319, "spin_axi": 320, "magstat": 322, "get_magst": 324, "pdo": [326, 332], "calculate_pdo": 328, "get_l_a": 329, "get_ordered_syl_dict": 330, "get_yl_color": 331, "plot_pdo": 333, "plot_pdos_nosoc": 334, "plot_pdos_soc": 335, "phonon": 337, "creat": 339, "mingocorrect": 340, "plot_bandstructur": [341, 351], "plot_phonon": [342, 352], "topckl": 345, "phonopi": 347, "distance_to_sc": 349, "lattice_vector": 350, "piezoelectrictensor": 355, "plasmafrequ": 358, "polariz": [362, 365], "projected_bandstructur": 367, "get_bs_sampl": 369, "get_orbital_ldo": 370, "get_pie_mark": 371, "get_pie_slic": 372, "get_yl_ord": 373, "projected_bs_pb": 374, "push": 376, "raman": [377, 380], "count_deg": 379, "relax": [382, 383, 388], "brokensymmetryerror": 383, "spgatom": 385, "is_relax_don": 386, "mybfg": 387, "set_initial_magnetic_mo": 389, "setinfo": 390, "keyvaluepair": 391, "check_key_valu": 392, "setup": [393, 456], "decor": [394, 738], "apply_substitut": 395, "find_substitut": 396, "generate_structur": 397, "get_p_ab": 398, "defect": 399, "create_folder_structur": 401, "setup_defect": 402, "setup_supercel": 403, "displac": 404, "create_displacements_fold": 405, "displace_atom": 406, "get_all_displac": 407, "get_displacement_fold": 408, "magnet": [409, 636], "param": 411, "scanparam": 412, "strain": 413, "get_relevant_strain": 414, "get_strained_folder_nam": 415, "setup_strain": 416, "symmetr": 417, "symmetrize_atom": 418, "stiff": 419, "structureinfo": 422, "get_reduced_formula": 424, "accept": 427, "test_borncharg": [428, 498, 499], "test_gpaw_berry_get_berry_phases_integr": 429, "test_piezoelectrictensor": [430, 580, 582], "test_piezo_bn": 431, "test_relax": [432, 592], "test_relax_fe_gpaw": 433, "conftest": 434, "pytest_configur": 435, "pytest_sessionstart": 436, "fixtur": 437, "_get_webcont": 438, "asr_tmpdir": 439, "asr_tmpdir_w_param": 440, "duplicates_test_db": 441, "get_webcont": 442, "mockgpaw": 443, "set_asr_test_environ_vari": 444, "test_materi": 445, "mock": 447, "gpaw": 448, "berryphas": 449, "get_berry_phas": 450, "asrcalcul": 452, "doscalcul": 453, "occup": [454, 468, 1106, 1193, 1194], "paramet": [455, 1309], "wavefunct": 457, "hybrid": 458, "eigenvalu": 459, "kpt_descriptor": 460, "kpts2sizeandoffset": 461, "to1bz": 462, "mpi": [463, 1309], "barrier": 464, "broadcast": 465, "new_commun": 466, "world_sum": 467, "fermidirac": 469, "create_occ_calc": 470, "respons": 471, "df": 474, "dielectricfunct": 475, "g0w0": [476, 477], "spinorbit": 478, "soc": 479, "soc_eigenst": 480, "symmetri": [481, 482, 649, 686], "raw_orbital_ldo": 485, "ibz2bz": [486, 487], "progressbar": [488, 489], "xc": 490, "exx": 491, "tool": [492, 889, 1246, 1301, 1308, 1309], "test_bandstructur": 493, "test_bandstructure_main": 494, "test_berri": [495, 496], "test_berry_nontrivi": 497, "test_bs": [500, 501], "test_cli": 502, "test_asr": 503, "test_asr_find": 504, "test_asr_find_help": 505, "test_asr_find_no_vers": 506, "test_asr_list": 507, "test_asr_results_bandstructur": 508, "test_asr_results_help": 509, "test_asr_run": 510, "test_convex_hul": [511, 512], "test_cor": [513, 515], "recip": 514, "test_recipe_default": 516, "test_recipe_setting_new_default": 517, "test_recipe_setting_overriding_default": 518, "test_core_materi": 519, "test_asr_cli_results_figures_g": 520, "test_core_result": 521, "myresult": 522, "myresultver0": 523, "mywebpanel": 524, "test_read_old_format": 525, "test_reading_older_vers": 526, "test_reading_result": 527, "test_results_object": 528, "test_database_dupl": [529, 530], "test_database_duplicates_filter_magst": 531, "test_database_duplicates_no_dupl": 532, "test_database_fromtre": 533, "folder_tre": 534, "make_tre": 535, "test_database_fromtree_raises_when_missing_uid": 536, "test_database_fromtree_totre": 537, "test_database_fromtree_works_without_write_permiss": 538, "test_database_rmsd": 539, "rattle_atom": 540, "test_database_rmsd_dupl": 541, "test_database_rmsd_duplicates_comparison_kei": 542, "test_database_rmsd_move_one_atom": 543, "test_database_rmsd_none_handl": 544, "test_database_rmsd_not_equ": 545, "test_database_rmsd_rattl": 546, "test_database_rmsd_rot": 547, "test_database_totre": [548, 550], "make_test_db": 549, "test_database_totree_files_and_hard_link": 551, "test_dimension": [552, 553], "test_dimensionality_cli": 554, "test_emass": 555, "_get_all_eigenvalu": 556, "resultstest": 557, "test_emasses_freelectron": 558, "test_emasses_indirect": 559, "test_fixtur": 560, "test_env_vari": 561, "test_formalpolar": [562, 563], "test_formalpolarization_test_atoms_too_close_to_boundari": 564, "test_g": [565, 566], "test_gs_asr_cli_results_figur": 567, "test_gs_integration_gpaw": 568, "test_gw": [569, 570], "test_hs": [571, 572], "test_pdo": [573, 574], "test_pdos_ful": 575, "test_phonon": [576, 577], "test_phonopi": [578, 579], "get_strain_from_atom": 581, "zero_pad_non_pbc_strain_direct": 583, "test_plasmafrequ": [584, 585], "test_polariz": [586, 587], "test_projected_bandstructur": 588, "test_projected_bs_mock": 589, "test_raman": [590, 591], "test_relax_bas": 593, "test_relax_bn_gpaw": 594, "test_relax_emt": 595, "test_relax_emt_fail_broken_symmetri": 596, "test_relax_find_higher_symmetri": 597, "test_relax_magmom": 598, "test_relax_si_gpaw": 599, "test_setinfo": 600, "test_info": 601, "test_info_call_from_cli": 602, "test_info_raises_with_protected_kei": 603, "test_setup_decor": 604, "test_setup_decorate_si": 605, "test_setup_displac": [606, 607], "test_setup_displacements_displace_atom": 608, "test_setup_displacements_get_all_displac": 609, "test_setup_magnet": [610, 611, 614], "test_setup_magnetize_state_input": 612, "test_setup_materi": 613, "test_setup_scanparam": 615, "test_setup_param": 616, "test_setup_strain": [617, 618], "test_setup_strains_get_relevant_strain": 619, "test_setup_symmetr": [620, 621], "test_stiff": 622, "test_stiffness_emt": 623, "test_stiffness_gpaw": 624, "arg": 626, "parse_arg": 627, "calculator_util": 628, "fermi_level": 629, "get_eigenvalu": 630, "gpw2eig": [631, 633], "calc2eig": 632, "kpt": 634, "is_magnet": 637, "magnetic_atom": 638, "refineg": [639, 643], "get_filenam": 640, "get_parstr": 641, "nonselfc": 642, "someth": 644, "calculate_someth": 645, "_atoms2symmetry_gpaw": 650, "atoms2spgcel": 651, "atoms2symmetri": 652, "has_invers": 653, "restrict_spin_projection_2d": 654, "timed_print": 656, "workflow": 657, "bind": 658, "empty_spher": [659, 662, 665, 685], "emptyspheresresult": 660, "add_empty_spher": 661, "empty_spheres_atom": 663, "es_find": 664, "spglib": 666, "spacegroupinfo": 667, "possibly_equivalent_sit": 668, "test_es_find": 679, "testesfind": 680, "test_spglib": 681, "testspgilib": 682, "xband": 683, "sphere": 684, "find_symmetri": 687, "find_symmetry_ex": 688, "patch_packag": [698, 849], "test_spher": 700, "testspher": 701, "common": [702, 716, 840, 900, 1308], "alternative_typ": 703, "allowed_typ": 704, "normalize_typ": 705, "normalize_type_map": 706, "types_altern": 707, "configur": [708, 709, 1175, 1308], "configuration_contain": [710, 716], "baseconfigurationcontain": 711, "basesect": 712, "configurationcontain": 713, "customsect": 714, "dictadaptor": 715, "disabledattributeerror": 716, "rootconfigurationcontain": 717, "section": [718, 946, 1074, 1080, 1084, 1088, 1092, 1096, 1100, 1105, 1109, 1114, 1118, 1122, 1126, 1130], "configuration_definit": 719, "basedefinit": 720, "controldefinit": 721, "gather": [722, 729], "ignor": 723, "realitemdefinit": 724, "separatordefinit": 725, "stub": 726, "switch": [727, 730], "virtualdefinit": 728, "container_definit": 731, "configurationrootdefinit": 732, "containerdefinit": 733, "mergedictadaptor": 734, "sectiondefinit": 735, "add_excluded_names_condit": 736, "dict_from_pars": 737, "add_called_class_as_argu": 739, "add_to_signatur": 740, "cach": 741, "cached_class_properti": 742, "cached_properti": 743, "class_properti": 744, "maybeclassmethod": 745, "std_cached_properti": 746, "warnings_from_her": 747, "directori": [748, 749], "doc": 750, "process_input_parameters_definit": 751, "verbatim": 752, "format_for_str": 754, "fortran_format": 755, "full_format_for_str": 756, "generated_configuration_definit": 757, "basegeneratedvaluedefinit": 758, "generatedvaluedefinit": 759, "numpyviewdefinit": 760, "grammar": 761, "skiptoregex": 762, "white": 763, "addconditionex": 764, "addparseactionex": 765, "delimitedlist": 766, "end_of_fil": 767, "generate_grammar": 768, "line_end": 769, "optional_line_end": 770, "optional_quot": 771, "replace_whitechar": 772, "separator_grammar": 773, "separator_pattern": 774, "grammar_typ": [775, 826, 840], "arrai": [776, 777], "complex": 778, "sequenc": 779, "setof": 780, "specialcolumn": 781, "complex_numb": 783, "set_of_integ": 784, "set_of_r": 785, "basic": 786, "baserealwithunit": 787, "basestr": 788, "basicsepar": 789, "blanksepar": [790, 1005], "bool": 791, "date": [792, 810], "defkeyword": 793, "energi": [794, 811, 949], "fixedpointnumb": 795, "flag": [796, 812], "intbool": 797, "integ": [798, 814], "keyword": 799, "linestr": 800, "number": 801, "objectnumb": 802, "qstring": [803, 816], "real": [804, 817], "realwithunit": 805, "separ": [806, 818, 1008, 1136], "string": [807, 819], "unsign": [808, 820], "boolean": 809, "int_bool": 813, "line_str": 815, "data": 821, "numpyarrai": 822, "prefix": 823, "rawdata": 824, "restofthefil": 825, "grammartyp": 827, "typedgrammartyp": 828, "compare_numpy_valu": 829, "format_for_typ": 830, "recognized_set_typ": [831, 836], "type_from_default_valu": 832, "type_from_typ": 833, "type_from_valu": 834, "mix": 835, "type_from_set_map": 837, "type_from_type_map": 838, "warn": [839, 840, 899, 900], "suspiciousvaluewarn": 840, "misc": 851, "as_integ": 852, "copy_list": 853, "dict_first_item": 854, "first_non_non": 855, "njit": 856, "numpy_index": 857, "no_output": 858, "nooutput": 859, "option": [860, 865], "baseopt": 861, "customopt": 862, "dangerousvalu": 863, "dummi": 864, "process_output_read": 866, "asynciofileread": 867, "processoutputread": 868, "repeated_configuration_contain": 869, "repeatedconfigurationcontain": 870, "subprocess": 871, "_call_funct": 872, "ignore_sign": 873, "in_subprocess": 874, "test_common": 885, "testcommon": [886, 1284], "test_grammar_typ": 887, "testgrammar": 888, "append_id_to_filenam": 890, "main": [891, 907, 910, 913, 916, 919, 922, 925, 928, 1272], "parse_inch": 892, "parse_named_opt": 893, "parse_tuple_funct": 894, "unique_valu": 895, "uniquevaluesmap": 896, "value_definit": 897, "valuedefinit": 898, "datavaliditywarn": 900, "config": [901, 1250], "calculator_paramet": 902, "sprkkr_executable_suffix": 903, "exampl": [904, 1302], "a1_fe_scf_simpl": [905, 1302, 1303], "fe": [906, 909, 912], "a2_fe_scf_input_modif": [908, 1302, 1303], "a3_fe_do": [911, 1302, 1303], "a4_cpa_exampl": [914, 1302, 1303], "ni_doped_sto": 915, "a5_al_eo": [917, 1302, 1303], "al": 918, "a6_cu_msspec": [920, 1302, 1303], "cu": 921, "a7_srtio3_msspec": [923, 1302, 1303], "sto": 924, "a8_arpes_and_plot": [926, 1302, 1303], "arp": [927, 931, 1030], "input_paramet": [929, 932, 934, 936, 938, 940, 943, 945, 958, 1308, 1309], "definit": [930, 981, 1071], "bsf": [933, 986], "gilbert": 937, "jxc": 939, "marp": 941, "phagen": 942, "scf": [944, 951, 1037], "control": 947, "cpa": 948, "mode": 950, "site": [952, 1123, 1205, 1206, 1212], "strconst": 953, "task": [954, 1309], "tau": 955, "tausect": 956, "_nktab_valu": 957, "inputparamet": [959, 1309], "inputsect": 960, "input_parameters_definit": 961, "inputparametersdefinit": 962, "inputsectiondefinit": 963, "inputvaluedefinit": 964, "test_definit": 975, "testdefinit": 976, "test_input_paramet": 977, "testinputparamet": 978, "ar": 979, "output_fil": [980, 999], "arithmet": [982, 1000], "commonoutputfil": [983, 1001], "outputfil": [984, 1002], "unknowndatavalu": [985, 1003], "bsfdefinit": 987, "bsfoutputfil": 988, "create_definit": [989, 994, 998], "dosdefinit": 992, "dosoutputfil": 993, "spc": 995, "arpesdefinit": 996, "arpesoutputfil": 997, "output_files_definit": 1004, "outputfiledefinit": 1006, "outputfilevaluedefinit": 1007, "create_output_file_definit": 1009, "output_file_head": 1010, "test_fil": 1021, "testoutput": [1022, 1057], "output": [1023, 1308], "output_definit": 1024, "outputnonamevaluedefinit": 1025, "outputsectiondefinit": 1026, "outputvaluedefinit": 1027, "outputvalueequaldefinit": 1028, "reader": 1029, "arpesprocess": 1031, "arpesresult": 1032, "default": 1033, "defaultoutputread": 1034, "defaultprocess": 1035, "defaultresult": 1036, "realorstar": 1038, "scfoutputread": 1039, "scfprocess": 1040, "scfresult": 1041, "atomic_types_definit": 1042, "task_result": 1043, "kkrprocess": 1044, "taskresult": 1045, "test_output": 1056, "physic": 1058, "lattice_data": 1059, "latticedata": 1060, "pearson": 1061, "international_numbers_to_ap": 1062, "winger_seitz_radii": [1063, 1064], "potenti": [1065, 1072, 1110, 1143, 1144, 1308, 1309], "custom_potential_sect": 1066, "custompotentialsect": 1067, "custompotentialsectiondefinit": 1068, "customsectiontoken": 1069, "sectionstr": 1070, "potential_definit": [1073, 1131], "_section": 1075, "charg": 1076, "chargesect": 1077, "chargesectiondefinit": 1078, "chargessect": 1079, "charge_mo": 1081, "chargemomentssect": 1082, "chargemomentssectiondefinit": 1083, "global_system_paramet": 1085, "globalsystemparamet": 1086, "globalsystemparameterdefinit": 1087, "host_madelung_potenti": 1089, "hostmadelungpotentialsect": 1090, "hostmadelungpotentialsectiondefinit": 1091, "lattic": 1093, "latticesect": 1094, "latticesectiondefinit": 1095, "mesh_inform": 1097, "meshinformationsect": 1098, "meshinformationsectiondefinit": 1099, "moment": [1101, 1191, 1192], "momentsect": 1102, "momentssect": 1103, "momentssectiondefinit": 1104, "occupationsect": 1107, "occupationsectiondefinit": 1108, "potentialsect": [1111, 1139], "potentialsectiondefinit": 1112, "potentialssect": 1113, "reference_system": [1115, 1203], "referencesystemsect": 1116, "referencesystemsectiondefinit": 1117, "scf_info": 1119, "scfinfosect": 1120, "scfinfosectiondefinit": 1121, "sitessect": 1124, "sitessectiondefinit": 1125, "typessect": 1128, "typessectiondefinit": 1129, "asearraysectiondefinit": 1132, "potsectiondefinit": 1133, "potvaluedefinit": 1134, "potentialdefinit": 1135, "potential_sect": 1137, "asearraysect": 1138, "potentialsectiontrait": 1140, "repeatedpotentialsect": 1141, "uniquelistsect": 1142, "test_2d": 1155, "test2dpotenti": 1156, "test_custom_sect": 1157, "testcustomsect": 1158, "test_potenti": 1159, "testpotenti": 1160, "test_structur": 1161, "teststructur": 1162, "sprkkr": [1163, 1174, 1308], "atomic_typ": 1164, "atomictyp": [1165, 1211], "atoms_region": 1166, "atomsregion": 1167, "semiinfinite_system": 1169, "vacuum_lik": 1171, "modul": [1172, 1285], "filenametempl": 1173, "configurationfil": 1176, "configurationfiledefinit": 1177, "configurationsect": 1178, "configurationsectiondefinit": 1179, "configurationsectiontrait": 1180, "configurationvalu": 1181, "configurationvaluedefinit": 1182, "customconfigurationsect": 1183, "customconfigurationvalu": 1184, "repeatedconfigurationsect": 1185, "io_data": 1186, "baseiodata": 1187, "readiodata": 1188, "writeiodata": 1189, "unique_map": 1190, "radial": 1195, "radialcharg": 1196, "radialpotenti": 1197, "radialvalu": 1198, "radial_mesh": 1199, "exponentialmesh": 1200, "mesh": 1201, "_clearing_properti": 1202, "referencesystem": 1204, "sitetyp": 1207, "sprkkr_atom": 1208, "sprkkratom": 1209, "sprkkr_grammar_typ": 1210, "structur": [1213, 1308], "atomdata": 1214, "layerdata": 1215, "floatjm": 1216, "structure_file_to_atom": 1217, "sysfil": 1218, "sysfile_cont": 1219, "todo": 1219, "write_sysfil": 1220, "test_arp": 1231, "testcalcul": [1232, 1236], "test_calcul": 1235, "_fast_atom": 1237, "test_occup": 1238, "test_sit": 1240, "testsit": 1241, "test_sprkkr_atom": 1242, "testsprkkratom": 1243, "test_sysfil": 1244, "testsysfil": 1245, "run": [1248, 1252, 1258, 1261, 1262, 1264, 1267, 1270, 1308, 1309], "parser": [1251, 1257, 1260, 1263, 1266, 1269], "info": 1253, "testsargact": 1254, "info_output_fil": 1255, "info_task": 1256, "show_structur": 1265, "share": 1271, "test_tool": 1283, "version": [1285, 1301], "multiplot": 1288, "auto_rang": 1289, "change_default_kwarg": 1290, "colormesh": 1291, "combine_colormap": 1292, "combined_colormap": 1293, "create_rc_context": 1294, "finish_plot": 1295, "normalize_rc_param": 1296, "plotting_funct": 1297, "set_up_common_plot": 1298, "single_plot": 1299, "changelog": 1301, "3": 1301, "0": 1301, "2": 1301, "beta": 1301, "user": 1301, "interfac": 1301, "intern": 1301, "refactor": 1301, "1": 1301, "4": 1301, "beta2": 1301, "beta1": 1301, "architectur": 1301, "chang": 1301, "7": 1301, "6": 1301, "some": 1302, "more": [1304, 1309], "about": [1304, 1309], "softwar": 1305, "content": 1305, "class": 1305, "indic": 1305, "ase2spr": 1308, "kkr": 1308, "": 1308, "philosophi": 1308, "develop": 1308, "The": 1308, "base": 1308, "read": [1308, 1309], "file": [1308, 1309], "write": 1308, "program": 1308, "usag": 1309, "comput": 1309, "bulk": 1309, "defin": 1309, "properti": 1309, "set": 1309, "input": 1309, "work": 1309, "object": 1309, "subsequ": 1309, "gener": 1309, "A": 1309, "atom": 1309, "bundl": 1309, "error": 1309}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.todo": 2, "sphinx.ext.viewcode": 1, "sphinx": 57}, "alltitles": {"duplicates": [[183, "duplicates"]], "dict_to_list": [[171, "dict-to-list"]], "write_json": [[164, "write-json"]], "todict": [[191, "todict"], [344, "todict"]], "rmsd": [[193, "rmsd"]], "update_rmsd": [[196, "update-rmsd"]], "get_hash_of_atoms": [[189, "get-hash-of-atoms"]], "material_fingerprint": [[188, "material-fingerprint"]], "normalize_nonpbc_atoms": [[195, "normalize-nonpbc-atoms"]], "table": [[179, "table"]], "filter_uids": [[185, "filter-uids"]], "fig": [[174, "fig"]], "check": [[181, "check"]], "make_folder_dict": [[199, "make-folder-dict"]], "val2str": [[180, "val2str"]], "recursive_update": [[160, "recursive-update"]], "singleprec_dict": [[161, "singleprec-dict"]], "miscellaneous_section": [[178, "miscellaneous-section"]], "compare": [[184, "compare"]], "unlink": [[162, "unlink"]], "browser": [[166, "browser"]], "clonetree": [[182, "clonetree"]], "RowWrapper": [[167, "rowwrapper"]], "describe_entries": [[169, "describe-entries"]], "is_results_file": [[175, "is-results-file"], [111, "is-results-file"]], "totree": [[198, "totree"]], "merge": [[192, "merge"]], "merge_panels": [[177, "merge-panels"]], "get_rmsd": [[194, "get-rmsd"]], "layout": [[176, "layout"]], "entry_parameter_description": [[172, "entry-parameter-description"]], "templates": [[197, "templates"]], "extract_recipe_from_filename": [[173, "extract-recipe-from-filename"]], "get_uid_of_atoms": [[190, "get-uid-of-atoms"]], "find_duplicate_group": [[186, "find-duplicate-group"]], "database": [[165, "database"]], "write_file": [[163, "write-file"]], "describe_entry": [[170, "describe-entry"]], "parse_filter_string": [[187, "parse-filter-string"]], "create_table": [[168, "create-table"]], "webpanel": [[248, "webpanel"], [279, "webpanel"], [43, "webpanel"], [55, "webpanel"], [47, "webpanel"], [50, "webpanel"], [219, "webpanel"], [215, "webpanel"], [211, "webpanel"], [89, "webpanel"], [97, "webpanel"], [302, "webpanel"], [297, "webpanel"], [310, "webpanel"], [315, "webpanel"], [648, "webpanel"], [421, "webpanel"], [425, "webpanel"], [361, "webpanel"], [375, "webpanel"], [366, "webpanel"], [381, "webpanel"], [325, "webpanel"], [346, "webpanel"], [336, "webpanel"], [354, "webpanel"], [321, "webpanel"], [357, "webpanel"]], "bz_vertices": [[276, "bz-vertices"]], "unique": [[271, "unique"]], "wideMAE": [[249, "widemae"]], "select": [[269, "select"]], "get_dE_alpha": [[260, "get-de-alpha"]], "set_default": [[246, "set-default"]], "fermisurface": [[273, "fermisurface"]], "single": [[270, "single"]], "minimize_error": [[263, "minimize-error"]], "get_parameters": [[251, "get-parameters"]], "get_hof": [[261, "get-hof"], [75, "get-hof"]], "multiply_formula": [[264, "multiply-formula"]], "model": [[243, "model"]], "load_data": [[262, "load-data"]], "ase2sprkkr.asr.fere.MaterialNotFoundError": [[254, "ase2sprkkr-asr-fere-materialnotfounderror"]], "parse_refs": [[267, "parse-refs"]], "elements_from_refs": [[258, "elements-from-refs"]], "plot_fermi": [[278, "plot-fermi"]], "unpack_masses": [[247, "unpack-masses"]], "get_vb_cb_indices": [[240, "get-vb-cb-indices"]], "only": [[265, "only"]], "fere": [[252, "fere"]], "ase2sprkkr.asr.fere.ParseError": [[255, "ase2sprkkr-asr-fere-parseerror"]], "add_fermi": [[275, "add-fermi"]], "parse_reactions": [[266, "parse-reactions"]], "nonsc_sphere": [[244, "nonsc-sphere"]], "Result": [[274, "result"], [66, "result"], [49, "result"], [52, "result"], [45, "result"], [210, "result"], [222, "result"], [38, "result"], [91, "result"], [289, "result"], [299, "result"], [312, "result"], [305, "result"], [317, "result"], [420, "result"], [423, "result"], [363, "result"], [384, "result"], [378, "result"], [368, "result"], [323, "result"], [348, "result"], [359, "result"], [327, "result"], [356, "result"], [338, "result"]], "exchange": [[250, "exchange"]], "find_contours": [[277, "find-contours"]], "where": [[272, "where"]], "create_corrected_db": [[257, "create-corrected-db"]], "safe_get": [[268, "safe-get"]], "kptsinsphere": [[241, "kptsinsphere"]], "count": [[256, "count"]], "formulas_eq": [[259, "formulas-eq"]], "ase2sprkkr.asr.fere.DBAlreadyExistsError": [[253, "ase2sprkkr-asr-fere-dbalreadyexistserror"]], "preliminary_refine": [[245, "preliminary-refine"]], "make_the_plots": [[242, "make-the-plots"]], "utils": [[149, "utils"], [655, "utils"], [625, "utils"]], "Functions": [[149, "functions"]], "HTMLEncoder": [[120, "htmlencoder"]], "parse_mod_func": [[158, "parse-mod-func"]], "ase2sprkkr.asr.core.results.UnknownASRResultFormat": [[127, "ase2sprkkr-asr-core-results-unknownasrresultformat"]], "ObjectDescription": [[125, "objectdescription"]], "data_to_dict": [[130, "data-to-dict"]], "file_barrier": [[153, "file-barrier"]], "prepare_result": [[141, "prepare-result"]], "parse_dict_string": [[157, "parse-dict-string"]], "get_key_descriptions": [[134, "get-key-descriptions"]], "get_object_matching_obj_id": [[135, "get-object-matching-obj-id"]], "encode_json": [[152, "encode-json"]], "get_object_types": [[136, "get-object-types"]], "JSONEncoder": [[122, "jsonencoder"]], "dct_to_result": [[131, "dct-to-result"]], "ase2sprkkr.asr.core.results.MetaDataNotSetError": [[124, "ase2sprkkr-asr-core-results-metadatanotseterror"]], "ResultEncoder": [[126, "resultencoder"]], "DictStr": [[147, "dictstr"]], "get_reader_function": [[137, "get-reader-function"]], "types": [[145, "types"], [1127, "types"]], "format_key_description_pair": [[133, "format-key-description-pair"]], "WebPanelEncoder": [[129, "webpanelencoder"]], "ase2sprkkr.asr.core.results.UnknownDataFormat": [[128, "ase2sprkkr-asr-core-results-unknowndataformat"]], "MetaData": [[123, "metadata"]], "read_old_data": [[144, "read-old-data"]], "HackedASRResult": [[121, "hackedasrresult"]], "clickify_docstring": [[148, "clickify-docstring"]], "obj_to_id": [[139, "obj-to-id"]], "md5sum": [[156, "md5sum"]], "read_hacked_data": [[142, "read-hacked-data"]], "make_property": [[138, "make-property"]], "get_recipe_from_name": [[155, "get-recipe-from-name"]], "find_class_matching_version": [[132, "find-class-matching-version"]], "dct_to_object": [[151, "dct-to-object"]], "chdir": [[150, "chdir"]], "object_description_to_object": [[140, "object-description-to-object"]], "AtomsFile": [[146, "atomsfile"]], "get_dep_tree": [[154, "get-dep-tree"]], "read_new_data": [[143, "read-new-data"]], "read_json": [[159, "read-json"]], "Hyperplane": [[61, "hyperplane"]], "Line": [[64, "line"]], "calculators": [[56, "calculators"]], "calculate_intermediates": [[69, "calculate-intermediates"]], "berry": [[44, "berry"]], "convex_hull_planes": [[72, "convex-hull-planes"]], "ase2sprkkr.asr.chc.CHCError": [[59, "ase2sprkkr-asr-chc-chcerror"]], "get_kpts_size": [[54, "get-kpts-size"], [301, "get-kpts-size"], [307, "get-kpts-size"], [635, "get-kpts-size"], [360, "get-kpts-size"], [364, "get-kpts-size"]], "is_collinear": [[77, "is-collinear"]], "Reference": [[65, "reference"]], "plot_with_colors": [[42, "plot-with-colors"]], "bse": [[51, "bse"], [472, "bse"]], "get_calculator": [[57, "get-calculator"]], "bs_pbe_html": [[41, "bs-pbe-html"]], "chc": [[58, "chc"]], "get_coords": [[74, "get-coords"]], "gscheck": [[76, "gscheck"]], "Intermediate": [[62, "intermediate"]], "absorption": [[53, "absorption"]], "bs_pbe": [[40, "bs-pbe"]], "chcut_plot": [[70, "chcut-plot"]], "filrefs": [[73, "filrefs"]], "convex_hull": [[71, "convex-hull"], [90, "convex-hull"]], "LeanIntermediate": [[63, "leanintermediate"]], "is_independent": [[78, "is-independent"]], "append_references": [[68, "append-references"]], "borncharges": [[48, "borncharges"]], "_permutecontain": [[67, "permutecontain"]], "mgs": [[79, "mgs"]], "ConvexHullReference": [[60, "convexhullreference"]], "plot_phases": [[46, "plot-phases"]], "dos": [[216, "dos"], [935, "dos"], [990, "dos"], [484, "dos"]], "evalmodel": [[230, "evalmodel"]], "make_folder_tree": [[200, "make-folder-tree"]], "line_intersection": [[207, "line-intersection"]], "create_columns_fnames": [[226, "create-columns-fnames"]], "plot_formation_and_transitions": [[208, "plot-formation-and-transitions"]], "get_emass_dict_from_row": [[235, "get-emass-dict-from-row"]], "get_range": [[239, "get-range"]], "get_gapskn": [[237, "get-gapskn"]], "line": [[206, "line"]], "em": [[228, "em"]], "collect_data": [[203, "collect-data"], [217, "collect-data"], [646, "collect-data"], [400, "collect-data"]], "fit": [[231, "fit"]], "get_3rd_order_extremum": [[233, "get-3rd-order-extremum"]], "defectformation": [[201, "defectformation"]], "custom_table": [[227, "custom-table"]], "get_extremum_type": [[236, "get-extremum-type"]], "convert_key_to_tuple": [[225, "convert-key-to-tuple"]], "check_soc": [[224, "check-soc"]], "check_and_get_general_inputs": [[202, "check-and-get-general-inputs"]], "find_file_in_folder": [[204, "find-file-in-folder"]], "plot_dimensionality_histogram": [[214, "plot-dimensionality-histogram"]], "get_name": [[238, "get-name"]], "get_dimtypes": [[213, "get-dimtypes"]], "ase2sprkkr.asr.emasses.NoGapError": [[221, "ase2sprkkr-asr-emasses-nogaperror"]], "embands": [[229, "embands"]], "emasses": [[220, "emasses"]], "dimensionality": [[212, "dimensionality"]], "plot": [[218, "plot"], [95, "plot"], [1287, "plot"], [1259, "plot"]], "intersection": [[205, "intersection"]], "calculate_bs_along_emass_vecs": [[223, "calculate-bs-along-emass-vecs"]], "deformationpotentials": [[209, "deformationpotentials"]], "get_2nd_order_extremum": [[232, "get-2nd-order-extremum"]], "get_bt_ks": [[234, "get-bt-ks"]], "pbc": [[9, "pbc"]], "print": [[36, "print"]], "ASE2SPRKKR": [[0, "ase2sprkkr"]], "Usefull links": [[0, "usefull-links"], [1307, "usefull-links"], [1305, "usefull-links"]], "Installation of the package using package managers": [[0, "installation-of-the-package-using-package-managers"], [1306, "installation-of-the-package-using-package-managers"], [1304, "installation-of-the-package-using-package-managers"]], "Further notes": [[0, "further-notes"], [1306, "further-notes"], [1304, "further-notes"]], "Install the packages from GIT (and/or source codes)": [[0, "install-the-packages-from-git-and-or-source-codes"], [1306, "install-the-packages-from-git-and-or-source-codes"], [1304, "install-the-packages-from-git-and-or-source-codes"]], "Requirements": [[0, "requirements"], [1306, "requirements"], [1304, "requirements"]], "Obtaining the package using GIT": [[0, "obtaining-the-package-using-git"], [1306, "obtaining-the-package-using-git"], [1304, "obtaining-the-package-using-git"]], "Using the package (without installing the pip/conda packages)": [[0, "using-the-package-without-installing-the-pip-conda-packages"], [1306, "using-the-package-without-installing-the-pip-conda-packages"], [1304, "using-the-package-without-installing-the-pip-conda-packages"]], "Installation of the package from the sources": [[0, "installation-of-the-package-from-the-sources"], [1306, "installation-of-the-package-from-the-sources"], [1304, "installation-of-the-package-from-the-sources"]], "Documentation of the package": [[0, "documentation-of-the-package"], [1306, "documentation-of-the-package"], [1304, "documentation-of-the-package"]], "How to contribute or to report a bug": [[0, "how-to-contribute-or-to-report-a-bug"], [1306, "how-to-contribute-or-to-report-a-bug"], [1304, "how-to-contribute-or-to-report-a-bug"]], "ase2sprkkr": [[1, "ase2sprkkr"], [1300, "ase2sprkkr"], [1247, "ase2sprkkr"]], "user_preferences_file": [[15, "user-preferences-file"]], "bader": [[35, "bader"]], "visualise": [[31, "visualise"], [1286, "visualise"]], "asr": [[33, "asr"], [34, "asr"]], "add_bs_pbe": [[39, "add-bs-pbe"]], "assertListEqual": [[24, "assertlistequal"], [1278, "assertlistequal"], [1226, "assertlistequal"], [1150, "assertlistequal"], [1051, "assertlistequal"], [1016, "assertlistequal"], [970, "assertlistequal"], [880, "assertlistequal"], [845, "assertlistequal"], [674, "assertlistequal"], [694, "assertlistequal"]], "symbols": [[16, "symbols"]], "filename_from_symbols": [[17, "filename-from-symbols"]], "build": [[3, "build"], [1168, "build"]], "testfce": [[28, "testfce"], [1282, "testfce"], [1230, "testfce"], [1154, "testfce"], [1055, "testfce"], [1020, "testfce"], [974, "testfce"], [884, "testfce"], [850, "testfce"], [678, "testfce"], [699, "testfce"]], "register": [[14, "register"], [11, "register"]], "pretty_symbols": [[18, "pretty-symbols"]], "assert_equals": [[26, "assert-equals"], [1280, "assert-equals"], [1228, "assert-equals"], [1152, "assert-equals"], [1053, "assert-equals"], [1018, "assert-equals"], [972, "assert-equals"], [882, "assert-equals"], [847, "assert-equals"], [676, "assert-equals"], [696, "assert-equals"]], "bandstructure": [[37, "bandstructure"]], "assertDictEqual": [[23, "assertdictequal"], [1277, "assertdictequal"], [1225, "assertdictequal"], [1149, "assertdictequal"], [1050, "assertdictequal"], [1015, "assertdictequal"], [969, "assertdictequal"], [879, "assertdictequal"], [844, "assertdictequal"], [673, "assertdictequal"], [693, "assertdictequal"]], "extdict": [[27, "extdict"], [1281, "extdict"], [1229, "extdict"], [1153, "extdict"], [1054, "extdict"], [1019, "extdict"], [973, "extdict"], [883, "extdict"], [848, "extdict"], [677, "extdict"], [697, "extdict"]], "stack": [[5, "stack"], [1170, "stack"]], "test": [[19, "test"], [1273, "test"], [1268, "test"], [1239, "test"], [1221, "test"], [1145, "test"], [1046, "test"], [1011, "test"], [965, "test"], [875, "test"], [426, "test"]], "load_user_preferences": [[13, "load-user-preferences"]], "check_symmetry": [[10, "check-symmetry"]], "view": [[32, "view"]], "assert_almost_equals": [[25, "assert-almost-equals"], [1279, "assert-almost-equals"], [1227, "assert-almost-equals"], [1151, "assert-almost-equals"], [1052, "assert-almost-equals"], [1017, "assert-almost-equals"], [971, "assert-almost-equals"], [881, "assert-almost-equals"], [846, "assert-almost-equals"], [675, "assert-almost-equals"], [695, "assert-almost-equals"]], "arr_testfce": [[22, "arr-testfce"], [1276, "arr-testfce"], [1224, "arr-testfce"], [1148, "arr-testfce"], [1049, "arr-testfce"], [1014, "arr-testfce"], [968, "arr-testfce"], [878, "arr-testfce"], [843, "arr-testfce"], [672, "arr-testfce"], [692, "arr-testfce"]], "io": [[6, "io"]], "TestCase": [[21, "testcase"], [1275, "testcase"], [1223, "testcase"], [1147, "testcase"], [1048, "testcase"], [1013, "testcase"], [967, "testcase"], [842, "testcase"], [877, "testcase"], [671, "testcase"], [691, "testcase"]], "aperiodic_times": [[4, "aperiodic-times"]], "test_build": [[29, "test-build"], [1233, "test-build"]], "ase_register": [[12, "ase-register"]], "read_sprkkr": [[7, "read-sprkkr"]], "init_tests": [[20, "init-tests"], [1274, "init-tests"], [1222, "init-tests"], [1146, "init-tests"], [1047, "init-tests"], [1012, "init-tests"], [966, "init-tests"], [841, "init-tests"], [876, "init-tests"], [670, "init-tests"], [690, "init-tests"]], "TestBuild": [[30, "testbuild"], [1234, "testbuild"]], "write_sprkkr": [[8, "write-sprkkr"]], "ase": [[2, "ase"]], "orthogonalize": [[82, "orthogonalize"]], "run_command": [[108, "run-command"]], "DictEncoder": [[119, "dictencoder"]], "ASRResult": [[118, "asrresult"]], "format": [[103, "format"]], "get_material_from_folder": [[114, "get-material-from-folder"]], "select_references": [[96, "select-references"]], "mgsls": [[80, "mgsls"]], "core": [[98, "core"]], "append_job": [[100, "append-job"]], "check_git": [[101, "check-git"]], "material": [[112, "material"]], "projuv": [[83, "projuv"]], "Material": [[113, "material"]], "initialize_asr_configuration_dir": [[106, "initialize-asr-configuration-dir"]], "tuplespermuted": [[88, "tuplespermuted"]], "get_reference_energies": [[93, "get-reference-energies"]], "hof": [[94, "hof"]], "get_config_dir": [[104, "get-config-dir"]], "convex_hull_tables": [[92, "convex-hull-tables"]], "cli": [[99, "cli"]], "read_structure": [[84, "read-structure"]], "refs2ims": [[85, "refs2ims"]], "make_panel_figures": [[116, "make-panel-figures"]], "mu_adjustment": [[81, "mu-adjustment"]], "extract_hash_from_file": [[102, "extract-hash-from-file"]], "get_webpanels_from_material": [[115, "get-webpanels-from-material"]], "row2ref": [[87, "row2ref"]], "get_git_rev_list": [[105, "get-git-rev-list"]], "results2ref": [[86, "results2ref"]], "command": [[109, "command"]], "fix_old_files": [[110, "fix-old-files"]], "results": [[117, "results"]], "is_asr_initialized": [[107, "is-asr-initialized"]], "colormesh": [[1291, "colormesh"]], "set_up_common_plot": [[1298, "set-up-common-plot"]], "test_tools": [[1283, "test-tools"]], "create_rc_context": [[1294, "create-rc-context"]], "single_plot": [[1299, "single-plot"]], "Multiplot": [[1288, "multiplot"]], "finish_plot": [[1295, "finish-plot"]], "A1_Fe_scf_simple": [[1303, "a1-fe-scf-simple"], [1302, "a1-fe-scf-simple"], [905, "a1-fe-scf-simple"]], "A2_Fe_scf_input_modifications": [[1303, "a2-fe-scf-input-modifications"], [1302, "a2-fe-scf-input-modifications"], [908, "a2-fe-scf-input-modifications"]], "A3_Fe_dos": [[1303, "a3-fe-dos"], [1302, "a3-fe-dos"], [911, "a3-fe-dos"]], "A4_CPA_Example": [[1303, "a4-cpa-example"], [1302, "a4-cpa-example"], [914, "a4-cpa-example"]], "A5_Al_EOS": [[1303, "a5-al-eos"], [1302, "a5-al-eos"], [917, "a5-al-eos"]], "A6_Cu_MSSPEC": [[1303, "a6-cu-msspec"], [1302, "a6-cu-msspec"], [920, "a6-cu-msspec"]], "A7_SrTiO3_MSSPEC": [[1303, "a7-srtio3-msspec"], [1302, "a7-srtio3-msspec"], [923, "a7-srtio3-msspec"]], "A8_ARPES_and_plotting": [[1303, "a8-arpes-and-plotting"], [1302, "a8-arpes-and-plotting"], [926, "a8-arpes-and-plotting"]], "normalize_rc_params": [[1296, "normalize-rc-params"]], "combine_colormaps": [[1292, "combine-colormaps"]], "ASE2SPR-KKR\u2019s philosophy for the developers": [[1308, "ase2spr-kkr-s-philosophy-for-the-developers"]], "The base philosophy of the package": [[1308, "the-base-philosophy-of-the-package"]], "Structure of the package": [[1308, "structure-of-the-package"]], "common": [[1308, "common"], [702, "common"]], "input_parameters": [[1308, "input-parameters"], [932, "input-parameters"], [958, "input-parameters"], [936, "input-parameters"], [940, "input-parameters"], [938, "input-parameters"], [943, "input-parameters"], [945, "input-parameters"], [934, "input-parameters"], [929, "input-parameters"]], "potentials": [[1308, "potentials"], [1143, "potentials"], [1065, "potentials"]], "outputs": [[1308, "outputs"], [1023, "outputs"]], "sprkkr": [[1308, "sprkkr"], [1163, "sprkkr"]], "tools": [[1308, "tools"], [1246, "tools"], [889, "tools"], [492, "tools"]], "Reading the configuration files": [[1308, "reading-the-configuration-files"]], "Writing the configuration files": [[1308, "writing-the-configuration-files"]], "Running the program": [[1308, "running-the-program"]], "ASE2SPRKKR software package": [[1305, "ase2sprkkr-software-package"]], "Contents": [[1305, null]], "Class documentation": [[1305, "class-documentation"]], "Indices and tables": [[1305, "indices-and-tables"]], "auto_range": [[1289, "auto-range"]], "More about installing of the ASE2SPRKKR package": [[1304, "more-about-installing-of-the-ase2sprkkr-package"]], "plotting_function": [[1297, "plotting-function"]], "version": [[1285, "version"]], "Module version": [[1285, "module-version"]], "combined_colormap": [[1293, "combined-colormap"]], "Some examples of ase2sprkkr": [[1302, "some-examples-of-ase2sprkkr"]], "How to use ASE2SPRKKR": [[1309, "how-to-use-ase2sprkkr"]], "Installation": [[1309, "installation"]], "Usage": [[1309, "usage"]], "Computing a bulk material": [[1309, "computing-a-bulk-material"]], "Defining the material properties": [[1309, "defining-the-material-properties"]], "Reading the results": [[1309, "reading-the-results"]], "Setting the task type and input parameters": [[1309, "setting-the-task-type-and-input-parameters"]], "Working with InputParameters object": [[1309, "working-with-inputparameters-object"]], "Running more subsequent tasks": [[1309, "running-more-subsequent-tasks"]], "Reading the input file": [[1309, "reading-the-input-file"]], "Working with potential files": [[1309, "working-with-potential-files"]], "Generating the input files": [[1309, "generating-the-input-files"]], "A note about potentials and atoms and input_parameters": [[1309, "a-note-about-potentials-and-atoms-and-input-parameters"]], "MPI calculations": [[1309, "mpi-calculations"]], "Bundled tools": [[1309, "bundled-tools"]], "Contributing and error reporting": [[1309, "contributing-and-error-reporting"]], "change_default_kwargs": [[1290, "change-default-kwargs"]], "TestCommon": [[1284, "testcommon"], [886, "testcommon"]], "Changelog": [[1301, "changelog"]], "Version 3.0.2-beta": [[1301, "version-3-0-2-beta"]], "Version 3.0.0-beta": [[1301, "version-3-0-0-beta"]], "User interface": [[1301, "user-interface"], [1301, "id2"], [1301, "id4"], [1301, "id6"]], "Tools": [[1301, "tools"]], "Internals": [[1301, "internals"], [1301, "id1"], [1301, "id3"], [1301, "id5"]], "Refactoring": [[1301, "refactoring"]], "Version 2.2.1": [[1301, "version-2-2-1"]], "Version 2.2.0-beta": [[1301, "version-2-2-0-beta"]], "Version 2.1.1": [[1301, "version-2-1-1"]], "Version 2.0.4": [[1301, "version-2-0-4"]], "Version 2.0.1": [[1301, "version-2-0-1"]], "Version 2.0.0-beta2": [[1301, "version-2-0-0-beta2"]], "Version 2.0.0-beta1": [[1301, "version-2-0-0-beta1"]], "Architecture changes": [[1301, "architecture-changes"]], "Version 1.0.7": [[1301, "version-1-0-7"]], "Version 1.0.6": [[1301, "version-1-0-6"]], "test_sysfile": [[1244, "test-sysfile"]], "commands": [[1249, "commands"]], "TestSysfile": [[1245, "testsysfile"]], "run": [[1267, "run"], [1262, "run"], [1252, "run"], [1248, "run"], [1261, "run"], [1264, "run"], [1270, "run"], [1258, "run"]], "TestSPRKKRAtoms": [[1243, "testsprkkratoms"]], "info": [[1253, "info"]], "test_sprkkr_atoms": [[1242, "test-sprkkr-atoms"]], "parser": [[1269, "parser"], [1251, "parser"], [1266, "parser"], [1257, "parser"], [1260, "parser"], [1263, "parser"]], "info_tasks": [[1256, "info-tasks"]], "main": [[1272, "main"], [922, "main"], [925, "main"], [928, "main"], [910, "main"], [913, "main"], [907, "main"], [891, "main"], [916, "main"], [919, "main"]], "TestSites": [[1241, "testsites"]], "TestsArgAction": [[1254, "testsargaction"]], "show_structure": [[1265, "show-structure"]], "shared": [[1271, "shared"]], "info_output_files": [[1255, "info-output-files"]], "test_sites": [[1240, "test-sites"]], "config": [[1250, "config"], [901, "config"]], "get_atomic_polarization_phase": [[283, "get-atomic-polarization-phase"]], "magnetic_anisotropy": [[316, "magnetic-anisotropy"]], "get_dipole_polarization_phase": [[284, "get-dipole-polarization-phase"]], "get_gap_info": [[295, "get-gap-info"]], "infraredpolarizability": [[311, "infraredpolarizability"]], "gw": [[298, "gw"]], "VacuumLevelResults": [[290, "vacuumlevelresults"]], "GapsResult": [[288, "gapsresult"]], "bz_with_band_extremums": [[291, "bz-with-band-extremums"]], "evacdiff": [[292, "evacdiff"]], "distance_to_non_pbc_boundary": [[282, "distance-to-non-pbc-boundary"]], "get_1bz_k": [[294, "get-1bz-k"]], "MP_interpolate": [[304, "mp-interpolate"]], "gs": [[287, "gs"]], "hse_spinorbit": [[309, "hse-spinorbit"]], "get_phonon_pol": [[314, "get-phonon-pol"]], "hse": [[303, "hse"], [308, "hse"]], "ase2sprkkr.asr.formalpolarization.AtomsTooCloseToBoundary": [[281, "ase2sprkkr-asr-formalpolarization-atomstooclosetoboundary"]], "get_electronic_polarization_phase": [[285, "get-electronic-polarization-phase"]], "formalpolarization": [[280, "formalpolarization"]], "bs_gw": [[300, "bs-gw"]], "gaps": [[293, "gaps"]], "bs_hse": [[306, "bs-hse"]], "get_wavefunctions": [[286, "get-wavefunctions"]], "get_spin_index": [[319, "get-spin-index"]], "get_spin_axis": [[318, "get-spin-axis"]], "vacuumlevels": [[296, "vacuumlevels"]], "create_plot": [[313, "create-plot"], [647, "create-plot"]], "TestCalculator": [[1232, "testcalculator"], [1236, "testcalculator"]], "Site": [[1206, "site"], [1212, "site"]], "AtomicType": [[1211, "atomictype"], [1165, "atomictype"]], "SPRKKRAtoms": [[1209, "sprkkratoms"]], "AtomData": [[1214, "atomdata"]], "sysfile_content": [[1219, "sysfile-content"]], "Todo": [[1219, "id1"]], "SiteType": [[1207, "sitetype"]], "write_sysfile": [[1220, "write-sysfile"]], "test_arpes": [[1231, "test-arpes"]], "ExponentialMesh": [[1200, "exponentialmesh"]], "LayerData": [[1215, "layerdata"]], "reference_systems": [[1203, "reference-systems"]], "structure": [[1213, "structure"]], "sysfile": [[1218, "sysfile"]], "sprkkr_atoms": [[1208, "sprkkr-atoms"]], "structure_file_to_atoms": [[1217, "structure-file-to-atoms"]], "_fast_atoms": [[1237, "fast-atoms"]], "floatjm": [[1216, "floatjm"]], "Mesh": [[1201, "mesh"]], "sites": [[1205, "sites"], [1123, "sites"]], "test_calculator": [[1235, "test-calculator"]], "_clearing_property": [[1202, "clearing-property"]], "ReferenceSystem": [[1204, "referencesystem"]], "sprkkr_grammar_types": [[1210, "sprkkr-grammar-types"]], "test_occupation": [[1238, "test-occupation"]], "section": [[1080, "section"], [1084, "section"], [1088, "section"], [1109, "section"], [1100, "section"], [1105, "section"], [1092, "section"], [1096, "section"], [1118, "section"], [1114, "section"], [1130, "section"], [1122, "section"], [1126, "section"]], "GlobalSystemParameter": [[1086, "globalsystemparameter"]], "lattice": [[1093, "lattice"]], "host_madelung_potential": [[1089, "host-madelung-potential"]], "PotentialSectionDefinition": [[1112, "potentialsectiondefinition"]], "mesh_information": [[1097, "mesh-information"]], "MomentsSectionDefinition": [[1104, "momentssectiondefinition"]], "potential": [[1110, "potential"], [1072, "potential"]], "PotentialSection": [[1111, "potentialsection"], [1139, "potentialsection"]], "OccupationSection": [[1107, "occupationsection"]], "scf_info": [[1119, "scf-info"]], "ReferenceSystemSection": [[1116, "referencesystemsection"]], "GlobalSystemParameterDefinition": [[1087, "globalsystemparameterdefinition"]], "charge_moments": [[1081, "charge-moments"]], "ChargeMomentsSection": [[1082, "chargemomentssection"]], "HostMadelungPotentialSection": [[1090, "hostmadelungpotentialsection"]], "global_system_parameter": [[1085, "global-system-parameter"]], "ChargeMomentsSectionDefinition": [[1083, "chargemomentssectiondefinition"]], "MomentSection": [[1102, "momentsection"]], "PotentialsSection": [[1113, "potentialssection"]], "HostMadelungPotentialSectionDefinition": [[1091, "hostmadelungpotentialsectiondefinition"]], "LatticeSection": [[1094, "latticesection"]], "MeshInformationSectionDefinition": [[1099, "meshinformationsectiondefinition"]], "MomentsSection": [[1103, "momentssection"]], "occupation": [[1106, "occupation"]], "OccupationSectionDefinition": [[1108, "occupationsectiondefinition"]], "MeshInformationSection": [[1098, "meshinformationsection"]], "reference_system": [[1115, "reference-system"]], "LatticeSectionDefinition": [[1095, "latticesectiondefinition"]], "moments": [[1101, "moments"], [1191, "moments"]], "ReferenceSystemSectionDefinition": [[1117, "referencesystemsectiondefinition"]], "SitesSection": [[1124, "sitessection"]], "TypesSection": [[1128, "typessection"]], "ASEArraySectionDefinition": [[1132, "asearraysectiondefinition"]], "Separator": [[1136, "separator"], [1008, "separator"], [806, "separator"]], "RepeatedPotentialSection": [[1141, "repeatedpotentialsection"]], "ScfInfoSectionDefinition": [[1121, "scfinfosectiondefinition"]], "PotentialSectionTrait": [[1140, "potentialsectiontrait"]], "TypesSectionDefinition": [[1129, "typessectiondefinition"]], "test_potential": [[1159, "test-potential"]], "PotentialDefinition": [[1135, "potentialdefinition"]], "PotSectionDefinition": [[1133, "potsectiondefinition"]], "test_custom_section": [[1157, "test-custom-section"]], "PotValueDefinition": [[1134, "potvaluedefinition"]], "SitesSectionDefinition": [[1125, "sitessectiondefinition"]], "test_2D": [[1155, "test-2d"]], "Potential": [[1144, "potential"]], "potential_sections": [[1137, "potential-sections"]], "UniqueListSection": [[1142, "uniquelistsection"]], "ASEArraySection": [[1138, "asearraysection"]], "ScfInfoSection": [[1120, "scfinfosection"]], "Test2DPotential": [[1156, "test2dpotential"]], "potential_definitions": [[1131, "potential-definitions"]], "TestCustomSection": [[1158, "testcustomsection"]], "LatticeData": [[1060, "latticedata"]], "ChargeSectionDefinition": [[1078, "chargesectiondefinition"]], "atomic_types_definition": [[1042, "atomic-types-definition"]], "KkrProcess": [[1044, "kkrprocess"]], "Pearson": [[1061, "pearson"]], "potential_definition": [[1073, "potential-definition"]], "TaskResult": [[1045, "taskresult"]], "task_result": [[1043, "task-result"]], "TestOutput": [[1057, "testoutput"], [1022, "testoutput"]], "definitions": [[1071, "definitions"], [930, "definitions"], [981, "definitions"]], "SectionString": [[1070, "sectionstring"]], "charge": [[1076, "charge"]], "CustomPotentialSectionDefinition": [[1068, "custompotentialsectiondefinition"]], "ScfResult": [[1041, "scfresult"]], "test_output": [[1056, "test-output"]], "winger_seitz_radii": [[1063, "winger-seitz-radii"], [1064, "winger-seitz-radii"]], "ChargeSection": [[1077, "chargesection"]], "CustomSectionToken": [[1069, "customsectiontoken"]], "_sections": [[1075, "sections"]], "CustomPotentialSection": [[1067, "custompotentialsection"]], "custom_potential_section": [[1066, "custom-potential-section"]], "lattice_data": [[1059, "lattice-data"]], "sections": [[1074, "sections"], [946, "sections"]], "ChargesSection": [[1079, "chargessection"]], "international_numbers_to_AP": [[1062, "international-numbers-to-ap"]], "physics": [[1058, "physics"]], "ScfProcess": [[1040, "scfprocess"]], "arpes": [[931, "arpes"], [927, "arpes"], [1030, "arpes"]], "phagen": [[942, "phagen"]], "Cu": [[921, "cu"]], "scf": [[944, "scf"], [1037, "scf"]], "TAU": [[955, "tau"]], "MODE": [[950, "mode"]], "SCF": [[951, "scf"]], "TauSection": [[956, "tausection"]], "STO": [[924, "sto"]], "marpes": [[941, "marpes"]], "CONTROL": [[947, "control"]], "CPA": [[948, "cpa"]], "STRCONST": [[953, "strconst"]], "gilbert": [[937, "gilbert"]], "jxc": [[939, "jxc"]], "TASK": [[954, "task"]], "_nktab_value": [[957, "nktab-value"]], "ENERGY": [[949, "energy"]], "InputParameters": [[959, "inputparameters"]], "bsf": [[933, "bsf"], [986, "bsf"]], "SITES": [[952, "sites"]], "TestPotential": [[1160, "testpotential"]], "ConfigurationSectionTrait": [[1180, "configurationsectiontrait"]], "ConfigurationSection": [[1178, "configurationsection"]], "radial": [[1195, "radial"]], "occupations": [[1193, "occupations"], [468, "occupations"]], "TestStructure": [[1162, "teststructure"]], "atomic_types": [[1164, "atomic-types"]], "SPRKKR": [[1174, "sprkkr"]], "RadialCharge": [[1196, "radialcharge"]], "WriteIoData": [[1189, "writeiodata"]], "atoms_region": [[1166, "atoms-region"]], "io_data": [[1186, "io-data"]], "FilenameTemplator": [[1173, "filenametemplator"]], "configuration": [[1175, "configuration"], [708, "configuration"]], "AtomsRegion": [[1167, "atomsregion"]], "BaseIoData": [[1187, "baseiodata"]], "ConfigurationValue": [[1181, "configurationvalue"]], "ReadIoData": [[1188, "readiodata"]], "ConfigurationValueDefinition": [[1182, "configurationvaluedefinition"]], "ConfigurationFile": [[1176, "configurationfile"]], "unique_mapping": [[1190, "unique-mapping"]], "ConfigurationSectionDefinition": [[1179, "configurationsectiondefinition"]], "calculator": [[1172, "calculator"], [451, "calculator"]], "Module calculator": [[1172, "module-calculator"]], "RepeatedConfigurationSection": [[1185, "repeatedconfigurationsection"]], "CustomConfigurationSection": [[1183, "customconfigurationsection"]], "radial_meshes": [[1199, "radial-meshes"]], "test_structure": [[1161, "test-structure"]], "Moments": [[1192, "moments"]], "RadialPotential": [[1197, "radialpotential"]], "RadialValue": [[1198, "radialvalue"]], "semiinfinite_system": [[1169, "semiinfinite-system"]], "Occupation": [[1194, "occupation"]], "CustomConfigurationValue": [[1184, "customconfigurationvalue"]], "ConfigurationFileDefinition": [[1177, "configurationfiledefinition"]], "vacuum_like": [[1171, "vacuum-like"]], "output_file_header": [[1010, "output-file-header"]], "output_definitions": [[1024, "output-definitions"]], "ScfOutputReader": [[1039, "scfoutputreader"]], "output_files_definitions": [[1004, "output-files-definitions"]], "CommonOutputFile": [[1001, "commonoutputfile"], [983, "commonoutputfile"]], "OutputValueDefinition": [[1027, "outputvaluedefinition"]], "ArpesResult": [[1032, "arpesresult"]], "readers": [[1029, "readers"]], "OutputValueEqualDefinition": [[1028, "outputvalueequaldefinition"]], "DefaultOutputReader": [[1034, "defaultoutputreader"]], "DefaultProcess": [[1035, "defaultprocess"]], "Arithmetic": [[1000, "arithmetic"], [982, "arithmetic"]], "OutputNonameValueDefinition": [[1025, "outputnonamevaluedefinition"]], "create_output_file_definition": [[1009, "create-output-file-definition"]], "default": [[1033, "default"]], "UnknownDataValue": [[1003, "unknowndatavalue"], [985, "unknowndatavalue"]], "DefaultResult": [[1036, "defaultresult"]], "BlankSeparator": [[1005, "blankseparator"], [790, "blankseparator"]], "OutputFileValueDefinition": [[1007, "outputfilevaluedefinition"]], "OutputFile": [[1002, "outputfile"], [984, "outputfile"]], "OutputSectionDefinition": [[1026, "outputsectiondefinition"]], "OutputFileDefinition": [[1006, "outputfiledefinition"]], "RealOrStars": [[1038, "realorstars"]], "ArpesProcess": [[1031, "arpesprocess"]], "test_files": [[1021, "test-files"]], "DOSDefinition": [[992, "dosdefinition"]], "input_parameters_definitions": [[961, "input-parameters-definitions"]], "DOS": [[991, "dos"]], "InputSectionDefinition": [[963, "inputsectiondefinition"]], "test_input_parameters": [[977, "test-input-parameters"]], "BSFOutputFile": [[988, "bsfoutputfile"]], "create_definition": [[989, "create-definition"], [994, "create-definition"], [998, "create-definition"]], "test_definitions": [[975, "test-definitions"]], "output_files": [[980, "output-files"], [999, "output-files"]], "TestInputParameters": [[978, "testinputparameters"]], "BSFDefinition": [[987, "bsfdefinition"]], "DOSOutputFile": [[993, "dosoutputfile"]], "spc": [[995, "spc"]], "InputSection": [[960, "inputsection"]], "ar": [[979, "ar"]], "TestDefinitions": [[976, "testdefinitions"]], "InputValueDefinition": [[964, "inputvaluedefinition"]], "ARPESDefinition": [[996, "arpesdefinition"]], "ARPESOutputFile": [[997, "arpesoutputfile"]], "InputParametersDefinition": [[962, "inputparametersdefinition"]], "sprkkr_executable_suffix": [[903, "sprkkr-executable-suffix"]], "UniqueValuesMapping": [[896, "uniquevaluesmapping"]], "test_grammar_types": [[887, "test-grammar-types"]], "unique_values": [[895, "unique-values"]], "examples": [[904, "examples"]], "Fe": [[912, "fe"], [909, "fe"], [906, "fe"]], "parse_named_option": [[893, "parse-named-option"]], "Al": [[918, "al"]], "warnings": [[899, "warnings"], [839, "warnings"]], "ase2sprkkr.common.warnings.DataValidityWarning": [[900, "ase2sprkkr-common-warnings-datavaliditywarning"]], "parse_inches": [[892, "parse-inches"]], "value_definitions": [[897, "value-definitions"]], "append_id_to_filename": [[890, "append-id-to-filename"]], "calculator_parameters": [[902, "calculator-parameters"]], "TestGrammar": [[888, "testgrammar"]], "ValueDefinition": [[898, "valuedefinition"]], "Ni_doped_STO": [[915, "ni-doped-sto"]], "test_common": [[885, "test-common"]], "parse_tuple_function": [[894, "parse-tuple-function"]], "DangerousValue": [[863, "dangerousvalue"]], "copy_list": [[853, "copy-list"]], "RepeatedConfigurationContainer": [[870, "repeatedconfigurationcontainer"]], "no_output": [[858, "no-output"]], "BaseOption": [[861, "baseoption"]], "AsyncioFileReader": [[867, "asynciofilereader"]], "options": [[860, "options"]], "patch_package": [[849, "patch-package"], [698, "patch-package"]], "process_output_reader": [[866, "process-output-reader"]], "njit": [[856, "njit"]], "ase2sprkkr.common.grammar_types.warnings.SuspiciousValueWarning": [[840, "ase2sprkkr-common-grammar-types-warnings-suspiciousvaluewarning"]], "first_non_none": [[855, "first-non-none"]], "_call_function": [[872, "call-function"]], "subprocess": [[871, "subprocess"]], "Dummy": [[864, "dummy"]], "CustomOption": [[862, "customoption"]], "Option": [[865, "option"]], "ignore_signal": [[873, "ignore-signal"]], "misc": [[851, "misc"]], "ProcessOutputReader": [[868, "processoutputreader"]], "dict_first_item": [[854, "dict-first-item"]], "as_integer": [[852, "as-integer"]], "NoOutput": [[859, "nooutput"]], "in_subprocess": [[874, "in-subprocess"]], "numpy_index": [[857, "numpy-index"]], "repeated_configuration_containers": [[869, "repeated-configuration-containers"]], "spglib": [[666, "spglib"]], "restrict_spin_projection_2d": [[654, "restrict-spin-projection-2d"]], "empty_spheres": [[662, "empty-spheres"], [659, "empty-spheres"], [665, "empty-spheres"], [685, "empty-spheres"]], "empty_spheres_atoms": [[663, "empty-spheres-atoms"]], "get_filenames": [[640, "get-filenames"]], "get_parstr": [[641, "get-parstr"]], "refinegs": [[643, "refinegs"], [639, "refinegs"]], "add_empty_spheres": [[661, "add-empty-spheres"]], "atoms2spgcell": [[651, "atoms2spgcell"]], "test_es_finder": [[679, "test-es-finder"]], "es_finder": [[664, "es-finder"]], "workflow": [[657, "workflow"]], "symmetry": [[649, "symmetry"], [686, "symmetry"], [481, "symmetry"]], "has_inversion": [[653, "has-inversion"]], "something": [[644, "something"]], "calculate_something": [[645, "calculate-something"]], "possibly_equivalent_sites": [[668, "possibly-equivalent-sites"]], "_atoms2symmetry_gpaw": [[650, "atoms2symmetry-gpaw"]], "tests": [[669, "tests"], [689, "tests"]], "SpacegroupInfo": [[667, "spacegroupinfo"]], "timed_print": [[656, "timed-print"]], "bindings": [[658, "bindings"]], "EmptySpheresResult": [[660, "emptyspheresresult"]], "nonselfc": [[642, "nonselfc"]], "atoms2symmetry": [[652, "atoms2symmetry"]], "Unsigned": [[808, "unsigned"]], "qstring": [[816, "qstring"]], "flag": [[812, "flag"]], "unsigned": [[820, "unsigned"]], "compare_numpy_values": [[829, "compare-numpy-values"]], "real": [[817, "real"]], "type_from_value": [[834, "type-from-value"]], "type_from_default_value": [[832, "type-from-default-value"]], "type_from_set_map": [[837, "type-from-set-map"]], "mixed": [[835, "mixed"]], "energy": [[811, "energy"]], "grammar_type": [[826, "grammar-type"]], "line_string": [[815, "line-string"]], "Real": [[804, "real"]], "Number": [[801, "number"]], "String": [[807, "string"]], "type_from_type_map": [[838, "type-from-type-map"]], "separator": [[818, "separator"]], "int_bool": [[813, "int-bool"]], "data": [[821, "data"]], "NumpyArray": [[822, "numpyarray"]], "LineString": [[800, "linestring"]], "string": [[819, "string"]], "GrammarType": [[827, "grammartype"]], "recognized_set_types": [[836, "recognized-set-types"], [831, "recognized-set-types"]], "TypedGrammarType": [[828, "typedgrammartype"]], "RawData": [[824, "rawdata"]], "date": [[810, "date"]], "RealWithUnits": [[805, "realwithunits"]], "integer": [[814, "integer"]], "format_for_type": [[830, "format-for-type"]], "Prefixed": [[823, "prefixed"]], "ObjectNumber": [[802, "objectnumber"]], "boolean": [[809, "boolean"]], "QString": [[803, "qstring"]], "type_from_type": [[833, "type-from-type"]], "RestOfTheFile": [[825, "restofthefile"]], "switch": [[730, "switch"]], "doc": [[750, "doc"]], "cached_property": [[743, "cached-property"]], "cache": [[741, "cache"]], "Gather": [[722, "gather"]], "dict_from_parsed": [[737, "dict-from-parsed"]], "SeparatorDefinition": [[725, "separatordefinition"]], "Switch": [[727, "switch"]], "decorators": [[738, "decorators"]], "container_definitions": [[731, "container-definitions"]], "Directory": [[749, "directory"]], "ControlDefinition": [[721, "controldefinition"]], "VirtualDefinition": [[728, "virtualdefinition"]], "add_excluded_names_condition": [[736, "add-excluded-names-condition"]], "full_format_for_string": [[756, "full-format-for-string"]], "maybeclassmethod": [[745, "maybeclassmethod"]], "RealItemDefinition": [[724, "realitemdefinition"]], "MergeDictAdaptor": [[734, "mergedictadaptor"]], "warnings_from_here": [[747, "warnings-from-here"]], "class_property": [[744, "class-property"]], "std_cached_property": [[746, "std-cached-property"]], "format_for_string": [[754, "format-for-string"]], "GeneratedValueDefinition": [[759, "generatedvaluedefinition"]], "process_input_parameters_definition": [[751, "process-input-parameters-definition"]], "formats": [[753, "formats"]], "ConfigurationRootDefinition": [[732, "configurationrootdefinition"]], "generated_configuration_definitions": [[757, "generated-configuration-definitions"]], "Stub": [[726, "stub"]], "add_to_signature": [[740, "add-to-signature"]], "BaseGeneratedValueDefinition": [[758, "basegeneratedvaluedefinition"]], "SectionDefinition": [[735, "sectiondefinition"]], "cached_class_property": [[742, "cached-class-property"]], "gather": [[729, "gather"]], "directory": [[748, "directory"]], "fortran_format": [[755, "fortran-format"]], "ContainerDefinition": [[733, "containerdefinition"]], "add_called_class_as_argument": [[739, "add-called-class-as-argument"]], "Ignored": [[723, "ignored"]], "BaseDefinition": [[720, "basedefinition"]], "verbatim": [[752, "verbatim"]], "FixedPointNumber": [[795, "fixedpointnumber"]], "generate_grammar": [[768, "generate-grammar"]], "Array": [[777, "array"]], "end_of_file": [[767, "end-of-file"]], "Integer": [[798, "integer"]], "set_of_integers": [[784, "set-of-integers"]], "arrays": [[776, "arrays"]], "BaseString": [[788, "basestring"]], "optional_quote": [[771, "optional-quote"]], "SkipToRegex": [[762, "skiptoregex"]], "Sequence": [[779, "sequence"]], "basic": [[786, "basic"]], "grammar_types": [[775, "grammar-types"]], "optional_line_end": [[770, "optional-line-end"]], "IntBool": [[797, "intbool"]], "BasicSeparator": [[789, "basicseparator"]], "Complex": [[778, "complex"]], "replace_whitechars": [[772, "replace-whitechars"]], "Table": [[782, "table"]], "SetOf": [[780, "setof"]], "BaseRealWithUnits": [[787, "baserealwithunits"]], "Date": [[792, "date"]], "addConditionEx": [[764, "addconditionex"]], "grammar": [[761, "grammar"]], "addParseActionEx": [[765, "addparseactionex"]], "DefKeyword": [[793, "defkeyword"]], "Energy": [[794, "energy"]], "set_of_reals": [[785, "set-of-reals"]], "separator_pattern": [[774, "separator-pattern"]], "delimitedList": [[766, "delimitedlist"]], "complex_number": [[783, "complex-number"]], "separator_grammar": [[773, "separator-grammar"]], "SpecialColumn": [[781, "specialcolumn"]], "Flag": [[796, "flag"]], "Keyword": [[799, "keyword"]], "line_end": [[769, "line-end"]], "Bool": [[791, "bool"]], "NumpyViewDefinition": [[760, "numpyviewdefinition"]], "White": [[763, "white"]], "test_spglib": [[681, "test-spglib"]], "DictAdaptor": [[715, "dictadaptor"]], "allowed_types": [[704, "allowed-types"]], "alternative_types": [[703, "alternative-types"]], "spheres": [[684, "spheres"]], "find_symmetry_ex": [[688, "find-symmetry-ex"]], "normalize_type": [[705, "normalize-type"]], "BaseConfigurationContainer": [[711, "baseconfigurationcontainer"]], "Section": [[718, "section"]], "CustomSection": [[714, "customsection"]], "configuration_definitions": [[719, "configuration-definitions"]], "test_spheres": [[700, "test-spheres"]], "TestSpgilib": [[682, "testspgilib"]], "ase2sprkkr.common.configuration_containers.DisabledAttributeError": [[716, "ase2sprkkr-common-configuration-containers-disabledattributeerror"]], "configuration_containers": [[710, "configuration-containers"]], "RootConfigurationContainer": [[717, "rootconfigurationcontainer"]], "find_symmetry": [[687, "find-symmetry"]], "Configuration": [[709, "configuration"]], "ConfigurationContainer": [[713, "configurationcontainer"]], "BaseSection": [[712, "basesection"]], "TestEsFinder": [[680, "testesfinder"]], "xband": [[683, "xband"]], "TestSpheres": [[701, "testspheres"]], "normalize_type_map": [[706, "normalize-type-map"]], "types_alternatives": [[707, "types-alternatives"]], "magnetic_atoms": [[638, "magnetic-atoms"]], "test_setup_decorate": [[604, "test-setup-decorate"]], "test_info_call_from_cli": [[602, "test-info-call-from-cli"]], "gpw2eigs": [[633, "gpw2eigs"], [631, "gpw2eigs"]], "test_setup_magnetize": [[611, "test-setup-magnetize"], [614, "test-setup-magnetize"], [610, "test-setup-magnetize"]], "test_setup_strains": [[618, "test-setup-strains"], [617, "test-setup-strains"]], "test_setinfo": [[600, "test-setinfo"]], "test_setup_scanparams": [[615, "test-setup-scanparams"]], "test_info_raises_with_protected_key": [[603, "test-info-raises-with-protected-key"]], "test_stiffness_gpaw": [[624, "test-stiffness-gpaw"]], "test_setup_displacements": [[607, "test-setup-displacements"], [606, "test-setup-displacements"]], "get_eigenvalues": [[630, "get-eigenvalues"]], "kpts": [[634, "kpts"]], "test_setup_materials": [[613, "test-setup-materials"]], "test_info": [[601, "test-info"]], "calc2eigs": [[632, "calc2eigs"]], "test_setup_symmetrize": [[620, "test-setup-symmetrize"], [621, "test-setup-symmetrize"]], "fermi_level": [[629, "fermi-level"]], "parse_arg": [[627, "parse-arg"]], "test_setup_params": [[616, "test-setup-params"]], "test_setup_displacements_get_all_displacements": [[609, "test-setup-displacements-get-all-displacements"]], "test_setup_strains_get_relevant_strains": [[619, "test-setup-strains-get-relevant-strains"]], "test_setup_displacements_displace_atom": [[608, "test-setup-displacements-displace-atom"]], "test_stiffness": [[622, "test-stiffness"]], "args": [[626, "args"]], "calculator_utils": [[628, "calculator-utils"]], "test_stiffness_emt": [[623, "test-stiffness-emt"]], "test_setup_decorate_si": [[605, "test-setup-decorate-si"]], "is_magnetic": [[637, "is-magnetic"]], "magnetism": [[636, "magnetism"]], "test_setup_magnetize_state_inputs": [[612, "test-setup-magnetize-state-inputs"]], "test_formalpolarization": [[562, "test-formalpolarization"], [563, "test-formalpolarization"]], "test_env_variables": [[561, "test-env-variables"]], "test_relax_bn_gpaw": [[594, "test-relax-bn-gpaw"]], "test_gs_asr_cli_results_figures": [[567, "test-gs-asr-cli-results-figures"]], "test_projected_bs_mocked": [[589, "test-projected-bs-mocked"]], "test_relax_si_gpaw": [[599, "test-relax-si-gpaw"]], "test_projected_bandstructure": [[588, "test-projected-bandstructure"]], "test_pdos_full": [[575, "test-pdos-full"]], "test_gw": [[570, "test-gw"], [569, "test-gw"]], "test_raman": [[591, "test-raman"], [590, "test-raman"]], "test_relax": [[592, "test-relax"], [432, "test-relax"]], "test_relax_emt_fail_broken_symmetry": [[596, "test-relax-emt-fail-broken-symmetry"]], "test_pdos": [[573, "test-pdos"], [574, "test-pdos"]], "test_relax_emt": [[595, "test-relax-emt"]], "test_plasmafrequency": [[584, "test-plasmafrequency"], [585, "test-plasmafrequency"]], "zero_pad_non_pbc_strain_directions": [[583, "zero-pad-non-pbc-strain-directions"]], "test_relax_magmoms": [[598, "test-relax-magmoms"]], "test_relax_basic": [[593, "test-relax-basic"]], "get_strain_from_atoms": [[581, "get-strain-from-atoms"]], "test_polarizability": [[586, "test-polarizability"], [587, "test-polarizability"]], "test_gs_integration_gpaw": [[568, "test-gs-integration-gpaw"]], "test_hse": [[572, "test-hse"], [571, "test-hse"]], "test_piezoelectrictensor": [[580, "test-piezoelectrictensor"], [582, "test-piezoelectrictensor"], [430, "test-piezoelectrictensor"]], "test_gs": [[566, "test-gs"], [565, "test-gs"]], "test_phonons": [[577, "test-phonons"], [576, "test-phonons"]], "test_formalpolarization_test_atoms_too_close_to_boundary": [[564, "test-formalpolarization-test-atoms-too-close-to-boundary"]], "test_fixtures": [[560, "test-fixtures"]], "test_phonopy": [[579, "test-phonopy"], [578, "test-phonopy"]], "test_relax_find_higher_symmetry": [[597, "test-relax-find-higher-symmetry"]], "make_test_db": [[549, "make-test-db"]], "test_database_rmsd_move_one_atom": [[543, "test-database-rmsd-move-one-atom"]], "MyWebPanel": [[524, "mywebpanel"]], "test_database_fromtree": [[533, "test-database-fromtree"]], "test_asr_cli_results_figures_gs": [[520, "test-asr-cli-results-figures-gs"]], "MyResult": [[522, "myresult"]], "test_database_totree": [[550, "test-database-totree"], [548, "test-database-totree"]], "test_database_fromtree_totree": [[537, "test-database-fromtree-totree"]], "folder_tree": [[534, "folder-tree"]], "rattle_atoms": [[540, "rattle-atoms"]], "test_database_duplicates_filter_magstate": [[531, "test-database-duplicates-filter-magstate"]], "test_database_totree_files_and_hard_links": [[551, "test-database-totree-files-and-hard-links"]], "test_emasses_indirect": [[559, "test-emasses-indirect"]], "test_core_results": [[521, "test-core-results"]], "test_database_rmsd_rattled": [[546, "test-database-rmsd-rattled"]], "test_dimensionality": [[553, "test-dimensionality"], [552, "test-dimensionality"]], "test_database_rmsd_not_equal": [[545, "test-database-rmsd-not-equal"]], "test_emasses": [[555, "test-emasses"]], "test_database_rmsd_duplicates": [[541, "test-database-rmsd-duplicates"]], "test_database_rmsd_duplicates_comparison_keys": [[542, "test-database-rmsd-duplicates-comparison-keys"]], "test_emasses_freelectron": [[558, "test-emasses-freelectron"]], "test_reading_older_version": [[526, "test-reading-older-version"]], "resultstest": [[557, "resultstest"]], "make_tree": [[535, "make-tree"]], "test_database_duplicates": [[529, "test-database-duplicates"], [530, "test-database-duplicates"]], "test_database_duplicates_no_duplicates": [[532, "test-database-duplicates-no-duplicates"]], "test_database_fromtree_works_without_write_permission": [[538, "test-database-fromtree-works-without-write-permission"]], "test_reading_result": [[527, "test-reading-result"]], "test_database_fromtree_raises_when_missing_uids": [[536, "test-database-fromtree-raises-when-missing-uids"]], "_get_all_eigenvalues": [[556, "get-all-eigenvalues"]], "test_database_rmsd_none_handling": [[544, "test-database-rmsd-none-handling"]], "test_dimensionality_cli": [[554, "test-dimensionality-cli"]], "test_database_rmsd": [[539, "test-database-rmsd"]], "MyResultVer0": [[523, "myresultver0"]], "test_results_object": [[528, "test-results-object"]], "test_database_rmsd_rotation": [[547, "test-database-rmsd-rotation"]], "test_read_old_format": [[525, "test-read-old-format"]], "test_convex_hull": [[511, "test-convex-hull"], [512, "test-convex-hull"]], "test_recipe_defaults": [[516, "test-recipe-defaults"]], "ibz2bz": [[486, "ibz2bz"], [487, "ibz2bz"]], "test_asr_find_help": [[505, "test-asr-find-help"]], "recipe": [[514, "recipe"]], "test_borncharges": [[499, "test-borncharges"], [498, "test-borncharges"], [428, "test-borncharges"]], "test_asr_find_no_versions": [[506, "test-asr-find-no-versions"]], "test_recipe_setting_new_defaults": [[517, "test-recipe-setting-new-defaults"]], "test_bandstructure_main": [[494, "test-bandstructure-main"]], "exx": [[491, "exx"]], "test_asr_results_help": [[509, "test-asr-results-help"]], "test_recipe_setting_overriding_defaults": [[518, "test-recipe-setting-overriding-defaults"]], "xc": [[490, "xc"]], "utilities": [[483, "utilities"]], "test_bse": [[500, "test-bse"], [501, "test-bse"]], "test_asr_list": [[507, "test-asr-list"]], "test_asr_results_bandstructure": [[508, "test-asr-results-bandstructure"]], "progressbar": [[488, "progressbar"]], "test_core_material": [[519, "test-core-material"]], "test_asr": [[503, "test-asr"]], "Symmetry": [[482, "symmetry"]], "test_asr_run": [[510, "test-asr-run"]], "ProgressBar": [[489, "progressbar"]], "test_berry": [[495, "test-berry"], [496, "test-berry"]], "test_asr_find": [[504, "test-asr-find"]], "test_berry_nontrivial": [[497, "test-berry-nontrivial"]], "test_core": [[515, "test-core"], [513, "test-core"]], "soc_eigenstates": [[480, "soc-eigenstates"]], "raw_orbital_LDOS": [[485, "raw-orbital-ldos"]], "test_cli": [[502, "test-cli"]], "test_bandstructure": [[493, "test-bandstructure"]], "SOC": [[479, "soc"]], "hybrids": [[458, "hybrids"]], "DOSCalculator": [[453, "doscalculator"]], "set_asr_test_environ_variable": [[444, "set-asr-test-environ-variable"]], "barrier": [[464, "barrier"]], "test_material": [[445, "test-material"]], "world_sum": [[467, "world-sum"]], "WaveFunctions": [[457, "wavefunctions"]], "kpt_descriptor": [[460, "kpt-descriptor"]], "response": [[471, "response"]], "df": [[474, "df"]], "Occupations": [[454, "occupations"]], "get_berry_phases": [[450, "get-berry-phases"]], "DielectricFunction": [[475, "dielectricfunction"]], "get_webcontent": [[442, "get-webcontent"]], "Setups": [[456, "setups"]], "ASRCalculator": [[452, "asrcalculator"]], "gpaw": [[448, "gpaw"]], "new_communicator": [[466, "new-communicator"]], "eigenvalues": [[459, "eigenvalues"]], "create_occ_calc": [[470, "create-occ-calc"]], "materials": [[446, "materials"], [410, "materials"]], "duplicates_test_db": [[441, "duplicates-test-db"]], "Parameters": [[455, "parameters"]], "broadcast": [[465, "broadcast"]], "mocks": [[447, "mocks"]], "berryphase": [[449, "berryphase"]], "asr_tmpdir_w_params": [[440, "asr-tmpdir-w-params"]], "to1bz": [[462, "to1bz"]], "BSE": [[473, "bse"]], "kpts2sizeandoffsets": [[461, "kpts2sizeandoffsets"]], "G0W0": [[477, "g0w0"]], "mpi": [[463, "mpi"]], "g0w0": [[476, "g0w0"]], "spinorbit": [[478, "spinorbit"]], "FermiDirac": [[469, "fermidirac"]], "mockgpaw": [[443, "mockgpaw"]], "magnetize": [[409, "magnetize"]], "params": [[411, "params"]], "fixtures": [[437, "fixtures"]], "pytest_sessionstart": [[436, "pytest-sessionstart"]], "structureinfo": [[422, "structureinfo"]], "displace_atom": [[406, "displace-atom"]], "get_reduced_formula": [[424, "get-reduced-formula"]], "setup_defects": [[402, "setup-defects"]], "acceptance": [[427, "acceptance"]], "stiffness": [[419, "stiffness"]], "setup_strains": [[416, "setup-strains"]], "create_folder_structure": [[401, "create-folder-structure"]], "get_displacement_folder": [[408, "get-displacement-folder"]], "test_piezo_BN": [[431, "test-piezo-bn"]], "strains": [[413, "strains"]], "asr_tmpdir": [[439, "asr-tmpdir"]], "setup_supercell": [[403, "setup-supercell"]], "get_all_displacements": [[407, "get-all-displacements"]], "_get_webcontent": [[438, "get-webcontent"]], "create_displacements_folder": [[405, "create-displacements-folder"]], "displacements": [[404, "displacements"]], "symmetrize_atoms": [[418, "symmetrize-atoms"]], "test_relax_fe_gpaw": [[433, "test-relax-fe-gpaw"]], "test_gpaw_berry_get_berry_phases_integration": [[429, "test-gpaw-berry-get-berry-phases-integration"]], "conftest": [[434, "conftest"]], "pytest_configure": [[435, "pytest-configure"]], "scanparams": [[412, "scanparams"]], "get_strained_folder_name": [[415, "get-strained-folder-name"]], "symmetrize": [[417, "symmetrize"]], "get_relevant_strains": [[414, "get-relevant-strains"]], "is_relax_done": [[386, "is-relax-done"]], "projected_bandstructure": [[367, "projected-bandstructure"]], "raman": [[380, "raman"], [377, "raman"]], "ase2sprkkr.asr.relax.BrokenSymmetryError": [[383, "ase2sprkkr-asr-relax-brokensymmetryerror"]], "get_p_ab": [[398, "get-p-ab"]], "get_bs_sampling": [[369, "get-bs-sampling"]], "setinfo": [[390, "setinfo"]], "get_pie_markers": [[371, "get-pie-markers"]], "generate_structures": [[397, "generate-structures"]], "count_deg": [[379, "count-deg"]], "polarizability": [[365, "polarizability"], [362, "polarizability"]], "get_pie_slice": [[372, "get-pie-slice"]], "apply_substitution": [[395, "apply-substitution"]], "setup": [[393, "setup"]], "myBFGS": [[387, "mybfgs"]], "decorate": [[394, "decorate"]], "relax": [[382, "relax"], [388, "relax"]], "check_key_value": [[392, "check-key-value"]], "KeyValuePair": [[391, "keyvaluepair"]], "get_orbital_ldos": [[370, "get-orbital-ldos"]], "projected_bs_pbe": [[374, "projected-bs-pbe"]], "set_initial_magnetic_moments": [[389, "set-initial-magnetic-moments"]], "find_substitutions": [[396, "find-substitutions"]], "push": [[376, "push"]], "get_yl_ordering": [[373, "get-yl-ordering"]], "defects": [[399, "defects"]], "SpgAtoms": [[385, "spgatoms"]], "spin_axis": [[320, "spin-axis"]], "calculate_pdos": [[328, "calculate-pdos"]], "plot_phonons": [[352, "plot-phonons"], [342, "plot-phonons"]], "plot_pdos_nosoc": [[334, "plot-pdos-nosoc"]], "creates": [[339, "creates"]], "distance_to_sc": [[349, "distance-to-sc"]], "plot_pdos": [[333, "plot-pdos"]], "get_yl_colors": [[331, "get-yl-colors"]], "phonons": [[337, "phonons"]], "mingocorrection": [[340, "mingocorrection"]], "get_magstate": [[324, "get-magstate"]], "plasmafrequency": [[358, "plasmafrequency"]], "pdos": [[332, "pdos"], [326, "pdos"]], "get_ordered_syl_dict": [[330, "get-ordered-syl-dict"]], "magstate": [[322, "magstate"]], "piezoelectrictensor": [[355, "piezoelectrictensor"]], "requires": [[353, "requires"], [343, "requires"]], "plot_bandstructure": [[351, "plot-bandstructure"], [341, "plot-bandstructure"]], "topckl": [[345, "topckl"]], "lattice_vectors": [[350, "lattice-vectors"]], "get_l_a": [[329, "get-l-a"]], "phonopy": [[347, "phonopy"]], "plot_pdos_soc": [[335, "plot-pdos-soc"]]}, "indexentries": {"ase2sprkkr": [[1, "module-ase2sprkkr"]], "module": [[1, "module-ase2sprkkr"], [2, "module-ase2sprkkr.ase"], [3, "module-ase2sprkkr.ase.build"], [6, "module-ase2sprkkr.ase.io"], [9, "module-ase2sprkkr.ase.pbc"], [11, "module-ase2sprkkr.ase.register"], [16, "module-ase2sprkkr.ase.symbols"], [19, "module-ase2sprkkr.ase.test"], [20, "module-ase2sprkkr.ase.test.init_tests"], [29, "module-ase2sprkkr.ase.test.test_build"], [31, "module-ase2sprkkr.ase.visualise"], [33, "module-ase2sprkkr.asr"], [34, "module-ase2sprkkr.asr.asr"], [35, "module-ase2sprkkr.asr.bader"], [37, "module-ase2sprkkr.asr.bandstructure"], [44, "module-ase2sprkkr.asr.berry"], [48, "module-ase2sprkkr.asr.borncharges"], [51, "module-ase2sprkkr.asr.bse"], [56, "module-ase2sprkkr.asr.calculators"], [58, "module-ase2sprkkr.asr.chc"], [90, "module-ase2sprkkr.asr.convex_hull"], [98, "module-ase2sprkkr.asr.core"], [99, "module-ase2sprkkr.asr.core.cli"], [109, "module-ase2sprkkr.asr.core.command"], [110, "module-ase2sprkkr.asr.core.fix_old_files"], [112, "module-ase2sprkkr.asr.core.material"], [117, "module-ase2sprkkr.asr.core.results"], [145, "module-ase2sprkkr.asr.core.types"], [149, "module-ase2sprkkr.asr.core.utils"], [165, "module-ase2sprkkr.asr.database"], [166, "module-ase2sprkkr.asr.database.browser"], [181, "module-ase2sprkkr.asr.database.check"], [182, "module-ase2sprkkr.asr.database.clonetree"], [183, "module-ase2sprkkr.asr.database.duplicates"], [188, "module-ase2sprkkr.asr.database.material_fingerprint"], [192, "module-ase2sprkkr.asr.database.merge"], [193, "module-ase2sprkkr.asr.database.rmsd"], [197, "module-ase2sprkkr.asr.database.templates"], [198, "module-ase2sprkkr.asr.database.totree"], [201, "module-ase2sprkkr.asr.defectformation"], [209, "module-ase2sprkkr.asr.deformationpotentials"], [212, "module-ase2sprkkr.asr.dimensionality"], [216, "module-ase2sprkkr.asr.dos"], [220, "module-ase2sprkkr.asr.emasses"], [250, "module-ase2sprkkr.asr.exchange"], [252, "module-ase2sprkkr.asr.fere"], [273, "module-ase2sprkkr.asr.fermisurface"], [280, "module-ase2sprkkr.asr.formalpolarization"], [287, "module-ase2sprkkr.asr.gs"], [298, "module-ase2sprkkr.asr.gw"], [303, "module-ase2sprkkr.asr.hse"], [311, "module-ase2sprkkr.asr.infraredpolarizability"], [316, "module-ase2sprkkr.asr.magnetic_anisotropy"], [322, "module-ase2sprkkr.asr.magstate"], [326, "module-ase2sprkkr.asr.pdos"], [337, "module-ase2sprkkr.asr.phonons"], [347, "module-ase2sprkkr.asr.phonopy"], [355, "module-ase2sprkkr.asr.piezoelectrictensor"], [358, "module-ase2sprkkr.asr.plasmafrequency"], [362, "module-ase2sprkkr.asr.polarizability"], [367, "module-ase2sprkkr.asr.projected_bandstructure"], [376, "module-ase2sprkkr.asr.push"], [377, "module-ase2sprkkr.asr.raman"], [382, "module-ase2sprkkr.asr.relax"], [390, "module-ase2sprkkr.asr.setinfo"], [393, "module-ase2sprkkr.asr.setup"], [394, "module-ase2sprkkr.asr.setup.decorate"], [399, "module-ase2sprkkr.asr.setup.defects"], [404, "module-ase2sprkkr.asr.setup.displacements"], [409, "module-ase2sprkkr.asr.setup.magnetize"], [410, "module-ase2sprkkr.asr.setup.materials"], [411, "module-ase2sprkkr.asr.setup.params"], [412, "module-ase2sprkkr.asr.setup.scanparams"], [413, "module-ase2sprkkr.asr.setup.strains"], [417, "module-ase2sprkkr.asr.setup.symmetrize"], [419, "module-ase2sprkkr.asr.stiffness"], [422, "module-ase2sprkkr.asr.structureinfo"], [426, "module-ase2sprkkr.asr.test"], [427, "module-ase2sprkkr.asr.test.acceptance"], [428, "module-ase2sprkkr.asr.test.acceptance.test_borncharges"], [430, "module-ase2sprkkr.asr.test.acceptance.test_piezoelectrictensor"], [432, "module-ase2sprkkr.asr.test.acceptance.test_relax"], [434, "module-ase2sprkkr.asr.test.conftest"], [437, "module-ase2sprkkr.asr.test.fixtures"], [446, "module-ase2sprkkr.asr.test.materials"], [447, "module-ase2sprkkr.asr.test.mocks"], [448, "module-ase2sprkkr.asr.test.mocks.gpaw"], [449, "module-ase2sprkkr.asr.test.mocks.gpaw.berryphase"], [451, "module-ase2sprkkr.asr.test.mocks.gpaw.calculator"], [458, "module-ase2sprkkr.asr.test.mocks.gpaw.hybrids"], [459, "module-ase2sprkkr.asr.test.mocks.gpaw.hybrids.eigenvalues"], [460, "module-ase2sprkkr.asr.test.mocks.gpaw.kpt_descriptor"], [463, "module-ase2sprkkr.asr.test.mocks.gpaw.mpi"], [468, "module-ase2sprkkr.asr.test.mocks.gpaw.occupations"], [471, "module-ase2sprkkr.asr.test.mocks.gpaw.response"], [472, "module-ase2sprkkr.asr.test.mocks.gpaw.response.bse"], [474, "module-ase2sprkkr.asr.test.mocks.gpaw.response.df"], [476, "module-ase2sprkkr.asr.test.mocks.gpaw.response.g0w0"], [478, "module-ase2sprkkr.asr.test.mocks.gpaw.spinorbit"], [481, "module-ase2sprkkr.asr.test.mocks.gpaw.symmetry"], [483, "module-ase2sprkkr.asr.test.mocks.gpaw.utilities"], [484, "module-ase2sprkkr.asr.test.mocks.gpaw.utilities.dos"], [486, "module-ase2sprkkr.asr.test.mocks.gpaw.utilities.ibz2bz"], [488, "module-ase2sprkkr.asr.test.mocks.gpaw.utilities.progressbar"], [490, "module-ase2sprkkr.asr.test.mocks.gpaw.xc"], [491, "module-ase2sprkkr.asr.test.mocks.gpaw.xc.exx"], [492, "module-ase2sprkkr.asr.test.mocks.gpaw.xc.tools"], [493, "module-ase2sprkkr.asr.test.test_bandstructure"], [495, "module-ase2sprkkr.asr.test.test_berry"], [498, "module-ase2sprkkr.asr.test.test_borncharges"], [500, "module-ase2sprkkr.asr.test.test_bse"], [502, "module-ase2sprkkr.asr.test.test_cli"], [511, "module-ase2sprkkr.asr.test.test_convex_hull"], [513, "module-ase2sprkkr.asr.test.test_core"], [519, "module-ase2sprkkr.asr.test.test_core_material"], [521, "module-ase2sprkkr.asr.test.test_core_results"], [529, "module-ase2sprkkr.asr.test.test_database_duplicates"], [533, "module-ase2sprkkr.asr.test.test_database_fromtree"], [539, "module-ase2sprkkr.asr.test.test_database_rmsd"], [548, "module-ase2sprkkr.asr.test.test_database_totree"], [552, "module-ase2sprkkr.asr.test.test_dimensionality"], [555, "module-ase2sprkkr.asr.test.test_emasses"], [560, "module-ase2sprkkr.asr.test.test_fixtures"], [562, "module-ase2sprkkr.asr.test.test_formalpolarization"], [565, "module-ase2sprkkr.asr.test.test_gs"], [569, "module-ase2sprkkr.asr.test.test_gw"], [571, "module-ase2sprkkr.asr.test.test_hse"], [573, "module-ase2sprkkr.asr.test.test_pdos"], [576, "module-ase2sprkkr.asr.test.test_phonons"], [578, "module-ase2sprkkr.asr.test.test_phonopy"], [580, "module-ase2sprkkr.asr.test.test_piezoelectrictensor"], [584, "module-ase2sprkkr.asr.test.test_plasmafrequency"], [586, "module-ase2sprkkr.asr.test.test_polarizability"], [588, "module-ase2sprkkr.asr.test.test_projected_bandstructure"], [590, "module-ase2sprkkr.asr.test.test_raman"], [592, "module-ase2sprkkr.asr.test.test_relax"], [600, "module-ase2sprkkr.asr.test.test_setinfo"], [604, "module-ase2sprkkr.asr.test.test_setup_decorate"], [606, "module-ase2sprkkr.asr.test.test_setup_displacements"], [610, "module-ase2sprkkr.asr.test.test_setup_magnetize"], [613, "module-ase2sprkkr.asr.test.test_setup_materials"], [615, "module-ase2sprkkr.asr.test.test_setup_scanparams"], [617, "module-ase2sprkkr.asr.test.test_setup_strains"], [620, "module-ase2sprkkr.asr.test.test_setup_symmetrize"], [622, "module-ase2sprkkr.asr.test.test_stiffness"], [625, "module-ase2sprkkr.asr.utils"], [626, "module-ase2sprkkr.asr.utils.args"], [628, "module-ase2sprkkr.asr.utils.calculator_utils"], [631, "module-ase2sprkkr.asr.utils.gpw2eigs"], [634, "module-ase2sprkkr.asr.utils.kpts"], [636, "module-ase2sprkkr.asr.utils.magnetism"], [639, "module-ase2sprkkr.asr.utils.refinegs"], [644, "module-ase2sprkkr.asr.utils.something"], [649, "module-ase2sprkkr.asr.utils.symmetry"], [655, "module-ase2sprkkr.asr.utils.utils"], [657, "module-ase2sprkkr.asr.workflow"], [658, "module-ase2sprkkr.bindings"], [659, "module-ase2sprkkr.bindings.empty_spheres"], [664, "module-ase2sprkkr.bindings.es_finder"], [666, "module-ase2sprkkr.bindings.spglib"], [669, "module-ase2sprkkr.bindings.tests"], [670, "module-ase2sprkkr.bindings.tests.init_tests"], [679, "module-ase2sprkkr.bindings.tests.test_es_finder"], [681, "module-ase2sprkkr.bindings.tests.test_spglib"], [683, "module-ase2sprkkr.bindings.xband"], [684, "module-ase2sprkkr.bindings.xband.spheres"], [686, "module-ase2sprkkr.bindings.xband.symmetry"], [689, "module-ase2sprkkr.bindings.xband.tests"], [690, "module-ase2sprkkr.bindings.xband.tests.init_tests"], [700, "module-ase2sprkkr.bindings.xband.tests.test_spheres"], [702, "module-ase2sprkkr.common"], [703, "module-ase2sprkkr.common.alternative_types"], [708, "module-ase2sprkkr.common.configuration"], [710, "module-ase2sprkkr.common.configuration_containers"], [719, "module-ase2sprkkr.common.configuration_definitions"], [731, "module-ase2sprkkr.common.container_definitions"], [738, "module-ase2sprkkr.common.decorators"], [748, "module-ase2sprkkr.common.directory"], [750, "module-ase2sprkkr.common.doc"], [753, "module-ase2sprkkr.common.formats"], [757, "module-ase2sprkkr.common.generated_configuration_definitions"], [761, "module-ase2sprkkr.common.grammar"], [775, "module-ase2sprkkr.common.grammar_types"], [776, "module-ase2sprkkr.common.grammar_types.arrays"], [786, "module-ase2sprkkr.common.grammar_types.basic"], [821, "module-ase2sprkkr.common.grammar_types.data"], [826, "module-ase2sprkkr.common.grammar_types.grammar_type"], [835, "module-ase2sprkkr.common.grammar_types.mixed"], [839, "module-ase2sprkkr.common.grammar_types.warnings"], [841, "module-ase2sprkkr.common.init_tests"], [851, "module-ase2sprkkr.common.misc"], [858, "module-ase2sprkkr.common.no_output"], [860, "module-ase2sprkkr.common.options"], [866, "module-ase2sprkkr.common.process_output_reader"], [869, "module-ase2sprkkr.common.repeated_configuration_containers"], [871, "module-ase2sprkkr.common.subprocess"], [875, "module-ase2sprkkr.common.test"], [876, "module-ase2sprkkr.common.test.init_tests"], [885, "module-ase2sprkkr.common.test.test_common"], [887, "module-ase2sprkkr.common.test.test_grammar_types"], [889, "module-ase2sprkkr.common.tools"], [895, "module-ase2sprkkr.common.unique_values"], [897, "module-ase2sprkkr.common.value_definitions"], [899, "module-ase2sprkkr.common.warnings"], [901, "module-ase2sprkkr.config"], [904, "module-ase2sprkkr.examples"], [905, "module-ase2sprkkr.examples.A1_Fe_scf_simple"], [906, "module-ase2sprkkr.examples.A1_Fe_scf_simple.Fe"], [908, "module-ase2sprkkr.examples.A2_Fe_scf_input_modifications"], [909, "module-ase2sprkkr.examples.A2_Fe_scf_input_modifications.Fe"], [911, "module-ase2sprkkr.examples.A3_Fe_dos"], [912, "module-ase2sprkkr.examples.A3_Fe_dos.Fe"], [914, "module-ase2sprkkr.examples.A4_CPA_Example"], [915, "module-ase2sprkkr.examples.A4_CPA_Example.Ni_doped_STO"], [917, "module-ase2sprkkr.examples.A5_Al_EOS"], [918, "module-ase2sprkkr.examples.A5_Al_EOS.Al"], [920, "module-ase2sprkkr.examples.A6_Cu_MSSPEC"], [921, "module-ase2sprkkr.examples.A6_Cu_MSSPEC.Cu"], [923, "module-ase2sprkkr.examples.A7_SrTiO3_MSSPEC"], [924, "module-ase2sprkkr.examples.A7_SrTiO3_MSSPEC.STO"], [926, "module-ase2sprkkr.examples.A8_ARPES_and_plotting"], [927, "module-ase2sprkkr.examples.A8_ARPES_and_plotting.arpes"], [929, "module-ase2sprkkr.input_parameters"], [930, "module-ase2sprkkr.input_parameters.definitions"], [931, "module-ase2sprkkr.input_parameters.definitions.arpes"], [933, "module-ase2sprkkr.input_parameters.definitions.bsf"], [935, "module-ase2sprkkr.input_parameters.definitions.dos"], [937, "module-ase2sprkkr.input_parameters.definitions.gilbert"], [939, "module-ase2sprkkr.input_parameters.definitions.jxc"], [941, "module-ase2sprkkr.input_parameters.definitions.marpes"], [942, "module-ase2sprkkr.input_parameters.definitions.phagen"], [944, "module-ase2sprkkr.input_parameters.definitions.scf"], [946, "module-ase2sprkkr.input_parameters.definitions.sections"], [958, "module-ase2sprkkr.input_parameters.input_parameters"], [961, "module-ase2sprkkr.input_parameters.input_parameters_definitions"], [965, "module-ase2sprkkr.input_parameters.test"], [966, "module-ase2sprkkr.input_parameters.test.init_tests"], [975, "module-ase2sprkkr.input_parameters.test.test_definitions"], [977, "module-ase2sprkkr.input_parameters.test.test_input_parameters"], [980, "module-ase2sprkkr.output_files"], [981, "module-ase2sprkkr.output_files.definitions"], [986, "module-ase2sprkkr.output_files.definitions.bsf"], [990, "module-ase2sprkkr.output_files.definitions.dos"], [995, "module-ase2sprkkr.output_files.definitions.spc"], [999, "module-ase2sprkkr.output_files.output_files"], [1004, "module-ase2sprkkr.output_files.output_files_definitions"], [1011, "module-ase2sprkkr.output_files.test"], [1012, "module-ase2sprkkr.output_files.test.init_tests"], [1021, "module-ase2sprkkr.output_files.test.test_files"], [1023, "module-ase2sprkkr.outputs"], [1024, "module-ase2sprkkr.outputs.output_definitions"], [1029, "module-ase2sprkkr.outputs.readers"], [1030, "module-ase2sprkkr.outputs.readers.arpes"], [1033, "module-ase2sprkkr.outputs.readers.default"], [1037, "module-ase2sprkkr.outputs.readers.scf"], [1043, "module-ase2sprkkr.outputs.task_result"], [1046, "module-ase2sprkkr.outputs.test"], [1047, "module-ase2sprkkr.outputs.test.init_tests"], [1056, "module-ase2sprkkr.outputs.test.test_output"], [1058, "module-ase2sprkkr.physics"], [1059, "module-ase2sprkkr.physics.lattice_data"], [1063, "module-ase2sprkkr.physics.winger_seitz_radii"], [1065, "module-ase2sprkkr.potentials"], [1066, "module-ase2sprkkr.potentials.custom_potential_section"], [1071, "module-ase2sprkkr.potentials.definitions"], [1072, "module-ase2sprkkr.potentials.definitions.potential"], [1074, "module-ase2sprkkr.potentials.definitions.sections"], [1076, "module-ase2sprkkr.potentials.definitions.sections.charge"], [1081, "module-ase2sprkkr.potentials.definitions.sections.charge_moments"], [1085, "module-ase2sprkkr.potentials.definitions.sections.global_system_parameter"], [1089, "module-ase2sprkkr.potentials.definitions.sections.host_madelung_potential"], [1093, "module-ase2sprkkr.potentials.definitions.sections.lattice"], [1097, "module-ase2sprkkr.potentials.definitions.sections.mesh_information"], [1101, "module-ase2sprkkr.potentials.definitions.sections.moments"], [1106, "module-ase2sprkkr.potentials.definitions.sections.occupation"], [1110, "module-ase2sprkkr.potentials.definitions.sections.potential"], [1115, "module-ase2sprkkr.potentials.definitions.sections.reference_system"], [1119, "module-ase2sprkkr.potentials.definitions.sections.scf_info"], [1123, "module-ase2sprkkr.potentials.definitions.sections.sites"], [1127, "module-ase2sprkkr.potentials.definitions.sections.types"], [1131, "module-ase2sprkkr.potentials.potential_definitions"], [1137, "module-ase2sprkkr.potentials.potential_sections"], [1143, "module-ase2sprkkr.potentials.potentials"], [1145, "module-ase2sprkkr.potentials.test"], [1146, "module-ase2sprkkr.potentials.test.init_tests"], [1155, "module-ase2sprkkr.potentials.test.test_2D"], [1157, "module-ase2sprkkr.potentials.test.test_custom_section"], [1159, "module-ase2sprkkr.potentials.test.test_potential"], [1161, "module-ase2sprkkr.potentials.test.test_structure"], [1163, "module-ase2sprkkr.sprkkr"], [1164, "module-ase2sprkkr.sprkkr.atomic_types"], [1166, "module-ase2sprkkr.sprkkr.atoms_region"], [1168, "module-ase2sprkkr.sprkkr.build"], [1172, "module-ase2sprkkr.sprkkr.calculator"], [1175, "module-ase2sprkkr.sprkkr.configuration"], [1186, "module-ase2sprkkr.sprkkr.io_data"], [1191, "module-ase2sprkkr.sprkkr.moments"], [1193, "module-ase2sprkkr.sprkkr.occupations"], [1195, "module-ase2sprkkr.sprkkr.radial"], [1199, "module-ase2sprkkr.sprkkr.radial_meshes"], [1203, "module-ase2sprkkr.sprkkr.reference_systems"], [1205, "module-ase2sprkkr.sprkkr.sites"], [1208, "module-ase2sprkkr.sprkkr.sprkkr_atoms"], [1210, "module-ase2sprkkr.sprkkr.sprkkr_grammar_types"], [1213, "module-ase2sprkkr.sprkkr.structure"], [1218, "module-ase2sprkkr.sprkkr.sysfile"], [1221, "module-ase2sprkkr.sprkkr.test"], [1222, "module-ase2sprkkr.sprkkr.test.init_tests"], [1231, "module-ase2sprkkr.sprkkr.test.test_arpes"], [1233, "module-ase2sprkkr.sprkkr.test.test_build"], [1235, "module-ase2sprkkr.sprkkr.test.test_calculator"], [1238, "module-ase2sprkkr.sprkkr.test.test_occupation"], [1240, "module-ase2sprkkr.sprkkr.test.test_sites"], [1242, "module-ase2sprkkr.sprkkr.test.test_sprkkr_atoms"], [1244, "module-ase2sprkkr.sprkkr.test.test_sysfile"], [1246, "module-ase2sprkkr.tools"], [1247, "module-ase2sprkkr.tools.ase2sprkkr"], [1249, "module-ase2sprkkr.tools.commands"], [1250, "module-ase2sprkkr.tools.commands.config"], [1253, "module-ase2sprkkr.tools.commands.info"], [1259, "module-ase2sprkkr.tools.commands.plot"], [1262, "module-ase2sprkkr.tools.commands.run"], [1265, "module-ase2sprkkr.tools.commands.show_structure"], [1268, "module-ase2sprkkr.tools.commands.test"], [1271, "module-ase2sprkkr.tools.shared"], [1273, "module-ase2sprkkr.tools.test"], [1274, "module-ase2sprkkr.tools.test.init_tests"], [1283, "module-ase2sprkkr.tools.test.test_tools"], [1285, "module-ase2sprkkr.version"], [1286, "module-ase2sprkkr.visualise"], [1287, "module-ase2sprkkr.visualise.plot"]], "ase2sprkkr.ase": [[2, "module-ase2sprkkr.ase"]], "ase2sprkkr.ase.build": [[3, "module-ase2sprkkr.ase.build"]], "aperiodic_times() (in module ase2sprkkr.ase.build)": [[4, "ase2sprkkr.ase.build.aperiodic_times"]], "stack() (in module ase2sprkkr.ase.build)": [[5, "ase2sprkkr.ase.build.stack"]], "ase2sprkkr.ase.io": [[6, "module-ase2sprkkr.ase.io"]], "read_sprkkr() (in module ase2sprkkr.ase.io)": [[7, "ase2sprkkr.ase.io.read_sprkkr"]], "write_sprkkr() (in module ase2sprkkr.ase.io)": [[8, "ase2sprkkr.ase.io.write_sprkkr"]], "ase2sprkkr.ase.pbc": [[9, "module-ase2sprkkr.ase.pbc"]], "check_symmetry() (in module ase2sprkkr.ase.pbc)": [[10, "ase2sprkkr.ase.pbc.check_symmetry"]], "ase2sprkkr.ase.register": [[11, "module-ase2sprkkr.ase.register"]], "ase_register() (in module ase2sprkkr.ase.register)": [[12, "ase2sprkkr.ase.register.ase_register"]], "load_user_preferences() (in module ase2sprkkr.ase.register)": [[13, "ase2sprkkr.ase.register.load_user_preferences"]], "register() (in module ase2sprkkr.ase.register)": [[14, "ase2sprkkr.ase.register.register"]], "user_preferences_file() (in module ase2sprkkr.ase.register)": [[15, "ase2sprkkr.ase.register.user_preferences_file"]], "ase2sprkkr.ase.symbols": [[16, "module-ase2sprkkr.ase.symbols"]], "filename_from_symbols() (in module ase2sprkkr.ase.symbols)": [[17, "ase2sprkkr.ase.symbols.filename_from_symbols"]], "pretty_symbols() (in module ase2sprkkr.ase.symbols)": [[18, "ase2sprkkr.ase.symbols.pretty_symbols"]], "ase2sprkkr.ase.test": [[19, "module-ase2sprkkr.ase.test"]], "ase2sprkkr.ase.test.init_tests": [[20, "module-ase2sprkkr.ase.test.init_tests"]], "testcase (class in ase2sprkkr.ase.test.init_tests)": [[21, "ase2sprkkr.ase.test.init_tests.TestCase"]], "__init__() (ase2sprkkr.ase.test.init_tests.testcase method)": [[21, "ase2sprkkr.ase.test.init_tests.TestCase.__init__"]], "_calc_args (ase2sprkkr.ase.test.init_tests.testcase attribute)": [[21, "ase2sprkkr.ase.test.init_tests.TestCase._calc_args"]], "_print_output (ase2sprkkr.ase.test.init_tests.testcase attribute)": [[21, "ase2sprkkr.ase.test.init_tests.TestCase._print_output"]], "almost_equal_precision() (ase2sprkkr.ase.test.init_tests.testcase class method)": [[21, "ase2sprkkr.ase.test.init_tests.TestCase.almost_equal_precision"]], "assertalmostequal() (ase2sprkkr.ase.test.init_tests.testcase method)": [[21, "ase2sprkkr.ase.test.init_tests.TestCase.assertAlmostEqual"]], "assertasyncequal() (ase2sprkkr.ase.test.init_tests.testcase method)": [[21, "ase2sprkkr.ase.test.init_tests.TestCase.assertAsyncEqual"]], "assertasyncraises() (ase2sprkkr.ase.test.init_tests.testcase method)": [[21, "ase2sprkkr.ase.test.init_tests.TestCase.assertAsyncRaises"]], "assertequal() (ase2sprkkr.ase.test.init_tests.testcase method)": [[21, "ase2sprkkr.ase.test.init_tests.TestCase.assertEqual"]], "assertfalse() (ase2sprkkr.ase.test.init_tests.testcase method)": [[21, "ase2sprkkr.ase.test.init_tests.TestCase.assertFalse"]], "assertisnone() (ase2sprkkr.ase.test.init_tests.testcase method)": [[21, "ase2sprkkr.ase.test.init_tests.TestCase.assertIsNone"]], "assertnotequal() (ase2sprkkr.ase.test.init_tests.testcase method)": [[21, "ase2sprkkr.ase.test.init_tests.TestCase.assertNotEqual"]], "assertraises() (ase2sprkkr.ase.test.init_tests.testcase method)": [[21, "ase2sprkkr.ase.test.init_tests.TestCase.assertRaises"]], "asserttrue() (ase2sprkkr.ase.test.init_tests.testcase method)": [[21, "ase2sprkkr.ase.test.init_tests.TestCase.assertTrue"]], "calc_args() (ase2sprkkr.ase.test.init_tests.testcase class method)": [[21, "ase2sprkkr.ase.test.init_tests.TestCase.calc_args"]], "runasync() (ase2sprkkr.ase.test.init_tests.testcase static method)": [[21, "ase2sprkkr.ase.test.init_tests.TestCase.runAsync"]], "run_sprkkr() (ase2sprkkr.ase.test.init_tests.testcase method)": [[21, "ase2sprkkr.ase.test.init_tests.TestCase.run_sprkkr"]], "temporary_dir() (ase2sprkkr.ase.test.init_tests.testcase method)": [[21, "ase2sprkkr.ase.test.init_tests.TestCase.temporary_dir"]], "arr_testfce() (in module ase2sprkkr.ase.test.init_tests)": [[22, "ase2sprkkr.ase.test.init_tests.arr_testfce"]], "assertdictequal() (in module ase2sprkkr.ase.test.init_tests)": [[23, "ase2sprkkr.ase.test.init_tests.assertDictEqual"]], "assertlistequal() (in module ase2sprkkr.ase.test.init_tests)": [[24, "ase2sprkkr.ase.test.init_tests.assertListEqual"]], "assert_almost_equals() (in module ase2sprkkr.ase.test.init_tests)": [[25, "ase2sprkkr.ase.test.init_tests.assert_almost_equals"]], "assert_equals() (in module ase2sprkkr.ase.test.init_tests)": [[26, "ase2sprkkr.ase.test.init_tests.assert_equals"]], "__init__() (ase2sprkkr.ase.test.init_tests.extdict method)": [[27, "ase2sprkkr.ase.test.init_tests.extdict.__init__"]], "extdict (class in ase2sprkkr.ase.test.init_tests)": [[27, "ase2sprkkr.ase.test.init_tests.extdict"]], "testfce() (in module ase2sprkkr.ase.test.init_tests)": [[28, "ase2sprkkr.ase.test.init_tests.testfce"]], "ase2sprkkr.ase.test.test_build": [[29, "module-ase2sprkkr.ase.test.test_build"]], "testbuild (class in ase2sprkkr.ase.test.test_build)": [[30, "ase2sprkkr.ase.test.test_build.TestBuild"]], "__init__() (ase2sprkkr.ase.test.test_build.testbuild method)": [[30, "ase2sprkkr.ase.test.test_build.TestBuild.__init__"]], "test() (ase2sprkkr.ase.test.test_build.testbuild method)": [[30, "ase2sprkkr.ase.test.test_build.TestBuild.test"]], "test_stack() (ase2sprkkr.ase.test.test_build.testbuild method)": [[30, "ase2sprkkr.ase.test.test_build.TestBuild.test_stack"]], "ase2sprkkr.ase.visualise": [[31, "module-ase2sprkkr.ase.visualise"]], "view() (in module ase2sprkkr.ase.visualise)": [[32, "ase2sprkkr.ase.visualise.view"]], "ase2sprkkr.asr": [[33, "module-ase2sprkkr.asr"]], "ase2sprkkr.asr.asr": [[34, "module-ase2sprkkr.asr.asr"]], "ase2sprkkr.asr.bader": [[35, "module-ase2sprkkr.asr.bader"]], "print() (in module ase2sprkkr.asr.bader)": [[36, "ase2sprkkr.asr.bader.print"]], "ase2sprkkr.asr.bandstructure": [[37, "module-ase2sprkkr.asr.bandstructure"]], "result (class in ase2sprkkr.asr.bandstructure)": [[38, "ase2sprkkr.asr.bandstructure.Result"]], "__init__() (ase2sprkkr.asr.bandstructure.result method)": [[38, "ase2sprkkr.asr.bandstructure.Result.__init__"]], "_known_data_keys (ase2sprkkr.asr.bandstructure.result attribute)": [[38, "ase2sprkkr.asr.bandstructure.Result._known_data_keys"]], "bs_nosoc (ase2sprkkr.asr.bandstructure.result property)": [[38, "ase2sprkkr.asr.bandstructure.Result.bs_nosoc"]], "bs_soc (ase2sprkkr.asr.bandstructure.result property)": [[38, "ase2sprkkr.asr.bandstructure.Result.bs_soc"]], "formats (ase2sprkkr.asr.bandstructure.result attribute)": [[38, "ase2sprkkr.asr.bandstructure.Result.formats"]], "key_descriptions (ase2sprkkr.asr.bandstructure.result attribute)": [[38, "ase2sprkkr.asr.bandstructure.Result.key_descriptions"]], "strict (ase2sprkkr.asr.bandstructure.result attribute)": [[38, "ase2sprkkr.asr.bandstructure.Result.strict"]], "version (ase2sprkkr.asr.bandstructure.result attribute)": [[38, "ase2sprkkr.asr.bandstructure.Result.version"]], "add_bs_pbe() (in module ase2sprkkr.asr.bandstructure)": [[39, "ase2sprkkr.asr.bandstructure.add_bs_pbe"]], "bs_pbe() (in module ase2sprkkr.asr.bandstructure)": [[40, "ase2sprkkr.asr.bandstructure.bs_pbe"]], "bs_pbe_html() (in module ase2sprkkr.asr.bandstructure)": [[41, "ase2sprkkr.asr.bandstructure.bs_pbe_html"]], "plot_with_colors() (in module ase2sprkkr.asr.bandstructure)": [[42, "ase2sprkkr.asr.bandstructure.plot_with_colors"]], "webpanel() (in module ase2sprkkr.asr.bandstructure)": [[43, "ase2sprkkr.asr.bandstructure.webpanel"]], "ase2sprkkr.asr.berry": [[44, "module-ase2sprkkr.asr.berry"]], "result (class in ase2sprkkr.asr.berry)": [[45, "ase2sprkkr.asr.berry.Result"]], "topology (ase2sprkkr.asr.berry.result property)": [[45, "ase2sprkkr.asr.berry.Result.Topology"]], "__init__() (ase2sprkkr.asr.berry.result method)": [[45, "ase2sprkkr.asr.berry.Result.__init__"]], "_known_data_keys (ase2sprkkr.asr.berry.result attribute)": [[45, "ase2sprkkr.asr.berry.Result._known_data_keys"]], "formats (ase2sprkkr.asr.berry.result attribute)": [[45, "ase2sprkkr.asr.berry.Result.formats"]], "key_descriptions (ase2sprkkr.asr.berry.result attribute)": [[45, "ase2sprkkr.asr.berry.Result.key_descriptions"]], "strict (ase2sprkkr.asr.berry.result attribute)": [[45, "ase2sprkkr.asr.berry.Result.strict"]], "plot_phases() (in module ase2sprkkr.asr.berry)": [[46, "ase2sprkkr.asr.berry.plot_phases"]], "webpanel() (in module ase2sprkkr.asr.berry)": [[47, "ase2sprkkr.asr.berry.webpanel"]], "ase2sprkkr.asr.borncharges": [[48, "module-ase2sprkkr.asr.borncharges"]], "result (class in ase2sprkkr.asr.borncharges)": [[49, "ase2sprkkr.asr.borncharges.Result"]], "z_avv (ase2sprkkr.asr.borncharges.result property)": [[49, "ase2sprkkr.asr.borncharges.Result.Z_avv"]], "__init__() (ase2sprkkr.asr.borncharges.result method)": [[49, "ase2sprkkr.asr.borncharges.Result.__init__"]], "_known_data_keys (ase2sprkkr.asr.borncharges.result attribute)": [[49, "ase2sprkkr.asr.borncharges.Result._known_data_keys"]], "formats (ase2sprkkr.asr.borncharges.result attribute)": [[49, "ase2sprkkr.asr.borncharges.Result.formats"]], "key_descriptions (ase2sprkkr.asr.borncharges.result attribute)": [[49, "ase2sprkkr.asr.borncharges.Result.key_descriptions"]], "strict (ase2sprkkr.asr.borncharges.result attribute)": [[49, "ase2sprkkr.asr.borncharges.Result.strict"]], "sym_a (ase2sprkkr.asr.borncharges.result property)": [[49, "ase2sprkkr.asr.borncharges.Result.sym_a"]], "webpanel() (in module ase2sprkkr.asr.borncharges)": [[50, "ase2sprkkr.asr.borncharges.webpanel"]], "ase2sprkkr.asr.bse": [[51, "module-ase2sprkkr.asr.bse"]], "e_b (ase2sprkkr.asr.bse.result property)": [[52, "ase2sprkkr.asr.bse.Result.E_B"]], "result (class in ase2sprkkr.asr.bse)": [[52, "ase2sprkkr.asr.bse.Result"]], "__init__() (ase2sprkkr.asr.bse.result method)": [[52, "ase2sprkkr.asr.bse.Result.__init__"]], "_known_data_keys (ase2sprkkr.asr.bse.result attribute)": [[52, "ase2sprkkr.asr.bse.Result._known_data_keys"]], "bse_alphax_w (ase2sprkkr.asr.bse.result property)": [[52, "ase2sprkkr.asr.bse.Result.bse_alphax_w"]], "bse_alphay_w (ase2sprkkr.asr.bse.result property)": [[52, "ase2sprkkr.asr.bse.Result.bse_alphay_w"]], "bse_alphaz_w (ase2sprkkr.asr.bse.result property)": [[52, "ase2sprkkr.asr.bse.Result.bse_alphaz_w"]], "formats (ase2sprkkr.asr.bse.result attribute)": [[52, "ase2sprkkr.asr.bse.Result.formats"]], "key_descriptions (ase2sprkkr.asr.bse.result attribute)": [[52, "ase2sprkkr.asr.bse.Result.key_descriptions"]], "strict (ase2sprkkr.asr.bse.result attribute)": [[52, "ase2sprkkr.asr.bse.Result.strict"]], "absorption() (in module ase2sprkkr.asr.bse)": [[53, "ase2sprkkr.asr.bse.absorption"]], "get_kpts_size() (in module ase2sprkkr.asr.bse)": [[54, "ase2sprkkr.asr.bse.get_kpts_size"]], "webpanel() (in module ase2sprkkr.asr.bse)": [[55, "ase2sprkkr.asr.bse.webpanel"]], "ase2sprkkr.asr.calculators": [[56, "module-ase2sprkkr.asr.calculators"]], "get_calculator() (in module ase2sprkkr.asr.calculators)": [[57, "ase2sprkkr.asr.calculators.get_calculator"]], "ase2sprkkr.asr.chc": [[58, "module-ase2sprkkr.asr.chc"]], "chcerror": [[59, "ase2sprkkr.asr.chc.CHCError"]], "convexhullreference (class in ase2sprkkr.asr.chc)": [[60, "ase2sprkkr.asr.chc.ConvexHullReference"]], "__init__() (ase2sprkkr.asr.chc.convexhullreference method)": [[60, "ase2sprkkr.asr.chc.ConvexHullReference.__init__"]], "_construct_coordinates() (ase2sprkkr.asr.chc.convexhullreference method)": [[60, "ase2sprkkr.asr.chc.ConvexHullReference._construct_coordinates"]], "from_reference() (ase2sprkkr.asr.chc.convexhullreference method)": [[60, "ase2sprkkr.asr.chc.ConvexHullReference.from_reference"]], "is_single() (ase2sprkkr.asr.chc.convexhullreference method)": [[60, "ase2sprkkr.asr.chc.ConvexHullReference.is_single"]], "hyperplane (class in ase2sprkkr.asr.chc)": [[61, "ase2sprkkr.asr.chc.Hyperplane"]], "__init__() (ase2sprkkr.asr.chc.hyperplane method)": [[61, "ase2sprkkr.asr.chc.Hyperplane.__init__"]], "contains() (ase2sprkkr.asr.chc.hyperplane method)": [[61, "ase2sprkkr.asr.chc.Hyperplane.contains"]], "find_ts() (ase2sprkkr.asr.chc.hyperplane method)": [[61, "ase2sprkkr.asr.chc.Hyperplane.find_ts"]], "intermediate (class in ase2sprkkr.asr.chc)": [[62, "ase2sprkkr.asr.chc.Intermediate"]], "__init__() (ase2sprkkr.asr.chc.intermediate method)": [[62, "ase2sprkkr.asr.chc.Intermediate.__init__"]], "_get_hform_data() (ase2sprkkr.asr.chc.intermediate method)": [[62, "ase2sprkkr.asr.chc.Intermediate._get_hform_data"]], "from_dict() (ase2sprkkr.asr.chc.intermediate method)": [[62, "ase2sprkkr.asr.chc.Intermediate.from_dict"]], "label (ase2sprkkr.asr.chc.intermediate property)": [[62, "ase2sprkkr.asr.chc.Intermediate.label"]], "reactant_content (ase2sprkkr.asr.chc.intermediate property)": [[62, "ase2sprkkr.asr.chc.Intermediate.reactant_content"]], "to_dict() (ase2sprkkr.asr.chc.intermediate method)": [[62, "ase2sprkkr.asr.chc.Intermediate.to_dict"]], "to_result() (ase2sprkkr.asr.chc.intermediate method)": [[62, "ase2sprkkr.asr.chc.Intermediate.to_result"]], "leanintermediate (class in ase2sprkkr.asr.chc)": [[63, "ase2sprkkr.asr.chc.LeanIntermediate"]], "__init__() (ase2sprkkr.asr.chc.leanintermediate method)": [[63, "ase2sprkkr.asr.chc.LeanIntermediate.__init__"]], "from_dict() (ase2sprkkr.asr.chc.leanintermediate method)": [[63, "ase2sprkkr.asr.chc.LeanIntermediate.from_dict"]], "to_dict() (ase2sprkkr.asr.chc.leanintermediate method)": [[63, "ase2sprkkr.asr.chc.LeanIntermediate.to_dict"]], "to_result() (ase2sprkkr.asr.chc.leanintermediate method)": [[63, "ase2sprkkr.asr.chc.LeanIntermediate.to_result"]], "line (class in ase2sprkkr.asr.chc)": [[64, "ase2sprkkr.asr.chc.Line"]], "__init__() (ase2sprkkr.asr.chc.line method)": [[64, "ase2sprkkr.asr.chc.Line.__init__"]], "find_s() (ase2sprkkr.asr.chc.line method)": [[64, "ase2sprkkr.asr.chc.Line.find_s"]], "intersects() (ase2sprkkr.asr.chc.line method)": [[64, "ase2sprkkr.asr.chc.Line.intersects"]], "reference (class in ase2sprkkr.asr.chc)": [[65, "ase2sprkkr.asr.chc.Reference"]], "__init__() (ase2sprkkr.asr.chc.reference method)": [[65, "ase2sprkkr.asr.chc.Reference.__init__"]], "from_dict() (ase2sprkkr.asr.chc.reference method)": [[65, "ase2sprkkr.asr.chc.Reference.from_dict"]], "natoms (ase2sprkkr.asr.chc.reference property)": [[65, "ase2sprkkr.asr.chc.Reference.natoms"]], "to_dict() (ase2sprkkr.asr.chc.reference method)": [[65, "ase2sprkkr.asr.chc.Reference.to_dict"]], "to_elements() (ase2sprkkr.asr.chc.reference method)": [[65, "ase2sprkkr.asr.chc.Reference.to_elements"]], "result (class in ase2sprkkr.asr.chc)": [[66, "ase2sprkkr.asr.chc.Result"]], "__init__() (ase2sprkkr.asr.chc.result method)": [[66, "ase2sprkkr.asr.chc.Result.__init__"]], "_known_data_keys (ase2sprkkr.asr.chc.result attribute)": [[66, "ase2sprkkr.asr.chc.Result._known_data_keys"]], "formats (ase2sprkkr.asr.chc.result attribute)": [[66, "ase2sprkkr.asr.chc.Result.formats"]], "strict (ase2sprkkr.asr.chc.result attribute)": [[66, "ase2sprkkr.asr.chc.Result.strict"]], "_permutecontain() (in module ase2sprkkr.asr.chc)": [[67, "ase2sprkkr.asr.chc._permutecontain"]], "append_references() (in module ase2sprkkr.asr.chc)": [[68, "ase2sprkkr.asr.chc.append_references"]], "calculate_intermediates() (in module ase2sprkkr.asr.chc)": [[69, "ase2sprkkr.asr.chc.calculate_intermediates"]], "chcut_plot() (in module ase2sprkkr.asr.chc)": [[70, "ase2sprkkr.asr.chc.chcut_plot"]], "convex_hull() (in module ase2sprkkr.asr.chc)": [[71, "ase2sprkkr.asr.chc.convex_hull"]], "convex_hull_planes() (in module ase2sprkkr.asr.chc)": [[72, "ase2sprkkr.asr.chc.convex_hull_planes"]], "filrefs() (in module ase2sprkkr.asr.chc)": [[73, "ase2sprkkr.asr.chc.filrefs"]], "get_coords() (in module ase2sprkkr.asr.chc)": [[74, "ase2sprkkr.asr.chc.get_coords"]], "get_hof() (in module ase2sprkkr.asr.chc)": [[75, "ase2sprkkr.asr.chc.get_hof"]], "gscheck() (in module ase2sprkkr.asr.chc)": [[76, "ase2sprkkr.asr.chc.gscheck"]], "is_collinear() (in module ase2sprkkr.asr.chc)": [[77, "ase2sprkkr.asr.chc.is_collinear"]], "is_independent() (in module ase2sprkkr.asr.chc)": [[78, "ase2sprkkr.asr.chc.is_independent"]], "mgs() (in module ase2sprkkr.asr.chc)": [[79, "ase2sprkkr.asr.chc.mgs"]], "mgsls() (in module ase2sprkkr.asr.chc)": [[80, "ase2sprkkr.asr.chc.mgsls"]], "mu_adjustment() (in module ase2sprkkr.asr.chc)": [[81, "ase2sprkkr.asr.chc.mu_adjustment"]], "orthogonalize() (in module ase2sprkkr.asr.chc)": [[82, "ase2sprkkr.asr.chc.orthogonalize"]], "projuv() (in module ase2sprkkr.asr.chc)": [[83, "ase2sprkkr.asr.chc.projuv"]], "read_structure() (in module ase2sprkkr.asr.chc)": [[84, "ase2sprkkr.asr.chc.read_structure"]], "refs2ims() (in module ase2sprkkr.asr.chc)": [[85, "ase2sprkkr.asr.chc.refs2ims"]], "results2ref() (in module ase2sprkkr.asr.chc)": [[86, "ase2sprkkr.asr.chc.results2ref"]], "row2ref() (in module ase2sprkkr.asr.chc)": [[87, "ase2sprkkr.asr.chc.row2ref"]], "tuplespermuted() (in module ase2sprkkr.asr.chc)": [[88, "ase2sprkkr.asr.chc.tuplespermuted"]], "webpanel() (in module ase2sprkkr.asr.chc)": [[89, "ase2sprkkr.asr.chc.webpanel"]], "ase2sprkkr.asr.convex_hull": [[90, "module-ase2sprkkr.asr.convex_hull"]], "result (class in ase2sprkkr.asr.convex_hull)": [[91, "ase2sprkkr.asr.convex_hull.Result"]], "__init__() (ase2sprkkr.asr.convex_hull.result method)": [[91, "ase2sprkkr.asr.convex_hull.Result.__init__"]], "_known_data_keys (ase2sprkkr.asr.convex_hull.result attribute)": [[91, "ase2sprkkr.asr.convex_hull.Result._known_data_keys"]], "coefs (ase2sprkkr.asr.convex_hull.result property)": [[91, "ase2sprkkr.asr.convex_hull.Result.coefs"]], "ehull (ase2sprkkr.asr.convex_hull.result property)": [[91, "ase2sprkkr.asr.convex_hull.Result.ehull"]], "formats (ase2sprkkr.asr.convex_hull.result attribute)": [[91, "ase2sprkkr.asr.convex_hull.Result.formats"]], "hform (ase2sprkkr.asr.convex_hull.result property)": [[91, "ase2sprkkr.asr.convex_hull.Result.hform"]], "indices (ase2sprkkr.asr.convex_hull.result property)": [[91, "ase2sprkkr.asr.convex_hull.Result.indices"]], "key_descriptions (ase2sprkkr.asr.convex_hull.result attribute)": [[91, "ase2sprkkr.asr.convex_hull.Result.key_descriptions"]], "references (ase2sprkkr.asr.convex_hull.result property)": [[91, "ase2sprkkr.asr.convex_hull.Result.references"]], "strict (ase2sprkkr.asr.convex_hull.result attribute)": [[91, "ase2sprkkr.asr.convex_hull.Result.strict"]], "thermodynamic_stability_level (ase2sprkkr.asr.convex_hull.result property)": [[91, "ase2sprkkr.asr.convex_hull.Result.thermodynamic_stability_level"]], "convex_hull_tables() (in module ase2sprkkr.asr.convex_hull)": [[92, "ase2sprkkr.asr.convex_hull.convex_hull_tables"]], "get_reference_energies() (in module ase2sprkkr.asr.convex_hull)": [[93, "ase2sprkkr.asr.convex_hull.get_reference_energies"]], "hof() (in module ase2sprkkr.asr.convex_hull)": [[94, "ase2sprkkr.asr.convex_hull.hof"]], "plot() (in module ase2sprkkr.asr.convex_hull)": [[95, "ase2sprkkr.asr.convex_hull.plot"]], "select_references() (in module ase2sprkkr.asr.convex_hull)": [[96, "ase2sprkkr.asr.convex_hull.select_references"]], "webpanel() (in module ase2sprkkr.asr.convex_hull)": [[97, "ase2sprkkr.asr.convex_hull.webpanel"]], "ase2sprkkr.asr.core": [[98, "module-ase2sprkkr.asr.core"]], "ase2sprkkr.asr.core.cli": [[99, "module-ase2sprkkr.asr.core.cli"]], "append_job() (in module ase2sprkkr.asr.core.cli)": [[100, "ase2sprkkr.asr.core.cli.append_job"]], "check_git() (in module ase2sprkkr.asr.core.cli)": [[101, "ase2sprkkr.asr.core.cli.check_git"]], "extract_hash_from_file() (in module ase2sprkkr.asr.core.cli)": [[102, "ase2sprkkr.asr.core.cli.extract_hash_from_file"]], "format() (in module ase2sprkkr.asr.core.cli)": [[103, "ase2sprkkr.asr.core.cli.format"]], "get_config_dir() (in module ase2sprkkr.asr.core.cli)": [[104, "ase2sprkkr.asr.core.cli.get_config_dir"]], "get_git_rev_list() (in module ase2sprkkr.asr.core.cli)": [[105, "ase2sprkkr.asr.core.cli.get_git_rev_list"]], "initialize_asr_configuration_dir() (in module ase2sprkkr.asr.core.cli)": [[106, "ase2sprkkr.asr.core.cli.initialize_asr_configuration_dir"]], "is_asr_initialized() (in module ase2sprkkr.asr.core.cli)": [[107, "ase2sprkkr.asr.core.cli.is_asr_initialized"]], "run_command() (in module ase2sprkkr.asr.core.cli)": [[108, "ase2sprkkr.asr.core.cli.run_command"]], "ase2sprkkr.asr.core.command": [[109, "module-ase2sprkkr.asr.core.command"]], "ase2sprkkr.asr.core.fix_old_files": [[110, "module-ase2sprkkr.asr.core.fix_old_files"]], "is_results_file() (in module ase2sprkkr.asr.core.fix_old_files)": [[111, "ase2sprkkr.asr.core.fix_old_files.is_results_file"]], "ase2sprkkr.asr.core.material": [[112, "module-ase2sprkkr.asr.core.material"]], "material (class in ase2sprkkr.asr.core.material)": [[113, "ase2sprkkr.asr.core.material.Material"]], "__init__() (ase2sprkkr.asr.core.material.material method)": [[113, "ase2sprkkr.asr.core.material.Material.__init__"]], "get() (ase2sprkkr.asr.core.material.material method)": [[113, "ase2sprkkr.asr.core.material.Material.get"]], "toatoms() (ase2sprkkr.asr.core.material.material method)": [[113, "ase2sprkkr.asr.core.material.Material.toatoms"]], "get_material_from_folder() (in module ase2sprkkr.asr.core.material)": [[114, "ase2sprkkr.asr.core.material.get_material_from_folder"]], "get_webpanels_from_material() (in module ase2sprkkr.asr.core.material)": [[115, "ase2sprkkr.asr.core.material.get_webpanels_from_material"]], "make_panel_figures() (in module ase2sprkkr.asr.core.material)": [[116, "ase2sprkkr.asr.core.material.make_panel_figures"]], "ase2sprkkr.asr.core.results": [[117, "module-ase2sprkkr.asr.core.results"]], "asrresult (class in ase2sprkkr.asr.core.results)": [[118, "ase2sprkkr.asr.core.results.ASRResult"]], "__init__() (ase2sprkkr.asr.core.results.asrresult method)": [[118, "ase2sprkkr.asr.core.results.ASRResult.__init__"]], "data (ase2sprkkr.asr.core.results.asrresult property)": [[118, "ase2sprkkr.asr.core.results.ASRResult.data"]], "format_as() (ase2sprkkr.asr.core.results.asrresult method)": [[118, "ase2sprkkr.asr.core.results.ASRResult.format_as"]], "formats (ase2sprkkr.asr.core.results.asrresult attribute)": [[118, "ase2sprkkr.asr.core.results.ASRResult.formats"]], "from_format() (ase2sprkkr.asr.core.results.asrresult class method)": [[118, "ase2sprkkr.asr.core.results.ASRResult.from_format"]], "fromdata() (ase2sprkkr.asr.core.results.asrresult class method)": [[118, "ase2sprkkr.asr.core.results.ASRResult.fromdata"]], "fromdict() (ase2sprkkr.asr.core.results.asrresult class method)": [[118, "ase2sprkkr.asr.core.results.ASRResult.fromdict"]], "get() (ase2sprkkr.asr.core.results.asrresult method)": [[118, "ase2sprkkr.asr.core.results.ASRResult.get"]], "get_formats() (ase2sprkkr.asr.core.results.asrresult class method)": [[118, "ase2sprkkr.asr.core.results.ASRResult.get_formats"]], "get_obj_id() (ase2sprkkr.asr.core.results.asrresult class method)": [[118, "ase2sprkkr.asr.core.results.ASRResult.get_obj_id"]], "get_object_desc() (ase2sprkkr.asr.core.results.asrresult method)": [[118, "ase2sprkkr.asr.core.results.ASRResult.get_object_desc"]], "items() (ase2sprkkr.asr.core.results.asrresult method)": [[118, "ase2sprkkr.asr.core.results.ASRResult.items"]], "key_descriptions (ase2sprkkr.asr.core.results.asrresult attribute)": [[118, "ase2sprkkr.asr.core.results.ASRResult.key_descriptions"]], "keys() (ase2sprkkr.asr.core.results.asrresult method)": [[118, "ase2sprkkr.asr.core.results.ASRResult.keys"]], "metadata (ase2sprkkr.asr.core.results.asrresult property)": [[118, "ase2sprkkr.asr.core.results.ASRResult.metadata"]], "prev_version (ase2sprkkr.asr.core.results.asrresult attribute)": [[118, "ase2sprkkr.asr.core.results.ASRResult.prev_version"]], "strict (ase2sprkkr.asr.core.results.asrresult attribute)": [[118, "ase2sprkkr.asr.core.results.ASRResult.strict"]], "todict() (ase2sprkkr.asr.core.results.asrresult method)": [[118, "ase2sprkkr.asr.core.results.ASRResult.todict"]], "values() (ase2sprkkr.asr.core.results.asrresult method)": [[118, "ase2sprkkr.asr.core.results.ASRResult.values"]], "version (ase2sprkkr.asr.core.results.asrresult attribute)": [[118, "ase2sprkkr.asr.core.results.ASRResult.version"]], "dictencoder (class in ase2sprkkr.asr.core.results)": [[119, "ase2sprkkr.asr.core.results.DictEncoder"]], "__init__() (ase2sprkkr.asr.core.results.dictencoder method)": [[119, "ase2sprkkr.asr.core.results.DictEncoder.__init__"]], "_abc_impl (ase2sprkkr.asr.core.results.dictencoder attribute)": [[119, "ase2sprkkr.asr.core.results.DictEncoder._abc_impl"]], "decode() (ase2sprkkr.asr.core.results.dictencoder method)": [[119, "ase2sprkkr.asr.core.results.DictEncoder.decode"]], "encode() (ase2sprkkr.asr.core.results.dictencoder method)": [[119, "ase2sprkkr.asr.core.results.DictEncoder.encode"]], "htmlencoder (class in ase2sprkkr.asr.core.results)": [[120, "ase2sprkkr.asr.core.results.HTMLEncoder"]], "__init__() (ase2sprkkr.asr.core.results.htmlencoder method)": [[120, "ase2sprkkr.asr.core.results.HTMLEncoder.__init__"]], "_abc_impl (ase2sprkkr.asr.core.results.htmlencoder attribute)": [[120, "ase2sprkkr.asr.core.results.HTMLEncoder._abc_impl"]], "encode() (ase2sprkkr.asr.core.results.htmlencoder method)": [[120, "ase2sprkkr.asr.core.results.HTMLEncoder.encode"]], "hackedasrresult (class in ase2sprkkr.asr.core.results)": [[121, "ase2sprkkr.asr.core.results.HackedASRResult"]], "__init__() (ase2sprkkr.asr.core.results.hackedasrresult method)": [[121, "ase2sprkkr.asr.core.results.HackedASRResult.__init__"]], "jsonencoder (class in ase2sprkkr.asr.core.results)": [[122, "ase2sprkkr.asr.core.results.JSONEncoder"]], "__init__() (ase2sprkkr.asr.core.results.jsonencoder method)": [[122, "ase2sprkkr.asr.core.results.JSONEncoder.__init__"]], "_abc_impl (ase2sprkkr.asr.core.results.jsonencoder attribute)": [[122, "ase2sprkkr.asr.core.results.JSONEncoder._abc_impl"]], "decode() (ase2sprkkr.asr.core.results.jsonencoder method)": [[122, "ase2sprkkr.asr.core.results.JSONEncoder.decode"]], "encode() (ase2sprkkr.asr.core.results.jsonencoder method)": [[122, "ase2sprkkr.asr.core.results.JSONEncoder.encode"]], "metadata (class in ase2sprkkr.asr.core.results)": [[123, "ase2sprkkr.asr.core.results.MetaData"]], "__init__() (ase2sprkkr.asr.core.results.metadata method)": [[123, "ase2sprkkr.asr.core.results.MetaData.__init__"]], "_get() (ase2sprkkr.asr.core.results.metadata method)": [[123, "ase2sprkkr.asr.core.results.MetaData._get"]], "_set() (ase2sprkkr.asr.core.results.metadata method)": [[123, "ase2sprkkr.asr.core.results.MetaData._set"]], "accepted_keys (ase2sprkkr.asr.core.results.metadata attribute)": [[123, "ase2sprkkr.asr.core.results.MetaData.accepted_keys"]], "asr_name (ase2sprkkr.asr.core.results.metadata property)": [[123, "ase2sprkkr.asr.core.results.MetaData.asr_name"]], "code_versions (ase2sprkkr.asr.core.results.metadata property)": [[123, "ase2sprkkr.asr.core.results.MetaData.code_versions"]], "creates (ase2sprkkr.asr.core.results.metadata property)": [[123, "ase2sprkkr.asr.core.results.MetaData.creates"]], "params (ase2sprkkr.asr.core.results.metadata property)": [[123, "ase2sprkkr.asr.core.results.MetaData.params"]], "requires (ase2sprkkr.asr.core.results.metadata property)": [[123, "ase2sprkkr.asr.core.results.MetaData.requires"]], "resources (ase2sprkkr.asr.core.results.metadata property)": [[123, "ase2sprkkr.asr.core.results.MetaData.resources"]], "set() (ase2sprkkr.asr.core.results.metadata method)": [[123, "ase2sprkkr.asr.core.results.MetaData.set"]], "todict() (ase2sprkkr.asr.core.results.metadata method)": [[123, "ase2sprkkr.asr.core.results.MetaData.todict"]], "validate() (ase2sprkkr.asr.core.results.metadata method)": [[123, "ase2sprkkr.asr.core.results.MetaData.validate"]], "metadatanotseterror": [[124, "ase2sprkkr.asr.core.results.MetaDataNotSetError"]], "objectdescription (class in ase2sprkkr.asr.core.results)": [[125, "ase2sprkkr.asr.core.results.ObjectDescription"]], "__init__() (ase2sprkkr.asr.core.results.objectdescription method)": [[125, "ase2sprkkr.asr.core.results.ObjectDescription.__init__"]], "args (ase2sprkkr.asr.core.results.objectdescription property)": [[125, "ase2sprkkr.asr.core.results.ObjectDescription.args"]], "constructor (ase2sprkkr.asr.core.results.objectdescription property)": [[125, "ase2sprkkr.asr.core.results.ObjectDescription.constructor"]], "fromdict() (ase2sprkkr.asr.core.results.objectdescription class method)": [[125, "ase2sprkkr.asr.core.results.ObjectDescription.fromdict"]], "instantiate() (ase2sprkkr.asr.core.results.objectdescription method)": [[125, "ase2sprkkr.asr.core.results.ObjectDescription.instantiate"]], "kwargs (ase2sprkkr.asr.core.results.objectdescription property)": [[125, "ase2sprkkr.asr.core.results.ObjectDescription.kwargs"]], "object_id (ase2sprkkr.asr.core.results.objectdescription property)": [[125, "ase2sprkkr.asr.core.results.ObjectDescription.object_id"]], "todict() (ase2sprkkr.asr.core.results.objectdescription method)": [[125, "ase2sprkkr.asr.core.results.ObjectDescription.todict"]], "resultencoder (class in ase2sprkkr.asr.core.results)": [[126, "ase2sprkkr.asr.core.results.ResultEncoder"]], "__init__() (ase2sprkkr.asr.core.results.resultencoder method)": [[126, "ase2sprkkr.asr.core.results.ResultEncoder.__init__"]], "_abc_impl (ase2sprkkr.asr.core.results.resultencoder attribute)": [[126, "ase2sprkkr.asr.core.results.ResultEncoder._abc_impl"]], "decode() (ase2sprkkr.asr.core.results.resultencoder method)": [[126, "ase2sprkkr.asr.core.results.ResultEncoder.decode"]], "encode() (ase2sprkkr.asr.core.results.resultencoder method)": [[126, "ase2sprkkr.asr.core.results.ResultEncoder.encode"]], "unknownasrresultformat": [[127, "ase2sprkkr.asr.core.results.UnknownASRResultFormat"]], "unknowndataformat": [[128, "ase2sprkkr.asr.core.results.UnknownDataFormat"]], "webpanelencoder (class in ase2sprkkr.asr.core.results)": [[129, "ase2sprkkr.asr.core.results.WebPanelEncoder"]], "__init__() (ase2sprkkr.asr.core.results.webpanelencoder method)": [[129, "ase2sprkkr.asr.core.results.WebPanelEncoder.__init__"]], "_abc_impl (ase2sprkkr.asr.core.results.webpanelencoder attribute)": [[129, "ase2sprkkr.asr.core.results.WebPanelEncoder._abc_impl"]], "encode() (ase2sprkkr.asr.core.results.webpanelencoder method)": [[129, "ase2sprkkr.asr.core.results.WebPanelEncoder.encode"]], "data_to_dict() (in module ase2sprkkr.asr.core.results)": [[130, "ase2sprkkr.asr.core.results.data_to_dict"]], "dct_to_result() (in module ase2sprkkr.asr.core.results)": [[131, "ase2sprkkr.asr.core.results.dct_to_result"]], "find_class_matching_version() (in module ase2sprkkr.asr.core.results)": [[132, "ase2sprkkr.asr.core.results.find_class_matching_version"]], "format_key_description_pair() (in module ase2sprkkr.asr.core.results)": [[133, "ase2sprkkr.asr.core.results.format_key_description_pair"]], "get_key_descriptions() (in module ase2sprkkr.asr.core.results)": [[134, "ase2sprkkr.asr.core.results.get_key_descriptions"]], "get_object_matching_obj_id() (in module ase2sprkkr.asr.core.results)": [[135, "ase2sprkkr.asr.core.results.get_object_matching_obj_id"]], "get_object_types() (in module ase2sprkkr.asr.core.results)": [[136, "ase2sprkkr.asr.core.results.get_object_types"]], "get_reader_function() (in module ase2sprkkr.asr.core.results)": [[137, "ase2sprkkr.asr.core.results.get_reader_function"]], "make_property() (in module ase2sprkkr.asr.core.results)": [[138, "ase2sprkkr.asr.core.results.make_property"]], "obj_to_id() (in module ase2sprkkr.asr.core.results)": [[139, "ase2sprkkr.asr.core.results.obj_to_id"]], "object_description_to_object() (in module ase2sprkkr.asr.core.results)": [[140, "ase2sprkkr.asr.core.results.object_description_to_object"]], "prepare_result() (in module ase2sprkkr.asr.core.results)": [[141, "ase2sprkkr.asr.core.results.prepare_result"]], "read_hacked_data() (in module ase2sprkkr.asr.core.results)": [[142, "ase2sprkkr.asr.core.results.read_hacked_data"]], "read_new_data() (in module ase2sprkkr.asr.core.results)": [[143, "ase2sprkkr.asr.core.results.read_new_data"]], "read_old_data() (in module ase2sprkkr.asr.core.results)": [[144, "ase2sprkkr.asr.core.results.read_old_data"]], "ase2sprkkr.asr.core.types": [[145, "module-ase2sprkkr.asr.core.types"]], "atomsfile (class in ase2sprkkr.asr.core.types)": [[146, "ase2sprkkr.asr.core.types.AtomsFile"]], "__init__() (ase2sprkkr.asr.core.types.atomsfile method)": [[146, "ase2sprkkr.asr.core.types.AtomsFile.__init__"]], "convert() (ase2sprkkr.asr.core.types.atomsfile method)": [[146, "ase2sprkkr.asr.core.types.AtomsFile.convert"]], "name (ase2sprkkr.asr.core.types.atomsfile attribute)": [[146, "ase2sprkkr.asr.core.types.AtomsFile.name"]], "dictstr (class in ase2sprkkr.asr.core.types)": [[147, "ase2sprkkr.asr.core.types.DictStr"]], "__init__() (ase2sprkkr.asr.core.types.dictstr method)": [[147, "ase2sprkkr.asr.core.types.DictStr.__init__"]], "convert() (ase2sprkkr.asr.core.types.dictstr method)": [[147, "ase2sprkkr.asr.core.types.DictStr.convert"]], "name (ase2sprkkr.asr.core.types.dictstr attribute)": [[147, "ase2sprkkr.asr.core.types.DictStr.name"]], "clickify_docstring() (in module ase2sprkkr.asr.core.types)": [[148, "ase2sprkkr.asr.core.types.clickify_docstring"]], "ase2sprkkr.asr.core.utils": [[149, "module-ase2sprkkr.asr.core.utils"]], "chdir() (in module ase2sprkkr.asr.core.utils)": [[150, "ase2sprkkr.asr.core.utils.chdir"]], "dct_to_object() (in module ase2sprkkr.asr.core.utils)": [[151, "ase2sprkkr.asr.core.utils.dct_to_object"]], "encode_json() (in module ase2sprkkr.asr.core.utils)": [[152, "ase2sprkkr.asr.core.utils.encode_json"]], "file_barrier() (in module ase2sprkkr.asr.core.utils)": [[153, "ase2sprkkr.asr.core.utils.file_barrier"]], "get_dep_tree() (in module ase2sprkkr.asr.core.utils)": [[154, "ase2sprkkr.asr.core.utils.get_dep_tree"]], "get_recipe_from_name() (in module ase2sprkkr.asr.core.utils)": [[155, "ase2sprkkr.asr.core.utils.get_recipe_from_name"]], "md5sum() (in module ase2sprkkr.asr.core.utils)": [[156, "ase2sprkkr.asr.core.utils.md5sum"]], "parse_dict_string() (in module ase2sprkkr.asr.core.utils)": [[157, "ase2sprkkr.asr.core.utils.parse_dict_string"]], "parse_mod_func() (in module ase2sprkkr.asr.core.utils)": [[158, "ase2sprkkr.asr.core.utils.parse_mod_func"]], "read_json() (in module ase2sprkkr.asr.core.utils)": [[159, "ase2sprkkr.asr.core.utils.read_json"]], "recursive_update() (in module ase2sprkkr.asr.core.utils)": [[160, "ase2sprkkr.asr.core.utils.recursive_update"]], "singleprec_dict() (in module ase2sprkkr.asr.core.utils)": [[161, "ase2sprkkr.asr.core.utils.singleprec_dict"]], "unlink() (in module ase2sprkkr.asr.core.utils)": [[162, "ase2sprkkr.asr.core.utils.unlink"]], "write_file() (in module ase2sprkkr.asr.core.utils)": [[163, "ase2sprkkr.asr.core.utils.write_file"]], "write_json() (in module ase2sprkkr.asr.core.utils)": [[164, "ase2sprkkr.asr.core.utils.write_json"]], "ase2sprkkr.asr.database": [[165, "module-ase2sprkkr.asr.database"]], "ase2sprkkr.asr.database.browser": [[166, "module-ase2sprkkr.asr.database.browser"]], "rowwrapper (class in ase2sprkkr.asr.database.browser)": [[167, "ase2sprkkr.asr.database.browser.RowWrapper"]], "__init__() (ase2sprkkr.asr.database.browser.rowwrapper method)": [[167, "ase2sprkkr.asr.database.browser.RowWrapper.__init__"]], "create_table() (in module ase2sprkkr.asr.database.browser)": [[168, "ase2sprkkr.asr.database.browser.create_table"]], "describe_entries() (in module ase2sprkkr.asr.database.browser)": [[169, "ase2sprkkr.asr.database.browser.describe_entries"]], "describe_entry() (in module ase2sprkkr.asr.database.browser)": [[170, "ase2sprkkr.asr.database.browser.describe_entry"]], "dict_to_list() (in module ase2sprkkr.asr.database.browser)": [[171, "ase2sprkkr.asr.database.browser.dict_to_list"]], "entry_parameter_description() (in module ase2sprkkr.asr.database.browser)": [[172, "ase2sprkkr.asr.database.browser.entry_parameter_description"]], "extract_recipe_from_filename() (in module ase2sprkkr.asr.database.browser)": [[173, "ase2sprkkr.asr.database.browser.extract_recipe_from_filename"]], "fig() (in module ase2sprkkr.asr.database.browser)": [[174, "ase2sprkkr.asr.database.browser.fig"]], "is_results_file() (in module ase2sprkkr.asr.database.browser)": [[175, "ase2sprkkr.asr.database.browser.is_results_file"]], "layout() (in module ase2sprkkr.asr.database.browser)": [[176, "ase2sprkkr.asr.database.browser.layout"]], "merge_panels() (in module ase2sprkkr.asr.database.browser)": [[177, "ase2sprkkr.asr.database.browser.merge_panels"]], "miscellaneous_section() (in module ase2sprkkr.asr.database.browser)": [[178, "ase2sprkkr.asr.database.browser.miscellaneous_section"]], "table() (in module ase2sprkkr.asr.database.browser)": [[179, "ase2sprkkr.asr.database.browser.table"]], "val2str() (in module ase2sprkkr.asr.database.browser)": [[180, "ase2sprkkr.asr.database.browser.val2str"]], "ase2sprkkr.asr.database.check": [[181, "module-ase2sprkkr.asr.database.check"]], "ase2sprkkr.asr.database.clonetree": [[182, "module-ase2sprkkr.asr.database.clonetree"]], "ase2sprkkr.asr.database.duplicates": [[183, "module-ase2sprkkr.asr.database.duplicates"]], "compare() (in module ase2sprkkr.asr.database.duplicates)": [[184, "ase2sprkkr.asr.database.duplicates.compare"]], "filter_uids() (in module ase2sprkkr.asr.database.duplicates)": [[185, "ase2sprkkr.asr.database.duplicates.filter_uids"]], "find_duplicate_group() (in module ase2sprkkr.asr.database.duplicates)": [[186, "ase2sprkkr.asr.database.duplicates.find_duplicate_group"]], "parse_filter_string() (in module ase2sprkkr.asr.database.duplicates)": [[187, "ase2sprkkr.asr.database.duplicates.parse_filter_string"]], "ase2sprkkr.asr.database.material_fingerprint": [[188, "module-ase2sprkkr.asr.database.material_fingerprint"]], "get_hash_of_atoms() (in module ase2sprkkr.asr.database.material_fingerprint)": [[189, "ase2sprkkr.asr.database.material_fingerprint.get_hash_of_atoms"]], "get_uid_of_atoms() (in module ase2sprkkr.asr.database.material_fingerprint)": [[190, "ase2sprkkr.asr.database.material_fingerprint.get_uid_of_atoms"]], "todict() (in module ase2sprkkr.asr.database.material_fingerprint)": [[191, "ase2sprkkr.asr.database.material_fingerprint.todict"]], "ase2sprkkr.asr.database.merge": [[192, "module-ase2sprkkr.asr.database.merge"]], "ase2sprkkr.asr.database.rmsd": [[193, "module-ase2sprkkr.asr.database.rmsd"]], "get_rmsd() (in module ase2sprkkr.asr.database.rmsd)": [[194, "ase2sprkkr.asr.database.rmsd.get_rmsd"]], "normalize_nonpbc_atoms() (in module ase2sprkkr.asr.database.rmsd)": [[195, "ase2sprkkr.asr.database.rmsd.normalize_nonpbc_atoms"]], "update_rmsd() (in module ase2sprkkr.asr.database.rmsd)": [[196, "ase2sprkkr.asr.database.rmsd.update_rmsd"]], "ase2sprkkr.asr.database.templates": [[197, "module-ase2sprkkr.asr.database.templates"]], "ase2sprkkr.asr.database.totree": [[198, "module-ase2sprkkr.asr.database.totree"]], "make_folder_dict() (in module ase2sprkkr.asr.database.totree)": [[199, "ase2sprkkr.asr.database.totree.make_folder_dict"]], "make_folder_tree() (in module ase2sprkkr.asr.database.totree)": [[200, "ase2sprkkr.asr.database.totree.make_folder_tree"]], "ase2sprkkr.asr.defectformation": [[201, "module-ase2sprkkr.asr.defectformation"]], "check_and_get_general_inputs() (in module ase2sprkkr.asr.defectformation)": [[202, "ase2sprkkr.asr.defectformation.check_and_get_general_inputs"]], "collect_data() (in module ase2sprkkr.asr.defectformation)": [[203, "ase2sprkkr.asr.defectformation.collect_data"]], "find_file_in_folder() (in module ase2sprkkr.asr.defectformation)": [[204, "ase2sprkkr.asr.defectformation.find_file_in_folder"]], "intersection() (in module ase2sprkkr.asr.defectformation)": [[205, "ase2sprkkr.asr.defectformation.intersection"]], "line() (in module ase2sprkkr.asr.defectformation)": [[206, "ase2sprkkr.asr.defectformation.line"]], "line_intersection() (in module ase2sprkkr.asr.defectformation)": [[207, "ase2sprkkr.asr.defectformation.line_intersection"]], "plot_formation_and_transitions() (in module ase2sprkkr.asr.defectformation)": [[208, "ase2sprkkr.asr.defectformation.plot_formation_and_transitions"]], "ase2sprkkr.asr.deformationpotentials": [[209, "module-ase2sprkkr.asr.deformationpotentials"]], "result (class in ase2sprkkr.asr.deformationpotentials)": [[210, "ase2sprkkr.asr.deformationpotentials.Result"]], "__init__() (ase2sprkkr.asr.deformationpotentials.result method)": [[210, "ase2sprkkr.asr.deformationpotentials.Result.__init__"]], "_known_data_keys (ase2sprkkr.asr.deformationpotentials.result attribute)": [[210, "ase2sprkkr.asr.deformationpotentials.Result._known_data_keys"]], "formats (ase2sprkkr.asr.deformationpotentials.result attribute)": [[210, "ase2sprkkr.asr.deformationpotentials.Result.formats"]], "strict (ase2sprkkr.asr.deformationpotentials.result attribute)": [[210, "ase2sprkkr.asr.deformationpotentials.Result.strict"]], "webpanel() (in module ase2sprkkr.asr.deformationpotentials)": [[211, "ase2sprkkr.asr.deformationpotentials.webpanel"]], "ase2sprkkr.asr.dimensionality": [[212, "module-ase2sprkkr.asr.dimensionality"]], "get_dimtypes() (in module ase2sprkkr.asr.dimensionality)": [[213, "ase2sprkkr.asr.dimensionality.get_dimtypes"]], "plot_dimensionality_histogram() (in module ase2sprkkr.asr.dimensionality)": [[214, "ase2sprkkr.asr.dimensionality.plot_dimensionality_histogram"]], "webpanel() (in module ase2sprkkr.asr.dimensionality)": [[215, "ase2sprkkr.asr.dimensionality.webpanel"]], "ase2sprkkr.asr.dos": [[216, "module-ase2sprkkr.asr.dos"]], "collect_data() (in module ase2sprkkr.asr.dos)": [[217, "ase2sprkkr.asr.dos.collect_data"]], "plot() (in module ase2sprkkr.asr.dos)": [[218, "ase2sprkkr.asr.dos.plot"]], "webpanel() (in module ase2sprkkr.asr.dos)": [[219, "ase2sprkkr.asr.dos.webpanel"]], "ase2sprkkr.asr.emasses": [[220, "module-ase2sprkkr.asr.emasses"]], "nogaperror": [[221, "ase2sprkkr.asr.emasses.NoGapError"]], "result (class in ase2sprkkr.asr.emasses)": [[222, "ase2sprkkr.asr.emasses.Result"]], "__init__() (ase2sprkkr.asr.emasses.result method)": [[222, "ase2sprkkr.asr.emasses.Result.__init__"]], "_known_data_keys (ase2sprkkr.asr.emasses.result attribute)": [[222, "ase2sprkkr.asr.emasses.Result._known_data_keys"]], "formats (ase2sprkkr.asr.emasses.result attribute)": [[222, "ase2sprkkr.asr.emasses.Result.formats"]], "strict (ase2sprkkr.asr.emasses.result attribute)": [[222, "ase2sprkkr.asr.emasses.Result.strict"]], "calculate_bs_along_emass_vecs() (in module ase2sprkkr.asr.emasses)": [[223, "ase2sprkkr.asr.emasses.calculate_bs_along_emass_vecs"]], "check_soc() (in module ase2sprkkr.asr.emasses)": [[224, "ase2sprkkr.asr.emasses.check_soc"]], "convert_key_to_tuple() (in module ase2sprkkr.asr.emasses)": [[225, "ase2sprkkr.asr.emasses.convert_key_to_tuple"]], "create_columns_fnames() (in module ase2sprkkr.asr.emasses)": [[226, "ase2sprkkr.asr.emasses.create_columns_fnames"]], "custom_table() (in module ase2sprkkr.asr.emasses)": [[227, "ase2sprkkr.asr.emasses.custom_table"]], "em() (in module ase2sprkkr.asr.emasses)": [[228, "ase2sprkkr.asr.emasses.em"]], "embands() (in module ase2sprkkr.asr.emasses)": [[229, "ase2sprkkr.asr.emasses.embands"]], "evalmodel() (in module ase2sprkkr.asr.emasses)": [[230, "ase2sprkkr.asr.emasses.evalmodel"]], "fit() (in module ase2sprkkr.asr.emasses)": [[231, "ase2sprkkr.asr.emasses.fit"]], "get_2nd_order_extremum() (in module ase2sprkkr.asr.emasses)": [[232, "ase2sprkkr.asr.emasses.get_2nd_order_extremum"]], "get_3rd_order_extremum() (in module ase2sprkkr.asr.emasses)": [[233, "ase2sprkkr.asr.emasses.get_3rd_order_extremum"]], "get_bt_ks() (in module ase2sprkkr.asr.emasses)": [[234, "ase2sprkkr.asr.emasses.get_bt_ks"]], "get_emass_dict_from_row() (in module ase2sprkkr.asr.emasses)": [[235, "ase2sprkkr.asr.emasses.get_emass_dict_from_row"]], "get_extremum_type() (in module ase2sprkkr.asr.emasses)": [[236, "ase2sprkkr.asr.emasses.get_extremum_type"]], "get_gapskn() (in module ase2sprkkr.asr.emasses)": [[237, "ase2sprkkr.asr.emasses.get_gapskn"]], "get_name() (in module ase2sprkkr.asr.emasses)": [[238, "ase2sprkkr.asr.emasses.get_name"]], "get_range() (in module ase2sprkkr.asr.emasses)": [[239, "ase2sprkkr.asr.emasses.get_range"]], "get_vb_cb_indices() (in module ase2sprkkr.asr.emasses)": [[240, "ase2sprkkr.asr.emasses.get_vb_cb_indices"]], "kptsinsphere() (in module ase2sprkkr.asr.emasses)": [[241, "ase2sprkkr.asr.emasses.kptsinsphere"]], "make_the_plots() (in module ase2sprkkr.asr.emasses)": [[242, "ase2sprkkr.asr.emasses.make_the_plots"]], "model() (in module ase2sprkkr.asr.emasses)": [[243, "ase2sprkkr.asr.emasses.model"]], "nonsc_sphere() (in module ase2sprkkr.asr.emasses)": [[244, "ase2sprkkr.asr.emasses.nonsc_sphere"]], "preliminary_refine() (in module ase2sprkkr.asr.emasses)": [[245, "ase2sprkkr.asr.emasses.preliminary_refine"]], "set_default() (in module ase2sprkkr.asr.emasses)": [[246, "ase2sprkkr.asr.emasses.set_default"]], "unpack_masses() (in module ase2sprkkr.asr.emasses)": [[247, "ase2sprkkr.asr.emasses.unpack_masses"]], "webpanel() (in module ase2sprkkr.asr.emasses)": [[248, "ase2sprkkr.asr.emasses.webpanel"]], "widemae() (in module ase2sprkkr.asr.emasses)": [[249, "ase2sprkkr.asr.emasses.wideMAE"]], "ase2sprkkr.asr.exchange": [[250, "module-ase2sprkkr.asr.exchange"]], "get_parameters() (in module ase2sprkkr.asr.exchange)": [[251, "ase2sprkkr.asr.exchange.get_parameters"]], "ase2sprkkr.asr.fere": [[252, "module-ase2sprkkr.asr.fere"]], "dbalreadyexistserror": [[253, "ase2sprkkr.asr.fere.DBAlreadyExistsError"]], "materialnotfounderror": [[254, "ase2sprkkr.asr.fere.MaterialNotFoundError"]], "parseerror": [[255, "ase2sprkkr.asr.fere.ParseError"]], "count() (in module ase2sprkkr.asr.fere)": [[256, "ase2sprkkr.asr.fere.count"]], "create_corrected_db() (in module ase2sprkkr.asr.fere)": [[257, "ase2sprkkr.asr.fere.create_corrected_db"]], "elements_from_refs() (in module ase2sprkkr.asr.fere)": [[258, "ase2sprkkr.asr.fere.elements_from_refs"]], "formulas_eq() (in module ase2sprkkr.asr.fere)": [[259, "ase2sprkkr.asr.fere.formulas_eq"]], "get_de_alpha() (in module ase2sprkkr.asr.fere)": [[260, "ase2sprkkr.asr.fere.get_dE_alpha"]], "get_hof() (in module ase2sprkkr.asr.fere)": [[261, "ase2sprkkr.asr.fere.get_hof"]], "load_data() (in module ase2sprkkr.asr.fere)": [[262, "ase2sprkkr.asr.fere.load_data"]], "minimize_error() (in module ase2sprkkr.asr.fere)": [[263, "ase2sprkkr.asr.fere.minimize_error"]], "multiply_formula() (in module ase2sprkkr.asr.fere)": [[264, "ase2sprkkr.asr.fere.multiply_formula"]], "only() (in module ase2sprkkr.asr.fere)": [[265, "ase2sprkkr.asr.fere.only"]], "parse_reactions() (in module ase2sprkkr.asr.fere)": [[266, "ase2sprkkr.asr.fere.parse_reactions"]], "parse_refs() (in module ase2sprkkr.asr.fere)": [[267, "ase2sprkkr.asr.fere.parse_refs"]], "safe_get() (in module ase2sprkkr.asr.fere)": [[268, "ase2sprkkr.asr.fere.safe_get"]], "select() (in module ase2sprkkr.asr.fere)": [[269, "ase2sprkkr.asr.fere.select"]], "single() (in module ase2sprkkr.asr.fere)": [[270, "ase2sprkkr.asr.fere.single"]], "unique() (in module ase2sprkkr.asr.fere)": [[271, "ase2sprkkr.asr.fere.unique"]], "where() (in module ase2sprkkr.asr.fere)": [[272, "ase2sprkkr.asr.fere.where"]], "ase2sprkkr.asr.fermisurface": [[273, "module-ase2sprkkr.asr.fermisurface"]], "result (class in ase2sprkkr.asr.fermisurface)": [[274, "ase2sprkkr.asr.fermisurface.Result"]], "__init__() (ase2sprkkr.asr.fermisurface.result method)": [[274, "ase2sprkkr.asr.fermisurface.Result.__init__"]], "_known_data_keys (ase2sprkkr.asr.fermisurface.result attribute)": [[274, "ase2sprkkr.asr.fermisurface.Result._known_data_keys"]], "formats (ase2sprkkr.asr.fermisurface.result attribute)": [[274, "ase2sprkkr.asr.fermisurface.Result.formats"]], "strict (ase2sprkkr.asr.fermisurface.result attribute)": [[274, "ase2sprkkr.asr.fermisurface.Result.strict"]], "add_fermi() (in module ase2sprkkr.asr.fermisurface)": [[275, "ase2sprkkr.asr.fermisurface.add_fermi"]], "bz_vertices() (in module ase2sprkkr.asr.fermisurface)": [[276, "ase2sprkkr.asr.fermisurface.bz_vertices"]], "find_contours() (in module ase2sprkkr.asr.fermisurface)": [[277, "ase2sprkkr.asr.fermisurface.find_contours"]], "plot_fermi() (in module ase2sprkkr.asr.fermisurface)": [[278, "ase2sprkkr.asr.fermisurface.plot_fermi"]], "webpanel() (in module ase2sprkkr.asr.fermisurface)": [[279, "ase2sprkkr.asr.fermisurface.webpanel"]], "ase2sprkkr.asr.formalpolarization": [[280, "module-ase2sprkkr.asr.formalpolarization"]], "atomstooclosetoboundary": [[281, "ase2sprkkr.asr.formalpolarization.AtomsTooCloseToBoundary"]], "distance_to_non_pbc_boundary() (in module ase2sprkkr.asr.formalpolarization)": [[282, "ase2sprkkr.asr.formalpolarization.distance_to_non_pbc_boundary"]], "get_atomic_polarization_phase() (in module ase2sprkkr.asr.formalpolarization)": [[283, "ase2sprkkr.asr.formalpolarization.get_atomic_polarization_phase"]], "get_dipole_polarization_phase() (in module ase2sprkkr.asr.formalpolarization)": [[284, "ase2sprkkr.asr.formalpolarization.get_dipole_polarization_phase"]], "get_electronic_polarization_phase() (in module ase2sprkkr.asr.formalpolarization)": [[285, "ase2sprkkr.asr.formalpolarization.get_electronic_polarization_phase"]], "get_wavefunctions() (in module ase2sprkkr.asr.formalpolarization)": [[286, "ase2sprkkr.asr.formalpolarization.get_wavefunctions"]], "ase2sprkkr.asr.gs": [[287, "module-ase2sprkkr.asr.gs"]], "gapsresult (class in ase2sprkkr.asr.gs)": [[288, "ase2sprkkr.asr.gs.GapsResult"]], "__init__() (ase2sprkkr.asr.gs.gapsresult method)": [[288, "ase2sprkkr.asr.gs.GapsResult.__init__"]], "_known_data_keys (ase2sprkkr.asr.gs.gapsresult attribute)": [[288, "ase2sprkkr.asr.gs.GapsResult._known_data_keys"]], "cbm (ase2sprkkr.asr.gs.gapsresult property)": [[288, "ase2sprkkr.asr.gs.GapsResult.cbm"]], "cbm_dir (ase2sprkkr.asr.gs.gapsresult property)": [[288, "ase2sprkkr.asr.gs.GapsResult.cbm_dir"]], "efermi (ase2sprkkr.asr.gs.gapsresult property)": [[288, "ase2sprkkr.asr.gs.GapsResult.efermi"]], "gap (ase2sprkkr.asr.gs.gapsresult property)": [[288, "ase2sprkkr.asr.gs.GapsResult.gap"]], "gap_dir (ase2sprkkr.asr.gs.gapsresult property)": [[288, "ase2sprkkr.asr.gs.GapsResult.gap_dir"]], "k_cbm_c (ase2sprkkr.asr.gs.gapsresult property)": [[288, "ase2sprkkr.asr.gs.GapsResult.k_cbm_c"]], "k_cbm_dir_c (ase2sprkkr.asr.gs.gapsresult property)": [[288, "ase2sprkkr.asr.gs.GapsResult.k_cbm_dir_c"]], "k_vbm_c (ase2sprkkr.asr.gs.gapsresult property)": [[288, "ase2sprkkr.asr.gs.GapsResult.k_vbm_c"]], "k_vbm_dir_c (ase2sprkkr.asr.gs.gapsresult property)": [[288, "ase2sprkkr.asr.gs.GapsResult.k_vbm_dir_c"]], "key_descriptions (ase2sprkkr.asr.gs.gapsresult attribute)": [[288, "ase2sprkkr.asr.gs.GapsResult.key_descriptions"]], "skn1 (ase2sprkkr.asr.gs.gapsresult property)": [[288, "ase2sprkkr.asr.gs.GapsResult.skn1"]], "skn1_dir (ase2sprkkr.asr.gs.gapsresult property)": [[288, "ase2sprkkr.asr.gs.GapsResult.skn1_dir"]], "skn2 (ase2sprkkr.asr.gs.gapsresult property)": [[288, "ase2sprkkr.asr.gs.GapsResult.skn2"]], "skn2_dir (ase2sprkkr.asr.gs.gapsresult property)": [[288, "ase2sprkkr.asr.gs.GapsResult.skn2_dir"]], "strict (ase2sprkkr.asr.gs.gapsresult attribute)": [[288, "ase2sprkkr.asr.gs.GapsResult.strict"]], "vbm (ase2sprkkr.asr.gs.gapsresult property)": [[288, "ase2sprkkr.asr.gs.GapsResult.vbm"]], "vbm_dir (ase2sprkkr.asr.gs.gapsresult property)": [[288, "ase2sprkkr.asr.gs.GapsResult.vbm_dir"]], "result (class in ase2sprkkr.asr.gs)": [[289, "ase2sprkkr.asr.gs.Result"]], "__init__() (ase2sprkkr.asr.gs.result method)": [[289, "ase2sprkkr.asr.gs.Result.__init__"]], "_known_data_keys (ase2sprkkr.asr.gs.result attribute)": [[289, "ase2sprkkr.asr.gs.Result._known_data_keys"]], "cbm (ase2sprkkr.asr.gs.result property)": [[289, "ase2sprkkr.asr.gs.Result.cbm"]], "cbm_dir (ase2sprkkr.asr.gs.result property)": [[289, "ase2sprkkr.asr.gs.Result.cbm_dir"]], "dipz (ase2sprkkr.asr.gs.result property)": [[289, "ase2sprkkr.asr.gs.Result.dipz"]], "efermi (ase2sprkkr.asr.gs.result property)": [[289, "ase2sprkkr.asr.gs.Result.efermi"]], "etot (ase2sprkkr.asr.gs.result property)": [[289, "ase2sprkkr.asr.gs.Result.etot"]], "evac (ase2sprkkr.asr.gs.result property)": [[289, "ase2sprkkr.asr.gs.Result.evac"]], "evacdiff (ase2sprkkr.asr.gs.result property)": [[289, "ase2sprkkr.asr.gs.Result.evacdiff"]], "forces (ase2sprkkr.asr.gs.result property)": [[289, "ase2sprkkr.asr.gs.Result.forces"]], "formats (ase2sprkkr.asr.gs.result attribute)": [[289, "ase2sprkkr.asr.gs.Result.formats"]], "gap (ase2sprkkr.asr.gs.result property)": [[289, "ase2sprkkr.asr.gs.Result.gap"]], "gap_dir (ase2sprkkr.asr.gs.result property)": [[289, "ase2sprkkr.asr.gs.Result.gap_dir"]], "gap_dir_nosoc (ase2sprkkr.asr.gs.result property)": [[289, "ase2sprkkr.asr.gs.Result.gap_dir_nosoc"]], "gap_nosoc (ase2sprkkr.asr.gs.result property)": [[289, "ase2sprkkr.asr.gs.Result.gap_nosoc"]], "gaps_nosoc (ase2sprkkr.asr.gs.result property)": [[289, "ase2sprkkr.asr.gs.Result.gaps_nosoc"]], "k_cbm_c (ase2sprkkr.asr.gs.result property)": [[289, "ase2sprkkr.asr.gs.Result.k_cbm_c"]], "k_cbm_dir_c (ase2sprkkr.asr.gs.result property)": [[289, "ase2sprkkr.asr.gs.Result.k_cbm_dir_c"]], "k_vbm_c (ase2sprkkr.asr.gs.result property)": [[289, "ase2sprkkr.asr.gs.Result.k_vbm_c"]], "k_vbm_dir_c (ase2sprkkr.asr.gs.result property)": [[289, "ase2sprkkr.asr.gs.Result.k_vbm_dir_c"]], "key_descriptions (ase2sprkkr.asr.gs.result attribute)": [[289, "ase2sprkkr.asr.gs.Result.key_descriptions"]], "skn1 (ase2sprkkr.asr.gs.result property)": [[289, "ase2sprkkr.asr.gs.Result.skn1"]], "skn1_dir (ase2sprkkr.asr.gs.result property)": [[289, "ase2sprkkr.asr.gs.Result.skn1_dir"]], "skn2 (ase2sprkkr.asr.gs.result property)": [[289, "ase2sprkkr.asr.gs.Result.skn2"]], "skn2_dir (ase2sprkkr.asr.gs.result property)": [[289, "ase2sprkkr.asr.gs.Result.skn2_dir"]], "stresses (ase2sprkkr.asr.gs.result property)": [[289, "ase2sprkkr.asr.gs.Result.stresses"]], "strict (ase2sprkkr.asr.gs.result attribute)": [[289, "ase2sprkkr.asr.gs.Result.strict"]], "vacuumlevels (ase2sprkkr.asr.gs.result property)": [[289, "ase2sprkkr.asr.gs.Result.vacuumlevels"]], "vbm (ase2sprkkr.asr.gs.result property)": [[289, "ase2sprkkr.asr.gs.Result.vbm"]], "vbm_dir (ase2sprkkr.asr.gs.result property)": [[289, "ase2sprkkr.asr.gs.Result.vbm_dir"]], "workfunction (ase2sprkkr.asr.gs.result property)": [[289, "ase2sprkkr.asr.gs.Result.workfunction"]], "vacuumlevelresults (class in ase2sprkkr.asr.gs)": [[290, "ase2sprkkr.asr.gs.VacuumLevelResults"]], "__init__() (ase2sprkkr.asr.gs.vacuumlevelresults method)": [[290, "ase2sprkkr.asr.gs.VacuumLevelResults.__init__"]], "_known_data_keys (ase2sprkkr.asr.gs.vacuumlevelresults attribute)": [[290, "ase2sprkkr.asr.gs.VacuumLevelResults._known_data_keys"]], "dipz (ase2sprkkr.asr.gs.vacuumlevelresults property)": [[290, "ase2sprkkr.asr.gs.VacuumLevelResults.dipz"]], "efermi_nosoc (ase2sprkkr.asr.gs.vacuumlevelresults property)": [[290, "ase2sprkkr.asr.gs.VacuumLevelResults.efermi_nosoc"]], "evac1 (ase2sprkkr.asr.gs.vacuumlevelresults property)": [[290, "ase2sprkkr.asr.gs.VacuumLevelResults.evac1"]], "evac2 (ase2sprkkr.asr.gs.vacuumlevelresults property)": [[290, "ase2sprkkr.asr.gs.VacuumLevelResults.evac2"]], "evacdiff (ase2sprkkr.asr.gs.vacuumlevelresults property)": [[290, "ase2sprkkr.asr.gs.VacuumLevelResults.evacdiff"]], "evacmean (ase2sprkkr.asr.gs.vacuumlevelresults property)": [[290, "ase2sprkkr.asr.gs.VacuumLevelResults.evacmean"]], "key_descriptions (ase2sprkkr.asr.gs.vacuumlevelresults attribute)": [[290, "ase2sprkkr.asr.gs.VacuumLevelResults.key_descriptions"]], "strict (ase2sprkkr.asr.gs.vacuumlevelresults attribute)": [[290, "ase2sprkkr.asr.gs.VacuumLevelResults.strict"]], "v_z (ase2sprkkr.asr.gs.vacuumlevelresults property)": [[290, "ase2sprkkr.asr.gs.VacuumLevelResults.v_z"]], "z_z (ase2sprkkr.asr.gs.vacuumlevelresults property)": [[290, "ase2sprkkr.asr.gs.VacuumLevelResults.z_z"]], "bz_with_band_extremums() (in module ase2sprkkr.asr.gs)": [[291, "ase2sprkkr.asr.gs.bz_with_band_extremums"]], "evacdiff() (in module ase2sprkkr.asr.gs)": [[292, "ase2sprkkr.asr.gs.evacdiff"]], "gaps() (in module ase2sprkkr.asr.gs)": [[293, "ase2sprkkr.asr.gs.gaps"]], "get_1bz_k() (in module ase2sprkkr.asr.gs)": [[294, "ase2sprkkr.asr.gs.get_1bz_k"]], "get_gap_info() (in module ase2sprkkr.asr.gs)": [[295, "ase2sprkkr.asr.gs.get_gap_info"]], "vacuumlevels() (in module ase2sprkkr.asr.gs)": [[296, "ase2sprkkr.asr.gs.vacuumlevels"]], "webpanel() (in module ase2sprkkr.asr.gs)": [[297, "ase2sprkkr.asr.gs.webpanel"]], "ase2sprkkr.asr.gw": [[298, "module-ase2sprkkr.asr.gw"]], "result (class in ase2sprkkr.asr.gw)": [[299, "ase2sprkkr.asr.gw.Result"]], "__init__() (ase2sprkkr.asr.gw.result method)": [[299, "ase2sprkkr.asr.gw.Result.__init__"]], "_known_data_keys (ase2sprkkr.asr.gw.result attribute)": [[299, "ase2sprkkr.asr.gw.Result._known_data_keys"]], "bandstructure (ase2sprkkr.asr.gw.result property)": [[299, "ase2sprkkr.asr.gw.Result.bandstructure"]], "cbm_gw (ase2sprkkr.asr.gw.result property)": [[299, "ase2sprkkr.asr.gw.Result.cbm_gw"]], "cbm_gw_nosoc (ase2sprkkr.asr.gw.result property)": [[299, "ase2sprkkr.asr.gw.Result.cbm_gw_nosoc"]], "efermi_gw_nosoc (ase2sprkkr.asr.gw.result property)": [[299, "ase2sprkkr.asr.gw.Result.efermi_gw_nosoc"]], "efermi_gw_soc (ase2sprkkr.asr.gw.result property)": [[299, "ase2sprkkr.asr.gw.Result.efermi_gw_soc"]], "formats (ase2sprkkr.asr.gw.result attribute)": [[299, "ase2sprkkr.asr.gw.Result.formats"]], "gap_dir_gw (ase2sprkkr.asr.gw.result property)": [[299, "ase2sprkkr.asr.gw.Result.gap_dir_gw"]], "gap_dir_gw_nosoc (ase2sprkkr.asr.gw.result property)": [[299, "ase2sprkkr.asr.gw.Result.gap_dir_gw_nosoc"]], "gap_gw (ase2sprkkr.asr.gw.result property)": [[299, "ase2sprkkr.asr.gw.Result.gap_gw"]], "gap_gw_nosoc (ase2sprkkr.asr.gw.result property)": [[299, "ase2sprkkr.asr.gw.Result.gap_gw_nosoc"]], "kcbm (ase2sprkkr.asr.gw.result property)": [[299, "ase2sprkkr.asr.gw.Result.kcbm"]], "kcbm_nosoc (ase2sprkkr.asr.gw.result property)": [[299, "ase2sprkkr.asr.gw.Result.kcbm_nosoc"]], "key_descriptions (ase2sprkkr.asr.gw.result attribute)": [[299, "ase2sprkkr.asr.gw.Result.key_descriptions"]], "kvbm (ase2sprkkr.asr.gw.result property)": [[299, "ase2sprkkr.asr.gw.Result.kvbm"]], "kvbm_nosoc (ase2sprkkr.asr.gw.result property)": [[299, "ase2sprkkr.asr.gw.Result.kvbm_nosoc"]], "strict (ase2sprkkr.asr.gw.result attribute)": [[299, "ase2sprkkr.asr.gw.Result.strict"]], "vbm_gw (ase2sprkkr.asr.gw.result property)": [[299, "ase2sprkkr.asr.gw.Result.vbm_gw"]], "vbm_gw_nosoc (ase2sprkkr.asr.gw.result property)": [[299, "ase2sprkkr.asr.gw.Result.vbm_gw_nosoc"]], "bs_gw() (in module ase2sprkkr.asr.gw)": [[300, "ase2sprkkr.asr.gw.bs_gw"]], "get_kpts_size() (in module ase2sprkkr.asr.gw)": [[301, "ase2sprkkr.asr.gw.get_kpts_size"]], "webpanel() (in module ase2sprkkr.asr.gw)": [[302, "ase2sprkkr.asr.gw.webpanel"]], "ase2sprkkr.asr.hse": [[303, "module-ase2sprkkr.asr.hse"]], "mp_interpolate() (in module ase2sprkkr.asr.hse)": [[304, "ase2sprkkr.asr.hse.MP_interpolate"]], "result (class in ase2sprkkr.asr.hse)": [[305, "ase2sprkkr.asr.hse.Result"]], "__init__() (ase2sprkkr.asr.hse.result method)": [[305, "ase2sprkkr.asr.hse.Result.__init__"]], "_known_data_keys (ase2sprkkr.asr.hse.result attribute)": [[305, "ase2sprkkr.asr.hse.Result._known_data_keys"]], "bandstructure (ase2sprkkr.asr.hse.result property)": [[305, "ase2sprkkr.asr.hse.Result.bandstructure"]], "cbm_hse (ase2sprkkr.asr.hse.result property)": [[305, "ase2sprkkr.asr.hse.Result.cbm_hse"]], "cbm_hse_nosoc (ase2sprkkr.asr.hse.result property)": [[305, "ase2sprkkr.asr.hse.Result.cbm_hse_nosoc"]], "efermi_hse_nosoc (ase2sprkkr.asr.hse.result property)": [[305, "ase2sprkkr.asr.hse.Result.efermi_hse_nosoc"]], "efermi_hse_soc (ase2sprkkr.asr.hse.result property)": [[305, "ase2sprkkr.asr.hse.Result.efermi_hse_soc"]], "formats (ase2sprkkr.asr.hse.result attribute)": [[305, "ase2sprkkr.asr.hse.Result.formats"]], "gap_dir_hse (ase2sprkkr.asr.hse.result property)": [[305, "ase2sprkkr.asr.hse.Result.gap_dir_hse"]], "gap_dir_hse_nosoc (ase2sprkkr.asr.hse.result property)": [[305, "ase2sprkkr.asr.hse.Result.gap_dir_hse_nosoc"]], "gap_hse (ase2sprkkr.asr.hse.result property)": [[305, "ase2sprkkr.asr.hse.Result.gap_hse"]], "gap_hse_nosoc (ase2sprkkr.asr.hse.result property)": [[305, "ase2sprkkr.asr.hse.Result.gap_hse_nosoc"]], "kcbm (ase2sprkkr.asr.hse.result property)": [[305, "ase2sprkkr.asr.hse.Result.kcbm"]], "kcbm_nosoc (ase2sprkkr.asr.hse.result property)": [[305, "ase2sprkkr.asr.hse.Result.kcbm_nosoc"]], "key_descriptions (ase2sprkkr.asr.hse.result attribute)": [[305, "ase2sprkkr.asr.hse.Result.key_descriptions"]], "kvbm (ase2sprkkr.asr.hse.result property)": [[305, "ase2sprkkr.asr.hse.Result.kvbm"]], "kvbm_nosoc (ase2sprkkr.asr.hse.result property)": [[305, "ase2sprkkr.asr.hse.Result.kvbm_nosoc"]], "strict (ase2sprkkr.asr.hse.result attribute)": [[305, "ase2sprkkr.asr.hse.Result.strict"]], "vbm_hse (ase2sprkkr.asr.hse.result property)": [[305, "ase2sprkkr.asr.hse.Result.vbm_hse"]], "vbm_hse_nosoc (ase2sprkkr.asr.hse.result property)": [[305, "ase2sprkkr.asr.hse.Result.vbm_hse_nosoc"]], "bs_hse() (in module ase2sprkkr.asr.hse)": [[306, "ase2sprkkr.asr.hse.bs_hse"]], "get_kpts_size() (in module ase2sprkkr.asr.hse)": [[307, "ase2sprkkr.asr.hse.get_kpts_size"]], "hse() (in module ase2sprkkr.asr.hse)": [[308, "ase2sprkkr.asr.hse.hse"]], "hse_spinorbit() (in module ase2sprkkr.asr.hse)": [[309, "ase2sprkkr.asr.hse.hse_spinorbit"]], "webpanel() (in module ase2sprkkr.asr.hse)": [[310, "ase2sprkkr.asr.hse.webpanel"]], "ase2sprkkr.asr.infraredpolarizability": [[311, "module-ase2sprkkr.asr.infraredpolarizability"]], "result (class in ase2sprkkr.asr.infraredpolarizability)": [[312, "ase2sprkkr.asr.infraredpolarizability.Result"]], "__init__() (ase2sprkkr.asr.infraredpolarizability.result method)": [[312, "ase2sprkkr.asr.infraredpolarizability.Result.__init__"]], "_known_data_keys (ase2sprkkr.asr.infraredpolarizability.result attribute)": [[312, "ase2sprkkr.asr.infraredpolarizability.Result._known_data_keys"]], "alpha_wvv (ase2sprkkr.asr.infraredpolarizability.result property)": [[312, "ase2sprkkr.asr.infraredpolarizability.Result.alpha_wvv"]], "alphax (ase2sprkkr.asr.infraredpolarizability.result property)": [[312, "ase2sprkkr.asr.infraredpolarizability.Result.alphax"]], "alphax_lat (ase2sprkkr.asr.infraredpolarizability.result property)": [[312, "ase2sprkkr.asr.infraredpolarizability.Result.alphax_lat"]], "alphay (ase2sprkkr.asr.infraredpolarizability.result property)": [[312, "ase2sprkkr.asr.infraredpolarizability.Result.alphay"]], "alphay_lat (ase2sprkkr.asr.infraredpolarizability.result property)": [[312, "ase2sprkkr.asr.infraredpolarizability.Result.alphay_lat"]], "alphaz (ase2sprkkr.asr.infraredpolarizability.result property)": [[312, "ase2sprkkr.asr.infraredpolarizability.Result.alphaz"]], "alphaz_lat (ase2sprkkr.asr.infraredpolarizability.result property)": [[312, "ase2sprkkr.asr.infraredpolarizability.Result.alphaz_lat"]], "formats (ase2sprkkr.asr.infraredpolarizability.result attribute)": [[312, "ase2sprkkr.asr.infraredpolarizability.Result.formats"]], "key_descriptions (ase2sprkkr.asr.infraredpolarizability.result attribute)": [[312, "ase2sprkkr.asr.infraredpolarizability.Result.key_descriptions"]], "omega_w (ase2sprkkr.asr.infraredpolarizability.result property)": [[312, "ase2sprkkr.asr.infraredpolarizability.Result.omega_w"]], "strict (ase2sprkkr.asr.infraredpolarizability.result attribute)": [[312, "ase2sprkkr.asr.infraredpolarizability.Result.strict"]], "create_plot() (in module ase2sprkkr.asr.infraredpolarizability)": [[313, "ase2sprkkr.asr.infraredpolarizability.create_plot"]], "get_phonon_pol() (in module ase2sprkkr.asr.infraredpolarizability)": [[314, "ase2sprkkr.asr.infraredpolarizability.get_phonon_pol"]], "webpanel() (in module ase2sprkkr.asr.infraredpolarizability)": [[315, "ase2sprkkr.asr.infraredpolarizability.webpanel"]], "ase2sprkkr.asr.magnetic_anisotropy": [[316, "module-ase2sprkkr.asr.magnetic_anisotropy"]], "e_x (ase2sprkkr.asr.magnetic_anisotropy.result property)": [[317, "ase2sprkkr.asr.magnetic_anisotropy.Result.E_x"]], "e_y (ase2sprkkr.asr.magnetic_anisotropy.result property)": [[317, "ase2sprkkr.asr.magnetic_anisotropy.Result.E_y"]], "e_z (ase2sprkkr.asr.magnetic_anisotropy.result property)": [[317, "ase2sprkkr.asr.magnetic_anisotropy.Result.E_z"]], "result (class in ase2sprkkr.asr.magnetic_anisotropy)": [[317, "ase2sprkkr.asr.magnetic_anisotropy.Result"]], "__init__() (ase2sprkkr.asr.magnetic_anisotropy.result method)": [[317, "ase2sprkkr.asr.magnetic_anisotropy.Result.__init__"]], "_known_data_keys (ase2sprkkr.asr.magnetic_anisotropy.result attribute)": [[317, "ase2sprkkr.asr.magnetic_anisotropy.Result._known_data_keys"]], "de_zx (ase2sprkkr.asr.magnetic_anisotropy.result property)": [[317, "ase2sprkkr.asr.magnetic_anisotropy.Result.dE_zx"]], "de_zy (ase2sprkkr.asr.magnetic_anisotropy.result property)": [[317, "ase2sprkkr.asr.magnetic_anisotropy.Result.dE_zy"]], "formats (ase2sprkkr.asr.magnetic_anisotropy.result attribute)": [[317, "ase2sprkkr.asr.magnetic_anisotropy.Result.formats"]], "key_descriptions (ase2sprkkr.asr.magnetic_anisotropy.result attribute)": [[317, "ase2sprkkr.asr.magnetic_anisotropy.Result.key_descriptions"]], "phi (ase2sprkkr.asr.magnetic_anisotropy.result property)": [[317, "ase2sprkkr.asr.magnetic_anisotropy.Result.phi"]], "spin_axis (ase2sprkkr.asr.magnetic_anisotropy.result property)": [[317, "ase2sprkkr.asr.magnetic_anisotropy.Result.spin_axis"]], "strict (ase2sprkkr.asr.magnetic_anisotropy.result attribute)": [[317, "ase2sprkkr.asr.magnetic_anisotropy.Result.strict"]], "theta (ase2sprkkr.asr.magnetic_anisotropy.result property)": [[317, "ase2sprkkr.asr.magnetic_anisotropy.Result.theta"]], "get_spin_axis() (in module ase2sprkkr.asr.magnetic_anisotropy)": [[318, "ase2sprkkr.asr.magnetic_anisotropy.get_spin_axis"]], "get_spin_index() (in module ase2sprkkr.asr.magnetic_anisotropy)": [[319, "ase2sprkkr.asr.magnetic_anisotropy.get_spin_index"]], "spin_axis() (in module ase2sprkkr.asr.magnetic_anisotropy)": [[320, "ase2sprkkr.asr.magnetic_anisotropy.spin_axis"]], "webpanel() (in module ase2sprkkr.asr.magnetic_anisotropy)": [[321, "ase2sprkkr.asr.magnetic_anisotropy.webpanel"]], "ase2sprkkr.asr.magstate": [[322, "module-ase2sprkkr.asr.magstate"]], "result (class in ase2sprkkr.asr.magstate)": [[323, "ase2sprkkr.asr.magstate.Result"]], "__init__() (ase2sprkkr.asr.magstate.result method)": [[323, "ase2sprkkr.asr.magstate.Result.__init__"]], "_known_data_keys (ase2sprkkr.asr.magstate.result attribute)": [[323, "ase2sprkkr.asr.magstate.Result._known_data_keys"]], "formats (ase2sprkkr.asr.magstate.result attribute)": [[323, "ase2sprkkr.asr.magstate.Result.formats"]], "is_magnetic (ase2sprkkr.asr.magstate.result property)": [[323, "ase2sprkkr.asr.magstate.Result.is_magnetic"]], "key_descriptions (ase2sprkkr.asr.magstate.result attribute)": [[323, "ase2sprkkr.asr.magstate.Result.key_descriptions"]], "magmom (ase2sprkkr.asr.magstate.result property)": [[323, "ase2sprkkr.asr.magstate.Result.magmom"]], "magmoms (ase2sprkkr.asr.magstate.result property)": [[323, "ase2sprkkr.asr.magstate.Result.magmoms"]], "magstate (ase2sprkkr.asr.magstate.result property)": [[323, "ase2sprkkr.asr.magstate.Result.magstate"]], "nspins (ase2sprkkr.asr.magstate.result property)": [[323, "ase2sprkkr.asr.magstate.Result.nspins"]], "strict (ase2sprkkr.asr.magstate.result attribute)": [[323, "ase2sprkkr.asr.magstate.Result.strict"]], "get_magstate() (in module ase2sprkkr.asr.magstate)": [[324, "ase2sprkkr.asr.magstate.get_magstate"]], "webpanel() (in module ase2sprkkr.asr.magstate)": [[325, "ase2sprkkr.asr.magstate.webpanel"]], "ase2sprkkr.asr.pdos": [[326, "module-ase2sprkkr.asr.pdos"]], "result (class in ase2sprkkr.asr.pdos)": [[327, "ase2sprkkr.asr.pdos.Result"]], "__init__() (ase2sprkkr.asr.pdos.result method)": [[327, "ase2sprkkr.asr.pdos.Result.__init__"]], "_known_data_keys (ase2sprkkr.asr.pdos.result attribute)": [[327, "ase2sprkkr.asr.pdos.Result._known_data_keys"]], "dos_at_ef_nosoc (ase2sprkkr.asr.pdos.result property)": [[327, "ase2sprkkr.asr.pdos.Result.dos_at_ef_nosoc"]], "dos_at_ef_soc (ase2sprkkr.asr.pdos.result property)": [[327, "ase2sprkkr.asr.pdos.Result.dos_at_ef_soc"]], "formats (ase2sprkkr.asr.pdos.result attribute)": [[327, "ase2sprkkr.asr.pdos.Result.formats"]], "key_descriptions (ase2sprkkr.asr.pdos.result attribute)": [[327, "ase2sprkkr.asr.pdos.Result.key_descriptions"]], "pdos_nosoc (ase2sprkkr.asr.pdos.result property)": [[327, "ase2sprkkr.asr.pdos.Result.pdos_nosoc"]], "pdos_soc (ase2sprkkr.asr.pdos.result property)": [[327, "ase2sprkkr.asr.pdos.Result.pdos_soc"]], "strict (ase2sprkkr.asr.pdos.result attribute)": [[327, "ase2sprkkr.asr.pdos.Result.strict"]], "calculate_pdos() (in module ase2sprkkr.asr.pdos)": [[328, "ase2sprkkr.asr.pdos.calculate_pdos"]], "get_l_a() (in module ase2sprkkr.asr.pdos)": [[329, "ase2sprkkr.asr.pdos.get_l_a"]], "get_ordered_syl_dict() (in module ase2sprkkr.asr.pdos)": [[330, "ase2sprkkr.asr.pdos.get_ordered_syl_dict"]], "get_yl_colors() (in module ase2sprkkr.asr.pdos)": [[331, "ase2sprkkr.asr.pdos.get_yl_colors"]], "pdos() (in module ase2sprkkr.asr.pdos)": [[332, "ase2sprkkr.asr.pdos.pdos"]], "plot_pdos() (in module ase2sprkkr.asr.pdos)": [[333, "ase2sprkkr.asr.pdos.plot_pdos"]], "plot_pdos_nosoc() (in module ase2sprkkr.asr.pdos)": [[334, "ase2sprkkr.asr.pdos.plot_pdos_nosoc"]], "plot_pdos_soc() (in module ase2sprkkr.asr.pdos)": [[335, "ase2sprkkr.asr.pdos.plot_pdos_soc"]], "webpanel() (in module ase2sprkkr.asr.pdos)": [[336, "ase2sprkkr.asr.pdos.webpanel"]], "ase2sprkkr.asr.phonons": [[337, "module-ase2sprkkr.asr.phonons"]], "result (class in ase2sprkkr.asr.phonons)": [[338, "ase2sprkkr.asr.phonons.Result"]], "__init__() (ase2sprkkr.asr.phonons.result method)": [[338, "ase2sprkkr.asr.phonons.Result.__init__"]], "_known_data_keys (ase2sprkkr.asr.phonons.result attribute)": [[338, "ase2sprkkr.asr.phonons.Result._known_data_keys"]], "dynamic_stability_phonons (ase2sprkkr.asr.phonons.result property)": [[338, "ase2sprkkr.asr.phonons.Result.dynamic_stability_phonons"]], "formats (ase2sprkkr.asr.phonons.result attribute)": [[338, "ase2sprkkr.asr.phonons.Result.formats"]], "interp_freqs_kl (ase2sprkkr.asr.phonons.result property)": [[338, "ase2sprkkr.asr.phonons.Result.interp_freqs_kl"]], "key_descriptions (ase2sprkkr.asr.phonons.result attribute)": [[338, "ase2sprkkr.asr.phonons.Result.key_descriptions"]], "minhessianeig (ase2sprkkr.asr.phonons.result property)": [[338, "ase2sprkkr.asr.phonons.Result.minhessianeig"]], "modes_kl (ase2sprkkr.asr.phonons.result property)": [[338, "ase2sprkkr.asr.phonons.Result.modes_kl"]], "omega_kl (ase2sprkkr.asr.phonons.result property)": [[338, "ase2sprkkr.asr.phonons.Result.omega_kl"]], "path (ase2sprkkr.asr.phonons.result property)": [[338, "ase2sprkkr.asr.phonons.Result.path"]], "q_qc (ase2sprkkr.asr.phonons.result property)": [[338, "ase2sprkkr.asr.phonons.Result.q_qc"]], "strict (ase2sprkkr.asr.phonons.result attribute)": [[338, "ase2sprkkr.asr.phonons.Result.strict"]], "creates() (in module ase2sprkkr.asr.phonons)": [[339, "ase2sprkkr.asr.phonons.creates"]], "mingocorrection() (in module ase2sprkkr.asr.phonons)": [[340, "ase2sprkkr.asr.phonons.mingocorrection"]], "plot_bandstructure() (in module ase2sprkkr.asr.phonons)": [[341, "ase2sprkkr.asr.phonons.plot_bandstructure"]], "plot_phonons() (in module ase2sprkkr.asr.phonons)": [[342, "ase2sprkkr.asr.phonons.plot_phonons"]], "requires() (in module ase2sprkkr.asr.phonons)": [[343, "ase2sprkkr.asr.phonons.requires"]], "todict() (in module ase2sprkkr.asr.phonons)": [[344, "ase2sprkkr.asr.phonons.todict"]], "topckl() (in module ase2sprkkr.asr.phonons)": [[345, "ase2sprkkr.asr.phonons.topckl"]], "webpanel() (in module ase2sprkkr.asr.phonons)": [[346, "ase2sprkkr.asr.phonons.webpanel"]], "ase2sprkkr.asr.phonopy": [[347, "module-ase2sprkkr.asr.phonopy"]], "result (class in ase2sprkkr.asr.phonopy)": [[348, "ase2sprkkr.asr.phonopy.Result"]], "__init__() (ase2sprkkr.asr.phonopy.result method)": [[348, "ase2sprkkr.asr.phonopy.Result.__init__"]], "_known_data_keys (ase2sprkkr.asr.phonopy.result attribute)": [[348, "ase2sprkkr.asr.phonopy.Result._known_data_keys"]], "dynamic_stability_level (ase2sprkkr.asr.phonopy.result property)": [[348, "ase2sprkkr.asr.phonopy.Result.dynamic_stability_level"]], "eigs_kl (ase2sprkkr.asr.phonopy.result property)": [[348, "ase2sprkkr.asr.phonopy.Result.eigs_kl"]], "formats (ase2sprkkr.asr.phonopy.result attribute)": [[348, "ase2sprkkr.asr.phonopy.Result.formats"]], "irr_l (ase2sprkkr.asr.phonopy.result property)": [[348, "ase2sprkkr.asr.phonopy.Result.irr_l"]], "key_descriptions (ase2sprkkr.asr.phonopy.result attribute)": [[348, "ase2sprkkr.asr.phonopy.Result.key_descriptions"]], "minhessianeig (ase2sprkkr.asr.phonopy.result property)": [[348, "ase2sprkkr.asr.phonopy.Result.minhessianeig"]], "omega_kl (ase2sprkkr.asr.phonopy.result property)": [[348, "ase2sprkkr.asr.phonopy.Result.omega_kl"]], "path (ase2sprkkr.asr.phonopy.result property)": [[348, "ase2sprkkr.asr.phonopy.Result.path"]], "phi_anv (ase2sprkkr.asr.phonopy.result property)": [[348, "ase2sprkkr.asr.phonopy.Result.phi_anv"]], "q_qc (ase2sprkkr.asr.phonopy.result property)": [[348, "ase2sprkkr.asr.phonopy.Result.q_qc"]], "strict (ase2sprkkr.asr.phonopy.result attribute)": [[348, "ase2sprkkr.asr.phonopy.Result.strict"]], "u_klav (ase2sprkkr.asr.phonopy.result property)": [[348, "ase2sprkkr.asr.phonopy.Result.u_klav"]], "distance_to_sc() (in module ase2sprkkr.asr.phonopy)": [[349, "ase2sprkkr.asr.phonopy.distance_to_sc"]], "lattice_vectors() (in module ase2sprkkr.asr.phonopy)": [[350, "ase2sprkkr.asr.phonopy.lattice_vectors"]], "plot_bandstructure() (in module ase2sprkkr.asr.phonopy)": [[351, "ase2sprkkr.asr.phonopy.plot_bandstructure"]], "plot_phonons() (in module ase2sprkkr.asr.phonopy)": [[352, "ase2sprkkr.asr.phonopy.plot_phonons"]], "requires() (in module ase2sprkkr.asr.phonopy)": [[353, "ase2sprkkr.asr.phonopy.requires"]], "webpanel() (in module ase2sprkkr.asr.phonopy)": [[354, "ase2sprkkr.asr.phonopy.webpanel"]], "ase2sprkkr.asr.piezoelectrictensor": [[355, "module-ase2sprkkr.asr.piezoelectrictensor"]], "result (class in ase2sprkkr.asr.piezoelectrictensor)": [[356, "ase2sprkkr.asr.piezoelectrictensor.Result"]], "__init__() (ase2sprkkr.asr.piezoelectrictensor.result method)": [[356, "ase2sprkkr.asr.piezoelectrictensor.Result.__init__"]], "_known_data_keys (ase2sprkkr.asr.piezoelectrictensor.result attribute)": [[356, "ase2sprkkr.asr.piezoelectrictensor.Result._known_data_keys"]], "eps_clamped_vvv (ase2sprkkr.asr.piezoelectrictensor.result property)": [[356, "ase2sprkkr.asr.piezoelectrictensor.Result.eps_clamped_vvv"]], "eps_vvv (ase2sprkkr.asr.piezoelectrictensor.result property)": [[356, "ase2sprkkr.asr.piezoelectrictensor.Result.eps_vvv"]], "formats (ase2sprkkr.asr.piezoelectrictensor.result attribute)": [[356, "ase2sprkkr.asr.piezoelectrictensor.Result.formats"]], "key_descriptions (ase2sprkkr.asr.piezoelectrictensor.result attribute)": [[356, "ase2sprkkr.asr.piezoelectrictensor.Result.key_descriptions"]], "strict (ase2sprkkr.asr.piezoelectrictensor.result attribute)": [[356, "ase2sprkkr.asr.piezoelectrictensor.Result.strict"]], "webpanel() (in module ase2sprkkr.asr.piezoelectrictensor)": [[357, "ase2sprkkr.asr.piezoelectrictensor.webpanel"]], "ase2sprkkr.asr.plasmafrequency": [[358, "module-ase2sprkkr.asr.plasmafrequency"]], "result (class in ase2sprkkr.asr.plasmafrequency)": [[359, "ase2sprkkr.asr.plasmafrequency.Result"]], "__init__() (ase2sprkkr.asr.plasmafrequency.result method)": [[359, "ase2sprkkr.asr.plasmafrequency.Result.__init__"]], "_known_data_keys (ase2sprkkr.asr.plasmafrequency.result attribute)": [[359, "ase2sprkkr.asr.plasmafrequency.Result._known_data_keys"]], "formats (ase2sprkkr.asr.plasmafrequency.result attribute)": [[359, "ase2sprkkr.asr.plasmafrequency.Result.formats"]], "key_descriptions (ase2sprkkr.asr.plasmafrequency.result attribute)": [[359, "ase2sprkkr.asr.plasmafrequency.Result.key_descriptions"]], "plasmafreq_vv (ase2sprkkr.asr.plasmafrequency.result property)": [[359, "ase2sprkkr.asr.plasmafrequency.Result.plasmafreq_vv"]], "plasmafrequency_x (ase2sprkkr.asr.plasmafrequency.result property)": [[359, "ase2sprkkr.asr.plasmafrequency.Result.plasmafrequency_x"]], "plasmafrequency_y (ase2sprkkr.asr.plasmafrequency.result property)": [[359, "ase2sprkkr.asr.plasmafrequency.Result.plasmafrequency_y"]], "strict (ase2sprkkr.asr.plasmafrequency.result attribute)": [[359, "ase2sprkkr.asr.plasmafrequency.Result.strict"]], "get_kpts_size() (in module ase2sprkkr.asr.plasmafrequency)": [[360, "ase2sprkkr.asr.plasmafrequency.get_kpts_size"]], "webpanel() (in module ase2sprkkr.asr.plasmafrequency)": [[361, "ase2sprkkr.asr.plasmafrequency.webpanel"]], "ase2sprkkr.asr.polarizability": [[362, "module-ase2sprkkr.asr.polarizability"]], "result (class in ase2sprkkr.asr.polarizability)": [[363, "ase2sprkkr.asr.polarizability.Result"]], "__init__() (ase2sprkkr.asr.polarizability.result method)": [[363, "ase2sprkkr.asr.polarizability.Result.__init__"]], "_known_data_keys (ase2sprkkr.asr.polarizability.result attribute)": [[363, "ase2sprkkr.asr.polarizability.Result._known_data_keys"]], "alpha0x_w (ase2sprkkr.asr.polarizability.result property)": [[363, "ase2sprkkr.asr.polarizability.Result.alpha0x_w"]], "alpha0y_w (ase2sprkkr.asr.polarizability.result property)": [[363, "ase2sprkkr.asr.polarizability.Result.alpha0y_w"]], "alpha0z_w (ase2sprkkr.asr.polarizability.result property)": [[363, "ase2sprkkr.asr.polarizability.Result.alpha0z_w"]], "alphax_el (ase2sprkkr.asr.polarizability.result property)": [[363, "ase2sprkkr.asr.polarizability.Result.alphax_el"]], "alphax_w (ase2sprkkr.asr.polarizability.result property)": [[363, "ase2sprkkr.asr.polarizability.Result.alphax_w"]], "alphay_el (ase2sprkkr.asr.polarizability.result property)": [[363, "ase2sprkkr.asr.polarizability.Result.alphay_el"]], "alphay_w (ase2sprkkr.asr.polarizability.result property)": [[363, "ase2sprkkr.asr.polarizability.Result.alphay_w"]], "alphaz_el (ase2sprkkr.asr.polarizability.result property)": [[363, "ase2sprkkr.asr.polarizability.Result.alphaz_el"]], "alphaz_w (ase2sprkkr.asr.polarizability.result property)": [[363, "ase2sprkkr.asr.polarizability.Result.alphaz_w"]], "formats (ase2sprkkr.asr.polarizability.result attribute)": [[363, "ase2sprkkr.asr.polarizability.Result.formats"]], "frequencies (ase2sprkkr.asr.polarizability.result property)": [[363, "ase2sprkkr.asr.polarizability.Result.frequencies"]], "key_descriptions (ase2sprkkr.asr.polarizability.result attribute)": [[363, "ase2sprkkr.asr.polarizability.Result.key_descriptions"]], "plasmafreq_vv (ase2sprkkr.asr.polarizability.result property)": [[363, "ase2sprkkr.asr.polarizability.Result.plasmafreq_vv"]], "strict (ase2sprkkr.asr.polarizability.result attribute)": [[363, "ase2sprkkr.asr.polarizability.Result.strict"]], "get_kpts_size() (in module ase2sprkkr.asr.polarizability)": [[364, "ase2sprkkr.asr.polarizability.get_kpts_size"]], "polarizability() (in module ase2sprkkr.asr.polarizability)": [[365, "ase2sprkkr.asr.polarizability.polarizability"]], "webpanel() (in module ase2sprkkr.asr.polarizability)": [[366, "ase2sprkkr.asr.polarizability.webpanel"]], "ase2sprkkr.asr.projected_bandstructure": [[367, "module-ase2sprkkr.asr.projected_bandstructure"]], "result (class in ase2sprkkr.asr.projected_bandstructure)": [[368, "ase2sprkkr.asr.projected_bandstructure.Result"]], "__init__() (ase2sprkkr.asr.projected_bandstructure.result method)": [[368, "ase2sprkkr.asr.projected_bandstructure.Result.__init__"]], "_known_data_keys (ase2sprkkr.asr.projected_bandstructure.result attribute)": [[368, "ase2sprkkr.asr.projected_bandstructure.Result._known_data_keys"]], "formats (ase2sprkkr.asr.projected_bandstructure.result attribute)": [[368, "ase2sprkkr.asr.projected_bandstructure.Result.formats"]], "key_descriptions (ase2sprkkr.asr.projected_bandstructure.result attribute)": [[368, "ase2sprkkr.asr.projected_bandstructure.Result.key_descriptions"]], "strict (ase2sprkkr.asr.projected_bandstructure.result attribute)": [[368, "ase2sprkkr.asr.projected_bandstructure.Result.strict"]], "symbols (ase2sprkkr.asr.projected_bandstructure.result property)": [[368, "ase2sprkkr.asr.projected_bandstructure.Result.symbols"]], "weight_skni (ase2sprkkr.asr.projected_bandstructure.result property)": [[368, "ase2sprkkr.asr.projected_bandstructure.Result.weight_skni"]], "yl_i (ase2sprkkr.asr.projected_bandstructure.result property)": [[368, "ase2sprkkr.asr.projected_bandstructure.Result.yl_i"]], "get_bs_sampling() (in module ase2sprkkr.asr.projected_bandstructure)": [[369, "ase2sprkkr.asr.projected_bandstructure.get_bs_sampling"]], "get_orbital_ldos() (in module ase2sprkkr.asr.projected_bandstructure)": [[370, "ase2sprkkr.asr.projected_bandstructure.get_orbital_ldos"]], "get_pie_markers() (in module ase2sprkkr.asr.projected_bandstructure)": [[371, "ase2sprkkr.asr.projected_bandstructure.get_pie_markers"]], "get_pie_slice() (in module ase2sprkkr.asr.projected_bandstructure)": [[372, "ase2sprkkr.asr.projected_bandstructure.get_pie_slice"]], "get_yl_ordering() (in module ase2sprkkr.asr.projected_bandstructure)": [[373, "ase2sprkkr.asr.projected_bandstructure.get_yl_ordering"]], "projected_bs_pbe() (in module ase2sprkkr.asr.projected_bandstructure)": [[374, "ase2sprkkr.asr.projected_bandstructure.projected_bs_pbe"]], "webpanel() (in module ase2sprkkr.asr.projected_bandstructure)": [[375, "ase2sprkkr.asr.projected_bandstructure.webpanel"]], "ase2sprkkr.asr.push": [[376, "module-ase2sprkkr.asr.push"]], "ase2sprkkr.asr.raman": [[377, "module-ase2sprkkr.asr.raman"]], "result (class in ase2sprkkr.asr.raman)": [[378, "ase2sprkkr.asr.raman.Result"]], "__init__() (ase2sprkkr.asr.raman.result method)": [[378, "ase2sprkkr.asr.raman.Result.__init__"]], "_known_data_keys (ase2sprkkr.asr.raman.result attribute)": [[378, "ase2sprkkr.asr.raman.Result._known_data_keys"]], "formats (ase2sprkkr.asr.raman.result attribute)": [[378, "ase2sprkkr.asr.raman.Result.formats"]], "strict (ase2sprkkr.asr.raman.result attribute)": [[378, "ase2sprkkr.asr.raman.Result.strict"]], "count_deg() (in module ase2sprkkr.asr.raman)": [[379, "ase2sprkkr.asr.raman.count_deg"]], "raman() (in module ase2sprkkr.asr.raman)": [[380, "ase2sprkkr.asr.raman.raman"]], "webpanel() (in module ase2sprkkr.asr.raman)": [[381, "ase2sprkkr.asr.raman.webpanel"]], "ase2sprkkr.asr.relax": [[382, "module-ase2sprkkr.asr.relax"]], "brokensymmetryerror": [[383, "ase2sprkkr.asr.relax.BrokenSymmetryError"]], "result (class in ase2sprkkr.asr.relax)": [[384, "ase2sprkkr.asr.relax.Result"]], "__init__() (ase2sprkkr.asr.relax.result method)": [[384, "ase2sprkkr.asr.relax.Result.__init__"]], "_known_data_keys (ase2sprkkr.asr.relax.result attribute)": [[384, "ase2sprkkr.asr.relax.Result._known_data_keys"]], "a (ase2sprkkr.asr.relax.result property)": [[384, "ase2sprkkr.asr.relax.Result.a"]], "alpha (ase2sprkkr.asr.relax.result property)": [[384, "ase2sprkkr.asr.relax.Result.alpha"]], "atoms (ase2sprkkr.asr.relax.result property)": [[384, "ase2sprkkr.asr.relax.Result.atoms"]], "b (ase2sprkkr.asr.relax.result property)": [[384, "ase2sprkkr.asr.relax.Result.b"]], "beta (ase2sprkkr.asr.relax.result property)": [[384, "ase2sprkkr.asr.relax.Result.beta"]], "c (ase2sprkkr.asr.relax.result property)": [[384, "ase2sprkkr.asr.relax.Result.c"]], "edft (ase2sprkkr.asr.relax.result property)": [[384, "ase2sprkkr.asr.relax.Result.edft"]], "etot (ase2sprkkr.asr.relax.result property)": [[384, "ase2sprkkr.asr.relax.Result.etot"]], "gamma (ase2sprkkr.asr.relax.result property)": [[384, "ase2sprkkr.asr.relax.Result.gamma"]], "images (ase2sprkkr.asr.relax.result property)": [[384, "ase2sprkkr.asr.relax.Result.images"]], "key_descriptions (ase2sprkkr.asr.relax.result attribute)": [[384, "ase2sprkkr.asr.relax.Result.key_descriptions"]], "spos (ase2sprkkr.asr.relax.result property)": [[384, "ase2sprkkr.asr.relax.Result.spos"]], "strict (ase2sprkkr.asr.relax.result attribute)": [[384, "ase2sprkkr.asr.relax.Result.strict"]], "symbols (ase2sprkkr.asr.relax.result property)": [[384, "ase2sprkkr.asr.relax.Result.symbols"]], "version (ase2sprkkr.asr.relax.result attribute)": [[384, "ase2sprkkr.asr.relax.Result.version"]], "spgatoms (class in ase2sprkkr.asr.relax)": [[385, "ase2sprkkr.asr.relax.SpgAtoms"]], "__init__() (ase2sprkkr.asr.relax.spgatoms method)": [[385, "ase2sprkkr.asr.relax.SpgAtoms.__init__"]], "from_atoms() (ase2sprkkr.asr.relax.spgatoms class method)": [[385, "ase2sprkkr.asr.relax.SpgAtoms.from_atoms"]], "get_forces() (ase2sprkkr.asr.relax.spgatoms method)": [[385, "ase2sprkkr.asr.relax.SpgAtoms.get_forces"]], "get_stress() (ase2sprkkr.asr.relax.spgatoms method)": [[385, "ase2sprkkr.asr.relax.SpgAtoms.get_stress"]], "set_symmetries() (ase2sprkkr.asr.relax.spgatoms method)": [[385, "ase2sprkkr.asr.relax.SpgAtoms.set_symmetries"]], "is_relax_done() (in module ase2sprkkr.asr.relax)": [[386, "ase2sprkkr.asr.relax.is_relax_done"]], "__init__() (ase2sprkkr.asr.relax.mybfgs method)": [[387, "ase2sprkkr.asr.relax.myBFGS.__init__"]], "log() (ase2sprkkr.asr.relax.mybfgs method)": [[387, "ase2sprkkr.asr.relax.myBFGS.log"]], "mybfgs (class in ase2sprkkr.asr.relax)": [[387, "ase2sprkkr.asr.relax.myBFGS"]], "relax() (in module ase2sprkkr.asr.relax)": [[388, "ase2sprkkr.asr.relax.relax"]], "set_initial_magnetic_moments() (in module ase2sprkkr.asr.relax)": [[389, "ase2sprkkr.asr.relax.set_initial_magnetic_moments"]], "ase2sprkkr.asr.setinfo": [[390, "module-ase2sprkkr.asr.setinfo"]], "keyvaluepair (class in ase2sprkkr.asr.setinfo)": [[391, "ase2sprkkr.asr.setinfo.KeyValuePair"]], "__init__() (ase2sprkkr.asr.setinfo.keyvaluepair method)": [[391, "ase2sprkkr.asr.setinfo.KeyValuePair.__init__"]], "convert() (ase2sprkkr.asr.setinfo.keyvaluepair method)": [[391, "ase2sprkkr.asr.setinfo.KeyValuePair.convert"]], "check_key_value() (in module ase2sprkkr.asr.setinfo)": [[392, "ase2sprkkr.asr.setinfo.check_key_value"]], "ase2sprkkr.asr.setup": [[393, "module-ase2sprkkr.asr.setup"]], "ase2sprkkr.asr.setup.decorate": [[394, "module-ase2sprkkr.asr.setup.decorate"]], "apply_substitution() (in module ase2sprkkr.asr.setup.decorate)": [[395, "ase2sprkkr.asr.setup.decorate.apply_substitution"]], "find_substitutions() (in module ase2sprkkr.asr.setup.decorate)": [[396, "ase2sprkkr.asr.setup.decorate.find_substitutions"]], "generate_structures() (in module ase2sprkkr.asr.setup.decorate)": [[397, "ase2sprkkr.asr.setup.decorate.generate_structures"]], "get_p_ab() (in module ase2sprkkr.asr.setup.decorate)": [[398, "ase2sprkkr.asr.setup.decorate.get_p_ab"]], "ase2sprkkr.asr.setup.defects": [[399, "module-ase2sprkkr.asr.setup.defects"]], "collect_data() (in module ase2sprkkr.asr.setup.defects)": [[400, "ase2sprkkr.asr.setup.defects.collect_data"]], "create_folder_structure() (in module ase2sprkkr.asr.setup.defects)": [[401, "ase2sprkkr.asr.setup.defects.create_folder_structure"]], "setup_defects() (in module ase2sprkkr.asr.setup.defects)": [[402, "ase2sprkkr.asr.setup.defects.setup_defects"]], "setup_supercell() (in module ase2sprkkr.asr.setup.defects)": [[403, "ase2sprkkr.asr.setup.defects.setup_supercell"]], "ase2sprkkr.asr.setup.displacements": [[404, "module-ase2sprkkr.asr.setup.displacements"]], "create_displacements_folder() (in module ase2sprkkr.asr.setup.displacements)": [[405, "ase2sprkkr.asr.setup.displacements.create_displacements_folder"]], "displace_atom() (in module ase2sprkkr.asr.setup.displacements)": [[406, "ase2sprkkr.asr.setup.displacements.displace_atom"]], "get_all_displacements() (in module ase2sprkkr.asr.setup.displacements)": [[407, "ase2sprkkr.asr.setup.displacements.get_all_displacements"]], "get_displacement_folder() (in module ase2sprkkr.asr.setup.displacements)": [[408, "ase2sprkkr.asr.setup.displacements.get_displacement_folder"]], "ase2sprkkr.asr.setup.magnetize": [[409, "module-ase2sprkkr.asr.setup.magnetize"]], "ase2sprkkr.asr.setup.materials": [[410, "module-ase2sprkkr.asr.setup.materials"]], "ase2sprkkr.asr.setup.params": [[411, "module-ase2sprkkr.asr.setup.params"]], "ase2sprkkr.asr.setup.scanparams": [[412, "module-ase2sprkkr.asr.setup.scanparams"]], "ase2sprkkr.asr.setup.strains": [[413, "module-ase2sprkkr.asr.setup.strains"]], "get_relevant_strains() (in module ase2sprkkr.asr.setup.strains)": [[414, "ase2sprkkr.asr.setup.strains.get_relevant_strains"]], "get_strained_folder_name() (in module ase2sprkkr.asr.setup.strains)": [[415, "ase2sprkkr.asr.setup.strains.get_strained_folder_name"]], "setup_strains() (in module ase2sprkkr.asr.setup.strains)": [[416, "ase2sprkkr.asr.setup.strains.setup_strains"]], "ase2sprkkr.asr.setup.symmetrize": [[417, "module-ase2sprkkr.asr.setup.symmetrize"]], "symmetrize_atoms() (in module ase2sprkkr.asr.setup.symmetrize)": [[418, "ase2sprkkr.asr.setup.symmetrize.symmetrize_atoms"]], "ase2sprkkr.asr.stiffness": [[419, "module-ase2sprkkr.asr.stiffness"]], "result (class in ase2sprkkr.asr.stiffness)": [[420, "ase2sprkkr.asr.stiffness.Result"]], "__init__() (ase2sprkkr.asr.stiffness.result method)": [[420, "ase2sprkkr.asr.stiffness.Result.__init__"]], "_known_data_keys (ase2sprkkr.asr.stiffness.result attribute)": [[420, "ase2sprkkr.asr.stiffness.Result._known_data_keys"]], "c_11 (ase2sprkkr.asr.stiffness.result property)": [[420, "ase2sprkkr.asr.stiffness.Result.c_11"]], "c_12 (ase2sprkkr.asr.stiffness.result property)": [[420, "ase2sprkkr.asr.stiffness.Result.c_12"]], "c_13 (ase2sprkkr.asr.stiffness.result property)": [[420, "ase2sprkkr.asr.stiffness.Result.c_13"]], "c_14 (ase2sprkkr.asr.stiffness.result property)": [[420, "ase2sprkkr.asr.stiffness.Result.c_14"]], "c_15 (ase2sprkkr.asr.stiffness.result property)": [[420, "ase2sprkkr.asr.stiffness.Result.c_15"]], "c_16 (ase2sprkkr.asr.stiffness.result property)": [[420, "ase2sprkkr.asr.stiffness.Result.c_16"]], "c_21 (ase2sprkkr.asr.stiffness.result property)": [[420, "ase2sprkkr.asr.stiffness.Result.c_21"]], "c_22 (ase2sprkkr.asr.stiffness.result property)": [[420, "ase2sprkkr.asr.stiffness.Result.c_22"]], "c_23 (ase2sprkkr.asr.stiffness.result property)": [[420, "ase2sprkkr.asr.stiffness.Result.c_23"]], "c_24 (ase2sprkkr.asr.stiffness.result property)": [[420, "ase2sprkkr.asr.stiffness.Result.c_24"]], "c_25 (ase2sprkkr.asr.stiffness.result property)": [[420, "ase2sprkkr.asr.stiffness.Result.c_25"]], "c_26 (ase2sprkkr.asr.stiffness.result property)": [[420, "ase2sprkkr.asr.stiffness.Result.c_26"]], "c_31 (ase2sprkkr.asr.stiffness.result property)": [[420, "ase2sprkkr.asr.stiffness.Result.c_31"]], "c_32 (ase2sprkkr.asr.stiffness.result property)": [[420, "ase2sprkkr.asr.stiffness.Result.c_32"]], "c_33 (ase2sprkkr.asr.stiffness.result property)": [[420, "ase2sprkkr.asr.stiffness.Result.c_33"]], "c_34 (ase2sprkkr.asr.stiffness.result property)": [[420, "ase2sprkkr.asr.stiffness.Result.c_34"]], "c_35 (ase2sprkkr.asr.stiffness.result property)": [[420, "ase2sprkkr.asr.stiffness.Result.c_35"]], "c_36 (ase2sprkkr.asr.stiffness.result property)": [[420, "ase2sprkkr.asr.stiffness.Result.c_36"]], "c_41 (ase2sprkkr.asr.stiffness.result property)": [[420, "ase2sprkkr.asr.stiffness.Result.c_41"]], "c_42 (ase2sprkkr.asr.stiffness.result property)": [[420, "ase2sprkkr.asr.stiffness.Result.c_42"]], "c_43 (ase2sprkkr.asr.stiffness.result property)": [[420, "ase2sprkkr.asr.stiffness.Result.c_43"]], "c_44 (ase2sprkkr.asr.stiffness.result property)": [[420, "ase2sprkkr.asr.stiffness.Result.c_44"]], "c_45 (ase2sprkkr.asr.stiffness.result property)": [[420, "ase2sprkkr.asr.stiffness.Result.c_45"]], "c_46 (ase2sprkkr.asr.stiffness.result property)": [[420, "ase2sprkkr.asr.stiffness.Result.c_46"]], "c_51 (ase2sprkkr.asr.stiffness.result property)": [[420, "ase2sprkkr.asr.stiffness.Result.c_51"]], "c_52 (ase2sprkkr.asr.stiffness.result property)": [[420, "ase2sprkkr.asr.stiffness.Result.c_52"]], "c_53 (ase2sprkkr.asr.stiffness.result property)": [[420, "ase2sprkkr.asr.stiffness.Result.c_53"]], "c_54 (ase2sprkkr.asr.stiffness.result property)": [[420, "ase2sprkkr.asr.stiffness.Result.c_54"]], "c_55 (ase2sprkkr.asr.stiffness.result property)": [[420, "ase2sprkkr.asr.stiffness.Result.c_55"]], "c_56 (ase2sprkkr.asr.stiffness.result property)": [[420, "ase2sprkkr.asr.stiffness.Result.c_56"]], "c_61 (ase2sprkkr.asr.stiffness.result property)": [[420, "ase2sprkkr.asr.stiffness.Result.c_61"]], "c_62 (ase2sprkkr.asr.stiffness.result property)": [[420, "ase2sprkkr.asr.stiffness.Result.c_62"]], "c_63 (ase2sprkkr.asr.stiffness.result property)": [[420, "ase2sprkkr.asr.stiffness.Result.c_63"]], "c_64 (ase2sprkkr.asr.stiffness.result property)": [[420, "ase2sprkkr.asr.stiffness.Result.c_64"]], "c_65 (ase2sprkkr.asr.stiffness.result property)": [[420, "ase2sprkkr.asr.stiffness.Result.c_65"]], "c_66 (ase2sprkkr.asr.stiffness.result property)": [[420, "ase2sprkkr.asr.stiffness.Result.c_66"]], "dynamic_stability_stiffness (ase2sprkkr.asr.stiffness.result property)": [[420, "ase2sprkkr.asr.stiffness.Result.dynamic_stability_stiffness"]], "eigenvalues (ase2sprkkr.asr.stiffness.result property)": [[420, "ase2sprkkr.asr.stiffness.Result.eigenvalues"]], "formats (ase2sprkkr.asr.stiffness.result attribute)": [[420, "ase2sprkkr.asr.stiffness.Result.formats"]], "key_descriptions (ase2sprkkr.asr.stiffness.result attribute)": [[420, "ase2sprkkr.asr.stiffness.Result.key_descriptions"]], "speed_of_sound_x (ase2sprkkr.asr.stiffness.result property)": [[420, "ase2sprkkr.asr.stiffness.Result.speed_of_sound_x"]], "speed_of_sound_y (ase2sprkkr.asr.stiffness.result property)": [[420, "ase2sprkkr.asr.stiffness.Result.speed_of_sound_y"]], "stiffness_tensor (ase2sprkkr.asr.stiffness.result property)": [[420, "ase2sprkkr.asr.stiffness.Result.stiffness_tensor"]], "strict (ase2sprkkr.asr.stiffness.result attribute)": [[420, "ase2sprkkr.asr.stiffness.Result.strict"]], "webpanel() (in module ase2sprkkr.asr.stiffness)": [[421, "ase2sprkkr.asr.stiffness.webpanel"]], "ase2sprkkr.asr.structureinfo": [[422, "module-ase2sprkkr.asr.structureinfo"]], "result (class in ase2sprkkr.asr.structureinfo)": [[423, "ase2sprkkr.asr.structureinfo.Result"]], "__init__() (ase2sprkkr.asr.structureinfo.result method)": [[423, "ase2sprkkr.asr.structureinfo.Result.__init__"]], "_known_data_keys (ase2sprkkr.asr.structureinfo.result attribute)": [[423, "ase2sprkkr.asr.structureinfo.Result._known_data_keys"]], "cell_area (ase2sprkkr.asr.structureinfo.result property)": [[423, "ase2sprkkr.asr.structureinfo.Result.cell_area"]], "crystal_prototype (ase2sprkkr.asr.structureinfo.result property)": [[423, "ase2sprkkr.asr.structureinfo.Result.crystal_prototype"]], "formats (ase2sprkkr.asr.structureinfo.result attribute)": [[423, "ase2sprkkr.asr.structureinfo.Result.formats"]], "formula (ase2sprkkr.asr.structureinfo.result property)": [[423, "ase2sprkkr.asr.structureinfo.Result.formula"]], "has_inversion_symmetry (ase2sprkkr.asr.structureinfo.result property)": [[423, "ase2sprkkr.asr.structureinfo.Result.has_inversion_symmetry"]], "key_descriptions (ase2sprkkr.asr.structureinfo.result attribute)": [[423, "ase2sprkkr.asr.structureinfo.Result.key_descriptions"]], "pointgroup (ase2sprkkr.asr.structureinfo.result property)": [[423, "ase2sprkkr.asr.structureinfo.Result.pointgroup"]], "spacegroup (ase2sprkkr.asr.structureinfo.result property)": [[423, "ase2sprkkr.asr.structureinfo.Result.spacegroup"]], "spglib_dataset (ase2sprkkr.asr.structureinfo.result property)": [[423, "ase2sprkkr.asr.structureinfo.Result.spglib_dataset"]], "spgnum (ase2sprkkr.asr.structureinfo.result property)": [[423, "ase2sprkkr.asr.structureinfo.Result.spgnum"]], "stoichiometry (ase2sprkkr.asr.structureinfo.result property)": [[423, "ase2sprkkr.asr.structureinfo.Result.stoichiometry"]], "strict (ase2sprkkr.asr.structureinfo.result attribute)": [[423, "ase2sprkkr.asr.structureinfo.Result.strict"]], "get_reduced_formula() (in module ase2sprkkr.asr.structureinfo)": [[424, "ase2sprkkr.asr.structureinfo.get_reduced_formula"]], "webpanel() (in module ase2sprkkr.asr.structureinfo)": [[425, "ase2sprkkr.asr.structureinfo.webpanel"]], "ase2sprkkr.asr.test": [[426, "module-ase2sprkkr.asr.test"]], "ase2sprkkr.asr.test.acceptance": [[427, "module-ase2sprkkr.asr.test.acceptance"]], "ase2sprkkr.asr.test.acceptance.test_borncharges": [[428, "module-ase2sprkkr.asr.test.acceptance.test_borncharges"]], "test_gpaw_berry_get_berry_phases_integration() (in module ase2sprkkr.asr.test.acceptance.test_borncharges)": [[429, "ase2sprkkr.asr.test.acceptance.test_borncharges.test_gpaw_berry_get_berry_phases_integration"]], "ase2sprkkr.asr.test.acceptance.test_piezoelectrictensor": [[430, "module-ase2sprkkr.asr.test.acceptance.test_piezoelectrictensor"]], "test_piezo_bn() (in module ase2sprkkr.asr.test.acceptance.test_piezoelectrictensor)": [[431, "ase2sprkkr.asr.test.acceptance.test_piezoelectrictensor.test_piezo_BN"]], "ase2sprkkr.asr.test.acceptance.test_relax": [[432, "module-ase2sprkkr.asr.test.acceptance.test_relax"]], "test_relax_fe_gpaw() (in module ase2sprkkr.asr.test.acceptance.test_relax)": [[433, "ase2sprkkr.asr.test.acceptance.test_relax.test_relax_fe_gpaw"]], "ase2sprkkr.asr.test.conftest": [[434, "module-ase2sprkkr.asr.test.conftest"]], "pytest_configure() (in module ase2sprkkr.asr.test.conftest)": [[435, "ase2sprkkr.asr.test.conftest.pytest_configure"]], "pytest_sessionstart() (in module ase2sprkkr.asr.test.conftest)": [[436, "ase2sprkkr.asr.test.conftest.pytest_sessionstart"]], "ase2sprkkr.asr.test.fixtures": [[437, "module-ase2sprkkr.asr.test.fixtures"]], "_get_webcontent() (in module ase2sprkkr.asr.test.fixtures)": [[438, "ase2sprkkr.asr.test.fixtures._get_webcontent"]], "asr_tmpdir() (in module ase2sprkkr.asr.test.fixtures)": [[439, "ase2sprkkr.asr.test.fixtures.asr_tmpdir"]], "asr_tmpdir_w_params() (in module ase2sprkkr.asr.test.fixtures)": [[440, "ase2sprkkr.asr.test.fixtures.asr_tmpdir_w_params"]], "duplicates_test_db() (in module ase2sprkkr.asr.test.fixtures)": [[441, "ase2sprkkr.asr.test.fixtures.duplicates_test_db"]], "get_webcontent() (in module ase2sprkkr.asr.test.fixtures)": [[442, "ase2sprkkr.asr.test.fixtures.get_webcontent"]], "mockgpaw() (in module ase2sprkkr.asr.test.fixtures)": [[443, "ase2sprkkr.asr.test.fixtures.mockgpaw"]], "set_asr_test_environ_variable() (in module ase2sprkkr.asr.test.fixtures)": [[444, "ase2sprkkr.asr.test.fixtures.set_asr_test_environ_variable"]], "test_material() (in module ase2sprkkr.asr.test.fixtures)": [[445, "ase2sprkkr.asr.test.fixtures.test_material"]], "ase2sprkkr.asr.test.materials": [[446, "module-ase2sprkkr.asr.test.materials"]], "ase2sprkkr.asr.test.mocks": [[447, "module-ase2sprkkr.asr.test.mocks"]], "ase2sprkkr.asr.test.mocks.gpaw": [[448, "module-ase2sprkkr.asr.test.mocks.gpaw"]], "ase2sprkkr.asr.test.mocks.gpaw.berryphase": [[449, "module-ase2sprkkr.asr.test.mocks.gpaw.berryphase"]], "get_berry_phases() (in module ase2sprkkr.asr.test.mocks.gpaw.berryphase)": [[450, "ase2sprkkr.asr.test.mocks.gpaw.berryphase.get_berry_phases"]], "ase2sprkkr.asr.test.mocks.gpaw.calculator": [[451, "module-ase2sprkkr.asr.test.mocks.gpaw.calculator"]], "asrcalculator (class in ase2sprkkr.asr.test.mocks.gpaw.calculator)": [[452, "ase2sprkkr.asr.test.mocks.gpaw.calculator.ASRCalculator"]], "__init__() (ase2sprkkr.asr.test.mocks.gpaw.calculator.asrcalculator method)": [[452, "ase2sprkkr.asr.test.mocks.gpaw.calculator.ASRCalculator.__init__"]], "_abc_impl (ase2sprkkr.asr.test.mocks.gpaw.calculator.asrcalculator attribute)": [[452, "ase2sprkkr.asr.test.mocks.gpaw.calculator.ASRCalculator._abc_impl"]], "_get_band_gap() (ase2sprkkr.asr.test.mocks.gpaw.calculator.asrcalculator method)": [[452, "ase2sprkkr.asr.test.mocks.gpaw.calculator.ASRCalculator._get_band_gap"]], "_get_berry_phases() (ase2sprkkr.asr.test.mocks.gpaw.calculator.asrcalculator method)": [[452, "ase2sprkkr.asr.test.mocks.gpaw.calculator.ASRCalculator._get_berry_phases"]], "_get_dipole_moment() (ase2sprkkr.asr.test.mocks.gpaw.calculator.asrcalculator method)": [[452, "ase2sprkkr.asr.test.mocks.gpaw.calculator.ASRCalculator._get_dipole_moment"]], "_get_fermi_level() (ase2sprkkr.asr.test.mocks.gpaw.calculator.asrcalculator method)": [[452, "ase2sprkkr.asr.test.mocks.gpaw.calculator.ASRCalculator._get_fermi_level"]], "_get_forces() (ase2sprkkr.asr.test.mocks.gpaw.calculator.asrcalculator method)": [[452, "ase2sprkkr.asr.test.mocks.gpaw.calculator.ASRCalculator._get_forces"]], "_get_magmom() (ase2sprkkr.asr.test.mocks.gpaw.calculator.asrcalculator method)": [[452, "ase2sprkkr.asr.test.mocks.gpaw.calculator.ASRCalculator._get_magmom"]], "_get_magmoms() (ase2sprkkr.asr.test.mocks.gpaw.calculator.asrcalculator method)": [[452, "ase2sprkkr.asr.test.mocks.gpaw.calculator.ASRCalculator._get_magmoms"]], "_get_potential_energy() (ase2sprkkr.asr.test.mocks.gpaw.calculator.asrcalculator method)": [[452, "ase2sprkkr.asr.test.mocks.gpaw.calculator.ASRCalculator._get_potential_energy"]], "_get_scaled_positions() (ase2sprkkr.asr.test.mocks.gpaw.calculator.asrcalculator method)": [[452, "ase2sprkkr.asr.test.mocks.gpaw.calculator.ASRCalculator._get_scaled_positions"]], "_get_setup() (ase2sprkkr.asr.test.mocks.gpaw.calculator.asrcalculator method)": [[452, "ase2sprkkr.asr.test.mocks.gpaw.calculator.ASRCalculator._get_setup"]], "_get_setup_fingerprint() (ase2sprkkr.asr.test.mocks.gpaw.calculator.asrcalculator method)": [[452, "ase2sprkkr.asr.test.mocks.gpaw.calculator.ASRCalculator._get_setup_fingerprint"]], "_get_setup_nvalence() (ase2sprkkr.asr.test.mocks.gpaw.calculator.asrcalculator method)": [[452, "ase2sprkkr.asr.test.mocks.gpaw.calculator.ASRCalculator._get_setup_nvalence"]], "_get_setup_symbol() (ase2sprkkr.asr.test.mocks.gpaw.calculator.asrcalculator method)": [[452, "ase2sprkkr.asr.test.mocks.gpaw.calculator.ASRCalculator._get_setup_symbol"]], "_get_setups() (ase2sprkkr.asr.test.mocks.gpaw.calculator.asrcalculator method)": [[452, "ase2sprkkr.asr.test.mocks.gpaw.calculator.ASRCalculator._get_setups"]], "_get_stress() (ase2sprkkr.asr.test.mocks.gpaw.calculator.asrcalculator method)": [[452, "ase2sprkkr.asr.test.mocks.gpaw.calculator.ASRCalculator._get_stress"]], "calculate() (ase2sprkkr.asr.test.mocks.gpaw.calculator.asrcalculator method)": [[452, "ase2sprkkr.asr.test.mocks.gpaw.calculator.ASRCalculator.calculate"]], "default_parameters (ase2sprkkr.asr.test.mocks.gpaw.calculator.asrcalculator attribute)": [[452, "ase2sprkkr.asr.test.mocks.gpaw.calculator.ASRCalculator.default_parameters"]], "diagonalize_full_hamiltonian() (ase2sprkkr.asr.test.mocks.gpaw.calculator.asrcalculator method)": [[452, "ase2sprkkr.asr.test.mocks.gpaw.calculator.ASRCalculator.diagonalize_full_hamiltonian"]], "dos() (ase2sprkkr.asr.test.mocks.gpaw.calculator.asrcalculator method)": [[452, "ase2sprkkr.asr.test.mocks.gpaw.calculator.ASRCalculator.dos"]], "fixed_density() (ase2sprkkr.asr.test.mocks.gpaw.calculator.asrcalculator method)": [[452, "ase2sprkkr.asr.test.mocks.gpaw.calculator.ASRCalculator.fixed_density"]], "get_all_eigenvalues() (ase2sprkkr.asr.test.mocks.gpaw.calculator.asrcalculator method)": [[452, "ase2sprkkr.asr.test.mocks.gpaw.calculator.ASRCalculator.get_all_eigenvalues"]], "get_bz_k_points() (ase2sprkkr.asr.test.mocks.gpaw.calculator.asrcalculator method)": [[452, "ase2sprkkr.asr.test.mocks.gpaw.calculator.ASRCalculator.get_bz_k_points"]], "get_bz_to_ibz_map() (ase2sprkkr.asr.test.mocks.gpaw.calculator.asrcalculator method)": [[452, "ase2sprkkr.asr.test.mocks.gpaw.calculator.ASRCalculator.get_bz_to_ibz_map"]], "get_eigenvalues() (ase2sprkkr.asr.test.mocks.gpaw.calculator.asrcalculator method)": [[452, "ase2sprkkr.asr.test.mocks.gpaw.calculator.ASRCalculator.get_eigenvalues"]], "get_electrostatic_potential() (ase2sprkkr.asr.test.mocks.gpaw.calculator.asrcalculator method)": [[452, "ase2sprkkr.asr.test.mocks.gpaw.calculator.ASRCalculator.get_electrostatic_potential"]], "get_fermi_level() (ase2sprkkr.asr.test.mocks.gpaw.calculator.asrcalculator method)": [[452, "ase2sprkkr.asr.test.mocks.gpaw.calculator.ASRCalculator.get_fermi_level"]], "get_ibz_k_points() (ase2sprkkr.asr.test.mocks.gpaw.calculator.asrcalculator method)": [[452, "ase2sprkkr.asr.test.mocks.gpaw.calculator.ASRCalculator.get_ibz_k_points"]], "get_k_point_weights() (ase2sprkkr.asr.test.mocks.gpaw.calculator.asrcalculator method)": [[452, "ase2sprkkr.asr.test.mocks.gpaw.calculator.ASRCalculator.get_k_point_weights"]], "get_number_of_bands() (ase2sprkkr.asr.test.mocks.gpaw.calculator.asrcalculator method)": [[452, "ase2sprkkr.asr.test.mocks.gpaw.calculator.ASRCalculator.get_number_of_bands"]], "get_number_of_conduction_electrons() (ase2sprkkr.asr.test.mocks.gpaw.calculator.asrcalculator method)": [[452, "ase2sprkkr.asr.test.mocks.gpaw.calculator.ASRCalculator.get_number_of_conduction_electrons"]], "get_number_of_electrons() (ase2sprkkr.asr.test.mocks.gpaw.calculator.asrcalculator method)": [[452, "ase2sprkkr.asr.test.mocks.gpaw.calculator.ASRCalculator.get_number_of_electrons"]], "get_number_of_spins() (ase2sprkkr.asr.test.mocks.gpaw.calculator.asrcalculator method)": [[452, "ase2sprkkr.asr.test.mocks.gpaw.calculator.ASRCalculator.get_number_of_spins"]], "get_number_of_valence_electrons() (ase2sprkkr.asr.test.mocks.gpaw.calculator.asrcalculator method)": [[452, "ase2sprkkr.asr.test.mocks.gpaw.calculator.ASRCalculator.get_number_of_valence_electrons"]], "implemented_properties (ase2sprkkr.asr.test.mocks.gpaw.calculator.asrcalculator attribute)": [[452, "ase2sprkkr.asr.test.mocks.gpaw.calculator.ASRCalculator.implemented_properties"]], "occupations (ase2sprkkr.asr.test.mocks.gpaw.calculator.asrcalculator attribute)": [[452, "ase2sprkkr.asr.test.mocks.gpaw.calculator.ASRCalculator.occupations"]], "read() (ase2sprkkr.asr.test.mocks.gpaw.calculator.asrcalculator method)": [[452, "ase2sprkkr.asr.test.mocks.gpaw.calculator.ASRCalculator.read"]], "set() (ase2sprkkr.asr.test.mocks.gpaw.calculator.asrcalculator method)": [[452, "ase2sprkkr.asr.test.mocks.gpaw.calculator.ASRCalculator.set"]], "spos_ac (ase2sprkkr.asr.test.mocks.gpaw.calculator.asrcalculator property)": [[452, "ase2sprkkr.asr.test.mocks.gpaw.calculator.ASRCalculator.spos_ac"]], "wfs (ase2sprkkr.asr.test.mocks.gpaw.calculator.asrcalculator attribute)": [[452, "ase2sprkkr.asr.test.mocks.gpaw.calculator.ASRCalculator.wfs"]], "world (ase2sprkkr.asr.test.mocks.gpaw.calculator.asrcalculator attribute)": [[452, "ase2sprkkr.asr.test.mocks.gpaw.calculator.ASRCalculator.world"]], "write() (ase2sprkkr.asr.test.mocks.gpaw.calculator.asrcalculator method)": [[452, "ase2sprkkr.asr.test.mocks.gpaw.calculator.ASRCalculator.write"]], "doscalculator (class in ase2sprkkr.asr.test.mocks.gpaw.calculator)": [[453, "ase2sprkkr.asr.test.mocks.gpaw.calculator.DOSCalculator"]], "__init__() (ase2sprkkr.asr.test.mocks.gpaw.calculator.doscalculator method)": [[453, "ase2sprkkr.asr.test.mocks.gpaw.calculator.DOSCalculator.__init__"]], "raw_dos() (ase2sprkkr.asr.test.mocks.gpaw.calculator.doscalculator method)": [[453, "ase2sprkkr.asr.test.mocks.gpaw.calculator.DOSCalculator.raw_dos"]], "raw_pdos() (ase2sprkkr.asr.test.mocks.gpaw.calculator.doscalculator method)": [[453, "ase2sprkkr.asr.test.mocks.gpaw.calculator.DOSCalculator.raw_pdos"]], "occupations (class in ase2sprkkr.asr.test.mocks.gpaw.calculator)": [[454, "ase2sprkkr.asr.test.mocks.gpaw.calculator.Occupations"]], "__init__() (ase2sprkkr.asr.test.mocks.gpaw.calculator.occupations method)": [[454, "ase2sprkkr.asr.test.mocks.gpaw.calculator.Occupations.__init__"]], "todict() (ase2sprkkr.asr.test.mocks.gpaw.calculator.occupations method)": [[454, "ase2sprkkr.asr.test.mocks.gpaw.calculator.Occupations.todict"]], "parameters (class in ase2sprkkr.asr.test.mocks.gpaw.calculator)": [[455, "ase2sprkkr.asr.test.mocks.gpaw.calculator.Parameters"]], "__init__() (ase2sprkkr.asr.test.mocks.gpaw.calculator.parameters method)": [[455, "ase2sprkkr.asr.test.mocks.gpaw.calculator.Parameters.__init__"]], "setups (class in ase2sprkkr.asr.test.mocks.gpaw.calculator)": [[456, "ase2sprkkr.asr.test.mocks.gpaw.calculator.Setups"]], "__init__() (ase2sprkkr.asr.test.mocks.gpaw.calculator.setups method)": [[456, "ase2sprkkr.asr.test.mocks.gpaw.calculator.Setups.__init__"]], "id_a (ase2sprkkr.asr.test.mocks.gpaw.calculator.setups property)": [[456, "ase2sprkkr.asr.test.mocks.gpaw.calculator.Setups.id_a"]], "nvalence (ase2sprkkr.asr.test.mocks.gpaw.calculator.setups attribute)": [[456, "ase2sprkkr.asr.test.mocks.gpaw.calculator.Setups.nvalence"]], "wavefunctions (class in ase2sprkkr.asr.test.mocks.gpaw.calculator)": [[457, "ase2sprkkr.asr.test.mocks.gpaw.calculator.WaveFunctions"]], "wavefunctions.banddescriptor (class in ase2sprkkr.asr.test.mocks.gpaw.calculator)": [[457, "ase2sprkkr.asr.test.mocks.gpaw.calculator.WaveFunctions.BandDescriptor"]], "wavefunctions.griddescriptor (class in ase2sprkkr.asr.test.mocks.gpaw.calculator)": [[457, "ase2sprkkr.asr.test.mocks.gpaw.calculator.WaveFunctions.GridDescriptor"]], "wavefunctions.kpointdescriptor (class in ase2sprkkr.asr.test.mocks.gpaw.calculator)": [[457, "ase2sprkkr.asr.test.mocks.gpaw.calculator.WaveFunctions.KPointDescriptor"]], "__init__() (ase2sprkkr.asr.test.mocks.gpaw.calculator.wavefunctions method)": [[457, "ase2sprkkr.asr.test.mocks.gpaw.calculator.WaveFunctions.__init__"]], "bd (ase2sprkkr.asr.test.mocks.gpaw.calculator.wavefunctions attribute)": [[457, "ase2sprkkr.asr.test.mocks.gpaw.calculator.WaveFunctions.bd"]], "gd (ase2sprkkr.asr.test.mocks.gpaw.calculator.wavefunctions attribute)": [[457, "ase2sprkkr.asr.test.mocks.gpaw.calculator.WaveFunctions.gd"]], "kd (ase2sprkkr.asr.test.mocks.gpaw.calculator.wavefunctions attribute)": [[457, "ase2sprkkr.asr.test.mocks.gpaw.calculator.WaveFunctions.kd"]], "nvalence (ase2sprkkr.asr.test.mocks.gpaw.calculator.wavefunctions attribute)": [[457, "ase2sprkkr.asr.test.mocks.gpaw.calculator.WaveFunctions.nvalence"]], "ase2sprkkr.asr.test.mocks.gpaw.hybrids": [[458, "module-ase2sprkkr.asr.test.mocks.gpaw.hybrids"]], "ase2sprkkr.asr.test.mocks.gpaw.hybrids.eigenvalues": [[459, "module-ase2sprkkr.asr.test.mocks.gpaw.hybrids.eigenvalues"]], "ase2sprkkr.asr.test.mocks.gpaw.kpt_descriptor": [[460, "module-ase2sprkkr.asr.test.mocks.gpaw.kpt_descriptor"]], "kpts2sizeandoffsets() (in module ase2sprkkr.asr.test.mocks.gpaw.kpt_descriptor)": [[461, "ase2sprkkr.asr.test.mocks.gpaw.kpt_descriptor.kpts2sizeandoffsets"]], "to1bz() (in module ase2sprkkr.asr.test.mocks.gpaw.kpt_descriptor)": [[462, "ase2sprkkr.asr.test.mocks.gpaw.kpt_descriptor.to1bz"]], "ase2sprkkr.asr.test.mocks.gpaw.mpi": [[463, "module-ase2sprkkr.asr.test.mocks.gpaw.mpi"]], "barrier() (in module ase2sprkkr.asr.test.mocks.gpaw.mpi)": [[464, "ase2sprkkr.asr.test.mocks.gpaw.mpi.barrier"]], "broadcast() (in module ase2sprkkr.asr.test.mocks.gpaw.mpi)": [[465, "ase2sprkkr.asr.test.mocks.gpaw.mpi.broadcast"]], "new_communicator() (in module ase2sprkkr.asr.test.mocks.gpaw.mpi)": [[466, "ase2sprkkr.asr.test.mocks.gpaw.mpi.new_communicator"]], "world_sum() (in module ase2sprkkr.asr.test.mocks.gpaw.mpi)": [[467, "ase2sprkkr.asr.test.mocks.gpaw.mpi.world_sum"]], "ase2sprkkr.asr.test.mocks.gpaw.occupations": [[468, "module-ase2sprkkr.asr.test.mocks.gpaw.occupations"]], "fermidirac (class in ase2sprkkr.asr.test.mocks.gpaw.occupations)": [[469, "ase2sprkkr.asr.test.mocks.gpaw.occupations.FermiDirac"]], "__init__() (ase2sprkkr.asr.test.mocks.gpaw.occupations.fermidirac method)": [[469, "ase2sprkkr.asr.test.mocks.gpaw.occupations.FermiDirac.__init__"]], "create_occ_calc() (in module ase2sprkkr.asr.test.mocks.gpaw.occupations)": [[470, "ase2sprkkr.asr.test.mocks.gpaw.occupations.create_occ_calc"]], "ase2sprkkr.asr.test.mocks.gpaw.response": [[471, "module-ase2sprkkr.asr.test.mocks.gpaw.response"]], "ase2sprkkr.asr.test.mocks.gpaw.response.bse": [[472, "module-ase2sprkkr.asr.test.mocks.gpaw.response.bse"]], "bse (class in ase2sprkkr.asr.test.mocks.gpaw.response.bse)": [[473, "ase2sprkkr.asr.test.mocks.gpaw.response.bse.BSE"]], "__init__() (ase2sprkkr.asr.test.mocks.gpaw.response.bse.bse method)": [[473, "ase2sprkkr.asr.test.mocks.gpaw.response.bse.BSE.__init__"]], "calculate() (ase2sprkkr.asr.test.mocks.gpaw.response.bse.bse method)": [[473, "ase2sprkkr.asr.test.mocks.gpaw.response.bse.BSE.calculate"]], "get_polarizability() (ase2sprkkr.asr.test.mocks.gpaw.response.bse.bse method)": [[473, "ase2sprkkr.asr.test.mocks.gpaw.response.bse.BSE.get_polarizability"]], "ase2sprkkr.asr.test.mocks.gpaw.response.df": [[474, "module-ase2sprkkr.asr.test.mocks.gpaw.response.df"]], "dielectricfunction (class in ase2sprkkr.asr.test.mocks.gpaw.response.df)": [[475, "ase2sprkkr.asr.test.mocks.gpaw.response.df.DielectricFunction"]], "__init__() (ase2sprkkr.asr.test.mocks.gpaw.response.df.dielectricfunction method)": [[475, "ase2sprkkr.asr.test.mocks.gpaw.response.df.DielectricFunction.__init__"]], "chi0 (ase2sprkkr.asr.test.mocks.gpaw.response.df.dielectricfunction attribute)": [[475, "ase2sprkkr.asr.test.mocks.gpaw.response.df.DielectricFunction.chi0"]], "get_frequencies() (ase2sprkkr.asr.test.mocks.gpaw.response.df.dielectricfunction method)": [[475, "ase2sprkkr.asr.test.mocks.gpaw.response.df.DielectricFunction.get_frequencies"]], "get_polarizability() (ase2sprkkr.asr.test.mocks.gpaw.response.df.dielectricfunction method)": [[475, "ase2sprkkr.asr.test.mocks.gpaw.response.df.DielectricFunction.get_polarizability"]], "ase2sprkkr.asr.test.mocks.gpaw.response.g0w0": [[476, "module-ase2sprkkr.asr.test.mocks.gpaw.response.g0w0"]], "g0w0 (class in ase2sprkkr.asr.test.mocks.gpaw.response.g0w0)": [[477, "ase2sprkkr.asr.test.mocks.gpaw.response.g0w0.G0W0"]], "__init__() (ase2sprkkr.asr.test.mocks.gpaw.response.g0w0.g0w0 method)": [[477, "ase2sprkkr.asr.test.mocks.gpaw.response.g0w0.G0W0.__init__"]], "calculate() (ase2sprkkr.asr.test.mocks.gpaw.response.g0w0.g0w0 method)": [[477, "ase2sprkkr.asr.test.mocks.gpaw.response.g0w0.G0W0.calculate"]], "ase2sprkkr.asr.test.mocks.gpaw.spinorbit": [[478, "module-ase2sprkkr.asr.test.mocks.gpaw.spinorbit"]], "soc (class in ase2sprkkr.asr.test.mocks.gpaw.spinorbit)": [[479, "ase2sprkkr.asr.test.mocks.gpaw.spinorbit.SOC"]], "__init__() (ase2sprkkr.asr.test.mocks.gpaw.spinorbit.soc method)": [[479, "ase2sprkkr.asr.test.mocks.gpaw.spinorbit.SOC.__init__"]], "calculate_band_energy() (ase2sprkkr.asr.test.mocks.gpaw.spinorbit.soc method)": [[479, "ase2sprkkr.asr.test.mocks.gpaw.spinorbit.SOC.calculate_band_energy"]], "eigenvalues() (ase2sprkkr.asr.test.mocks.gpaw.spinorbit.soc method)": [[479, "ase2sprkkr.asr.test.mocks.gpaw.spinorbit.SOC.eigenvalues"]], "spin_projections() (ase2sprkkr.asr.test.mocks.gpaw.spinorbit.soc method)": [[479, "ase2sprkkr.asr.test.mocks.gpaw.spinorbit.SOC.spin_projections"]], "soc_eigenstates() (in module ase2sprkkr.asr.test.mocks.gpaw.spinorbit)": [[480, "ase2sprkkr.asr.test.mocks.gpaw.spinorbit.soc_eigenstates"]], "ase2sprkkr.asr.test.mocks.gpaw.symmetry": [[481, "module-ase2sprkkr.asr.test.mocks.gpaw.symmetry"]], "symmetry (class in ase2sprkkr.asr.test.mocks.gpaw.symmetry)": [[482, "ase2sprkkr.asr.test.mocks.gpaw.symmetry.Symmetry"]], "__init__() (ase2sprkkr.asr.test.mocks.gpaw.symmetry.symmetry method)": [[482, "ase2sprkkr.asr.test.mocks.gpaw.symmetry.Symmetry.__init__"]], "analyze() (ase2sprkkr.asr.test.mocks.gpaw.symmetry.symmetry method)": [[482, "ase2sprkkr.asr.test.mocks.gpaw.symmetry.Symmetry.analyze"]], "ase2sprkkr.asr.test.mocks.gpaw.utilities": [[483, "module-ase2sprkkr.asr.test.mocks.gpaw.utilities"]], "ase2sprkkr.asr.test.mocks.gpaw.utilities.dos": [[484, "module-ase2sprkkr.asr.test.mocks.gpaw.utilities.dos"]], "raw_orbital_ldos() (in module ase2sprkkr.asr.test.mocks.gpaw.utilities.dos)": [[485, "ase2sprkkr.asr.test.mocks.gpaw.utilities.dos.raw_orbital_LDOS"]], "ase2sprkkr.asr.test.mocks.gpaw.utilities.ibz2bz": [[486, "module-ase2sprkkr.asr.test.mocks.gpaw.utilities.ibz2bz"]], "ibz2bz() (in module ase2sprkkr.asr.test.mocks.gpaw.utilities.ibz2bz)": [[487, "ase2sprkkr.asr.test.mocks.gpaw.utilities.ibz2bz.ibz2bz"]], "ase2sprkkr.asr.test.mocks.gpaw.utilities.progressbar": [[488, "module-ase2sprkkr.asr.test.mocks.gpaw.utilities.progressbar"]], "progressbar (class in ase2sprkkr.asr.test.mocks.gpaw.utilities.progressbar)": [[489, "ase2sprkkr.asr.test.mocks.gpaw.utilities.progressbar.ProgressBar"]], "__init__() (ase2sprkkr.asr.test.mocks.gpaw.utilities.progressbar.progressbar method)": [[489, "ase2sprkkr.asr.test.mocks.gpaw.utilities.progressbar.ProgressBar.__init__"]], "enumerate() (ase2sprkkr.asr.test.mocks.gpaw.utilities.progressbar.progressbar method)": [[489, "ase2sprkkr.asr.test.mocks.gpaw.utilities.progressbar.ProgressBar.enumerate"]], "ase2sprkkr.asr.test.mocks.gpaw.xc": [[490, "module-ase2sprkkr.asr.test.mocks.gpaw.xc"]], "ase2sprkkr.asr.test.mocks.gpaw.xc.exx": [[491, "module-ase2sprkkr.asr.test.mocks.gpaw.xc.exx"]], "ase2sprkkr.asr.test.mocks.gpaw.xc.tools": [[492, "module-ase2sprkkr.asr.test.mocks.gpaw.xc.tools"]], "ase2sprkkr.asr.test.test_bandstructure": [[493, "module-ase2sprkkr.asr.test.test_bandstructure"]], "test_bandstructure_main() (in module ase2sprkkr.asr.test.test_bandstructure)": [[494, "ase2sprkkr.asr.test.test_bandstructure.test_bandstructure_main"]], "ase2sprkkr.asr.test.test_berry": [[495, "module-ase2sprkkr.asr.test.test_berry"]], "test_berry() (in module ase2sprkkr.asr.test.test_berry)": [[496, "ase2sprkkr.asr.test.test_berry.test_berry"]], "test_berry_nontrivial() (in module ase2sprkkr.asr.test.test_berry)": [[497, "ase2sprkkr.asr.test.test_berry.test_berry_nontrivial"]], "ase2sprkkr.asr.test.test_borncharges": [[498, "module-ase2sprkkr.asr.test.test_borncharges"]], "test_borncharges() (in module ase2sprkkr.asr.test.test_borncharges)": [[499, "ase2sprkkr.asr.test.test_borncharges.test_borncharges"]], "ase2sprkkr.asr.test.test_bse": [[500, "module-ase2sprkkr.asr.test.test_bse"]], "test_bse() (in module ase2sprkkr.asr.test.test_bse)": [[501, "ase2sprkkr.asr.test.test_bse.test_bse"]], "ase2sprkkr.asr.test.test_cli": [[502, "module-ase2sprkkr.asr.test.test_cli"]], "test_asr() (in module ase2sprkkr.asr.test.test_cli)": [[503, "ase2sprkkr.asr.test.test_cli.test_asr"]], "test_asr_find() (in module ase2sprkkr.asr.test.test_cli)": [[504, "ase2sprkkr.asr.test.test_cli.test_asr_find"]], "test_asr_find_help() (in module ase2sprkkr.asr.test.test_cli)": [[505, "ase2sprkkr.asr.test.test_cli.test_asr_find_help"]], "test_asr_find_no_versions() (in module ase2sprkkr.asr.test.test_cli)": [[506, "ase2sprkkr.asr.test.test_cli.test_asr_find_no_versions"]], "test_asr_list() (in module ase2sprkkr.asr.test.test_cli)": [[507, "ase2sprkkr.asr.test.test_cli.test_asr_list"]], "test_asr_results_bandstructure() (in module ase2sprkkr.asr.test.test_cli)": [[508, "ase2sprkkr.asr.test.test_cli.test_asr_results_bandstructure"]], "test_asr_results_help() (in module ase2sprkkr.asr.test.test_cli)": [[509, "ase2sprkkr.asr.test.test_cli.test_asr_results_help"]], "test_asr_run() (in module ase2sprkkr.asr.test.test_cli)": [[510, "ase2sprkkr.asr.test.test_cli.test_asr_run"]], "ase2sprkkr.asr.test.test_convex_hull": [[511, "module-ase2sprkkr.asr.test.test_convex_hull"]], "test_convex_hull() (in module ase2sprkkr.asr.test.test_convex_hull)": [[512, "ase2sprkkr.asr.test.test_convex_hull.test_convex_hull"]], "ase2sprkkr.asr.test.test_core": [[513, "module-ase2sprkkr.asr.test.test_core"]], "recipe() (in module ase2sprkkr.asr.test.test_core)": [[514, "ase2sprkkr.asr.test.test_core.recipe"]], "test_core() (in module ase2sprkkr.asr.test.test_core)": [[515, "ase2sprkkr.asr.test.test_core.test_core"]], "test_recipe_defaults() (in module ase2sprkkr.asr.test.test_core)": [[516, "ase2sprkkr.asr.test.test_core.test_recipe_defaults"]], "test_recipe_setting_new_defaults() (in module ase2sprkkr.asr.test.test_core)": [[517, "ase2sprkkr.asr.test.test_core.test_recipe_setting_new_defaults"]], "test_recipe_setting_overriding_defaults() (in module ase2sprkkr.asr.test.test_core)": [[518, "ase2sprkkr.asr.test.test_core.test_recipe_setting_overriding_defaults"]], "ase2sprkkr.asr.test.test_core_material": [[519, "module-ase2sprkkr.asr.test.test_core_material"]], "test_asr_cli_results_figures_gs() (in module ase2sprkkr.asr.test.test_core_material)": [[520, "ase2sprkkr.asr.test.test_core_material.test_asr_cli_results_figures_gs"]], "ase2sprkkr.asr.test.test_core_results": [[521, "module-ase2sprkkr.asr.test.test_core_results"]], "myresult (class in ase2sprkkr.asr.test.test_core_results)": [[522, "ase2sprkkr.asr.test.test_core_results.MyResult"]], "__init__() (ase2sprkkr.asr.test.test_core_results.myresult method)": [[522, "ase2sprkkr.asr.test.test_core_results.MyResult.__init__"]], "_known_data_keys (ase2sprkkr.asr.test.test_core_results.myresult attribute)": [[522, "ase2sprkkr.asr.test.test_core_results.MyResult._known_data_keys"]], "a (ase2sprkkr.asr.test.test_core_results.myresult property)": [[522, "ase2sprkkr.asr.test.test_core_results.MyResult.a"]], "formats (ase2sprkkr.asr.test.test_core_results.myresult attribute)": [[522, "ase2sprkkr.asr.test.test_core_results.MyResult.formats"]], "key_descriptions (ase2sprkkr.asr.test.test_core_results.myresult attribute)": [[522, "ase2sprkkr.asr.test.test_core_results.MyResult.key_descriptions"]], "prev_version (ase2sprkkr.asr.test.test_core_results.myresult attribute)": [[522, "ase2sprkkr.asr.test.test_core_results.MyResult.prev_version"]], "strict (ase2sprkkr.asr.test.test_core_results.myresult attribute)": [[522, "ase2sprkkr.asr.test.test_core_results.MyResult.strict"]], "version (ase2sprkkr.asr.test.test_core_results.myresult attribute)": [[522, "ase2sprkkr.asr.test.test_core_results.MyResult.version"]], "myresultver0 (class in ase2sprkkr.asr.test.test_core_results)": [[523, "ase2sprkkr.asr.test.test_core_results.MyResultVer0"]], "__init__() (ase2sprkkr.asr.test.test_core_results.myresultver0 method)": [[523, "ase2sprkkr.asr.test.test_core_results.MyResultVer0.__init__"]], "_known_data_keys (ase2sprkkr.asr.test.test_core_results.myresultver0 attribute)": [[523, "ase2sprkkr.asr.test.test_core_results.MyResultVer0._known_data_keys"]], "a (ase2sprkkr.asr.test.test_core_results.myresultver0 property)": [[523, "ase2sprkkr.asr.test.test_core_results.MyResultVer0.a"]], "b (ase2sprkkr.asr.test.test_core_results.myresultver0 property)": [[523, "ase2sprkkr.asr.test.test_core_results.MyResultVer0.b"]], "key_descriptions (ase2sprkkr.asr.test.test_core_results.myresultver0 attribute)": [[523, "ase2sprkkr.asr.test.test_core_results.MyResultVer0.key_descriptions"]], "strict (ase2sprkkr.asr.test.test_core_results.myresultver0 attribute)": [[523, "ase2sprkkr.asr.test.test_core_results.MyResultVer0.strict"]], "version (ase2sprkkr.asr.test.test_core_results.myresultver0 attribute)": [[523, "ase2sprkkr.asr.test.test_core_results.MyResultVer0.version"]], "mywebpanel (class in ase2sprkkr.asr.test.test_core_results)": [[524, "ase2sprkkr.asr.test.test_core_results.MyWebPanel"]], "__init__() (ase2sprkkr.asr.test.test_core_results.mywebpanel method)": [[524, "ase2sprkkr.asr.test.test_core_results.MyWebPanel.__init__"]], "_abc_impl (ase2sprkkr.asr.test.test_core_results.mywebpanel attribute)": [[524, "ase2sprkkr.asr.test.test_core_results.MyWebPanel._abc_impl"]], "test_read_old_format() (in module ase2sprkkr.asr.test.test_core_results)": [[525, "ase2sprkkr.asr.test.test_core_results.test_read_old_format"]], "test_reading_older_version() (in module ase2sprkkr.asr.test.test_core_results)": [[526, "ase2sprkkr.asr.test.test_core_results.test_reading_older_version"]], "test_reading_result() (in module ase2sprkkr.asr.test.test_core_results)": [[527, "ase2sprkkr.asr.test.test_core_results.test_reading_result"]], "test_results_object() (in module ase2sprkkr.asr.test.test_core_results)": [[528, "ase2sprkkr.asr.test.test_core_results.test_results_object"]], "ase2sprkkr.asr.test.test_database_duplicates": [[529, "module-ase2sprkkr.asr.test.test_database_duplicates"]], "test_database_duplicates() (in module ase2sprkkr.asr.test.test_database_duplicates)": [[530, "ase2sprkkr.asr.test.test_database_duplicates.test_database_duplicates"]], "test_database_duplicates_filter_magstate() (in module ase2sprkkr.asr.test.test_database_duplicates)": [[531, "ase2sprkkr.asr.test.test_database_duplicates.test_database_duplicates_filter_magstate"]], "test_database_duplicates_no_duplicates() (in module ase2sprkkr.asr.test.test_database_duplicates)": [[532, "ase2sprkkr.asr.test.test_database_duplicates.test_database_duplicates_no_duplicates"]], "ase2sprkkr.asr.test.test_database_fromtree": [[533, "module-ase2sprkkr.asr.test.test_database_fromtree"]], "folder_tree() (in module ase2sprkkr.asr.test.test_database_fromtree)": [[534, "ase2sprkkr.asr.test.test_database_fromtree.folder_tree"]], "make_tree() (in module ase2sprkkr.asr.test.test_database_fromtree)": [[535, "ase2sprkkr.asr.test.test_database_fromtree.make_tree"]], "test_database_fromtree_raises_when_missing_uids() (in module ase2sprkkr.asr.test.test_database_fromtree)": [[536, "ase2sprkkr.asr.test.test_database_fromtree.test_database_fromtree_raises_when_missing_uids"]], "test_database_fromtree_totree() (in module ase2sprkkr.asr.test.test_database_fromtree)": [[537, "ase2sprkkr.asr.test.test_database_fromtree.test_database_fromtree_totree"]], "test_database_fromtree_works_without_write_permission() (in module ase2sprkkr.asr.test.test_database_fromtree)": [[538, "ase2sprkkr.asr.test.test_database_fromtree.test_database_fromtree_works_without_write_permission"]], "ase2sprkkr.asr.test.test_database_rmsd": [[539, "module-ase2sprkkr.asr.test.test_database_rmsd"]], "rattle_atoms() (in module ase2sprkkr.asr.test.test_database_rmsd)": [[540, "ase2sprkkr.asr.test.test_database_rmsd.rattle_atoms"]], "test_database_rmsd_duplicates() (in module ase2sprkkr.asr.test.test_database_rmsd)": [[541, "ase2sprkkr.asr.test.test_database_rmsd.test_database_rmsd_duplicates"]], "test_database_rmsd_duplicates_comparison_keys() (in module ase2sprkkr.asr.test.test_database_rmsd)": [[542, "ase2sprkkr.asr.test.test_database_rmsd.test_database_rmsd_duplicates_comparison_keys"]], "test_database_rmsd_move_one_atom() (in module ase2sprkkr.asr.test.test_database_rmsd)": [[543, "ase2sprkkr.asr.test.test_database_rmsd.test_database_rmsd_move_one_atom"]], "test_database_rmsd_none_handling() (in module ase2sprkkr.asr.test.test_database_rmsd)": [[544, "ase2sprkkr.asr.test.test_database_rmsd.test_database_rmsd_none_handling"]], "test_database_rmsd_not_equal() (in module ase2sprkkr.asr.test.test_database_rmsd)": [[545, "ase2sprkkr.asr.test.test_database_rmsd.test_database_rmsd_not_equal"]], "test_database_rmsd_rattled() (in module ase2sprkkr.asr.test.test_database_rmsd)": [[546, "ase2sprkkr.asr.test.test_database_rmsd.test_database_rmsd_rattled"]], "test_database_rmsd_rotation() (in module ase2sprkkr.asr.test.test_database_rmsd)": [[547, "ase2sprkkr.asr.test.test_database_rmsd.test_database_rmsd_rotation"]], "ase2sprkkr.asr.test.test_database_totree": [[548, "module-ase2sprkkr.asr.test.test_database_totree"]], "make_test_db() (in module ase2sprkkr.asr.test.test_database_totree)": [[549, "ase2sprkkr.asr.test.test_database_totree.make_test_db"]], "test_database_totree() (in module ase2sprkkr.asr.test.test_database_totree)": [[550, "ase2sprkkr.asr.test.test_database_totree.test_database_totree"]], "test_database_totree_files_and_hard_links() (in module ase2sprkkr.asr.test.test_database_totree)": [[551, "ase2sprkkr.asr.test.test_database_totree.test_database_totree_files_and_hard_links"]], "ase2sprkkr.asr.test.test_dimensionality": [[552, "module-ase2sprkkr.asr.test.test_dimensionality"]], "test_dimensionality() (in module ase2sprkkr.asr.test.test_dimensionality)": [[553, "ase2sprkkr.asr.test.test_dimensionality.test_dimensionality"]], "test_dimensionality_cli() (in module ase2sprkkr.asr.test.test_dimensionality)": [[554, "ase2sprkkr.asr.test.test_dimensionality.test_dimensionality_cli"]], "ase2sprkkr.asr.test.test_emasses": [[555, "module-ase2sprkkr.asr.test.test_emasses"]], "_get_all_eigenvalues() (in module ase2sprkkr.asr.test.test_emasses)": [[556, "ase2sprkkr.asr.test.test_emasses._get_all_eigenvalues"]], "resultstest() (in module ase2sprkkr.asr.test.test_emasses)": [[557, "ase2sprkkr.asr.test.test_emasses.resultstest"]], "test_emasses_freelectron() (in module ase2sprkkr.asr.test.test_emasses)": [[558, "ase2sprkkr.asr.test.test_emasses.test_emasses_freelectron"]], "test_emasses_indirect() (in module ase2sprkkr.asr.test.test_emasses)": [[559, "ase2sprkkr.asr.test.test_emasses.test_emasses_indirect"]], "ase2sprkkr.asr.test.test_fixtures": [[560, "module-ase2sprkkr.asr.test.test_fixtures"]], "test_env_variables() (in module ase2sprkkr.asr.test.test_fixtures)": [[561, "ase2sprkkr.asr.test.test_fixtures.test_env_variables"]], "ase2sprkkr.asr.test.test_formalpolarization": [[562, "module-ase2sprkkr.asr.test.test_formalpolarization"]], "test_formalpolarization() (in module ase2sprkkr.asr.test.test_formalpolarization)": [[563, "ase2sprkkr.asr.test.test_formalpolarization.test_formalpolarization"]], "test_formalpolarization_test_atoms_too_close_to_boundary() (in module ase2sprkkr.asr.test.test_formalpolarization)": [[564, "ase2sprkkr.asr.test.test_formalpolarization.test_formalpolarization_test_atoms_too_close_to_boundary"]], "ase2sprkkr.asr.test.test_gs": [[565, "module-ase2sprkkr.asr.test.test_gs"]], "test_gs() (in module ase2sprkkr.asr.test.test_gs)": [[566, "ase2sprkkr.asr.test.test_gs.test_gs"]], "test_gs_asr_cli_results_figures() (in module ase2sprkkr.asr.test.test_gs)": [[567, "ase2sprkkr.asr.test.test_gs.test_gs_asr_cli_results_figures"]], "test_gs_integration_gpaw() (in module ase2sprkkr.asr.test.test_gs)": [[568, "ase2sprkkr.asr.test.test_gs.test_gs_integration_gpaw"]], "ase2sprkkr.asr.test.test_gw": [[569, "module-ase2sprkkr.asr.test.test_gw"]], "test_gw() (in module ase2sprkkr.asr.test.test_gw)": [[570, "ase2sprkkr.asr.test.test_gw.test_gw"]], "ase2sprkkr.asr.test.test_hse": [[571, "module-ase2sprkkr.asr.test.test_hse"]], "test_hse() (in module ase2sprkkr.asr.test.test_hse)": [[572, "ase2sprkkr.asr.test.test_hse.test_hse"]], "ase2sprkkr.asr.test.test_pdos": [[573, "module-ase2sprkkr.asr.test.test_pdos"]], "test_pdos() (in module ase2sprkkr.asr.test.test_pdos)": [[574, "ase2sprkkr.asr.test.test_pdos.test_pdos"]], "test_pdos_full() (in module ase2sprkkr.asr.test.test_pdos)": [[575, "ase2sprkkr.asr.test.test_pdos.test_pdos_full"]], "ase2sprkkr.asr.test.test_phonons": [[576, "module-ase2sprkkr.asr.test.test_phonons"]], "test_phonons() (in module ase2sprkkr.asr.test.test_phonons)": [[577, "ase2sprkkr.asr.test.test_phonons.test_phonons"]], "ase2sprkkr.asr.test.test_phonopy": [[578, "module-ase2sprkkr.asr.test.test_phonopy"]], "test_phonopy() (in module ase2sprkkr.asr.test.test_phonopy)": [[579, "ase2sprkkr.asr.test.test_phonopy.test_phonopy"]], "ase2sprkkr.asr.test.test_piezoelectrictensor": [[580, "module-ase2sprkkr.asr.test.test_piezoelectrictensor"]], "get_strain_from_atoms() (in module ase2sprkkr.asr.test.test_piezoelectrictensor)": [[581, "ase2sprkkr.asr.test.test_piezoelectrictensor.get_strain_from_atoms"]], "test_piezoelectrictensor() (in module ase2sprkkr.asr.test.test_piezoelectrictensor)": [[582, "ase2sprkkr.asr.test.test_piezoelectrictensor.test_piezoelectrictensor"]], "zero_pad_non_pbc_strain_directions() (in module ase2sprkkr.asr.test.test_piezoelectrictensor)": [[583, "ase2sprkkr.asr.test.test_piezoelectrictensor.zero_pad_non_pbc_strain_directions"]], "ase2sprkkr.asr.test.test_plasmafrequency": [[584, "module-ase2sprkkr.asr.test.test_plasmafrequency"]], "test_plasmafrequency() (in module ase2sprkkr.asr.test.test_plasmafrequency)": [[585, "ase2sprkkr.asr.test.test_plasmafrequency.test_plasmafrequency"]], "ase2sprkkr.asr.test.test_polarizability": [[586, "module-ase2sprkkr.asr.test.test_polarizability"]], "test_polarizability() (in module ase2sprkkr.asr.test.test_polarizability)": [[587, "ase2sprkkr.asr.test.test_polarizability.test_polarizability"]], "ase2sprkkr.asr.test.test_projected_bandstructure": [[588, "module-ase2sprkkr.asr.test.test_projected_bandstructure"]], "test_projected_bs_mocked() (in module ase2sprkkr.asr.test.test_projected_bandstructure)": [[589, "ase2sprkkr.asr.test.test_projected_bandstructure.test_projected_bs_mocked"]], "ase2sprkkr.asr.test.test_raman": [[590, "module-ase2sprkkr.asr.test.test_raman"]], "test_raman() (in module ase2sprkkr.asr.test.test_raman)": [[591, "ase2sprkkr.asr.test.test_raman.test_raman"]], "ase2sprkkr.asr.test.test_relax": [[592, "module-ase2sprkkr.asr.test.test_relax"]], "test_relax_basic() (in module ase2sprkkr.asr.test.test_relax)": [[593, "ase2sprkkr.asr.test.test_relax.test_relax_basic"]], "test_relax_bn_gpaw() (in module ase2sprkkr.asr.test.test_relax)": [[594, "ase2sprkkr.asr.test.test_relax.test_relax_bn_gpaw"]], "test_relax_emt() (in module ase2sprkkr.asr.test.test_relax)": [[595, "ase2sprkkr.asr.test.test_relax.test_relax_emt"]], "test_relax_emt_fail_broken_symmetry() (in module ase2sprkkr.asr.test.test_relax)": [[596, "ase2sprkkr.asr.test.test_relax.test_relax_emt_fail_broken_symmetry"]], "test_relax_find_higher_symmetry() (in module ase2sprkkr.asr.test.test_relax)": [[597, "ase2sprkkr.asr.test.test_relax.test_relax_find_higher_symmetry"]], "test_relax_magmoms() (in module ase2sprkkr.asr.test.test_relax)": [[598, "ase2sprkkr.asr.test.test_relax.test_relax_magmoms"]], "test_relax_si_gpaw() (in module ase2sprkkr.asr.test.test_relax)": [[599, "ase2sprkkr.asr.test.test_relax.test_relax_si_gpaw"]], "ase2sprkkr.asr.test.test_setinfo": [[600, "module-ase2sprkkr.asr.test.test_setinfo"]], "test_info() (in module ase2sprkkr.asr.test.test_setinfo)": [[601, "ase2sprkkr.asr.test.test_setinfo.test_info"]], "test_info_call_from_cli() (in module ase2sprkkr.asr.test.test_setinfo)": [[602, "ase2sprkkr.asr.test.test_setinfo.test_info_call_from_cli"]], "test_info_raises_with_protected_key() (in module ase2sprkkr.asr.test.test_setinfo)": [[603, "ase2sprkkr.asr.test.test_setinfo.test_info_raises_with_protected_key"]], "ase2sprkkr.asr.test.test_setup_decorate": [[604, "module-ase2sprkkr.asr.test.test_setup_decorate"]], "test_setup_decorate_si() (in module ase2sprkkr.asr.test.test_setup_decorate)": [[605, "ase2sprkkr.asr.test.test_setup_decorate.test_setup_decorate_si"]], "ase2sprkkr.asr.test.test_setup_displacements": [[606, "module-ase2sprkkr.asr.test.test_setup_displacements"]], "test_setup_displacements() (in module ase2sprkkr.asr.test.test_setup_displacements)": [[607, "ase2sprkkr.asr.test.test_setup_displacements.test_setup_displacements"]], "test_setup_displacements_displace_atom() (in module ase2sprkkr.asr.test.test_setup_displacements)": [[608, "ase2sprkkr.asr.test.test_setup_displacements.test_setup_displacements_displace_atom"]], "test_setup_displacements_get_all_displacements() (in module ase2sprkkr.asr.test.test_setup_displacements)": [[609, "ase2sprkkr.asr.test.test_setup_displacements.test_setup_displacements_get_all_displacements"]], "ase2sprkkr.asr.test.test_setup_magnetize": [[610, "module-ase2sprkkr.asr.test.test_setup_magnetize"]], "test_setup_magnetize() (in module ase2sprkkr.asr.test.test_setup_magnetize)": [[611, "ase2sprkkr.asr.test.test_setup_magnetize.test_setup_magnetize"]], "test_setup_magnetize_state_inputs() (in module ase2sprkkr.asr.test.test_setup_magnetize)": [[612, "ase2sprkkr.asr.test.test_setup_magnetize.test_setup_magnetize_state_inputs"]], "ase2sprkkr.asr.test.test_setup_materials": [[613, "module-ase2sprkkr.asr.test.test_setup_materials"]], "test_setup_magnetize() (in module ase2sprkkr.asr.test.test_setup_materials)": [[614, "ase2sprkkr.asr.test.test_setup_materials.test_setup_magnetize"]], "ase2sprkkr.asr.test.test_setup_scanparams": [[615, "module-ase2sprkkr.asr.test.test_setup_scanparams"]], "test_setup_params() (in module ase2sprkkr.asr.test.test_setup_scanparams)": [[616, "ase2sprkkr.asr.test.test_setup_scanparams.test_setup_params"]], "ase2sprkkr.asr.test.test_setup_strains": [[617, "module-ase2sprkkr.asr.test.test_setup_strains"]], "test_setup_strains() (in module ase2sprkkr.asr.test.test_setup_strains)": [[618, "ase2sprkkr.asr.test.test_setup_strains.test_setup_strains"]], "test_setup_strains_get_relevant_strains() (in module ase2sprkkr.asr.test.test_setup_strains)": [[619, "ase2sprkkr.asr.test.test_setup_strains.test_setup_strains_get_relevant_strains"]], "ase2sprkkr.asr.test.test_setup_symmetrize": [[620, "module-ase2sprkkr.asr.test.test_setup_symmetrize"]], "test_setup_symmetrize() (in module ase2sprkkr.asr.test.test_setup_symmetrize)": [[621, "ase2sprkkr.asr.test.test_setup_symmetrize.test_setup_symmetrize"]], "ase2sprkkr.asr.test.test_stiffness": [[622, "module-ase2sprkkr.asr.test.test_stiffness"]], "test_stiffness_emt() (in module ase2sprkkr.asr.test.test_stiffness)": [[623, "ase2sprkkr.asr.test.test_stiffness.test_stiffness_emt"]], "test_stiffness_gpaw() (in module ase2sprkkr.asr.test.test_stiffness)": [[624, "ase2sprkkr.asr.test.test_stiffness.test_stiffness_gpaw"]], "ase2sprkkr.asr.utils": [[625, "module-ase2sprkkr.asr.utils"]], "ase2sprkkr.asr.utils.args": [[626, "module-ase2sprkkr.asr.utils.args"]], "parse_arg() (in module ase2sprkkr.asr.utils.args)": [[627, "ase2sprkkr.asr.utils.args.parse_arg"]], "ase2sprkkr.asr.utils.calculator_utils": [[628, "module-ase2sprkkr.asr.utils.calculator_utils"]], "fermi_level() (in module ase2sprkkr.asr.utils.calculator_utils)": [[629, "ase2sprkkr.asr.utils.calculator_utils.fermi_level"]], "get_eigenvalues() (in module ase2sprkkr.asr.utils.calculator_utils)": [[630, "ase2sprkkr.asr.utils.calculator_utils.get_eigenvalues"]], "ase2sprkkr.asr.utils.gpw2eigs": [[631, "module-ase2sprkkr.asr.utils.gpw2eigs"]], "calc2eigs() (in module ase2sprkkr.asr.utils.gpw2eigs)": [[632, "ase2sprkkr.asr.utils.gpw2eigs.calc2eigs"]], "gpw2eigs() (in module ase2sprkkr.asr.utils.gpw2eigs)": [[633, "ase2sprkkr.asr.utils.gpw2eigs.gpw2eigs"]], "ase2sprkkr.asr.utils.kpts": [[634, "module-ase2sprkkr.asr.utils.kpts"]], "get_kpts_size() (in module ase2sprkkr.asr.utils.kpts)": [[635, "ase2sprkkr.asr.utils.kpts.get_kpts_size"]], "ase2sprkkr.asr.utils.magnetism": [[636, "module-ase2sprkkr.asr.utils.magnetism"]], "is_magnetic() (in module ase2sprkkr.asr.utils.magnetism)": [[637, "ase2sprkkr.asr.utils.magnetism.is_magnetic"]], "magnetic_atoms() (in module ase2sprkkr.asr.utils.magnetism)": [[638, "ase2sprkkr.asr.utils.magnetism.magnetic_atoms"]], "ase2sprkkr.asr.utils.refinegs": [[639, "module-ase2sprkkr.asr.utils.refinegs"]], "get_filenames() (in module ase2sprkkr.asr.utils.refinegs)": [[640, "ase2sprkkr.asr.utils.refinegs.get_filenames"]], "get_parstr() (in module ase2sprkkr.asr.utils.refinegs)": [[641, "ase2sprkkr.asr.utils.refinegs.get_parstr"]], "nonselfc() (in module ase2sprkkr.asr.utils.refinegs)": [[642, "ase2sprkkr.asr.utils.refinegs.nonselfc"]], "refinegs() (in module ase2sprkkr.asr.utils.refinegs)": [[643, "ase2sprkkr.asr.utils.refinegs.refinegs"]], "ase2sprkkr.asr.utils.something": [[644, "module-ase2sprkkr.asr.utils.something"]], "calculate_something() (in module ase2sprkkr.asr.utils.something)": [[645, "ase2sprkkr.asr.utils.something.calculate_something"]], "collect_data() (in module ase2sprkkr.asr.utils.something)": [[646, "ase2sprkkr.asr.utils.something.collect_data"]], "create_plot() (in module ase2sprkkr.asr.utils.something)": [[647, "ase2sprkkr.asr.utils.something.create_plot"]], "webpanel() (in module ase2sprkkr.asr.utils.something)": [[648, "ase2sprkkr.asr.utils.something.webpanel"]], "ase2sprkkr.asr.utils.symmetry": [[649, "module-ase2sprkkr.asr.utils.symmetry"]], "_atoms2symmetry_gpaw() (in module ase2sprkkr.asr.utils.symmetry)": [[650, "ase2sprkkr.asr.utils.symmetry._atoms2symmetry_gpaw"]], "atoms2spgcell() (in module ase2sprkkr.asr.utils.symmetry)": [[651, "ase2sprkkr.asr.utils.symmetry.atoms2spgcell"]], "atoms2symmetry() (in module ase2sprkkr.asr.utils.symmetry)": [[652, "ase2sprkkr.asr.utils.symmetry.atoms2symmetry"]], "has_inversion() (in module ase2sprkkr.asr.utils.symmetry)": [[653, "ase2sprkkr.asr.utils.symmetry.has_inversion"]], "restrict_spin_projection_2d() (in module ase2sprkkr.asr.utils.symmetry)": [[654, "ase2sprkkr.asr.utils.symmetry.restrict_spin_projection_2d"]], "ase2sprkkr.asr.utils.utils": [[655, "module-ase2sprkkr.asr.utils.utils"]], "timed_print() (in module ase2sprkkr.asr.utils.utils)": [[656, "ase2sprkkr.asr.utils.utils.timed_print"]], "ase2sprkkr.asr.workflow": [[657, "module-ase2sprkkr.asr.workflow"]], "ase2sprkkr.bindings": [[658, "module-ase2sprkkr.bindings"]], "ase2sprkkr.bindings.empty_spheres": [[659, "module-ase2sprkkr.bindings.empty_spheres"]], "emptyspheresresult (class in ase2sprkkr.bindings.empty_spheres)": [[660, "ase2sprkkr.bindings.empty_spheres.EmptySpheresResult"]], "__init__() (ase2sprkkr.bindings.empty_spheres.emptyspheresresult method)": [[660, "ase2sprkkr.bindings.empty_spheres.EmptySpheresResult.__init__"]], "add_empty_spheres() (in module ase2sprkkr.bindings.empty_spheres)": [[661, "ase2sprkkr.bindings.empty_spheres.add_empty_spheres"]], "empty_spheres() (in module ase2sprkkr.bindings.empty_spheres)": [[662, "ase2sprkkr.bindings.empty_spheres.empty_spheres"]], "empty_spheres_atoms() (in module ase2sprkkr.bindings.empty_spheres)": [[663, "ase2sprkkr.bindings.empty_spheres.empty_spheres_atoms"]], "ase2sprkkr.bindings.es_finder": [[664, "module-ase2sprkkr.bindings.es_finder"]], "empty_spheres() (in module ase2sprkkr.bindings.es_finder)": [[665, "ase2sprkkr.bindings.es_finder.empty_spheres"]], "ase2sprkkr.bindings.spglib": [[666, "module-ase2sprkkr.bindings.spglib"]], "spacegroupinfo (class in ase2sprkkr.bindings.spglib)": [[667, "ase2sprkkr.bindings.spglib.SpacegroupInfo"]], "__init__() (ase2sprkkr.bindings.spglib.spacegroupinfo method)": [[667, "ase2sprkkr.bindings.spglib.SpacegroupInfo.__init__"]], "compute_spacegroup_info() (ase2sprkkr.bindings.spglib.spacegroupinfo static method)": [[667, "ase2sprkkr.bindings.spglib.SpacegroupInfo.compute_spacegroup_info"]], "dataset (ase2sprkkr.bindings.spglib.spacegroupinfo property)": [[667, "ase2sprkkr.bindings.spglib.SpacegroupInfo.dataset"]], "equivalent_sites (ase2sprkkr.bindings.spglib.spacegroupinfo property)": [[667, "ase2sprkkr.bindings.spglib.SpacegroupInfo.equivalent_sites"]], "from_atoms() (ase2sprkkr.bindings.spglib.spacegroupinfo static method)": [[667, "ase2sprkkr.bindings.spglib.SpacegroupInfo.from_atoms"]], "number() (ase2sprkkr.bindings.spglib.spacegroupinfo method)": [[667, "ase2sprkkr.bindings.spglib.SpacegroupInfo.number"]], "recompute() (ase2sprkkr.bindings.spglib.spacegroupinfo method)": [[667, "ase2sprkkr.bindings.spglib.SpacegroupInfo.recompute"]], "possibly_equivalent_sites() (in module ase2sprkkr.bindings.spglib)": [[668, "ase2sprkkr.bindings.spglib.possibly_equivalent_sites"]], "ase2sprkkr.bindings.tests": [[669, "module-ase2sprkkr.bindings.tests"]], "ase2sprkkr.bindings.tests.init_tests": [[670, "module-ase2sprkkr.bindings.tests.init_tests"]], "testcase (class in ase2sprkkr.bindings.tests.init_tests)": [[671, "ase2sprkkr.bindings.tests.init_tests.TestCase"]], "__init__() (ase2sprkkr.bindings.tests.init_tests.testcase method)": [[671, "ase2sprkkr.bindings.tests.init_tests.TestCase.__init__"]], "_calc_args (ase2sprkkr.bindings.tests.init_tests.testcase attribute)": [[671, "ase2sprkkr.bindings.tests.init_tests.TestCase._calc_args"]], "_print_output (ase2sprkkr.bindings.tests.init_tests.testcase attribute)": [[671, "ase2sprkkr.bindings.tests.init_tests.TestCase._print_output"]], "almost_equal_precision() (ase2sprkkr.bindings.tests.init_tests.testcase class method)": [[671, "ase2sprkkr.bindings.tests.init_tests.TestCase.almost_equal_precision"]], "assertalmostequal() (ase2sprkkr.bindings.tests.init_tests.testcase method)": [[671, "ase2sprkkr.bindings.tests.init_tests.TestCase.assertAlmostEqual"]], "assertasyncequal() (ase2sprkkr.bindings.tests.init_tests.testcase method)": [[671, "ase2sprkkr.bindings.tests.init_tests.TestCase.assertAsyncEqual"]], "assertasyncraises() (ase2sprkkr.bindings.tests.init_tests.testcase method)": [[671, "ase2sprkkr.bindings.tests.init_tests.TestCase.assertAsyncRaises"]], "assertequal() (ase2sprkkr.bindings.tests.init_tests.testcase method)": [[671, "ase2sprkkr.bindings.tests.init_tests.TestCase.assertEqual"]], "assertfalse() (ase2sprkkr.bindings.tests.init_tests.testcase method)": [[671, "ase2sprkkr.bindings.tests.init_tests.TestCase.assertFalse"]], "assertisnone() (ase2sprkkr.bindings.tests.init_tests.testcase method)": [[671, "ase2sprkkr.bindings.tests.init_tests.TestCase.assertIsNone"]], "assertnotequal() (ase2sprkkr.bindings.tests.init_tests.testcase method)": [[671, "ase2sprkkr.bindings.tests.init_tests.TestCase.assertNotEqual"]], "assertraises() (ase2sprkkr.bindings.tests.init_tests.testcase method)": [[671, "ase2sprkkr.bindings.tests.init_tests.TestCase.assertRaises"]], "asserttrue() (ase2sprkkr.bindings.tests.init_tests.testcase method)": [[671, "ase2sprkkr.bindings.tests.init_tests.TestCase.assertTrue"]], "calc_args() (ase2sprkkr.bindings.tests.init_tests.testcase class method)": [[671, "ase2sprkkr.bindings.tests.init_tests.TestCase.calc_args"]], "runasync() (ase2sprkkr.bindings.tests.init_tests.testcase static method)": [[671, "ase2sprkkr.bindings.tests.init_tests.TestCase.runAsync"]], "run_sprkkr() (ase2sprkkr.bindings.tests.init_tests.testcase method)": [[671, "ase2sprkkr.bindings.tests.init_tests.TestCase.run_sprkkr"]], "temporary_dir() (ase2sprkkr.bindings.tests.init_tests.testcase method)": [[671, "ase2sprkkr.bindings.tests.init_tests.TestCase.temporary_dir"]], "arr_testfce() (in module ase2sprkkr.bindings.tests.init_tests)": [[672, "ase2sprkkr.bindings.tests.init_tests.arr_testfce"]], "assertdictequal() (in module ase2sprkkr.bindings.tests.init_tests)": [[673, "ase2sprkkr.bindings.tests.init_tests.assertDictEqual"]], "assertlistequal() (in module ase2sprkkr.bindings.tests.init_tests)": [[674, "ase2sprkkr.bindings.tests.init_tests.assertListEqual"]], "assert_almost_equals() (in module ase2sprkkr.bindings.tests.init_tests)": [[675, "ase2sprkkr.bindings.tests.init_tests.assert_almost_equals"]], "assert_equals() (in module ase2sprkkr.bindings.tests.init_tests)": [[676, "ase2sprkkr.bindings.tests.init_tests.assert_equals"]], "__init__() (ase2sprkkr.bindings.tests.init_tests.extdict method)": [[677, "ase2sprkkr.bindings.tests.init_tests.extdict.__init__"]], "extdict (class in ase2sprkkr.bindings.tests.init_tests)": [[677, "ase2sprkkr.bindings.tests.init_tests.extdict"]], "testfce() (in module ase2sprkkr.bindings.tests.init_tests)": [[678, "ase2sprkkr.bindings.tests.init_tests.testfce"]], "ase2sprkkr.bindings.tests.test_es_finder": [[679, "module-ase2sprkkr.bindings.tests.test_es_finder"]], "testesfinder (class in ase2sprkkr.bindings.tests.test_es_finder)": [[680, "ase2sprkkr.bindings.tests.test_es_finder.TestEsFinder"]], "__init__() (ase2sprkkr.bindings.tests.test_es_finder.testesfinder method)": [[680, "ase2sprkkr.bindings.tests.test_es_finder.TestEsFinder.__init__"]], "test_es_finder() (ase2sprkkr.bindings.tests.test_es_finder.testesfinder method)": [[680, "ase2sprkkr.bindings.tests.test_es_finder.TestEsFinder.test_es_finder"]], "ase2sprkkr.bindings.tests.test_spglib": [[681, "module-ase2sprkkr.bindings.tests.test_spglib"]], "testspgilib (class in ase2sprkkr.bindings.tests.test_spglib)": [[682, "ase2sprkkr.bindings.tests.test_spglib.TestSpgilib"]], "__init__() (ase2sprkkr.bindings.tests.test_spglib.testspgilib method)": [[682, "ase2sprkkr.bindings.tests.test_spglib.TestSpgilib.__init__"]], "test_possibly_equivalent_sites() (ase2sprkkr.bindings.tests.test_spglib.testspgilib method)": [[682, "ase2sprkkr.bindings.tests.test_spglib.TestSpgilib.test_possibly_equivalent_sites"]], "test_spacegroup_info() (ase2sprkkr.bindings.tests.test_spglib.testspgilib method)": [[682, "ase2sprkkr.bindings.tests.test_spglib.TestSpgilib.test_spacegroup_info"]], "ase2sprkkr.bindings.xband": [[683, "module-ase2sprkkr.bindings.xband"]], "ase2sprkkr.bindings.xband.spheres": [[684, "module-ase2sprkkr.bindings.xband.spheres"]], "empty_spheres() (in module ase2sprkkr.bindings.xband.spheres)": [[685, "ase2sprkkr.bindings.xband.spheres.empty_spheres"]], "ase2sprkkr.bindings.xband.symmetry": [[686, "module-ase2sprkkr.bindings.xband.symmetry"]], "find_symmetry() (in module ase2sprkkr.bindings.xband.symmetry)": [[687, "ase2sprkkr.bindings.xband.symmetry.find_symmetry"]], "find_symmetry_ex() (in module ase2sprkkr.bindings.xband.symmetry)": [[688, "ase2sprkkr.bindings.xband.symmetry.find_symmetry_ex"]], "ase2sprkkr.bindings.xband.tests": [[689, "module-ase2sprkkr.bindings.xband.tests"]], "ase2sprkkr.bindings.xband.tests.init_tests": [[690, "module-ase2sprkkr.bindings.xband.tests.init_tests"]], "testcase (class in ase2sprkkr.bindings.xband.tests.init_tests)": [[691, "ase2sprkkr.bindings.xband.tests.init_tests.TestCase"]], "__init__() (ase2sprkkr.bindings.xband.tests.init_tests.testcase method)": [[691, "ase2sprkkr.bindings.xband.tests.init_tests.TestCase.__init__"]], "_calc_args (ase2sprkkr.bindings.xband.tests.init_tests.testcase attribute)": [[691, "ase2sprkkr.bindings.xband.tests.init_tests.TestCase._calc_args"]], "_print_output (ase2sprkkr.bindings.xband.tests.init_tests.testcase attribute)": [[691, "ase2sprkkr.bindings.xband.tests.init_tests.TestCase._print_output"]], "almost_equal_precision() (ase2sprkkr.bindings.xband.tests.init_tests.testcase class method)": [[691, "ase2sprkkr.bindings.xband.tests.init_tests.TestCase.almost_equal_precision"]], "assertalmostequal() (ase2sprkkr.bindings.xband.tests.init_tests.testcase method)": [[691, "ase2sprkkr.bindings.xband.tests.init_tests.TestCase.assertAlmostEqual"]], "assertasyncequal() (ase2sprkkr.bindings.xband.tests.init_tests.testcase method)": [[691, "ase2sprkkr.bindings.xband.tests.init_tests.TestCase.assertAsyncEqual"]], "assertasyncraises() (ase2sprkkr.bindings.xband.tests.init_tests.testcase method)": [[691, "ase2sprkkr.bindings.xband.tests.init_tests.TestCase.assertAsyncRaises"]], "assertequal() (ase2sprkkr.bindings.xband.tests.init_tests.testcase method)": [[691, "ase2sprkkr.bindings.xband.tests.init_tests.TestCase.assertEqual"]], "assertfalse() (ase2sprkkr.bindings.xband.tests.init_tests.testcase method)": [[691, "ase2sprkkr.bindings.xband.tests.init_tests.TestCase.assertFalse"]], "assertisnone() (ase2sprkkr.bindings.xband.tests.init_tests.testcase method)": [[691, "ase2sprkkr.bindings.xband.tests.init_tests.TestCase.assertIsNone"]], "assertnotequal() (ase2sprkkr.bindings.xband.tests.init_tests.testcase method)": [[691, "ase2sprkkr.bindings.xband.tests.init_tests.TestCase.assertNotEqual"]], "assertraises() (ase2sprkkr.bindings.xband.tests.init_tests.testcase method)": [[691, "ase2sprkkr.bindings.xband.tests.init_tests.TestCase.assertRaises"]], "asserttrue() (ase2sprkkr.bindings.xband.tests.init_tests.testcase method)": [[691, "ase2sprkkr.bindings.xband.tests.init_tests.TestCase.assertTrue"]], "calc_args() (ase2sprkkr.bindings.xband.tests.init_tests.testcase class method)": [[691, "ase2sprkkr.bindings.xband.tests.init_tests.TestCase.calc_args"]], "runasync() (ase2sprkkr.bindings.xband.tests.init_tests.testcase static method)": [[691, "ase2sprkkr.bindings.xband.tests.init_tests.TestCase.runAsync"]], "run_sprkkr() (ase2sprkkr.bindings.xband.tests.init_tests.testcase method)": [[691, "ase2sprkkr.bindings.xband.tests.init_tests.TestCase.run_sprkkr"]], "temporary_dir() (ase2sprkkr.bindings.xband.tests.init_tests.testcase method)": [[691, "ase2sprkkr.bindings.xband.tests.init_tests.TestCase.temporary_dir"]], "arr_testfce() (in module ase2sprkkr.bindings.xband.tests.init_tests)": [[692, "ase2sprkkr.bindings.xband.tests.init_tests.arr_testfce"]], "assertdictequal() (in module ase2sprkkr.bindings.xband.tests.init_tests)": [[693, "ase2sprkkr.bindings.xband.tests.init_tests.assertDictEqual"]], "assertlistequal() (in module ase2sprkkr.bindings.xband.tests.init_tests)": [[694, "ase2sprkkr.bindings.xband.tests.init_tests.assertListEqual"]], "assert_almost_equals() (in module ase2sprkkr.bindings.xband.tests.init_tests)": [[695, "ase2sprkkr.bindings.xband.tests.init_tests.assert_almost_equals"]], "assert_equals() (in module ase2sprkkr.bindings.xband.tests.init_tests)": [[696, "ase2sprkkr.bindings.xband.tests.init_tests.assert_equals"]], "__init__() (ase2sprkkr.bindings.xband.tests.init_tests.extdict method)": [[697, "ase2sprkkr.bindings.xband.tests.init_tests.extdict.__init__"]], "extdict (class in ase2sprkkr.bindings.xband.tests.init_tests)": [[697, "ase2sprkkr.bindings.xband.tests.init_tests.extdict"]], "patch_package() (in module ase2sprkkr.bindings.xband.tests.init_tests)": [[698, "ase2sprkkr.bindings.xband.tests.init_tests.patch_package"]], "testfce() (in module ase2sprkkr.bindings.xband.tests.init_tests)": [[699, "ase2sprkkr.bindings.xband.tests.init_tests.testfce"]], "ase2sprkkr.bindings.xband.tests.test_spheres": [[700, "module-ase2sprkkr.bindings.xband.tests.test_spheres"]], "testspheres (class in ase2sprkkr.bindings.xband.tests.test_spheres)": [[701, "ase2sprkkr.bindings.xband.tests.test_spheres.TestSpheres"]], "__init__() (ase2sprkkr.bindings.xband.tests.test_spheres.testspheres method)": [[701, "ase2sprkkr.bindings.xband.tests.test_spheres.TestSpheres.__init__"]], "test() (ase2sprkkr.bindings.xband.tests.test_spheres.testspheres method)": [[701, "ase2sprkkr.bindings.xband.tests.test_spheres.TestSpheres.test"]], "test_xband() (ase2sprkkr.bindings.xband.tests.test_spheres.testspheres method)": [[701, "ase2sprkkr.bindings.xband.tests.test_spheres.TestSpheres.test_xband"]], "ase2sprkkr.common": [[702, "module-ase2sprkkr.common"]], "ase2sprkkr.common.alternative_types": [[703, "module-ase2sprkkr.common.alternative_types"]], "allowed_types (in module ase2sprkkr.common.alternative_types)": [[704, "ase2sprkkr.common.alternative_types.allowed_types"]], "normalize_type() (in module ase2sprkkr.common.alternative_types)": [[705, "ase2sprkkr.common.alternative_types.normalize_type"]], "normalize_type_map (in module ase2sprkkr.common.alternative_types)": [[706, "ase2sprkkr.common.alternative_types.normalize_type_map"]], "types_alternatives (in module ase2sprkkr.common.alternative_types)": [[707, "ase2sprkkr.common.alternative_types.types_alternatives"]], "ase2sprkkr.common.configuration": [[708, "module-ase2sprkkr.common.configuration"]], "configuration (class in ase2sprkkr.common.configuration)": [[709, "ase2sprkkr.common.configuration.Configuration"]], "__init__() (ase2sprkkr.common.configuration.configuration method)": [[709, "ase2sprkkr.common.configuration.Configuration.__init__"]], "_container (ase2sprkkr.common.configuration.configuration attribute)": [[709, "ase2sprkkr.common.configuration.Configuration._container"]], "_definition (ase2sprkkr.common.configuration.configuration attribute)": [[709, "ase2sprkkr.common.configuration.Configuration._definition"]], "_get_path() (ase2sprkkr.common.configuration.configuration method)": [[709, "ase2sprkkr.common.configuration.Configuration._get_path"]], "_get_root_container() (ase2sprkkr.common.configuration.configuration method)": [[709, "ase2sprkkr.common.configuration.Configuration._get_root_container"]], "as_dict() (ase2sprkkr.common.configuration.configuration method)": [[709, "ase2sprkkr.common.configuration.Configuration.as_dict"]], "doc (ase2sprkkr.common.configuration.configuration property)": [[709, "ase2sprkkr.common.configuration.Configuration.doc"]], "help() (ase2sprkkr.common.configuration.configuration method)": [[709, "ase2sprkkr.common.configuration.Configuration.help"]], "info (ase2sprkkr.common.configuration.configuration property)": [[709, "ase2sprkkr.common.configuration.Configuration.info"]], "name (ase2sprkkr.common.configuration.configuration property)": [[709, "ase2sprkkr.common.configuration.Configuration.name"]], "save_to_file() (ase2sprkkr.common.configuration.configuration method)": [[709, "ase2sprkkr.common.configuration.Configuration.save_to_file"]], "show() (ase2sprkkr.common.configuration.configuration method)": [[709, "ase2sprkkr.common.configuration.Configuration.show"]], "to_dict() (ase2sprkkr.common.configuration.configuration method)": [[709, "ase2sprkkr.common.configuration.Configuration.to_dict"]], "to_string() (ase2sprkkr.common.configuration.configuration method)": [[709, "ase2sprkkr.common.configuration.Configuration.to_string"]], "ase2sprkkr.common.configuration_containers": [[710, "module-ase2sprkkr.common.configuration_containers"]], "baseconfigurationcontainer (class in ase2sprkkr.common.configuration_containers)": [[711, "ase2sprkkr.common.configuration_containers.BaseConfigurationContainer"]], "__init__() (ase2sprkkr.common.configuration_containers.baseconfigurationcontainer method)": [[711, "ase2sprkkr.common.configuration_containers.BaseConfigurationContainer.__init__"]], "copy() (ase2sprkkr.common.configuration_containers.baseconfigurationcontainer method)": [[711, "ase2sprkkr.common.configuration_containers.BaseConfigurationContainer.copy"]], "definition (ase2sprkkr.common.configuration_containers.baseconfigurationcontainer property)": [[711, "ase2sprkkr.common.configuration_containers.BaseConfigurationContainer.definition"]], "has_any_value() (ase2sprkkr.common.configuration_containers.baseconfigurationcontainer method)": [[711, "ase2sprkkr.common.configuration_containers.BaseConfigurationContainer.has_any_value"]], "basesection (class in ase2sprkkr.common.configuration_containers)": [[712, "ase2sprkkr.common.configuration_containers.BaseSection"]], "__init__() (ase2sprkkr.common.configuration_containers.basesection method)": [[712, "ase2sprkkr.common.configuration_containers.BaseSection.__init__"]], "configurationcontainer (class in ase2sprkkr.common.configuration_containers)": [[713, "ase2sprkkr.common.configuration_containers.ConfigurationContainer"]], "__init__() (ase2sprkkr.common.configuration_containers.configurationcontainer method)": [[713, "ase2sprkkr.common.configuration_containers.ConfigurationContainer.__init__"]], "_add() (ase2sprkkr.common.configuration_containers.configurationcontainer method)": [[713, "ase2sprkkr.common.configuration_containers.ConfigurationContainer._add"]], "_find_value() (ase2sprkkr.common.configuration_containers.configurationcontainer method)": [[713, "ase2sprkkr.common.configuration_containers.ConfigurationContainer._find_value"]], "_get() (ase2sprkkr.common.configuration_containers.configurationcontainer method)": [[713, "ase2sprkkr.common.configuration_containers.ConfigurationContainer._get"]], "_get_member() (ase2sprkkr.common.configuration_containers.configurationcontainer method)": [[713, "ase2sprkkr.common.configuration_containers.ConfigurationContainer._get_member"]], "_init_members_from_the_definition() (ase2sprkkr.common.configuration_containers.configurationcontainer method)": [[713, "ase2sprkkr.common.configuration_containers.ConfigurationContainer._init_members_from_the_definition"]], "_interactive_member_name() (ase2sprkkr.common.configuration_containers.configurationcontainer static method)": [[713, "ase2sprkkr.common.configuration_containers.ConfigurationContainer._interactive_member_name"]], "_save_to_file() (ase2sprkkr.common.configuration_containers.configurationcontainer method)": [[713, "ase2sprkkr.common.configuration_containers.ConfigurationContainer._save_to_file"]], "add() (ase2sprkkr.common.configuration_containers.configurationcontainer method)": [[713, "ase2sprkkr.common.configuration_containers.ConfigurationContainer.add"]], "as_dict() (ase2sprkkr.common.configuration_containers.configurationcontainer method)": [[713, "ase2sprkkr.common.configuration_containers.ConfigurationContainer.as_dict"]], "clear() (ase2sprkkr.common.configuration_containers.configurationcontainer method)": [[713, "ase2sprkkr.common.configuration_containers.ConfigurationContainer.clear"]], "get() (ase2sprkkr.common.configuration_containers.configurationcontainer method)": [[713, "ase2sprkkr.common.configuration_containers.ConfigurationContainer.get"]], "has_any_value() (ase2sprkkr.common.configuration_containers.configurationcontainer method)": [[713, "ase2sprkkr.common.configuration_containers.ConfigurationContainer.has_any_value"]], "is_changed() (ase2sprkkr.common.configuration_containers.configurationcontainer method)": [[713, "ase2sprkkr.common.configuration_containers.ConfigurationContainer.is_changed"]], "items() (ase2sprkkr.common.configuration_containers.configurationcontainer method)": [[713, "ase2sprkkr.common.configuration_containers.ConfigurationContainer.items"]], "remove_member() (ase2sprkkr.common.configuration_containers.configurationcontainer method)": [[713, "ase2sprkkr.common.configuration_containers.ConfigurationContainer.remove_member"]], "set() (ase2sprkkr.common.configuration_containers.configurationcontainer method)": [[713, "ase2sprkkr.common.configuration_containers.ConfigurationContainer.set"]], "validate() (ase2sprkkr.common.configuration_containers.configurationcontainer method)": [[713, "ase2sprkkr.common.configuration_containers.ConfigurationContainer.validate"]], "customsection (class in ase2sprkkr.common.configuration_containers)": [[714, "ase2sprkkr.common.configuration_containers.CustomSection"]], "__init__() (ase2sprkkr.common.configuration_containers.customsection method)": [[714, "ase2sprkkr.common.configuration_containers.CustomSection.__init__"]], "factory() (ase2sprkkr.common.configuration_containers.customsection class method)": [[714, "ase2sprkkr.common.configuration_containers.CustomSection.factory"]], "remove() (ase2sprkkr.common.configuration_containers.customsection method)": [[714, "ase2sprkkr.common.configuration_containers.CustomSection.remove"]], "dictadaptor (class in ase2sprkkr.common.configuration_containers)": [[715, "ase2sprkkr.common.configuration_containers.DictAdaptor"]], "__init__() (ase2sprkkr.common.configuration_containers.dictadaptor method)": [[715, "ase2sprkkr.common.configuration_containers.DictAdaptor.__init__"]], "disabledattributeerror": [[716, "ase2sprkkr.common.configuration_containers.DisabledAttributeError"]], "rootconfigurationcontainer (class in ase2sprkkr.common.configuration_containers)": [[717, "ase2sprkkr.common.configuration_containers.RootConfigurationContainer"]], "__init__() (ase2sprkkr.common.configuration_containers.rootconfigurationcontainer method)": [[717, "ase2sprkkr.common.configuration_containers.RootConfigurationContainer.__init__"]], "find() (ase2sprkkr.common.configuration_containers.rootconfigurationcontainer method)": [[717, "ase2sprkkr.common.configuration_containers.RootConfigurationContainer.find"]], "name_in_grammar (ase2sprkkr.common.configuration_containers.rootconfigurationcontainer attribute)": [[717, "ase2sprkkr.common.configuration_containers.RootConfigurationContainer.name_in_grammar"]], "read_from_file() (ase2sprkkr.common.configuration_containers.rootconfigurationcontainer method)": [[717, "ase2sprkkr.common.configuration_containers.RootConfigurationContainer.read_from_file"]], "section (class in ase2sprkkr.common.configuration_containers)": [[718, "ase2sprkkr.common.configuration_containers.Section"]], "__init__() (ase2sprkkr.common.configuration_containers.section method)": [[718, "ase2sprkkr.common.configuration_containers.Section.__init__"]], "definition (ase2sprkkr.common.configuration_containers.section property)": [[718, "ase2sprkkr.common.configuration_containers.Section.definition"]], "ase2sprkkr.common.configuration_definitions": [[719, "module-ase2sprkkr.common.configuration_definitions"]], "basedefinition (class in ase2sprkkr.common.configuration_definitions)": [[720, "ase2sprkkr.common.configuration_definitions.BaseDefinition"]], "__init__() (ase2sprkkr.common.configuration_definitions.basedefinition method)": [[720, "ase2sprkkr.common.configuration_definitions.BaseDefinition.__init__"]], "_add_hooks_to_grammar() (ase2sprkkr.common.configuration_definitions.basedefinition method)": [[720, "ase2sprkkr.common.configuration_definitions.BaseDefinition._add_hooks_to_grammar"]], "_copy_excluded_args (ase2sprkkr.common.configuration_definitions.basedefinition attribute)": [[720, "ase2sprkkr.common.configuration_definitions.BaseDefinition._copy_excluded_args"]], "_get_copy_args() (ase2sprkkr.common.configuration_definitions.basedefinition method)": [[720, "ase2sprkkr.common.configuration_definitions.BaseDefinition._get_copy_args"]], "_grammar (ase2sprkkr.common.configuration_definitions.basedefinition property)": [[720, "ase2sprkkr.common.configuration_definitions.BaseDefinition._grammar"]], "_hooked_grammar() (ase2sprkkr.common.configuration_definitions.basedefinition method)": [[720, "ase2sprkkr.common.configuration_definitions.BaseDefinition._hooked_grammar"]], "accept_value() (ase2sprkkr.common.configuration_definitions.basedefinition method)": [[720, "ase2sprkkr.common.configuration_definitions.BaseDefinition.accept_value"]], "add_grammar_hook() (ase2sprkkr.common.configuration_definitions.basedefinition method)": [[720, "ase2sprkkr.common.configuration_definitions.BaseDefinition.add_grammar_hook"]], "added_to_container() (ase2sprkkr.common.configuration_definitions.basedefinition method)": [[720, "ase2sprkkr.common.configuration_definitions.BaseDefinition.added_to_container"]], "can_be_repeated (ase2sprkkr.common.configuration_definitions.basedefinition attribute)": [[720, "ase2sprkkr.common.configuration_definitions.BaseDefinition.can_be_repeated"]], "copy() (ase2sprkkr.common.configuration_definitions.basedefinition method)": [[720, "ase2sprkkr.common.configuration_definitions.BaseDefinition.copy"]], "create_object() (ase2sprkkr.common.configuration_definitions.basedefinition method)": [[720, "ase2sprkkr.common.configuration_definitions.BaseDefinition.create_object"]], "description() (ase2sprkkr.common.configuration_definitions.basedefinition method)": [[720, "ase2sprkkr.common.configuration_definitions.BaseDefinition.description"]], "enrich() (ase2sprkkr.common.configuration_definitions.basedefinition method)": [[720, "ase2sprkkr.common.configuration_definitions.BaseDefinition.enrich"]], "get_path() (ase2sprkkr.common.configuration_definitions.basedefinition method)": [[720, "ase2sprkkr.common.configuration_definitions.BaseDefinition.get_path"]], "grammar() (ase2sprkkr.common.configuration_definitions.basedefinition method)": [[720, "ase2sprkkr.common.configuration_definitions.BaseDefinition.grammar"]], "has_grammar() (ase2sprkkr.common.configuration_definitions.basedefinition method)": [[720, "ase2sprkkr.common.configuration_definitions.BaseDefinition.has_grammar"]], "has_name() (ase2sprkkr.common.configuration_definitions.basedefinition method)": [[720, "ase2sprkkr.common.configuration_definitions.BaseDefinition.has_name"]], "info() (ase2sprkkr.common.configuration_definitions.basedefinition method)": [[720, "ase2sprkkr.common.configuration_definitions.BaseDefinition.info"]], "is_independent_on_the_predecessor (ase2sprkkr.common.configuration_definitions.basedefinition attribute)": [[720, "ase2sprkkr.common.configuration_definitions.BaseDefinition.is_independent_on_the_predecessor"]], "output_definition (ase2sprkkr.common.configuration_definitions.basedefinition property)": [[720, "ase2sprkkr.common.configuration_definitions.BaseDefinition.output_definition"]], "remove_grammar_hook() (ase2sprkkr.common.configuration_definitions.basedefinition method)": [[720, "ase2sprkkr.common.configuration_definitions.BaseDefinition.remove_grammar_hook"]], "controldefinition (class in ase2sprkkr.common.configuration_definitions)": [[721, "ase2sprkkr.common.configuration_definitions.ControlDefinition"]], "__init__() (ase2sprkkr.common.configuration_definitions.controldefinition method)": [[721, "ase2sprkkr.common.configuration_definitions.ControlDefinition.__init__"]], "_grammar (ase2sprkkr.common.configuration_definitions.controldefinition attribute)": [[721, "ase2sprkkr.common.configuration_definitions.ControlDefinition._grammar"]], "gather (class in ase2sprkkr.common.configuration_definitions)": [[722, "ase2sprkkr.common.configuration_definitions.Gather"]], "__init__() (ase2sprkkr.common.configuration_definitions.gather method)": [[722, "ase2sprkkr.common.configuration_definitions.Gather.__init__"]], "_grammar() (ase2sprkkr.common.configuration_definitions.gather method)": [[722, "ase2sprkkr.common.configuration_definitions.Gather._grammar"]], "_save_to_file() (ase2sprkkr.common.configuration_definitions.gather method)": [[722, "ase2sprkkr.common.configuration_definitions.Gather._save_to_file"]], "ignored (class in ase2sprkkr.common.configuration_definitions)": [[723, "ase2sprkkr.common.configuration_definitions.Ignored"]], "__init__() (ase2sprkkr.common.configuration_definitions.ignored method)": [[723, "ase2sprkkr.common.configuration_definitions.Ignored.__init__"]], "_grammar (ase2sprkkr.common.configuration_definitions.ignored attribute)": [[723, "ase2sprkkr.common.configuration_definitions.Ignored._grammar"]], "_save_to_file() (ase2sprkkr.common.configuration_definitions.ignored method)": [[723, "ase2sprkkr.common.configuration_definitions.Ignored._save_to_file"]], "has_grammar() (ase2sprkkr.common.configuration_definitions.ignored method)": [[723, "ase2sprkkr.common.configuration_definitions.Ignored.has_grammar"]], "singleton (ase2sprkkr.common.configuration_definitions.ignored attribute)": [[723, "ase2sprkkr.common.configuration_definitions.Ignored.singleton"]], "realitemdefinition (class in ase2sprkkr.common.configuration_definitions)": [[724, "ase2sprkkr.common.configuration_definitions.RealItemDefinition"]], "__init__() (ase2sprkkr.common.configuration_definitions.realitemdefinition method)": [[724, "ase2sprkkr.common.configuration_definitions.RealItemDefinition.__init__"]], "_copy_excluded_args (ase2sprkkr.common.configuration_definitions.realitemdefinition attribute)": [[724, "ase2sprkkr.common.configuration_definitions.RealItemDefinition._copy_excluded_args"]], "_description (ase2sprkkr.common.configuration_definitions.realitemdefinition attribute)": [[724, "ase2sprkkr.common.configuration_definitions.RealItemDefinition._description"]], "_description_indentation (ase2sprkkr.common.configuration_definitions.realitemdefinition attribute)": [[724, "ase2sprkkr.common.configuration_definitions.RealItemDefinition._description_indentation"]], "_grammar_of_name() (ase2sprkkr.common.configuration_definitions.realitemdefinition method)": [[724, "ase2sprkkr.common.configuration_definitions.RealItemDefinition._grammar_of_name"]], "_info (ase2sprkkr.common.configuration_definitions.realitemdefinition attribute)": [[724, "ase2sprkkr.common.configuration_definitions.RealItemDefinition._info"]], "_tuple_with_my_name() (ase2sprkkr.common.configuration_definitions.realitemdefinition method)": [[724, "ase2sprkkr.common.configuration_definitions.RealItemDefinition._tuple_with_my_name"]], "all_names_in_grammar() (ase2sprkkr.common.configuration_definitions.realitemdefinition method)": [[724, "ase2sprkkr.common.configuration_definitions.RealItemDefinition.all_names_in_grammar"]], "allow_duplication() (ase2sprkkr.common.configuration_definitions.realitemdefinition method)": [[724, "ase2sprkkr.common.configuration_definitions.RealItemDefinition.allow_duplication"]], "description() (ase2sprkkr.common.configuration_definitions.realitemdefinition method)": [[724, "ase2sprkkr.common.configuration_definitions.RealItemDefinition.description"]], "do_not_skip_whitespaces_before_name (ase2sprkkr.common.configuration_definitions.realitemdefinition attribute)": [[724, "ase2sprkkr.common.configuration_definitions.RealItemDefinition.do_not_skip_whitespaces_before_name"]], "has_name() (ase2sprkkr.common.configuration_definitions.realitemdefinition method)": [[724, "ase2sprkkr.common.configuration_definitions.RealItemDefinition.has_name"]], "info() (ase2sprkkr.common.configuration_definitions.realitemdefinition method)": [[724, "ase2sprkkr.common.configuration_definitions.RealItemDefinition.info"]], "is_hidden (ase2sprkkr.common.configuration_definitions.realitemdefinition attribute)": [[724, "ase2sprkkr.common.configuration_definitions.RealItemDefinition.is_hidden"]], "is_independent_on_the_predecessor (ase2sprkkr.common.configuration_definitions.realitemdefinition property)": [[724, "ase2sprkkr.common.configuration_definitions.RealItemDefinition.is_independent_on_the_predecessor"]], "name_in_grammar (ase2sprkkr.common.configuration_definitions.realitemdefinition attribute)": [[724, "ase2sprkkr.common.configuration_definitions.RealItemDefinition.name_in_grammar"]], "result_class (ase2sprkkr.common.configuration_definitions.realitemdefinition attribute)": [[724, "ase2sprkkr.common.configuration_definitions.RealItemDefinition.result_class"]], "validate_warning() (ase2sprkkr.common.configuration_definitions.realitemdefinition method)": [[724, "ase2sprkkr.common.configuration_definitions.RealItemDefinition.validate_warning"]], "written_name (ase2sprkkr.common.configuration_definitions.realitemdefinition attribute)": [[724, "ase2sprkkr.common.configuration_definitions.RealItemDefinition.written_name"]], "separatordefinition (class in ase2sprkkr.common.configuration_definitions)": [[725, "ase2sprkkr.common.configuration_definitions.SeparatorDefinition"]], "__init__() (ase2sprkkr.common.configuration_definitions.separatordefinition method)": [[725, "ase2sprkkr.common.configuration_definitions.SeparatorDefinition.__init__"]], "_create_grammar() (ase2sprkkr.common.configuration_definitions.separatordefinition method)": [[725, "ase2sprkkr.common.configuration_definitions.SeparatorDefinition._create_grammar"]], "_save_to_file() (ase2sprkkr.common.configuration_definitions.separatordefinition method)": [[725, "ase2sprkkr.common.configuration_definitions.SeparatorDefinition._save_to_file"]], "stub (class in ase2sprkkr.common.configuration_definitions)": [[726, "ase2sprkkr.common.configuration_definitions.Stub"]], "__init__() (ase2sprkkr.common.configuration_definitions.stub method)": [[726, "ase2sprkkr.common.configuration_definitions.Stub.__init__"]], "_create_grammar() (ase2sprkkr.common.configuration_definitions.stub method)": [[726, "ase2sprkkr.common.configuration_definitions.Stub._create_grammar"]], "_save_to_file() (ase2sprkkr.common.configuration_definitions.stub method)": [[726, "ase2sprkkr.common.configuration_definitions.Stub._save_to_file"]], "switch (class in ase2sprkkr.common.configuration_definitions)": [[727, "ase2sprkkr.common.configuration_definitions.Switch"]], "__init__() (ase2sprkkr.common.configuration_definitions.switch method)": [[727, "ase2sprkkr.common.configuration_definitions.Switch.__init__"]], "added_to_container() (ase2sprkkr.common.configuration_definitions.switch method)": [[727, "ase2sprkkr.common.configuration_definitions.Switch.added_to_container"]], "all_values() (ase2sprkkr.common.configuration_definitions.switch method)": [[727, "ase2sprkkr.common.configuration_definitions.Switch.all_values"]], "copy() (ase2sprkkr.common.configuration_definitions.switch method)": [[727, "ase2sprkkr.common.configuration_definitions.Switch.copy"]], "create_object (ase2sprkkr.common.configuration_definitions.switch attribute)": [[727, "ase2sprkkr.common.configuration_definitions.Switch.create_object"]], "empty (ase2sprkkr.common.configuration_definitions.switch attribute)": [[727, "ase2sprkkr.common.configuration_definitions.Switch.empty"]], "item_hook() (ase2sprkkr.common.configuration_definitions.switch method)": [[727, "ase2sprkkr.common.configuration_definitions.Switch.item_hook"]], "prepare_grammar() (ase2sprkkr.common.configuration_definitions.switch method)": [[727, "ase2sprkkr.common.configuration_definitions.Switch.prepare_grammar"]], "remove_from_container() (ase2sprkkr.common.configuration_definitions.switch method)": [[727, "ase2sprkkr.common.configuration_definitions.Switch.remove_from_container"]], "virtualdefinition (class in ase2sprkkr.common.configuration_definitions)": [[728, "ase2sprkkr.common.configuration_definitions.VirtualDefinition"]], "__init__() (ase2sprkkr.common.configuration_definitions.virtualdefinition method)": [[728, "ase2sprkkr.common.configuration_definitions.VirtualDefinition.__init__"]], "all_names_in_grammar() (ase2sprkkr.common.configuration_definitions.virtualdefinition method)": [[728, "ase2sprkkr.common.configuration_definitions.VirtualDefinition.all_names_in_grammar"]], "counter (ase2sprkkr.common.configuration_definitions.virtualdefinition attribute)": [[728, "ase2sprkkr.common.configuration_definitions.VirtualDefinition.counter"]], "create_object() (ase2sprkkr.common.configuration_definitions.virtualdefinition method)": [[728, "ase2sprkkr.common.configuration_definitions.VirtualDefinition.create_object"]], "is_hidden (ase2sprkkr.common.configuration_definitions.virtualdefinition attribute)": [[728, "ase2sprkkr.common.configuration_definitions.VirtualDefinition.is_hidden"]], "gather() (in module ase2sprkkr.common.configuration_definitions)": [[729, "ase2sprkkr.common.configuration_definitions.gather"]], "switch() (in module ase2sprkkr.common.configuration_definitions)": [[730, "ase2sprkkr.common.configuration_definitions.switch"]], "ase2sprkkr.common.container_definitions": [[731, "module-ase2sprkkr.common.container_definitions"]], "configurationrootdefinition (class in ase2sprkkr.common.container_definitions)": [[732, "ase2sprkkr.common.container_definitions.ConfigurationRootDefinition"]], "__init__() (ase2sprkkr.common.container_definitions.configurationrootdefinition method)": [[732, "ase2sprkkr.common.container_definitions.ConfigurationRootDefinition.__init__"]], "_create_grammar() (ase2sprkkr.common.container_definitions.configurationrootdefinition method)": [[732, "ase2sprkkr.common.container_definitions.ConfigurationRootDefinition._create_grammar"]], "_tuple_with_my_name() (ase2sprkkr.common.container_definitions.configurationrootdefinition method)": [[732, "ase2sprkkr.common.container_definitions.ConfigurationRootDefinition._tuple_with_my_name"]], "add_ignored() (ase2sprkkr.common.container_definitions.configurationrootdefinition method)": [[732, "ase2sprkkr.common.container_definitions.ConfigurationRootDefinition.add_ignored"]], "custom_value_name (ase2sprkkr.common.container_definitions.configurationrootdefinition attribute)": [[732, "ase2sprkkr.common.container_definitions.ConfigurationRootDefinition.custom_value_name"]], "definition_from_dict() (ase2sprkkr.common.container_definitions.configurationrootdefinition class method)": [[732, "ase2sprkkr.common.container_definitions.ConfigurationRootDefinition.definition_from_dict"]], "name_in_grammar (ase2sprkkr.common.container_definitions.configurationrootdefinition attribute)": [[732, "ase2sprkkr.common.container_definitions.ConfigurationRootDefinition.name_in_grammar"]], "parse_return() (ase2sprkkr.common.container_definitions.configurationrootdefinition method)": [[732, "ase2sprkkr.common.container_definitions.ConfigurationRootDefinition.parse_return"]], "sections (ase2sprkkr.common.container_definitions.configurationrootdefinition property)": [[732, "ase2sprkkr.common.container_definitions.ConfigurationRootDefinition.sections"]], "write_last_delimiter (ase2sprkkr.common.container_definitions.configurationrootdefinition attribute)": [[732, "ase2sprkkr.common.container_definitions.ConfigurationRootDefinition.write_last_delimiter"]], "containerdefinition (class in ase2sprkkr.common.container_definitions)": [[733, "ase2sprkkr.common.container_definitions.ContainerDefinition"]], "__init__() (ase2sprkkr.common.container_definitions.containerdefinition method)": [[733, "ase2sprkkr.common.container_definitions.ContainerDefinition.__init__"]], "_allow_duplicates_of() (ase2sprkkr.common.container_definitions.containerdefinition method)": [[733, "ase2sprkkr.common.container_definitions.ContainerDefinition._allow_duplicates_of"]], "_create_grammar() (ase2sprkkr.common.container_definitions.containerdefinition method)": [[733, "ase2sprkkr.common.container_definitions.ContainerDefinition._create_grammar"]], "_dict_from_named_values() (ase2sprkkr.common.container_definitions.containerdefinition static method)": [[733, "ase2sprkkr.common.container_definitions.ContainerDefinition._dict_from_named_values"]], "_first_section_has_to_be_first() (ase2sprkkr.common.container_definitions.containerdefinition method)": [[733, "ase2sprkkr.common.container_definitions.ContainerDefinition._first_section_has_to_be_first"]], "_grammar_of_values() (ase2sprkkr.common.container_definitions.containerdefinition method)": [[733, "ase2sprkkr.common.container_definitions.ContainerDefinition._grammar_of_values"]], "_save_to_file() (ase2sprkkr.common.container_definitions.containerdefinition method)": [[733, "ase2sprkkr.common.container_definitions.ContainerDefinition._save_to_file"]], "additional_data_description() (ase2sprkkr.common.container_definitions.containerdefinition method)": [[733, "ase2sprkkr.common.container_definitions.ContainerDefinition.additional_data_description"]], "all_member_names() (ase2sprkkr.common.container_definitions.containerdefinition method)": [[733, "ase2sprkkr.common.container_definitions.ContainerDefinition.all_member_names"]], "allow_duplication() (ase2sprkkr.common.container_definitions.containerdefinition method)": [[733, "ase2sprkkr.common.container_definitions.ContainerDefinition.allow_duplication"]], "configuration_type_name (ase2sprkkr.common.container_definitions.containerdefinition attribute)": [[733, "ase2sprkkr.common.container_definitions.ContainerDefinition.configuration_type_name"]], "copy() (ase2sprkkr.common.container_definitions.containerdefinition method)": [[733, "ase2sprkkr.common.container_definitions.ContainerDefinition.copy"]], "copy_member() (ase2sprkkr.common.container_definitions.containerdefinition method)": [[733, "ase2sprkkr.common.container_definitions.ContainerDefinition.copy_member"]], "create_object() (ase2sprkkr.common.container_definitions.containerdefinition method)": [[733, "ase2sprkkr.common.container_definitions.ContainerDefinition.create_object"]], "custom_member_grammar() (ase2sprkkr.common.container_definitions.containerdefinition class method)": [[733, "ase2sprkkr.common.container_definitions.ContainerDefinition.custom_member_grammar"]], "custom_name_characters (ase2sprkkr.common.container_definitions.containerdefinition attribute)": [[733, "ase2sprkkr.common.container_definitions.ContainerDefinition.custom_name_characters"]], "data_description() (ase2sprkkr.common.container_definitions.containerdefinition method)": [[733, "ase2sprkkr.common.container_definitions.ContainerDefinition.data_description"]], "delimited_custom_value_grammar() (ase2sprkkr.common.container_definitions.containerdefinition class method)": [[733, "ase2sprkkr.common.container_definitions.ContainerDefinition.delimited_custom_value_grammar"]], "force_order (ase2sprkkr.common.container_definitions.containerdefinition attribute)": [[733, "ase2sprkkr.common.container_definitions.ContainerDefinition.force_order"]], "members() (ase2sprkkr.common.container_definitions.containerdefinition method)": [[733, "ase2sprkkr.common.container_definitions.ContainerDefinition.members"]], "names() (ase2sprkkr.common.container_definitions.containerdefinition method)": [[733, "ase2sprkkr.common.container_definitions.ContainerDefinition.names"]], "parse() (ase2sprkkr.common.container_definitions.containerdefinition method)": [[733, "ase2sprkkr.common.container_definitions.ContainerDefinition.parse"]], "parse_file() (ase2sprkkr.common.container_definitions.containerdefinition method)": [[733, "ase2sprkkr.common.container_definitions.ContainerDefinition.parse_file"]], "parse_from_stream() (ase2sprkkr.common.container_definitions.containerdefinition method)": [[733, "ase2sprkkr.common.container_definitions.ContainerDefinition.parse_from_stream"]], "parse_return() (ase2sprkkr.common.container_definitions.containerdefinition method)": [[733, "ase2sprkkr.common.container_definitions.ContainerDefinition.parse_return"]], "read_from_dict() (ase2sprkkr.common.container_definitions.containerdefinition method)": [[733, "ase2sprkkr.common.container_definitions.ContainerDefinition.read_from_dict"]], "read_from_file() (ase2sprkkr.common.container_definitions.containerdefinition method)": [[733, "ase2sprkkr.common.container_definitions.ContainerDefinition.read_from_file"]], "read_from_string() (ase2sprkkr.common.container_definitions.containerdefinition method)": [[733, "ase2sprkkr.common.container_definitions.ContainerDefinition.read_from_string"]], "remove() (ase2sprkkr.common.container_definitions.containerdefinition method)": [[733, "ase2sprkkr.common.container_definitions.ContainerDefinition.remove"]], "repeated_class (ase2sprkkr.common.container_definitions.containerdefinition attribute)": [[733, "ase2sprkkr.common.container_definitions.ContainerDefinition.repeated_class"]], "validate() (ase2sprkkr.common.container_definitions.containerdefinition method)": [[733, "ase2sprkkr.common.container_definitions.ContainerDefinition.validate"]], "value_name_format (ase2sprkkr.common.container_definitions.containerdefinition attribute)": [[733, "ase2sprkkr.common.container_definitions.ContainerDefinition.value_name_format"]], "write_last_delimiter (ase2sprkkr.common.container_definitions.containerdefinition attribute)": [[733, "ase2sprkkr.common.container_definitions.ContainerDefinition.write_last_delimiter"]], "mergedictadaptor (class in ase2sprkkr.common.container_definitions)": [[734, "ase2sprkkr.common.container_definitions.MergeDictAdaptor"]], "__init__() (ase2sprkkr.common.container_definitions.mergedictadaptor method)": [[734, "ase2sprkkr.common.container_definitions.MergeDictAdaptor.__init__"]], "sectiondefinition (class in ase2sprkkr.common.container_definitions)": [[735, "ase2sprkkr.common.container_definitions.SectionDefinition"]], "__init__() (ase2sprkkr.common.container_definitions.sectiondefinition method)": [[735, "ase2sprkkr.common.container_definitions.SectionDefinition.__init__"]], "_generic_info() (ase2sprkkr.common.container_definitions.sectiondefinition method)": [[735, "ase2sprkkr.common.container_definitions.SectionDefinition._generic_info"]], "accept_value() (ase2sprkkr.common.container_definitions.sectiondefinition method)": [[735, "ase2sprkkr.common.container_definitions.SectionDefinition.accept_value"]], "custom_value_name (ase2sprkkr.common.container_definitions.sectiondefinition attribute)": [[735, "ase2sprkkr.common.container_definitions.SectionDefinition.custom_value_name"]], "delimited_custom_value_grammar() (ase2sprkkr.common.container_definitions.sectiondefinition class method)": [[735, "ase2sprkkr.common.container_definitions.SectionDefinition.delimited_custom_value_grammar"]], "result_class (ase2sprkkr.common.container_definitions.sectiondefinition attribute)": [[735, "ase2sprkkr.common.container_definitions.SectionDefinition.result_class"]], "values (ase2sprkkr.common.container_definitions.sectiondefinition property)": [[735, "ase2sprkkr.common.container_definitions.SectionDefinition.values"]], "add_excluded_names_condition() (in module ase2sprkkr.common.container_definitions)": [[736, "ase2sprkkr.common.container_definitions.add_excluded_names_condition"]], "dict_from_parsed() (in module ase2sprkkr.common.container_definitions)": [[737, "ase2sprkkr.common.container_definitions.dict_from_parsed"]], "ase2sprkkr.common.decorators": [[738, "module-ase2sprkkr.common.decorators"]], "add_called_class_as_argument() (in module ase2sprkkr.common.decorators)": [[739, "ase2sprkkr.common.decorators.add_called_class_as_argument"]], "add_to_signature() (in module ase2sprkkr.common.decorators)": [[740, "ase2sprkkr.common.decorators.add_to_signature"]], "cache() (in module ase2sprkkr.common.decorators)": [[741, "ase2sprkkr.common.decorators.cache"]], "__init__() (ase2sprkkr.common.decorators.cached_class_property method)": [[742, "ase2sprkkr.common.decorators.cached_class_property.__init__"]], "cached_class_property (class in ase2sprkkr.common.decorators)": [[742, "ase2sprkkr.common.decorators.cached_class_property"]], "__init__() (ase2sprkkr.common.decorators.cached_property method)": [[743, "ase2sprkkr.common.decorators.cached_property.__init__"]], "cached_property (class in ase2sprkkr.common.decorators)": [[743, "ase2sprkkr.common.decorators.cached_property"]], "deleter() (ase2sprkkr.common.decorators.cached_property method)": [[743, "ase2sprkkr.common.decorators.cached_property.deleter"]], "setter() (ase2sprkkr.common.decorators.cached_property method)": [[743, "ase2sprkkr.common.decorators.cached_property.setter"]], "__init__() (ase2sprkkr.common.decorators.class_property method)": [[744, "ase2sprkkr.common.decorators.class_property.__init__"]], "class_property (class in ase2sprkkr.common.decorators)": [[744, "ase2sprkkr.common.decorators.class_property"]], "__init__() (ase2sprkkr.common.decorators.maybeclassmethod method)": [[745, "ase2sprkkr.common.decorators.maybeclassmethod.__init__"]], "maybeclassmethod (class in ase2sprkkr.common.decorators)": [[745, "ase2sprkkr.common.decorators.maybeclassmethod"]], "std_cached_property (in module ase2sprkkr.common.decorators)": [[746, "ase2sprkkr.common.decorators.std_cached_property"]], "warnings_from_here() (in module ase2sprkkr.common.decorators)": [[747, "ase2sprkkr.common.decorators.warnings_from_here"]], "ase2sprkkr.common.directory": [[748, "module-ase2sprkkr.common.directory"]], "directory (class in ase2sprkkr.common.directory)": [[749, "ase2sprkkr.common.directory.Directory"]], "__init__() (ase2sprkkr.common.directory.directory method)": [[749, "ase2sprkkr.common.directory.Directory.__init__"]], "chdir() (ase2sprkkr.common.directory.directory method)": [[749, "ase2sprkkr.common.directory.Directory.chdir"]], "new() (ase2sprkkr.common.directory.directory method)": [[749, "ase2sprkkr.common.directory.Directory.new"]], "ase2sprkkr.common.doc": [[750, "module-ase2sprkkr.common.doc"]], "process_input_parameters_definition() (in module ase2sprkkr.common.doc)": [[751, "ase2sprkkr.common.doc.process_input_parameters_definition"]], "verbatim() (in module ase2sprkkr.common.doc)": [[752, "ase2sprkkr.common.doc.verbatim"]], "ase2sprkkr.common.formats": [[753, "module-ase2sprkkr.common.formats"]], "format_for_string() (in module ase2sprkkr.common.formats)": [[754, "ase2sprkkr.common.formats.format_for_string"]], "fortran_format() (in module ase2sprkkr.common.formats)": [[755, "ase2sprkkr.common.formats.fortran_format"]], "full_format_for_string() (in module ase2sprkkr.common.formats)": [[756, "ase2sprkkr.common.formats.full_format_for_string"]], "ase2sprkkr.common.generated_configuration_definitions": [[757, "module-ase2sprkkr.common.generated_configuration_definitions"]], "basegeneratedvaluedefinition (class in ase2sprkkr.common.generated_configuration_definitions)": [[758, "ase2sprkkr.common.generated_configuration_definitions.BaseGeneratedValueDefinition"]], "__init__() (ase2sprkkr.common.generated_configuration_definitions.basegeneratedvaluedefinition method)": [[758, "ase2sprkkr.common.generated_configuration_definitions.BaseGeneratedValueDefinition.__init__"]], "_grammar (ase2sprkkr.common.generated_configuration_definitions.basegeneratedvaluedefinition attribute)": [[758, "ase2sprkkr.common.generated_configuration_definitions.BaseGeneratedValueDefinition._grammar"]], "enrich() (ase2sprkkr.common.generated_configuration_definitions.basegeneratedvaluedefinition method)": [[758, "ase2sprkkr.common.generated_configuration_definitions.BaseGeneratedValueDefinition.enrich"]], "is_generated (ase2sprkkr.common.generated_configuration_definitions.basegeneratedvaluedefinition attribute)": [[758, "ase2sprkkr.common.generated_configuration_definitions.BaseGeneratedValueDefinition.is_generated"]], "is_stored (ase2sprkkr.common.generated_configuration_definitions.basegeneratedvaluedefinition attribute)": [[758, "ase2sprkkr.common.generated_configuration_definitions.BaseGeneratedValueDefinition.is_stored"]], "result_class (ase2sprkkr.common.generated_configuration_definitions.basegeneratedvaluedefinition attribute)": [[758, "ase2sprkkr.common.generated_configuration_definitions.BaseGeneratedValueDefinition.result_class"]], "generatedvaluedefinition (class in ase2sprkkr.common.generated_configuration_definitions)": [[759, "ase2sprkkr.common.generated_configuration_definitions.GeneratedValueDefinition"]], "__init__() (ase2sprkkr.common.generated_configuration_definitions.generatedvaluedefinition method)": [[759, "ase2sprkkr.common.generated_configuration_definitions.GeneratedValueDefinition.__init__"]], "setter (ase2sprkkr.common.generated_configuration_definitions.generatedvaluedefinition property)": [[759, "ase2sprkkr.common.generated_configuration_definitions.GeneratedValueDefinition.setter"]], "numpyviewdefinition (class in ase2sprkkr.common.generated_configuration_definitions)": [[760, "ase2sprkkr.common.generated_configuration_definitions.NumpyViewDefinition"]], "__init__() (ase2sprkkr.common.generated_configuration_definitions.numpyviewdefinition method)": [[760, "ase2sprkkr.common.generated_configuration_definitions.NumpyViewDefinition.__init__"]], "copy_value() (ase2sprkkr.common.generated_configuration_definitions.numpyviewdefinition method)": [[760, "ase2sprkkr.common.generated_configuration_definitions.NumpyViewDefinition.copy_value"]], "data_description() (ase2sprkkr.common.generated_configuration_definitions.numpyviewdefinition method)": [[760, "ase2sprkkr.common.generated_configuration_definitions.NumpyViewDefinition.data_description"]], "determine_shape() (ase2sprkkr.common.generated_configuration_definitions.numpyviewdefinition method)": [[760, "ase2sprkkr.common.generated_configuration_definitions.NumpyViewDefinition.determine_shape"]], "enrich() (ase2sprkkr.common.generated_configuration_definitions.numpyviewdefinition method)": [[760, "ase2sprkkr.common.generated_configuration_definitions.NumpyViewDefinition.enrich"]], "getter() (ase2sprkkr.common.generated_configuration_definitions.numpyviewdefinition method)": [[760, "ase2sprkkr.common.generated_configuration_definitions.NumpyViewDefinition.getter"]], "setter() (ase2sprkkr.common.generated_configuration_definitions.numpyviewdefinition method)": [[760, "ase2sprkkr.common.generated_configuration_definitions.NumpyViewDefinition.setter"]], "source() (ase2sprkkr.common.generated_configuration_definitions.numpyviewdefinition method)": [[760, "ase2sprkkr.common.generated_configuration_definitions.NumpyViewDefinition.source"]], "ase2sprkkr.common.grammar": [[761, "module-ase2sprkkr.common.grammar"]], "skiptoregex (class in ase2sprkkr.common.grammar)": [[762, "ase2sprkkr.common.grammar.SkipToRegex"]], "__init__() (ase2sprkkr.common.grammar.skiptoregex method)": [[762, "ase2sprkkr.common.grammar.SkipToRegex.__init__"]], "_abc_impl (ase2sprkkr.common.grammar.skiptoregex attribute)": [[762, "ase2sprkkr.common.grammar.SkipToRegex._abc_impl"]], "custom_name (ase2sprkkr.common.grammar.skiptoregex property)": [[762, "ase2sprkkr.common.grammar.SkipToRegex.custom_name"]], "parseimpl() (ase2sprkkr.common.grammar.skiptoregex method)": [[762, "ase2sprkkr.common.grammar.SkipToRegex.parseImpl"]], "white (class in ase2sprkkr.common.grammar)": [[763, "ase2sprkkr.common.grammar.White"]], "__init__() (ase2sprkkr.common.grammar.white method)": [[763, "ase2sprkkr.common.grammar.White.__init__"]], "_abc_impl (ase2sprkkr.common.grammar.white attribute)": [[763, "ase2sprkkr.common.grammar.White._abc_impl"]], "addconditionex() (in module ase2sprkkr.common.grammar)": [[764, "ase2sprkkr.common.grammar.addConditionEx"]], "addparseactionex() (in module ase2sprkkr.common.grammar)": [[765, "ase2sprkkr.common.grammar.addParseActionEx"]], "delimitedlist() (in module ase2sprkkr.common.grammar)": [[766, "ase2sprkkr.common.grammar.delimitedList"]], "end_of_file (in module ase2sprkkr.common.grammar)": [[767, "ase2sprkkr.common.grammar.end_of_file"]], "generate_grammar() (in module ase2sprkkr.common.grammar)": [[768, "ase2sprkkr.common.grammar.generate_grammar"]], "line_end (in module ase2sprkkr.common.grammar)": [[769, "ase2sprkkr.common.grammar.line_end"]], "optional_line_end (in module ase2sprkkr.common.grammar)": [[770, "ase2sprkkr.common.grammar.optional_line_end"]], "optional_quote (in module ase2sprkkr.common.grammar)": [[771, "ase2sprkkr.common.grammar.optional_quote"]], "replace_whitechars() (in module ase2sprkkr.common.grammar)": [[772, "ase2sprkkr.common.grammar.replace_whitechars"]], "separator_grammar() (in module ase2sprkkr.common.grammar)": [[773, "ase2sprkkr.common.grammar.separator_grammar"]], "separator_pattern() (in module ase2sprkkr.common.grammar)": [[774, "ase2sprkkr.common.grammar.separator_pattern"]], "ase2sprkkr.common.grammar_types": [[775, "module-ase2sprkkr.common.grammar_types"]], "ase2sprkkr.common.grammar_types.arrays": [[776, "module-ase2sprkkr.common.grammar_types.arrays"]], "array (class in ase2sprkkr.common.grammar_types.arrays)": [[777, "ase2sprkkr.common.grammar_types.arrays.Array"]], "__init__() (ase2sprkkr.common.grammar_types.arrays.array method)": [[777, "ase2sprkkr.common.grammar_types.arrays.Array.__init__"]], "_set_convert_action() (ase2sprkkr.common.grammar_types.arrays.array method)": [[777, "ase2sprkkr.common.grammar_types.arrays.Array._set_convert_action"]], "_string() (ase2sprkkr.common.grammar_types.arrays.array method)": [[777, "ase2sprkkr.common.grammar_types.arrays.Array._string"]], "_validate() (ase2sprkkr.common.grammar_types.arrays.array method)": [[777, "ase2sprkkr.common.grammar_types.arrays.Array._validate"]], "array_access (ase2sprkkr.common.grammar_types.arrays.array attribute)": [[777, "ase2sprkkr.common.grammar_types.arrays.Array.array_access"]], "convert() (ase2sprkkr.common.grammar_types.arrays.array method)": [[777, "ase2sprkkr.common.grammar_types.arrays.Array.convert"]], "delimiter (ase2sprkkr.common.grammar_types.arrays.array attribute)": [[777, "ase2sprkkr.common.grammar_types.arrays.Array.delimiter"]], "delimiter_str (ase2sprkkr.common.grammar_types.arrays.array attribute)": [[777, "ase2sprkkr.common.grammar_types.arrays.Array.delimiter_str"]], "grammar_name() (ase2sprkkr.common.grammar_types.arrays.array method)": [[777, "ase2sprkkr.common.grammar_types.arrays.Array.grammar_name"]], "is_the_same_value() (ase2sprkkr.common.grammar_types.arrays.array static method)": [[777, "ase2sprkkr.common.grammar_types.arrays.Array.is_the_same_value"]], "complex (class in ase2sprkkr.common.grammar_types.arrays)": [[778, "ase2sprkkr.common.grammar_types.arrays.Complex"]], "i (ase2sprkkr.common.grammar_types.arrays.complex attribute)": [[778, "ase2sprkkr.common.grammar_types.arrays.Complex.I"]], "__init__() (ase2sprkkr.common.grammar_types.arrays.complex method)": [[778, "ase2sprkkr.common.grammar_types.arrays.Complex.__init__"]], "_grammar_name() (ase2sprkkr.common.grammar_types.arrays.complex method)": [[778, "ase2sprkkr.common.grammar_types.arrays.Complex._grammar_name"]], "_string() (ase2sprkkr.common.grammar_types.arrays.complex method)": [[778, "ase2sprkkr.common.grammar_types.arrays.Complex._string"]], "_validate() (ase2sprkkr.common.grammar_types.arrays.complex method)": [[778, "ase2sprkkr.common.grammar_types.arrays.Complex._validate"]], "array_access (ase2sprkkr.common.grammar_types.arrays.complex attribute)": [[778, "ase2sprkkr.common.grammar_types.arrays.Complex.array_access"]], "convert() (ase2sprkkr.common.grammar_types.arrays.complex method)": [[778, "ase2sprkkr.common.grammar_types.arrays.Complex.convert"]], "sequence (class in ase2sprkkr.common.grammar_types.arrays)": [[779, "ase2sprkkr.common.grammar_types.arrays.Sequence"]], "__init__() (ase2sprkkr.common.grammar_types.arrays.sequence method)": [[779, "ase2sprkkr.common.grammar_types.arrays.Sequence.__init__"]], "_grammar() (ase2sprkkr.common.grammar_types.arrays.sequence method)": [[779, "ase2sprkkr.common.grammar_types.arrays.Sequence._grammar"]], "_string() (ase2sprkkr.common.grammar_types.arrays.sequence method)": [[779, "ase2sprkkr.common.grammar_types.arrays.Sequence._string"]], "_validate() (ase2sprkkr.common.grammar_types.arrays.sequence method)": [[779, "ase2sprkkr.common.grammar_types.arrays.Sequence._validate"]], "convert() (ase2sprkkr.common.grammar_types.arrays.sequence method)": [[779, "ase2sprkkr.common.grammar_types.arrays.Sequence.convert"]], "enrich() (ase2sprkkr.common.grammar_types.arrays.sequence method)": [[779, "ase2sprkkr.common.grammar_types.arrays.Sequence.enrich"]], "grammar_name() (ase2sprkkr.common.grammar_types.arrays.sequence method)": [[779, "ase2sprkkr.common.grammar_types.arrays.Sequence.grammar_name"]], "is_the_same_value() (ase2sprkkr.common.grammar_types.arrays.sequence static method)": [[779, "ase2sprkkr.common.grammar_types.arrays.Sequence.is_the_same_value"]], "setof (class in ase2sprkkr.common.grammar_types.arrays)": [[780, "ase2sprkkr.common.grammar_types.arrays.SetOf"]], "__init__() (ase2sprkkr.common.grammar_types.arrays.setof method)": [[780, "ase2sprkkr.common.grammar_types.arrays.SetOf.__init__"]], "copy_value() (ase2sprkkr.common.grammar_types.arrays.setof method)": [[780, "ase2sprkkr.common.grammar_types.arrays.SetOf.copy_value"]], "delimiter (ase2sprkkr.common.grammar_types.arrays.setof attribute)": [[780, "ase2sprkkr.common.grammar_types.arrays.SetOf.delimiter"]], "delimiter_str (ase2sprkkr.common.grammar_types.arrays.setof attribute)": [[780, "ase2sprkkr.common.grammar_types.arrays.SetOf.delimiter_str"]], "transform_grammar() (ase2sprkkr.common.grammar_types.arrays.setof method)": [[780, "ase2sprkkr.common.grammar_types.arrays.SetOf.transform_grammar"]], "specialcolumn (class in ase2sprkkr.common.grammar_types.arrays)": [[781, "ase2sprkkr.common.grammar_types.arrays.SpecialColumn"]], "__init__() (ase2sprkkr.common.grammar_types.arrays.specialcolumn method)": [[781, "ase2sprkkr.common.grammar_types.arrays.SpecialColumn.__init__"]], "add_grammar() (ase2sprkkr.common.grammar_types.arrays.specialcolumn method)": [[781, "ase2sprkkr.common.grammar_types.arrays.SpecialColumn.add_grammar"]], "add_header_grammar() (ase2sprkkr.common.grammar_types.arrays.specialcolumn method)": [[781, "ase2sprkkr.common.grammar_types.arrays.SpecialColumn.add_header_grammar"]], "format_string() (ase2sprkkr.common.grammar_types.arrays.specialcolumn method)": [[781, "ase2sprkkr.common.grammar_types.arrays.SpecialColumn.format_string"]], "header() (ase2sprkkr.common.grammar_types.arrays.specialcolumn method)": [[781, "ase2sprkkr.common.grammar_types.arrays.SpecialColumn.header"]], "table (class in ase2sprkkr.common.grammar_types.arrays)": [[782, "ase2sprkkr.common.grammar_types.arrays.Table"]], "__init__() (ase2sprkkr.common.grammar_types.arrays.table method)": [[782, "ase2sprkkr.common.grammar_types.arrays.Table.__init__"]], "_grammar() (ase2sprkkr.common.grammar_types.arrays.table method)": [[782, "ase2sprkkr.common.grammar_types.arrays.Table._grammar"]], "_numpy_type (ase2sprkkr.common.grammar_types.arrays.table property)": [[782, "ase2sprkkr.common.grammar_types.arrays.Table._numpy_type"]], "_string() (ase2sprkkr.common.grammar_types.arrays.table method)": [[782, "ase2sprkkr.common.grammar_types.arrays.Table._string"]], "_validate() (ase2sprkkr.common.grammar_types.arrays.table method)": [[782, "ase2sprkkr.common.grammar_types.arrays.Table._validate"]], "array_access (ase2sprkkr.common.grammar_types.arrays.table attribute)": [[782, "ase2sprkkr.common.grammar_types.arrays.Table.array_access"]], "convert() (ase2sprkkr.common.grammar_types.arrays.table method)": [[782, "ase2sprkkr.common.grammar_types.arrays.Table.convert"]], "grammar_name() (ase2sprkkr.common.grammar_types.arrays.table method)": [[782, "ase2sprkkr.common.grammar_types.arrays.Table.grammar_name"]], "is_the_same_value() (ase2sprkkr.common.grammar_types.arrays.table static method)": [[782, "ase2sprkkr.common.grammar_types.arrays.Table.is_the_same_value"]], "name_in_grammar (ase2sprkkr.common.grammar_types.arrays.table attribute)": [[782, "ase2sprkkr.common.grammar_types.arrays.Table.name_in_grammar"]], "number_of_columns() (ase2sprkkr.common.grammar_types.arrays.table method)": [[782, "ase2sprkkr.common.grammar_types.arrays.Table.number_of_columns"]], "numpy_type (ase2sprkkr.common.grammar_types.arrays.table property)": [[782, "ase2sprkkr.common.grammar_types.arrays.Table.numpy_type"]], "special_columns() (ase2sprkkr.common.grammar_types.arrays.table method)": [[782, "ase2sprkkr.common.grammar_types.arrays.Table.special_columns"]], "zero_data() (ase2sprkkr.common.grammar_types.arrays.table method)": [[782, "ase2sprkkr.common.grammar_types.arrays.Table.zero_data"]], "complex_number (in module ase2sprkkr.common.grammar_types.arrays)": [[783, "ase2sprkkr.common.grammar_types.arrays.complex_number"]], "set_of_integers (in module ase2sprkkr.common.grammar_types.arrays)": [[784, "ase2sprkkr.common.grammar_types.arrays.set_of_integers"]], "set_of_reals (in module ase2sprkkr.common.grammar_types.arrays)": [[785, "ase2sprkkr.common.grammar_types.arrays.set_of_reals"]], "ase2sprkkr.common.grammar_types.basic": [[786, "module-ase2sprkkr.common.grammar_types.basic"]], "baserealwithunits (class in ase2sprkkr.common.grammar_types.basic)": [[787, "ase2sprkkr.common.grammar_types.basic.BaseRealWithUnits"]], "__init__() (ase2sprkkr.common.grammar_types.basic.baserealwithunits method)": [[787, "ase2sprkkr.common.grammar_types.basic.BaseRealWithUnits.__init__"]], "_grammar() (ase2sprkkr.common.grammar_types.basic.baserealwithunits method)": [[787, "ase2sprkkr.common.grammar_types.basic.BaseRealWithUnits._grammar"]], "_grammar_units() (ase2sprkkr.common.grammar_types.basic.baserealwithunits method)": [[787, "ase2sprkkr.common.grammar_types.basic.BaseRealWithUnits._grammar_units"]], "_validate() (ase2sprkkr.common.grammar_types.basic.baserealwithunits method)": [[787, "ase2sprkkr.common.grammar_types.basic.BaseRealWithUnits._validate"]], "grammar_cache (ase2sprkkr.common.grammar_types.basic.baserealwithunits attribute)": [[787, "ase2sprkkr.common.grammar_types.basic.BaseRealWithUnits.grammar_cache"]], "grammar_name() (ase2sprkkr.common.grammar_types.basic.baserealwithunits method)": [[787, "ase2sprkkr.common.grammar_types.basic.BaseRealWithUnits.grammar_name"]], "numpy_type (ase2sprkkr.common.grammar_types.basic.baserealwithunits attribute)": [[787, "ase2sprkkr.common.grammar_types.basic.BaseRealWithUnits.numpy_type"]], "basestring (class in ase2sprkkr.common.grammar_types.basic)": [[788, "ase2sprkkr.common.grammar_types.basic.BaseString"]], "__init__() (ase2sprkkr.common.grammar_types.basic.basestring method)": [[788, "ase2sprkkr.common.grammar_types.basic.BaseString.__init__"]], "_validate() (ase2sprkkr.common.grammar_types.basic.basestring method)": [[788, "ase2sprkkr.common.grammar_types.basic.BaseString._validate"]], "allowed_types (ase2sprkkr.common.grammar_types.basic.basestring attribute)": [[788, "ase2sprkkr.common.grammar_types.basic.BaseString.allowed_types"]], "datatype (ase2sprkkr.common.grammar_types.basic.basestring attribute)": [[788, "ase2sprkkr.common.grammar_types.basic.BaseString.datatype"]], "datatype_name (ase2sprkkr.common.grammar_types.basic.basestring attribute)": [[788, "ase2sprkkr.common.grammar_types.basic.BaseString.datatype_name"]], "basicseparator (class in ase2sprkkr.common.grammar_types.basic)": [[789, "ase2sprkkr.common.grammar_types.basic.BasicSeparator"]], "__init__() (ase2sprkkr.common.grammar_types.basic.basicseparator method)": [[789, "ase2sprkkr.common.grammar_types.basic.BasicSeparator.__init__"]], "_validate() (ase2sprkkr.common.grammar_types.basic.basicseparator method)": [[789, "ase2sprkkr.common.grammar_types.basic.BasicSeparator._validate"]], "has_value (ase2sprkkr.common.grammar_types.basic.basicseparator attribute)": [[789, "ase2sprkkr.common.grammar_types.basic.BasicSeparator.has_value"]], "blankseparator (class in ase2sprkkr.common.grammar_types.basic)": [[790, "ase2sprkkr.common.grammar_types.basic.BlankSeparator"]], "__init__() (ase2sprkkr.common.grammar_types.basic.blankseparator method)": [[790, "ase2sprkkr.common.grammar_types.basic.BlankSeparator.__init__"]], "_grammar (ase2sprkkr.common.grammar_types.basic.blankseparator attribute)": [[790, "ase2sprkkr.common.grammar_types.basic.BlankSeparator._grammar"]], "_grammar_name() (ase2sprkkr.common.grammar_types.basic.blankseparator method)": [[790, "ase2sprkkr.common.grammar_types.basic.BlankSeparator._grammar_name"]], "_string() (ase2sprkkr.common.grammar_types.basic.blankseparator method)": [[790, "ase2sprkkr.common.grammar_types.basic.BlankSeparator._string"]], "bool (class in ase2sprkkr.common.grammar_types.basic)": [[791, "ase2sprkkr.common.grammar_types.basic.Bool"]], "i (ase2sprkkr.common.grammar_types.basic.bool attribute)": [[791, "ase2sprkkr.common.grammar_types.basic.Bool.I"]], "__init__() (ase2sprkkr.common.grammar_types.basic.bool method)": [[791, "ase2sprkkr.common.grammar_types.basic.Bool.__init__"]], "_grammar (ase2sprkkr.common.grammar_types.basic.bool attribute)": [[791, "ase2sprkkr.common.grammar_types.basic.Bool._grammar"]], "_string() (ase2sprkkr.common.grammar_types.basic.bool method)": [[791, "ase2sprkkr.common.grammar_types.basic.Bool._string"]], "allowed_types (ase2sprkkr.common.grammar_types.basic.bool attribute)": [[791, "ase2sprkkr.common.grammar_types.basic.Bool.allowed_types"]], "datatype (ase2sprkkr.common.grammar_types.basic.bool attribute)": [[791, "ase2sprkkr.common.grammar_types.basic.Bool.datatype"]], "datatype_name (ase2sprkkr.common.grammar_types.basic.bool attribute)": [[791, "ase2sprkkr.common.grammar_types.basic.Bool.datatype_name"]], "grammar_name() (ase2sprkkr.common.grammar_types.basic.bool method)": [[791, "ase2sprkkr.common.grammar_types.basic.Bool.grammar_name"]], "numpy_type (ase2sprkkr.common.grammar_types.basic.bool attribute)": [[791, "ase2sprkkr.common.grammar_types.basic.Bool.numpy_type"]], "type_name (ase2sprkkr.common.grammar_types.basic.bool attribute)": [[791, "ase2sprkkr.common.grammar_types.basic.Bool.type_name"]], "date (class in ase2sprkkr.common.grammar_types.basic)": [[792, "ase2sprkkr.common.grammar_types.basic.Date"]], "i (ase2sprkkr.common.grammar_types.basic.date attribute)": [[792, "ase2sprkkr.common.grammar_types.basic.Date.I"]], "__init__() (ase2sprkkr.common.grammar_types.basic.date method)": [[792, "ase2sprkkr.common.grammar_types.basic.Date.__init__"]], "_grammar (ase2sprkkr.common.grammar_types.basic.date attribute)": [[792, "ase2sprkkr.common.grammar_types.basic.Date._grammar"]], "_string() (ase2sprkkr.common.grammar_types.basic.date method)": [[792, "ase2sprkkr.common.grammar_types.basic.Date._string"]], "allowed_types (ase2sprkkr.common.grammar_types.basic.date attribute)": [[792, "ase2sprkkr.common.grammar_types.basic.Date.allowed_types"]], "datatype (ase2sprkkr.common.grammar_types.basic.date attribute)": [[792, "ase2sprkkr.common.grammar_types.basic.Date.datatype"]], "datatype_name (ase2sprkkr.common.grammar_types.basic.date attribute)": [[792, "ase2sprkkr.common.grammar_types.basic.Date.datatype_name"]], "grammar_name() (ase2sprkkr.common.grammar_types.basic.date method)": [[792, "ase2sprkkr.common.grammar_types.basic.Date.grammar_name"]], "numpy_type (ase2sprkkr.common.grammar_types.basic.date attribute)": [[792, "ase2sprkkr.common.grammar_types.basic.Date.numpy_type"]], "type_name (ase2sprkkr.common.grammar_types.basic.date attribute)": [[792, "ase2sprkkr.common.grammar_types.basic.Date.type_name"]], "defkeyword() (in module ase2sprkkr.common.grammar_types.basic)": [[793, "ase2sprkkr.common.grammar_types.basic.DefKeyword"]], "energy (class in ase2sprkkr.common.grammar_types.basic)": [[794, "ase2sprkkr.common.grammar_types.basic.Energy"]], "i (ase2sprkkr.common.grammar_types.basic.energy attribute)": [[794, "ase2sprkkr.common.grammar_types.basic.Energy.I"]], "__init__() (ase2sprkkr.common.grammar_types.basic.energy method)": [[794, "ase2sprkkr.common.grammar_types.basic.Energy.__init__"]], "datatype (ase2sprkkr.common.grammar_types.basic.energy attribute)": [[794, "ase2sprkkr.common.grammar_types.basic.Energy.datatype"]], "units (ase2sprkkr.common.grammar_types.basic.energy attribute)": [[794, "ase2sprkkr.common.grammar_types.basic.Energy.units"]], "fixedpointnumber (class in ase2sprkkr.common.grammar_types.basic)": [[795, "ase2sprkkr.common.grammar_types.basic.FixedPointNumber"]], "__init__() (ase2sprkkr.common.grammar_types.basic.fixedpointnumber method)": [[795, "ase2sprkkr.common.grammar_types.basic.FixedPointNumber.__init__"]], "_validate() (ase2sprkkr.common.grammar_types.basic.fixedpointnumber method)": [[795, "ase2sprkkr.common.grammar_types.basic.FixedPointNumber._validate"]], "allowed_types (ase2sprkkr.common.grammar_types.basic.fixedpointnumber attribute)": [[795, "ase2sprkkr.common.grammar_types.basic.FixedPointNumber.allowed_types"]], "convert() (ase2sprkkr.common.grammar_types.basic.fixedpointnumber method)": [[795, "ase2sprkkr.common.grammar_types.basic.FixedPointNumber.convert"]], "datatype (ase2sprkkr.common.grammar_types.basic.fixedpointnumber attribute)": [[795, "ase2sprkkr.common.grammar_types.basic.FixedPointNumber.datatype"]], "datatype_name (ase2sprkkr.common.grammar_types.basic.fixedpointnumber attribute)": [[795, "ase2sprkkr.common.grammar_types.basic.FixedPointNumber.datatype_name"]], "numpy_type (ase2sprkkr.common.grammar_types.basic.fixedpointnumber attribute)": [[795, "ase2sprkkr.common.grammar_types.basic.FixedPointNumber.numpy_type"]], "flag (class in ase2sprkkr.common.grammar_types.basic)": [[796, "ase2sprkkr.common.grammar_types.basic.Flag"]], "i (ase2sprkkr.common.grammar_types.basic.flag attribute)": [[796, "ase2sprkkr.common.grammar_types.basic.Flag.I"]], "__init__() (ase2sprkkr.common.grammar_types.basic.flag method)": [[796, "ase2sprkkr.common.grammar_types.basic.Flag.__init__"]], "_grammar (ase2sprkkr.common.grammar_types.basic.flag attribute)": [[796, "ase2sprkkr.common.grammar_types.basic.Flag._grammar"]], "_validate() (ase2sprkkr.common.grammar_types.basic.flag method)": [[796, "ase2sprkkr.common.grammar_types.basic.Flag._validate"]], "allowed_types (ase2sprkkr.common.grammar_types.basic.flag attribute)": [[796, "ase2sprkkr.common.grammar_types.basic.Flag.allowed_types"]], "datatype (ase2sprkkr.common.grammar_types.basic.flag attribute)": [[796, "ase2sprkkr.common.grammar_types.basic.Flag.datatype"]], "datatype_name (ase2sprkkr.common.grammar_types.basic.flag attribute)": [[796, "ase2sprkkr.common.grammar_types.basic.Flag.datatype_name"]], "grammar_name() (ase2sprkkr.common.grammar_types.basic.flag method)": [[796, "ase2sprkkr.common.grammar_types.basic.Flag.grammar_name"]], "missing_value() (ase2sprkkr.common.grammar_types.basic.flag method)": [[796, "ase2sprkkr.common.grammar_types.basic.Flag.missing_value"]], "numpy_type (ase2sprkkr.common.grammar_types.basic.flag attribute)": [[796, "ase2sprkkr.common.grammar_types.basic.Flag.numpy_type"]], "str() (ase2sprkkr.common.grammar_types.basic.flag method)": [[796, "ase2sprkkr.common.grammar_types.basic.Flag.str"]], "i (ase2sprkkr.common.grammar_types.basic.intbool attribute)": [[797, "ase2sprkkr.common.grammar_types.basic.IntBool.I"]], "intbool (class in ase2sprkkr.common.grammar_types.basic)": [[797, "ase2sprkkr.common.grammar_types.basic.IntBool"]], "__init__() (ase2sprkkr.common.grammar_types.basic.intbool method)": [[797, "ase2sprkkr.common.grammar_types.basic.IntBool.__init__"]], "_grammar (ase2sprkkr.common.grammar_types.basic.intbool attribute)": [[797, "ase2sprkkr.common.grammar_types.basic.IntBool._grammar"]], "_rev_grammar (ase2sprkkr.common.grammar_types.basic.intbool attribute)": [[797, "ase2sprkkr.common.grammar_types.basic.IntBool._rev_grammar"]], "_string() (ase2sprkkr.common.grammar_types.basic.intbool method)": [[797, "ase2sprkkr.common.grammar_types.basic.IntBool._string"]], "allowed_types (ase2sprkkr.common.grammar_types.basic.intbool attribute)": [[797, "ase2sprkkr.common.grammar_types.basic.IntBool.allowed_types"]], "datatype (ase2sprkkr.common.grammar_types.basic.intbool attribute)": [[797, "ase2sprkkr.common.grammar_types.basic.IntBool.datatype"]], "datatype_name (ase2sprkkr.common.grammar_types.basic.intbool attribute)": [[797, "ase2sprkkr.common.grammar_types.basic.IntBool.datatype_name"]], "grammar_name() (ase2sprkkr.common.grammar_types.basic.intbool method)": [[797, "ase2sprkkr.common.grammar_types.basic.IntBool.grammar_name"]], "numpy_type (ase2sprkkr.common.grammar_types.basic.intbool attribute)": [[797, "ase2sprkkr.common.grammar_types.basic.IntBool.numpy_type"]], "type_name (ase2sprkkr.common.grammar_types.basic.intbool attribute)": [[797, "ase2sprkkr.common.grammar_types.basic.IntBool.type_name"]], "i (ase2sprkkr.common.grammar_types.basic.integer attribute)": [[798, "ase2sprkkr.common.grammar_types.basic.Integer.I"]], "integer (class in ase2sprkkr.common.grammar_types.basic)": [[798, "ase2sprkkr.common.grammar_types.basic.Integer"]], "__init__() (ase2sprkkr.common.grammar_types.basic.integer method)": [[798, "ase2sprkkr.common.grammar_types.basic.Integer.__init__"]], "_grammar (ase2sprkkr.common.grammar_types.basic.integer attribute)": [[798, "ase2sprkkr.common.grammar_types.basic.Integer._grammar"]], "allowed_types (ase2sprkkr.common.grammar_types.basic.integer attribute)": [[798, "ase2sprkkr.common.grammar_types.basic.Integer.allowed_types"]], "datatype (ase2sprkkr.common.grammar_types.basic.integer attribute)": [[798, "ase2sprkkr.common.grammar_types.basic.Integer.datatype"]], "datatype_name (ase2sprkkr.common.grammar_types.basic.integer attribute)": [[798, "ase2sprkkr.common.grammar_types.basic.Integer.datatype_name"]], "grammar_name() (ase2sprkkr.common.grammar_types.basic.integer method)": [[798, "ase2sprkkr.common.grammar_types.basic.Integer.grammar_name"]], "keyword (class in ase2sprkkr.common.grammar_types.basic)": [[799, "ase2sprkkr.common.grammar_types.basic.Keyword"]], "__init__() (ase2sprkkr.common.grammar_types.basic.keyword method)": [[799, "ase2sprkkr.common.grammar_types.basic.Keyword.__init__"]], "_validate() (ase2sprkkr.common.grammar_types.basic.keyword method)": [[799, "ase2sprkkr.common.grammar_types.basic.Keyword._validate"]], "additional_description() (ase2sprkkr.common.grammar_types.basic.keyword method)": [[799, "ase2sprkkr.common.grammar_types.basic.Keyword.additional_description"]], "convert() (ase2sprkkr.common.grammar_types.basic.keyword method)": [[799, "ase2sprkkr.common.grammar_types.basic.Keyword.convert"]], "grammar_name() (ase2sprkkr.common.grammar_types.basic.keyword method)": [[799, "ase2sprkkr.common.grammar_types.basic.Keyword.grammar_name"]], "is_independent_on_the_predecessor (ase2sprkkr.common.grammar_types.basic.keyword attribute)": [[799, "ase2sprkkr.common.grammar_types.basic.Keyword.is_independent_on_the_predecessor"]], "i (ase2sprkkr.common.grammar_types.basic.linestring attribute)": [[800, "ase2sprkkr.common.grammar_types.basic.LineString.I"]], "linestring (class in ase2sprkkr.common.grammar_types.basic)": [[800, "ase2sprkkr.common.grammar_types.basic.LineString"]], "__init__() (ase2sprkkr.common.grammar_types.basic.linestring method)": [[800, "ase2sprkkr.common.grammar_types.basic.LineString.__init__"]], "_grammar (ase2sprkkr.common.grammar_types.basic.linestring attribute)": [[800, "ase2sprkkr.common.grammar_types.basic.LineString._grammar"]], "grammar_name() (ase2sprkkr.common.grammar_types.basic.linestring method)": [[800, "ase2sprkkr.common.grammar_types.basic.LineString.grammar_name"]], "number (class in ase2sprkkr.common.grammar_types.basic)": [[801, "ase2sprkkr.common.grammar_types.basic.Number"]], "__init__() (ase2sprkkr.common.grammar_types.basic.number method)": [[801, "ase2sprkkr.common.grammar_types.basic.Number.__init__"]], "_validate() (ase2sprkkr.common.grammar_types.basic.number method)": [[801, "ase2sprkkr.common.grammar_types.basic.Number._validate"]], "allowed_types (ase2sprkkr.common.grammar_types.basic.number attribute)": [[801, "ase2sprkkr.common.grammar_types.basic.Number.allowed_types"]], "datatype (ase2sprkkr.common.grammar_types.basic.number attribute)": [[801, "ase2sprkkr.common.grammar_types.basic.Number.datatype"]], "datatype_name (ase2sprkkr.common.grammar_types.basic.number attribute)": [[801, "ase2sprkkr.common.grammar_types.basic.Number.datatype_name"]], "objectnumber (class in ase2sprkkr.common.grammar_types.basic)": [[802, "ase2sprkkr.common.grammar_types.basic.ObjectNumber"]], "__init__() (ase2sprkkr.common.grammar_types.basic.objectnumber method)": [[802, "ase2sprkkr.common.grammar_types.basic.ObjectNumber.__init__"]], "_validate() (ase2sprkkr.common.grammar_types.basic.objectnumber method)": [[802, "ase2sprkkr.common.grammar_types.basic.ObjectNumber._validate"]], "convert() (ase2sprkkr.common.grammar_types.basic.objectnumber method)": [[802, "ase2sprkkr.common.grammar_types.basic.ObjectNumber.convert"]], "i (ase2sprkkr.common.grammar_types.basic.qstring attribute)": [[803, "ase2sprkkr.common.grammar_types.basic.QString.I"]], "qstring (class in ase2sprkkr.common.grammar_types.basic)": [[803, "ase2sprkkr.common.grammar_types.basic.QString"]], "__init__() (ase2sprkkr.common.grammar_types.basic.qstring method)": [[803, "ase2sprkkr.common.grammar_types.basic.QString.__init__"]], "_grammar (ase2sprkkr.common.grammar_types.basic.qstring attribute)": [[803, "ase2sprkkr.common.grammar_types.basic.QString._grammar"]], "grammar_name() (ase2sprkkr.common.grammar_types.basic.qstring method)": [[803, "ase2sprkkr.common.grammar_types.basic.QString.grammar_name"]], "i (ase2sprkkr.common.grammar_types.basic.real attribute)": [[804, "ase2sprkkr.common.grammar_types.basic.Real.I"]], "real (class in ase2sprkkr.common.grammar_types.basic)": [[804, "ase2sprkkr.common.grammar_types.basic.Real"]], "__init__() (ase2sprkkr.common.grammar_types.basic.real method)": [[804, "ase2sprkkr.common.grammar_types.basic.Real.__init__"]], "_grammar (ase2sprkkr.common.grammar_types.basic.real attribute)": [[804, "ase2sprkkr.common.grammar_types.basic.Real._grammar"]], "allowed_types (ase2sprkkr.common.grammar_types.basic.real attribute)": [[804, "ase2sprkkr.common.grammar_types.basic.Real.allowed_types"]], "convert() (ase2sprkkr.common.grammar_types.basic.real method)": [[804, "ase2sprkkr.common.grammar_types.basic.Real.convert"]], "datatype (ase2sprkkr.common.grammar_types.basic.real attribute)": [[804, "ase2sprkkr.common.grammar_types.basic.Real.datatype"]], "datatype_name (ase2sprkkr.common.grammar_types.basic.real attribute)": [[804, "ase2sprkkr.common.grammar_types.basic.Real.datatype_name"]], "grammar_name() (ase2sprkkr.common.grammar_types.basic.real method)": [[804, "ase2sprkkr.common.grammar_types.basic.Real.grammar_name"]], "numpy_type (ase2sprkkr.common.grammar_types.basic.real attribute)": [[804, "ase2sprkkr.common.grammar_types.basic.Real.numpy_type"]], "realwithunits (class in ase2sprkkr.common.grammar_types.basic)": [[805, "ase2sprkkr.common.grammar_types.basic.RealWithUnits"]], "__init__() (ase2sprkkr.common.grammar_types.basic.realwithunits method)": [[805, "ase2sprkkr.common.grammar_types.basic.RealWithUnits.__init__"]], "i (ase2sprkkr.common.grammar_types.basic.separator attribute)": [[806, "ase2sprkkr.common.grammar_types.basic.Separator.I"]], "separator (class in ase2sprkkr.common.grammar_types.basic)": [[806, "ase2sprkkr.common.grammar_types.basic.Separator"]], "__init__() (ase2sprkkr.common.grammar_types.basic.separator method)": [[806, "ase2sprkkr.common.grammar_types.basic.Separator.__init__"]], "_grammar (ase2sprkkr.common.grammar_types.basic.separator property)": [[806, "ase2sprkkr.common.grammar_types.basic.Separator._grammar"]], "_grammar_name() (ase2sprkkr.common.grammar_types.basic.separator method)": [[806, "ase2sprkkr.common.grammar_types.basic.Separator._grammar_name"]], "_string() (ase2sprkkr.common.grammar_types.basic.separator method)": [[806, "ase2sprkkr.common.grammar_types.basic.Separator._string"]], "i (ase2sprkkr.common.grammar_types.basic.string attribute)": [[807, "ase2sprkkr.common.grammar_types.basic.String.I"]], "string (class in ase2sprkkr.common.grammar_types.basic)": [[807, "ase2sprkkr.common.grammar_types.basic.String"]], "__init__() (ase2sprkkr.common.grammar_types.basic.string method)": [[807, "ase2sprkkr.common.grammar_types.basic.String.__init__"]], "_grammar (ase2sprkkr.common.grammar_types.basic.string attribute)": [[807, "ase2sprkkr.common.grammar_types.basic.String._grammar"]], "grammar_name() (ase2sprkkr.common.grammar_types.basic.string method)": [[807, "ase2sprkkr.common.grammar_types.basic.String.grammar_name"]], "i (ase2sprkkr.common.grammar_types.basic.unsigned attribute)": [[808, "ase2sprkkr.common.grammar_types.basic.Unsigned.I"]], "unsigned (class in ase2sprkkr.common.grammar_types.basic)": [[808, "ase2sprkkr.common.grammar_types.basic.Unsigned"]], "__init__() (ase2sprkkr.common.grammar_types.basic.unsigned method)": [[808, "ase2sprkkr.common.grammar_types.basic.Unsigned.__init__"]], "_grammar (ase2sprkkr.common.grammar_types.basic.unsigned attribute)": [[808, "ase2sprkkr.common.grammar_types.basic.Unsigned._grammar"]], "_validate() (ase2sprkkr.common.grammar_types.basic.unsigned method)": [[808, "ase2sprkkr.common.grammar_types.basic.Unsigned._validate"]], "datatype_name (ase2sprkkr.common.grammar_types.basic.unsigned attribute)": [[808, "ase2sprkkr.common.grammar_types.basic.Unsigned.datatype_name"]], "grammar_name() (ase2sprkkr.common.grammar_types.basic.unsigned method)": [[808, "ase2sprkkr.common.grammar_types.basic.Unsigned.grammar_name"]], "boolean (in module ase2sprkkr.common.grammar_types.basic)": [[809, "ase2sprkkr.common.grammar_types.basic.boolean"]], "date (in module ase2sprkkr.common.grammar_types.basic)": [[810, "ase2sprkkr.common.grammar_types.basic.date"]], "energy (in module ase2sprkkr.common.grammar_types.basic)": [[811, "ase2sprkkr.common.grammar_types.basic.energy"]], "flag (in module ase2sprkkr.common.grammar_types.basic)": [[812, "ase2sprkkr.common.grammar_types.basic.flag"]], "int_bool (in module ase2sprkkr.common.grammar_types.basic)": [[813, "ase2sprkkr.common.grammar_types.basic.int_bool"]], "integer (in module ase2sprkkr.common.grammar_types.basic)": [[814, "ase2sprkkr.common.grammar_types.basic.integer"]], "line_string (in module ase2sprkkr.common.grammar_types.basic)": [[815, "ase2sprkkr.common.grammar_types.basic.line_string"]], "qstring (in module ase2sprkkr.common.grammar_types.basic)": [[816, "ase2sprkkr.common.grammar_types.basic.qstring"]], "real (in module ase2sprkkr.common.grammar_types.basic)": [[817, "ase2sprkkr.common.grammar_types.basic.real"]], "separator (in module ase2sprkkr.common.grammar_types.basic)": [[818, "ase2sprkkr.common.grammar_types.basic.separator"]], "string (in module ase2sprkkr.common.grammar_types.basic)": [[819, "ase2sprkkr.common.grammar_types.basic.string"]], "unsigned (in module ase2sprkkr.common.grammar_types.basic)": [[820, "ase2sprkkr.common.grammar_types.basic.unsigned"]], "ase2sprkkr.common.grammar_types.data": [[821, "module-ase2sprkkr.common.grammar_types.data"]], "numpyarray (class in ase2sprkkr.common.grammar_types.data)": [[822, "ase2sprkkr.common.grammar_types.data.NumpyArray"]], "__init__() (ase2sprkkr.common.grammar_types.data.numpyarray method)": [[822, "ase2sprkkr.common.grammar_types.data.NumpyArray.__init__"]], "_grammar() (ase2sprkkr.common.grammar_types.data.numpyarray method)": [[822, "ase2sprkkr.common.grammar_types.data.NumpyArray._grammar"]], "_string() (ase2sprkkr.common.grammar_types.data.numpyarray method)": [[822, "ase2sprkkr.common.grammar_types.data.NumpyArray._string"]], "_validate() (ase2sprkkr.common.grammar_types.data.numpyarray method)": [[822, "ase2sprkkr.common.grammar_types.data.NumpyArray._validate"]], "array_access (ase2sprkkr.common.grammar_types.data.numpyarray attribute)": [[822, "ase2sprkkr.common.grammar_types.data.NumpyArray.array_access"]], "convert() (ase2sprkkr.common.grammar_types.data.numpyarray method)": [[822, "ase2sprkkr.common.grammar_types.data.NumpyArray.convert"]], "copy_value() (ase2sprkkr.common.grammar_types.data.numpyarray method)": [[822, "ase2sprkkr.common.grammar_types.data.NumpyArray.copy_value"]], "is_the_same_value() (ase2sprkkr.common.grammar_types.data.numpyarray static method)": [[822, "ase2sprkkr.common.grammar_types.data.NumpyArray.is_the_same_value"]], "prefixed (class in ase2sprkkr.common.grammar_types.data)": [[823, "ase2sprkkr.common.grammar_types.data.Prefixed"]], "__init__() (ase2sprkkr.common.grammar_types.data.prefixed method)": [[823, "ase2sprkkr.common.grammar_types.data.Prefixed.__init__"]], "_grammar (ase2sprkkr.common.grammar_types.data.prefixed property)": [[823, "ase2sprkkr.common.grammar_types.data.Prefixed._grammar"]], "_string() (ase2sprkkr.common.grammar_types.data.prefixed method)": [[823, "ase2sprkkr.common.grammar_types.data.Prefixed._string"]], "rawdata (class in ase2sprkkr.common.grammar_types.data)": [[824, "ase2sprkkr.common.grammar_types.data.RawData"]], "__init__() (ase2sprkkr.common.grammar_types.data.rawdata method)": [[824, "ase2sprkkr.common.grammar_types.data.RawData.__init__"]], "_grammar() (ase2sprkkr.common.grammar_types.data.rawdata method)": [[824, "ase2sprkkr.common.grammar_types.data.RawData._grammar"]], "_n_lines_grammar() (ase2sprkkr.common.grammar_types.data.rawdata method)": [[824, "ase2sprkkr.common.grammar_types.data.RawData._n_lines_grammar"]], "_string() (ase2sprkkr.common.grammar_types.data.rawdata method)": [[824, "ase2sprkkr.common.grammar_types.data.RawData._string"]], "added_to_container() (ase2sprkkr.common.grammar_types.data.rawdata method)": [[824, "ase2sprkkr.common.grammar_types.data.RawData.added_to_container"]], "convert() (ase2sprkkr.common.grammar_types.data.rawdata method)": [[824, "ase2sprkkr.common.grammar_types.data.RawData.convert"]], "restofthefile (class in ase2sprkkr.common.grammar_types.data)": [[825, "ase2sprkkr.common.grammar_types.data.RestOfTheFile"]], "__init__() (ase2sprkkr.common.grammar_types.data.restofthefile method)": [[825, "ase2sprkkr.common.grammar_types.data.RestOfTheFile.__init__"]], "_grammar (ase2sprkkr.common.grammar_types.data.restofthefile attribute)": [[825, "ase2sprkkr.common.grammar_types.data.RestOfTheFile._grammar"]], "datatype (ase2sprkkr.common.grammar_types.data.restofthefile attribute)": [[825, "ase2sprkkr.common.grammar_types.data.RestOfTheFile.datatype"]], "datatype_name (ase2sprkkr.common.grammar_types.data.restofthefile attribute)": [[825, "ase2sprkkr.common.grammar_types.data.RestOfTheFile.datatype_name"]], "grammar_name() (ase2sprkkr.common.grammar_types.data.restofthefile method)": [[825, "ase2sprkkr.common.grammar_types.data.RestOfTheFile.grammar_name"]], "ase2sprkkr.common.grammar_types.grammar_type": [[826, "module-ase2sprkkr.common.grammar_types.grammar_type"]], "grammartype (class in ase2sprkkr.common.grammar_types.grammar_type)": [[827, "ase2sprkkr.common.grammar_types.grammar_type.GrammarType"]], "__init__() (ase2sprkkr.common.grammar_types.grammar_type.grammartype method)": [[827, "ase2sprkkr.common.grammar_types.grammar_type.GrammarType.__init__"]], "_string() (ase2sprkkr.common.grammar_types.grammar_type.grammartype method)": [[827, "ase2sprkkr.common.grammar_types.grammar_type.GrammarType._string"]], "_validate() (ase2sprkkr.common.grammar_types.grammar_type.grammartype method)": [[827, "ase2sprkkr.common.grammar_types.grammar_type.GrammarType._validate"]], "_valueerror() (ase2sprkkr.common.grammar_types.grammar_type.grammartype method)": [[827, "ase2sprkkr.common.grammar_types.grammar_type.GrammarType._valueError"]], "added_to_container() (ase2sprkkr.common.grammar_types.grammar_type.grammartype method)": [[827, "ase2sprkkr.common.grammar_types.grammar_type.GrammarType.added_to_container"]], "additional_description() (ase2sprkkr.common.grammar_types.grammar_type.grammartype method)": [[827, "ase2sprkkr.common.grammar_types.grammar_type.GrammarType.additional_description"]], "after_format (ase2sprkkr.common.grammar_types.grammar_type.grammartype attribute)": [[827, "ase2sprkkr.common.grammar_types.grammar_type.GrammarType.after_format"]], "apply_format() (ase2sprkkr.common.grammar_types.grammar_type.grammartype method)": [[827, "ase2sprkkr.common.grammar_types.grammar_type.GrammarType.apply_format"]], "array_access (ase2sprkkr.common.grammar_types.grammar_type.grammartype attribute)": [[827, "ase2sprkkr.common.grammar_types.grammar_type.GrammarType.array_access"]], "convert() (ase2sprkkr.common.grammar_types.grammar_type.grammartype method)": [[827, "ase2sprkkr.common.grammar_types.grammar_type.GrammarType.convert"]], "copy() (ase2sprkkr.common.grammar_types.grammar_type.grammartype method)": [[827, "ase2sprkkr.common.grammar_types.grammar_type.GrammarType.copy"]], "copy_value() (ase2sprkkr.common.grammar_types.grammar_type.grammartype method)": [[827, "ase2sprkkr.common.grammar_types.grammar_type.GrammarType.copy_value"]], "default_value (ase2sprkkr.common.grammar_types.grammar_type.grammartype attribute)": [[827, "ase2sprkkr.common.grammar_types.grammar_type.GrammarType.default_value"]], "enrich() (ase2sprkkr.common.grammar_types.grammar_type.grammartype method)": [[827, "ase2sprkkr.common.grammar_types.grammar_type.GrammarType.enrich"]], "format (ase2sprkkr.common.grammar_types.grammar_type.grammartype property)": [[827, "ase2sprkkr.common.grammar_types.grammar_type.GrammarType.format"]], "format_string() (ase2sprkkr.common.grammar_types.grammar_type.grammartype method)": [[827, "ase2sprkkr.common.grammar_types.grammar_type.GrammarType.format_string"]], "grammar() (ase2sprkkr.common.grammar_types.grammar_type.grammartype method)": [[827, "ase2sprkkr.common.grammar_types.grammar_type.GrammarType.grammar"]], "grammar_name() (ase2sprkkr.common.grammar_types.grammar_type.grammartype method)": [[827, "ase2sprkkr.common.grammar_types.grammar_type.GrammarType.grammar_name"]], "has_value (ase2sprkkr.common.grammar_types.grammar_type.grammartype attribute)": [[827, "ase2sprkkr.common.grammar_types.grammar_type.GrammarType.has_value"]], "is_independent_on_the_predecessor (ase2sprkkr.common.grammar_types.grammar_type.grammartype attribute)": [[827, "ase2sprkkr.common.grammar_types.grammar_type.GrammarType.is_independent_on_the_predecessor"]], "is_the_same_value() (ase2sprkkr.common.grammar_types.grammar_type.grammartype static method)": [[827, "ase2sprkkr.common.grammar_types.grammar_type.GrammarType.is_the_same_value"]], "missing_value() (ase2sprkkr.common.grammar_types.grammar_type.grammartype method)": [[827, "ase2sprkkr.common.grammar_types.grammar_type.GrammarType.missing_value"]], "name_in_grammar (ase2sprkkr.common.grammar_types.grammar_type.grammartype attribute)": [[827, "ase2sprkkr.common.grammar_types.grammar_type.GrammarType.name_in_grammar"]], "numpy_type (ase2sprkkr.common.grammar_types.grammar_type.grammartype attribute)": [[827, "ase2sprkkr.common.grammar_types.grammar_type.GrammarType.numpy_type"]], "parse() (ase2sprkkr.common.grammar_types.grammar_type.grammartype method)": [[827, "ase2sprkkr.common.grammar_types.grammar_type.GrammarType.parse"]], "parse_from_stream() (ase2sprkkr.common.grammar_types.grammar_type.grammartype method)": [[827, "ase2sprkkr.common.grammar_types.grammar_type.GrammarType.parse_from_stream"]], "postfix (ase2sprkkr.common.grammar_types.grammar_type.grammartype attribute)": [[827, "ase2sprkkr.common.grammar_types.grammar_type.GrammarType.postfix"]], "prefix (ase2sprkkr.common.grammar_types.grammar_type.grammartype attribute)": [[827, "ase2sprkkr.common.grammar_types.grammar_type.GrammarType.prefix"]], "print() (ase2sprkkr.common.grammar_types.grammar_type.grammartype method)": [[827, "ase2sprkkr.common.grammar_types.grammar_type.GrammarType.print"]], "string() (ase2sprkkr.common.grammar_types.grammar_type.grammartype method)": [[827, "ase2sprkkr.common.grammar_types.grammar_type.GrammarType.string"]], "transform_grammar() (ase2sprkkr.common.grammar_types.grammar_type.grammartype method)": [[827, "ase2sprkkr.common.grammar_types.grammar_type.GrammarType.transform_grammar"]], "type_validation() (ase2sprkkr.common.grammar_types.grammar_type.grammartype method)": [[827, "ase2sprkkr.common.grammar_types.grammar_type.GrammarType.type_validation"]], "used_in_definition() (ase2sprkkr.common.grammar_types.grammar_type.grammartype method)": [[827, "ase2sprkkr.common.grammar_types.grammar_type.GrammarType.used_in_definition"]], "validate() (ase2sprkkr.common.grammar_types.grammar_type.grammartype method)": [[827, "ase2sprkkr.common.grammar_types.grammar_type.GrammarType.validate"]], "write() (ase2sprkkr.common.grammar_types.grammar_type.grammartype method)": [[827, "ase2sprkkr.common.grammar_types.grammar_type.GrammarType.write"]], "typedgrammartype (class in ase2sprkkr.common.grammar_types.grammar_type)": [[828, "ase2sprkkr.common.grammar_types.grammar_type.TypedGrammarType"]], "__init__() (ase2sprkkr.common.grammar_types.grammar_type.typedgrammartype method)": [[828, "ase2sprkkr.common.grammar_types.grammar_type.TypedGrammarType.__init__"]], "_validate() (ase2sprkkr.common.grammar_types.grammar_type.typedgrammartype method)": [[828, "ase2sprkkr.common.grammar_types.grammar_type.TypedGrammarType._validate"]], "allowed_types (ase2sprkkr.common.grammar_types.grammar_type.typedgrammartype attribute)": [[828, "ase2sprkkr.common.grammar_types.grammar_type.TypedGrammarType.allowed_types"]], "convert() (ase2sprkkr.common.grammar_types.grammar_type.typedgrammartype method)": [[828, "ase2sprkkr.common.grammar_types.grammar_type.TypedGrammarType.convert"]], "datatype (ase2sprkkr.common.grammar_types.grammar_type.typedgrammartype attribute)": [[828, "ase2sprkkr.common.grammar_types.grammar_type.TypedGrammarType.datatype"]], "datatype_name (ase2sprkkr.common.grammar_types.grammar_type.typedgrammartype attribute)": [[828, "ase2sprkkr.common.grammar_types.grammar_type.TypedGrammarType.datatype_name"]], "compare_numpy_values() (in module ase2sprkkr.common.grammar_types.grammar_type)": [[829, "ase2sprkkr.common.grammar_types.grammar_type.compare_numpy_values"]], "format_for_type() (in module ase2sprkkr.common.grammar_types.grammar_type)": [[830, "ase2sprkkr.common.grammar_types.grammar_type.format_for_type"]], "recognized_set_types (in module ase2sprkkr.common.grammar_types.grammar_type)": [[831, "ase2sprkkr.common.grammar_types.grammar_type.recognized_set_types"]], "type_from_default_value() (in module ase2sprkkr.common.grammar_types.grammar_type)": [[832, "ase2sprkkr.common.grammar_types.grammar_type.type_from_default_value"]], "type_from_type() (in module ase2sprkkr.common.grammar_types.grammar_type)": [[833, "ase2sprkkr.common.grammar_types.grammar_type.type_from_type"]], "type_from_value() (in module ase2sprkkr.common.grammar_types.grammar_type)": [[834, "ase2sprkkr.common.grammar_types.grammar_type.type_from_value"]], "ase2sprkkr.common.grammar_types.mixed": [[835, "module-ase2sprkkr.common.grammar_types.mixed"]], "recognized_set_types (in module ase2sprkkr.common.grammar_types)": [[836, "ase2sprkkr.common.grammar_types.recognized_set_types"]], "type_from_set_map (in module ase2sprkkr.common.grammar_types)": [[837, "ase2sprkkr.common.grammar_types.type_from_set_map"]], "type_from_type_map (in module ase2sprkkr.common.grammar_types)": [[838, "ase2sprkkr.common.grammar_types.type_from_type_map"]], "ase2sprkkr.common.grammar_types.warnings": [[839, "module-ase2sprkkr.common.grammar_types.warnings"]], "suspiciousvaluewarning": [[840, "ase2sprkkr.common.grammar_types.warnings.SuspiciousValueWarning"]], "ase2sprkkr.common.init_tests": [[841, "module-ase2sprkkr.common.init_tests"]], "testcase (class in ase2sprkkr.common.init_tests)": [[842, "ase2sprkkr.common.init_tests.TestCase"]], "__init__() (ase2sprkkr.common.init_tests.testcase method)": [[842, "ase2sprkkr.common.init_tests.TestCase.__init__"]], "_calc_args (ase2sprkkr.common.init_tests.testcase attribute)": [[842, "ase2sprkkr.common.init_tests.TestCase._calc_args"]], "_print_output (ase2sprkkr.common.init_tests.testcase attribute)": [[842, "ase2sprkkr.common.init_tests.TestCase._print_output"]], "almost_equal_precision() (ase2sprkkr.common.init_tests.testcase class method)": [[842, "ase2sprkkr.common.init_tests.TestCase.almost_equal_precision"]], "assertalmostequal() (ase2sprkkr.common.init_tests.testcase method)": [[842, "ase2sprkkr.common.init_tests.TestCase.assertAlmostEqual"]], "assertasyncequal() (ase2sprkkr.common.init_tests.testcase method)": [[842, "ase2sprkkr.common.init_tests.TestCase.assertAsyncEqual"]], "assertasyncraises() (ase2sprkkr.common.init_tests.testcase method)": [[842, "ase2sprkkr.common.init_tests.TestCase.assertAsyncRaises"]], "assertequal() (ase2sprkkr.common.init_tests.testcase method)": [[842, "ase2sprkkr.common.init_tests.TestCase.assertEqual"]], "assertfalse() (ase2sprkkr.common.init_tests.testcase method)": [[842, "ase2sprkkr.common.init_tests.TestCase.assertFalse"]], "assertisnone() (ase2sprkkr.common.init_tests.testcase method)": [[842, "ase2sprkkr.common.init_tests.TestCase.assertIsNone"]], "assertnotequal() (ase2sprkkr.common.init_tests.testcase method)": [[842, "ase2sprkkr.common.init_tests.TestCase.assertNotEqual"]], "assertraises() (ase2sprkkr.common.init_tests.testcase method)": [[842, "ase2sprkkr.common.init_tests.TestCase.assertRaises"]], "asserttrue() (ase2sprkkr.common.init_tests.testcase method)": [[842, "ase2sprkkr.common.init_tests.TestCase.assertTrue"]], "calc_args() (ase2sprkkr.common.init_tests.testcase class method)": [[842, "ase2sprkkr.common.init_tests.TestCase.calc_args"]], "runasync() (ase2sprkkr.common.init_tests.testcase static method)": [[842, "ase2sprkkr.common.init_tests.TestCase.runAsync"]], "run_sprkkr() (ase2sprkkr.common.init_tests.testcase method)": [[842, "ase2sprkkr.common.init_tests.TestCase.run_sprkkr"]], "temporary_dir() (ase2sprkkr.common.init_tests.testcase method)": [[842, "ase2sprkkr.common.init_tests.TestCase.temporary_dir"]], "arr_testfce() (in module ase2sprkkr.common.init_tests)": [[843, "ase2sprkkr.common.init_tests.arr_testfce"]], "assertdictequal() (in module ase2sprkkr.common.init_tests)": [[844, "ase2sprkkr.common.init_tests.assertDictEqual"]], "assertlistequal() (in module ase2sprkkr.common.init_tests)": [[845, "ase2sprkkr.common.init_tests.assertListEqual"]], "assert_almost_equals() (in module ase2sprkkr.common.init_tests)": [[846, "ase2sprkkr.common.init_tests.assert_almost_equals"]], "assert_equals() (in module ase2sprkkr.common.init_tests)": [[847, "ase2sprkkr.common.init_tests.assert_equals"]], "__init__() (ase2sprkkr.common.init_tests.extdict method)": [[848, "ase2sprkkr.common.init_tests.extdict.__init__"]], "extdict (class in ase2sprkkr.common.init_tests)": [[848, "ase2sprkkr.common.init_tests.extdict"]], "patch_package() (in module ase2sprkkr.common.init_tests)": [[849, "ase2sprkkr.common.init_tests.patch_package"]], "testfce() (in module ase2sprkkr.common.init_tests)": [[850, "ase2sprkkr.common.init_tests.testfce"]], "ase2sprkkr.common.misc": [[851, "module-ase2sprkkr.common.misc"]], "as_integer() (in module ase2sprkkr.common.misc)": [[852, "ase2sprkkr.common.misc.as_integer"]], "copy_list() (in module ase2sprkkr.common.misc)": [[853, "ase2sprkkr.common.misc.copy_list"]], "dict_first_item() (in module ase2sprkkr.common.misc)": [[854, "ase2sprkkr.common.misc.dict_first_item"]], "first_non_none() (in module ase2sprkkr.common.misc)": [[855, "ase2sprkkr.common.misc.first_non_none"]], "njit() (in module ase2sprkkr.common.misc)": [[856, "ase2sprkkr.common.misc.njit"]], "numpy_index() (in module ase2sprkkr.common.misc)": [[857, "ase2sprkkr.common.misc.numpy_index"]], "ase2sprkkr.common.no_output": [[858, "module-ase2sprkkr.common.no_output"]], "nooutput (class in ase2sprkkr.common.no_output)": [[859, "ase2sprkkr.common.no_output.NoOutput"]], "__init__() (ase2sprkkr.common.no_output.nooutput method)": [[859, "ase2sprkkr.common.no_output.NoOutput.__init__"]], "ase2sprkkr.common.options": [[860, "module-ase2sprkkr.common.options"]], "baseoption (class in ase2sprkkr.common.options)": [[861, "ase2sprkkr.common.options.BaseOption"]], "__init__() (ase2sprkkr.common.options.baseoption method)": [[861, "ase2sprkkr.common.options.BaseOption.__init__"]], "_find_value() (ase2sprkkr.common.options.baseoption method)": [[861, "ase2sprkkr.common.options.BaseOption._find_value"]], "_save_to_file() (ase2sprkkr.common.options.baseoption method)": [[861, "ase2sprkkr.common.options.BaseOption._save_to_file"]], "as_dict() (ase2sprkkr.common.options.baseoption method)": [[861, "ase2sprkkr.common.options.BaseOption.as_dict"]], "clear() (ase2sprkkr.common.options.baseoption method)": [[861, "ase2sprkkr.common.options.BaseOption.clear"]], "get_path() (ase2sprkkr.common.options.baseoption method)": [[861, "ase2sprkkr.common.options.BaseOption.get_path"]], "customoption (class in ase2sprkkr.common.options)": [[862, "ase2sprkkr.common.options.CustomOption"]], "__init__() (ase2sprkkr.common.options.customoption method)": [[862, "ase2sprkkr.common.options.CustomOption.__init__"]], "factory() (ase2sprkkr.common.options.customoption class method)": [[862, "ase2sprkkr.common.options.CustomOption.factory"]], "remove() (ase2sprkkr.common.options.customoption method)": [[862, "ase2sprkkr.common.options.CustomOption.remove"]], "dangerousvalue (class in ase2sprkkr.common.options)": [[863, "ase2sprkkr.common.options.DangerousValue"]], "__init__() (ase2sprkkr.common.options.dangerousvalue method)": [[863, "ase2sprkkr.common.options.DangerousValue.__init__"]], "write_value() (ase2sprkkr.common.options.dangerousvalue method)": [[863, "ase2sprkkr.common.options.DangerousValue.write_value"]], "dummy (class in ase2sprkkr.common.options)": [[864, "ase2sprkkr.common.options.Dummy"]], "__init__() (ase2sprkkr.common.options.dummy method)": [[864, "ase2sprkkr.common.options.Dummy.__init__"]], "has_any_value() (ase2sprkkr.common.options.dummy method)": [[864, "ase2sprkkr.common.options.Dummy.has_any_value"]], "validate() (ase2sprkkr.common.options.dummy method)": [[864, "ase2sprkkr.common.options.Dummy.validate"]], "option (class in ase2sprkkr.common.options)": [[865, "ase2sprkkr.common.options.Option"]], "__init__() (ase2sprkkr.common.options.option method)": [[865, "ase2sprkkr.common.options.Option.__init__"]], "_check_array_access() (ase2sprkkr.common.options.option method)": [[865, "ase2sprkkr.common.options.Option._check_array_access"]], "_create_dangerous_value() (ase2sprkkr.common.options.option method)": [[865, "ase2sprkkr.common.options.Option._create_dangerous_value"]], "_getitem() (ase2sprkkr.common.options.option method)": [[865, "ase2sprkkr.common.options.Option._getitem"]], "_pack_value() (ase2sprkkr.common.options.option method)": [[865, "ase2sprkkr.common.options.Option._pack_value"]], "_post_set() (ase2sprkkr.common.options.option method)": [[865, "ase2sprkkr.common.options.Option._post_set"]], "_set_item() (ase2sprkkr.common.options.option method)": [[865, "ase2sprkkr.common.options.Option._set_item"]], "_unpack_value() (ase2sprkkr.common.options.option method)": [[865, "ase2sprkkr.common.options.Option._unpack_value"]], "_written_value() (ase2sprkkr.common.options.option method)": [[865, "ase2sprkkr.common.options.Option._written_value"]], "add_hook() (ase2sprkkr.common.options.option method)": [[865, "ase2sprkkr.common.options.Option.add_hook"]], "as_dict() (ase2sprkkr.common.options.option method)": [[865, "ase2sprkkr.common.options.Option.as_dict"]], "clear() (ase2sprkkr.common.options.option method)": [[865, "ase2sprkkr.common.options.Option.clear"]], "clear_result() (ase2sprkkr.common.options.option method)": [[865, "ase2sprkkr.common.options.Option.clear_result"]], "default_value (ase2sprkkr.common.options.option property)": [[865, "ase2sprkkr.common.options.Option.default_value"]], "get() (ase2sprkkr.common.options.option method)": [[865, "ase2sprkkr.common.options.Option.get"]], "has_any_value() (ase2sprkkr.common.options.option method)": [[865, "ase2sprkkr.common.options.Option.has_any_value"]], "is_changed() (ase2sprkkr.common.options.option method)": [[865, "ase2sprkkr.common.options.Option.is_changed"]], "is_dangerous() (ase2sprkkr.common.options.option method)": [[865, "ase2sprkkr.common.options.Option.is_dangerous"]], "is_it_the_default_value() (ase2sprkkr.common.options.option method)": [[865, "ase2sprkkr.common.options.Option.is_it_the_default_value"]], "is_set() (ase2sprkkr.common.options.option method)": [[865, "ase2sprkkr.common.options.Option.is_set"]], "name (ase2sprkkr.common.options.option property)": [[865, "ase2sprkkr.common.options.Option.name"]], "result (ase2sprkkr.common.options.option property)": [[865, "ase2sprkkr.common.options.Option.result"]], "set() (ase2sprkkr.common.options.option method)": [[865, "ase2sprkkr.common.options.Option.set"]], "set_dangerous() (ase2sprkkr.common.options.option method)": [[865, "ase2sprkkr.common.options.Option.set_dangerous"]], "validate() (ase2sprkkr.common.options.option method)": [[865, "ase2sprkkr.common.options.Option.validate"]], "value_and_changed() (ase2sprkkr.common.options.option method)": [[865, "ase2sprkkr.common.options.Option.value_and_changed"]], "ase2sprkkr.common.process_output_reader": [[866, "module-ase2sprkkr.common.process_output_reader"]], "asynciofilereader (class in ase2sprkkr.common.process_output_reader)": [[867, "ase2sprkkr.common.process_output_reader.AsyncioFileReader"]], "__init__() (ase2sprkkr.common.process_output_reader.asynciofilereader method)": [[867, "ase2sprkkr.common.process_output_reader.AsyncioFileReader.__init__"]], "close() (ase2sprkkr.common.process_output_reader.asynciofilereader method)": [[867, "ase2sprkkr.common.process_output_reader.AsyncioFileReader.close"]], "readline() (ase2sprkkr.common.process_output_reader.asynciofilereader method)": [[867, "ase2sprkkr.common.process_output_reader.AsyncioFileReader.readline"]], "readuntil() (ase2sprkkr.common.process_output_reader.asynciofilereader method)": [[867, "ase2sprkkr.common.process_output_reader.AsyncioFileReader.readuntil"]], "separator_shifts() (ase2sprkkr.common.process_output_reader.asynciofilereader static method)": [[867, "ase2sprkkr.common.process_output_reader.AsyncioFileReader.separator_shifts"]], "processoutputreader (class in ase2sprkkr.common.process_output_reader)": [[868, "ase2sprkkr.common.process_output_reader.ProcessOutputReader"]], "__init__() (ase2sprkkr.common.process_output_reader.processoutputreader method)": [[868, "ase2sprkkr.common.process_output_reader.ProcessOutputReader.__init__"]], "read_error() (ase2sprkkr.common.process_output_reader.processoutputreader method)": [[868, "ase2sprkkr.common.process_output_reader.ProcessOutputReader.read_error"]], "read_from_file() (ase2sprkkr.common.process_output_reader.processoutputreader method)": [[868, "ase2sprkkr.common.process_output_reader.ProcessOutputReader.read_from_file"]], "read_output() (ase2sprkkr.common.process_output_reader.processoutputreader method)": [[868, "ase2sprkkr.common.process_output_reader.ProcessOutputReader.read_output"]], "result() (ase2sprkkr.common.process_output_reader.processoutputreader method)": [[868, "ase2sprkkr.common.process_output_reader.ProcessOutputReader.result"]], "result_from_file() (ase2sprkkr.common.process_output_reader.processoutputreader method)": [[868, "ase2sprkkr.common.process_output_reader.ProcessOutputReader.result_from_file"]], "run() (ase2sprkkr.common.process_output_reader.processoutputreader method)": [[868, "ase2sprkkr.common.process_output_reader.ProcessOutputReader.run"]], "run_subprocess() (ase2sprkkr.common.process_output_reader.processoutputreader method)": [[868, "ase2sprkkr.common.process_output_reader.ProcessOutputReader.run_subprocess"]], "ase2sprkkr.common.repeated_configuration_containers": [[869, "module-ase2sprkkr.common.repeated_configuration_containers"]], "repeatedconfigurationcontainer (class in ase2sprkkr.common.repeated_configuration_containers)": [[870, "ase2sprkkr.common.repeated_configuration_containers.RepeatedConfigurationContainer"]], "__init__() (ase2sprkkr.common.repeated_configuration_containers.repeatedconfigurationcontainer method)": [[870, "ase2sprkkr.common.repeated_configuration_containers.RepeatedConfigurationContainer.__init__"]], "_save_to_file() (ase2sprkkr.common.repeated_configuration_containers.repeatedconfigurationcontainer method)": [[870, "ase2sprkkr.common.repeated_configuration_containers.RepeatedConfigurationContainer._save_to_file"]], "add() (ase2sprkkr.common.repeated_configuration_containers.repeatedconfigurationcontainer method)": [[870, "ase2sprkkr.common.repeated_configuration_containers.RepeatedConfigurationContainer.add"]], "as_dict() (ase2sprkkr.common.repeated_configuration_containers.repeatedconfigurationcontainer method)": [[870, "ase2sprkkr.common.repeated_configuration_containers.RepeatedConfigurationContainer.as_dict"]], "clear() (ase2sprkkr.common.repeated_configuration_containers.repeatedconfigurationcontainer method)": [[870, "ase2sprkkr.common.repeated_configuration_containers.RepeatedConfigurationContainer.clear"]], "get() (ase2sprkkr.common.repeated_configuration_containers.repeatedconfigurationcontainer method)": [[870, "ase2sprkkr.common.repeated_configuration_containers.RepeatedConfigurationContainer.get"]], "is_changed() (ase2sprkkr.common.repeated_configuration_containers.repeatedconfigurationcontainer method)": [[870, "ase2sprkkr.common.repeated_configuration_containers.RepeatedConfigurationContainer.is_changed"]], "items() (ase2sprkkr.common.repeated_configuration_containers.repeatedconfigurationcontainer method)": [[870, "ase2sprkkr.common.repeated_configuration_containers.RepeatedConfigurationContainer.items"]], "set() (ase2sprkkr.common.repeated_configuration_containers.repeatedconfigurationcontainer method)": [[870, "ase2sprkkr.common.repeated_configuration_containers.RepeatedConfigurationContainer.set"]], "validate() (ase2sprkkr.common.repeated_configuration_containers.repeatedconfigurationcontainer method)": [[870, "ase2sprkkr.common.repeated_configuration_containers.RepeatedConfigurationContainer.validate"]], "values() (ase2sprkkr.common.repeated_configuration_containers.repeatedconfigurationcontainer method)": [[870, "ase2sprkkr.common.repeated_configuration_containers.RepeatedConfigurationContainer.values"]], "ase2sprkkr.common.subprocess": [[871, "module-ase2sprkkr.common.subprocess"]], "_call_function() (in module ase2sprkkr.common.subprocess)": [[872, "ase2sprkkr.common.subprocess._call_function"]], "ignore_signal() (in module ase2sprkkr.common.subprocess)": [[873, "ase2sprkkr.common.subprocess.ignore_signal"]], "in_subprocess() (in module ase2sprkkr.common.subprocess)": [[874, "ase2sprkkr.common.subprocess.in_subprocess"]], "ase2sprkkr.common.test": [[875, "module-ase2sprkkr.common.test"]], "ase2sprkkr.common.test.init_tests": [[876, "module-ase2sprkkr.common.test.init_tests"]], "testcase (class in ase2sprkkr.common.test.init_tests)": [[877, "ase2sprkkr.common.test.init_tests.TestCase"]], "__init__() (ase2sprkkr.common.test.init_tests.testcase method)": [[877, "ase2sprkkr.common.test.init_tests.TestCase.__init__"]], "_calc_args (ase2sprkkr.common.test.init_tests.testcase attribute)": [[877, "ase2sprkkr.common.test.init_tests.TestCase._calc_args"]], "_print_output (ase2sprkkr.common.test.init_tests.testcase attribute)": [[877, "ase2sprkkr.common.test.init_tests.TestCase._print_output"]], "almost_equal_precision() (ase2sprkkr.common.test.init_tests.testcase class method)": [[877, "ase2sprkkr.common.test.init_tests.TestCase.almost_equal_precision"]], "assertalmostequal() (ase2sprkkr.common.test.init_tests.testcase method)": [[877, "ase2sprkkr.common.test.init_tests.TestCase.assertAlmostEqual"]], "assertasyncequal() (ase2sprkkr.common.test.init_tests.testcase method)": [[877, "ase2sprkkr.common.test.init_tests.TestCase.assertAsyncEqual"]], "assertasyncraises() (ase2sprkkr.common.test.init_tests.testcase method)": [[877, "ase2sprkkr.common.test.init_tests.TestCase.assertAsyncRaises"]], "assertequal() (ase2sprkkr.common.test.init_tests.testcase method)": [[877, "ase2sprkkr.common.test.init_tests.TestCase.assertEqual"]], "assertfalse() (ase2sprkkr.common.test.init_tests.testcase method)": [[877, "ase2sprkkr.common.test.init_tests.TestCase.assertFalse"]], "assertisnone() (ase2sprkkr.common.test.init_tests.testcase method)": [[877, "ase2sprkkr.common.test.init_tests.TestCase.assertIsNone"]], "assertnotequal() (ase2sprkkr.common.test.init_tests.testcase method)": [[877, "ase2sprkkr.common.test.init_tests.TestCase.assertNotEqual"]], "assertraises() (ase2sprkkr.common.test.init_tests.testcase method)": [[877, "ase2sprkkr.common.test.init_tests.TestCase.assertRaises"]], "asserttrue() (ase2sprkkr.common.test.init_tests.testcase method)": [[877, "ase2sprkkr.common.test.init_tests.TestCase.assertTrue"]], "calc_args() (ase2sprkkr.common.test.init_tests.testcase class method)": [[877, "ase2sprkkr.common.test.init_tests.TestCase.calc_args"]], "runasync() (ase2sprkkr.common.test.init_tests.testcase static method)": [[877, "ase2sprkkr.common.test.init_tests.TestCase.runAsync"]], "run_sprkkr() (ase2sprkkr.common.test.init_tests.testcase method)": [[877, "ase2sprkkr.common.test.init_tests.TestCase.run_sprkkr"]], "temporary_dir() (ase2sprkkr.common.test.init_tests.testcase method)": [[877, "ase2sprkkr.common.test.init_tests.TestCase.temporary_dir"]], "arr_testfce() (in module ase2sprkkr.common.test.init_tests)": [[878, "ase2sprkkr.common.test.init_tests.arr_testfce"]], "assertdictequal() (in module ase2sprkkr.common.test.init_tests)": [[879, "ase2sprkkr.common.test.init_tests.assertDictEqual"]], "assertlistequal() (in module ase2sprkkr.common.test.init_tests)": [[880, "ase2sprkkr.common.test.init_tests.assertListEqual"]], "assert_almost_equals() (in module ase2sprkkr.common.test.init_tests)": [[881, "ase2sprkkr.common.test.init_tests.assert_almost_equals"]], "assert_equals() (in module ase2sprkkr.common.test.init_tests)": [[882, "ase2sprkkr.common.test.init_tests.assert_equals"]], "__init__() (ase2sprkkr.common.test.init_tests.extdict method)": [[883, "ase2sprkkr.common.test.init_tests.extdict.__init__"]], "extdict (class in ase2sprkkr.common.test.init_tests)": [[883, "ase2sprkkr.common.test.init_tests.extdict"]], "testfce() (in module ase2sprkkr.common.test.init_tests)": [[884, "ase2sprkkr.common.test.init_tests.testfce"]], "ase2sprkkr.common.test.test_common": [[885, "module-ase2sprkkr.common.test.test_common"]], "testcommon (class in ase2sprkkr.common.test.test_common)": [[886, "ase2sprkkr.common.test.test_common.TestCommon"]], "__init__() (ase2sprkkr.common.test.test_common.testcommon method)": [[886, "ase2sprkkr.common.test.test_common.TestCommon.__init__"]], "test_asyncio_file_reader() (ase2sprkkr.common.test.test_common.testcommon method)": [[886, "ase2sprkkr.common.test.test_common.TestCommon.test_asyncio_file_reader"]], "test_cached_property() (ase2sprkkr.common.test.test_common.testcommon method)": [[886, "ase2sprkkr.common.test.test_common.TestCommon.test_cached_property"]], "test_common() (ase2sprkkr.common.test.test_common.testcommon method)": [[886, "ase2sprkkr.common.test.test_common.TestCommon.test_common"]], "ase2sprkkr.common.test.test_grammar_types": [[887, "module-ase2sprkkr.common.test.test_grammar_types"]], "testgrammar (class in ase2sprkkr.common.test.test_grammar_types)": [[888, "ase2sprkkr.common.test.test_grammar_types.TestGrammar"]], "__init__() (ase2sprkkr.common.test.test_grammar_types.testgrammar method)": [[888, "ase2sprkkr.common.test.test_grammar_types.TestGrammar.__init__"]], "_test_types() (ase2sprkkr.common.test.test_grammar_types.testgrammar method)": [[888, "ase2sprkkr.common.test.test_grammar_types.TestGrammar._test_types"]], "test_is_the_same_value() (ase2sprkkr.common.test.test_grammar_types.testgrammar method)": [[888, "ase2sprkkr.common.test.test_grammar_types.TestGrammar.test_is_the_same_value"]], "test_types() (ase2sprkkr.common.test.test_grammar_types.testgrammar method)": [[888, "ase2sprkkr.common.test.test_grammar_types.TestGrammar.test_types"]], "ase2sprkkr.common.tools": [[889, "module-ase2sprkkr.common.tools"]], "append_id_to_filename() (in module ase2sprkkr.common.tools)": [[890, "ase2sprkkr.common.tools.append_id_to_filename"]], "main() (in module ase2sprkkr.common.tools)": [[891, "ase2sprkkr.common.tools.main"]], "parse_inches() (in module ase2sprkkr.common.tools)": [[892, "ase2sprkkr.common.tools.parse_inches"]], "parse_named_option() (in module ase2sprkkr.common.tools)": [[893, "ase2sprkkr.common.tools.parse_named_option"]], "parse_tuple_function() (in module ase2sprkkr.common.tools)": [[894, "ase2sprkkr.common.tools.parse_tuple_function"]], "ase2sprkkr.common.unique_values": [[895, "module-ase2sprkkr.common.unique_values"]], "uniquevaluesmapping (class in ase2sprkkr.common.unique_values)": [[896, "ase2sprkkr.common.unique_values.UniqueValuesMapping"]], "__init__() (ase2sprkkr.common.unique_values.uniquevaluesmapping method)": [[896, "ase2sprkkr.common.unique_values.UniqueValuesMapping.__init__"]], "_create_mapping() (ase2sprkkr.common.unique_values.uniquevaluesmapping static method)": [[896, "ase2sprkkr.common.unique_values.UniqueValuesMapping._create_mapping"]], "are_equivalent() (ase2sprkkr.common.unique_values.uniquevaluesmapping static method)": [[896, "ase2sprkkr.common.unique_values.UniqueValuesMapping.are_equivalent"]], "from_values() (ase2sprkkr.common.unique_values.uniquevaluesmapping static method)": [[896, "ase2sprkkr.common.unique_values.UniqueValuesMapping.from_values"]], "indexes() (ase2sprkkr.common.unique_values.uniquevaluesmapping method)": [[896, "ase2sprkkr.common.unique_values.UniqueValuesMapping.indexes"]], "is_equivalent_to() (ase2sprkkr.common.unique_values.uniquevaluesmapping method)": [[896, "ase2sprkkr.common.unique_values.UniqueValuesMapping.is_equivalent_to"]], "iter_unique() (ase2sprkkr.common.unique_values.uniquevaluesmapping method)": [[896, "ase2sprkkr.common.unique_values.UniqueValuesMapping.iter_unique"]], "len_of_unique() (ase2sprkkr.common.unique_values.uniquevaluesmapping method)": [[896, "ase2sprkkr.common.unique_values.UniqueValuesMapping.len_of_unique"]], "mapping (ase2sprkkr.common.unique_values.uniquevaluesmapping attribute)": [[896, "ase2sprkkr.common.unique_values.UniqueValuesMapping.mapping"]], "merge() (ase2sprkkr.common.unique_values.uniquevaluesmapping method)": [[896, "ase2sprkkr.common.unique_values.UniqueValuesMapping.merge"]], "normalize() (ase2sprkkr.common.unique_values.uniquevaluesmapping method)": [[896, "ase2sprkkr.common.unique_values.UniqueValuesMapping.normalize"]], "normalized() (ase2sprkkr.common.unique_values.uniquevaluesmapping method)": [[896, "ase2sprkkr.common.unique_values.UniqueValuesMapping.normalized"]], "unique_indexes() (ase2sprkkr.common.unique_values.uniquevaluesmapping method)": [[896, "ase2sprkkr.common.unique_values.UniqueValuesMapping.unique_indexes"]], "unique_items() (ase2sprkkr.common.unique_values.uniquevaluesmapping method)": [[896, "ase2sprkkr.common.unique_values.UniqueValuesMapping.unique_items"]], "value_to_class_id (ase2sprkkr.common.unique_values.uniquevaluesmapping attribute)": [[896, "ase2sprkkr.common.unique_values.UniqueValuesMapping.value_to_class_id"]], "ase2sprkkr.common.value_definitions": [[897, "module-ase2sprkkr.common.value_definitions"]], "valuedefinition (class in ase2sprkkr.common.value_definitions)": [[898, "ase2sprkkr.common.value_definitions.ValueDefinition"]], "__init__() (ase2sprkkr.common.value_definitions.valuedefinition method)": [[898, "ase2sprkkr.common.value_definitions.ValueDefinition.__init__"]], "_copy_excluded_args (ase2sprkkr.common.value_definitions.valuedefinition attribute)": [[898, "ase2sprkkr.common.value_definitions.ValueDefinition._copy_excluded_args"]], "_create_grammar() (ase2sprkkr.common.value_definitions.valuedefinition method)": [[898, "ase2sprkkr.common.value_definitions.ValueDefinition._create_grammar"]], "_generic_info() (ase2sprkkr.common.value_definitions.valuedefinition method)": [[898, "ase2sprkkr.common.value_definitions.ValueDefinition._generic_info"]], "_get_copy_args() (ase2sprkkr.common.value_definitions.valuedefinition method)": [[898, "ase2sprkkr.common.value_definitions.ValueDefinition._get_copy_args"]], "_grammar (ase2sprkkr.common.value_definitions.valuedefinition property)": [[898, "ase2sprkkr.common.value_definitions.ValueDefinition._grammar"]], "_grammar_of_value() (ase2sprkkr.common.value_definitions.valuedefinition method)": [[898, "ase2sprkkr.common.value_definitions.ValueDefinition._grammar_of_value"]], "_save_to_file() (ase2sprkkr.common.value_definitions.valuedefinition method)": [[898, "ase2sprkkr.common.value_definitions.ValueDefinition._save_to_file"]], "added_to_container() (ase2sprkkr.common.value_definitions.valuedefinition method)": [[898, "ase2sprkkr.common.value_definitions.ValueDefinition.added_to_container"]], "additional_data_description() (ase2sprkkr.common.value_definitions.valuedefinition method)": [[898, "ase2sprkkr.common.value_definitions.ValueDefinition.additional_data_description"]], "allow_duplication() (ase2sprkkr.common.value_definitions.valuedefinition method)": [[898, "ase2sprkkr.common.value_definitions.ValueDefinition.allow_duplication"]], "can_be_repeated (ase2sprkkr.common.value_definitions.valuedefinition property)": [[898, "ase2sprkkr.common.value_definitions.ValueDefinition.can_be_repeated"]], "configuration_type_name (ase2sprkkr.common.value_definitions.valuedefinition attribute)": [[898, "ase2sprkkr.common.value_definitions.ValueDefinition.configuration_type_name"]], "convert_and_validate() (ase2sprkkr.common.value_definitions.valuedefinition method)": [[898, "ase2sprkkr.common.value_definitions.ValueDefinition.convert_and_validate"]], "copy_value() (ase2sprkkr.common.value_definitions.valuedefinition method)": [[898, "ase2sprkkr.common.value_definitions.ValueDefinition.copy_value"]], "data_description() (ase2sprkkr.common.value_definitions.valuedefinition method)": [[898, "ase2sprkkr.common.value_definitions.ValueDefinition.data_description"]], "enrich() (ase2sprkkr.common.value_definitions.valuedefinition method)": [[898, "ase2sprkkr.common.value_definitions.ValueDefinition.enrich"]], "formated_name (ase2sprkkr.common.value_definitions.valuedefinition property)": [[898, "ase2sprkkr.common.value_definitions.ValueDefinition.formated_name"]], "get_value() (ase2sprkkr.common.value_definitions.valuedefinition method)": [[898, "ase2sprkkr.common.value_definitions.ValueDefinition.get_value"]], "is_generated (ase2sprkkr.common.value_definitions.valuedefinition attribute)": [[898, "ase2sprkkr.common.value_definitions.ValueDefinition.is_generated"]], "is_independent_on_the_predecessor (ase2sprkkr.common.value_definitions.valuedefinition property)": [[898, "ase2sprkkr.common.value_definitions.ValueDefinition.is_independent_on_the_predecessor"]], "name_in_grammar (ase2sprkkr.common.value_definitions.valuedefinition attribute)": [[898, "ase2sprkkr.common.value_definitions.ValueDefinition.name_in_grammar"]], "remove() (ase2sprkkr.common.value_definitions.valuedefinition method)": [[898, "ase2sprkkr.common.value_definitions.ValueDefinition.remove"]], "result_class (ase2sprkkr.common.value_definitions.valuedefinition attribute)": [[898, "ase2sprkkr.common.value_definitions.ValueDefinition.result_class"]], "type_from_type_map (ase2sprkkr.common.value_definitions.valuedefinition attribute)": [[898, "ase2sprkkr.common.value_definitions.ValueDefinition.type_from_type_map"]], "validate() (ase2sprkkr.common.value_definitions.valuedefinition method)": [[898, "ase2sprkkr.common.value_definitions.ValueDefinition.validate"]], "value_name_format (ase2sprkkr.common.value_definitions.valuedefinition property)": [[898, "ase2sprkkr.common.value_definitions.ValueDefinition.value_name_format"]], "write() (ase2sprkkr.common.value_definitions.valuedefinition method)": [[898, "ase2sprkkr.common.value_definitions.ValueDefinition.write"]], "write_name() (ase2sprkkr.common.value_definitions.valuedefinition method)": [[898, "ase2sprkkr.common.value_definitions.ValueDefinition.write_name"]], "write_value() (ase2sprkkr.common.value_definitions.valuedefinition method)": [[898, "ase2sprkkr.common.value_definitions.ValueDefinition.write_value"]], "ase2sprkkr.common.warnings": [[899, "module-ase2sprkkr.common.warnings"]], "datavaliditywarning": [[900, "ase2sprkkr.common.warnings.DataValidityWarning"]], "ase2sprkkr.config": [[901, "module-ase2sprkkr.config"]], "calculator_parameters (in module ase2sprkkr.config)": [[902, "ase2sprkkr.config.calculator_parameters"]], "sprkkr_executable_suffix (in module ase2sprkkr.config)": [[903, "ase2sprkkr.config.sprkkr_executable_suffix"]], "ase2sprkkr.examples": [[904, "module-ase2sprkkr.examples"]], "ase2sprkkr.examples.a1_fe_scf_simple": [[905, "module-ase2sprkkr.examples.A1_Fe_scf_simple"]], "ase2sprkkr.examples.a1_fe_scf_simple.fe": [[906, "module-ase2sprkkr.examples.A1_Fe_scf_simple.Fe"]], "main() (in module ase2sprkkr.examples.a1_fe_scf_simple.fe)": [[907, "ase2sprkkr.examples.A1_Fe_scf_simple.Fe.main"]], "ase2sprkkr.examples.a2_fe_scf_input_modifications": [[908, "module-ase2sprkkr.examples.A2_Fe_scf_input_modifications"]], "ase2sprkkr.examples.a2_fe_scf_input_modifications.fe": [[909, "module-ase2sprkkr.examples.A2_Fe_scf_input_modifications.Fe"]], "main() (in module ase2sprkkr.examples.a2_fe_scf_input_modifications.fe)": [[910, "ase2sprkkr.examples.A2_Fe_scf_input_modifications.Fe.main"]], "ase2sprkkr.examples.a3_fe_dos": [[911, "module-ase2sprkkr.examples.A3_Fe_dos"]], "ase2sprkkr.examples.a3_fe_dos.fe": [[912, "module-ase2sprkkr.examples.A3_Fe_dos.Fe"]], "main() (in module ase2sprkkr.examples.a3_fe_dos.fe)": [[913, "ase2sprkkr.examples.A3_Fe_dos.Fe.main"]], "ase2sprkkr.examples.a4_cpa_example": [[914, "module-ase2sprkkr.examples.A4_CPA_Example"]], "ase2sprkkr.examples.a4_cpa_example.ni_doped_sto": [[915, "module-ase2sprkkr.examples.A4_CPA_Example.Ni_doped_STO"]], "main() (in module ase2sprkkr.examples.a4_cpa_example.ni_doped_sto)": [[916, "ase2sprkkr.examples.A4_CPA_Example.Ni_doped_STO.main"]], "ase2sprkkr.examples.a5_al_eos": [[917, "module-ase2sprkkr.examples.A5_Al_EOS"]], "ase2sprkkr.examples.a5_al_eos.al": [[918, "module-ase2sprkkr.examples.A5_Al_EOS.Al"]], "main() (in module ase2sprkkr.examples.a5_al_eos.al)": [[919, "ase2sprkkr.examples.A5_Al_EOS.Al.main"]], "ase2sprkkr.examples.a6_cu_msspec": [[920, "module-ase2sprkkr.examples.A6_Cu_MSSPEC"]], "ase2sprkkr.examples.a6_cu_msspec.cu": [[921, "module-ase2sprkkr.examples.A6_Cu_MSSPEC.Cu"]], "main() (in module ase2sprkkr.examples.a6_cu_msspec.cu)": [[922, "ase2sprkkr.examples.A6_Cu_MSSPEC.Cu.main"]], "ase2sprkkr.examples.a7_srtio3_msspec": [[923, "module-ase2sprkkr.examples.A7_SrTiO3_MSSPEC"]], "ase2sprkkr.examples.a7_srtio3_msspec.sto": [[924, "module-ase2sprkkr.examples.A7_SrTiO3_MSSPEC.STO"]], "main() (in module ase2sprkkr.examples.a7_srtio3_msspec.sto)": [[925, "ase2sprkkr.examples.A7_SrTiO3_MSSPEC.STO.main"]], "ase2sprkkr.examples.a8_arpes_and_plotting": [[926, "module-ase2sprkkr.examples.A8_ARPES_and_plotting"]], "ase2sprkkr.examples.a8_arpes_and_plotting.arpes": [[927, "module-ase2sprkkr.examples.A8_ARPES_and_plotting.arpes"]], "main() (in module ase2sprkkr.examples.a8_arpes_and_plotting.arpes)": [[928, "ase2sprkkr.examples.A8_ARPES_and_plotting.arpes.main"]], "ase2sprkkr.input_parameters": [[929, "module-ase2sprkkr.input_parameters"]], "ase2sprkkr.input_parameters.definitions": [[930, "module-ase2sprkkr.input_parameters.definitions"]], "ase2sprkkr.input_parameters.definitions.arpes": [[931, "module-ase2sprkkr.input_parameters.definitions.arpes"]], "input_parameters (in module ase2sprkkr.input_parameters.definitions.arpes)": [[932, "ase2sprkkr.input_parameters.definitions.arpes.input_parameters"]], "ase2sprkkr.input_parameters.definitions.bsf": [[933, "module-ase2sprkkr.input_parameters.definitions.bsf"]], "input_parameters (in module ase2sprkkr.input_parameters.definitions.bsf)": [[934, "ase2sprkkr.input_parameters.definitions.bsf.input_parameters"]], "ase2sprkkr.input_parameters.definitions.dos": [[935, "module-ase2sprkkr.input_parameters.definitions.dos"]], "input_parameters (in module ase2sprkkr.input_parameters.definitions.dos)": [[936, "ase2sprkkr.input_parameters.definitions.dos.input_parameters"]], "ase2sprkkr.input_parameters.definitions.gilbert": [[937, "module-ase2sprkkr.input_parameters.definitions.gilbert"]], "input_parameters (in module ase2sprkkr.input_parameters.definitions.gilbert)": [[938, "ase2sprkkr.input_parameters.definitions.gilbert.input_parameters"]], "ase2sprkkr.input_parameters.definitions.jxc": [[939, "module-ase2sprkkr.input_parameters.definitions.jxc"]], "input_parameters (in module ase2sprkkr.input_parameters.definitions.jxc)": [[940, "ase2sprkkr.input_parameters.definitions.jxc.input_parameters"]], "ase2sprkkr.input_parameters.definitions.marpes": [[941, "module-ase2sprkkr.input_parameters.definitions.marpes"]], "ase2sprkkr.input_parameters.definitions.phagen": [[942, "module-ase2sprkkr.input_parameters.definitions.phagen"]], "input_parameters (in module ase2sprkkr.input_parameters.definitions.phagen)": [[943, "ase2sprkkr.input_parameters.definitions.phagen.input_parameters"]], "ase2sprkkr.input_parameters.definitions.scf": [[944, "module-ase2sprkkr.input_parameters.definitions.scf"]], "input_parameters (in module ase2sprkkr.input_parameters.definitions.scf)": [[945, "ase2sprkkr.input_parameters.definitions.scf.input_parameters"]], "ase2sprkkr.input_parameters.definitions.sections": [[946, "module-ase2sprkkr.input_parameters.definitions.sections"]], "control() (in module ase2sprkkr.input_parameters.definitions.sections)": [[947, "ase2sprkkr.input_parameters.definitions.sections.CONTROL"]], "cpa (in module ase2sprkkr.input_parameters.definitions.sections)": [[948, "ase2sprkkr.input_parameters.definitions.sections.CPA"]], "energy (in module ase2sprkkr.input_parameters.definitions.sections)": [[949, "ase2sprkkr.input_parameters.definitions.sections.ENERGY"]], "mode (in module ase2sprkkr.input_parameters.definitions.sections)": [[950, "ase2sprkkr.input_parameters.definitions.sections.MODE"]], "scf (in module ase2sprkkr.input_parameters.definitions.sections)": [[951, "ase2sprkkr.input_parameters.definitions.sections.SCF"]], "sites (in module ase2sprkkr.input_parameters.definitions.sections)": [[952, "ase2sprkkr.input_parameters.definitions.sections.SITES"]], "strconst (in module ase2sprkkr.input_parameters.definitions.sections)": [[953, "ase2sprkkr.input_parameters.definitions.sections.STRCONST"]], "task() (in module ase2sprkkr.input_parameters.definitions.sections)": [[954, "ase2sprkkr.input_parameters.definitions.sections.TASK"]], "tau (in module ase2sprkkr.input_parameters.definitions.sections)": [[955, "ase2sprkkr.input_parameters.definitions.sections.TAU"]], "tausection (class in ase2sprkkr.input_parameters.definitions.sections)": [[956, "ase2sprkkr.input_parameters.definitions.sections.TauSection"]], "__init__() (ase2sprkkr.input_parameters.definitions.sections.tausection method)": [[956, "ase2sprkkr.input_parameters.definitions.sections.TauSection.__init__"]], "_copy_args (ase2sprkkr.input_parameters.definitions.sections.tausection attribute)": [[956, "ase2sprkkr.input_parameters.definitions.sections.TauSection._copy_args"]], "set_from_atoms() (ase2sprkkr.input_parameters.definitions.sections.tausection method)": [[956, "ase2sprkkr.input_parameters.definitions.sections.TauSection.set_from_atoms"]], "_nktab_value() (in module ase2sprkkr.input_parameters.definitions.sections)": [[957, "ase2sprkkr.input_parameters.definitions.sections._nktab_value"]], "ase2sprkkr.input_parameters.input_parameters": [[958, "module-ase2sprkkr.input_parameters.input_parameters"]], "inputparameters (class in ase2sprkkr.input_parameters.input_parameters)": [[959, "ase2sprkkr.input_parameters.input_parameters.InputParameters"]], "__init__() (ase2sprkkr.input_parameters.input_parameters.inputparameters method)": [[959, "ase2sprkkr.input_parameters.input_parameters.InputParameters.__init__"]], "_default_mpi_runner (ase2sprkkr.input_parameters.input_parameters.inputparameters attribute)": [[959, "ase2sprkkr.input_parameters.input_parameters.InputParameters._default_mpi_runner"]], "calculate() (ase2sprkkr.input_parameters.input_parameters.inputparameters method)": [[959, "ase2sprkkr.input_parameters.input_parameters.InputParameters.calculate"]], "change_task() (ase2sprkkr.input_parameters.input_parameters.inputparameters method)": [[959, "ase2sprkkr.input_parameters.input_parameters.InputParameters.change_task"]], "create() (ase2sprkkr.input_parameters.input_parameters.inputparameters class method)": [[959, "ase2sprkkr.input_parameters.input_parameters.InputParameters.create"]], "create_input_parameters() (ase2sprkkr.input_parameters.input_parameters.inputparameters class method)": [[959, "ase2sprkkr.input_parameters.input_parameters.InputParameters.create_input_parameters"]], "default_mpi_runner() (ase2sprkkr.input_parameters.input_parameters.inputparameters class method)": [[959, "ase2sprkkr.input_parameters.input_parameters.InputParameters.default_mpi_runner"]], "default_parameters() (ase2sprkkr.input_parameters.input_parameters.inputparameters class method)": [[959, "ase2sprkkr.input_parameters.input_parameters.InputParameters.default_parameters"]], "definitions (ase2sprkkr.input_parameters.input_parameters.inputparameters attribute)": [[959, "ase2sprkkr.input_parameters.input_parameters.InputParameters.definitions"]], "executable_params() (ase2sprkkr.input_parameters.input_parameters.inputparameters method)": [[959, "ase2sprkkr.input_parameters.input_parameters.InputParameters.executable_params"]], "from_file() (ase2sprkkr.input_parameters.input_parameters.inputparameters class method)": [[959, "ase2sprkkr.input_parameters.input_parameters.InputParameters.from_file"]], "is_it_a_input_parameters_name() (ase2sprkkr.input_parameters.input_parameters.inputparameters class method)": [[959, "ase2sprkkr.input_parameters.input_parameters.InputParameters.is_it_a_input_parameters_name"]], "is_mpi() (ase2sprkkr.input_parameters.input_parameters.inputparameters method)": [[959, "ase2sprkkr.input_parameters.input_parameters.InputParameters.is_mpi"]], "mpi_runner() (ase2sprkkr.input_parameters.input_parameters.inputparameters method)": [[959, "ase2sprkkr.input_parameters.input_parameters.InputParameters.mpi_runner"]], "read_output_from_file() (ase2sprkkr.input_parameters.input_parameters.inputparameters method)": [[959, "ase2sprkkr.input_parameters.input_parameters.InputParameters.read_output_from_file"]], "resolve_executable_suffix() (ase2sprkkr.input_parameters.input_parameters.inputparameters method)": [[959, "ase2sprkkr.input_parameters.input_parameters.InputParameters.resolve_executable_suffix"]], "result_reader() (ase2sprkkr.input_parameters.input_parameters.inputparameters method)": [[959, "ase2sprkkr.input_parameters.input_parameters.InputParameters.result_reader"]], "run_process() (ase2sprkkr.input_parameters.input_parameters.inputparameters method)": [[959, "ase2sprkkr.input_parameters.input_parameters.InputParameters.run_process"]], "save_to_file() (ase2sprkkr.input_parameters.input_parameters.inputparameters method)": [[959, "ase2sprkkr.input_parameters.input_parameters.InputParameters.save_to_file"]], "set_option() (ase2sprkkr.input_parameters.input_parameters.inputparameters method)": [[959, "ase2sprkkr.input_parameters.input_parameters.InputParameters.set_option"]], "task_definition() (ase2sprkkr.input_parameters.input_parameters.inputparameters class method)": [[959, "ase2sprkkr.input_parameters.input_parameters.InputParameters.task_definition"]], "task_name (ase2sprkkr.input_parameters.input_parameters.inputparameters property)": [[959, "ase2sprkkr.input_parameters.input_parameters.InputParameters.task_name"]], "inputsection (class in ase2sprkkr.input_parameters.input_parameters)": [[960, "ase2sprkkr.input_parameters.input_parameters.InputSection"]], "__init__() (ase2sprkkr.input_parameters.input_parameters.inputsection method)": [[960, "ase2sprkkr.input_parameters.input_parameters.InputSection.__init__"]], "ase2sprkkr.input_parameters.input_parameters_definitions": [[961, "module-ase2sprkkr.input_parameters.input_parameters_definitions"]], "inputparametersdefinition (class in ase2sprkkr.input_parameters.input_parameters_definitions)": [[962, "ase2sprkkr.input_parameters.input_parameters_definitions.InputParametersDefinition"]], "__init__() (ase2sprkkr.input_parameters.input_parameters_definitions.inputparametersdefinition method)": [[962, "ase2sprkkr.input_parameters.input_parameters_definitions.InputParametersDefinition.__init__"]], "_copy_args (ase2sprkkr.input_parameters.input_parameters_definitions.inputparametersdefinition attribute)": [[962, "ase2sprkkr.input_parameters.input_parameters_definitions.InputParametersDefinition._copy_args"]], "_generic_info() (ase2sprkkr.input_parameters.input_parameters_definitions.inputparametersdefinition method)": [[962, "ase2sprkkr.input_parameters.input_parameters_definitions.InputParametersDefinition._generic_info"]], "child_class (ase2sprkkr.input_parameters.input_parameters_definitions.inputparametersdefinition attribute)": [[962, "ase2sprkkr.input_parameters.input_parameters_definitions.InputParametersDefinition.child_class"]], "configuration_type_name (ase2sprkkr.input_parameters.input_parameters_definitions.inputparametersdefinition attribute)": [[962, "ase2sprkkr.input_parameters.input_parameters_definitions.InputParametersDefinition.configuration_type_name"]], "custom_class() (ase2sprkkr.input_parameters.input_parameters_definitions.inputparametersdefinition static method)": [[962, "ase2sprkkr.input_parameters.input_parameters_definitions.InputParametersDefinition.custom_class"]], "custom_value_grammar() (ase2sprkkr.input_parameters.input_parameters_definitions.inputparametersdefinition class method)": [[962, "ase2sprkkr.input_parameters.input_parameters_definitions.InputParametersDefinition.custom_value_grammar"]], "delimiter (ase2sprkkr.input_parameters.input_parameters_definitions.inputparametersdefinition attribute)": [[962, "ase2sprkkr.input_parameters.input_parameters_definitions.InputParametersDefinition.delimiter"]], "grammar_of_delimiter (ase2sprkkr.input_parameters.input_parameters_definitions.inputparametersdefinition attribute)": [[962, "ase2sprkkr.input_parameters.input_parameters_definitions.InputParametersDefinition.grammar_of_delimiter"]], "result_class (ase2sprkkr.input_parameters.input_parameters_definitions.inputparametersdefinition attribute)": [[962, "ase2sprkkr.input_parameters.input_parameters_definitions.InputParametersDefinition.result_class"]], "save_hook (ase2sprkkr.input_parameters.input_parameters_definitions.inputparametersdefinition attribute)": [[962, "ase2sprkkr.input_parameters.input_parameters_definitions.InputParametersDefinition.save_hook"]], "inputsectiondefinition (class in ase2sprkkr.input_parameters.input_parameters_definitions)": [[963, "ase2sprkkr.input_parameters.input_parameters_definitions.InputSectionDefinition"]], "__init__() (ase2sprkkr.input_parameters.input_parameters_definitions.inputsectiondefinition method)": [[963, "ase2sprkkr.input_parameters.input_parameters_definitions.InputSectionDefinition.__init__"]], "_copy_args (ase2sprkkr.input_parameters.input_parameters_definitions.inputsectiondefinition attribute)": [[963, "ase2sprkkr.input_parameters.input_parameters_definitions.InputSectionDefinition._copy_args"]], "child_class (ase2sprkkr.input_parameters.input_parameters_definitions.inputsectiondefinition attribute)": [[963, "ase2sprkkr.input_parameters.input_parameters_definitions.InputSectionDefinition.child_class"]], "custom_class() (ase2sprkkr.input_parameters.input_parameters_definitions.inputsectiondefinition static method)": [[963, "ase2sprkkr.input_parameters.input_parameters_definitions.InputSectionDefinition.custom_class"]], "delimiter (ase2sprkkr.input_parameters.input_parameters_definitions.inputsectiondefinition attribute)": [[963, "ase2sprkkr.input_parameters.input_parameters_definitions.InputSectionDefinition.delimiter"]], "do_not_skip_whitespaces_before_name (ase2sprkkr.input_parameters.input_parameters_definitions.inputsectiondefinition attribute)": [[963, "ase2sprkkr.input_parameters.input_parameters_definitions.InputSectionDefinition.do_not_skip_whitespaces_before_name"]], "grammar_of_delimiter (ase2sprkkr.input_parameters.input_parameters_definitions.inputsectiondefinition attribute)": [[963, "ase2sprkkr.input_parameters.input_parameters_definitions.InputSectionDefinition.grammar_of_delimiter"]], "result_class (ase2sprkkr.input_parameters.input_parameters_definitions.inputsectiondefinition attribute)": [[963, "ase2sprkkr.input_parameters.input_parameters_definitions.InputSectionDefinition.result_class"]], "inputvaluedefinition (class in ase2sprkkr.input_parameters.input_parameters_definitions)": [[964, "ase2sprkkr.input_parameters.input_parameters_definitions.InputValueDefinition"]], "__init__() (ase2sprkkr.input_parameters.input_parameters_definitions.inputvaluedefinition method)": [[964, "ase2sprkkr.input_parameters.input_parameters_definitions.InputValueDefinition.__init__"]], "_copy_args (ase2sprkkr.input_parameters.input_parameters_definitions.inputvaluedefinition attribute)": [[964, "ase2sprkkr.input_parameters.input_parameters_definitions.InputValueDefinition._copy_args"]], "grammar_of_delimiter (ase2sprkkr.input_parameters.input_parameters_definitions.inputvaluedefinition attribute)": [[964, "ase2sprkkr.input_parameters.input_parameters_definitions.InputValueDefinition.grammar_of_delimiter"]], "name_value_delimiter (ase2sprkkr.input_parameters.input_parameters_definitions.inputvaluedefinition attribute)": [[964, "ase2sprkkr.input_parameters.input_parameters_definitions.InputValueDefinition.name_value_delimiter"]], "prefix (ase2sprkkr.input_parameters.input_parameters_definitions.inputvaluedefinition attribute)": [[964, "ase2sprkkr.input_parameters.input_parameters_definitions.InputValueDefinition.prefix"]], "type_from_type_map (ase2sprkkr.input_parameters.input_parameters_definitions.inputvaluedefinition attribute)": [[964, "ase2sprkkr.input_parameters.input_parameters_definitions.InputValueDefinition.type_from_type_map"]], "type_of_dangerous (ase2sprkkr.input_parameters.input_parameters_definitions.inputvaluedefinition attribute)": [[964, "ase2sprkkr.input_parameters.input_parameters_definitions.InputValueDefinition.type_of_dangerous"]], "ase2sprkkr.input_parameters.test": [[965, "module-ase2sprkkr.input_parameters.test"]], "ase2sprkkr.input_parameters.test.init_tests": [[966, "module-ase2sprkkr.input_parameters.test.init_tests"]], "testcase (class in ase2sprkkr.input_parameters.test.init_tests)": [[967, "ase2sprkkr.input_parameters.test.init_tests.TestCase"]], "__init__() (ase2sprkkr.input_parameters.test.init_tests.testcase method)": [[967, "ase2sprkkr.input_parameters.test.init_tests.TestCase.__init__"]], "_calc_args (ase2sprkkr.input_parameters.test.init_tests.testcase attribute)": [[967, "ase2sprkkr.input_parameters.test.init_tests.TestCase._calc_args"]], "_print_output (ase2sprkkr.input_parameters.test.init_tests.testcase attribute)": [[967, "ase2sprkkr.input_parameters.test.init_tests.TestCase._print_output"]], "almost_equal_precision() (ase2sprkkr.input_parameters.test.init_tests.testcase class method)": [[967, "ase2sprkkr.input_parameters.test.init_tests.TestCase.almost_equal_precision"]], "assertalmostequal() (ase2sprkkr.input_parameters.test.init_tests.testcase method)": [[967, "ase2sprkkr.input_parameters.test.init_tests.TestCase.assertAlmostEqual"]], "assertasyncequal() (ase2sprkkr.input_parameters.test.init_tests.testcase method)": [[967, "ase2sprkkr.input_parameters.test.init_tests.TestCase.assertAsyncEqual"]], "assertasyncraises() (ase2sprkkr.input_parameters.test.init_tests.testcase method)": [[967, "ase2sprkkr.input_parameters.test.init_tests.TestCase.assertAsyncRaises"]], "assertequal() (ase2sprkkr.input_parameters.test.init_tests.testcase method)": [[967, "ase2sprkkr.input_parameters.test.init_tests.TestCase.assertEqual"]], "assertfalse() (ase2sprkkr.input_parameters.test.init_tests.testcase method)": [[967, "ase2sprkkr.input_parameters.test.init_tests.TestCase.assertFalse"]], "assertisnone() (ase2sprkkr.input_parameters.test.init_tests.testcase method)": [[967, "ase2sprkkr.input_parameters.test.init_tests.TestCase.assertIsNone"]], "assertnotequal() (ase2sprkkr.input_parameters.test.init_tests.testcase method)": [[967, "ase2sprkkr.input_parameters.test.init_tests.TestCase.assertNotEqual"]], "assertraises() (ase2sprkkr.input_parameters.test.init_tests.testcase method)": [[967, "ase2sprkkr.input_parameters.test.init_tests.TestCase.assertRaises"]], "asserttrue() (ase2sprkkr.input_parameters.test.init_tests.testcase method)": [[967, "ase2sprkkr.input_parameters.test.init_tests.TestCase.assertTrue"]], "calc_args() (ase2sprkkr.input_parameters.test.init_tests.testcase class method)": [[967, "ase2sprkkr.input_parameters.test.init_tests.TestCase.calc_args"]], "runasync() (ase2sprkkr.input_parameters.test.init_tests.testcase static method)": [[967, "ase2sprkkr.input_parameters.test.init_tests.TestCase.runAsync"]], "run_sprkkr() (ase2sprkkr.input_parameters.test.init_tests.testcase method)": [[967, "ase2sprkkr.input_parameters.test.init_tests.TestCase.run_sprkkr"]], "temporary_dir() (ase2sprkkr.input_parameters.test.init_tests.testcase method)": [[967, "ase2sprkkr.input_parameters.test.init_tests.TestCase.temporary_dir"]], "arr_testfce() (in module ase2sprkkr.input_parameters.test.init_tests)": [[968, "ase2sprkkr.input_parameters.test.init_tests.arr_testfce"]], "assertdictequal() (in module ase2sprkkr.input_parameters.test.init_tests)": [[969, "ase2sprkkr.input_parameters.test.init_tests.assertDictEqual"]], "assertlistequal() (in module ase2sprkkr.input_parameters.test.init_tests)": [[970, "ase2sprkkr.input_parameters.test.init_tests.assertListEqual"]], "assert_almost_equals() (in module ase2sprkkr.input_parameters.test.init_tests)": [[971, "ase2sprkkr.input_parameters.test.init_tests.assert_almost_equals"]], "assert_equals() (in module ase2sprkkr.input_parameters.test.init_tests)": [[972, "ase2sprkkr.input_parameters.test.init_tests.assert_equals"]], "__init__() (ase2sprkkr.input_parameters.test.init_tests.extdict method)": [[973, "ase2sprkkr.input_parameters.test.init_tests.extdict.__init__"]], "extdict (class in ase2sprkkr.input_parameters.test.init_tests)": [[973, "ase2sprkkr.input_parameters.test.init_tests.extdict"]], "testfce() (in module ase2sprkkr.input_parameters.test.init_tests)": [[974, "ase2sprkkr.input_parameters.test.init_tests.testfce"]], "ase2sprkkr.input_parameters.test.test_definitions": [[975, "module-ase2sprkkr.input_parameters.test.test_definitions"]], "testdefinitions (class in ase2sprkkr.input_parameters.test.test_definitions)": [[976, "ase2sprkkr.input_parameters.test.test_definitions.TestDefinitions"]], "__init__() (ase2sprkkr.input_parameters.test.test_definitions.testdefinitions method)": [[976, "ase2sprkkr.input_parameters.test.test_definitions.TestDefinitions.__init__"]], "change_task() (ase2sprkkr.input_parameters.test.test_definitions.testdefinitions method)": [[976, "ase2sprkkr.input_parameters.test.test_definitions.TestDefinitions.change_task"]], "jxc() (ase2sprkkr.input_parameters.test.test_definitions.testdefinitions method)": [[976, "ase2sprkkr.input_parameters.test.test_definitions.TestDefinitions.jxc"]], "test_defaults() (ase2sprkkr.input_parameters.test.test_definitions.testdefinitions method)": [[976, "ase2sprkkr.input_parameters.test.test_definitions.TestDefinitions.test_defaults"]], "test_definitions() (ase2sprkkr.input_parameters.test.test_definitions.testdefinitions method)": [[976, "ase2sprkkr.input_parameters.test.test_definitions.TestDefinitions.test_definitions"]], "ase2sprkkr.input_parameters.test.test_input_parameters": [[977, "module-ase2sprkkr.input_parameters.test.test_input_parameters"]], "testinputparameters (class in ase2sprkkr.input_parameters.test.test_input_parameters)": [[978, "ase2sprkkr.input_parameters.test.test_input_parameters.TestInputParameters"]], "__init__() (ase2sprkkr.input_parameters.test.test_input_parameters.testinputparameters method)": [[978, "ase2sprkkr.input_parameters.test.test_input_parameters.TestInputParameters.__init__"]], "assertnotvalid() (ase2sprkkr.input_parameters.test.test_input_parameters.testinputparameters method)": [[978, "ase2sprkkr.input_parameters.test.test_input_parameters.TestInputParameters.assertNotValid"]], "assertparse() (ase2sprkkr.input_parameters.test.test_input_parameters.testinputparameters method)": [[978, "ase2sprkkr.input_parameters.test.test_input_parameters.TestInputParameters.assertParse"]], "parse() (ase2sprkkr.input_parameters.test.test_input_parameters.testinputparameters method)": [[978, "ase2sprkkr.input_parameters.test.test_input_parameters.TestInputParameters.parse"]], "test_copy() (ase2sprkkr.input_parameters.test.test_input_parameters.testinputparameters method)": [[978, "ase2sprkkr.input_parameters.test.test_input_parameters.TestInputParameters.test_copy"]], "test_custom_value() (ase2sprkkr.input_parameters.test.test_input_parameters.testinputparameters method)": [[978, "ase2sprkkr.input_parameters.test.test_input_parameters.TestInputParameters.test_custom_value"]], "test_dangerous_value() (ase2sprkkr.input_parameters.test.test_input_parameters.testinputparameters method)": [[978, "ase2sprkkr.input_parameters.test.test_input_parameters.TestInputParameters.test_dangerous_value"]], "test_gather() (ase2sprkkr.input_parameters.test.test_input_parameters.testinputparameters method)": [[978, "ase2sprkkr.input_parameters.test.test_input_parameters.TestInputParameters.test_gather"]], "test_input_parameters_definition() (ase2sprkkr.input_parameters.test.test_input_parameters.testinputparameters method)": [[978, "ase2sprkkr.input_parameters.test.test_input_parameters.TestInputParameters.test_input_parameters_definition"]], "test_numbered_array() (ase2sprkkr.input_parameters.test.test_input_parameters.testinputparameters method)": [[978, "ase2sprkkr.input_parameters.test.test_input_parameters.TestInputParameters.test_numbered_array"]], "test_numpy_array() (ase2sprkkr.input_parameters.test.test_input_parameters.testinputparameters method)": [[978, "ase2sprkkr.input_parameters.test.test_input_parameters.TestInputParameters.test_numpy_array"]], "test_repeated_value() (ase2sprkkr.input_parameters.test.test_input_parameters.testinputparameters method)": [[978, "ase2sprkkr.input_parameters.test.test_input_parameters.TestInputParameters.test_repeated_value"]], "test_section_delimiter_value() (ase2sprkkr.input_parameters.test.test_input_parameters.testinputparameters method)": [[978, "ase2sprkkr.input_parameters.test.test_input_parameters.TestInputParameters.test_section_delimiter_value"]], "test_set_values() (ase2sprkkr.input_parameters.test.test_input_parameters.testinputparameters method)": [[978, "ase2sprkkr.input_parameters.test.test_input_parameters.TestInputParameters.test_set_values"]], "test_switch() (ase2sprkkr.input_parameters.test.test_input_parameters.testinputparameters method)": [[978, "ase2sprkkr.input_parameters.test.test_input_parameters.TestInputParameters.test_switch"]], "test_write_condition() (ase2sprkkr.input_parameters.test.test_input_parameters.testinputparameters method)": [[978, "ase2sprkkr.input_parameters.test.test_input_parameters.TestInputParameters.test_write_condition"]], "ar() (in module ase2sprkkr.input_parameters.test.test_input_parameters)": [[979, "ase2sprkkr.input_parameters.test.test_input_parameters.ar"]], "ase2sprkkr.output_files": [[980, "module-ase2sprkkr.output_files"]], "ase2sprkkr.output_files.definitions": [[981, "module-ase2sprkkr.output_files.definitions"]], "arithmetic (class in ase2sprkkr.output_files.definitions)": [[982, "ase2sprkkr.output_files.definitions.Arithmetic"]], "__init__() (ase2sprkkr.output_files.definitions.arithmetic method)": [[982, "ase2sprkkr.output_files.definitions.Arithmetic.__init__"]], "_check_arithmetic() (ase2sprkkr.output_files.definitions.arithmetic method)": [[982, "ase2sprkkr.output_files.definitions.Arithmetic._check_arithmetic"]], "_do_arithmetic() (ase2sprkkr.output_files.definitions.arithmetic method)": [[982, "ase2sprkkr.output_files.definitions.Arithmetic._do_arithmetic"]], "commonoutputfile (class in ase2sprkkr.output_files.definitions)": [[983, "ase2sprkkr.output_files.definitions.CommonOutputFile"]], "__init__() (ase2sprkkr.output_files.definitions.commonoutputfile method)": [[983, "ase2sprkkr.output_files.definitions.CommonOutputFile.__init__"]], "n_atoms() (ase2sprkkr.output_files.definitions.commonoutputfile method)": [[983, "ase2sprkkr.output_files.definitions.CommonOutputFile.n_atoms"]], "n_orbitals() (ase2sprkkr.output_files.definitions.commonoutputfile method)": [[983, "ase2sprkkr.output_files.definitions.CommonOutputFile.n_orbitals"]], "n_types() (ase2sprkkr.output_files.definitions.commonoutputfile method)": [[983, "ase2sprkkr.output_files.definitions.CommonOutputFile.n_types"]], "site_type_index() (ase2sprkkr.output_files.definitions.commonoutputfile method)": [[983, "ase2sprkkr.output_files.definitions.CommonOutputFile.site_type_index"]], "outputfile (class in ase2sprkkr.output_files.definitions)": [[984, "ase2sprkkr.output_files.definitions.OutputFile"]], "__init__() (ase2sprkkr.output_files.definitions.outputfile method)": [[984, "ase2sprkkr.output_files.definitions.OutputFile.__init__"]], "definitions (ase2sprkkr.output_files.definitions.outputfile attribute)": [[984, "ase2sprkkr.output_files.definitions.OutputFile.definitions"]], "from_file() (ase2sprkkr.output_files.definitions.outputfile class method)": [[984, "ase2sprkkr.output_files.definitions.OutputFile.from_file"]], "unknown_output_file_definition (ase2sprkkr.output_files.definitions.outputfile attribute)": [[984, "ase2sprkkr.output_files.definitions.OutputFile.unknown_output_file_definition"]], "unknowndatavalue (class in ase2sprkkr.output_files.definitions)": [[985, "ase2sprkkr.output_files.definitions.UnknownDataValue"]], "__init__() (ase2sprkkr.output_files.definitions.unknowndatavalue method)": [[985, "ase2sprkkr.output_files.definitions.UnknownDataValue.__init__"]], "as_array() (ase2sprkkr.output_files.definitions.unknowndatavalue method)": [[985, "ase2sprkkr.output_files.definitions.UnknownDataValue.as_array"]], "ase2sprkkr.output_files.definitions.bsf": [[986, "module-ase2sprkkr.output_files.definitions.bsf"]], "bsfdefinition (class in ase2sprkkr.output_files.definitions.bsf)": [[987, "ase2sprkkr.output_files.definitions.bsf.BSFDefinition"]], "__init__() (ase2sprkkr.output_files.definitions.bsf.bsfdefinition method)": [[987, "ase2sprkkr.output_files.definitions.bsf.BSFDefinition.__init__"]], "result_class (ase2sprkkr.output_files.definitions.bsf.bsfdefinition attribute)": [[987, "ase2sprkkr.output_files.definitions.bsf.BSFDefinition.result_class"]], "bsfoutputfile (class in ase2sprkkr.output_files.definitions.bsf)": [[988, "ase2sprkkr.output_files.definitions.bsf.BSFOutputFile"]], "__init__() (ase2sprkkr.output_files.definitions.bsf.bsfoutputfile method)": [[988, "ase2sprkkr.output_files.definitions.bsf.BSFOutputFile.__init__"]], "_arithmetic_values (ase2sprkkr.output_files.definitions.bsf.bsfoutputfile attribute)": [[988, "ase2sprkkr.output_files.definitions.bsf.BSFOutputFile._arithmetic_values"]], "_assert_arithmetic() (ase2sprkkr.output_files.definitions.bsf.bsfoutputfile method)": [[988, "ase2sprkkr.output_files.definitions.bsf.BSFOutputFile._assert_arithmetic"]], "plot() (ase2sprkkr.output_files.definitions.bsf.bsfoutputfile method)": [[988, "ase2sprkkr.output_files.definitions.bsf.BSFOutputFile.plot"]], "create_definition() (in module ase2sprkkr.output_files.definitions.bsf)": [[989, "ase2sprkkr.output_files.definitions.bsf.create_definition"]], "ase2sprkkr.output_files.definitions.dos": [[990, "module-ase2sprkkr.output_files.definitions.dos"]], "dos (class in ase2sprkkr.output_files.definitions.dos)": [[991, "ase2sprkkr.output_files.definitions.dos.DOS"]], "__init__() (ase2sprkkr.output_files.definitions.dos.dos method)": [[991, "ase2sprkkr.output_files.definitions.dos.DOS.__init__"]], "_check_arithmetic() (ase2sprkkr.output_files.definitions.dos.dos method)": [[991, "ase2sprkkr.output_files.definitions.dos.DOS._check_arithmetic"]], "_do_arithmetic() (ase2sprkkr.output_files.definitions.dos.dos method)": [[991, "ase2sprkkr.output_files.definitions.dos.DOS._do_arithmetic"]], "copy() (ase2sprkkr.output_files.definitions.dos.dos method)": [[991, "ase2sprkkr.output_files.definitions.dos.DOS.copy"]], "plot() (ase2sprkkr.output_files.definitions.dos.dos method)": [[991, "ase2sprkkr.output_files.definitions.dos.DOS.plot"]], "shape (ase2sprkkr.output_files.definitions.dos.dos property)": [[991, "ase2sprkkr.output_files.definitions.dos.DOS.shape"]], "dosdefinition (class in ase2sprkkr.output_files.definitions.dos)": [[992, "ase2sprkkr.output_files.definitions.dos.DOSDefinition"]], "__init__() (ase2sprkkr.output_files.definitions.dos.dosdefinition method)": [[992, "ase2sprkkr.output_files.definitions.dos.DOSDefinition.__init__"]], "result_class (ase2sprkkr.output_files.definitions.dos.dosdefinition attribute)": [[992, "ase2sprkkr.output_files.definitions.dos.DOSDefinition.result_class"]], "dosoutputfile (class in ase2sprkkr.output_files.definitions.dos)": [[993, "ase2sprkkr.output_files.definitions.dos.DOSOutputFile"]], "__init__() (ase2sprkkr.output_files.definitions.dos.dosoutputfile method)": [[993, "ase2sprkkr.output_files.definitions.dos.DOSOutputFile.__init__"]], "_clear_computed() (ase2sprkkr.output_files.definitions.dos.dosoutputfile method)": [[993, "ase2sprkkr.output_files.definitions.dos.DOSOutputFile._clear_computed"]], "_create_dos() (ase2sprkkr.output_files.definitions.dos.dosoutputfile method)": [[993, "ase2sprkkr.output_files.definitions.dos.DOSOutputFile._create_dos"]], "_resolve_spin() (ase2sprkkr.output_files.definitions.dos.dosoutputfile static method)": [[993, "ase2sprkkr.output_files.definitions.dos.DOSOutputFile._resolve_spin"]], "dos_for_site_type() (ase2sprkkr.output_files.definitions.dos.dosoutputfile method)": [[993, "ase2sprkkr.output_files.definitions.dos.DOSOutputFile.dos_for_site_type"]], "energy (ase2sprkkr.output_files.definitions.dos.dosoutputfile property)": [[993, "ase2sprkkr.output_files.definitions.dos.DOSOutputFile.energy"]], "index_of_dos_for_site_type() (ase2sprkkr.output_files.definitions.dos.dosoutputfile method)": [[993, "ase2sprkkr.output_files.definitions.dos.DOSOutputFile.index_of_dos_for_site_type"]], "iterate_data_slices() (ase2sprkkr.output_files.definitions.dos.dosoutputfile method)": [[993, "ase2sprkkr.output_files.definitions.dos.DOSOutputFile.iterate_data_slices"]], "iterate_dos() (ase2sprkkr.output_files.definitions.dos.dosoutputfile method)": [[993, "ase2sprkkr.output_files.definitions.dos.DOSOutputFile.iterate_dos"]], "n_orbitals_for() (ase2sprkkr.output_files.definitions.dos.dosoutputfile method)": [[993, "ase2sprkkr.output_files.definitions.dos.DOSOutputFile.n_orbitals_for"]], "n_spins() (ase2sprkkr.output_files.definitions.dos.dosoutputfile method)": [[993, "ase2sprkkr.output_files.definitions.dos.DOSOutputFile.n_spins"]], "plot() (ase2sprkkr.output_files.definitions.dos.dosoutputfile method)": [[993, "ase2sprkkr.output_files.definitions.dos.DOSOutputFile.plot"]], "total_dos() (ase2sprkkr.output_files.definitions.dos.dosoutputfile method)": [[993, "ase2sprkkr.output_files.definitions.dos.DOSOutputFile.total_dos"]], "create_definition() (in module ase2sprkkr.output_files.definitions.dos)": [[994, "ase2sprkkr.output_files.definitions.dos.create_definition"]], "ase2sprkkr.output_files.definitions.spc": [[995, "module-ase2sprkkr.output_files.definitions.spc"]], "arpesdefinition (class in ase2sprkkr.output_files.definitions.spc)": [[996, "ase2sprkkr.output_files.definitions.spc.ARPESDefinition"]], "__init__() (ase2sprkkr.output_files.definitions.spc.arpesdefinition method)": [[996, "ase2sprkkr.output_files.definitions.spc.ARPESDefinition.__init__"]], "result_class (ase2sprkkr.output_files.definitions.spc.arpesdefinition attribute)": [[996, "ase2sprkkr.output_files.definitions.spc.ARPESDefinition.result_class"]], "arpesoutputfile (class in ase2sprkkr.output_files.definitions.spc)": [[997, "ase2sprkkr.output_files.definitions.spc.ARPESOutputFile"]], "__init__() (ase2sprkkr.output_files.definitions.spc.arpesoutputfile method)": [[997, "ase2sprkkr.output_files.definitions.spc.ARPESOutputFile.__init__"]], "_arithmetic_values (ase2sprkkr.output_files.definitions.spc.arpesoutputfile attribute)": [[997, "ase2sprkkr.output_files.definitions.spc.ARPESOutputFile._arithmetic_values"]], "_assert_arithmetic() (ase2sprkkr.output_files.definitions.spc.arpesoutputfile method)": [[997, "ase2sprkkr.output_files.definitions.spc.ARPESOutputFile._assert_arithmetic"]], "plot() (ase2sprkkr.output_files.definitions.spc.arpesoutputfile method)": [[997, "ase2sprkkr.output_files.definitions.spc.ARPESOutputFile.plot"]], "create_definition() (in module ase2sprkkr.output_files.definitions.spc)": [[998, "ase2sprkkr.output_files.definitions.spc.create_definition"]], "ase2sprkkr.output_files.output_files": [[999, "module-ase2sprkkr.output_files.output_files"]], "arithmetic (class in ase2sprkkr.output_files.output_files)": [[1000, "ase2sprkkr.output_files.output_files.Arithmetic"]], "__init__() (ase2sprkkr.output_files.output_files.arithmetic method)": [[1000, "ase2sprkkr.output_files.output_files.Arithmetic.__init__"]], "_check_arithmetic() (ase2sprkkr.output_files.output_files.arithmetic method)": [[1000, "ase2sprkkr.output_files.output_files.Arithmetic._check_arithmetic"]], "_do_arithmetic() (ase2sprkkr.output_files.output_files.arithmetic method)": [[1000, "ase2sprkkr.output_files.output_files.Arithmetic._do_arithmetic"]], "commonoutputfile (class in ase2sprkkr.output_files.output_files)": [[1001, "ase2sprkkr.output_files.output_files.CommonOutputFile"]], "__init__() (ase2sprkkr.output_files.output_files.commonoutputfile method)": [[1001, "ase2sprkkr.output_files.output_files.CommonOutputFile.__init__"]], "n_atoms() (ase2sprkkr.output_files.output_files.commonoutputfile method)": [[1001, "ase2sprkkr.output_files.output_files.CommonOutputFile.n_atoms"]], "n_orbitals() (ase2sprkkr.output_files.output_files.commonoutputfile method)": [[1001, "ase2sprkkr.output_files.output_files.CommonOutputFile.n_orbitals"]], "n_types() (ase2sprkkr.output_files.output_files.commonoutputfile method)": [[1001, "ase2sprkkr.output_files.output_files.CommonOutputFile.n_types"]], "site_type_index() (ase2sprkkr.output_files.output_files.commonoutputfile method)": [[1001, "ase2sprkkr.output_files.output_files.CommonOutputFile.site_type_index"]], "outputfile (class in ase2sprkkr.output_files.output_files)": [[1002, "ase2sprkkr.output_files.output_files.OutputFile"]], "__init__() (ase2sprkkr.output_files.output_files.outputfile method)": [[1002, "ase2sprkkr.output_files.output_files.OutputFile.__init__"]], "definitions (ase2sprkkr.output_files.output_files.outputfile attribute)": [[1002, "ase2sprkkr.output_files.output_files.OutputFile.definitions"]], "from_file() (ase2sprkkr.output_files.output_files.outputfile class method)": [[1002, "ase2sprkkr.output_files.output_files.OutputFile.from_file"]], "unknown_output_file_definition (ase2sprkkr.output_files.output_files.outputfile attribute)": [[1002, "ase2sprkkr.output_files.output_files.OutputFile.unknown_output_file_definition"]], "unknowndatavalue (class in ase2sprkkr.output_files.output_files)": [[1003, "ase2sprkkr.output_files.output_files.UnknownDataValue"]], "__init__() (ase2sprkkr.output_files.output_files.unknowndatavalue method)": [[1003, "ase2sprkkr.output_files.output_files.UnknownDataValue.__init__"]], "as_array() (ase2sprkkr.output_files.output_files.unknowndatavalue method)": [[1003, "ase2sprkkr.output_files.output_files.UnknownDataValue.as_array"]], "ase2sprkkr.output_files.output_files_definitions": [[1004, "module-ase2sprkkr.output_files.output_files_definitions"]], "blankseparator (class in ase2sprkkr.output_files.output_files_definitions)": [[1005, "ase2sprkkr.output_files.output_files_definitions.BlankSeparator"]], "__init__() (ase2sprkkr.output_files.output_files_definitions.blankseparator method)": [[1005, "ase2sprkkr.output_files.output_files_definitions.BlankSeparator.__init__"]], "separator_type (ase2sprkkr.output_files.output_files_definitions.blankseparator attribute)": [[1005, "ase2sprkkr.output_files.output_files_definitions.BlankSeparator.separator_type"]], "outputfiledefinition (class in ase2sprkkr.output_files.output_files_definitions)": [[1006, "ase2sprkkr.output_files.output_files_definitions.OutputFileDefinition"]], "__init__() (ase2sprkkr.output_files.output_files_definitions.outputfiledefinition method)": [[1006, "ase2sprkkr.output_files.output_files_definitions.OutputFileDefinition.__init__"]], "add_ignored() (ase2sprkkr.output_files.output_files_definitions.outputfiledefinition method)": [[1006, "ase2sprkkr.output_files.output_files_definitions.OutputFileDefinition.add_ignored"]], "child_class (ase2sprkkr.output_files.output_files_definitions.outputfiledefinition attribute)": [[1006, "ase2sprkkr.output_files.output_files_definitions.OutputFileDefinition.child_class"]], "configuration_type_name (ase2sprkkr.output_files.output_files_definitions.outputfiledefinition attribute)": [[1006, "ase2sprkkr.output_files.output_files_definitions.OutputFileDefinition.configuration_type_name"]], "custom_class (ase2sprkkr.output_files.output_files_definitions.outputfiledefinition attribute)": [[1006, "ase2sprkkr.output_files.output_files_definitions.OutputFileDefinition.custom_class"]], "delimiter (ase2sprkkr.output_files.output_files_definitions.outputfiledefinition attribute)": [[1006, "ase2sprkkr.output_files.output_files_definitions.OutputFileDefinition.delimiter"]], "force_order (ase2sprkkr.output_files.output_files_definitions.outputfiledefinition attribute)": [[1006, "ase2sprkkr.output_files.output_files_definitions.OutputFileDefinition.force_order"]], "grammar_of_delimiter (ase2sprkkr.output_files.output_files_definitions.outputfiledefinition attribute)": [[1006, "ase2sprkkr.output_files.output_files_definitions.OutputFileDefinition.grammar_of_delimiter"]], "result_class (ase2sprkkr.output_files.output_files_definitions.outputfiledefinition attribute)": [[1006, "ase2sprkkr.output_files.output_files_definitions.OutputFileDefinition.result_class"]], "value_name_format (ase2sprkkr.output_files.output_files_definitions.outputfiledefinition attribute)": [[1006, "ase2sprkkr.output_files.output_files_definitions.OutputFileDefinition.value_name_format"]], "outputfilevaluedefinition (class in ase2sprkkr.output_files.output_files_definitions)": [[1007, "ase2sprkkr.output_files.output_files_definitions.OutputFileValueDefinition"]], "__init__() (ase2sprkkr.output_files.output_files_definitions.outputfilevaluedefinition method)": [[1007, "ase2sprkkr.output_files.output_files_definitions.OutputFileValueDefinition.__init__"]], "grammar_of_delimiter (ase2sprkkr.output_files.output_files_definitions.outputfilevaluedefinition attribute)": [[1007, "ase2sprkkr.output_files.output_files_definitions.OutputFileValueDefinition.grammar_of_delimiter"]], "name_value_delimiter (ase2sprkkr.output_files.output_files_definitions.outputfilevaluedefinition attribute)": [[1007, "ase2sprkkr.output_files.output_files_definitions.OutputFileValueDefinition.name_value_delimiter"]], "prefix (ase2sprkkr.output_files.output_files_definitions.outputfilevaluedefinition attribute)": [[1007, "ase2sprkkr.output_files.output_files_definitions.OutputFileValueDefinition.prefix"]], "type_from_type_map (ase2sprkkr.output_files.output_files_definitions.outputfilevaluedefinition attribute)": [[1007, "ase2sprkkr.output_files.output_files_definitions.OutputFileValueDefinition.type_from_type_map"]], "type_of_dangerous (ase2sprkkr.output_files.output_files_definitions.outputfilevaluedefinition attribute)": [[1007, "ase2sprkkr.output_files.output_files_definitions.OutputFileValueDefinition.type_of_dangerous"]], "separator (class in ase2sprkkr.output_files.output_files_definitions)": [[1008, "ase2sprkkr.output_files.output_files_definitions.Separator"]], "__init__() (ase2sprkkr.output_files.output_files_definitions.separator method)": [[1008, "ase2sprkkr.output_files.output_files_definitions.Separator.__init__"]], "separator_type (ase2sprkkr.output_files.output_files_definitions.separator attribute)": [[1008, "ase2sprkkr.output_files.output_files_definitions.Separator.separator_type"]], "create_output_file_definition() (in module ase2sprkkr.output_files.output_files_definitions)": [[1009, "ase2sprkkr.output_files.output_files_definitions.create_output_file_definition"]], "output_file_header() (in module ase2sprkkr.output_files.output_files_definitions)": [[1010, "ase2sprkkr.output_files.output_files_definitions.output_file_header"]], "ase2sprkkr.output_files.test": [[1011, "module-ase2sprkkr.output_files.test"]], "ase2sprkkr.output_files.test.init_tests": [[1012, "module-ase2sprkkr.output_files.test.init_tests"]], "testcase (class in ase2sprkkr.output_files.test.init_tests)": [[1013, "ase2sprkkr.output_files.test.init_tests.TestCase"]], "__init__() (ase2sprkkr.output_files.test.init_tests.testcase method)": [[1013, "ase2sprkkr.output_files.test.init_tests.TestCase.__init__"]], "_calc_args (ase2sprkkr.output_files.test.init_tests.testcase attribute)": [[1013, "ase2sprkkr.output_files.test.init_tests.TestCase._calc_args"]], "_print_output (ase2sprkkr.output_files.test.init_tests.testcase attribute)": [[1013, "ase2sprkkr.output_files.test.init_tests.TestCase._print_output"]], "almost_equal_precision() (ase2sprkkr.output_files.test.init_tests.testcase class method)": [[1013, "ase2sprkkr.output_files.test.init_tests.TestCase.almost_equal_precision"]], "assertalmostequal() (ase2sprkkr.output_files.test.init_tests.testcase method)": [[1013, "ase2sprkkr.output_files.test.init_tests.TestCase.assertAlmostEqual"]], "assertasyncequal() (ase2sprkkr.output_files.test.init_tests.testcase method)": [[1013, "ase2sprkkr.output_files.test.init_tests.TestCase.assertAsyncEqual"]], "assertasyncraises() (ase2sprkkr.output_files.test.init_tests.testcase method)": [[1013, "ase2sprkkr.output_files.test.init_tests.TestCase.assertAsyncRaises"]], "assertequal() (ase2sprkkr.output_files.test.init_tests.testcase method)": [[1013, "ase2sprkkr.output_files.test.init_tests.TestCase.assertEqual"]], "assertfalse() (ase2sprkkr.output_files.test.init_tests.testcase method)": [[1013, "ase2sprkkr.output_files.test.init_tests.TestCase.assertFalse"]], "assertisnone() (ase2sprkkr.output_files.test.init_tests.testcase method)": [[1013, "ase2sprkkr.output_files.test.init_tests.TestCase.assertIsNone"]], "assertnotequal() (ase2sprkkr.output_files.test.init_tests.testcase method)": [[1013, "ase2sprkkr.output_files.test.init_tests.TestCase.assertNotEqual"]], "assertraises() (ase2sprkkr.output_files.test.init_tests.testcase method)": [[1013, "ase2sprkkr.output_files.test.init_tests.TestCase.assertRaises"]], "asserttrue() (ase2sprkkr.output_files.test.init_tests.testcase method)": [[1013, "ase2sprkkr.output_files.test.init_tests.TestCase.assertTrue"]], "calc_args() (ase2sprkkr.output_files.test.init_tests.testcase class method)": [[1013, "ase2sprkkr.output_files.test.init_tests.TestCase.calc_args"]], "runasync() (ase2sprkkr.output_files.test.init_tests.testcase static method)": [[1013, "ase2sprkkr.output_files.test.init_tests.TestCase.runAsync"]], "run_sprkkr() (ase2sprkkr.output_files.test.init_tests.testcase method)": [[1013, "ase2sprkkr.output_files.test.init_tests.TestCase.run_sprkkr"]], "temporary_dir() (ase2sprkkr.output_files.test.init_tests.testcase method)": [[1013, "ase2sprkkr.output_files.test.init_tests.TestCase.temporary_dir"]], "arr_testfce() (in module ase2sprkkr.output_files.test.init_tests)": [[1014, "ase2sprkkr.output_files.test.init_tests.arr_testfce"]], "assertdictequal() (in module ase2sprkkr.output_files.test.init_tests)": [[1015, "ase2sprkkr.output_files.test.init_tests.assertDictEqual"]], "assertlistequal() (in module ase2sprkkr.output_files.test.init_tests)": [[1016, "ase2sprkkr.output_files.test.init_tests.assertListEqual"]], "assert_almost_equals() (in module ase2sprkkr.output_files.test.init_tests)": [[1017, "ase2sprkkr.output_files.test.init_tests.assert_almost_equals"]], "assert_equals() (in module ase2sprkkr.output_files.test.init_tests)": [[1018, "ase2sprkkr.output_files.test.init_tests.assert_equals"]], "__init__() (ase2sprkkr.output_files.test.init_tests.extdict method)": [[1019, "ase2sprkkr.output_files.test.init_tests.extdict.__init__"]], "extdict (class in ase2sprkkr.output_files.test.init_tests)": [[1019, "ase2sprkkr.output_files.test.init_tests.extdict"]], "testfce() (in module ase2sprkkr.output_files.test.init_tests)": [[1020, "ase2sprkkr.output_files.test.init_tests.testfce"]], "ase2sprkkr.output_files.test.test_files": [[1021, "module-ase2sprkkr.output_files.test.test_files"]], "testoutput (class in ase2sprkkr.output_files.test.test_files)": [[1022, "ase2sprkkr.output_files.test.test_files.TestOutput"]], "__init__() (ase2sprkkr.output_files.test.test_files.testoutput method)": [[1022, "ase2sprkkr.output_files.test.test_files.TestOutput.__init__"]], "test_output() (ase2sprkkr.output_files.test.test_files.testoutput method)": [[1022, "ase2sprkkr.output_files.test.test_files.TestOutput.test_output"]], "ase2sprkkr.outputs": [[1023, "module-ase2sprkkr.outputs"]], "ase2sprkkr.outputs.output_definitions": [[1024, "module-ase2sprkkr.outputs.output_definitions"]], "outputnonamevaluedefinition (class in ase2sprkkr.outputs.output_definitions)": [[1025, "ase2sprkkr.outputs.output_definitions.OutputNonameValueDefinition"]], "__init__() (ase2sprkkr.outputs.output_definitions.outputnonamevaluedefinition method)": [[1025, "ase2sprkkr.outputs.output_definitions.OutputNonameValueDefinition.__init__"]], "name_in_grammar (ase2sprkkr.outputs.output_definitions.outputnonamevaluedefinition attribute)": [[1025, "ase2sprkkr.outputs.output_definitions.OutputNonameValueDefinition.name_in_grammar"]], "outputsectiondefinition (class in ase2sprkkr.outputs.output_definitions)": [[1026, "ase2sprkkr.outputs.output_definitions.OutputSectionDefinition"]], "__init__() (ase2sprkkr.outputs.output_definitions.outputsectiondefinition method)": [[1026, "ase2sprkkr.outputs.output_definitions.OutputSectionDefinition.__init__"]], "child_class (ase2sprkkr.outputs.output_definitions.outputsectiondefinition attribute)": [[1026, "ase2sprkkr.outputs.output_definitions.OutputSectionDefinition.child_class"]], "custom_class (ase2sprkkr.outputs.output_definitions.outputsectiondefinition attribute)": [[1026, "ase2sprkkr.outputs.output_definitions.OutputSectionDefinition.custom_class"]], "delimiter (ase2sprkkr.outputs.output_definitions.outputsectiondefinition attribute)": [[1026, "ase2sprkkr.outputs.output_definitions.OutputSectionDefinition.delimiter"]], "force_order (ase2sprkkr.outputs.output_definitions.outputsectiondefinition attribute)": [[1026, "ase2sprkkr.outputs.output_definitions.OutputSectionDefinition.force_order"]], "grammar_of_delimiter (ase2sprkkr.outputs.output_definitions.outputsectiondefinition attribute)": [[1026, "ase2sprkkr.outputs.output_definitions.OutputSectionDefinition.grammar_of_delimiter"]], "name_in_grammar (ase2sprkkr.outputs.output_definitions.outputsectiondefinition attribute)": [[1026, "ase2sprkkr.outputs.output_definitions.OutputSectionDefinition.name_in_grammar"]], "outputvaluedefinition (class in ase2sprkkr.outputs.output_definitions)": [[1027, "ase2sprkkr.outputs.output_definitions.OutputValueDefinition"]], "__init__() (ase2sprkkr.outputs.output_definitions.outputvaluedefinition method)": [[1027, "ase2sprkkr.outputs.output_definitions.OutputValueDefinition.__init__"]], "grammar_of_delimiter (ase2sprkkr.outputs.output_definitions.outputvaluedefinition attribute)": [[1027, "ase2sprkkr.outputs.output_definitions.OutputValueDefinition.grammar_of_delimiter"]], "prefix (ase2sprkkr.outputs.output_definitions.outputvaluedefinition attribute)": [[1027, "ase2sprkkr.outputs.output_definitions.OutputValueDefinition.prefix"]], "outputvalueequaldefinition (class in ase2sprkkr.outputs.output_definitions)": [[1028, "ase2sprkkr.outputs.output_definitions.OutputValueEqualDefinition"]], "__init__() (ase2sprkkr.outputs.output_definitions.outputvalueequaldefinition method)": [[1028, "ase2sprkkr.outputs.output_definitions.OutputValueEqualDefinition.__init__"]], "grammar_of_delimiter (ase2sprkkr.outputs.output_definitions.outputvalueequaldefinition attribute)": [[1028, "ase2sprkkr.outputs.output_definitions.OutputValueEqualDefinition.grammar_of_delimiter"]], "name_value_delimiter (ase2sprkkr.outputs.output_definitions.outputvalueequaldefinition attribute)": [[1028, "ase2sprkkr.outputs.output_definitions.OutputValueEqualDefinition.name_value_delimiter"]], "ase2sprkkr.outputs.readers": [[1029, "module-ase2sprkkr.outputs.readers"]], "ase2sprkkr.outputs.readers.arpes": [[1030, "module-ase2sprkkr.outputs.readers.arpes"]], "arpesprocess (class in ase2sprkkr.outputs.readers.arpes)": [[1031, "ase2sprkkr.outputs.readers.arpes.ArpesProcess"]], "__init__() (ase2sprkkr.outputs.readers.arpes.arpesprocess method)": [[1031, "ase2sprkkr.outputs.readers.arpes.ArpesProcess.__init__"]], "reader_class (ase2sprkkr.outputs.readers.arpes.arpesprocess attribute)": [[1031, "ase2sprkkr.outputs.readers.arpes.ArpesProcess.reader_class"]], "result_class (ase2sprkkr.outputs.readers.arpes.arpesprocess attribute)": [[1031, "ase2sprkkr.outputs.readers.arpes.ArpesProcess.result_class"]], "arpesresult (class in ase2sprkkr.outputs.readers.arpes)": [[1032, "ase2sprkkr.outputs.readers.arpes.ArpesResult"]], "__init__() (ase2sprkkr.outputs.readers.arpes.arpesresult method)": [[1032, "ase2sprkkr.outputs.readers.arpes.ArpesResult.__init__"]], "spc (ase2sprkkr.outputs.readers.arpes.arpesresult property)": [[1032, "ase2sprkkr.outputs.readers.arpes.ArpesResult.spc"]], "spc_filename (ase2sprkkr.outputs.readers.arpes.arpesresult property)": [[1032, "ase2sprkkr.outputs.readers.arpes.ArpesResult.spc_filename"]], "ase2sprkkr.outputs.readers.default": [[1033, "module-ase2sprkkr.outputs.readers.default"]], "defaultoutputreader (class in ase2sprkkr.outputs.readers.default)": [[1034, "ase2sprkkr.outputs.readers.default.DefaultOutputReader"]], "__init__() (ase2sprkkr.outputs.readers.default.defaultoutputreader method)": [[1034, "ase2sprkkr.outputs.readers.default.DefaultOutputReader.__init__"]], "read_output() (ase2sprkkr.outputs.readers.default.defaultoutputreader method)": [[1034, "ase2sprkkr.outputs.readers.default.DefaultOutputReader.read_output"]], "defaultprocess (class in ase2sprkkr.outputs.readers.default)": [[1035, "ase2sprkkr.outputs.readers.default.DefaultProcess"]], "__init__() (ase2sprkkr.outputs.readers.default.defaultprocess method)": [[1035, "ase2sprkkr.outputs.readers.default.DefaultProcess.__init__"]], "reader_class (ase2sprkkr.outputs.readers.default.defaultprocess attribute)": [[1035, "ase2sprkkr.outputs.readers.default.DefaultProcess.reader_class"]], "result_class (ase2sprkkr.outputs.readers.default.defaultprocess attribute)": [[1035, "ase2sprkkr.outputs.readers.default.DefaultProcess.result_class"]], "defaultresult (class in ase2sprkkr.outputs.readers.default)": [[1036, "ase2sprkkr.outputs.readers.default.DefaultResult"]], "__init__() (ase2sprkkr.outputs.readers.default.defaultresult method)": [[1036, "ase2sprkkr.outputs.readers.default.DefaultResult.__init__"]], "ase2sprkkr.outputs.readers.scf": [[1037, "module-ase2sprkkr.outputs.readers.scf"]], "realorstars (class in ase2sprkkr.outputs.readers.scf)": [[1038, "ase2sprkkr.outputs.readers.scf.RealOrStars"]], "__init__() (ase2sprkkr.outputs.readers.scf.realorstars method)": [[1038, "ase2sprkkr.outputs.readers.scf.RealOrStars.__init__"]], "_grammar (ase2sprkkr.outputs.readers.scf.realorstars attribute)": [[1038, "ase2sprkkr.outputs.readers.scf.RealOrStars._grammar"]], "scfoutputreader (class in ase2sprkkr.outputs.readers.scf)": [[1039, "ase2sprkkr.outputs.readers.scf.ScfOutputReader"]], "__init__() (ase2sprkkr.outputs.readers.scf.scfoutputreader method)": [[1039, "ase2sprkkr.outputs.readers.scf.ScfOutputReader.__init__"]], "read_output() (ase2sprkkr.outputs.readers.scf.scfoutputreader method)": [[1039, "ase2sprkkr.outputs.readers.scf.ScfOutputReader.read_output"]], "scfprocess (class in ase2sprkkr.outputs.readers.scf)": [[1040, "ase2sprkkr.outputs.readers.scf.ScfProcess"]], "__init__() (ase2sprkkr.outputs.readers.scf.scfprocess method)": [[1040, "ase2sprkkr.outputs.readers.scf.ScfProcess.__init__"]], "reader_class (ase2sprkkr.outputs.readers.scf.scfprocess attribute)": [[1040, "ase2sprkkr.outputs.readers.scf.ScfProcess.reader_class"]], "result_class (ase2sprkkr.outputs.readers.scf.scfprocess attribute)": [[1040, "ase2sprkkr.outputs.readers.scf.ScfProcess.result_class"]], "scfresult (class in ase2sprkkr.outputs.readers.scf)": [[1041, "ase2sprkkr.outputs.readers.scf.ScfResult"]], "__init__() (ase2sprkkr.outputs.readers.scf.scfresult method)": [[1041, "ase2sprkkr.outputs.readers.scf.ScfResult.__init__"]], "calculator (ase2sprkkr.outputs.readers.scf.scfresult property)": [[1041, "ase2sprkkr.outputs.readers.scf.ScfResult.calculator"]], "converged (ase2sprkkr.outputs.readers.scf.scfresult property)": [[1041, "ase2sprkkr.outputs.readers.scf.ScfResult.converged"]], "energies (ase2sprkkr.outputs.readers.scf.scfresult property)": [[1041, "ase2sprkkr.outputs.readers.scf.ScfResult.energies"]], "energy (ase2sprkkr.outputs.readers.scf.scfresult property)": [[1041, "ase2sprkkr.outputs.readers.scf.ScfResult.energy"]], "iteration_values() (ase2sprkkr.outputs.readers.scf.scfresult method)": [[1041, "ase2sprkkr.outputs.readers.scf.ScfResult.iteration_values"]], "iterations (ase2sprkkr.outputs.readers.scf.scfresult property)": [[1041, "ase2sprkkr.outputs.readers.scf.ScfResult.iterations"]], "last_iteration (ase2sprkkr.outputs.readers.scf.scfresult property)": [[1041, "ase2sprkkr.outputs.readers.scf.ScfResult.last_iteration"]], "new_task() (ase2sprkkr.outputs.readers.scf.scfresult method)": [[1041, "ase2sprkkr.outputs.readers.scf.ScfResult.new_task"]], "plot() (ase2sprkkr.outputs.readers.scf.scfresult method)": [[1041, "ase2sprkkr.outputs.readers.scf.ScfResult.plot"]], "potential (ase2sprkkr.outputs.readers.scf.scfresult property)": [[1041, "ase2sprkkr.outputs.readers.scf.ScfResult.potential"]], "potential_filename (ase2sprkkr.outputs.readers.scf.scfresult property)": [[1041, "ase2sprkkr.outputs.readers.scf.ScfResult.potential_filename"]], "atomic_types_definition (in module ase2sprkkr.outputs.readers.scf)": [[1042, "ase2sprkkr.outputs.readers.scf.atomic_types_definition"]], "ase2sprkkr.outputs.task_result": [[1043, "module-ase2sprkkr.outputs.task_result"]], "kkrprocess (class in ase2sprkkr.outputs.task_result)": [[1044, "ase2sprkkr.outputs.task_result.KkrProcess"]], "__init__() (ase2sprkkr.outputs.task_result.kkrprocess method)": [[1044, "ase2sprkkr.outputs.task_result.KkrProcess.__init__"]], "_wraps() (ase2sprkkr.outputs.task_result.kkrprocess method)": [[1044, "ase2sprkkr.outputs.task_result.KkrProcess._wraps"]], "calculator (ase2sprkkr.outputs.task_result.kkrprocess attribute)": [[1044, "ase2sprkkr.outputs.task_result.KkrProcess.calculator"]], "directory (ase2sprkkr.outputs.task_result.kkrprocess attribute)": [[1044, "ase2sprkkr.outputs.task_result.KkrProcess.directory"]], "input_parameters (ase2sprkkr.outputs.task_result.kkrprocess attribute)": [[1044, "ase2sprkkr.outputs.task_result.KkrProcess.input_parameters"]], "read_from_file() (ase2sprkkr.outputs.task_result.kkrprocess method)": [[1044, "ase2sprkkr.outputs.task_result.KkrProcess.read_from_file"]], "run() (ase2sprkkr.outputs.task_result.kkrprocess method)": [[1044, "ase2sprkkr.outputs.task_result.KkrProcess.run"]], "taskresult (class in ase2sprkkr.outputs.task_result)": [[1045, "ase2sprkkr.outputs.task_result.TaskResult"]], "__init__() (ase2sprkkr.outputs.task_result.taskresult method)": [[1045, "ase2sprkkr.outputs.task_result.TaskResult.__init__"]], "atoms (ase2sprkkr.outputs.task_result.taskresult property)": [[1045, "ase2sprkkr.outputs.task_result.TaskResult.atoms"]], "ase2sprkkr.outputs.test": [[1046, "module-ase2sprkkr.outputs.test"]], "ase2sprkkr.outputs.test.init_tests": [[1047, "module-ase2sprkkr.outputs.test.init_tests"]], "testcase (class in ase2sprkkr.outputs.test.init_tests)": [[1048, "ase2sprkkr.outputs.test.init_tests.TestCase"]], "__init__() (ase2sprkkr.outputs.test.init_tests.testcase method)": [[1048, "ase2sprkkr.outputs.test.init_tests.TestCase.__init__"]], "_calc_args (ase2sprkkr.outputs.test.init_tests.testcase attribute)": [[1048, "ase2sprkkr.outputs.test.init_tests.TestCase._calc_args"]], "_print_output (ase2sprkkr.outputs.test.init_tests.testcase attribute)": [[1048, "ase2sprkkr.outputs.test.init_tests.TestCase._print_output"]], "almost_equal_precision() (ase2sprkkr.outputs.test.init_tests.testcase class method)": [[1048, "ase2sprkkr.outputs.test.init_tests.TestCase.almost_equal_precision"]], "assertalmostequal() (ase2sprkkr.outputs.test.init_tests.testcase method)": [[1048, "ase2sprkkr.outputs.test.init_tests.TestCase.assertAlmostEqual"]], "assertasyncequal() (ase2sprkkr.outputs.test.init_tests.testcase method)": [[1048, "ase2sprkkr.outputs.test.init_tests.TestCase.assertAsyncEqual"]], "assertasyncraises() (ase2sprkkr.outputs.test.init_tests.testcase method)": [[1048, "ase2sprkkr.outputs.test.init_tests.TestCase.assertAsyncRaises"]], "assertequal() (ase2sprkkr.outputs.test.init_tests.testcase method)": [[1048, "ase2sprkkr.outputs.test.init_tests.TestCase.assertEqual"]], "assertfalse() (ase2sprkkr.outputs.test.init_tests.testcase method)": [[1048, "ase2sprkkr.outputs.test.init_tests.TestCase.assertFalse"]], "assertisnone() (ase2sprkkr.outputs.test.init_tests.testcase method)": [[1048, "ase2sprkkr.outputs.test.init_tests.TestCase.assertIsNone"]], "assertnotequal() (ase2sprkkr.outputs.test.init_tests.testcase method)": [[1048, "ase2sprkkr.outputs.test.init_tests.TestCase.assertNotEqual"]], "assertraises() (ase2sprkkr.outputs.test.init_tests.testcase method)": [[1048, "ase2sprkkr.outputs.test.init_tests.TestCase.assertRaises"]], "asserttrue() (ase2sprkkr.outputs.test.init_tests.testcase method)": [[1048, "ase2sprkkr.outputs.test.init_tests.TestCase.assertTrue"]], "calc_args() (ase2sprkkr.outputs.test.init_tests.testcase class method)": [[1048, "ase2sprkkr.outputs.test.init_tests.TestCase.calc_args"]], "runasync() (ase2sprkkr.outputs.test.init_tests.testcase static method)": [[1048, "ase2sprkkr.outputs.test.init_tests.TestCase.runAsync"]], "run_sprkkr() (ase2sprkkr.outputs.test.init_tests.testcase method)": [[1048, "ase2sprkkr.outputs.test.init_tests.TestCase.run_sprkkr"]], "temporary_dir() (ase2sprkkr.outputs.test.init_tests.testcase method)": [[1048, "ase2sprkkr.outputs.test.init_tests.TestCase.temporary_dir"]], "arr_testfce() (in module ase2sprkkr.outputs.test.init_tests)": [[1049, "ase2sprkkr.outputs.test.init_tests.arr_testfce"]], "assertdictequal() (in module ase2sprkkr.outputs.test.init_tests)": [[1050, "ase2sprkkr.outputs.test.init_tests.assertDictEqual"]], "assertlistequal() (in module ase2sprkkr.outputs.test.init_tests)": [[1051, "ase2sprkkr.outputs.test.init_tests.assertListEqual"]], "assert_almost_equals() (in module ase2sprkkr.outputs.test.init_tests)": [[1052, "ase2sprkkr.outputs.test.init_tests.assert_almost_equals"]], "assert_equals() (in module ase2sprkkr.outputs.test.init_tests)": [[1053, "ase2sprkkr.outputs.test.init_tests.assert_equals"]], "__init__() (ase2sprkkr.outputs.test.init_tests.extdict method)": [[1054, "ase2sprkkr.outputs.test.init_tests.extdict.__init__"]], "extdict (class in ase2sprkkr.outputs.test.init_tests)": [[1054, "ase2sprkkr.outputs.test.init_tests.extdict"]], "testfce() (in module ase2sprkkr.outputs.test.init_tests)": [[1055, "ase2sprkkr.outputs.test.init_tests.testfce"]], "ase2sprkkr.outputs.test.test_output": [[1056, "module-ase2sprkkr.outputs.test.test_output"]], "testoutput (class in ase2sprkkr.outputs.test.test_output)": [[1057, "ase2sprkkr.outputs.test.test_output.TestOutput"]], "__init__() (ase2sprkkr.outputs.test.test_output.testoutput method)": [[1057, "ase2sprkkr.outputs.test.test_output.TestOutput.__init__"]], "test_output() (ase2sprkkr.outputs.test.test_output.testoutput method)": [[1057, "ase2sprkkr.outputs.test.test_output.TestOutput.test_output"]], "test_scf() (ase2sprkkr.outputs.test.test_output.testoutput method)": [[1057, "ase2sprkkr.outputs.test.test_output.TestOutput.test_scf"]], "ase2sprkkr.physics": [[1058, "module-ase2sprkkr.physics"]], "ase2sprkkr.physics.lattice_data": [[1059, "module-ase2sprkkr.physics.lattice_data"]], "latticedata (class in ase2sprkkr.physics.lattice_data)": [[1060, "ase2sprkkr.physics.lattice_data.LatticeData"]], "__init__() (ase2sprkkr.physics.lattice_data.latticedata method)": [[1060, "ase2sprkkr.physics.lattice_data.LatticeData.__init__"]], "bravais_number (ase2sprkkr.physics.lattice_data.latticedata property)": [[1060, "ase2sprkkr.physics.lattice_data.LatticeData.bravais_number"]], "shoenflies_symbol (ase2sprkkr.physics.lattice_data.latticedata property)": [[1060, "ase2sprkkr.physics.lattice_data.LatticeData.shoenflies_symbol"]], "pearson (class in ase2sprkkr.physics.lattice_data)": [[1061, "ase2sprkkr.physics.lattice_data.Pearson"]], "__init__() (ase2sprkkr.physics.lattice_data.pearson method)": [[1061, "ase2sprkkr.physics.lattice_data.Pearson.__init__"]], "from_symbol() (ase2sprkkr.physics.lattice_data.pearson static method)": [[1061, "ase2sprkkr.physics.lattice_data.Pearson.from_symbol"]], "normalize_symbol() (ase2sprkkr.physics.lattice_data.pearson static method)": [[1061, "ase2sprkkr.physics.lattice_data.Pearson.normalize_symbol"]], "pearson (ase2sprkkr.physics.lattice_data.pearson attribute)": [[1061, "ase2sprkkr.physics.lattice_data.Pearson.pearson"]], "pearsons (ase2sprkkr.physics.lattice_data.pearson attribute)": [[1061, "ase2sprkkr.physics.lattice_data.Pearson.pearsons"]], "xband_data() (ase2sprkkr.physics.lattice_data.pearson method)": [[1061, "ase2sprkkr.physics.lattice_data.Pearson.xband_data"]], "international_numbers_to_ap (in module ase2sprkkr.physics.lattice_data)": [[1062, "ase2sprkkr.physics.lattice_data.international_numbers_to_AP"]], "ase2sprkkr.physics.winger_seitz_radii": [[1063, "module-ase2sprkkr.physics.winger_seitz_radii"]], "winger_seitz_radii (in module ase2sprkkr.physics.winger_seitz_radii)": [[1064, "ase2sprkkr.physics.winger_seitz_radii.winger_seitz_radii"]], "ase2sprkkr.potentials": [[1065, "module-ase2sprkkr.potentials"]], "ase2sprkkr.potentials.custom_potential_section": [[1066, "module-ase2sprkkr.potentials.custom_potential_section"]], "custompotentialsection (class in ase2sprkkr.potentials.custom_potential_section)": [[1067, "ase2sprkkr.potentials.custom_potential_section.CustomPotentialSection"]], "__init__() (ase2sprkkr.potentials.custom_potential_section.custompotentialsection method)": [[1067, "ase2sprkkr.potentials.custom_potential_section.CustomPotentialSection.__init__"]], "_depends_on() (ase2sprkkr.potentials.custom_potential_section.custompotentialsection method)": [[1067, "ase2sprkkr.potentials.custom_potential_section.CustomPotentialSection._depends_on"]], "_set_from_atoms() (ase2sprkkr.potentials.custom_potential_section.custompotentialsection method)": [[1067, "ase2sprkkr.potentials.custom_potential_section.CustomPotentialSection._set_from_atoms"]], "_update_atoms() (ase2sprkkr.potentials.custom_potential_section.custompotentialsection method)": [[1067, "ase2sprkkr.potentials.custom_potential_section.CustomPotentialSection._update_atoms"]], "reset() (ase2sprkkr.potentials.custom_potential_section.custompotentialsection method)": [[1067, "ase2sprkkr.potentials.custom_potential_section.CustomPotentialSection.reset"]], "custompotentialsectiondefinition (class in ase2sprkkr.potentials.custom_potential_section)": [[1068, "ase2sprkkr.potentials.custom_potential_section.CustomPotentialSectionDefinition"]], "__init__() (ase2sprkkr.potentials.custom_potential_section.custompotentialsectiondefinition method)": [[1068, "ase2sprkkr.potentials.custom_potential_section.CustomPotentialSectionDefinition.__init__"]], "mandatory (ase2sprkkr.potentials.custom_potential_section.custompotentialsectiondefinition attribute)": [[1068, "ase2sprkkr.potentials.custom_potential_section.CustomPotentialSectionDefinition.mandatory"]], "name_value_delimiter (ase2sprkkr.potentials.custom_potential_section.custompotentialsectiondefinition attribute)": [[1068, "ase2sprkkr.potentials.custom_potential_section.CustomPotentialSectionDefinition.name_value_delimiter"]], "prefix (ase2sprkkr.potentials.custom_potential_section.custompotentialsectiondefinition attribute)": [[1068, "ase2sprkkr.potentials.custom_potential_section.CustomPotentialSectionDefinition.prefix"]], "customsectiontoken (class in ase2sprkkr.potentials.custom_potential_section)": [[1069, "ase2sprkkr.potentials.custom_potential_section.CustomSectionToken"]], "__init__() (ase2sprkkr.potentials.custom_potential_section.customsectiontoken method)": [[1069, "ase2sprkkr.potentials.custom_potential_section.CustomSectionToken.__init__"]], "_abc_impl (ase2sprkkr.potentials.custom_potential_section.customsectiontoken attribute)": [[1069, "ase2sprkkr.potentials.custom_potential_section.CustomSectionToken._abc_impl"]], "name (ase2sprkkr.potentials.custom_potential_section.customsectiontoken attribute)": [[1069, "ase2sprkkr.potentials.custom_potential_section.CustomSectionToken.name"]], "parseimpl() (ase2sprkkr.potentials.custom_potential_section.customsectiontoken method)": [[1069, "ase2sprkkr.potentials.custom_potential_section.CustomSectionToken.parseImpl"]], "pattern (ase2sprkkr.potentials.custom_potential_section.customsectiontoken attribute)": [[1069, "ase2sprkkr.potentials.custom_potential_section.CustomSectionToken.pattern"]], "i (ase2sprkkr.potentials.custom_potential_section.sectionstring attribute)": [[1070, "ase2sprkkr.potentials.custom_potential_section.SectionString.I"]], "sectionstring (class in ase2sprkkr.potentials.custom_potential_section)": [[1070, "ase2sprkkr.potentials.custom_potential_section.SectionString"]], "__init__() (ase2sprkkr.potentials.custom_potential_section.sectionstring method)": [[1070, "ase2sprkkr.potentials.custom_potential_section.SectionString.__init__"]], "_grammar (ase2sprkkr.potentials.custom_potential_section.sectionstring attribute)": [[1070, "ase2sprkkr.potentials.custom_potential_section.SectionString._grammar"]], "delimiter_pattern (ase2sprkkr.potentials.custom_potential_section.sectionstring attribute)": [[1070, "ase2sprkkr.potentials.custom_potential_section.SectionString.delimiter_pattern"]], "grammar_name() (ase2sprkkr.potentials.custom_potential_section.sectionstring method)": [[1070, "ase2sprkkr.potentials.custom_potential_section.SectionString.grammar_name"]], "grammar_of_delimiter (ase2sprkkr.potentials.custom_potential_section.sectionstring attribute)": [[1070, "ase2sprkkr.potentials.custom_potential_section.SectionString.grammar_of_delimiter"]], "write() (ase2sprkkr.potentials.custom_potential_section.sectionstring method)": [[1070, "ase2sprkkr.potentials.custom_potential_section.SectionString.write"]], "ase2sprkkr.potentials.definitions": [[1071, "module-ase2sprkkr.potentials.definitions"]], "ase2sprkkr.potentials.definitions.potential": [[1072, "module-ase2sprkkr.potentials.definitions.potential"]], "potential_definition (in module ase2sprkkr.potentials.definitions.potential)": [[1073, "ase2sprkkr.potentials.definitions.potential.potential_definition"]], "ase2sprkkr.potentials.definitions.sections": [[1074, "module-ase2sprkkr.potentials.definitions.sections"]], "_sections() (in module ase2sprkkr.potentials.definitions.sections)": [[1075, "ase2sprkkr.potentials.definitions.sections._sections"]], "ase2sprkkr.potentials.definitions.sections.charge": [[1076, "module-ase2sprkkr.potentials.definitions.sections.charge"]], "chargesection (class in ase2sprkkr.potentials.definitions.sections.charge)": [[1077, "ase2sprkkr.potentials.definitions.sections.charge.ChargeSection"]], "__init__() (ase2sprkkr.potentials.definitions.sections.charge.chargesection method)": [[1077, "ase2sprkkr.potentials.definitions.sections.charge.ChargeSection.__init__"]], "chargesectiondefinition (class in ase2sprkkr.potentials.definitions.sections.charge)": [[1078, "ase2sprkkr.potentials.definitions.sections.charge.ChargeSectionDefinition"]], "__init__() (ase2sprkkr.potentials.definitions.sections.charge.chargesectiondefinition method)": [[1078, "ase2sprkkr.potentials.definitions.sections.charge.ChargeSectionDefinition.__init__"]], "repeated_class (ase2sprkkr.potentials.definitions.sections.charge.chargesectiondefinition attribute)": [[1078, "ase2sprkkr.potentials.definitions.sections.charge.ChargeSectionDefinition.repeated_class"]], "result_class (ase2sprkkr.potentials.definitions.sections.charge.chargesectiondefinition attribute)": [[1078, "ase2sprkkr.potentials.definitions.sections.charge.ChargeSectionDefinition.result_class"]], "chargessection (class in ase2sprkkr.potentials.definitions.sections.charge)": [[1079, "ase2sprkkr.potentials.definitions.sections.charge.ChargesSection"]], "__init__() (ase2sprkkr.potentials.definitions.sections.charge.chargessection method)": [[1079, "ase2sprkkr.potentials.definitions.sections.charge.ChargesSection.__init__"]], "_depends_on() (ase2sprkkr.potentials.definitions.sections.charge.chargessection method)": [[1079, "ase2sprkkr.potentials.definitions.sections.charge.ChargesSection._depends_on"]], "_set_from_atoms() (ase2sprkkr.potentials.definitions.sections.charge.chargessection method)": [[1079, "ase2sprkkr.potentials.definitions.sections.charge.ChargesSection._set_from_atoms"]], "_update_atoms() (ase2sprkkr.potentials.definitions.sections.charge.chargessection method)": [[1079, "ase2sprkkr.potentials.definitions.sections.charge.ChargesSection._update_atoms"]], "section (in module ase2sprkkr.potentials.definitions.sections.charge)": [[1080, "ase2sprkkr.potentials.definitions.sections.charge.section"]], "ase2sprkkr.potentials.definitions.sections.charge_moments": [[1081, "module-ase2sprkkr.potentials.definitions.sections.charge_moments"]], "chargemomentssection (class in ase2sprkkr.potentials.definitions.sections.charge_moments)": [[1082, "ase2sprkkr.potentials.definitions.sections.charge_moments.ChargeMomentsSection"]], "__init__() (ase2sprkkr.potentials.definitions.sections.charge_moments.chargemomentssection method)": [[1082, "ase2sprkkr.potentials.definitions.sections.charge_moments.ChargeMomentsSection.__init__"]], "chargemomentssectiondefinition (class in ase2sprkkr.potentials.definitions.sections.charge_moments)": [[1083, "ase2sprkkr.potentials.definitions.sections.charge_moments.ChargeMomentsSectionDefinition"]], "__init__() (ase2sprkkr.potentials.definitions.sections.charge_moments.chargemomentssectiondefinition method)": [[1083, "ase2sprkkr.potentials.definitions.sections.charge_moments.ChargeMomentsSectionDefinition.__init__"]], "array_name (ase2sprkkr.potentials.definitions.sections.charge_moments.chargemomentssectiondefinition attribute)": [[1083, "ase2sprkkr.potentials.definitions.sections.charge_moments.ChargeMomentsSectionDefinition.array_name"]], "result_class (ase2sprkkr.potentials.definitions.sections.charge_moments.chargemomentssectiondefinition attribute)": [[1083, "ase2sprkkr.potentials.definitions.sections.charge_moments.ChargeMomentsSectionDefinition.result_class"]], "section (in module ase2sprkkr.potentials.definitions.sections.charge_moments)": [[1084, "ase2sprkkr.potentials.definitions.sections.charge_moments.section"]], "ase2sprkkr.potentials.definitions.sections.global_system_parameter": [[1085, "module-ase2sprkkr.potentials.definitions.sections.global_system_parameter"]], "globalsystemparameter (class in ase2sprkkr.potentials.definitions.sections.global_system_parameter)": [[1086, "ase2sprkkr.potentials.definitions.sections.global_system_parameter.GlobalSystemParameter"]], "__init__() (ase2sprkkr.potentials.definitions.sections.global_system_parameter.globalsystemparameter method)": [[1086, "ase2sprkkr.potentials.definitions.sections.global_system_parameter.GlobalSystemParameter.__init__"]], "_set_from_atoms() (ase2sprkkr.potentials.definitions.sections.global_system_parameter.globalsystemparameter method)": [[1086, "ase2sprkkr.potentials.definitions.sections.global_system_parameter.GlobalSystemParameter._set_from_atoms"]], "globalsystemparameterdefinition (class in ase2sprkkr.potentials.definitions.sections.global_system_parameter)": [[1087, "ase2sprkkr.potentials.definitions.sections.global_system_parameter.GlobalSystemParameterDefinition"]], "__init__() (ase2sprkkr.potentials.definitions.sections.global_system_parameter.globalsystemparameterdefinition method)": [[1087, "ase2sprkkr.potentials.definitions.sections.global_system_parameter.GlobalSystemParameterDefinition.__init__"]], "result_class (ase2sprkkr.potentials.definitions.sections.global_system_parameter.globalsystemparameterdefinition attribute)": [[1087, "ase2sprkkr.potentials.definitions.sections.global_system_parameter.GlobalSystemParameterDefinition.result_class"]], "section (in module ase2sprkkr.potentials.definitions.sections.global_system_parameter)": [[1088, "ase2sprkkr.potentials.definitions.sections.global_system_parameter.section"]], "ase2sprkkr.potentials.definitions.sections.host_madelung_potential": [[1089, "module-ase2sprkkr.potentials.definitions.sections.host_madelung_potential"]], "hostmadelungpotentialsection (class in ase2sprkkr.potentials.definitions.sections.host_madelung_potential)": [[1090, "ase2sprkkr.potentials.definitions.sections.host_madelung_potential.HostMadelungPotentialSection"]], "__init__() (ase2sprkkr.potentials.definitions.sections.host_madelung_potential.hostmadelungpotentialsection method)": [[1090, "ase2sprkkr.potentials.definitions.sections.host_madelung_potential.HostMadelungPotentialSection.__init__"]], "hostmadelungpotentialsectiondefinition (class in ase2sprkkr.potentials.definitions.sections.host_madelung_potential)": [[1091, "ase2sprkkr.potentials.definitions.sections.host_madelung_potential.HostMadelungPotentialSectionDefinition"]], "__init__() (ase2sprkkr.potentials.definitions.sections.host_madelung_potential.hostmadelungpotentialsectiondefinition method)": [[1091, "ase2sprkkr.potentials.definitions.sections.host_madelung_potential.HostMadelungPotentialSectionDefinition.__init__"]], "array_name (ase2sprkkr.potentials.definitions.sections.host_madelung_potential.hostmadelungpotentialsectiondefinition attribute)": [[1091, "ase2sprkkr.potentials.definitions.sections.host_madelung_potential.HostMadelungPotentialSectionDefinition.array_name"]], "result_class (ase2sprkkr.potentials.definitions.sections.host_madelung_potential.hostmadelungpotentialsectiondefinition attribute)": [[1091, "ase2sprkkr.potentials.definitions.sections.host_madelung_potential.HostMadelungPotentialSectionDefinition.result_class"]], "section (in module ase2sprkkr.potentials.definitions.sections.host_madelung_potential)": [[1092, "ase2sprkkr.potentials.definitions.sections.host_madelung_potential.section"]], "ase2sprkkr.potentials.definitions.sections.lattice": [[1093, "module-ase2sprkkr.potentials.definitions.sections.lattice"]], "latticesection (class in ase2sprkkr.potentials.definitions.sections.lattice)": [[1094, "ase2sprkkr.potentials.definitions.sections.lattice.LatticeSection"]], "__init__() (ase2sprkkr.potentials.definitions.sections.lattice.latticesection method)": [[1094, "ase2sprkkr.potentials.definitions.sections.lattice.LatticeSection.__init__"]], "_set_from_atoms() (ase2sprkkr.potentials.definitions.sections.lattice.latticesection method)": [[1094, "ase2sprkkr.potentials.definitions.sections.lattice.LatticeSection._set_from_atoms"]], "_update_atoms() (ase2sprkkr.potentials.definitions.sections.lattice.latticesection method)": [[1094, "ase2sprkkr.potentials.definitions.sections.lattice.LatticeSection._update_atoms"]], "latticesectiondefinition (class in ase2sprkkr.potentials.definitions.sections.lattice)": [[1095, "ase2sprkkr.potentials.definitions.sections.lattice.LatticeSectionDefinition"]], "__init__() (ase2sprkkr.potentials.definitions.sections.lattice.latticesectiondefinition method)": [[1095, "ase2sprkkr.potentials.definitions.sections.lattice.LatticeSectionDefinition.__init__"]], "result_class (ase2sprkkr.potentials.definitions.sections.lattice.latticesectiondefinition attribute)": [[1095, "ase2sprkkr.potentials.definitions.sections.lattice.LatticeSectionDefinition.result_class"]], "validate() (ase2sprkkr.potentials.definitions.sections.lattice.latticesectiondefinition method)": [[1095, "ase2sprkkr.potentials.definitions.sections.lattice.LatticeSectionDefinition.validate"]], "section (in module ase2sprkkr.potentials.definitions.sections.lattice)": [[1096, "ase2sprkkr.potentials.definitions.sections.lattice.section"]], "ase2sprkkr.potentials.definitions.sections.mesh_information": [[1097, "module-ase2sprkkr.potentials.definitions.sections.mesh_information"]], "meshinformationsection (class in ase2sprkkr.potentials.definitions.sections.mesh_information)": [[1098, "ase2sprkkr.potentials.definitions.sections.mesh_information.MeshInformationSection"]], "__init__() (ase2sprkkr.potentials.definitions.sections.mesh_information.meshinformationsection method)": [[1098, "ase2sprkkr.potentials.definitions.sections.mesh_information.MeshInformationSection.__init__"]], "_value_class (ase2sprkkr.potentials.definitions.sections.mesh_information.meshinformationsection attribute)": [[1098, "ase2sprkkr.potentials.definitions.sections.mesh_information.MeshInformationSection._value_class"]], "_value_name (ase2sprkkr.potentials.definitions.sections.mesh_information.meshinformationsection attribute)": [[1098, "ase2sprkkr.potentials.definitions.sections.mesh_information.MeshInformationSection._value_name"]], "meshinformationsectiondefinition (class in ase2sprkkr.potentials.definitions.sections.mesh_information)": [[1099, "ase2sprkkr.potentials.definitions.sections.mesh_information.MeshInformationSectionDefinition"]], "__init__() (ase2sprkkr.potentials.definitions.sections.mesh_information.meshinformationsectiondefinition method)": [[1099, "ase2sprkkr.potentials.definitions.sections.mesh_information.MeshInformationSectionDefinition.__init__"]], "result_class (ase2sprkkr.potentials.definitions.sections.mesh_information.meshinformationsectiondefinition attribute)": [[1099, "ase2sprkkr.potentials.definitions.sections.mesh_information.MeshInformationSectionDefinition.result_class"]], "section (in module ase2sprkkr.potentials.definitions.sections.mesh_information)": [[1100, "ase2sprkkr.potentials.definitions.sections.mesh_information.section"]], "ase2sprkkr.potentials.definitions.sections.moments": [[1101, "module-ase2sprkkr.potentials.definitions.sections.moments"]], "momentsection (class in ase2sprkkr.potentials.definitions.sections.moments)": [[1102, "ase2sprkkr.potentials.definitions.sections.moments.MomentSection"]], "__init__() (ase2sprkkr.potentials.definitions.sections.moments.momentsection method)": [[1102, "ase2sprkkr.potentials.definitions.sections.moments.MomentSection.__init__"]], "momentssection (class in ase2sprkkr.potentials.definitions.sections.moments)": [[1103, "ase2sprkkr.potentials.definitions.sections.moments.MomentsSection"]], "__init__() (ase2sprkkr.potentials.definitions.sections.moments.momentssection method)": [[1103, "ase2sprkkr.potentials.definitions.sections.moments.MomentsSection.__init__"]], "_depends_on() (ase2sprkkr.potentials.definitions.sections.moments.momentssection method)": [[1103, "ase2sprkkr.potentials.definitions.sections.moments.MomentsSection._depends_on"]], "_set_from_atoms() (ase2sprkkr.potentials.definitions.sections.moments.momentssection method)": [[1103, "ase2sprkkr.potentials.definitions.sections.moments.MomentsSection._set_from_atoms"]], "_update_atoms() (ase2sprkkr.potentials.definitions.sections.moments.momentssection method)": [[1103, "ase2sprkkr.potentials.definitions.sections.moments.MomentsSection._update_atoms"]], "momentssectiondefinition (class in ase2sprkkr.potentials.definitions.sections.moments)": [[1104, "ase2sprkkr.potentials.definitions.sections.moments.MomentsSectionDefinition"]], "__init__() (ase2sprkkr.potentials.definitions.sections.moments.momentssectiondefinition method)": [[1104, "ase2sprkkr.potentials.definitions.sections.moments.MomentsSectionDefinition.__init__"]], "repeated_class (ase2sprkkr.potentials.definitions.sections.moments.momentssectiondefinition attribute)": [[1104, "ase2sprkkr.potentials.definitions.sections.moments.MomentsSectionDefinition.repeated_class"]], "result_class (ase2sprkkr.potentials.definitions.sections.moments.momentssectiondefinition attribute)": [[1104, "ase2sprkkr.potentials.definitions.sections.moments.MomentsSectionDefinition.result_class"]], "section (in module ase2sprkkr.potentials.definitions.sections.moments)": [[1105, "ase2sprkkr.potentials.definitions.sections.moments.section"]], "ase2sprkkr.potentials.definitions.sections.occupation": [[1106, "module-ase2sprkkr.potentials.definitions.sections.occupation"]], "occupationsection (class in ase2sprkkr.potentials.definitions.sections.occupation)": [[1107, "ase2sprkkr.potentials.definitions.sections.occupation.OccupationSection"]], "__init__() (ase2sprkkr.potentials.definitions.sections.occupation.occupationsection method)": [[1107, "ase2sprkkr.potentials.definitions.sections.occupation.OccupationSection.__init__"]], "_set_from_atoms() (ase2sprkkr.potentials.definitions.sections.occupation.occupationsection method)": [[1107, "ase2sprkkr.potentials.definitions.sections.occupation.OccupationSection._set_from_atoms"]], "_update_atoms() (ase2sprkkr.potentials.definitions.sections.occupation.occupationsection method)": [[1107, "ase2sprkkr.potentials.definitions.sections.occupation.OccupationSection._update_atoms"]], "occupationsectiondefinition (class in ase2sprkkr.potentials.definitions.sections.occupation)": [[1108, "ase2sprkkr.potentials.definitions.sections.occupation.OccupationSectionDefinition"]], "__init__() (ase2sprkkr.potentials.definitions.sections.occupation.occupationsectiondefinition method)": [[1108, "ase2sprkkr.potentials.definitions.sections.occupation.OccupationSectionDefinition.__init__"]], "depends_on() (ase2sprkkr.potentials.definitions.sections.occupation.occupationsectiondefinition method)": [[1108, "ase2sprkkr.potentials.definitions.sections.occupation.OccupationSectionDefinition.depends_on"]], "result_class (ase2sprkkr.potentials.definitions.sections.occupation.occupationsectiondefinition attribute)": [[1108, "ase2sprkkr.potentials.definitions.sections.occupation.OccupationSectionDefinition.result_class"]], "section (in module ase2sprkkr.potentials.definitions.sections.occupation)": [[1109, "ase2sprkkr.potentials.definitions.sections.occupation.section"]], "ase2sprkkr.potentials.definitions.sections.potential": [[1110, "module-ase2sprkkr.potentials.definitions.sections.potential"]], "potentialsection (class in ase2sprkkr.potentials.definitions.sections.potential)": [[1111, "ase2sprkkr.potentials.definitions.sections.potential.PotentialSection"]], "__init__() (ase2sprkkr.potentials.definitions.sections.potential.potentialsection method)": [[1111, "ase2sprkkr.potentials.definitions.sections.potential.PotentialSection.__init__"]], "potentialsectiondefinition (class in ase2sprkkr.potentials.definitions.sections.potential)": [[1112, "ase2sprkkr.potentials.definitions.sections.potential.PotentialSectionDefinition"]], "__init__() (ase2sprkkr.potentials.definitions.sections.potential.potentialsectiondefinition method)": [[1112, "ase2sprkkr.potentials.definitions.sections.potential.PotentialSectionDefinition.__init__"]], "repeated_class (ase2sprkkr.potentials.definitions.sections.potential.potentialsectiondefinition attribute)": [[1112, "ase2sprkkr.potentials.definitions.sections.potential.PotentialSectionDefinition.repeated_class"]], "result_class (ase2sprkkr.potentials.definitions.sections.potential.potentialsectiondefinition attribute)": [[1112, "ase2sprkkr.potentials.definitions.sections.potential.PotentialSectionDefinition.result_class"]], "potentialssection (class in ase2sprkkr.potentials.definitions.sections.potential)": [[1113, "ase2sprkkr.potentials.definitions.sections.potential.PotentialsSection"]], "__init__() (ase2sprkkr.potentials.definitions.sections.potential.potentialssection method)": [[1113, "ase2sprkkr.potentials.definitions.sections.potential.PotentialsSection.__init__"]], "_depends_on() (ase2sprkkr.potentials.definitions.sections.potential.potentialssection method)": [[1113, "ase2sprkkr.potentials.definitions.sections.potential.PotentialsSection._depends_on"]], "_set_from_atoms() (ase2sprkkr.potentials.definitions.sections.potential.potentialssection method)": [[1113, "ase2sprkkr.potentials.definitions.sections.potential.PotentialsSection._set_from_atoms"]], "_update_atoms() (ase2sprkkr.potentials.definitions.sections.potential.potentialssection method)": [[1113, "ase2sprkkr.potentials.definitions.sections.potential.PotentialsSection._update_atoms"]], "section (in module ase2sprkkr.potentials.definitions.sections.potential)": [[1114, "ase2sprkkr.potentials.definitions.sections.potential.section"]], "ase2sprkkr.potentials.definitions.sections.reference_system": [[1115, "module-ase2sprkkr.potentials.definitions.sections.reference_system"]], "referencesystemsection (class in ase2sprkkr.potentials.definitions.sections.reference_system)": [[1116, "ase2sprkkr.potentials.definitions.sections.reference_system.ReferenceSystemSection"]], "__init__() (ase2sprkkr.potentials.definitions.sections.reference_system.referencesystemsection method)": [[1116, "ase2sprkkr.potentials.definitions.sections.reference_system.ReferenceSystemSection.__init__"]], "_set_from_atoms() (ase2sprkkr.potentials.definitions.sections.reference_system.referencesystemsection method)": [[1116, "ase2sprkkr.potentials.definitions.sections.reference_system.ReferenceSystemSection._set_from_atoms"]], "_value_class (ase2sprkkr.potentials.definitions.sections.reference_system.referencesystemsection attribute)": [[1116, "ase2sprkkr.potentials.definitions.sections.reference_system.ReferenceSystemSection._value_class"]], "_value_name (ase2sprkkr.potentials.definitions.sections.reference_system.referencesystemsection attribute)": [[1116, "ase2sprkkr.potentials.definitions.sections.reference_system.ReferenceSystemSection._value_name"]], "referencesystemsectiondefinition (class in ase2sprkkr.potentials.definitions.sections.reference_system)": [[1117, "ase2sprkkr.potentials.definitions.sections.reference_system.ReferenceSystemSectionDefinition"]], "__init__() (ase2sprkkr.potentials.definitions.sections.reference_system.referencesystemsectiondefinition method)": [[1117, "ase2sprkkr.potentials.definitions.sections.reference_system.ReferenceSystemSectionDefinition.__init__"]], "result_class (ase2sprkkr.potentials.definitions.sections.reference_system.referencesystemsectiondefinition attribute)": [[1117, "ase2sprkkr.potentials.definitions.sections.reference_system.ReferenceSystemSectionDefinition.result_class"]], "validate() (ase2sprkkr.potentials.definitions.sections.reference_system.referencesystemsectiondefinition method)": [[1117, "ase2sprkkr.potentials.definitions.sections.reference_system.ReferenceSystemSectionDefinition.validate"]], "section (in module ase2sprkkr.potentials.definitions.sections.reference_system)": [[1118, "ase2sprkkr.potentials.definitions.sections.reference_system.section"]], "ase2sprkkr.potentials.definitions.sections.scf_info": [[1119, "module-ase2sprkkr.potentials.definitions.sections.scf_info"]], "scfinfosection (class in ase2sprkkr.potentials.definitions.sections.scf_info)": [[1120, "ase2sprkkr.potentials.definitions.sections.scf_info.ScfInfoSection"]], "__init__() (ase2sprkkr.potentials.definitions.sections.scf_info.scfinfosection method)": [[1120, "ase2sprkkr.potentials.definitions.sections.scf_info.ScfInfoSection.__init__"]], "_depends_on() (ase2sprkkr.potentials.definitions.sections.scf_info.scfinfosection method)": [[1120, "ase2sprkkr.potentials.definitions.sections.scf_info.ScfInfoSection._depends_on"]], "_set_from_atoms() (ase2sprkkr.potentials.definitions.sections.scf_info.scfinfosection method)": [[1120, "ase2sprkkr.potentials.definitions.sections.scf_info.ScfInfoSection._set_from_atoms"]], "_update_atoms() (ase2sprkkr.potentials.definitions.sections.scf_info.scfinfosection method)": [[1120, "ase2sprkkr.potentials.definitions.sections.scf_info.ScfInfoSection._update_atoms"]], "scfinfosectiondefinition (class in ase2sprkkr.potentials.definitions.sections.scf_info)": [[1121, "ase2sprkkr.potentials.definitions.sections.scf_info.ScfInfoSectionDefinition"]], "__init__() (ase2sprkkr.potentials.definitions.sections.scf_info.scfinfosectiondefinition method)": [[1121, "ase2sprkkr.potentials.definitions.sections.scf_info.ScfInfoSectionDefinition.__init__"]], "result_class (ase2sprkkr.potentials.definitions.sections.scf_info.scfinfosectiondefinition attribute)": [[1121, "ase2sprkkr.potentials.definitions.sections.scf_info.ScfInfoSectionDefinition.result_class"]], "section (in module ase2sprkkr.potentials.definitions.sections.scf_info)": [[1122, "ase2sprkkr.potentials.definitions.sections.scf_info.section"]], "ase2sprkkr.potentials.definitions.sections.sites": [[1123, "module-ase2sprkkr.potentials.definitions.sections.sites"]], "sitessection (class in ase2sprkkr.potentials.definitions.sections.sites)": [[1124, "ase2sprkkr.potentials.definitions.sections.sites.SitesSection"]], "__init__() (ase2sprkkr.potentials.definitions.sections.sites.sitessection method)": [[1124, "ase2sprkkr.potentials.definitions.sections.sites.SitesSection.__init__"]], "_depends_on() (ase2sprkkr.potentials.definitions.sections.sites.sitessection method)": [[1124, "ase2sprkkr.potentials.definitions.sections.sites.SitesSection._depends_on"]], "_set_from_atoms() (ase2sprkkr.potentials.definitions.sections.sites.sitessection method)": [[1124, "ase2sprkkr.potentials.definitions.sections.sites.SitesSection._set_from_atoms"]], "_update_atoms() (ase2sprkkr.potentials.definitions.sections.sites.sitessection method)": [[1124, "ase2sprkkr.potentials.definitions.sections.sites.SitesSection._update_atoms"]], "sitessectiondefinition (class in ase2sprkkr.potentials.definitions.sections.sites)": [[1125, "ase2sprkkr.potentials.definitions.sections.sites.SitesSectionDefinition"]], "__init__() (ase2sprkkr.potentials.definitions.sections.sites.sitessectiondefinition method)": [[1125, "ase2sprkkr.potentials.definitions.sections.sites.SitesSectionDefinition.__init__"]], "result_class (ase2sprkkr.potentials.definitions.sections.sites.sitessectiondefinition attribute)": [[1125, "ase2sprkkr.potentials.definitions.sections.sites.SitesSectionDefinition.result_class"]], "section (in module ase2sprkkr.potentials.definitions.sections.sites)": [[1126, "ase2sprkkr.potentials.definitions.sections.sites.section"]], "ase2sprkkr.potentials.definitions.sections.types": [[1127, "module-ase2sprkkr.potentials.definitions.sections.types"]], "typessection (class in ase2sprkkr.potentials.definitions.sections.types)": [[1128, "ase2sprkkr.potentials.definitions.sections.types.TypesSection"]], "__init__() (ase2sprkkr.potentials.definitions.sections.types.typessection method)": [[1128, "ase2sprkkr.potentials.definitions.sections.types.TypesSection.__init__"]], "_value_class (ase2sprkkr.potentials.definitions.sections.types.typessection attribute)": [[1128, "ase2sprkkr.potentials.definitions.sections.types.TypesSection._value_class"]], "_value_name (ase2sprkkr.potentials.definitions.sections.types.typessection attribute)": [[1128, "ase2sprkkr.potentials.definitions.sections.types.TypesSection._value_name"]], "typessectiondefinition (class in ase2sprkkr.potentials.definitions.sections.types)": [[1129, "ase2sprkkr.potentials.definitions.sections.types.TypesSectionDefinition"]], "__init__() (ase2sprkkr.potentials.definitions.sections.types.typessectiondefinition method)": [[1129, "ase2sprkkr.potentials.definitions.sections.types.TypesSectionDefinition.__init__"]], "result_class (ase2sprkkr.potentials.definitions.sections.types.typessectiondefinition attribute)": [[1129, "ase2sprkkr.potentials.definitions.sections.types.TypesSectionDefinition.result_class"]], "section (in module ase2sprkkr.potentials.definitions.sections.types)": [[1130, "ase2sprkkr.potentials.definitions.sections.types.section"]], "ase2sprkkr.potentials.potential_definitions": [[1131, "module-ase2sprkkr.potentials.potential_definitions"]], "asearraysectiondefinition (class in ase2sprkkr.potentials.potential_definitions)": [[1132, "ase2sprkkr.potentials.potential_definitions.ASEArraySectionDefinition"]], "__init__() (ase2sprkkr.potentials.potential_definitions.asearraysectiondefinition method)": [[1132, "ase2sprkkr.potentials.potential_definitions.ASEArraySectionDefinition.__init__"]], "depends_on() (ase2sprkkr.potentials.potential_definitions.asearraysectiondefinition method)": [[1132, "ase2sprkkr.potentials.potential_definitions.ASEArraySectionDefinition.depends_on"]], "result_class (ase2sprkkr.potentials.potential_definitions.asearraysectiondefinition attribute)": [[1132, "ase2sprkkr.potentials.potential_definitions.ASEArraySectionDefinition.result_class"]], "potsectiondefinition (class in ase2sprkkr.potentials.potential_definitions)": [[1133, "ase2sprkkr.potentials.potential_definitions.PotSectionDefinition"]], "__init__() (ase2sprkkr.potentials.potential_definitions.potsectiondefinition method)": [[1133, "ase2sprkkr.potentials.potential_definitions.PotSectionDefinition.__init__"]], "child_class (ase2sprkkr.potentials.potential_definitions.potsectiondefinition attribute)": [[1133, "ase2sprkkr.potentials.potential_definitions.PotSectionDefinition.child_class"]], "custom_class() (ase2sprkkr.potentials.potential_definitions.potsectiondefinition static method)": [[1133, "ase2sprkkr.potentials.potential_definitions.PotSectionDefinition.custom_class"]], "delimiter (ase2sprkkr.potentials.potential_definitions.potsectiondefinition attribute)": [[1133, "ase2sprkkr.potentials.potential_definitions.PotSectionDefinition.delimiter"]], "depends_on() (ase2sprkkr.potentials.potential_definitions.potsectiondefinition method)": [[1133, "ase2sprkkr.potentials.potential_definitions.PotSectionDefinition.depends_on"]], "force_order (ase2sprkkr.potentials.potential_definitions.potsectiondefinition attribute)": [[1133, "ase2sprkkr.potentials.potential_definitions.PotSectionDefinition.force_order"]], "grammar_of_delimiter (ase2sprkkr.potentials.potential_definitions.potsectiondefinition attribute)": [[1133, "ase2sprkkr.potentials.potential_definitions.PotSectionDefinition.grammar_of_delimiter"]], "result_class (ase2sprkkr.potentials.potential_definitions.potsectiondefinition attribute)": [[1133, "ase2sprkkr.potentials.potential_definitions.PotSectionDefinition.result_class"]], "value_name_format (ase2sprkkr.potentials.potential_definitions.potsectiondefinition attribute)": [[1133, "ase2sprkkr.potentials.potential_definitions.PotSectionDefinition.value_name_format"]], "potvaluedefinition (class in ase2sprkkr.potentials.potential_definitions)": [[1134, "ase2sprkkr.potentials.potential_definitions.PotValueDefinition"]], "__init__() (ase2sprkkr.potentials.potential_definitions.potvaluedefinition method)": [[1134, "ase2sprkkr.potentials.potential_definitions.PotValueDefinition.__init__"]], "grammar_of_delimiter (ase2sprkkr.potentials.potential_definitions.potvaluedefinition attribute)": [[1134, "ase2sprkkr.potentials.potential_definitions.PotValueDefinition.grammar_of_delimiter"]], "name_value_delimiter (ase2sprkkr.potentials.potential_definitions.potvaluedefinition attribute)": [[1134, "ase2sprkkr.potentials.potential_definitions.PotValueDefinition.name_value_delimiter"]], "prefix (ase2sprkkr.potentials.potential_definitions.potvaluedefinition attribute)": [[1134, "ase2sprkkr.potentials.potential_definitions.PotValueDefinition.prefix"]], "type_of_dangerous (ase2sprkkr.potentials.potential_definitions.potvaluedefinition attribute)": [[1134, "ase2sprkkr.potentials.potential_definitions.PotValueDefinition.type_of_dangerous"]], "potentialdefinition (class in ase2sprkkr.potentials.potential_definitions)": [[1135, "ase2sprkkr.potentials.potential_definitions.PotentialDefinition"]], "__init__() (ase2sprkkr.potentials.potential_definitions.potentialdefinition method)": [[1135, "ase2sprkkr.potentials.potential_definitions.PotentialDefinition.__init__"]], "_generic_info() (ase2sprkkr.potentials.potential_definitions.potentialdefinition method)": [[1135, "ase2sprkkr.potentials.potential_definitions.PotentialDefinition._generic_info"]], "child_class (ase2sprkkr.potentials.potential_definitions.potentialdefinition attribute)": [[1135, "ase2sprkkr.potentials.potential_definitions.PotentialDefinition.child_class"]], "configuration_type_name (ase2sprkkr.potentials.potential_definitions.potentialdefinition attribute)": [[1135, "ase2sprkkr.potentials.potential_definitions.PotentialDefinition.configuration_type_name"]], "custom_class (ase2sprkkr.potentials.potential_definitions.potentialdefinition attribute)": [[1135, "ase2sprkkr.potentials.potential_definitions.PotentialDefinition.custom_class"]], "custom_name_characters (ase2sprkkr.potentials.potential_definitions.potentialdefinition attribute)": [[1135, "ase2sprkkr.potentials.potential_definitions.PotentialDefinition.custom_name_characters"]], "custom_value_grammar() (ase2sprkkr.potentials.potential_definitions.potentialdefinition class method)": [[1135, "ase2sprkkr.potentials.potential_definitions.PotentialDefinition.custom_value_grammar"]], "delimiter (ase2sprkkr.potentials.potential_definitions.potentialdefinition attribute)": [[1135, "ase2sprkkr.potentials.potential_definitions.PotentialDefinition.delimiter"]], "force_order (ase2sprkkr.potentials.potential_definitions.potentialdefinition attribute)": [[1135, "ase2sprkkr.potentials.potential_definitions.PotentialDefinition.force_order"]], "grammar_of_delimiter (ase2sprkkr.potentials.potential_definitions.potentialdefinition attribute)": [[1135, "ase2sprkkr.potentials.potential_definitions.PotentialDefinition.grammar_of_delimiter"]], "result_class (ase2sprkkr.potentials.potential_definitions.potentialdefinition attribute)": [[1135, "ase2sprkkr.potentials.potential_definitions.PotentialDefinition.result_class"]], "separator (class in ase2sprkkr.potentials.potential_definitions)": [[1136, "ase2sprkkr.potentials.potential_definitions.Separator"]], "__init__() (ase2sprkkr.potentials.potential_definitions.separator method)": [[1136, "ase2sprkkr.potentials.potential_definitions.Separator.__init__"]], "separator_type (ase2sprkkr.potentials.potential_definitions.separator attribute)": [[1136, "ase2sprkkr.potentials.potential_definitions.Separator.separator_type"]], "ase2sprkkr.potentials.potential_sections": [[1137, "module-ase2sprkkr.potentials.potential_sections"]], "asearraysection (class in ase2sprkkr.potentials.potential_sections)": [[1138, "ase2sprkkr.potentials.potential_sections.ASEArraySection"]], "__init__() (ase2sprkkr.potentials.potential_sections.asearraysection method)": [[1138, "ase2sprkkr.potentials.potential_sections.ASEArraySection.__init__"]], "_depends_on() (ase2sprkkr.potentials.potential_sections.asearraysection method)": [[1138, "ase2sprkkr.potentials.potential_sections.ASEArraySection._depends_on"]], "_set_from_atoms() (ase2sprkkr.potentials.potential_sections.asearraysection method)": [[1138, "ase2sprkkr.potentials.potential_sections.ASEArraySection._set_from_atoms"]], "_update_atoms() (ase2sprkkr.potentials.potential_sections.asearraysection method)": [[1138, "ase2sprkkr.potentials.potential_sections.ASEArraySection._update_atoms"]], "has_any_value() (ase2sprkkr.potentials.potential_sections.asearraysection method)": [[1138, "ase2sprkkr.potentials.potential_sections.ASEArraySection.has_any_value"]], "potentialsection (class in ase2sprkkr.potentials.potential_sections)": [[1139, "ase2sprkkr.potentials.potential_sections.PotentialSection"]], "__init__() (ase2sprkkr.potentials.potential_sections.potentialsection method)": [[1139, "ase2sprkkr.potentials.potential_sections.PotentialSection.__init__"]], "potentialsectiontrait (class in ase2sprkkr.potentials.potential_sections)": [[1140, "ase2sprkkr.potentials.potential_sections.PotentialSectionTrait"]], "__init__() (ase2sprkkr.potentials.potential_sections.potentialsectiontrait method)": [[1140, "ase2sprkkr.potentials.potential_sections.PotentialSectionTrait.__init__"]], "_depends_on() (ase2sprkkr.potentials.potential_sections.potentialsectiontrait method)": [[1140, "ase2sprkkr.potentials.potential_sections.PotentialSectionTrait._depends_on"]], "_set_from_atoms() (ase2sprkkr.potentials.potential_sections.potentialsectiontrait method)": [[1140, "ase2sprkkr.potentials.potential_sections.PotentialSectionTrait._set_from_atoms"]], "_update_atoms() (ase2sprkkr.potentials.potential_sections.potentialsectiontrait method)": [[1140, "ase2sprkkr.potentials.potential_sections.PotentialSectionTrait._update_atoms"]], "reset() (ase2sprkkr.potentials.potential_sections.potentialsectiontrait method)": [[1140, "ase2sprkkr.potentials.potential_sections.PotentialSectionTrait.reset"]], "repeatedpotentialsection (class in ase2sprkkr.potentials.potential_sections)": [[1141, "ase2sprkkr.potentials.potential_sections.RepeatedPotentialSection"]], "__init__() (ase2sprkkr.potentials.potential_sections.repeatedpotentialsection method)": [[1141, "ase2sprkkr.potentials.potential_sections.RepeatedPotentialSection.__init__"]], "uniquelistsection (class in ase2sprkkr.potentials.potential_sections)": [[1142, "ase2sprkkr.potentials.potential_sections.UniqueListSection"]], "__init__() (ase2sprkkr.potentials.potential_sections.uniquelistsection method)": [[1142, "ase2sprkkr.potentials.potential_sections.UniqueListSection.__init__"]], "_set_from_atoms() (ase2sprkkr.potentials.potential_sections.uniquelistsection method)": [[1142, "ase2sprkkr.potentials.potential_sections.UniqueListSection._set_from_atoms"]], "_update_atoms() (ase2sprkkr.potentials.potential_sections.uniquelistsection method)": [[1142, "ase2sprkkr.potentials.potential_sections.UniqueListSection._update_atoms"]], "_value_class (ase2sprkkr.potentials.potential_sections.uniquelistsection attribute)": [[1142, "ase2sprkkr.potentials.potential_sections.UniqueListSection._value_class"]], "_value_name (ase2sprkkr.potentials.potential_sections.uniquelistsection attribute)": [[1142, "ase2sprkkr.potentials.potential_sections.UniqueListSection._value_name"]], "ase2sprkkr.potentials.potentials": [[1143, "module-ase2sprkkr.potentials.potentials"]], "potential (class in ase2sprkkr.potentials.potentials)": [[1144, "ase2sprkkr.potentials.potentials.Potential"]], "__init__() (ase2sprkkr.potentials.potentials.potential method)": [[1144, "ase2sprkkr.potentials.potentials.Potential.__init__"]], "atoms (ase2sprkkr.potentials.potentials.potential property)": [[1144, "ase2sprkkr.potentials.potentials.Potential.atoms"]], "from_atoms() (ase2sprkkr.potentials.potentials.potential class method)": [[1144, "ase2sprkkr.potentials.potentials.Potential.from_atoms"]], "from_file() (ase2sprkkr.potentials.potentials.potential static method)": [[1144, "ase2sprkkr.potentials.potentials.Potential.from_file"]], "from_string() (ase2sprkkr.potentials.potentials.potential class method)": [[1144, "ase2sprkkr.potentials.potentials.Potential.from_string"]], "make_complete() (ase2sprkkr.potentials.potentials.potential method)": [[1144, "ase2sprkkr.potentials.potentials.Potential.make_complete"]], "potential_definition (ase2sprkkr.potentials.potentials.potential attribute)": [[1144, "ase2sprkkr.potentials.potentials.Potential.potential_definition"]], "read_from_file() (ase2sprkkr.potentials.potentials.potential method)": [[1144, "ase2sprkkr.potentials.potentials.Potential.read_from_file"]], "reset() (ase2sprkkr.potentials.potentials.potential method)": [[1144, "ase2sprkkr.potentials.potentials.Potential.reset"]], "set_from_atoms() (ase2sprkkr.potentials.potentials.potential method)": [[1144, "ase2sprkkr.potentials.potentials.Potential.set_from_atoms"]], "update_atoms() (ase2sprkkr.potentials.potentials.potential method)": [[1144, "ase2sprkkr.potentials.potentials.Potential.update_atoms"]], "ase2sprkkr.potentials.test": [[1145, "module-ase2sprkkr.potentials.test"]], "ase2sprkkr.potentials.test.init_tests": [[1146, "module-ase2sprkkr.potentials.test.init_tests"]], "testcase (class in ase2sprkkr.potentials.test.init_tests)": [[1147, "ase2sprkkr.potentials.test.init_tests.TestCase"]], "__init__() (ase2sprkkr.potentials.test.init_tests.testcase method)": [[1147, "ase2sprkkr.potentials.test.init_tests.TestCase.__init__"]], "_calc_args (ase2sprkkr.potentials.test.init_tests.testcase attribute)": [[1147, "ase2sprkkr.potentials.test.init_tests.TestCase._calc_args"]], "_print_output (ase2sprkkr.potentials.test.init_tests.testcase attribute)": [[1147, "ase2sprkkr.potentials.test.init_tests.TestCase._print_output"]], "almost_equal_precision() (ase2sprkkr.potentials.test.init_tests.testcase class method)": [[1147, "ase2sprkkr.potentials.test.init_tests.TestCase.almost_equal_precision"]], "assertalmostequal() (ase2sprkkr.potentials.test.init_tests.testcase method)": [[1147, "ase2sprkkr.potentials.test.init_tests.TestCase.assertAlmostEqual"]], "assertasyncequal() (ase2sprkkr.potentials.test.init_tests.testcase method)": [[1147, "ase2sprkkr.potentials.test.init_tests.TestCase.assertAsyncEqual"]], "assertasyncraises() (ase2sprkkr.potentials.test.init_tests.testcase method)": [[1147, "ase2sprkkr.potentials.test.init_tests.TestCase.assertAsyncRaises"]], "assertequal() (ase2sprkkr.potentials.test.init_tests.testcase method)": [[1147, "ase2sprkkr.potentials.test.init_tests.TestCase.assertEqual"]], "assertfalse() (ase2sprkkr.potentials.test.init_tests.testcase method)": [[1147, "ase2sprkkr.potentials.test.init_tests.TestCase.assertFalse"]], "assertisnone() (ase2sprkkr.potentials.test.init_tests.testcase method)": [[1147, "ase2sprkkr.potentials.test.init_tests.TestCase.assertIsNone"]], "assertnotequal() (ase2sprkkr.potentials.test.init_tests.testcase method)": [[1147, "ase2sprkkr.potentials.test.init_tests.TestCase.assertNotEqual"]], "assertraises() (ase2sprkkr.potentials.test.init_tests.testcase method)": [[1147, "ase2sprkkr.potentials.test.init_tests.TestCase.assertRaises"]], "asserttrue() (ase2sprkkr.potentials.test.init_tests.testcase method)": [[1147, "ase2sprkkr.potentials.test.init_tests.TestCase.assertTrue"]], "calc_args() (ase2sprkkr.potentials.test.init_tests.testcase class method)": [[1147, "ase2sprkkr.potentials.test.init_tests.TestCase.calc_args"]], "runasync() (ase2sprkkr.potentials.test.init_tests.testcase static method)": [[1147, "ase2sprkkr.potentials.test.init_tests.TestCase.runAsync"]], "run_sprkkr() (ase2sprkkr.potentials.test.init_tests.testcase method)": [[1147, "ase2sprkkr.potentials.test.init_tests.TestCase.run_sprkkr"]], "temporary_dir() (ase2sprkkr.potentials.test.init_tests.testcase method)": [[1147, "ase2sprkkr.potentials.test.init_tests.TestCase.temporary_dir"]], "arr_testfce() (in module ase2sprkkr.potentials.test.init_tests)": [[1148, "ase2sprkkr.potentials.test.init_tests.arr_testfce"]], "assertdictequal() (in module ase2sprkkr.potentials.test.init_tests)": [[1149, "ase2sprkkr.potentials.test.init_tests.assertDictEqual"]], "assertlistequal() (in module ase2sprkkr.potentials.test.init_tests)": [[1150, "ase2sprkkr.potentials.test.init_tests.assertListEqual"]], "assert_almost_equals() (in module ase2sprkkr.potentials.test.init_tests)": [[1151, "ase2sprkkr.potentials.test.init_tests.assert_almost_equals"]], "assert_equals() (in module ase2sprkkr.potentials.test.init_tests)": [[1152, "ase2sprkkr.potentials.test.init_tests.assert_equals"]], "__init__() (ase2sprkkr.potentials.test.init_tests.extdict method)": [[1153, "ase2sprkkr.potentials.test.init_tests.extdict.__init__"]], "extdict (class in ase2sprkkr.potentials.test.init_tests)": [[1153, "ase2sprkkr.potentials.test.init_tests.extdict"]], "testfce() (in module ase2sprkkr.potentials.test.init_tests)": [[1154, "ase2sprkkr.potentials.test.init_tests.testfce"]], "ase2sprkkr.potentials.test.test_2d": [[1155, "module-ase2sprkkr.potentials.test.test_2D"]], "test2dpotential (class in ase2sprkkr.potentials.test.test_2d)": [[1156, "ase2sprkkr.potentials.test.test_2D.Test2DPotential"]], "__init__() (ase2sprkkr.potentials.test.test_2d.test2dpotential method)": [[1156, "ase2sprkkr.potentials.test.test_2D.Test2DPotential.__init__"]], "test() (ase2sprkkr.potentials.test.test_2d.test2dpotential method)": [[1156, "ase2sprkkr.potentials.test.test_2D.Test2DPotential.test"]], "ase2sprkkr.potentials.test.test_custom_section": [[1157, "module-ase2sprkkr.potentials.test.test_custom_section"]], "testcustomsection (class in ase2sprkkr.potentials.test.test_custom_section)": [[1158, "ase2sprkkr.potentials.test.test_custom_section.TestCustomSection"]], "__init__() (ase2sprkkr.potentials.test.test_custom_section.testcustomsection method)": [[1158, "ase2sprkkr.potentials.test.test_custom_section.TestCustomSection.__init__"]], "assertnone() (ase2sprkkr.potentials.test.test_custom_section.testcustomsection method)": [[1158, "ase2sprkkr.potentials.test.test_custom_section.TestCustomSection.assertNone"]], "test_custom_section() (ase2sprkkr.potentials.test.test_custom_section.testcustomsection method)": [[1158, "ase2sprkkr.potentials.test.test_custom_section.TestCustomSection.test_custom_section"]], "ase2sprkkr.potentials.test.test_potential": [[1159, "module-ase2sprkkr.potentials.test.test_potential"]], "testpotential (class in ase2sprkkr.potentials.test.test_potential)": [[1160, "ase2sprkkr.potentials.test.test_potential.TestPotential"]], "__init__() (ase2sprkkr.potentials.test.test_potential.testpotential method)": [[1160, "ase2sprkkr.potentials.test.test_potential.TestPotential.__init__"]], "test_2d() (ase2sprkkr.potentials.test.test_potential.testpotential method)": [[1160, "ase2sprkkr.potentials.test.test_potential.TestPotential.test_2D"]], "test_examples() (ase2sprkkr.potentials.test.test_potential.testpotential method)": [[1160, "ase2sprkkr.potentials.test.test_potential.TestPotential.test_examples"]], "test_grammar() (ase2sprkkr.potentials.test.test_potential.testpotential method)": [[1160, "ase2sprkkr.potentials.test.test_potential.TestPotential.test_grammar"]], "test_potential() (ase2sprkkr.potentials.test.test_potential.testpotential method)": [[1160, "ase2sprkkr.potentials.test.test_potential.TestPotential.test_potential"]], "test_potential_data() (ase2sprkkr.potentials.test.test_potential.testpotential method)": [[1160, "ase2sprkkr.potentials.test.test_potential.TestPotential.test_potential_data"]], "test_reset() (ase2sprkkr.potentials.test.test_potential.testpotential method)": [[1160, "ase2sprkkr.potentials.test.test_potential.TestPotential.test_reset"]], "test_sequence() (ase2sprkkr.potentials.test.test_potential.testpotential method)": [[1160, "ase2sprkkr.potentials.test.test_potential.TestPotential.test_sequence"]], "ase2sprkkr.potentials.test.test_structure": [[1161, "module-ase2sprkkr.potentials.test.test_structure"]], "teststructure (class in ase2sprkkr.potentials.test.test_structure)": [[1162, "ase2sprkkr.potentials.test.test_structure.TestStructure"]], "__init__() (ase2sprkkr.potentials.test.test_structure.teststructure method)": [[1162, "ase2sprkkr.potentials.test.test_structure.TestStructure.__init__"]], "test_lattice() (ase2sprkkr.potentials.test.test_structure.teststructure method)": [[1162, "ase2sprkkr.potentials.test.test_structure.TestStructure.test_lattice"]], "ase2sprkkr.sprkkr": [[1163, "module-ase2sprkkr.sprkkr"]], "ase2sprkkr.sprkkr.atomic_types": [[1164, "module-ase2sprkkr.sprkkr.atomic_types"]], "atomictype (class in ase2sprkkr.sprkkr.atomic_types)": [[1165, "ase2sprkkr.sprkkr.atomic_types.AtomicType"]], "__init__() (ase2sprkkr.sprkkr.atomic_types.atomictype method)": [[1165, "ase2sprkkr.sprkkr.atomic_types.AtomicType.__init__"]], "_check_n_electrons() (ase2sprkkr.sprkkr.atomic_types.atomictype method)": [[1165, "ase2sprkkr.sprkkr.atomic_types.AtomicType._check_n_electrons"]], "_clear_symbol_cache() (ase2sprkkr.sprkkr.atomic_types.atomictype method)": [[1165, "ase2sprkkr.sprkkr.atomic_types.AtomicType._clear_symbol_cache"]], "_mendeleev_module (ase2sprkkr.sprkkr.atomic_types.atomictype attribute)": [[1165, "ase2sprkkr.sprkkr.atomic_types.AtomicType._mendeleev_module"]], "atomic_number (ase2sprkkr.sprkkr.atomic_types.atomictype property)": [[1165, "ase2sprkkr.sprkkr.atomic_types.AtomicType.atomic_number"]], "copy() (ase2sprkkr.sprkkr.atomic_types.atomictype method)": [[1165, "ase2sprkkr.sprkkr.atomic_types.AtomicType.copy"]], "is_vacuum() (ase2sprkkr.sprkkr.atomic_types.atomictype method)": [[1165, "ase2sprkkr.sprkkr.atomic_types.AtomicType.is_vacuum"]], "mendeleev (ase2sprkkr.sprkkr.atomic_types.atomictype property)": [[1165, "ase2sprkkr.sprkkr.atomic_types.AtomicType.mendeleev"]], "n_core (ase2sprkkr.sprkkr.atomic_types.atomictype property)": [[1165, "ase2sprkkr.sprkkr.atomic_types.AtomicType.n_core"]], "n_electrons (ase2sprkkr.sprkkr.atomic_types.atomictype property)": [[1165, "ase2sprkkr.sprkkr.atomic_types.AtomicType.n_electrons"]], "n_semicore (ase2sprkkr.sprkkr.atomic_types.atomictype property)": [[1165, "ase2sprkkr.sprkkr.atomic_types.AtomicType.n_semicore"]], "n_valence (ase2sprkkr.sprkkr.atomic_types.atomictype property)": [[1165, "ase2sprkkr.sprkkr.atomic_types.AtomicType.n_valence"]], "symbol (ase2sprkkr.sprkkr.atomic_types.atomictype property)": [[1165, "ase2sprkkr.sprkkr.atomic_types.AtomicType.symbol"]], "to_atomic_type() (ase2sprkkr.sprkkr.atomic_types.atomictype class method)": [[1165, "ase2sprkkr.sprkkr.atomic_types.AtomicType.to_atomic_type"]], "to_tuple() (ase2sprkkr.sprkkr.atomic_types.atomictype method)": [[1165, "ase2sprkkr.sprkkr.atomic_types.AtomicType.to_tuple"]], "ase2sprkkr.sprkkr.atoms_region": [[1166, "module-ase2sprkkr.sprkkr.atoms_region"]], "atomsregion (class in ase2sprkkr.sprkkr.atoms_region)": [[1167, "ase2sprkkr.sprkkr.atoms_region.AtomsRegion"]], "__init__() (ase2sprkkr.sprkkr.atoms_region.atomsregion method)": [[1167, "ase2sprkkr.sprkkr.atoms_region.AtomsRegion.__init__"]], "_clear_cache() (ase2sprkkr.sprkkr.atoms_region.atomsregion method)": [[1167, "ase2sprkkr.sprkkr.atoms_region.AtomsRegion._clear_cache"]], "cell (ase2sprkkr.sprkkr.atoms_region.atomsregion property)": [[1167, "ase2sprkkr.sprkkr.atoms_region.AtomsRegion.cell"]], "create_atoms() (ase2sprkkr.sprkkr.atoms_region.atomsregion method)": [[1167, "ase2sprkkr.sprkkr.atoms_region.AtomsRegion.create_atoms"]], "from_atoms() (ase2sprkkr.sprkkr.atoms_region.atomsregion static method)": [[1167, "ase2sprkkr.sprkkr.atoms_region.AtomsRegion.from_atoms"]], "ids (ase2sprkkr.sprkkr.atoms_region.atomsregion property)": [[1167, "ase2sprkkr.sprkkr.atoms_region.AtomsRegion.ids"]], "only_vacuum_atoms() (ase2sprkkr.sprkkr.atoms_region.atomsregion method)": [[1167, "ase2sprkkr.sprkkr.atoms_region.AtomsRegion.only_vacuum_atoms"]], "pbc (ase2sprkkr.sprkkr.atoms_region.atomsregion property)": [[1167, "ase2sprkkr.sprkkr.atoms_region.AtomsRegion.pbc"]], "positions (ase2sprkkr.sprkkr.atoms_region.atomsregion property)": [[1167, "ase2sprkkr.sprkkr.atoms_region.AtomsRegion.positions"]], "set_atoms() (ase2sprkkr.sprkkr.atoms_region.atomsregion method)": [[1167, "ase2sprkkr.sprkkr.atoms_region.AtomsRegion.set_atoms"]], "set_of_ids (ase2sprkkr.sprkkr.atoms_region.atomsregion property)": [[1167, "ase2sprkkr.sprkkr.atoms_region.AtomsRegion.set_of_ids"]], "shared_ids_with() (ase2sprkkr.sprkkr.atoms_region.atomsregion method)": [[1167, "ase2sprkkr.sprkkr.atoms_region.AtomsRegion.shared_ids_with"]], "slice (ase2sprkkr.sprkkr.atoms_region.atomsregion property)": [[1167, "ase2sprkkr.sprkkr.atoms_region.AtomsRegion.slice"]], "symbols (ase2sprkkr.sprkkr.atoms_region.atomsregion property)": [[1167, "ase2sprkkr.sprkkr.atoms_region.AtomsRegion.symbols"]], "ase2sprkkr.sprkkr.build": [[1168, "module-ase2sprkkr.sprkkr.build"]], "semiinfinite_system() (in module ase2sprkkr.sprkkr.build)": [[1169, "ase2sprkkr.sprkkr.build.semiinfinite_system"]], "stack() (in module ase2sprkkr.sprkkr.build)": [[1170, "ase2sprkkr.sprkkr.build.stack"]], "vacuum_like() (in module ase2sprkkr.sprkkr.build)": [[1171, "ase2sprkkr.sprkkr.build.vacuum_like"]], "ase2sprkkr.sprkkr.calculator": [[1172, "module-ase2sprkkr.sprkkr.calculator"]], "filenametemplator (class in ase2sprkkr.sprkkr.calculator)": [[1173, "ase2sprkkr.sprkkr.calculator.FilenameTemplator"]], "__init__() (ase2sprkkr.sprkkr.calculator.filenametemplator method)": [[1173, "ase2sprkkr.sprkkr.calculator.FilenameTemplator.__init__"]], "_get() (ase2sprkkr.sprkkr.calculator.filenametemplator method)": [[1173, "ase2sprkkr.sprkkr.calculator.FilenameTemplator._get"]], "replacements (ase2sprkkr.sprkkr.calculator.filenametemplator attribute)": [[1173, "ase2sprkkr.sprkkr.calculator.FilenameTemplator.replacements"]], "sprkkr (class in ase2sprkkr.sprkkr.calculator)": [[1174, "ase2sprkkr.sprkkr.calculator.SPRKKR"]], "__init__() (ase2sprkkr.sprkkr.calculator.sprkkr method)": [[1174, "ase2sprkkr.sprkkr.calculator.SPRKKR.__init__"]], "_abc_impl (ase2sprkkr.sprkkr.calculator.sprkkr attribute)": [[1174, "ase2sprkkr.sprkkr.calculator.SPRKKR._abc_impl"]], "_advance_counter() (ase2sprkkr.sprkkr.calculator.sprkkr method)": [[1174, "ase2sprkkr.sprkkr.calculator.SPRKKR._advance_counter"]], "_open_file() (ase2sprkkr.sprkkr.calculator.sprkkr method)": [[1174, "ase2sprkkr.sprkkr.calculator.SPRKKR._open_file"]], "atoms (ase2sprkkr.sprkkr.calculator.sprkkr property)": [[1174, "ase2sprkkr.sprkkr.calculator.SPRKKR.atoms"]], "calculate() (ase2sprkkr.sprkkr.calculator.sprkkr method)": [[1174, "ase2sprkkr.sprkkr.calculator.SPRKKR.calculate"]], "change_task() (ase2sprkkr.sprkkr.calculator.sprkkr method)": [[1174, "ase2sprkkr.sprkkr.calculator.SPRKKR.change_task"]], "copy_with_potential() (ase2sprkkr.sprkkr.calculator.sprkkr method)": [[1174, "ase2sprkkr.sprkkr.calculator.SPRKKR.copy_with_potential"]], "empty_spheres (ase2sprkkr.sprkkr.calculator.sprkkr attribute)": [[1174, "ase2sprkkr.sprkkr.calculator.SPRKKR.empty_spheres"]], "executable_suffix (ase2sprkkr.sprkkr.calculator.sprkkr attribute)": [[1174, "ase2sprkkr.sprkkr.calculator.SPRKKR.executable_suffix"]], "get() (ase2sprkkr.sprkkr.calculator.sprkkr method)": [[1174, "ase2sprkkr.sprkkr.calculator.SPRKKR.get"]], "implemented_properties (ase2sprkkr.sprkkr.calculator.sprkkr attribute)": [[1174, "ase2sprkkr.sprkkr.calculator.SPRKKR.implemented_properties"]], "input_file (ase2sprkkr.sprkkr.calculator.sprkkr attribute)": [[1174, "ase2sprkkr.sprkkr.calculator.SPRKKR.input_file"]], "input_parameters (ase2sprkkr.sprkkr.calculator.sprkkr property)": [[1174, "ase2sprkkr.sprkkr.calculator.SPRKKR.input_parameters"]], "kkrch() (ase2sprkkr.sprkkr.calculator.sprkkr method)": [[1174, "ase2sprkkr.sprkkr.calculator.SPRKKR.kkrch"]], "kkrgen() (ase2sprkkr.sprkkr.calculator.sprkkr method)": [[1174, "ase2sprkkr.sprkkr.calculator.SPRKKR.kkrgen"]], "kkrspec() (ase2sprkkr.sprkkr.calculator.sprkkr method)": [[1174, "ase2sprkkr.sprkkr.calculator.SPRKKR.kkrspec"]], "mpi (ase2sprkkr.sprkkr.calculator.sprkkr attribute)": [[1174, "ase2sprkkr.sprkkr.calculator.SPRKKR.mpi"]], "output_file (ase2sprkkr.sprkkr.calculator.sprkkr attribute)": [[1174, "ase2sprkkr.sprkkr.calculator.SPRKKR.output_file"]], "phagen() (ase2sprkkr.sprkkr.calculator.sprkkr method)": [[1174, "ase2sprkkr.sprkkr.calculator.SPRKKR.phagen"]], "potential (ase2sprkkr.sprkkr.calculator.sprkkr property)": [[1174, "ase2sprkkr.sprkkr.calculator.SPRKKR.potential"]], "potential_file (ase2sprkkr.sprkkr.calculator.sprkkr attribute)": [[1174, "ase2sprkkr.sprkkr.calculator.SPRKKR.potential_file"]], "potential_object (ase2sprkkr.sprkkr.calculator.sprkkr property)": [[1174, "ase2sprkkr.sprkkr.calculator.SPRKKR.potential_object"]], "run() (ase2sprkkr.sprkkr.calculator.sprkkr method)": [[1174, "ase2sprkkr.sprkkr.calculator.SPRKKR.run"]], "run_xband() (ase2sprkkr.sprkkr.calculator.sprkkr method)": [[1174, "ase2sprkkr.sprkkr.calculator.SPRKKR.run_xband"]], "save_input() (ase2sprkkr.sprkkr.calculator.sprkkr method)": [[1174, "ase2sprkkr.sprkkr.calculator.SPRKKR.save_input"]], "scf() (ase2sprkkr.sprkkr.calculator.sprkkr method)": [[1174, "ase2sprkkr.sprkkr.calculator.SPRKKR.scf"]], "set() (ase2sprkkr.sprkkr.calculator.sprkkr method)": [[1174, "ase2sprkkr.sprkkr.calculator.SPRKKR.set"]], "value_or_default() (ase2sprkkr.sprkkr.calculator.sprkkr method)": [[1174, "ase2sprkkr.sprkkr.calculator.SPRKKR.value_or_default"]], "ase2sprkkr.sprkkr.configuration": [[1175, "module-ase2sprkkr.sprkkr.configuration"]], "configurationfile (class in ase2sprkkr.sprkkr.configuration)": [[1176, "ase2sprkkr.sprkkr.configuration.ConfigurationFile"]], "__init__() (ase2sprkkr.sprkkr.configuration.configurationfile method)": [[1176, "ase2sprkkr.sprkkr.configuration.ConfigurationFile.__init__"]], "save_to_file() (ase2sprkkr.sprkkr.configuration.configurationfile method)": [[1176, "ase2sprkkr.sprkkr.configuration.ConfigurationFile.save_to_file"]], "configurationfiledefinition (class in ase2sprkkr.sprkkr.configuration)": [[1177, "ase2sprkkr.sprkkr.configuration.ConfigurationFileDefinition"]], "__init__() (ase2sprkkr.sprkkr.configuration.configurationfiledefinition method)": [[1177, "ase2sprkkr.sprkkr.configuration.ConfigurationFileDefinition.__init__"]], "configurationsection (class in ase2sprkkr.sprkkr.configuration)": [[1178, "ase2sprkkr.sprkkr.configuration.ConfigurationSection"]], "__init__() (ase2sprkkr.sprkkr.configuration.configurationsection method)": [[1178, "ase2sprkkr.sprkkr.configuration.ConfigurationSection.__init__"]], "configurationsectiondefinition (class in ase2sprkkr.sprkkr.configuration)": [[1179, "ase2sprkkr.sprkkr.configuration.ConfigurationSectionDefinition"]], "__init__() (ase2sprkkr.sprkkr.configuration.configurationsectiondefinition method)": [[1179, "ase2sprkkr.sprkkr.configuration.ConfigurationSectionDefinition.__init__"]], "result_class (ase2sprkkr.sprkkr.configuration.configurationsectiondefinition attribute)": [[1179, "ase2sprkkr.sprkkr.configuration.ConfigurationSectionDefinition.result_class"]], "configurationsectiontrait (class in ase2sprkkr.sprkkr.configuration)": [[1180, "ase2sprkkr.sprkkr.configuration.ConfigurationSectionTrait"]], "__init__() (ase2sprkkr.sprkkr.configuration.configurationsectiontrait method)": [[1180, "ase2sprkkr.sprkkr.configuration.ConfigurationSectionTrait.__init__"]], "_set_from_atoms() (ase2sprkkr.sprkkr.configuration.configurationsectiontrait method)": [[1180, "ase2sprkkr.sprkkr.configuration.ConfigurationSectionTrait._set_from_atoms"]], "set_from_atoms() (ase2sprkkr.sprkkr.configuration.configurationsectiontrait method)": [[1180, "ase2sprkkr.sprkkr.configuration.ConfigurationSectionTrait.set_from_atoms"]], "configurationvalue (class in ase2sprkkr.sprkkr.configuration)": [[1181, "ase2sprkkr.sprkkr.configuration.ConfigurationValue"]], "__init__() (ase2sprkkr.sprkkr.configuration.configurationvalue method)": [[1181, "ase2sprkkr.sprkkr.configuration.ConfigurationValue.__init__"]], "_set_from_atoms() (ase2sprkkr.sprkkr.configuration.configurationvalue method)": [[1181, "ase2sprkkr.sprkkr.configuration.ConfigurationValue._set_from_atoms"]], "configurationvaluedefinition (class in ase2sprkkr.sprkkr.configuration)": [[1182, "ase2sprkkr.sprkkr.configuration.ConfigurationValueDefinition"]], "__init__() (ase2sprkkr.sprkkr.configuration.configurationvaluedefinition method)": [[1182, "ase2sprkkr.sprkkr.configuration.ConfigurationValueDefinition.__init__"]], "_set_from_atoms (ase2sprkkr.sprkkr.configuration.configurationvaluedefinition property)": [[1182, "ase2sprkkr.sprkkr.configuration.ConfigurationValueDefinition._set_from_atoms"]], "result_class (ase2sprkkr.sprkkr.configuration.configurationvaluedefinition attribute)": [[1182, "ase2sprkkr.sprkkr.configuration.ConfigurationValueDefinition.result_class"]], "customconfigurationsection (class in ase2sprkkr.sprkkr.configuration)": [[1183, "ase2sprkkr.sprkkr.configuration.CustomConfigurationSection"]], "__init__() (ase2sprkkr.sprkkr.configuration.customconfigurationsection method)": [[1183, "ase2sprkkr.sprkkr.configuration.CustomConfigurationSection.__init__"]], "customconfigurationvalue (class in ase2sprkkr.sprkkr.configuration)": [[1184, "ase2sprkkr.sprkkr.configuration.CustomConfigurationValue"]], "__init__() (ase2sprkkr.sprkkr.configuration.customconfigurationvalue method)": [[1184, "ase2sprkkr.sprkkr.configuration.CustomConfigurationValue.__init__"]], "_set_from_atoms() (ase2sprkkr.sprkkr.configuration.customconfigurationvalue method)": [[1184, "ase2sprkkr.sprkkr.configuration.CustomConfigurationValue._set_from_atoms"]], "repeatedconfigurationsection (class in ase2sprkkr.sprkkr.configuration)": [[1185, "ase2sprkkr.sprkkr.configuration.RepeatedConfigurationSection"]], "__init__() (ase2sprkkr.sprkkr.configuration.repeatedconfigurationsection method)": [[1185, "ase2sprkkr.sprkkr.configuration.RepeatedConfigurationSection.__init__"]], "ase2sprkkr.sprkkr.io_data": [[1186, "module-ase2sprkkr.sprkkr.io_data"]], "baseiodata (class in ase2sprkkr.sprkkr.io_data)": [[1187, "ase2sprkkr.sprkkr.io_data.BaseIoData"]], "__init__() (ase2sprkkr.sprkkr.io_data.baseiodata method)": [[1187, "ase2sprkkr.sprkkr.io_data.BaseIoData.__init__"]], "readiodata (class in ase2sprkkr.sprkkr.io_data)": [[1188, "ase2sprkkr.sprkkr.io_data.ReadIoData"]], "__init__() (ase2sprkkr.sprkkr.io_data.readiodata method)": [[1188, "ase2sprkkr.sprkkr.io_data.ReadIoData.__init__"]], "apply_on_atoms() (ase2sprkkr.sprkkr.io_data.readiodata method)": [[1188, "ase2sprkkr.sprkkr.io_data.ReadIoData.apply_on_atoms"]], "update_atoms() (ase2sprkkr.sprkkr.io_data.readiodata method)": [[1188, "ase2sprkkr.sprkkr.io_data.ReadIoData.update_atoms"]], "writeiodata (class in ase2sprkkr.sprkkr.io_data)": [[1189, "ase2sprkkr.sprkkr.io_data.WriteIoData"]], "__init__() (ase2sprkkr.sprkkr.io_data.writeiodata method)": [[1189, "ase2sprkkr.sprkkr.io_data.WriteIoData.__init__"]], "has_converged_data() (ase2sprkkr.sprkkr.io_data.writeiodata method)": [[1189, "ase2sprkkr.sprkkr.io_data.WriteIoData.has_converged_data"]], "meshes (ase2sprkkr.sprkkr.io_data.writeiodata property)": [[1189, "ase2sprkkr.sprkkr.io_data.WriteIoData.meshes"]], "reference_systems (ase2sprkkr.sprkkr.io_data.writeiodata property)": [[1189, "ase2sprkkr.sprkkr.io_data.WriteIoData.reference_systems"]], "sites (ase2sprkkr.sprkkr.io_data.writeiodata property)": [[1189, "ase2sprkkr.sprkkr.io_data.WriteIoData.sites"]], "types (ase2sprkkr.sprkkr.io_data.writeiodata property)": [[1189, "ase2sprkkr.sprkkr.io_data.WriteIoData.types"]], "unique_mapping() (in module ase2sprkkr.sprkkr.io_data)": [[1190, "ase2sprkkr.sprkkr.io_data.unique_mapping"]], "ase2sprkkr.sprkkr.moments": [[1191, "module-ase2sprkkr.sprkkr.moments"]], "moments (class in ase2sprkkr.sprkkr.moments)": [[1192, "ase2sprkkr.sprkkr.moments.Moments"]], "__init__() (ase2sprkkr.sprkkr.moments.moments method)": [[1192, "ase2sprkkr.sprkkr.moments.Moments.__init__"]], "as_tuple() (ase2sprkkr.sprkkr.moments.moments method)": [[1192, "ase2sprkkr.sprkkr.moments.Moments.as_tuple"]], "ase2sprkkr.sprkkr.occupations": [[1193, "module-ase2sprkkr.sprkkr.occupations"]], "occupation (class in ase2sprkkr.sprkkr.occupations)": [[1194, "ase2sprkkr.sprkkr.occupations.Occupation"]], "__init__() (ase2sprkkr.sprkkr.occupations.occupation method)": [[1194, "ase2sprkkr.sprkkr.occupations.Occupation.__init__"]], "_find_key() (ase2sprkkr.sprkkr.occupations.occupation method)": [[1194, "ase2sprkkr.sprkkr.occupations.Occupation._find_key"]], "_normalize() (ase2sprkkr.sprkkr.occupations.occupation method)": [[1194, "ase2sprkkr.sprkkr.occupations.Occupation._normalize"]], "_update_atoms() (ase2sprkkr.sprkkr.occupations.occupation method)": [[1194, "ase2sprkkr.sprkkr.occupations.Occupation._update_atoms"]], "add() (ase2sprkkr.sprkkr.occupations.occupation method)": [[1194, "ase2sprkkr.sprkkr.occupations.Occupation.add"]], "as_dict (ase2sprkkr.sprkkr.occupations.occupation property)": [[1194, "ase2sprkkr.sprkkr.occupations.Occupation.as_dict"]], "atomic_type() (ase2sprkkr.sprkkr.occupations.occupation method)": [[1194, "ase2sprkkr.sprkkr.occupations.Occupation.atomic_type"]], "atomic_types() (ase2sprkkr.sprkkr.occupations.occupation method)": [[1194, "ase2sprkkr.sprkkr.occupations.Occupation.atomic_types"]], "check() (ase2sprkkr.sprkkr.occupations.occupation method)": [[1194, "ase2sprkkr.sprkkr.occupations.Occupation.check"]], "clean() (ase2sprkkr.sprkkr.occupations.occupation method)": [[1194, "ase2sprkkr.sprkkr.occupations.Occupation.clean"]], "copy() (ase2sprkkr.sprkkr.occupations.occupation method)": [[1194, "ase2sprkkr.sprkkr.occupations.Occupation.copy"]], "items() (ase2sprkkr.sprkkr.occupations.occupation method)": [[1194, "ase2sprkkr.sprkkr.occupations.Occupation.items"]], "primary_atomic_number (ase2sprkkr.sprkkr.occupations.occupation property)": [[1194, "ase2sprkkr.sprkkr.occupations.Occupation.primary_atomic_number"]], "primary_atomic_type (ase2sprkkr.sprkkr.occupations.occupation property)": [[1194, "ase2sprkkr.sprkkr.occupations.Occupation.primary_atomic_type"]], "primary_symbol (ase2sprkkr.sprkkr.occupations.occupation property)": [[1194, "ase2sprkkr.sprkkr.occupations.Occupation.primary_symbol"]], "replace_type() (ase2sprkkr.sprkkr.occupations.occupation method)": [[1194, "ase2sprkkr.sprkkr.occupations.Occupation.replace_type"]], "set() (ase2sprkkr.sprkkr.occupations.occupation method)": [[1194, "ase2sprkkr.sprkkr.occupations.Occupation.set"]], "to_occupation() (ase2sprkkr.sprkkr.occupations.occupation static method)": [[1194, "ase2sprkkr.sprkkr.occupations.Occupation.to_occupation"]], "to_tuple() (ase2sprkkr.sprkkr.occupations.occupation method)": [[1194, "ase2sprkkr.sprkkr.occupations.Occupation.to_tuple"]], "total_occupation (ase2sprkkr.sprkkr.occupations.occupation property)": [[1194, "ase2sprkkr.sprkkr.occupations.Occupation.total_occupation"]], "ase2sprkkr.sprkkr.radial": [[1195, "module-ase2sprkkr.sprkkr.radial"]], "radialcharge (class in ase2sprkkr.sprkkr.radial)": [[1196, "ase2sprkkr.sprkkr.radial.RadialCharge"]], "__init__() (ase2sprkkr.sprkkr.radial.radialcharge method)": [[1196, "ase2sprkkr.sprkkr.radial.RadialCharge.__init__"]], "radialpotential (class in ase2sprkkr.sprkkr.radial)": [[1197, "ase2sprkkr.sprkkr.radial.RadialPotential"]], "__init__() (ase2sprkkr.sprkkr.radial.radialpotential method)": [[1197, "ase2sprkkr.sprkkr.radial.RadialPotential.__init__"]], "_clear() (ase2sprkkr.sprkkr.radial.radialpotential method)": [[1197, "ase2sprkkr.sprkkr.radial.RadialPotential._clear"]], "bt (ase2sprkkr.sprkkr.radial.radialpotential property)": [[1197, "ase2sprkkr.sprkkr.radial.RadialPotential.bt"]], "down (ase2sprkkr.sprkkr.radial.radialpotential property)": [[1197, "ase2sprkkr.sprkkr.radial.RadialPotential.down"]], "from_julich() (ase2sprkkr.sprkkr.radial.radialpotential static method)": [[1197, "ase2sprkkr.sprkkr.radial.RadialPotential.from_julich"]], "from_munchen() (ase2sprkkr.sprkkr.radial.radialpotential static method)": [[1197, "ase2sprkkr.sprkkr.radial.RadialPotential.from_munchen"]], "julich (ase2sprkkr.sprkkr.radial.radialpotential property)": [[1197, "ase2sprkkr.sprkkr.radial.RadialPotential.julich"]], "munchen (ase2sprkkr.sprkkr.radial.radialpotential property)": [[1197, "ase2sprkkr.sprkkr.radial.RadialPotential.munchen"]], "up (ase2sprkkr.sprkkr.radial.radialpotential property)": [[1197, "ase2sprkkr.sprkkr.radial.RadialPotential.up"]], "vt (ase2sprkkr.sprkkr.radial.radialpotential property)": [[1197, "ase2sprkkr.sprkkr.radial.RadialPotential.vt"]], "zr (ase2sprkkr.sprkkr.radial.radialpotential property)": [[1197, "ase2sprkkr.sprkkr.radial.RadialPotential.zr"]], "radialvalue (class in ase2sprkkr.sprkkr.radial)": [[1198, "ase2sprkkr.sprkkr.radial.RadialValue"]], "__init__() (ase2sprkkr.sprkkr.radial.radialvalue method)": [[1198, "ase2sprkkr.sprkkr.radial.RadialValue.__init__"]], "copy() (ase2sprkkr.sprkkr.radial.radialvalue method)": [[1198, "ase2sprkkr.sprkkr.radial.RadialValue.copy"]], "for_mesh() (ase2sprkkr.sprkkr.radial.radialvalue method)": [[1198, "ase2sprkkr.sprkkr.radial.RadialValue.for_mesh"]], "interpolate() (ase2sprkkr.sprkkr.radial.radialvalue method)": [[1198, "ase2sprkkr.sprkkr.radial.RadialValue.interpolate"]], "interpolator (ase2sprkkr.sprkkr.radial.radialvalue property)": [[1198, "ase2sprkkr.sprkkr.radial.RadialValue.interpolator"]], "mesh (ase2sprkkr.sprkkr.radial.radialvalue property)": [[1198, "ase2sprkkr.sprkkr.radial.RadialValue.mesh"]], "raw_value (ase2sprkkr.sprkkr.radial.radialvalue property)": [[1198, "ase2sprkkr.sprkkr.radial.RadialValue.raw_value"]], "ase2sprkkr.sprkkr.radial_meshes": [[1199, "module-ase2sprkkr.sprkkr.radial_meshes"]], "exponentialmesh (class in ase2sprkkr.sprkkr.radial_meshes)": [[1200, "ase2sprkkr.sprkkr.radial_meshes.ExponentialMesh"]], "__init__() (ase2sprkkr.sprkkr.radial_meshes.exponentialmesh method)": [[1200, "ase2sprkkr.sprkkr.radial_meshes.ExponentialMesh.__init__"]], "_clear() (ase2sprkkr.sprkkr.radial_meshes.exponentialmesh method)": [[1200, "ase2sprkkr.sprkkr.radial_meshes.ExponentialMesh._clear"]], "coors (ase2sprkkr.sprkkr.radial_meshes.exponentialmesh property)": [[1200, "ase2sprkkr.sprkkr.radial_meshes.ExponentialMesh.coors"]], "copy() (ase2sprkkr.sprkkr.radial_meshes.exponentialmesh method)": [[1200, "ase2sprkkr.sprkkr.radial_meshes.ExponentialMesh.copy"]], "dx (ase2sprkkr.sprkkr.radial_meshes.exponentialmesh property)": [[1200, "ase2sprkkr.sprkkr.radial_meshes.ExponentialMesh.dx"]], "jrmt (ase2sprkkr.sprkkr.radial_meshes.exponentialmesh property)": [[1200, "ase2sprkkr.sprkkr.radial_meshes.ExponentialMesh.jrmt"]], "jrws (ase2sprkkr.sprkkr.radial_meshes.exponentialmesh property)": [[1200, "ase2sprkkr.sprkkr.radial_meshes.ExponentialMesh.jrws"]], "r1 (ase2sprkkr.sprkkr.radial_meshes.exponentialmesh property)": [[1200, "ase2sprkkr.sprkkr.radial_meshes.ExponentialMesh.r1"]], "rmt (ase2sprkkr.sprkkr.radial_meshes.exponentialmesh property)": [[1200, "ase2sprkkr.sprkkr.radial_meshes.ExponentialMesh.rmt"]], "rws (ase2sprkkr.sprkkr.radial_meshes.exponentialmesh property)": [[1200, "ase2sprkkr.sprkkr.radial_meshes.ExponentialMesh.rws"]], "to_tuple() (ase2sprkkr.sprkkr.radial_meshes.exponentialmesh method)": [[1200, "ase2sprkkr.sprkkr.radial_meshes.ExponentialMesh.to_tuple"]], "mesh (class in ase2sprkkr.sprkkr.radial_meshes)": [[1201, "ase2sprkkr.sprkkr.radial_meshes.Mesh"]], "__init__() (ase2sprkkr.sprkkr.radial_meshes.mesh method)": [[1201, "ase2sprkkr.sprkkr.radial_meshes.Mesh.__init__"]], "default() (ase2sprkkr.sprkkr.radial_meshes.mesh static method)": [[1201, "ase2sprkkr.sprkkr.radial_meshes.Mesh.default"]], "interpolate() (ase2sprkkr.sprkkr.radial_meshes.mesh method)": [[1201, "ase2sprkkr.sprkkr.radial_meshes.Mesh.interpolate"]], "interpolator() (ase2sprkkr.sprkkr.radial_meshes.mesh method)": [[1201, "ase2sprkkr.sprkkr.radial_meshes.Mesh.interpolator"]], "interpolator_for_coors() (ase2sprkkr.sprkkr.radial_meshes.mesh static method)": [[1201, "ase2sprkkr.sprkkr.radial_meshes.Mesh.interpolator_for_coors"]], "_clearing_property() (in module ase2sprkkr.sprkkr.radial_meshes)": [[1202, "ase2sprkkr.sprkkr.radial_meshes._clearing_property"]], "ase2sprkkr.sprkkr.reference_systems": [[1203, "module-ase2sprkkr.sprkkr.reference_systems"]], "referencesystem (class in ase2sprkkr.sprkkr.reference_systems)": [[1204, "ase2sprkkr.sprkkr.reference_systems.ReferenceSystem"]], "__init__() (ase2sprkkr.sprkkr.reference_systems.referencesystem method)": [[1204, "ase2sprkkr.sprkkr.reference_systems.ReferenceSystem.__init__"]], "copy() (ase2sprkkr.sprkkr.reference_systems.referencesystem method)": [[1204, "ase2sprkkr.sprkkr.reference_systems.ReferenceSystem.copy"]], "default() (ase2sprkkr.sprkkr.reference_systems.referencesystem static method)": [[1204, "ase2sprkkr.sprkkr.reference_systems.ReferenceSystem.default"]], "to_tuple() (ase2sprkkr.sprkkr.reference_systems.referencesystem method)": [[1204, "ase2sprkkr.sprkkr.reference_systems.ReferenceSystem.to_tuple"]], "ase2sprkkr.sprkkr.sites": [[1205, "module-ase2sprkkr.sprkkr.sites"]], "site (class in ase2sprkkr.sprkkr.sites)": [[1206, "ase2sprkkr.sprkkr.sites.Site"]], "__init__() (ase2sprkkr.sprkkr.sites.site method)": [[1206, "ase2sprkkr.sprkkr.sites.Site.__init__"]], "_clear_data() (ase2sprkkr.sprkkr.sites.site method)": [[1206, "ase2sprkkr.sprkkr.sites.Site._clear_data"]], "atomic_types (ase2sprkkr.sprkkr.sites.site property)": [[1206, "ase2sprkkr.sprkkr.sites.Site.atomic_types"]], "atoms (ase2sprkkr.sprkkr.sites.site property)": [[1206, "ase2sprkkr.sprkkr.sites.Site.atoms"]], "break_symmetry() (ase2sprkkr.sprkkr.sites.site method)": [[1206, "ase2sprkkr.sprkkr.sites.Site.break_symmetry"]], "charge (ase2sprkkr.sprkkr.sites.site property)": [[1206, "ase2sprkkr.sprkkr.sites.Site.charge"]], "copy() (ase2sprkkr.sprkkr.sites.site method)": [[1206, "ase2sprkkr.sprkkr.sites.Site.copy"]], "copy_sites() (ase2sprkkr.sprkkr.sites.site static method)": [[1206, "ase2sprkkr.sprkkr.sites.Site.copy_sites"]], "create() (ase2sprkkr.sprkkr.sites.site static method)": [[1206, "ase2sprkkr.sprkkr.sites.Site.create"]], "has_symmetry (ase2sprkkr.sprkkr.sites.site property)": [[1206, "ase2sprkkr.sprkkr.sites.Site.has_symmetry"]], "is_vacuum (ase2sprkkr.sprkkr.sites.site property)": [[1206, "ase2sprkkr.sprkkr.sites.Site.is_vacuum"]], "mesh (ase2sprkkr.sprkkr.sites.site property)": [[1206, "ase2sprkkr.sprkkr.sites.Site.mesh"]], "moments (ase2sprkkr.sprkkr.sites.site property)": [[1206, "ase2sprkkr.sprkkr.sites.Site.moments"]], "occupation (ase2sprkkr.sprkkr.sites.site property)": [[1206, "ase2sprkkr.sprkkr.sites.Site.occupation"]], "potential (ase2sprkkr.sprkkr.sites.site property)": [[1206, "ase2sprkkr.sprkkr.sites.Site.potential"]], "primary_atomic_number (ase2sprkkr.sprkkr.sites.site property)": [[1206, "ase2sprkkr.sprkkr.sites.Site.primary_atomic_number"]], "primary_symbol (ase2sprkkr.sprkkr.sites.site property)": [[1206, "ase2sprkkr.sprkkr.sites.Site.primary_symbol"]], "reference_system (ase2sprkkr.sprkkr.sites.site property)": [[1206, "ase2sprkkr.sprkkr.sites.Site.reference_system"]], "reset() (ase2sprkkr.sprkkr.sites.site method)": [[1206, "ase2sprkkr.sprkkr.sites.Site.reset"]], "site_type (ase2sprkkr.sprkkr.sites.site property)": [[1206, "ase2sprkkr.sprkkr.sites.Site.site_type"]], "sitetype (class in ase2sprkkr.sprkkr.sites)": [[1207, "ase2sprkkr.sprkkr.sites.SiteType"]], "__init__() (ase2sprkkr.sprkkr.sites.sitetype method)": [[1207, "ase2sprkkr.sprkkr.sites.SiteType.__init__"]], "_clear_data() (ase2sprkkr.sprkkr.sites.sitetype method)": [[1207, "ase2sprkkr.sprkkr.sites.SiteType._clear_data"]], "atomic_types (ase2sprkkr.sprkkr.sites.sitetype property)": [[1207, "ase2sprkkr.sprkkr.sites.SiteType.atomic_types"]], "break_symmetry() (ase2sprkkr.sprkkr.sites.sitetype method)": [[1207, "ase2sprkkr.sprkkr.sites.SiteType.break_symmetry"]], "charge (ase2sprkkr.sprkkr.sites.sitetype property)": [[1207, "ase2sprkkr.sprkkr.sites.SiteType.charge"]], "copy() (ase2sprkkr.sprkkr.sites.sitetype method)": [[1207, "ase2sprkkr.sprkkr.sites.SiteType.copy"]], "has_symmetry (ase2sprkkr.sprkkr.sites.sitetype property)": [[1207, "ase2sprkkr.sprkkr.sites.SiteType.has_symmetry"]], "index() (ase2sprkkr.sprkkr.sites.sitetype method)": [[1207, "ase2sprkkr.sprkkr.sites.SiteType.index"]], "is_vacuum() (ase2sprkkr.sprkkr.sites.sitetype method)": [[1207, "ase2sprkkr.sprkkr.sites.SiteType.is_vacuum"]], "mesh (ase2sprkkr.sprkkr.sites.sitetype property)": [[1207, "ase2sprkkr.sprkkr.sites.SiteType.mesh"]], "moments (ase2sprkkr.sprkkr.sites.sitetype property)": [[1207, "ase2sprkkr.sprkkr.sites.SiteType.moments"]], "occupation (ase2sprkkr.sprkkr.sites.sitetype property)": [[1207, "ase2sprkkr.sprkkr.sites.SiteType.occupation"]], "potential (ase2sprkkr.sprkkr.sites.sitetype property)": [[1207, "ase2sprkkr.sprkkr.sites.SiteType.potential"]], "primary_atomic_number (ase2sprkkr.sprkkr.sites.sitetype property)": [[1207, "ase2sprkkr.sprkkr.sites.SiteType.primary_atomic_number"]], "primary_symbol (ase2sprkkr.sprkkr.sites.sitetype property)": [[1207, "ase2sprkkr.sprkkr.sites.SiteType.primary_symbol"]], "register() (ase2sprkkr.sprkkr.sites.sitetype method)": [[1207, "ase2sprkkr.sprkkr.sites.SiteType.register"]], "reset() (ase2sprkkr.sprkkr.sites.sitetype method)": [[1207, "ase2sprkkr.sprkkr.sites.SiteType.reset"]], "unregister() (ase2sprkkr.sprkkr.sites.sitetype method)": [[1207, "ase2sprkkr.sprkkr.sites.SiteType.unregister"]], "update_atoms() (ase2sprkkr.sprkkr.sites.sitetype method)": [[1207, "ase2sprkkr.sprkkr.sites.SiteType.update_atoms"]], "ase2sprkkr.sprkkr.sprkkr_atoms": [[1208, "module-ase2sprkkr.sprkkr.sprkkr_atoms"]], "sprkkratoms (class in ase2sprkkr.sprkkr.sprkkr_atoms)": [[1209, "ase2sprkkr.sprkkr.sprkkr_atoms.SPRKKRAtoms"]], "__init__() (ase2sprkkr.sprkkr.sprkkr_atoms.sprkkratoms method)": [[1209, "ase2sprkkr.sprkkr.sprkkr_atoms.SPRKKRAtoms.__init__"]], "_init() (ase2sprkkr.sprkkr.sprkkr_atoms.sprkkratoms method)": [[1209, "ase2sprkkr.sprkkr.sprkkr_atoms.SPRKKRAtoms._init"]], "_init_sites() (ase2sprkkr.sprkkr.sprkkr_atoms.sprkkratoms method)": [[1209, "ase2sprkkr.sprkkr.sprkkr_atoms.SPRKKRAtoms._init_sites"]], "add_region() (ase2sprkkr.sprkkr.sprkkr_atoms.sprkkratoms method)": [[1209, "ase2sprkkr.sprkkr.sprkkr_atoms.SPRKKRAtoms.add_region"]], "are_sites_inited() (ase2sprkkr.sprkkr.sprkkr_atoms.sprkkratoms method)": [[1209, "ase2sprkkr.sprkkr.sprkkr_atoms.SPRKKRAtoms.are_sites_inited"]], "cancel_sites_symmetry() (ase2sprkkr.sprkkr.sprkkr_atoms.sprkkratoms method)": [[1209, "ase2sprkkr.sprkkr.sprkkr_atoms.SPRKKRAtoms.cancel_sites_symmetry"]], "compute_sites_symmetry() (ase2sprkkr.sprkkr.sprkkr_atoms.sprkkratoms method)": [[1209, "ase2sprkkr.sprkkr.sprkkr_atoms.SPRKKRAtoms.compute_sites_symmetry"]], "copy() (ase2sprkkr.sprkkr.sprkkr_atoms.sprkkratoms method)": [[1209, "ase2sprkkr.sprkkr.sprkkr_atoms.SPRKKRAtoms.copy"]], "extend() (ase2sprkkr.sprkkr.sprkkr_atoms.sprkkratoms method)": [[1209, "ase2sprkkr.sprkkr.sprkkr_atoms.SPRKKRAtoms.extend"]], "has_potential() (ase2sprkkr.sprkkr.sprkkr_atoms.sprkkratoms method)": [[1209, "ase2sprkkr.sprkkr.sprkkr_atoms.SPRKKRAtoms.has_potential"]], "potential (ase2sprkkr.sprkkr.sprkkr_atoms.sprkkratoms property)": [[1209, "ase2sprkkr.sprkkr.sprkkr_atoms.SPRKKRAtoms.potential"]], "promote_ase_atoms() (ase2sprkkr.sprkkr.sprkkr_atoms.sprkkratoms static method)": [[1209, "ase2sprkkr.sprkkr.sprkkr_atoms.SPRKKRAtoms.promote_ase_atoms"]], "regions (ase2sprkkr.sprkkr.sprkkr_atoms.sprkkratoms property)": [[1209, "ase2sprkkr.sprkkr.sprkkr_atoms.SPRKKRAtoms.regions"]], "remove_region() (ase2sprkkr.sprkkr.sprkkr_atoms.sprkkratoms method)": [[1209, "ase2sprkkr.sprkkr.sprkkr_atoms.SPRKKRAtoms.remove_region"]], "reset_sprkkr_potential() (ase2sprkkr.sprkkr.sprkkr_atoms.sprkkratoms method)": [[1209, "ase2sprkkr.sprkkr.sprkkr_atoms.SPRKKRAtoms.reset_sprkkr_potential"]], "set_regions() (ase2sprkkr.sprkkr.sprkkr_atoms.sprkkratoms method)": [[1209, "ase2sprkkr.sprkkr.sprkkr_atoms.SPRKKRAtoms.set_regions"]], "set_sites() (ase2sprkkr.sprkkr.sprkkr_atoms.sprkkratoms method)": [[1209, "ase2sprkkr.sprkkr.sprkkr_atoms.SPRKKRAtoms.set_sites"]], "sites (ase2sprkkr.sprkkr.sprkkr_atoms.sprkkratoms property)": [[1209, "ase2sprkkr.sprkkr.sprkkr_atoms.SPRKKRAtoms.sites"]], "sites_array_name (ase2sprkkr.sprkkr.sprkkr_atoms.sprkkratoms attribute)": [[1209, "ase2sprkkr.sprkkr.sprkkr_atoms.SPRKKRAtoms.sites_array_name"]], "spacegroup_info (ase2sprkkr.sprkkr.sprkkr_atoms.sprkkratoms property)": [[1209, "ase2sprkkr.sprkkr.sprkkr_atoms.SPRKKRAtoms.spacegroup_info"]], "symmetry (ase2sprkkr.sprkkr.sprkkr_atoms.sprkkratoms property)": [[1209, "ase2sprkkr.sprkkr.sprkkr_atoms.SPRKKRAtoms.symmetry"]], "ase2sprkkr.sprkkr.sprkkr_grammar_types": [[1210, "module-ase2sprkkr.sprkkr.sprkkr_grammar_types"]], "atomictype (class in ase2sprkkr.sprkkr.sprkkr_grammar_types)": [[1211, "ase2sprkkr.sprkkr.sprkkr_grammar_types.AtomicType"]], "i (ase2sprkkr.sprkkr.sprkkr_grammar_types.atomictype attribute)": [[1211, "ase2sprkkr.sprkkr.sprkkr_grammar_types.AtomicType.I"]], "__init__() (ase2sprkkr.sprkkr.sprkkr_grammar_types.atomictype method)": [[1211, "ase2sprkkr.sprkkr.sprkkr_grammar_types.AtomicType.__init__"]], "allowed_types (ase2sprkkr.sprkkr.sprkkr_grammar_types.atomictype attribute)": [[1211, "ase2sprkkr.sprkkr.sprkkr_grammar_types.AtomicType.allowed_types"]], "datatype (ase2sprkkr.sprkkr.sprkkr_grammar_types.atomictype attribute)": [[1211, "ase2sprkkr.sprkkr.sprkkr_grammar_types.AtomicType.datatype"]], "set_from_atoms() (ase2sprkkr.sprkkr.sprkkr_grammar_types.atomictype method)": [[1211, "ase2sprkkr.sprkkr.sprkkr_grammar_types.AtomicType.set_from_atoms"]], "type (ase2sprkkr.sprkkr.sprkkr_grammar_types.atomictype attribute)": [[1211, "ase2sprkkr.sprkkr.sprkkr_grammar_types.AtomicType.type"]], "i (ase2sprkkr.sprkkr.sprkkr_grammar_types.site attribute)": [[1212, "ase2sprkkr.sprkkr.sprkkr_grammar_types.Site.I"]], "site (class in ase2sprkkr.sprkkr.sprkkr_grammar_types)": [[1212, "ase2sprkkr.sprkkr.sprkkr_grammar_types.Site"]], "__init__() (ase2sprkkr.sprkkr.sprkkr_grammar_types.site method)": [[1212, "ase2sprkkr.sprkkr.sprkkr_grammar_types.Site.__init__"]], "allowed_types (ase2sprkkr.sprkkr.sprkkr_grammar_types.site attribute)": [[1212, "ase2sprkkr.sprkkr.sprkkr_grammar_types.Site.allowed_types"]], "datatype (ase2sprkkr.sprkkr.sprkkr_grammar_types.site attribute)": [[1212, "ase2sprkkr.sprkkr.sprkkr_grammar_types.Site.datatype"]], "set_from_atoms() (ase2sprkkr.sprkkr.sprkkr_grammar_types.site method)": [[1212, "ase2sprkkr.sprkkr.sprkkr_grammar_types.Site.set_from_atoms"]], "type (ase2sprkkr.sprkkr.sprkkr_grammar_types.site attribute)": [[1212, "ase2sprkkr.sprkkr.sprkkr_grammar_types.Site.type"]], "ase2sprkkr.sprkkr.structure": [[1213, "module-ase2sprkkr.sprkkr.structure"]], "atomdata (class in ase2sprkkr.sprkkr.structure)": [[1214, "ase2sprkkr.sprkkr.structure.AtomData"]], "__init__() (ase2sprkkr.sprkkr.structure.atomdata method)": [[1214, "ase2sprkkr.sprkkr.structure.AtomData.__init__"]], "from_text() (ase2sprkkr.sprkkr.structure.atomdata static method)": [[1214, "ase2sprkkr.sprkkr.structure.AtomData.from_text"]], "get_symbol() (ase2sprkkr.sprkkr.structure.atomdata method)": [[1214, "ase2sprkkr.sprkkr.structure.AtomData.get_symbol"]], "layerdata (class in ase2sprkkr.sprkkr.structure)": [[1215, "ase2sprkkr.sprkkr.structure.LayerData"]], "__init__() (ase2sprkkr.sprkkr.structure.layerdata method)": [[1215, "ase2sprkkr.sprkkr.structure.LayerData.__init__"]], "floatjm() (in module ase2sprkkr.sprkkr.structure)": [[1216, "ase2sprkkr.sprkkr.structure.floatjm"]], "structure_file_to_atoms() (in module ase2sprkkr.sprkkr.structure)": [[1217, "ase2sprkkr.sprkkr.structure.structure_file_to_atoms"]], "ase2sprkkr.sprkkr.sysfile": [[1218, "module-ase2sprkkr.sprkkr.sysfile"]], "sysfile_content() (in module ase2sprkkr.sprkkr.sysfile)": [[1219, "ase2sprkkr.sprkkr.sysfile.sysfile_content"]], "write_sysfile() (in module ase2sprkkr.sprkkr.sysfile)": [[1220, "ase2sprkkr.sprkkr.sysfile.write_sysfile"]], "ase2sprkkr.sprkkr.test": [[1221, "module-ase2sprkkr.sprkkr.test"]], "ase2sprkkr.sprkkr.test.init_tests": [[1222, "module-ase2sprkkr.sprkkr.test.init_tests"]], "testcase (class in ase2sprkkr.sprkkr.test.init_tests)": [[1223, "ase2sprkkr.sprkkr.test.init_tests.TestCase"]], "__init__() (ase2sprkkr.sprkkr.test.init_tests.testcase method)": [[1223, "ase2sprkkr.sprkkr.test.init_tests.TestCase.__init__"]], "_calc_args (ase2sprkkr.sprkkr.test.init_tests.testcase attribute)": [[1223, "ase2sprkkr.sprkkr.test.init_tests.TestCase._calc_args"]], "_print_output (ase2sprkkr.sprkkr.test.init_tests.testcase attribute)": [[1223, "ase2sprkkr.sprkkr.test.init_tests.TestCase._print_output"]], "almost_equal_precision() (ase2sprkkr.sprkkr.test.init_tests.testcase class method)": [[1223, "ase2sprkkr.sprkkr.test.init_tests.TestCase.almost_equal_precision"]], "assertalmostequal() (ase2sprkkr.sprkkr.test.init_tests.testcase method)": [[1223, "ase2sprkkr.sprkkr.test.init_tests.TestCase.assertAlmostEqual"]], "assertasyncequal() (ase2sprkkr.sprkkr.test.init_tests.testcase method)": [[1223, "ase2sprkkr.sprkkr.test.init_tests.TestCase.assertAsyncEqual"]], "assertasyncraises() (ase2sprkkr.sprkkr.test.init_tests.testcase method)": [[1223, "ase2sprkkr.sprkkr.test.init_tests.TestCase.assertAsyncRaises"]], "assertequal() (ase2sprkkr.sprkkr.test.init_tests.testcase method)": [[1223, "ase2sprkkr.sprkkr.test.init_tests.TestCase.assertEqual"]], "assertfalse() (ase2sprkkr.sprkkr.test.init_tests.testcase method)": [[1223, "ase2sprkkr.sprkkr.test.init_tests.TestCase.assertFalse"]], "assertisnone() (ase2sprkkr.sprkkr.test.init_tests.testcase method)": [[1223, "ase2sprkkr.sprkkr.test.init_tests.TestCase.assertIsNone"]], "assertnotequal() (ase2sprkkr.sprkkr.test.init_tests.testcase method)": [[1223, "ase2sprkkr.sprkkr.test.init_tests.TestCase.assertNotEqual"]], "assertraises() (ase2sprkkr.sprkkr.test.init_tests.testcase method)": [[1223, "ase2sprkkr.sprkkr.test.init_tests.TestCase.assertRaises"]], "asserttrue() (ase2sprkkr.sprkkr.test.init_tests.testcase method)": [[1223, "ase2sprkkr.sprkkr.test.init_tests.TestCase.assertTrue"]], "calc_args() (ase2sprkkr.sprkkr.test.init_tests.testcase class method)": [[1223, "ase2sprkkr.sprkkr.test.init_tests.TestCase.calc_args"]], "runasync() (ase2sprkkr.sprkkr.test.init_tests.testcase static method)": [[1223, "ase2sprkkr.sprkkr.test.init_tests.TestCase.runAsync"]], "run_sprkkr() (ase2sprkkr.sprkkr.test.init_tests.testcase method)": [[1223, "ase2sprkkr.sprkkr.test.init_tests.TestCase.run_sprkkr"]], "temporary_dir() (ase2sprkkr.sprkkr.test.init_tests.testcase method)": [[1223, "ase2sprkkr.sprkkr.test.init_tests.TestCase.temporary_dir"]], "arr_testfce() (in module ase2sprkkr.sprkkr.test.init_tests)": [[1224, "ase2sprkkr.sprkkr.test.init_tests.arr_testfce"]], "assertdictequal() (in module ase2sprkkr.sprkkr.test.init_tests)": [[1225, "ase2sprkkr.sprkkr.test.init_tests.assertDictEqual"]], "assertlistequal() (in module ase2sprkkr.sprkkr.test.init_tests)": [[1226, "ase2sprkkr.sprkkr.test.init_tests.assertListEqual"]], "assert_almost_equals() (in module ase2sprkkr.sprkkr.test.init_tests)": [[1227, "ase2sprkkr.sprkkr.test.init_tests.assert_almost_equals"]], "assert_equals() (in module ase2sprkkr.sprkkr.test.init_tests)": [[1228, "ase2sprkkr.sprkkr.test.init_tests.assert_equals"]], "__init__() (ase2sprkkr.sprkkr.test.init_tests.extdict method)": [[1229, "ase2sprkkr.sprkkr.test.init_tests.extdict.__init__"]], "extdict (class in ase2sprkkr.sprkkr.test.init_tests)": [[1229, "ase2sprkkr.sprkkr.test.init_tests.extdict"]], "testfce() (in module ase2sprkkr.sprkkr.test.init_tests)": [[1230, "ase2sprkkr.sprkkr.test.init_tests.testfce"]], "ase2sprkkr.sprkkr.test.test_arpes": [[1231, "module-ase2sprkkr.sprkkr.test.test_arpes"]], "testcalculator (class in ase2sprkkr.sprkkr.test.test_arpes)": [[1232, "ase2sprkkr.sprkkr.test.test_arpes.TestCalculator"]], "__init__() (ase2sprkkr.sprkkr.test.test_arpes.testcalculator method)": [[1232, "ase2sprkkr.sprkkr.test.test_arpes.TestCalculator.__init__"]], "test_run() (ase2sprkkr.sprkkr.test.test_arpes.testcalculator method)": [[1232, "ase2sprkkr.sprkkr.test.test_arpes.TestCalculator.test_run"]], "ase2sprkkr.sprkkr.test.test_build": [[1233, "module-ase2sprkkr.sprkkr.test.test_build"]], "testbuild (class in ase2sprkkr.sprkkr.test.test_build)": [[1234, "ase2sprkkr.sprkkr.test.test_build.TestBuild"]], "__init__() (ase2sprkkr.sprkkr.test.test_build.testbuild method)": [[1234, "ase2sprkkr.sprkkr.test.test_build.TestBuild.__init__"]], "test() (ase2sprkkr.sprkkr.test.test_build.testbuild method)": [[1234, "ase2sprkkr.sprkkr.test.test_build.TestBuild.test"]], "ase2sprkkr.sprkkr.test.test_calculator": [[1235, "module-ase2sprkkr.sprkkr.test.test_calculator"]], "testcalculator (class in ase2sprkkr.sprkkr.test.test_calculator)": [[1236, "ase2sprkkr.sprkkr.test.test_calculator.TestCalculator"]], "__init__() (ase2sprkkr.sprkkr.test.test_calculator.testcalculator method)": [[1236, "ase2sprkkr.sprkkr.test.test_calculator.TestCalculator.__init__"]], "test_2d() (ase2sprkkr.sprkkr.test.test_calculator.testcalculator method)": [[1236, "ase2sprkkr.sprkkr.test.test_calculator.TestCalculator.test_2D"]], "test_calculator() (ase2sprkkr.sprkkr.test.test_calculator.testcalculator method)": [[1236, "ase2sprkkr.sprkkr.test.test_calculator.TestCalculator.test_calculator"]], "test_phagen() (ase2sprkkr.sprkkr.test.test_calculator.testcalculator method)": [[1236, "ase2sprkkr.sprkkr.test.test_calculator.TestCalculator.test_phagen"]], "test_run() (ase2sprkkr.sprkkr.test.test_calculator.testcalculator method)": [[1236, "ase2sprkkr.sprkkr.test.test_calculator.TestCalculator.test_run"]], "_fast_atoms() (in module ase2sprkkr.sprkkr.test.test_calculator)": [[1237, "ase2sprkkr.sprkkr.test.test_calculator._fast_atoms"]], "ase2sprkkr.sprkkr.test.test_occupation": [[1238, "module-ase2sprkkr.sprkkr.test.test_occupation"]], "__init__() (ase2sprkkr.sprkkr.test.test_occupation.test method)": [[1239, "ase2sprkkr.sprkkr.test.test_occupation.test.__init__"]], "test (class in ase2sprkkr.sprkkr.test.test_occupation)": [[1239, "ase2sprkkr.sprkkr.test.test_occupation.test"]], "test() (ase2sprkkr.sprkkr.test.test_occupation.test method)": [[1239, "ase2sprkkr.sprkkr.test.test_occupation.test.test"]], "ase2sprkkr.sprkkr.test.test_sites": [[1240, "module-ase2sprkkr.sprkkr.test.test_sites"]], "testsites (class in ase2sprkkr.sprkkr.test.test_sites)": [[1241, "ase2sprkkr.sprkkr.test.test_sites.TestSites"]], "__init__() (ase2sprkkr.sprkkr.test.test_sites.testsites method)": [[1241, "ase2sprkkr.sprkkr.test.test_sites.TestSites.__init__"]], "test_adding() (ase2sprkkr.sprkkr.test.test_sites.testsites method)": [[1241, "ase2sprkkr.sprkkr.test.test_sites.TestSites.test_adding"]], "test_occupancy() (ase2sprkkr.sprkkr.test.test_sites.testsites method)": [[1241, "ase2sprkkr.sprkkr.test.test_sites.TestSites.test_occupancy"]], "test_potential() (ase2sprkkr.sprkkr.test.test_sites.testsites method)": [[1241, "ase2sprkkr.sprkkr.test.test_sites.TestSites.test_potential"]], "test_vacuum() (ase2sprkkr.sprkkr.test.test_sites.testsites method)": [[1241, "ase2sprkkr.sprkkr.test.test_sites.TestSites.test_vacuum"]], "ase2sprkkr.sprkkr.test.test_sprkkr_atoms": [[1242, "module-ase2sprkkr.sprkkr.test.test_sprkkr_atoms"]], "testsprkkratoms (class in ase2sprkkr.sprkkr.test.test_sprkkr_atoms)": [[1243, "ase2sprkkr.sprkkr.test.test_sprkkr_atoms.TestSPRKKRAtoms"]], "__init__() (ase2sprkkr.sprkkr.test.test_sprkkr_atoms.testsprkkratoms method)": [[1243, "ase2sprkkr.sprkkr.test.test_sprkkr_atoms.TestSPRKKRAtoms.__init__"]], "test_atoms() (ase2sprkkr.sprkkr.test.test_sprkkr_atoms.testsprkkratoms method)": [[1243, "ase2sprkkr.sprkkr.test.test_sprkkr_atoms.TestSPRKKRAtoms.test_atoms"]], "test_extend() (ase2sprkkr.sprkkr.test.test_sprkkr_atoms.testsprkkratoms method)": [[1243, "ase2sprkkr.sprkkr.test.test_sprkkr_atoms.TestSPRKKRAtoms.test_extend"]], "test_occupancy() (ase2sprkkr.sprkkr.test.test_sprkkr_atoms.testsprkkratoms method)": [[1243, "ase2sprkkr.sprkkr.test.test_sprkkr_atoms.TestSPRKKRAtoms.test_occupancy"]], "test_symmetry() (ase2sprkkr.sprkkr.test.test_sprkkr_atoms.testsprkkratoms method)": [[1243, "ase2sprkkr.sprkkr.test.test_sprkkr_atoms.TestSPRKKRAtoms.test_symmetry"]], "ase2sprkkr.sprkkr.test.test_sysfile": [[1244, "module-ase2sprkkr.sprkkr.test.test_sysfile"]], "testsysfile (class in ase2sprkkr.sprkkr.test.test_sysfile)": [[1245, "ase2sprkkr.sprkkr.test.test_sysfile.TestSysfile"]], "__init__() (ase2sprkkr.sprkkr.test.test_sysfile.testsysfile method)": [[1245, "ase2sprkkr.sprkkr.test.test_sysfile.TestSysfile.__init__"]], "test() (ase2sprkkr.sprkkr.test.test_sysfile.testsysfile method)": [[1245, "ase2sprkkr.sprkkr.test.test_sysfile.TestSysfile.test"]], "ase2sprkkr.tools": [[1246, "module-ase2sprkkr.tools"]], "ase2sprkkr.tools.ase2sprkkr": [[1247, "module-ase2sprkkr.tools.ase2sprkkr"]], "run() (in module ase2sprkkr.tools.ase2sprkkr)": [[1248, "ase2sprkkr.tools.ase2sprkkr.run"]], "ase2sprkkr.tools.commands": [[1249, "module-ase2sprkkr.tools.commands"]], "ase2sprkkr.tools.commands.config": [[1250, "module-ase2sprkkr.tools.commands.config"]], "parser() (in module ase2sprkkr.tools.commands.config)": [[1251, "ase2sprkkr.tools.commands.config.parser"]], "run() (in module ase2sprkkr.tools.commands.config)": [[1252, "ase2sprkkr.tools.commands.config.run"]], "ase2sprkkr.tools.commands.info": [[1253, "module-ase2sprkkr.tools.commands.info"]], "testsargaction (class in ase2sprkkr.tools.commands.info)": [[1254, "ase2sprkkr.tools.commands.info.TestsArgAction"]], "__init__() (ase2sprkkr.tools.commands.info.testsargaction method)": [[1254, "ase2sprkkr.tools.commands.info.TestsArgAction.__init__"]], "info_output_files() (in module ase2sprkkr.tools.commands.info)": [[1255, "ase2sprkkr.tools.commands.info.info_output_files"]], "info_tasks() (in module ase2sprkkr.tools.commands.info)": [[1256, "ase2sprkkr.tools.commands.info.info_tasks"]], "parser() (in module ase2sprkkr.tools.commands.info)": [[1257, "ase2sprkkr.tools.commands.info.parser"]], "run() (in module ase2sprkkr.tools.commands.info)": [[1258, "ase2sprkkr.tools.commands.info.run"]], "ase2sprkkr.tools.commands.plot": [[1259, "module-ase2sprkkr.tools.commands.plot"]], "parser() (in module ase2sprkkr.tools.commands.plot)": [[1260, "ase2sprkkr.tools.commands.plot.parser"]], "run() (in module ase2sprkkr.tools.commands.plot)": [[1261, "ase2sprkkr.tools.commands.plot.run"]], "ase2sprkkr.tools.commands.run": [[1262, "module-ase2sprkkr.tools.commands.run"]], "parser() (in module ase2sprkkr.tools.commands.run)": [[1263, "ase2sprkkr.tools.commands.run.parser"]], "run() (in module ase2sprkkr.tools.commands.run)": [[1264, "ase2sprkkr.tools.commands.run.run"]], "ase2sprkkr.tools.commands.show_structure": [[1265, "module-ase2sprkkr.tools.commands.show_structure"]], "parser() (in module ase2sprkkr.tools.commands.show_structure)": [[1266, "ase2sprkkr.tools.commands.show_structure.parser"]], "run() (in module ase2sprkkr.tools.commands.show_structure)": [[1267, "ase2sprkkr.tools.commands.show_structure.run"]], "ase2sprkkr.tools.commands.test": [[1268, "module-ase2sprkkr.tools.commands.test"]], "parser() (in module ase2sprkkr.tools.commands.test)": [[1269, "ase2sprkkr.tools.commands.test.parser"]], "run() (in module ase2sprkkr.tools.commands.test)": [[1270, "ase2sprkkr.tools.commands.test.run"]], "ase2sprkkr.tools.shared": [[1271, "module-ase2sprkkr.tools.shared"]], "main() (in module ase2sprkkr.tools.shared)": [[1272, "ase2sprkkr.tools.shared.main"]], "ase2sprkkr.tools.test": [[1273, "module-ase2sprkkr.tools.test"]], "ase2sprkkr.tools.test.init_tests": [[1274, "module-ase2sprkkr.tools.test.init_tests"]], "testcase (class in ase2sprkkr.tools.test.init_tests)": [[1275, "ase2sprkkr.tools.test.init_tests.TestCase"]], "__init__() (ase2sprkkr.tools.test.init_tests.testcase method)": [[1275, "ase2sprkkr.tools.test.init_tests.TestCase.__init__"]], "_calc_args (ase2sprkkr.tools.test.init_tests.testcase attribute)": [[1275, "ase2sprkkr.tools.test.init_tests.TestCase._calc_args"]], "_print_output (ase2sprkkr.tools.test.init_tests.testcase attribute)": [[1275, "ase2sprkkr.tools.test.init_tests.TestCase._print_output"]], "almost_equal_precision() (ase2sprkkr.tools.test.init_tests.testcase class method)": [[1275, "ase2sprkkr.tools.test.init_tests.TestCase.almost_equal_precision"]], "assertalmostequal() (ase2sprkkr.tools.test.init_tests.testcase method)": [[1275, "ase2sprkkr.tools.test.init_tests.TestCase.assertAlmostEqual"]], "assertasyncequal() (ase2sprkkr.tools.test.init_tests.testcase method)": [[1275, "ase2sprkkr.tools.test.init_tests.TestCase.assertAsyncEqual"]], "assertasyncraises() (ase2sprkkr.tools.test.init_tests.testcase method)": [[1275, "ase2sprkkr.tools.test.init_tests.TestCase.assertAsyncRaises"]], "assertequal() (ase2sprkkr.tools.test.init_tests.testcase method)": [[1275, "ase2sprkkr.tools.test.init_tests.TestCase.assertEqual"]], "assertfalse() (ase2sprkkr.tools.test.init_tests.testcase method)": [[1275, "ase2sprkkr.tools.test.init_tests.TestCase.assertFalse"]], "assertisnone() (ase2sprkkr.tools.test.init_tests.testcase method)": [[1275, "ase2sprkkr.tools.test.init_tests.TestCase.assertIsNone"]], "assertnotequal() (ase2sprkkr.tools.test.init_tests.testcase method)": [[1275, "ase2sprkkr.tools.test.init_tests.TestCase.assertNotEqual"]], "assertraises() (ase2sprkkr.tools.test.init_tests.testcase method)": [[1275, "ase2sprkkr.tools.test.init_tests.TestCase.assertRaises"]], "asserttrue() (ase2sprkkr.tools.test.init_tests.testcase method)": [[1275, "ase2sprkkr.tools.test.init_tests.TestCase.assertTrue"]], "calc_args() (ase2sprkkr.tools.test.init_tests.testcase class method)": [[1275, "ase2sprkkr.tools.test.init_tests.TestCase.calc_args"]], "runasync() (ase2sprkkr.tools.test.init_tests.testcase static method)": [[1275, "ase2sprkkr.tools.test.init_tests.TestCase.runAsync"]], "run_sprkkr() (ase2sprkkr.tools.test.init_tests.testcase method)": [[1275, "ase2sprkkr.tools.test.init_tests.TestCase.run_sprkkr"]], "temporary_dir() (ase2sprkkr.tools.test.init_tests.testcase method)": [[1275, "ase2sprkkr.tools.test.init_tests.TestCase.temporary_dir"]], "arr_testfce() (in module ase2sprkkr.tools.test.init_tests)": [[1276, "ase2sprkkr.tools.test.init_tests.arr_testfce"]], "assertdictequal() (in module ase2sprkkr.tools.test.init_tests)": [[1277, "ase2sprkkr.tools.test.init_tests.assertDictEqual"]], "assertlistequal() (in module ase2sprkkr.tools.test.init_tests)": [[1278, "ase2sprkkr.tools.test.init_tests.assertListEqual"]], "assert_almost_equals() (in module ase2sprkkr.tools.test.init_tests)": [[1279, "ase2sprkkr.tools.test.init_tests.assert_almost_equals"]], "assert_equals() (in module ase2sprkkr.tools.test.init_tests)": [[1280, "ase2sprkkr.tools.test.init_tests.assert_equals"]], "__init__() (ase2sprkkr.tools.test.init_tests.extdict method)": [[1281, "ase2sprkkr.tools.test.init_tests.extdict.__init__"]], "extdict (class in ase2sprkkr.tools.test.init_tests)": [[1281, "ase2sprkkr.tools.test.init_tests.extdict"]], "testfce() (in module ase2sprkkr.tools.test.init_tests)": [[1282, "ase2sprkkr.tools.test.init_tests.testfce"]], "ase2sprkkr.tools.test.test_tools": [[1283, "module-ase2sprkkr.tools.test.test_tools"]], "testcommon (class in ase2sprkkr.tools.test.test_tools)": [[1284, "ase2sprkkr.tools.test.test_tools.TestCommon"]], "__init__() (ase2sprkkr.tools.test.test_tools.testcommon method)": [[1284, "ase2sprkkr.tools.test.test_tools.TestCommon.__init__"]], "test() (ase2sprkkr.tools.test.test_tools.testcommon method)": [[1284, "ase2sprkkr.tools.test.test_tools.TestCommon.test"]], "ase2sprkkr.version": [[1285, "module-ase2sprkkr.version"]], "ase2sprkkr.visualise": [[1286, "module-ase2sprkkr.visualise"]], "ase2sprkkr.visualise.plot": [[1287, "module-ase2sprkkr.visualise.plot"]], "multiplot (class in ase2sprkkr.visualise.plot)": [[1288, "ase2sprkkr.visualise.plot.Multiplot"]], "__init__() (ase2sprkkr.visualise.plot.multiplot method)": [[1288, "ase2sprkkr.visualise.plot.Multiplot.__init__"]], "finish() (ase2sprkkr.visualise.plot.multiplot method)": [[1288, "ase2sprkkr.visualise.plot.Multiplot.finish"]], "plot() (ase2sprkkr.visualise.plot.multiplot method)": [[1288, "ase2sprkkr.visualise.plot.Multiplot.plot"]], "auto_range() (in module ase2sprkkr.visualise.plot)": [[1289, "ase2sprkkr.visualise.plot.auto_range"]], "change_default_kwargs() (in module ase2sprkkr.visualise.plot)": [[1290, "ase2sprkkr.visualise.plot.change_default_kwargs"]], "colormesh() (in module ase2sprkkr.visualise.plot)": [[1291, "ase2sprkkr.visualise.plot.colormesh"]], "combine_colormaps() (in module ase2sprkkr.visualise.plot)": [[1292, "ase2sprkkr.visualise.plot.combine_colormaps"]], "combined_colormap() (in module ase2sprkkr.visualise.plot)": [[1293, "ase2sprkkr.visualise.plot.combined_colormap"]], "create_rc_context() (in module ase2sprkkr.visualise.plot)": [[1294, "ase2sprkkr.visualise.plot.create_rc_context"]], "finish_plot() (in module ase2sprkkr.visualise.plot)": [[1295, "ase2sprkkr.visualise.plot.finish_plot"]], "normalize_rc_params() (in module ase2sprkkr.visualise.plot)": [[1296, "ase2sprkkr.visualise.plot.normalize_rc_params"]], "plotting_function() (in module ase2sprkkr.visualise.plot)": [[1297, "ase2sprkkr.visualise.plot.plotting_function"]], "set_up_common_plot() (in module ase2sprkkr.visualise.plot)": [[1298, "ase2sprkkr.visualise.plot.set_up_common_plot"]], "single_plot() (in module ase2sprkkr.visualise.plot)": [[1299, "ase2sprkkr.visualise.plot.single_plot"]]}})