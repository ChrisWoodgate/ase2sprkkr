Search.setIndex({"docnames": ["README", "auto/ase2sprkkr", "auto/ase2sprkkr.ase", "auto/ase2sprkkr.ase.build", "auto/ase2sprkkr.ase.build.aperiodic_times", "auto/ase2sprkkr.ase.build.stack", "auto/ase2sprkkr.ase.io", "auto/ase2sprkkr.ase.io.read_sprkkr", "auto/ase2sprkkr.ase.io.write_sprkkr", "auto/ase2sprkkr.ase.pbc", "auto/ase2sprkkr.ase.pbc.check_symmetry", "auto/ase2sprkkr.ase.register", "auto/ase2sprkkr.ase.register.ase_register", "auto/ase2sprkkr.ase.register.register", "auto/ase2sprkkr.ase.symbols", "auto/ase2sprkkr.ase.symbols.filename_from_symbols", "auto/ase2sprkkr.ase.symbols.pretty_symbols", "auto/ase2sprkkr.ase.test", "auto/ase2sprkkr.ase.test.init_tests", "auto/ase2sprkkr.ase.test.init_tests.TestCase", "auto/ase2sprkkr.ase.test.init_tests.arr_testfce", "auto/ase2sprkkr.ase.test.init_tests.assertDictEqual", "auto/ase2sprkkr.ase.test.init_tests.assertListEqual", "auto/ase2sprkkr.ase.test.init_tests.assert_almost_equals", "auto/ase2sprkkr.ase.test.init_tests.assert_equals", "auto/ase2sprkkr.ase.test.init_tests.extdict", "auto/ase2sprkkr.ase.test.init_tests.testfce", "auto/ase2sprkkr.ase.test.test_build", "auto/ase2sprkkr.ase.test.test_build.TestBuild", "auto/ase2sprkkr.ase.visualise", "auto/ase2sprkkr.ase.visualise.view", "auto/ase2sprkkr.asr", "auto/ase2sprkkr.asr.asr", "auto/ase2sprkkr.asr.bader", "auto/ase2sprkkr.asr.bader.print", "auto/ase2sprkkr.asr.bandstructure", "auto/ase2sprkkr.asr.bandstructure.Result", "auto/ase2sprkkr.asr.bandstructure.add_bs_pbe", "auto/ase2sprkkr.asr.bandstructure.bs_pbe", "auto/ase2sprkkr.asr.bandstructure.bs_pbe_html", "auto/ase2sprkkr.asr.bandstructure.plot_with_colors", "auto/ase2sprkkr.asr.bandstructure.webpanel", "auto/ase2sprkkr.asr.berry", "auto/ase2sprkkr.asr.berry.Result", "auto/ase2sprkkr.asr.berry.plot_phases", "auto/ase2sprkkr.asr.berry.webpanel", "auto/ase2sprkkr.asr.borncharges", "auto/ase2sprkkr.asr.borncharges.Result", "auto/ase2sprkkr.asr.borncharges.webpanel", "auto/ase2sprkkr.asr.bse", "auto/ase2sprkkr.asr.bse.Result", "auto/ase2sprkkr.asr.bse.absorption", "auto/ase2sprkkr.asr.bse.get_kpts_size", "auto/ase2sprkkr.asr.bse.webpanel", "auto/ase2sprkkr.asr.calculators", "auto/ase2sprkkr.asr.calculators.get_calculator", "auto/ase2sprkkr.asr.chc", "auto/ase2sprkkr.asr.chc.CHCError", "auto/ase2sprkkr.asr.chc.ConvexHullReference", "auto/ase2sprkkr.asr.chc.Hyperplane", "auto/ase2sprkkr.asr.chc.Intermediate", "auto/ase2sprkkr.asr.chc.LeanIntermediate", "auto/ase2sprkkr.asr.chc.Line", "auto/ase2sprkkr.asr.chc.Reference", "auto/ase2sprkkr.asr.chc.Result", "auto/ase2sprkkr.asr.chc._permutecontain", "auto/ase2sprkkr.asr.chc.append_references", "auto/ase2sprkkr.asr.chc.calculate_intermediates", "auto/ase2sprkkr.asr.chc.chcut_plot", "auto/ase2sprkkr.asr.chc.convex_hull", "auto/ase2sprkkr.asr.chc.convex_hull_planes", "auto/ase2sprkkr.asr.chc.filrefs", "auto/ase2sprkkr.asr.chc.get_coords", "auto/ase2sprkkr.asr.chc.get_hof", "auto/ase2sprkkr.asr.chc.gscheck", "auto/ase2sprkkr.asr.chc.is_collinear", "auto/ase2sprkkr.asr.chc.is_independent", "auto/ase2sprkkr.asr.chc.mgs", "auto/ase2sprkkr.asr.chc.mgsls", "auto/ase2sprkkr.asr.chc.mu_adjustment", "auto/ase2sprkkr.asr.chc.orthogonalize", "auto/ase2sprkkr.asr.chc.projuv", "auto/ase2sprkkr.asr.chc.read_structure", "auto/ase2sprkkr.asr.chc.refs2ims", "auto/ase2sprkkr.asr.chc.results2ref", "auto/ase2sprkkr.asr.chc.row2ref", "auto/ase2sprkkr.asr.chc.tuplespermuted", "auto/ase2sprkkr.asr.chc.webpanel", "auto/ase2sprkkr.asr.convex_hull", "auto/ase2sprkkr.asr.convex_hull.Result", "auto/ase2sprkkr.asr.convex_hull.convex_hull_tables", "auto/ase2sprkkr.asr.convex_hull.get_reference_energies", "auto/ase2sprkkr.asr.convex_hull.hof", "auto/ase2sprkkr.asr.convex_hull.plot", "auto/ase2sprkkr.asr.convex_hull.select_references", "auto/ase2sprkkr.asr.convex_hull.webpanel", "auto/ase2sprkkr.asr.core", "auto/ase2sprkkr.asr.core.cli", "auto/ase2sprkkr.asr.core.cli.append_job", "auto/ase2sprkkr.asr.core.cli.check_git", "auto/ase2sprkkr.asr.core.cli.extract_hash_from_file", "auto/ase2sprkkr.asr.core.cli.format", "auto/ase2sprkkr.asr.core.cli.get_config_dir", "auto/ase2sprkkr.asr.core.cli.get_git_rev_list", "auto/ase2sprkkr.asr.core.cli.initialize_asr_configuration_dir", "auto/ase2sprkkr.asr.core.cli.is_asr_initialized", "auto/ase2sprkkr.asr.core.cli.run_command", "auto/ase2sprkkr.asr.core.command", "auto/ase2sprkkr.asr.core.fix_old_files", "auto/ase2sprkkr.asr.core.fix_old_files.is_results_file", "auto/ase2sprkkr.asr.core.material", "auto/ase2sprkkr.asr.core.material.Material", "auto/ase2sprkkr.asr.core.material.get_material_from_folder", "auto/ase2sprkkr.asr.core.material.get_webpanels_from_material", "auto/ase2sprkkr.asr.core.material.make_panel_figures", "auto/ase2sprkkr.asr.core.results", "auto/ase2sprkkr.asr.core.results.ASRResult", "auto/ase2sprkkr.asr.core.results.DictEncoder", "auto/ase2sprkkr.asr.core.results.HTMLEncoder", "auto/ase2sprkkr.asr.core.results.HackedASRResult", "auto/ase2sprkkr.asr.core.results.JSONEncoder", "auto/ase2sprkkr.asr.core.results.MetaData", "auto/ase2sprkkr.asr.core.results.MetaDataNotSetError", "auto/ase2sprkkr.asr.core.results.ObjectDescription", "auto/ase2sprkkr.asr.core.results.ResultEncoder", "auto/ase2sprkkr.asr.core.results.UnknownASRResultFormat", "auto/ase2sprkkr.asr.core.results.UnknownDataFormat", "auto/ase2sprkkr.asr.core.results.WebPanelEncoder", "auto/ase2sprkkr.asr.core.results.data_to_dict", "auto/ase2sprkkr.asr.core.results.dct_to_result", "auto/ase2sprkkr.asr.core.results.find_class_matching_version", "auto/ase2sprkkr.asr.core.results.format_key_description_pair", "auto/ase2sprkkr.asr.core.results.get_key_descriptions", "auto/ase2sprkkr.asr.core.results.get_object_matching_obj_id", "auto/ase2sprkkr.asr.core.results.get_object_types", "auto/ase2sprkkr.asr.core.results.get_reader_function", "auto/ase2sprkkr.asr.core.results.make_property", "auto/ase2sprkkr.asr.core.results.obj_to_id", "auto/ase2sprkkr.asr.core.results.object_description_to_object", "auto/ase2sprkkr.asr.core.results.prepare_result", "auto/ase2sprkkr.asr.core.results.read_hacked_data", "auto/ase2sprkkr.asr.core.results.read_new_data", "auto/ase2sprkkr.asr.core.results.read_old_data", "auto/ase2sprkkr.asr.core.types", "auto/ase2sprkkr.asr.core.types.AtomsFile", "auto/ase2sprkkr.asr.core.types.DictStr", "auto/ase2sprkkr.asr.core.types.clickify_docstring", "auto/ase2sprkkr.asr.core.utils", "auto/ase2sprkkr.asr.core.utils.chdir", "auto/ase2sprkkr.asr.core.utils.dct_to_object", "auto/ase2sprkkr.asr.core.utils.encode_json", "auto/ase2sprkkr.asr.core.utils.file_barrier", "auto/ase2sprkkr.asr.core.utils.get_dep_tree", "auto/ase2sprkkr.asr.core.utils.get_recipe_from_name", "auto/ase2sprkkr.asr.core.utils.md5sum", "auto/ase2sprkkr.asr.core.utils.parse_dict_string", "auto/ase2sprkkr.asr.core.utils.parse_mod_func", "auto/ase2sprkkr.asr.core.utils.read_json", "auto/ase2sprkkr.asr.core.utils.recursive_update", "auto/ase2sprkkr.asr.core.utils.singleprec_dict", "auto/ase2sprkkr.asr.core.utils.unlink", "auto/ase2sprkkr.asr.core.utils.write_file", "auto/ase2sprkkr.asr.core.utils.write_json", "auto/ase2sprkkr.asr.database", "auto/ase2sprkkr.asr.database.browser", "auto/ase2sprkkr.asr.database.browser.RowWrapper", "auto/ase2sprkkr.asr.database.browser.create_table", "auto/ase2sprkkr.asr.database.browser.describe_entries", "auto/ase2sprkkr.asr.database.browser.describe_entry", "auto/ase2sprkkr.asr.database.browser.dict_to_list", "auto/ase2sprkkr.asr.database.browser.entry_parameter_description", "auto/ase2sprkkr.asr.database.browser.extract_recipe_from_filename", "auto/ase2sprkkr.asr.database.browser.fig", "auto/ase2sprkkr.asr.database.browser.is_results_file", "auto/ase2sprkkr.asr.database.browser.layout", "auto/ase2sprkkr.asr.database.browser.merge_panels", "auto/ase2sprkkr.asr.database.browser.miscellaneous_section", "auto/ase2sprkkr.asr.database.browser.table", "auto/ase2sprkkr.asr.database.browser.val2str", "auto/ase2sprkkr.asr.database.check", "auto/ase2sprkkr.asr.database.clonetree", "auto/ase2sprkkr.asr.database.duplicates", "auto/ase2sprkkr.asr.database.duplicates.compare", "auto/ase2sprkkr.asr.database.duplicates.filter_uids", "auto/ase2sprkkr.asr.database.duplicates.find_duplicate_group", "auto/ase2sprkkr.asr.database.duplicates.parse_filter_string", "auto/ase2sprkkr.asr.database.material_fingerprint", "auto/ase2sprkkr.asr.database.material_fingerprint.get_hash_of_atoms", "auto/ase2sprkkr.asr.database.material_fingerprint.get_uid_of_atoms", "auto/ase2sprkkr.asr.database.material_fingerprint.todict", "auto/ase2sprkkr.asr.database.merge", "auto/ase2sprkkr.asr.database.rmsd", "auto/ase2sprkkr.asr.database.rmsd.get_rmsd", "auto/ase2sprkkr.asr.database.rmsd.normalize_nonpbc_atoms", "auto/ase2sprkkr.asr.database.rmsd.update_rmsd", "auto/ase2sprkkr.asr.database.templates", "auto/ase2sprkkr.asr.database.totree", "auto/ase2sprkkr.asr.database.totree.make_folder_dict", "auto/ase2sprkkr.asr.database.totree.make_folder_tree", "auto/ase2sprkkr.asr.defectformation", "auto/ase2sprkkr.asr.defectformation.check_and_get_general_inputs", "auto/ase2sprkkr.asr.defectformation.collect_data", "auto/ase2sprkkr.asr.defectformation.find_file_in_folder", "auto/ase2sprkkr.asr.defectformation.intersection", "auto/ase2sprkkr.asr.defectformation.line", "auto/ase2sprkkr.asr.defectformation.line_intersection", "auto/ase2sprkkr.asr.defectformation.plot_formation_and_transitions", "auto/ase2sprkkr.asr.deformationpotentials", "auto/ase2sprkkr.asr.deformationpotentials.Result", "auto/ase2sprkkr.asr.deformationpotentials.webpanel", "auto/ase2sprkkr.asr.dimensionality", "auto/ase2sprkkr.asr.dimensionality.get_dimtypes", "auto/ase2sprkkr.asr.dimensionality.plot_dimensionality_histogram", "auto/ase2sprkkr.asr.dimensionality.webpanel", "auto/ase2sprkkr.asr.dos", "auto/ase2sprkkr.asr.dos.collect_data", "auto/ase2sprkkr.asr.dos.plot", "auto/ase2sprkkr.asr.dos.webpanel", "auto/ase2sprkkr.asr.emasses", "auto/ase2sprkkr.asr.emasses.NoGapError", "auto/ase2sprkkr.asr.emasses.Result", "auto/ase2sprkkr.asr.emasses.calculate_bs_along_emass_vecs", "auto/ase2sprkkr.asr.emasses.check_soc", "auto/ase2sprkkr.asr.emasses.convert_key_to_tuple", "auto/ase2sprkkr.asr.emasses.create_columns_fnames", "auto/ase2sprkkr.asr.emasses.custom_table", "auto/ase2sprkkr.asr.emasses.em", "auto/ase2sprkkr.asr.emasses.embands", "auto/ase2sprkkr.asr.emasses.evalmodel", "auto/ase2sprkkr.asr.emasses.fit", "auto/ase2sprkkr.asr.emasses.get_2nd_order_extremum", "auto/ase2sprkkr.asr.emasses.get_3rd_order_extremum", "auto/ase2sprkkr.asr.emasses.get_bt_ks", "auto/ase2sprkkr.asr.emasses.get_emass_dict_from_row", "auto/ase2sprkkr.asr.emasses.get_extremum_type", "auto/ase2sprkkr.asr.emasses.get_gapskn", "auto/ase2sprkkr.asr.emasses.get_name", "auto/ase2sprkkr.asr.emasses.get_range", "auto/ase2sprkkr.asr.emasses.get_vb_cb_indices", "auto/ase2sprkkr.asr.emasses.kptsinsphere", "auto/ase2sprkkr.asr.emasses.make_the_plots", "auto/ase2sprkkr.asr.emasses.model", "auto/ase2sprkkr.asr.emasses.nonsc_sphere", "auto/ase2sprkkr.asr.emasses.preliminary_refine", "auto/ase2sprkkr.asr.emasses.set_default", "auto/ase2sprkkr.asr.emasses.unpack_masses", "auto/ase2sprkkr.asr.emasses.webpanel", "auto/ase2sprkkr.asr.emasses.wideMAE", "auto/ase2sprkkr.asr.exchange", "auto/ase2sprkkr.asr.exchange.get_parameters", "auto/ase2sprkkr.asr.fere", "auto/ase2sprkkr.asr.fere.DBAlreadyExistsError", "auto/ase2sprkkr.asr.fere.MaterialNotFoundError", "auto/ase2sprkkr.asr.fere.ParseError", "auto/ase2sprkkr.asr.fere.count", "auto/ase2sprkkr.asr.fere.create_corrected_db", "auto/ase2sprkkr.asr.fere.elements_from_refs", "auto/ase2sprkkr.asr.fere.formulas_eq", "auto/ase2sprkkr.asr.fere.get_dE_alpha", "auto/ase2sprkkr.asr.fere.get_hof", "auto/ase2sprkkr.asr.fere.load_data", "auto/ase2sprkkr.asr.fere.minimize_error", "auto/ase2sprkkr.asr.fere.multiply_formula", "auto/ase2sprkkr.asr.fere.only", "auto/ase2sprkkr.asr.fere.parse_reactions", "auto/ase2sprkkr.asr.fere.parse_refs", "auto/ase2sprkkr.asr.fere.safe_get", "auto/ase2sprkkr.asr.fere.select", "auto/ase2sprkkr.asr.fere.single", "auto/ase2sprkkr.asr.fere.unique", "auto/ase2sprkkr.asr.fere.where", "auto/ase2sprkkr.asr.fermisurface", "auto/ase2sprkkr.asr.fermisurface.Result", "auto/ase2sprkkr.asr.fermisurface.add_fermi", "auto/ase2sprkkr.asr.fermisurface.bz_vertices", "auto/ase2sprkkr.asr.fermisurface.find_contours", "auto/ase2sprkkr.asr.fermisurface.plot_fermi", "auto/ase2sprkkr.asr.fermisurface.webpanel", "auto/ase2sprkkr.asr.formalpolarization", "auto/ase2sprkkr.asr.formalpolarization.AtomsTooCloseToBoundary", "auto/ase2sprkkr.asr.formalpolarization.distance_to_non_pbc_boundary", "auto/ase2sprkkr.asr.formalpolarization.get_atomic_polarization_phase", "auto/ase2sprkkr.asr.formalpolarization.get_dipole_polarization_phase", "auto/ase2sprkkr.asr.formalpolarization.get_electronic_polarization_phase", "auto/ase2sprkkr.asr.formalpolarization.get_wavefunctions", "auto/ase2sprkkr.asr.gs", "auto/ase2sprkkr.asr.gs.GapsResult", "auto/ase2sprkkr.asr.gs.Result", "auto/ase2sprkkr.asr.gs.VacuumLevelResults", "auto/ase2sprkkr.asr.gs.bz_with_band_extremums", "auto/ase2sprkkr.asr.gs.evacdiff", "auto/ase2sprkkr.asr.gs.gaps", "auto/ase2sprkkr.asr.gs.get_1bz_k", "auto/ase2sprkkr.asr.gs.get_gap_info", "auto/ase2sprkkr.asr.gs.vacuumlevels", "auto/ase2sprkkr.asr.gs.webpanel", "auto/ase2sprkkr.asr.gw", "auto/ase2sprkkr.asr.gw.Result", "auto/ase2sprkkr.asr.gw.bs_gw", "auto/ase2sprkkr.asr.gw.get_kpts_size", "auto/ase2sprkkr.asr.gw.webpanel", "auto/ase2sprkkr.asr.hse", "auto/ase2sprkkr.asr.hse.MP_interpolate", "auto/ase2sprkkr.asr.hse.Result", "auto/ase2sprkkr.asr.hse.bs_hse", "auto/ase2sprkkr.asr.hse.get_kpts_size", "auto/ase2sprkkr.asr.hse.hse", "auto/ase2sprkkr.asr.hse.hse_spinorbit", "auto/ase2sprkkr.asr.hse.webpanel", "auto/ase2sprkkr.asr.infraredpolarizability", "auto/ase2sprkkr.asr.infraredpolarizability.Result", "auto/ase2sprkkr.asr.infraredpolarizability.create_plot", "auto/ase2sprkkr.asr.infraredpolarizability.get_phonon_pol", "auto/ase2sprkkr.asr.infraredpolarizability.webpanel", "auto/ase2sprkkr.asr.magnetic_anisotropy", "auto/ase2sprkkr.asr.magnetic_anisotropy.Result", "auto/ase2sprkkr.asr.magnetic_anisotropy.get_spin_axis", "auto/ase2sprkkr.asr.magnetic_anisotropy.get_spin_index", "auto/ase2sprkkr.asr.magnetic_anisotropy.spin_axis", "auto/ase2sprkkr.asr.magnetic_anisotropy.webpanel", "auto/ase2sprkkr.asr.magstate", "auto/ase2sprkkr.asr.magstate.Result", "auto/ase2sprkkr.asr.magstate.get_magstate", "auto/ase2sprkkr.asr.magstate.webpanel", "auto/ase2sprkkr.asr.pdos", "auto/ase2sprkkr.asr.pdos.Result", "auto/ase2sprkkr.asr.pdos.calculate_pdos", "auto/ase2sprkkr.asr.pdos.get_l_a", "auto/ase2sprkkr.asr.pdos.get_ordered_syl_dict", "auto/ase2sprkkr.asr.pdos.get_yl_colors", "auto/ase2sprkkr.asr.pdos.pdos", "auto/ase2sprkkr.asr.pdos.plot_pdos", "auto/ase2sprkkr.asr.pdos.plot_pdos_nosoc", "auto/ase2sprkkr.asr.pdos.plot_pdos_soc", "auto/ase2sprkkr.asr.pdos.webpanel", "auto/ase2sprkkr.asr.phonons", "auto/ase2sprkkr.asr.phonons.Result", "auto/ase2sprkkr.asr.phonons.creates", "auto/ase2sprkkr.asr.phonons.mingocorrection", "auto/ase2sprkkr.asr.phonons.plot_bandstructure", "auto/ase2sprkkr.asr.phonons.plot_phonons", "auto/ase2sprkkr.asr.phonons.requires", "auto/ase2sprkkr.asr.phonons.todict", "auto/ase2sprkkr.asr.phonons.topckl", "auto/ase2sprkkr.asr.phonons.webpanel", "auto/ase2sprkkr.asr.phonopy", "auto/ase2sprkkr.asr.phonopy.Result", "auto/ase2sprkkr.asr.phonopy.distance_to_sc", "auto/ase2sprkkr.asr.phonopy.lattice_vectors", "auto/ase2sprkkr.asr.phonopy.plot_bandstructure", "auto/ase2sprkkr.asr.phonopy.plot_phonons", "auto/ase2sprkkr.asr.phonopy.requires", "auto/ase2sprkkr.asr.phonopy.webpanel", "auto/ase2sprkkr.asr.piezoelectrictensor", "auto/ase2sprkkr.asr.piezoelectrictensor.Result", "auto/ase2sprkkr.asr.piezoelectrictensor.webpanel", "auto/ase2sprkkr.asr.plasmafrequency", "auto/ase2sprkkr.asr.plasmafrequency.Result", "auto/ase2sprkkr.asr.plasmafrequency.get_kpts_size", "auto/ase2sprkkr.asr.plasmafrequency.webpanel", "auto/ase2sprkkr.asr.polarizability", "auto/ase2sprkkr.asr.polarizability.Result", "auto/ase2sprkkr.asr.polarizability.get_kpts_size", "auto/ase2sprkkr.asr.polarizability.polarizability", "auto/ase2sprkkr.asr.polarizability.webpanel", "auto/ase2sprkkr.asr.projected_bandstructure", "auto/ase2sprkkr.asr.projected_bandstructure.Result", "auto/ase2sprkkr.asr.projected_bandstructure.get_bs_sampling", "auto/ase2sprkkr.asr.projected_bandstructure.get_orbital_ldos", "auto/ase2sprkkr.asr.projected_bandstructure.get_pie_markers", "auto/ase2sprkkr.asr.projected_bandstructure.get_pie_slice", "auto/ase2sprkkr.asr.projected_bandstructure.get_yl_ordering", "auto/ase2sprkkr.asr.projected_bandstructure.projected_bs_pbe", "auto/ase2sprkkr.asr.projected_bandstructure.webpanel", "auto/ase2sprkkr.asr.push", "auto/ase2sprkkr.asr.raman", "auto/ase2sprkkr.asr.raman.Result", "auto/ase2sprkkr.asr.raman.count_deg", "auto/ase2sprkkr.asr.raman.raman", "auto/ase2sprkkr.asr.raman.webpanel", "auto/ase2sprkkr.asr.relax", "auto/ase2sprkkr.asr.relax.BrokenSymmetryError", "auto/ase2sprkkr.asr.relax.Result", "auto/ase2sprkkr.asr.relax.SpgAtoms", "auto/ase2sprkkr.asr.relax.is_relax_done", "auto/ase2sprkkr.asr.relax.myBFGS", "auto/ase2sprkkr.asr.relax.relax", "auto/ase2sprkkr.asr.relax.set_initial_magnetic_moments", "auto/ase2sprkkr.asr.setinfo", "auto/ase2sprkkr.asr.setinfo.KeyValuePair", "auto/ase2sprkkr.asr.setinfo.check_key_value", "auto/ase2sprkkr.asr.setup", "auto/ase2sprkkr.asr.setup.decorate", "auto/ase2sprkkr.asr.setup.decorate.apply_substitution", "auto/ase2sprkkr.asr.setup.decorate.find_substitutions", "auto/ase2sprkkr.asr.setup.decorate.generate_structures", "auto/ase2sprkkr.asr.setup.decorate.get_p_ab", "auto/ase2sprkkr.asr.setup.defects", "auto/ase2sprkkr.asr.setup.defects.collect_data", "auto/ase2sprkkr.asr.setup.defects.create_folder_structure", "auto/ase2sprkkr.asr.setup.defects.setup_defects", "auto/ase2sprkkr.asr.setup.defects.setup_supercell", "auto/ase2sprkkr.asr.setup.displacements", "auto/ase2sprkkr.asr.setup.displacements.create_displacements_folder", "auto/ase2sprkkr.asr.setup.displacements.displace_atom", "auto/ase2sprkkr.asr.setup.displacements.get_all_displacements", "auto/ase2sprkkr.asr.setup.displacements.get_displacement_folder", "auto/ase2sprkkr.asr.setup.magnetize", "auto/ase2sprkkr.asr.setup.materials", "auto/ase2sprkkr.asr.setup.params", "auto/ase2sprkkr.asr.setup.scanparams", "auto/ase2sprkkr.asr.setup.strains", "auto/ase2sprkkr.asr.setup.strains.get_relevant_strains", "auto/ase2sprkkr.asr.setup.strains.get_strained_folder_name", "auto/ase2sprkkr.asr.setup.strains.setup_strains", "auto/ase2sprkkr.asr.setup.symmetrize", "auto/ase2sprkkr.asr.setup.symmetrize.symmetrize_atoms", "auto/ase2sprkkr.asr.stiffness", "auto/ase2sprkkr.asr.stiffness.Result", "auto/ase2sprkkr.asr.stiffness.webpanel", "auto/ase2sprkkr.asr.structureinfo", "auto/ase2sprkkr.asr.structureinfo.Result", "auto/ase2sprkkr.asr.structureinfo.get_reduced_formula", "auto/ase2sprkkr.asr.structureinfo.webpanel", "auto/ase2sprkkr.asr.test", "auto/ase2sprkkr.asr.test.acceptance", "auto/ase2sprkkr.asr.test.acceptance.test_borncharges", "auto/ase2sprkkr.asr.test.acceptance.test_borncharges.test_gpaw_berry_get_berry_phases_integration", "auto/ase2sprkkr.asr.test.acceptance.test_piezoelectrictensor", "auto/ase2sprkkr.asr.test.acceptance.test_piezoelectrictensor.test_piezo_BN", "auto/ase2sprkkr.asr.test.acceptance.test_relax", "auto/ase2sprkkr.asr.test.acceptance.test_relax.test_relax_fe_gpaw", "auto/ase2sprkkr.asr.test.conftest", "auto/ase2sprkkr.asr.test.conftest.pytest_configure", "auto/ase2sprkkr.asr.test.conftest.pytest_sessionstart", "auto/ase2sprkkr.asr.test.fixtures", "auto/ase2sprkkr.asr.test.fixtures._get_webcontent", "auto/ase2sprkkr.asr.test.fixtures.asr_tmpdir", "auto/ase2sprkkr.asr.test.fixtures.asr_tmpdir_w_params", "auto/ase2sprkkr.asr.test.fixtures.duplicates_test_db", "auto/ase2sprkkr.asr.test.fixtures.get_webcontent", "auto/ase2sprkkr.asr.test.fixtures.mockgpaw", "auto/ase2sprkkr.asr.test.fixtures.set_asr_test_environ_variable", "auto/ase2sprkkr.asr.test.fixtures.test_material", "auto/ase2sprkkr.asr.test.materials", "auto/ase2sprkkr.asr.test.mocks", "auto/ase2sprkkr.asr.test.mocks.gpaw", "auto/ase2sprkkr.asr.test.mocks.gpaw.berryphase", "auto/ase2sprkkr.asr.test.mocks.gpaw.berryphase.get_berry_phases", "auto/ase2sprkkr.asr.test.mocks.gpaw.calculator", "auto/ase2sprkkr.asr.test.mocks.gpaw.calculator.ASRCalculator", "auto/ase2sprkkr.asr.test.mocks.gpaw.calculator.DOSCalculator", "auto/ase2sprkkr.asr.test.mocks.gpaw.calculator.Occupations", "auto/ase2sprkkr.asr.test.mocks.gpaw.calculator.Parameters", "auto/ase2sprkkr.asr.test.mocks.gpaw.calculator.Setups", "auto/ase2sprkkr.asr.test.mocks.gpaw.calculator.WaveFunctions", "auto/ase2sprkkr.asr.test.mocks.gpaw.hybrids", "auto/ase2sprkkr.asr.test.mocks.gpaw.hybrids.eigenvalues", "auto/ase2sprkkr.asr.test.mocks.gpaw.kpt_descriptor", "auto/ase2sprkkr.asr.test.mocks.gpaw.kpt_descriptor.kpts2sizeandoffsets", "auto/ase2sprkkr.asr.test.mocks.gpaw.kpt_descriptor.to1bz", "auto/ase2sprkkr.asr.test.mocks.gpaw.mpi", "auto/ase2sprkkr.asr.test.mocks.gpaw.mpi.barrier", "auto/ase2sprkkr.asr.test.mocks.gpaw.mpi.broadcast", "auto/ase2sprkkr.asr.test.mocks.gpaw.mpi.new_communicator", "auto/ase2sprkkr.asr.test.mocks.gpaw.mpi.world_sum", "auto/ase2sprkkr.asr.test.mocks.gpaw.occupations", "auto/ase2sprkkr.asr.test.mocks.gpaw.occupations.FermiDirac", "auto/ase2sprkkr.asr.test.mocks.gpaw.occupations.create_occ_calc", "auto/ase2sprkkr.asr.test.mocks.gpaw.response", "auto/ase2sprkkr.asr.test.mocks.gpaw.response.bse", "auto/ase2sprkkr.asr.test.mocks.gpaw.response.bse.BSE", "auto/ase2sprkkr.asr.test.mocks.gpaw.response.df", "auto/ase2sprkkr.asr.test.mocks.gpaw.response.df.DielectricFunction", "auto/ase2sprkkr.asr.test.mocks.gpaw.response.g0w0", "auto/ase2sprkkr.asr.test.mocks.gpaw.response.g0w0.G0W0", "auto/ase2sprkkr.asr.test.mocks.gpaw.spinorbit", "auto/ase2sprkkr.asr.test.mocks.gpaw.spinorbit.SOC", "auto/ase2sprkkr.asr.test.mocks.gpaw.spinorbit.soc_eigenstates", "auto/ase2sprkkr.asr.test.mocks.gpaw.symmetry", "auto/ase2sprkkr.asr.test.mocks.gpaw.symmetry.Symmetry", "auto/ase2sprkkr.asr.test.mocks.gpaw.utilities", "auto/ase2sprkkr.asr.test.mocks.gpaw.utilities.dos", "auto/ase2sprkkr.asr.test.mocks.gpaw.utilities.dos.raw_orbital_LDOS", "auto/ase2sprkkr.asr.test.mocks.gpaw.utilities.ibz2bz", "auto/ase2sprkkr.asr.test.mocks.gpaw.utilities.ibz2bz.ibz2bz", "auto/ase2sprkkr.asr.test.mocks.gpaw.utilities.progressbar", "auto/ase2sprkkr.asr.test.mocks.gpaw.utilities.progressbar.ProgressBar", "auto/ase2sprkkr.asr.test.mocks.gpaw.xc", "auto/ase2sprkkr.asr.test.mocks.gpaw.xc.exx", "auto/ase2sprkkr.asr.test.mocks.gpaw.xc.tools", "auto/ase2sprkkr.asr.test.test_bandstructure", "auto/ase2sprkkr.asr.test.test_bandstructure.test_bandstructure_main", "auto/ase2sprkkr.asr.test.test_berry", "auto/ase2sprkkr.asr.test.test_berry.test_berry", "auto/ase2sprkkr.asr.test.test_berry.test_berry_nontrivial", "auto/ase2sprkkr.asr.test.test_borncharges", "auto/ase2sprkkr.asr.test.test_borncharges.test_borncharges", "auto/ase2sprkkr.asr.test.test_bse", "auto/ase2sprkkr.asr.test.test_bse.test_bse", "auto/ase2sprkkr.asr.test.test_cli", "auto/ase2sprkkr.asr.test.test_cli.test_asr", "auto/ase2sprkkr.asr.test.test_cli.test_asr_find", "auto/ase2sprkkr.asr.test.test_cli.test_asr_find_help", "auto/ase2sprkkr.asr.test.test_cli.test_asr_find_no_versions", "auto/ase2sprkkr.asr.test.test_cli.test_asr_list", "auto/ase2sprkkr.asr.test.test_cli.test_asr_results_bandstructure", "auto/ase2sprkkr.asr.test.test_cli.test_asr_results_help", "auto/ase2sprkkr.asr.test.test_cli.test_asr_run", "auto/ase2sprkkr.asr.test.test_convex_hull", "auto/ase2sprkkr.asr.test.test_convex_hull.test_convex_hull", "auto/ase2sprkkr.asr.test.test_core", "auto/ase2sprkkr.asr.test.test_core.recipe", "auto/ase2sprkkr.asr.test.test_core.test_core", "auto/ase2sprkkr.asr.test.test_core.test_recipe_defaults", "auto/ase2sprkkr.asr.test.test_core.test_recipe_setting_new_defaults", "auto/ase2sprkkr.asr.test.test_core.test_recipe_setting_overriding_defaults", "auto/ase2sprkkr.asr.test.test_core_material", "auto/ase2sprkkr.asr.test.test_core_material.test_asr_cli_results_figures_gs", "auto/ase2sprkkr.asr.test.test_core_results", "auto/ase2sprkkr.asr.test.test_core_results.MyResult", "auto/ase2sprkkr.asr.test.test_core_results.MyResultVer0", "auto/ase2sprkkr.asr.test.test_core_results.MyWebPanel", "auto/ase2sprkkr.asr.test.test_core_results.test_read_old_format", "auto/ase2sprkkr.asr.test.test_core_results.test_reading_older_version", "auto/ase2sprkkr.asr.test.test_core_results.test_reading_result", "auto/ase2sprkkr.asr.test.test_core_results.test_results_object", "auto/ase2sprkkr.asr.test.test_database_duplicates", "auto/ase2sprkkr.asr.test.test_database_duplicates.test_database_duplicates", "auto/ase2sprkkr.asr.test.test_database_duplicates.test_database_duplicates_filter_magstate", "auto/ase2sprkkr.asr.test.test_database_duplicates.test_database_duplicates_no_duplicates", "auto/ase2sprkkr.asr.test.test_database_fromtree", "auto/ase2sprkkr.asr.test.test_database_fromtree.folder_tree", "auto/ase2sprkkr.asr.test.test_database_fromtree.make_tree", "auto/ase2sprkkr.asr.test.test_database_fromtree.test_database_fromtree_raises_when_missing_uids", "auto/ase2sprkkr.asr.test.test_database_fromtree.test_database_fromtree_totree", "auto/ase2sprkkr.asr.test.test_database_fromtree.test_database_fromtree_works_without_write_permission", "auto/ase2sprkkr.asr.test.test_database_rmsd", "auto/ase2sprkkr.asr.test.test_database_rmsd.rattle_atoms", "auto/ase2sprkkr.asr.test.test_database_rmsd.test_database_rmsd_duplicates", "auto/ase2sprkkr.asr.test.test_database_rmsd.test_database_rmsd_duplicates_comparison_keys", "auto/ase2sprkkr.asr.test.test_database_rmsd.test_database_rmsd_move_one_atom", "auto/ase2sprkkr.asr.test.test_database_rmsd.test_database_rmsd_none_handling", "auto/ase2sprkkr.asr.test.test_database_rmsd.test_database_rmsd_not_equal", "auto/ase2sprkkr.asr.test.test_database_rmsd.test_database_rmsd_rattled", "auto/ase2sprkkr.asr.test.test_database_rmsd.test_database_rmsd_rotation", "auto/ase2sprkkr.asr.test.test_database_totree", "auto/ase2sprkkr.asr.test.test_database_totree.make_test_db", "auto/ase2sprkkr.asr.test.test_database_totree.test_database_totree", "auto/ase2sprkkr.asr.test.test_database_totree.test_database_totree_files_and_hard_links", "auto/ase2sprkkr.asr.test.test_dimensionality", "auto/ase2sprkkr.asr.test.test_dimensionality.test_dimensionality", "auto/ase2sprkkr.asr.test.test_dimensionality.test_dimensionality_cli", "auto/ase2sprkkr.asr.test.test_emasses", "auto/ase2sprkkr.asr.test.test_emasses._get_all_eigenvalues", "auto/ase2sprkkr.asr.test.test_emasses.resultstest", "auto/ase2sprkkr.asr.test.test_emasses.test_emasses_freelectron", "auto/ase2sprkkr.asr.test.test_emasses.test_emasses_indirect", "auto/ase2sprkkr.asr.test.test_fixtures", "auto/ase2sprkkr.asr.test.test_fixtures.test_env_variables", "auto/ase2sprkkr.asr.test.test_formalpolarization", "auto/ase2sprkkr.asr.test.test_formalpolarization.test_formalpolarization", "auto/ase2sprkkr.asr.test.test_formalpolarization.test_formalpolarization_test_atoms_too_close_to_boundary", "auto/ase2sprkkr.asr.test.test_gs", "auto/ase2sprkkr.asr.test.test_gs.test_gs", "auto/ase2sprkkr.asr.test.test_gs.test_gs_asr_cli_results_figures", "auto/ase2sprkkr.asr.test.test_gs.test_gs_integration_gpaw", "auto/ase2sprkkr.asr.test.test_gw", "auto/ase2sprkkr.asr.test.test_gw.test_gw", "auto/ase2sprkkr.asr.test.test_hse", "auto/ase2sprkkr.asr.test.test_hse.test_hse", "auto/ase2sprkkr.asr.test.test_pdos", "auto/ase2sprkkr.asr.test.test_pdos.test_pdos", "auto/ase2sprkkr.asr.test.test_pdos.test_pdos_full", "auto/ase2sprkkr.asr.test.test_phonons", "auto/ase2sprkkr.asr.test.test_phonons.test_phonons", "auto/ase2sprkkr.asr.test.test_phonopy", "auto/ase2sprkkr.asr.test.test_phonopy.test_phonopy", "auto/ase2sprkkr.asr.test.test_piezoelectrictensor", "auto/ase2sprkkr.asr.test.test_piezoelectrictensor.get_strain_from_atoms", "auto/ase2sprkkr.asr.test.test_piezoelectrictensor.test_piezoelectrictensor", "auto/ase2sprkkr.asr.test.test_piezoelectrictensor.zero_pad_non_pbc_strain_directions", "auto/ase2sprkkr.asr.test.test_plasmafrequency", "auto/ase2sprkkr.asr.test.test_plasmafrequency.test_plasmafrequency", "auto/ase2sprkkr.asr.test.test_polarizability", "auto/ase2sprkkr.asr.test.test_polarizability.test_polarizability", "auto/ase2sprkkr.asr.test.test_projected_bandstructure", "auto/ase2sprkkr.asr.test.test_projected_bandstructure.test_projected_bs_mocked", "auto/ase2sprkkr.asr.test.test_raman", "auto/ase2sprkkr.asr.test.test_raman.test_raman", "auto/ase2sprkkr.asr.test.test_relax", "auto/ase2sprkkr.asr.test.test_relax.test_relax_basic", "auto/ase2sprkkr.asr.test.test_relax.test_relax_bn_gpaw", "auto/ase2sprkkr.asr.test.test_relax.test_relax_emt", "auto/ase2sprkkr.asr.test.test_relax.test_relax_emt_fail_broken_symmetry", "auto/ase2sprkkr.asr.test.test_relax.test_relax_find_higher_symmetry", "auto/ase2sprkkr.asr.test.test_relax.test_relax_magmoms", "auto/ase2sprkkr.asr.test.test_relax.test_relax_si_gpaw", "auto/ase2sprkkr.asr.test.test_setinfo", "auto/ase2sprkkr.asr.test.test_setinfo.test_info", "auto/ase2sprkkr.asr.test.test_setinfo.test_info_call_from_cli", "auto/ase2sprkkr.asr.test.test_setinfo.test_info_raises_with_protected_key", "auto/ase2sprkkr.asr.test.test_setup_decorate", "auto/ase2sprkkr.asr.test.test_setup_decorate.test_setup_decorate_si", "auto/ase2sprkkr.asr.test.test_setup_displacements", "auto/ase2sprkkr.asr.test.test_setup_displacements.test_setup_displacements", "auto/ase2sprkkr.asr.test.test_setup_displacements.test_setup_displacements_displace_atom", "auto/ase2sprkkr.asr.test.test_setup_displacements.test_setup_displacements_get_all_displacements", "auto/ase2sprkkr.asr.test.test_setup_magnetize", "auto/ase2sprkkr.asr.test.test_setup_magnetize.test_setup_magnetize", "auto/ase2sprkkr.asr.test.test_setup_magnetize.test_setup_magnetize_state_inputs", "auto/ase2sprkkr.asr.test.test_setup_materials", "auto/ase2sprkkr.asr.test.test_setup_materials.test_setup_magnetize", "auto/ase2sprkkr.asr.test.test_setup_scanparams", "auto/ase2sprkkr.asr.test.test_setup_scanparams.test_setup_params", "auto/ase2sprkkr.asr.test.test_setup_strains", "auto/ase2sprkkr.asr.test.test_setup_strains.test_setup_strains", "auto/ase2sprkkr.asr.test.test_setup_strains.test_setup_strains_get_relevant_strains", "auto/ase2sprkkr.asr.test.test_setup_symmetrize", "auto/ase2sprkkr.asr.test.test_setup_symmetrize.test_setup_symmetrize", "auto/ase2sprkkr.asr.test.test_stiffness", "auto/ase2sprkkr.asr.test.test_stiffness.test_stiffness_emt", "auto/ase2sprkkr.asr.test.test_stiffness.test_stiffness_gpaw", "auto/ase2sprkkr.asr.utils", "auto/ase2sprkkr.asr.utils.args", "auto/ase2sprkkr.asr.utils.args.parse_arg", "auto/ase2sprkkr.asr.utils.calculator_utils", "auto/ase2sprkkr.asr.utils.calculator_utils.fermi_level", "auto/ase2sprkkr.asr.utils.calculator_utils.get_eigenvalues", "auto/ase2sprkkr.asr.utils.gpw2eigs", "auto/ase2sprkkr.asr.utils.gpw2eigs.calc2eigs", "auto/ase2sprkkr.asr.utils.gpw2eigs.gpw2eigs", "auto/ase2sprkkr.asr.utils.kpts", "auto/ase2sprkkr.asr.utils.kpts.get_kpts_size", "auto/ase2sprkkr.asr.utils.magnetism", "auto/ase2sprkkr.asr.utils.magnetism.is_magnetic", "auto/ase2sprkkr.asr.utils.magnetism.magnetic_atoms", "auto/ase2sprkkr.asr.utils.refinegs", "auto/ase2sprkkr.asr.utils.refinegs.get_filenames", "auto/ase2sprkkr.asr.utils.refinegs.get_parstr", "auto/ase2sprkkr.asr.utils.refinegs.nonselfc", "auto/ase2sprkkr.asr.utils.refinegs.refinegs", "auto/ase2sprkkr.asr.utils.something", "auto/ase2sprkkr.asr.utils.something.calculate_something", "auto/ase2sprkkr.asr.utils.something.collect_data", "auto/ase2sprkkr.asr.utils.something.create_plot", "auto/ase2sprkkr.asr.utils.something.webpanel", "auto/ase2sprkkr.asr.utils.symmetry", "auto/ase2sprkkr.asr.utils.symmetry._atoms2symmetry_gpaw", "auto/ase2sprkkr.asr.utils.symmetry.atoms2spgcell", "auto/ase2sprkkr.asr.utils.symmetry.atoms2symmetry", "auto/ase2sprkkr.asr.utils.symmetry.has_inversion", "auto/ase2sprkkr.asr.utils.symmetry.restrict_spin_projection_2d", "auto/ase2sprkkr.asr.utils.utils", "auto/ase2sprkkr.asr.utils.utils.timed_print", "auto/ase2sprkkr.asr.workflow", "auto/ase2sprkkr.bindings", "auto/ase2sprkkr.bindings.empty_spheres", "auto/ase2sprkkr.bindings.empty_spheres.EmptySpheresResult", "auto/ase2sprkkr.bindings.empty_spheres.add_empty_spheres", "auto/ase2sprkkr.bindings.empty_spheres.empty_spheres", "auto/ase2sprkkr.bindings.empty_spheres.empty_spheres_atoms", "auto/ase2sprkkr.bindings.es_finder", "auto/ase2sprkkr.bindings.es_finder.empty_spheres", "auto/ase2sprkkr.bindings.nomad", "auto/ase2sprkkr.bindings.nomad.nomad", "auto/ase2sprkkr.bindings.nomad.nomad.ExternalEntry", "auto/ase2sprkkr.bindings.nomad.nomad.NomadArchive", "auto/ase2sprkkr.bindings.nomad.nomad.NomadEntry", "auto/ase2sprkkr.bindings.nomad.nomad.map_io_to_nomad", "auto/ase2sprkkr.bindings.nomad.nomad_api", "auto/ase2sprkkr.bindings.nomad.nomad_api.NomadApi", "auto/ase2sprkkr.bindings.nomad.nomad_api.with_token", "auto/ase2sprkkr.bindings.spglib", "auto/ase2sprkkr.bindings.spglib.SpacegroupInfo", "auto/ase2sprkkr.bindings.spglib.possibly_equivalent_sites", "auto/ase2sprkkr.bindings.spglib.spglib_dataset", "auto/ase2sprkkr.bindings.tests", "auto/ase2sprkkr.bindings.tests.init_tests", "auto/ase2sprkkr.bindings.tests.init_tests.TestCase", "auto/ase2sprkkr.bindings.tests.init_tests.arr_testfce", "auto/ase2sprkkr.bindings.tests.init_tests.assertDictEqual", "auto/ase2sprkkr.bindings.tests.init_tests.assertListEqual", "auto/ase2sprkkr.bindings.tests.init_tests.assert_almost_equals", "auto/ase2sprkkr.bindings.tests.init_tests.assert_equals", "auto/ase2sprkkr.bindings.tests.init_tests.extdict", "auto/ase2sprkkr.bindings.tests.init_tests.testfce", "auto/ase2sprkkr.bindings.tests.test_es_finder", "auto/ase2sprkkr.bindings.tests.test_es_finder.TestEsFinder", "auto/ase2sprkkr.bindings.tests.test_spglib", "auto/ase2sprkkr.bindings.tests.test_spglib.TestSpgilib", "auto/ase2sprkkr.bindings.xband", "auto/ase2sprkkr.bindings.xband.spheres", "auto/ase2sprkkr.bindings.xband.symmetry", "auto/ase2sprkkr.bindings.xband.tests", "auto/ase2sprkkr.bindings.xband.tests.init_tests", "auto/ase2sprkkr.bindings.xband.tests.init_tests.TestCase", "auto/ase2sprkkr.bindings.xband.tests.init_tests.arr_testfce", "auto/ase2sprkkr.bindings.xband.tests.init_tests.assertDictEqual", "auto/ase2sprkkr.bindings.xband.tests.init_tests.assertListEqual", "auto/ase2sprkkr.bindings.xband.tests.init_tests.assert_almost_equals", "auto/ase2sprkkr.bindings.xband.tests.init_tests.assert_equals", "auto/ase2sprkkr.bindings.xband.tests.init_tests.extdict", "auto/ase2sprkkr.bindings.xband.tests.init_tests.patch_package", "auto/ase2sprkkr.bindings.xband.tests.init_tests.testfce", "auto/ase2sprkkr.bindings.xband.tests.test_spheres", "auto/ase2sprkkr.bindings.xband.tests.test_spheres.TestSpheres", "auto/ase2sprkkr.common", "auto/ase2sprkkr.common.alternative_types", "auto/ase2sprkkr.common.alternative_types.allowed_types", "auto/ase2sprkkr.common.alternative_types.normalize_type", "auto/ase2sprkkr.common.alternative_types.normalize_type_map", "auto/ase2sprkkr.common.alternative_types.numpy_types", "auto/ase2sprkkr.common.alternative_types.types_alternatives", "auto/ase2sprkkr.common.backward_compatibility", "auto/ase2sprkkr.common.configuration", "auto/ase2sprkkr.common.configuration.Configuration", "auto/ase2sprkkr.common.configuration_containers", "auto/ase2sprkkr.common.configuration_containers.BaseConfigurationContainer", "auto/ase2sprkkr.common.configuration_containers.BaseSection", "auto/ase2sprkkr.common.configuration_containers.ConfigurationContainer", "auto/ase2sprkkr.common.configuration_containers.CustomSection", "auto/ase2sprkkr.common.configuration_containers.DisabledAttributeError", "auto/ase2sprkkr.common.configuration_containers.RootConfigurationContainer", "auto/ase2sprkkr.common.configuration_containers.Section", "auto/ase2sprkkr.common.configuration_definitions", "auto/ase2sprkkr.common.configuration_definitions.BaseDefinition", "auto/ase2sprkkr.common.configuration_definitions.ControlDefinition", "auto/ase2sprkkr.common.configuration_definitions.Gather", "auto/ase2sprkkr.common.configuration_definitions.Ignored", "auto/ase2sprkkr.common.configuration_definitions.NotAllowed", "auto/ase2sprkkr.common.configuration_definitions.RealItemDefinition", "auto/ase2sprkkr.common.configuration_definitions.SeparatorDefinition", "auto/ase2sprkkr.common.configuration_definitions.Stub", "auto/ase2sprkkr.common.configuration_definitions.Switch", "auto/ase2sprkkr.common.configuration_definitions.VirtualDefinition", "auto/ase2sprkkr.common.configuration_definitions.gather", "auto/ase2sprkkr.common.configuration_definitions.if_defined", "auto/ase2sprkkr.common.configuration_definitions.if_not_defined", "auto/ase2sprkkr.common.configuration_definitions.switch", "auto/ase2sprkkr.common.container_definitions", "auto/ase2sprkkr.common.container_definitions.ConfigurationRootDefinition", "auto/ase2sprkkr.common.container_definitions.ContainerDefinition", "auto/ase2sprkkr.common.container_definitions.SectionDefinition", "auto/ase2sprkkr.common.debug", "auto/ase2sprkkr.common.debug.add_debug_hook", "auto/ase2sprkkr.common.debug.debug_pyparsing", "auto/ase2sprkkr.common.decorators", "auto/ase2sprkkr.common.decorators.add_called_class_as_argument", "auto/ase2sprkkr.common.decorators.add_to_signature", "auto/ase2sprkkr.common.decorators.cached_class_property", "auto/ase2sprkkr.common.decorators.cached_property", "auto/ase2sprkkr.common.decorators.class_property", "auto/ase2sprkkr.common.decorators.maybeclassmethod", "auto/ase2sprkkr.common.decorators.std_cached_property", "auto/ase2sprkkr.common.decorators.warnings_from_here", "auto/ase2sprkkr.common.directory", "auto/ase2sprkkr.common.directory.Directory", "auto/ase2sprkkr.common.doc", "auto/ase2sprkkr.common.doc.process_input_parameters_definition", "auto/ase2sprkkr.common.doc.verbatim", "auto/ase2sprkkr.common.formats", "auto/ase2sprkkr.common.formats.format_for_string", "auto/ase2sprkkr.common.formats.fortran_format", "auto/ase2sprkkr.common.formats.full_format_for_string", "auto/ase2sprkkr.common.generated_configuration_definitions", "auto/ase2sprkkr.common.generated_configuration_definitions.BaseGeneratedValueDefinition", "auto/ase2sprkkr.common.generated_configuration_definitions.GeneratedValueDefinition", "auto/ase2sprkkr.common.generated_configuration_definitions.Length", "auto/ase2sprkkr.common.generated_configuration_definitions.NumpyViewDefinition", "auto/ase2sprkkr.common.grammar", "auto/ase2sprkkr.common.grammar.SkipToRegex", "auto/ase2sprkkr.common.grammar.White", "auto/ase2sprkkr.common.grammar.addConditionEx", "auto/ase2sprkkr.common.grammar.addParseActionEx", "auto/ase2sprkkr.common.grammar.delimitedList", "auto/ase2sprkkr.common.grammar.end_of_file", "auto/ase2sprkkr.common.grammar.generate_grammar", "auto/ase2sprkkr.common.grammar.line_end", "auto/ase2sprkkr.common.grammar.optional_line_end", "auto/ase2sprkkr.common.grammar.optional_quote", "auto/ase2sprkkr.common.grammar.replace_whitechars", "auto/ase2sprkkr.common.grammar.separator_grammar", "auto/ase2sprkkr.common.grammar.separator_pattern", "auto/ase2sprkkr.common.grammar_types", "auto/ase2sprkkr.common.grammar_types.arrays", "auto/ase2sprkkr.common.grammar_types.arrays.Array", "auto/ase2sprkkr.common.grammar_types.arrays.Complex", "auto/ase2sprkkr.common.grammar_types.arrays.Sequence", "auto/ase2sprkkr.common.grammar_types.arrays.SetOf", "auto/ase2sprkkr.common.grammar_types.arrays.SpecialColumn", "auto/ase2sprkkr.common.grammar_types.arrays.Table", "auto/ase2sprkkr.common.grammar_types.arrays.complex_number", "auto/ase2sprkkr.common.grammar_types.arrays.set_of_integers", "auto/ase2sprkkr.common.grammar_types.arrays.set_of_reals", "auto/ase2sprkkr.common.grammar_types.basic", "auto/ase2sprkkr.common.grammar_types.basic.BaseBool", "auto/ase2sprkkr.common.grammar_types.basic.BaseRealWithUnits", "auto/ase2sprkkr.common.grammar_types.basic.BaseString", "auto/ase2sprkkr.common.grammar_types.basic.BasicSeparator", "auto/ase2sprkkr.common.grammar_types.basic.BlankSeparator", "auto/ase2sprkkr.common.grammar_types.basic.Bool", "auto/ase2sprkkr.common.grammar_types.basic.Date", "auto/ase2sprkkr.common.grammar_types.basic.DefKeyword", "auto/ase2sprkkr.common.grammar_types.basic.Energy", "auto/ase2sprkkr.common.grammar_types.basic.FixedPointNumber", "auto/ase2sprkkr.common.grammar_types.basic.Flag", "auto/ase2sprkkr.common.grammar_types.basic.IntBool", "auto/ase2sprkkr.common.grammar_types.basic.Integer", "auto/ase2sprkkr.common.grammar_types.basic.Keyword", "auto/ase2sprkkr.common.grammar_types.basic.LineString", "auto/ase2sprkkr.common.grammar_types.basic.Number", "auto/ase2sprkkr.common.grammar_types.basic.ObjectNumber", "auto/ase2sprkkr.common.grammar_types.basic.QString", "auto/ase2sprkkr.common.grammar_types.basic.Real", "auto/ase2sprkkr.common.grammar_types.basic.RealWithUnits", "auto/ase2sprkkr.common.grammar_types.basic.Separator", "auto/ase2sprkkr.common.grammar_types.basic.String", "auto/ase2sprkkr.common.grammar_types.basic.Unsigned", "auto/ase2sprkkr.common.grammar_types.basic.boolean", "auto/ase2sprkkr.common.grammar_types.basic.date", "auto/ase2sprkkr.common.grammar_types.basic.energy", "auto/ase2sprkkr.common.grammar_types.basic.flag", "auto/ase2sprkkr.common.grammar_types.basic.int_bool", "auto/ase2sprkkr.common.grammar_types.basic.integer", "auto/ase2sprkkr.common.grammar_types.basic.line_string", "auto/ase2sprkkr.common.grammar_types.basic.qstring", "auto/ase2sprkkr.common.grammar_types.basic.real", "auto/ase2sprkkr.common.grammar_types.basic.separator", "auto/ase2sprkkr.common.grammar_types.basic.string", "auto/ase2sprkkr.common.grammar_types.basic.unsigned", "auto/ase2sprkkr.common.grammar_types.data", "auto/ase2sprkkr.common.grammar_types.data.NumpyArray", "auto/ase2sprkkr.common.grammar_types.data.Prefixed", "auto/ase2sprkkr.common.grammar_types.data.RawData", "auto/ase2sprkkr.common.grammar_types.data.RestOfTheFile", "auto/ase2sprkkr.common.grammar_types.grammar_type", "auto/ase2sprkkr.common.grammar_types.grammar_type.GrammarType", "auto/ase2sprkkr.common.grammar_types.grammar_type.TypedGrammarType", "auto/ase2sprkkr.common.grammar_types.grammar_type.compare_numpy_values", "auto/ase2sprkkr.common.grammar_types.grammar_type.format_for_type", "auto/ase2sprkkr.common.grammar_types.grammar_type.recognized_set_types", "auto/ase2sprkkr.common.grammar_types.grammar_type.type_from_default_value", "auto/ase2sprkkr.common.grammar_types.grammar_type.type_from_type", "auto/ase2sprkkr.common.grammar_types.grammar_type.type_from_value", "auto/ase2sprkkr.common.grammar_types.mixed", "auto/ase2sprkkr.common.grammar_types.recognized_set_types", "auto/ase2sprkkr.common.grammar_types.type_from_set_map", "auto/ase2sprkkr.common.grammar_types.type_from_type_map", "auto/ase2sprkkr.common.grammar_types.warnings", "auto/ase2sprkkr.common.grammar_types.warnings.SuspiciousValueWarning", "auto/ase2sprkkr.common.init_tests", "auto/ase2sprkkr.common.init_tests.TestCase", "auto/ase2sprkkr.common.init_tests.arr_testfce", "auto/ase2sprkkr.common.init_tests.assertDictEqual", "auto/ase2sprkkr.common.init_tests.assertListEqual", "auto/ase2sprkkr.common.init_tests.assert_almost_equals", "auto/ase2sprkkr.common.init_tests.assert_equals", "auto/ase2sprkkr.common.init_tests.extdict", "auto/ase2sprkkr.common.init_tests.patch_package", "auto/ase2sprkkr.common.init_tests.testfce", "auto/ase2sprkkr.common.lazy_string", "auto/ase2sprkkr.common.lazy_string.LazyString", "auto/ase2sprkkr.common.misc", "auto/ase2sprkkr.common.misc.as_integer", "auto/ase2sprkkr.common.misc.config_property", "auto/ase2sprkkr.common.misc.copy_list", "auto/ase2sprkkr.common.misc.dict_first_item", "auto/ase2sprkkr.common.misc.first_non_none", "auto/ase2sprkkr.common.misc.njit", "auto/ase2sprkkr.common.misc.numpy_index", "auto/ase2sprkkr.common.no_output", "auto/ase2sprkkr.common.no_output.NoOutput", "auto/ase2sprkkr.common.options", "auto/ase2sprkkr.common.options.BaseOption", "auto/ase2sprkkr.common.options.CustomOption", "auto/ase2sprkkr.common.options.DangerousValue", "auto/ase2sprkkr.common.options.Dummy", "auto/ase2sprkkr.common.options.DummyStub", "auto/ase2sprkkr.common.options.Option", "auto/ase2sprkkr.common.parsing_results", "auto/ase2sprkkr.common.parsing_results.ArrayKey", "auto/ase2sprkkr.common.parsing_results.DefDictKey", "auto/ase2sprkkr.common.parsing_results.DictKey", "auto/ase2sprkkr.common.parsing_results.IgnoredKey", "auto/ase2sprkkr.common.parsing_results.Key", "auto/ase2sprkkr.common.parsing_results.RepeatedKey", "auto/ase2sprkkr.common.parsing_results.Result", "auto/ase2sprkkr.common.parsing_results.SubKey", "auto/ase2sprkkr.common.parsing_results.ValidateKey", "auto/ase2sprkkr.common.parsing_results.Values", "auto/ase2sprkkr.common.parsing_results.dict_from_parsed", "auto/ase2sprkkr.common.process_output_reader", "auto/ase2sprkkr.common.process_output_reader.AsyncioFileReader", "auto/ase2sprkkr.common.process_output_reader.ProcessOutputReader", "auto/ase2sprkkr.common.process_output_reader.readline", "auto/ase2sprkkr.common.process_output_reader.readline_until", "auto/ase2sprkkr.common.repeated_configuration_containers", "auto/ase2sprkkr.common.repeated_configuration_containers.RepeatedConfigurationContainer", "auto/ase2sprkkr.common.section_adaptors", "auto/ase2sprkkr.common.section_adaptors.MergeSectionAdaptor", "auto/ase2sprkkr.common.section_adaptors.MergeSectionDefinitionAdaptor", "auto/ase2sprkkr.common.section_adaptors.SectionAdaptor", "auto/ase2sprkkr.common.subprocess", "auto/ase2sprkkr.common.subprocess._call_function", "auto/ase2sprkkr.common.subprocess.ignore_signal", "auto/ase2sprkkr.common.subprocess.in_subprocess", "auto/ase2sprkkr.common.test", "auto/ase2sprkkr.common.test.init_tests", "auto/ase2sprkkr.common.test.init_tests.TestCase", "auto/ase2sprkkr.common.test.init_tests.arr_testfce", "auto/ase2sprkkr.common.test.init_tests.assertDictEqual", "auto/ase2sprkkr.common.test.init_tests.assertListEqual", "auto/ase2sprkkr.common.test.init_tests.assert_almost_equals", "auto/ase2sprkkr.common.test.init_tests.assert_equals", "auto/ase2sprkkr.common.test.init_tests.extdict", "auto/ase2sprkkr.common.test.init_tests.testfce", "auto/ase2sprkkr.common.test.test_common", "auto/ase2sprkkr.common.test.test_common.TestCommon", "auto/ase2sprkkr.common.test.test_grammar_types", "auto/ase2sprkkr.common.test.test_grammar_types.TestGrammar", "auto/ase2sprkkr.common.tools", "auto/ase2sprkkr.common.tools.append_id_to_filename", "auto/ase2sprkkr.common.tools.main", "auto/ase2sprkkr.common.tools.parse_inches", "auto/ase2sprkkr.common.tools.parse_named_option", "auto/ase2sprkkr.common.tools.parse_tuple_function", "auto/ase2sprkkr.common.unique_values", "auto/ase2sprkkr.common.unique_values.UniqueValuesMapping", "auto/ase2sprkkr.common.value_definitions", "auto/ase2sprkkr.common.value_definitions.InheritingValueModifier", "auto/ase2sprkkr.common.value_definitions.ValueDefinition", "auto/ase2sprkkr.common.value_definitions.ValueModifier", "auto/ase2sprkkr.common.warnings", "auto/ase2sprkkr.common.warnings.DataValidityError", "auto/ase2sprkkr.common.warnings.DataValidityWarning", "auto/ase2sprkkr.common.yaml", "auto/ase2sprkkr.common.yaml.IndentDumper", "auto/ase2sprkkr.config", "auto/ase2sprkkr.config.ConfigFileDefinition", "auto/ase2sprkkr.config.Configuration", "auto/ase2sprkkr.config.Section", "auto/ase2sprkkr.config._get_suffix", "auto/ase2sprkkr.config.find_default_mpi_runner", "auto/ase2sprkkr.config.get_default_mpi_runner", "auto/ase2sprkkr.config.load_user_preferences", "auto/ase2sprkkr.config.mpi_runner", "auto/ase2sprkkr.config.user_preferences_file", "auto/ase2sprkkr.examples", "auto/ase2sprkkr.examples.A1_Fe_scf_simple", "auto/ase2sprkkr.examples.A1_Fe_scf_simple.Fe", "auto/ase2sprkkr.examples.A1_Fe_scf_simple.Fe.main", "auto/ase2sprkkr.examples.A2_Fe_scf_input_modifications", "auto/ase2sprkkr.examples.A2_Fe_scf_input_modifications.Fe", "auto/ase2sprkkr.examples.A2_Fe_scf_input_modifications.Fe.main", "auto/ase2sprkkr.examples.A3_Fe_dos", "auto/ase2sprkkr.examples.A3_Fe_dos.Fe", "auto/ase2sprkkr.examples.A3_Fe_dos.Fe.main", "auto/ase2sprkkr.examples.A4_CPA_Example", "auto/ase2sprkkr.examples.A4_CPA_Example.Ni_doped_STO", "auto/ase2sprkkr.examples.A4_CPA_Example.Ni_doped_STO.main", "auto/ase2sprkkr.examples.A5_Al_EOS", "auto/ase2sprkkr.examples.A5_Al_EOS.Al", "auto/ase2sprkkr.examples.A5_Al_EOS.Al.main", "auto/ase2sprkkr.examples.A6_Cu_MSSPEC", "auto/ase2sprkkr.examples.A6_Cu_MSSPEC.Cu", "auto/ase2sprkkr.examples.A6_Cu_MSSPEC.Cu.main", "auto/ase2sprkkr.examples.A7_SrTiO3_MSSPEC", "auto/ase2sprkkr.examples.A7_SrTiO3_MSSPEC.STO", "auto/ase2sprkkr.examples.A7_SrTiO3_MSSPEC.STO.main", "auto/ase2sprkkr.examples.A8_ARPES_and_plotting", "auto/ase2sprkkr.examples.A8_ARPES_and_plotting.arpes", "auto/ase2sprkkr.examples.A8_ARPES_and_plotting.arpes.main", "auto/ase2sprkkr.input_parameters", "auto/ase2sprkkr.input_parameters.definitions", "auto/ase2sprkkr.input_parameters.definitions.arpes", "auto/ase2sprkkr.input_parameters.definitions.arpes.input_parameters", "auto/ase2sprkkr.input_parameters.definitions.bsfek", "auto/ase2sprkkr.input_parameters.definitions.bsfek.input_parameters", "auto/ase2sprkkr.input_parameters.definitions.bsfkk", "auto/ase2sprkkr.input_parameters.definitions.bsfkk.input_parameters", "auto/ase2sprkkr.input_parameters.definitions.dos", "auto/ase2sprkkr.input_parameters.definitions.dos.input_parameters", "auto/ase2sprkkr.input_parameters.definitions.gilbert", "auto/ase2sprkkr.input_parameters.definitions.gilbert.input_parameters", "auto/ase2sprkkr.input_parameters.definitions.jxc", "auto/ase2sprkkr.input_parameters.definitions.jxc.input_parameters", "auto/ase2sprkkr.input_parameters.definitions.marpes", "auto/ase2sprkkr.input_parameters.definitions.marpes.input_parameters", "auto/ase2sprkkr.input_parameters.definitions.phagen", "auto/ase2sprkkr.input_parameters.definitions.phagen.input_parameters", "auto/ase2sprkkr.input_parameters.definitions.scf", "auto/ase2sprkkr.input_parameters.definitions.scf.input_parameters", "auto/ase2sprkkr.input_parameters.definitions.sections", "auto/ase2sprkkr.input_parameters.definitions.sections.CONTROL", "auto/ase2sprkkr.input_parameters.definitions.sections.CPA", "auto/ase2sprkkr.input_parameters.definitions.sections.ENERGY", "auto/ase2sprkkr.input_parameters.definitions.sections.MODE", "auto/ase2sprkkr.input_parameters.definitions.sections.SCF", "auto/ase2sprkkr.input_parameters.definitions.sections.SITES", "auto/ase2sprkkr.input_parameters.definitions.sections.STRCONST", "auto/ase2sprkkr.input_parameters.definitions.sections.TASK", "auto/ase2sprkkr.input_parameters.definitions.sections.TAU", "auto/ase2sprkkr.input_parameters.definitions.sections.TauSection", "auto/ase2sprkkr.input_parameters.definitions.sections._nktab_value", "auto/ase2sprkkr.input_parameters.definitions.sections.xc", "auto/ase2sprkkr.input_parameters.input_parameters", "auto/ase2sprkkr.input_parameters.input_parameters.InputParameters", "auto/ase2sprkkr.input_parameters.input_parameters.InputSection", "auto/ase2sprkkr.input_parameters.input_parameters_definitions", "auto/ase2sprkkr.input_parameters.input_parameters_definitions.InputParametersDefinition", "auto/ase2sprkkr.input_parameters.input_parameters_definitions.InputSectionDefinition", "auto/ase2sprkkr.input_parameters.input_parameters_definitions.InputValueDefinition", "auto/ase2sprkkr.input_parameters.test", "auto/ase2sprkkr.input_parameters.test.init_tests", "auto/ase2sprkkr.input_parameters.test.init_tests.TestCase", "auto/ase2sprkkr.input_parameters.test.init_tests.arr_testfce", "auto/ase2sprkkr.input_parameters.test.init_tests.assertDictEqual", "auto/ase2sprkkr.input_parameters.test.init_tests.assertListEqual", "auto/ase2sprkkr.input_parameters.test.init_tests.assert_almost_equals", "auto/ase2sprkkr.input_parameters.test.init_tests.assert_equals", "auto/ase2sprkkr.input_parameters.test.init_tests.extdict", "auto/ase2sprkkr.input_parameters.test.init_tests.testfce", "auto/ase2sprkkr.input_parameters.test.test_definitions", "auto/ase2sprkkr.input_parameters.test.test_definitions.TestDefinitions", "auto/ase2sprkkr.input_parameters.test.test_input_parameters", "auto/ase2sprkkr.input_parameters.test.test_input_parameters.TestInputParameters", "auto/ase2sprkkr.input_parameters.test.test_input_parameters.ar", "auto/ase2sprkkr.output_files", "auto/ase2sprkkr.output_files.definitions", "auto/ase2sprkkr.output_files.definitions.Arithmetic", "auto/ase2sprkkr.output_files.definitions.CommonOutputFile", "auto/ase2sprkkr.output_files.definitions.OutputFile", "auto/ase2sprkkr.output_files.definitions.UnknownDataValue", "auto/ase2sprkkr.output_files.definitions.bsf", "auto/ase2sprkkr.output_files.definitions.bsf.BSFDefinition", "auto/ase2sprkkr.output_files.definitions.bsf.BSFOutputFile", "auto/ase2sprkkr.output_files.definitions.bsf.create_definition", "auto/ase2sprkkr.output_files.definitions.dos", "auto/ase2sprkkr.output_files.definitions.dos.DOS", "auto/ase2sprkkr.output_files.definitions.dos.DOSDefinition", "auto/ase2sprkkr.output_files.definitions.dos.DOSOutputFile", "auto/ase2sprkkr.output_files.definitions.dos.create_definition", "auto/ase2sprkkr.output_files.definitions.spc", "auto/ase2sprkkr.output_files.definitions.spc.ARPESDefinition", "auto/ase2sprkkr.output_files.definitions.spc.ARPESOutputFile", "auto/ase2sprkkr.output_files.definitions.spc.create_definition", "auto/ase2sprkkr.output_files.output_files", "auto/ase2sprkkr.output_files.output_files.Arithmetic", "auto/ase2sprkkr.output_files.output_files.CommonOutputFile", "auto/ase2sprkkr.output_files.output_files.OutputFile", "auto/ase2sprkkr.output_files.output_files.UnknownDataValue", "auto/ase2sprkkr.output_files.output_files_definitions", "auto/ase2sprkkr.output_files.output_files_definitions.BlankSeparator", "auto/ase2sprkkr.output_files.output_files_definitions.OutputFileDefinition", "auto/ase2sprkkr.output_files.output_files_definitions.OutputFileValueDefinition", "auto/ase2sprkkr.output_files.output_files_definitions.Separator", "auto/ase2sprkkr.output_files.output_files_definitions.create_output_file_definition", "auto/ase2sprkkr.output_files.output_files_definitions.output_file_header", "auto/ase2sprkkr.output_files.test", "auto/ase2sprkkr.output_files.test.init_tests", "auto/ase2sprkkr.output_files.test.init_tests.TestCase", "auto/ase2sprkkr.output_files.test.init_tests.arr_testfce", "auto/ase2sprkkr.output_files.test.init_tests.assertDictEqual", "auto/ase2sprkkr.output_files.test.init_tests.assertListEqual", "auto/ase2sprkkr.output_files.test.init_tests.assert_almost_equals", "auto/ase2sprkkr.output_files.test.init_tests.assert_equals", "auto/ase2sprkkr.output_files.test.init_tests.extdict", "auto/ase2sprkkr.output_files.test.init_tests.testfce", "auto/ase2sprkkr.output_files.test.test_files", "auto/ase2sprkkr.output_files.test.test_files.TestOutput", "auto/ase2sprkkr.outputs", "auto/ase2sprkkr.outputs.output_definitions", "auto/ase2sprkkr.outputs.output_definitions.OutputNonameValueDefinition", "auto/ase2sprkkr.outputs.output_definitions.OutputSectionDefinition", "auto/ase2sprkkr.outputs.output_definitions.OutputValueDefinition", "auto/ase2sprkkr.outputs.output_definitions.OutputValueEqualDefinition", "auto/ase2sprkkr.outputs.readers", "auto/ase2sprkkr.outputs.readers.arpes", "auto/ase2sprkkr.outputs.readers.arpes.ArpesProcess", "auto/ase2sprkkr.outputs.readers.arpes.ArpesResult", "auto/ase2sprkkr.outputs.readers.bsf", "auto/ase2sprkkr.outputs.readers.bsf.BsfProcess", "auto/ase2sprkkr.outputs.readers.bsf.BsfResult", "auto/ase2sprkkr.outputs.readers.default", "auto/ase2sprkkr.outputs.readers.default.DefaultOutputReader", "auto/ase2sprkkr.outputs.readers.default.DefaultProcess", "auto/ase2sprkkr.outputs.readers.default.DefaultResult", "auto/ase2sprkkr.outputs.readers.dos", "auto/ase2sprkkr.outputs.readers.dos.DosProcess", "auto/ase2sprkkr.outputs.readers.dos.DosResult", "auto/ase2sprkkr.outputs.readers.scf", "auto/ase2sprkkr.outputs.readers.scf.RealOrStars", "auto/ase2sprkkr.outputs.readers.scf.ScfOutputReader", "auto/ase2sprkkr.outputs.readers.scf.ScfProcess", "auto/ase2sprkkr.outputs.readers.scf.ScfResult", "auto/ase2sprkkr.outputs.readers.scf.atomic_types_definition", "auto/ase2sprkkr.outputs.sprkkr_output_reader", "auto/ase2sprkkr.outputs.sprkkr_output_reader.SprKkrOutputReader", "auto/ase2sprkkr.outputs.task_result", "auto/ase2sprkkr.outputs.task_result.KkrProcess", "auto/ase2sprkkr.outputs.task_result.TaskResult", "auto/ase2sprkkr.outputs.test", "auto/ase2sprkkr.outputs.test.init_tests", "auto/ase2sprkkr.outputs.test.init_tests.TestCase", "auto/ase2sprkkr.outputs.test.init_tests.arr_testfce", "auto/ase2sprkkr.outputs.test.init_tests.assertDictEqual", "auto/ase2sprkkr.outputs.test.init_tests.assertListEqual", "auto/ase2sprkkr.outputs.test.init_tests.assert_almost_equals", "auto/ase2sprkkr.outputs.test.init_tests.assert_equals", "auto/ase2sprkkr.outputs.test.init_tests.extdict", "auto/ase2sprkkr.outputs.test.init_tests.testfce", "auto/ase2sprkkr.outputs.test.test_output", "auto/ase2sprkkr.outputs.test.test_output.TestOutput", "auto/ase2sprkkr.physics", "auto/ase2sprkkr.physics.lattice_data", "auto/ase2sprkkr.physics.lattice_data.LatticeData", "auto/ase2sprkkr.physics.lattice_data.Pearson", "auto/ase2sprkkr.physics.lattice_data.international_numbers_to_AP", "auto/ase2sprkkr.physics.winger_seitz_radii", "auto/ase2sprkkr.physics.winger_seitz_radii.winger_seitz_radii", "auto/ase2sprkkr.potentials", "auto/ase2sprkkr.potentials.custom_potential_section", "auto/ase2sprkkr.potentials.custom_potential_section.CustomPotentialSection", "auto/ase2sprkkr.potentials.custom_potential_section.CustomPotentialSectionDefinition", "auto/ase2sprkkr.potentials.custom_potential_section.CustomSectionToken", "auto/ase2sprkkr.potentials.custom_potential_section.SectionString", "auto/ase2sprkkr.potentials.definitions", "auto/ase2sprkkr.potentials.definitions.potential", "auto/ase2sprkkr.potentials.definitions.potential.potential_definition", "auto/ase2sprkkr.potentials.definitions.sections", "auto/ase2sprkkr.potentials.definitions.sections._sections", "auto/ase2sprkkr.potentials.definitions.sections.charge", "auto/ase2sprkkr.potentials.definitions.sections.charge.ChargeSection", "auto/ase2sprkkr.potentials.definitions.sections.charge.ChargeSectionDefinition", "auto/ase2sprkkr.potentials.definitions.sections.charge.ChargesSection", "auto/ase2sprkkr.potentials.definitions.sections.charge.section", "auto/ase2sprkkr.potentials.definitions.sections.charge_moments", "auto/ase2sprkkr.potentials.definitions.sections.charge_moments.ChargeMomentsSection", "auto/ase2sprkkr.potentials.definitions.sections.charge_moments.ChargeMomentsSectionDefinition", "auto/ase2sprkkr.potentials.definitions.sections.charge_moments.section", "auto/ase2sprkkr.potentials.definitions.sections.global_system_parameter", "auto/ase2sprkkr.potentials.definitions.sections.global_system_parameter.GlobalSystemParameter", "auto/ase2sprkkr.potentials.definitions.sections.global_system_parameter.GlobalSystemParameterDefinition", "auto/ase2sprkkr.potentials.definitions.sections.global_system_parameter.section", "auto/ase2sprkkr.potentials.definitions.sections.host_madelung_potential", "auto/ase2sprkkr.potentials.definitions.sections.host_madelung_potential.HostMadelungPotentialSection", "auto/ase2sprkkr.potentials.definitions.sections.host_madelung_potential.HostMadelungPotentialSectionDefinition", "auto/ase2sprkkr.potentials.definitions.sections.host_madelung_potential.section", "auto/ase2sprkkr.potentials.definitions.sections.lattice", "auto/ase2sprkkr.potentials.definitions.sections.lattice.LatticeSection", "auto/ase2sprkkr.potentials.definitions.sections.lattice.LatticeSectionDefinition", "auto/ase2sprkkr.potentials.definitions.sections.lattice.section", "auto/ase2sprkkr.potentials.definitions.sections.mesh_information", "auto/ase2sprkkr.potentials.definitions.sections.mesh_information.MeshInformationSection", "auto/ase2sprkkr.potentials.definitions.sections.mesh_information.MeshInformationSectionDefinition", "auto/ase2sprkkr.potentials.definitions.sections.mesh_information.section", "auto/ase2sprkkr.potentials.definitions.sections.moments", "auto/ase2sprkkr.potentials.definitions.sections.moments.MomentSection", "auto/ase2sprkkr.potentials.definitions.sections.moments.MomentsSection", "auto/ase2sprkkr.potentials.definitions.sections.moments.MomentsSectionDefinition", "auto/ase2sprkkr.potentials.definitions.sections.moments.section", "auto/ase2sprkkr.potentials.definitions.sections.occupation", "auto/ase2sprkkr.potentials.definitions.sections.occupation.OccupationSection", "auto/ase2sprkkr.potentials.definitions.sections.occupation.OccupationSectionDefinition", "auto/ase2sprkkr.potentials.definitions.sections.occupation.section", "auto/ase2sprkkr.potentials.definitions.sections.potential", "auto/ase2sprkkr.potentials.definitions.sections.potential.PotentialSection", "auto/ase2sprkkr.potentials.definitions.sections.potential.PotentialSectionDefinition", "auto/ase2sprkkr.potentials.definitions.sections.potential.PotentialsSection", "auto/ase2sprkkr.potentials.definitions.sections.potential.section", "auto/ase2sprkkr.potentials.definitions.sections.reference_system", "auto/ase2sprkkr.potentials.definitions.sections.reference_system.ReferenceSystemSection", "auto/ase2sprkkr.potentials.definitions.sections.reference_system.ReferenceSystemSectionDefinition", "auto/ase2sprkkr.potentials.definitions.sections.reference_system.section", "auto/ase2sprkkr.potentials.definitions.sections.scf_info", "auto/ase2sprkkr.potentials.definitions.sections.scf_info.ScfInfoSection", "auto/ase2sprkkr.potentials.definitions.sections.scf_info.ScfInfoSectionDefinition", "auto/ase2sprkkr.potentials.definitions.sections.scf_info.section", "auto/ase2sprkkr.potentials.definitions.sections.sites", "auto/ase2sprkkr.potentials.definitions.sections.sites.SitesSection", "auto/ase2sprkkr.potentials.definitions.sections.sites.SitesSectionDefinition", "auto/ase2sprkkr.potentials.definitions.sections.sites.section", "auto/ase2sprkkr.potentials.definitions.sections.types", "auto/ase2sprkkr.potentials.definitions.sections.types.TypesSection", "auto/ase2sprkkr.potentials.definitions.sections.types.TypesSectionDefinition", "auto/ase2sprkkr.potentials.definitions.sections.types.section", "auto/ase2sprkkr.potentials.potential_definitions", "auto/ase2sprkkr.potentials.potential_definitions.ASEArraySectionDefinition", "auto/ase2sprkkr.potentials.potential_definitions.PotSectionDefinition", "auto/ase2sprkkr.potentials.potential_definitions.PotValueDefinition", "auto/ase2sprkkr.potentials.potential_definitions.PotentialDefinition", "auto/ase2sprkkr.potentials.potential_definitions.Separator", "auto/ase2sprkkr.potentials.potential_sections", "auto/ase2sprkkr.potentials.potential_sections.ASEArraySection", "auto/ase2sprkkr.potentials.potential_sections.AtomicTypePotentialSection", "auto/ase2sprkkr.potentials.potential_sections.PotentialSection", "auto/ase2sprkkr.potentials.potential_sections.PotentialSectionTrait", "auto/ase2sprkkr.potentials.potential_sections.RepeatedPotentialSection", "auto/ase2sprkkr.potentials.potential_sections.UniqueListSection", "auto/ase2sprkkr.potentials.potentials", "auto/ase2sprkkr.potentials.potentials.Potential", "auto/ase2sprkkr.potentials.test", "auto/ase2sprkkr.potentials.test.init_tests", "auto/ase2sprkkr.potentials.test.init_tests.TestCase", "auto/ase2sprkkr.potentials.test.init_tests.arr_testfce", "auto/ase2sprkkr.potentials.test.init_tests.assertDictEqual", "auto/ase2sprkkr.potentials.test.init_tests.assertListEqual", "auto/ase2sprkkr.potentials.test.init_tests.assert_almost_equals", "auto/ase2sprkkr.potentials.test.init_tests.assert_equals", "auto/ase2sprkkr.potentials.test.init_tests.extdict", "auto/ase2sprkkr.potentials.test.init_tests.testfce", "auto/ase2sprkkr.potentials.test.test_2D", "auto/ase2sprkkr.potentials.test.test_2D.Test2DPotential", "auto/ase2sprkkr.potentials.test.test_custom_section", "auto/ase2sprkkr.potentials.test.test_custom_section.TestCustomSection", "auto/ase2sprkkr.potentials.test.test_potential", "auto/ase2sprkkr.potentials.test.test_potential.TestPotential", "auto/ase2sprkkr.potentials.test.test_structure", "auto/ase2sprkkr.potentials.test.test_structure.TestStructure", "auto/ase2sprkkr.sprkkr", "auto/ase2sprkkr.sprkkr.atomic_types", "auto/ase2sprkkr.sprkkr.atomic_types.AtomicType", "auto/ase2sprkkr.sprkkr.atoms_region", "auto/ase2sprkkr.sprkkr.atoms_region.AtomsRegion", "auto/ase2sprkkr.sprkkr.build", "auto/ase2sprkkr.sprkkr.build.semiinfinite_system", "auto/ase2sprkkr.sprkkr.build.stack", "auto/ase2sprkkr.sprkkr.build.vacuum_like", "auto/ase2sprkkr.sprkkr.calculator", "auto/ase2sprkkr.sprkkr.calculator.FilenameTemplator", "auto/ase2sprkkr.sprkkr.calculator.SPRKKR", "auto/ase2sprkkr.sprkkr.configuration", "auto/ase2sprkkr.sprkkr.configuration.ConfigurationFile", "auto/ase2sprkkr.sprkkr.configuration.ConfigurationFileDefinition", "auto/ase2sprkkr.sprkkr.configuration.ConfigurationSection", "auto/ase2sprkkr.sprkkr.configuration.ConfigurationSectionDefinition", "auto/ase2sprkkr.sprkkr.configuration.ConfigurationSectionTrait", "auto/ase2sprkkr.sprkkr.configuration.ConfigurationValue", "auto/ase2sprkkr.sprkkr.configuration.ConfigurationValueDefinition", "auto/ase2sprkkr.sprkkr.configuration.CustomConfigurationSection", "auto/ase2sprkkr.sprkkr.configuration.CustomConfigurationValue", "auto/ase2sprkkr.sprkkr.configuration.RepeatedConfigurationSection", "auto/ase2sprkkr.sprkkr.io_data", "auto/ase2sprkkr.sprkkr.io_data.BaseIoData", "auto/ase2sprkkr.sprkkr.io_data.ReadIoData", "auto/ase2sprkkr.sprkkr.io_data.WriteIoData", "auto/ase2sprkkr.sprkkr.io_data.unique_mapping", "auto/ase2sprkkr.sprkkr.moments", "auto/ase2sprkkr.sprkkr.moments.Moments", "auto/ase2sprkkr.sprkkr.occupations", "auto/ase2sprkkr.sprkkr.occupations.Occupation", "auto/ase2sprkkr.sprkkr.radial", "auto/ase2sprkkr.sprkkr.radial.RadialCharge", "auto/ase2sprkkr.sprkkr.radial.RadialPotential", "auto/ase2sprkkr.sprkkr.radial.RadialValue", "auto/ase2sprkkr.sprkkr.radial_meshes", "auto/ase2sprkkr.sprkkr.radial_meshes.ExponentialMesh", "auto/ase2sprkkr.sprkkr.radial_meshes.Mesh", "auto/ase2sprkkr.sprkkr.radial_meshes._clearing_property", "auto/ase2sprkkr.sprkkr.reference_systems", "auto/ase2sprkkr.sprkkr.reference_systems.ReferenceSystem", "auto/ase2sprkkr.sprkkr.sites", "auto/ase2sprkkr.sprkkr.sites.Site", "auto/ase2sprkkr.sprkkr.sites.SiteType", "auto/ase2sprkkr.sprkkr.sprkkr_atoms", "auto/ase2sprkkr.sprkkr.sprkkr_atoms.SPRKKRAtoms", "auto/ase2sprkkr.sprkkr.sprkkr_grammar_types", "auto/ase2sprkkr.sprkkr.sprkkr_grammar_types.AtomicType", "auto/ase2sprkkr.sprkkr.sprkkr_grammar_types.Site", "auto/ase2sprkkr.sprkkr.structure", "auto/ase2sprkkr.sprkkr.structure.AtomData", "auto/ase2sprkkr.sprkkr.structure.LayerData", "auto/ase2sprkkr.sprkkr.structure.floatjm", "auto/ase2sprkkr.sprkkr.structure.structure_file_to_atoms", "auto/ase2sprkkr.sprkkr.sysfile", "auto/ase2sprkkr.sprkkr.sysfile.sysfile_content", "auto/ase2sprkkr.sprkkr.sysfile.write_sysfile", "auto/ase2sprkkr.sprkkr.test", "auto/ase2sprkkr.sprkkr.test.init_tests", "auto/ase2sprkkr.sprkkr.test.init_tests.TestCase", "auto/ase2sprkkr.sprkkr.test.init_tests.arr_testfce", "auto/ase2sprkkr.sprkkr.test.init_tests.assertDictEqual", "auto/ase2sprkkr.sprkkr.test.init_tests.assertListEqual", "auto/ase2sprkkr.sprkkr.test.init_tests.assert_almost_equals", "auto/ase2sprkkr.sprkkr.test.init_tests.assert_equals", "auto/ase2sprkkr.sprkkr.test.init_tests.extdict", "auto/ase2sprkkr.sprkkr.test.init_tests.testfce", "auto/ase2sprkkr.sprkkr.test.test_arpes", "auto/ase2sprkkr.sprkkr.test.test_arpes.TestCalculator", "auto/ase2sprkkr.sprkkr.test.test_build", "auto/ase2sprkkr.sprkkr.test.test_build.TestBuild", "auto/ase2sprkkr.sprkkr.test.test_calculator", "auto/ase2sprkkr.sprkkr.test.test_calculator.TestCalculator", "auto/ase2sprkkr.sprkkr.test.test_calculator._fast_atoms", "auto/ase2sprkkr.sprkkr.test.test_occupation", "auto/ase2sprkkr.sprkkr.test.test_occupation.test", "auto/ase2sprkkr.sprkkr.test.test_sites", "auto/ase2sprkkr.sprkkr.test.test_sites.TestSites", "auto/ase2sprkkr.sprkkr.test.test_sprkkr_atoms", "auto/ase2sprkkr.sprkkr.test.test_sprkkr_atoms.TestSPRKKRAtoms", "auto/ase2sprkkr.sprkkr.test.test_sysfile", "auto/ase2sprkkr.sprkkr.test.test_sysfile.TestSysfile", "auto/ase2sprkkr.tools", "auto/ase2sprkkr.tools.ase2sprkkr", "auto/ase2sprkkr.tools.ase2sprkkr.run", "auto/ase2sprkkr.tools.commands", "auto/ase2sprkkr.tools.commands.config", "auto/ase2sprkkr.tools.commands.config.default_content", "auto/ase2sprkkr.tools.commands.config.parser", "auto/ase2sprkkr.tools.commands.config.run", "auto/ase2sprkkr.tools.commands.examples", "auto/ase2sprkkr.tools.commands.examples.parser", "auto/ase2sprkkr.tools.commands.examples.run", "auto/ase2sprkkr.tools.commands.info", "auto/ase2sprkkr.tools.commands.info.default_options", "auto/ase2sprkkr.tools.commands.info.description", "auto/ase2sprkkr.tools.commands.info.parser", "auto/ase2sprkkr.tools.commands.info.run", "auto/ase2sprkkr.tools.commands.nomad", "auto/ase2sprkkr.tools.commands.nomad.authenticate", "auto/ase2sprkkr.tools.commands.nomad.gather_files", "auto/ase2sprkkr.tools.commands.nomad.get_token", "auto/ase2sprkkr.tools.commands.nomad.parser", "auto/ase2sprkkr.tools.commands.nomad.retrieve_token", "auto/ase2sprkkr.tools.commands.nomad.run", "auto/ase2sprkkr.tools.commands.nomad.token", "auto/ase2sprkkr.tools.commands.nomad.upload", "auto/ase2sprkkr.tools.commands.nomad.zipp", "auto/ase2sprkkr.tools.commands.plot", "auto/ase2sprkkr.tools.commands.plot.parser", "auto/ase2sprkkr.tools.commands.plot.run", "auto/ase2sprkkr.tools.commands.run", "auto/ase2sprkkr.tools.commands.run.parser", "auto/ase2sprkkr.tools.commands.run.run", "auto/ase2sprkkr.tools.commands.show_structure", "auto/ase2sprkkr.tools.commands.show_structure.parser", "auto/ase2sprkkr.tools.commands.show_structure.run", "auto/ase2sprkkr.tools.commands.test", "auto/ase2sprkkr.tools.commands.test.parser", "auto/ase2sprkkr.tools.commands.test.run", "auto/ase2sprkkr.tools.shared", "auto/ase2sprkkr.tools.shared.main", "auto/ase2sprkkr.tools.test", "auto/ase2sprkkr.tools.test.init_tests", "auto/ase2sprkkr.tools.test.init_tests.TestCase", "auto/ase2sprkkr.tools.test.init_tests.arr_testfce", "auto/ase2sprkkr.tools.test.init_tests.assertDictEqual", "auto/ase2sprkkr.tools.test.init_tests.assertListEqual", "auto/ase2sprkkr.tools.test.init_tests.assert_almost_equals", "auto/ase2sprkkr.tools.test.init_tests.assert_equals", "auto/ase2sprkkr.tools.test.init_tests.extdict", "auto/ase2sprkkr.tools.test.init_tests.testfce", "auto/ase2sprkkr.tools.test.test_tools", "auto/ase2sprkkr.tools.test.test_tools.TestCommon", "auto/ase2sprkkr.version", "auto/ase2sprkkr.visualise", "auto/ase2sprkkr.visualise.plot", "auto/ase2sprkkr.visualise.plot.Multiplot", "auto/ase2sprkkr.visualise.plot.auto_range", "auto/ase2sprkkr.visualise.plot.change_default_kwargs", "auto/ase2sprkkr.visualise.plot.colormesh", "auto/ase2sprkkr.visualise.plot.combine_colormaps", "auto/ase2sprkkr.visualise.plot.combined_colormap", "auto/ase2sprkkr.visualise.plot.create_rc_context", "auto/ase2sprkkr.visualise.plot.finish_plot", "auto/ase2sprkkr.visualise.plot.normalize_rc_params", "auto/ase2sprkkr.visualise.plot.plotting_function", "auto/ase2sprkkr.visualise.plot.set_up_common_plot", "auto/ase2sprkkr.visualise.plot.single_plot", "auto/modules", "changelog", "examples", "examples_generated", "how-to-install", "index", "installation", "introduction", "philosophy", "usage"], "filenames": ["README.rst", "auto/ase2sprkkr.rst", "auto/ase2sprkkr.ase.rst", "auto/ase2sprkkr.ase.build.rst", "auto/ase2sprkkr.ase.build.aperiodic_times.rst", "auto/ase2sprkkr.ase.build.stack.rst", "auto/ase2sprkkr.ase.io.rst", "auto/ase2sprkkr.ase.io.read_sprkkr.rst", "auto/ase2sprkkr.ase.io.write_sprkkr.rst", "auto/ase2sprkkr.ase.pbc.rst", "auto/ase2sprkkr.ase.pbc.check_symmetry.rst", "auto/ase2sprkkr.ase.register.rst", "auto/ase2sprkkr.ase.register.ase_register.rst", "auto/ase2sprkkr.ase.register.register.rst", "auto/ase2sprkkr.ase.symbols.rst", "auto/ase2sprkkr.ase.symbols.filename_from_symbols.rst", "auto/ase2sprkkr.ase.symbols.pretty_symbols.rst", "auto/ase2sprkkr.ase.test.rst", "auto/ase2sprkkr.ase.test.init_tests.rst", "auto/ase2sprkkr.ase.test.init_tests.TestCase.rst", "auto/ase2sprkkr.ase.test.init_tests.arr_testfce.rst", "auto/ase2sprkkr.ase.test.init_tests.assertDictEqual.rst", "auto/ase2sprkkr.ase.test.init_tests.assertListEqual.rst", "auto/ase2sprkkr.ase.test.init_tests.assert_almost_equals.rst", "auto/ase2sprkkr.ase.test.init_tests.assert_equals.rst", "auto/ase2sprkkr.ase.test.init_tests.extdict.rst", "auto/ase2sprkkr.ase.test.init_tests.testfce.rst", "auto/ase2sprkkr.ase.test.test_build.rst", "auto/ase2sprkkr.ase.test.test_build.TestBuild.rst", "auto/ase2sprkkr.ase.visualise.rst", "auto/ase2sprkkr.ase.visualise.view.rst", "auto/ase2sprkkr.asr.rst", "auto/ase2sprkkr.asr.asr.rst", "auto/ase2sprkkr.asr.bader.rst", "auto/ase2sprkkr.asr.bader.print.rst", "auto/ase2sprkkr.asr.bandstructure.rst", "auto/ase2sprkkr.asr.bandstructure.Result.rst", "auto/ase2sprkkr.asr.bandstructure.add_bs_pbe.rst", "auto/ase2sprkkr.asr.bandstructure.bs_pbe.rst", "auto/ase2sprkkr.asr.bandstructure.bs_pbe_html.rst", "auto/ase2sprkkr.asr.bandstructure.plot_with_colors.rst", "auto/ase2sprkkr.asr.bandstructure.webpanel.rst", "auto/ase2sprkkr.asr.berry.rst", "auto/ase2sprkkr.asr.berry.Result.rst", "auto/ase2sprkkr.asr.berry.plot_phases.rst", "auto/ase2sprkkr.asr.berry.webpanel.rst", "auto/ase2sprkkr.asr.borncharges.rst", "auto/ase2sprkkr.asr.borncharges.Result.rst", "auto/ase2sprkkr.asr.borncharges.webpanel.rst", "auto/ase2sprkkr.asr.bse.rst", "auto/ase2sprkkr.asr.bse.Result.rst", "auto/ase2sprkkr.asr.bse.absorption.rst", "auto/ase2sprkkr.asr.bse.get_kpts_size.rst", "auto/ase2sprkkr.asr.bse.webpanel.rst", "auto/ase2sprkkr.asr.calculators.rst", "auto/ase2sprkkr.asr.calculators.get_calculator.rst", "auto/ase2sprkkr.asr.chc.rst", "auto/ase2sprkkr.asr.chc.CHCError.rst", "auto/ase2sprkkr.asr.chc.ConvexHullReference.rst", "auto/ase2sprkkr.asr.chc.Hyperplane.rst", "auto/ase2sprkkr.asr.chc.Intermediate.rst", "auto/ase2sprkkr.asr.chc.LeanIntermediate.rst", "auto/ase2sprkkr.asr.chc.Line.rst", "auto/ase2sprkkr.asr.chc.Reference.rst", "auto/ase2sprkkr.asr.chc.Result.rst", "auto/ase2sprkkr.asr.chc._permutecontain.rst", "auto/ase2sprkkr.asr.chc.append_references.rst", "auto/ase2sprkkr.asr.chc.calculate_intermediates.rst", "auto/ase2sprkkr.asr.chc.chcut_plot.rst", "auto/ase2sprkkr.asr.chc.convex_hull.rst", "auto/ase2sprkkr.asr.chc.convex_hull_planes.rst", "auto/ase2sprkkr.asr.chc.filrefs.rst", "auto/ase2sprkkr.asr.chc.get_coords.rst", "auto/ase2sprkkr.asr.chc.get_hof.rst", "auto/ase2sprkkr.asr.chc.gscheck.rst", "auto/ase2sprkkr.asr.chc.is_collinear.rst", "auto/ase2sprkkr.asr.chc.is_independent.rst", "auto/ase2sprkkr.asr.chc.mgs.rst", "auto/ase2sprkkr.asr.chc.mgsls.rst", "auto/ase2sprkkr.asr.chc.mu_adjustment.rst", "auto/ase2sprkkr.asr.chc.orthogonalize.rst", "auto/ase2sprkkr.asr.chc.projuv.rst", "auto/ase2sprkkr.asr.chc.read_structure.rst", "auto/ase2sprkkr.asr.chc.refs2ims.rst", "auto/ase2sprkkr.asr.chc.results2ref.rst", "auto/ase2sprkkr.asr.chc.row2ref.rst", "auto/ase2sprkkr.asr.chc.tuplespermuted.rst", "auto/ase2sprkkr.asr.chc.webpanel.rst", "auto/ase2sprkkr.asr.convex_hull.rst", "auto/ase2sprkkr.asr.convex_hull.Result.rst", "auto/ase2sprkkr.asr.convex_hull.convex_hull_tables.rst", "auto/ase2sprkkr.asr.convex_hull.get_reference_energies.rst", "auto/ase2sprkkr.asr.convex_hull.hof.rst", "auto/ase2sprkkr.asr.convex_hull.plot.rst", "auto/ase2sprkkr.asr.convex_hull.select_references.rst", "auto/ase2sprkkr.asr.convex_hull.webpanel.rst", "auto/ase2sprkkr.asr.core.rst", "auto/ase2sprkkr.asr.core.cli.rst", "auto/ase2sprkkr.asr.core.cli.append_job.rst", "auto/ase2sprkkr.asr.core.cli.check_git.rst", "auto/ase2sprkkr.asr.core.cli.extract_hash_from_file.rst", "auto/ase2sprkkr.asr.core.cli.format.rst", "auto/ase2sprkkr.asr.core.cli.get_config_dir.rst", "auto/ase2sprkkr.asr.core.cli.get_git_rev_list.rst", "auto/ase2sprkkr.asr.core.cli.initialize_asr_configuration_dir.rst", "auto/ase2sprkkr.asr.core.cli.is_asr_initialized.rst", "auto/ase2sprkkr.asr.core.cli.run_command.rst", "auto/ase2sprkkr.asr.core.command.rst", "auto/ase2sprkkr.asr.core.fix_old_files.rst", "auto/ase2sprkkr.asr.core.fix_old_files.is_results_file.rst", "auto/ase2sprkkr.asr.core.material.rst", "auto/ase2sprkkr.asr.core.material.Material.rst", "auto/ase2sprkkr.asr.core.material.get_material_from_folder.rst", "auto/ase2sprkkr.asr.core.material.get_webpanels_from_material.rst", "auto/ase2sprkkr.asr.core.material.make_panel_figures.rst", "auto/ase2sprkkr.asr.core.results.rst", "auto/ase2sprkkr.asr.core.results.ASRResult.rst", "auto/ase2sprkkr.asr.core.results.DictEncoder.rst", "auto/ase2sprkkr.asr.core.results.HTMLEncoder.rst", "auto/ase2sprkkr.asr.core.results.HackedASRResult.rst", "auto/ase2sprkkr.asr.core.results.JSONEncoder.rst", "auto/ase2sprkkr.asr.core.results.MetaData.rst", "auto/ase2sprkkr.asr.core.results.MetaDataNotSetError.rst", "auto/ase2sprkkr.asr.core.results.ObjectDescription.rst", "auto/ase2sprkkr.asr.core.results.ResultEncoder.rst", "auto/ase2sprkkr.asr.core.results.UnknownASRResultFormat.rst", "auto/ase2sprkkr.asr.core.results.UnknownDataFormat.rst", "auto/ase2sprkkr.asr.core.results.WebPanelEncoder.rst", "auto/ase2sprkkr.asr.core.results.data_to_dict.rst", "auto/ase2sprkkr.asr.core.results.dct_to_result.rst", "auto/ase2sprkkr.asr.core.results.find_class_matching_version.rst", "auto/ase2sprkkr.asr.core.results.format_key_description_pair.rst", "auto/ase2sprkkr.asr.core.results.get_key_descriptions.rst", "auto/ase2sprkkr.asr.core.results.get_object_matching_obj_id.rst", "auto/ase2sprkkr.asr.core.results.get_object_types.rst", "auto/ase2sprkkr.asr.core.results.get_reader_function.rst", "auto/ase2sprkkr.asr.core.results.make_property.rst", "auto/ase2sprkkr.asr.core.results.obj_to_id.rst", "auto/ase2sprkkr.asr.core.results.object_description_to_object.rst", "auto/ase2sprkkr.asr.core.results.prepare_result.rst", "auto/ase2sprkkr.asr.core.results.read_hacked_data.rst", "auto/ase2sprkkr.asr.core.results.read_new_data.rst", "auto/ase2sprkkr.asr.core.results.read_old_data.rst", "auto/ase2sprkkr.asr.core.types.rst", "auto/ase2sprkkr.asr.core.types.AtomsFile.rst", "auto/ase2sprkkr.asr.core.types.DictStr.rst", "auto/ase2sprkkr.asr.core.types.clickify_docstring.rst", "auto/ase2sprkkr.asr.core.utils.rst", "auto/ase2sprkkr.asr.core.utils.chdir.rst", "auto/ase2sprkkr.asr.core.utils.dct_to_object.rst", "auto/ase2sprkkr.asr.core.utils.encode_json.rst", "auto/ase2sprkkr.asr.core.utils.file_barrier.rst", "auto/ase2sprkkr.asr.core.utils.get_dep_tree.rst", "auto/ase2sprkkr.asr.core.utils.get_recipe_from_name.rst", "auto/ase2sprkkr.asr.core.utils.md5sum.rst", "auto/ase2sprkkr.asr.core.utils.parse_dict_string.rst", "auto/ase2sprkkr.asr.core.utils.parse_mod_func.rst", "auto/ase2sprkkr.asr.core.utils.read_json.rst", "auto/ase2sprkkr.asr.core.utils.recursive_update.rst", "auto/ase2sprkkr.asr.core.utils.singleprec_dict.rst", "auto/ase2sprkkr.asr.core.utils.unlink.rst", "auto/ase2sprkkr.asr.core.utils.write_file.rst", "auto/ase2sprkkr.asr.core.utils.write_json.rst", "auto/ase2sprkkr.asr.database.rst", "auto/ase2sprkkr.asr.database.browser.rst", "auto/ase2sprkkr.asr.database.browser.RowWrapper.rst", "auto/ase2sprkkr.asr.database.browser.create_table.rst", "auto/ase2sprkkr.asr.database.browser.describe_entries.rst", "auto/ase2sprkkr.asr.database.browser.describe_entry.rst", "auto/ase2sprkkr.asr.database.browser.dict_to_list.rst", "auto/ase2sprkkr.asr.database.browser.entry_parameter_description.rst", "auto/ase2sprkkr.asr.database.browser.extract_recipe_from_filename.rst", "auto/ase2sprkkr.asr.database.browser.fig.rst", "auto/ase2sprkkr.asr.database.browser.is_results_file.rst", "auto/ase2sprkkr.asr.database.browser.layout.rst", "auto/ase2sprkkr.asr.database.browser.merge_panels.rst", "auto/ase2sprkkr.asr.database.browser.miscellaneous_section.rst", "auto/ase2sprkkr.asr.database.browser.table.rst", "auto/ase2sprkkr.asr.database.browser.val2str.rst", "auto/ase2sprkkr.asr.database.check.rst", "auto/ase2sprkkr.asr.database.clonetree.rst", "auto/ase2sprkkr.asr.database.duplicates.rst", "auto/ase2sprkkr.asr.database.duplicates.compare.rst", "auto/ase2sprkkr.asr.database.duplicates.filter_uids.rst", "auto/ase2sprkkr.asr.database.duplicates.find_duplicate_group.rst", "auto/ase2sprkkr.asr.database.duplicates.parse_filter_string.rst", "auto/ase2sprkkr.asr.database.material_fingerprint.rst", "auto/ase2sprkkr.asr.database.material_fingerprint.get_hash_of_atoms.rst", "auto/ase2sprkkr.asr.database.material_fingerprint.get_uid_of_atoms.rst", "auto/ase2sprkkr.asr.database.material_fingerprint.todict.rst", "auto/ase2sprkkr.asr.database.merge.rst", "auto/ase2sprkkr.asr.database.rmsd.rst", "auto/ase2sprkkr.asr.database.rmsd.get_rmsd.rst", "auto/ase2sprkkr.asr.database.rmsd.normalize_nonpbc_atoms.rst", "auto/ase2sprkkr.asr.database.rmsd.update_rmsd.rst", "auto/ase2sprkkr.asr.database.templates.rst", "auto/ase2sprkkr.asr.database.totree.rst", "auto/ase2sprkkr.asr.database.totree.make_folder_dict.rst", "auto/ase2sprkkr.asr.database.totree.make_folder_tree.rst", "auto/ase2sprkkr.asr.defectformation.rst", "auto/ase2sprkkr.asr.defectformation.check_and_get_general_inputs.rst", "auto/ase2sprkkr.asr.defectformation.collect_data.rst", "auto/ase2sprkkr.asr.defectformation.find_file_in_folder.rst", "auto/ase2sprkkr.asr.defectformation.intersection.rst", "auto/ase2sprkkr.asr.defectformation.line.rst", "auto/ase2sprkkr.asr.defectformation.line_intersection.rst", "auto/ase2sprkkr.asr.defectformation.plot_formation_and_transitions.rst", "auto/ase2sprkkr.asr.deformationpotentials.rst", "auto/ase2sprkkr.asr.deformationpotentials.Result.rst", "auto/ase2sprkkr.asr.deformationpotentials.webpanel.rst", "auto/ase2sprkkr.asr.dimensionality.rst", "auto/ase2sprkkr.asr.dimensionality.get_dimtypes.rst", "auto/ase2sprkkr.asr.dimensionality.plot_dimensionality_histogram.rst", "auto/ase2sprkkr.asr.dimensionality.webpanel.rst", "auto/ase2sprkkr.asr.dos.rst", "auto/ase2sprkkr.asr.dos.collect_data.rst", "auto/ase2sprkkr.asr.dos.plot.rst", "auto/ase2sprkkr.asr.dos.webpanel.rst", "auto/ase2sprkkr.asr.emasses.rst", "auto/ase2sprkkr.asr.emasses.NoGapError.rst", "auto/ase2sprkkr.asr.emasses.Result.rst", "auto/ase2sprkkr.asr.emasses.calculate_bs_along_emass_vecs.rst", "auto/ase2sprkkr.asr.emasses.check_soc.rst", "auto/ase2sprkkr.asr.emasses.convert_key_to_tuple.rst", "auto/ase2sprkkr.asr.emasses.create_columns_fnames.rst", "auto/ase2sprkkr.asr.emasses.custom_table.rst", "auto/ase2sprkkr.asr.emasses.em.rst", "auto/ase2sprkkr.asr.emasses.embands.rst", "auto/ase2sprkkr.asr.emasses.evalmodel.rst", "auto/ase2sprkkr.asr.emasses.fit.rst", "auto/ase2sprkkr.asr.emasses.get_2nd_order_extremum.rst", "auto/ase2sprkkr.asr.emasses.get_3rd_order_extremum.rst", "auto/ase2sprkkr.asr.emasses.get_bt_ks.rst", "auto/ase2sprkkr.asr.emasses.get_emass_dict_from_row.rst", "auto/ase2sprkkr.asr.emasses.get_extremum_type.rst", "auto/ase2sprkkr.asr.emasses.get_gapskn.rst", "auto/ase2sprkkr.asr.emasses.get_name.rst", "auto/ase2sprkkr.asr.emasses.get_range.rst", "auto/ase2sprkkr.asr.emasses.get_vb_cb_indices.rst", "auto/ase2sprkkr.asr.emasses.kptsinsphere.rst", "auto/ase2sprkkr.asr.emasses.make_the_plots.rst", "auto/ase2sprkkr.asr.emasses.model.rst", "auto/ase2sprkkr.asr.emasses.nonsc_sphere.rst", "auto/ase2sprkkr.asr.emasses.preliminary_refine.rst", "auto/ase2sprkkr.asr.emasses.set_default.rst", "auto/ase2sprkkr.asr.emasses.unpack_masses.rst", "auto/ase2sprkkr.asr.emasses.webpanel.rst", "auto/ase2sprkkr.asr.emasses.wideMAE.rst", "auto/ase2sprkkr.asr.exchange.rst", "auto/ase2sprkkr.asr.exchange.get_parameters.rst", "auto/ase2sprkkr.asr.fere.rst", "auto/ase2sprkkr.asr.fere.DBAlreadyExistsError.rst", "auto/ase2sprkkr.asr.fere.MaterialNotFoundError.rst", "auto/ase2sprkkr.asr.fere.ParseError.rst", "auto/ase2sprkkr.asr.fere.count.rst", "auto/ase2sprkkr.asr.fere.create_corrected_db.rst", "auto/ase2sprkkr.asr.fere.elements_from_refs.rst", "auto/ase2sprkkr.asr.fere.formulas_eq.rst", "auto/ase2sprkkr.asr.fere.get_dE_alpha.rst", "auto/ase2sprkkr.asr.fere.get_hof.rst", "auto/ase2sprkkr.asr.fere.load_data.rst", "auto/ase2sprkkr.asr.fere.minimize_error.rst", "auto/ase2sprkkr.asr.fere.multiply_formula.rst", "auto/ase2sprkkr.asr.fere.only.rst", "auto/ase2sprkkr.asr.fere.parse_reactions.rst", "auto/ase2sprkkr.asr.fere.parse_refs.rst", "auto/ase2sprkkr.asr.fere.safe_get.rst", "auto/ase2sprkkr.asr.fere.select.rst", "auto/ase2sprkkr.asr.fere.single.rst", "auto/ase2sprkkr.asr.fere.unique.rst", "auto/ase2sprkkr.asr.fere.where.rst", "auto/ase2sprkkr.asr.fermisurface.rst", "auto/ase2sprkkr.asr.fermisurface.Result.rst", "auto/ase2sprkkr.asr.fermisurface.add_fermi.rst", "auto/ase2sprkkr.asr.fermisurface.bz_vertices.rst", "auto/ase2sprkkr.asr.fermisurface.find_contours.rst", "auto/ase2sprkkr.asr.fermisurface.plot_fermi.rst", "auto/ase2sprkkr.asr.fermisurface.webpanel.rst", "auto/ase2sprkkr.asr.formalpolarization.rst", "auto/ase2sprkkr.asr.formalpolarization.AtomsTooCloseToBoundary.rst", "auto/ase2sprkkr.asr.formalpolarization.distance_to_non_pbc_boundary.rst", "auto/ase2sprkkr.asr.formalpolarization.get_atomic_polarization_phase.rst", "auto/ase2sprkkr.asr.formalpolarization.get_dipole_polarization_phase.rst", "auto/ase2sprkkr.asr.formalpolarization.get_electronic_polarization_phase.rst", "auto/ase2sprkkr.asr.formalpolarization.get_wavefunctions.rst", "auto/ase2sprkkr.asr.gs.rst", "auto/ase2sprkkr.asr.gs.GapsResult.rst", "auto/ase2sprkkr.asr.gs.Result.rst", "auto/ase2sprkkr.asr.gs.VacuumLevelResults.rst", "auto/ase2sprkkr.asr.gs.bz_with_band_extremums.rst", "auto/ase2sprkkr.asr.gs.evacdiff.rst", "auto/ase2sprkkr.asr.gs.gaps.rst", "auto/ase2sprkkr.asr.gs.get_1bz_k.rst", "auto/ase2sprkkr.asr.gs.get_gap_info.rst", "auto/ase2sprkkr.asr.gs.vacuumlevels.rst", "auto/ase2sprkkr.asr.gs.webpanel.rst", "auto/ase2sprkkr.asr.gw.rst", "auto/ase2sprkkr.asr.gw.Result.rst", "auto/ase2sprkkr.asr.gw.bs_gw.rst", "auto/ase2sprkkr.asr.gw.get_kpts_size.rst", "auto/ase2sprkkr.asr.gw.webpanel.rst", "auto/ase2sprkkr.asr.hse.rst", "auto/ase2sprkkr.asr.hse.MP_interpolate.rst", "auto/ase2sprkkr.asr.hse.Result.rst", "auto/ase2sprkkr.asr.hse.bs_hse.rst", "auto/ase2sprkkr.asr.hse.get_kpts_size.rst", "auto/ase2sprkkr.asr.hse.hse.rst", "auto/ase2sprkkr.asr.hse.hse_spinorbit.rst", "auto/ase2sprkkr.asr.hse.webpanel.rst", "auto/ase2sprkkr.asr.infraredpolarizability.rst", "auto/ase2sprkkr.asr.infraredpolarizability.Result.rst", "auto/ase2sprkkr.asr.infraredpolarizability.create_plot.rst", "auto/ase2sprkkr.asr.infraredpolarizability.get_phonon_pol.rst", "auto/ase2sprkkr.asr.infraredpolarizability.webpanel.rst", "auto/ase2sprkkr.asr.magnetic_anisotropy.rst", "auto/ase2sprkkr.asr.magnetic_anisotropy.Result.rst", "auto/ase2sprkkr.asr.magnetic_anisotropy.get_spin_axis.rst", "auto/ase2sprkkr.asr.magnetic_anisotropy.get_spin_index.rst", "auto/ase2sprkkr.asr.magnetic_anisotropy.spin_axis.rst", "auto/ase2sprkkr.asr.magnetic_anisotropy.webpanel.rst", "auto/ase2sprkkr.asr.magstate.rst", "auto/ase2sprkkr.asr.magstate.Result.rst", "auto/ase2sprkkr.asr.magstate.get_magstate.rst", "auto/ase2sprkkr.asr.magstate.webpanel.rst", "auto/ase2sprkkr.asr.pdos.rst", "auto/ase2sprkkr.asr.pdos.Result.rst", "auto/ase2sprkkr.asr.pdos.calculate_pdos.rst", "auto/ase2sprkkr.asr.pdos.get_l_a.rst", "auto/ase2sprkkr.asr.pdos.get_ordered_syl_dict.rst", "auto/ase2sprkkr.asr.pdos.get_yl_colors.rst", "auto/ase2sprkkr.asr.pdos.pdos.rst", "auto/ase2sprkkr.asr.pdos.plot_pdos.rst", "auto/ase2sprkkr.asr.pdos.plot_pdos_nosoc.rst", "auto/ase2sprkkr.asr.pdos.plot_pdos_soc.rst", "auto/ase2sprkkr.asr.pdos.webpanel.rst", "auto/ase2sprkkr.asr.phonons.rst", "auto/ase2sprkkr.asr.phonons.Result.rst", "auto/ase2sprkkr.asr.phonons.creates.rst", "auto/ase2sprkkr.asr.phonons.mingocorrection.rst", "auto/ase2sprkkr.asr.phonons.plot_bandstructure.rst", "auto/ase2sprkkr.asr.phonons.plot_phonons.rst", "auto/ase2sprkkr.asr.phonons.requires.rst", "auto/ase2sprkkr.asr.phonons.todict.rst", "auto/ase2sprkkr.asr.phonons.topckl.rst", "auto/ase2sprkkr.asr.phonons.webpanel.rst", "auto/ase2sprkkr.asr.phonopy.rst", "auto/ase2sprkkr.asr.phonopy.Result.rst", "auto/ase2sprkkr.asr.phonopy.distance_to_sc.rst", "auto/ase2sprkkr.asr.phonopy.lattice_vectors.rst", "auto/ase2sprkkr.asr.phonopy.plot_bandstructure.rst", "auto/ase2sprkkr.asr.phonopy.plot_phonons.rst", "auto/ase2sprkkr.asr.phonopy.requires.rst", "auto/ase2sprkkr.asr.phonopy.webpanel.rst", "auto/ase2sprkkr.asr.piezoelectrictensor.rst", "auto/ase2sprkkr.asr.piezoelectrictensor.Result.rst", "auto/ase2sprkkr.asr.piezoelectrictensor.webpanel.rst", "auto/ase2sprkkr.asr.plasmafrequency.rst", "auto/ase2sprkkr.asr.plasmafrequency.Result.rst", "auto/ase2sprkkr.asr.plasmafrequency.get_kpts_size.rst", "auto/ase2sprkkr.asr.plasmafrequency.webpanel.rst", "auto/ase2sprkkr.asr.polarizability.rst", "auto/ase2sprkkr.asr.polarizability.Result.rst", "auto/ase2sprkkr.asr.polarizability.get_kpts_size.rst", "auto/ase2sprkkr.asr.polarizability.polarizability.rst", "auto/ase2sprkkr.asr.polarizability.webpanel.rst", "auto/ase2sprkkr.asr.projected_bandstructure.rst", "auto/ase2sprkkr.asr.projected_bandstructure.Result.rst", "auto/ase2sprkkr.asr.projected_bandstructure.get_bs_sampling.rst", "auto/ase2sprkkr.asr.projected_bandstructure.get_orbital_ldos.rst", "auto/ase2sprkkr.asr.projected_bandstructure.get_pie_markers.rst", "auto/ase2sprkkr.asr.projected_bandstructure.get_pie_slice.rst", "auto/ase2sprkkr.asr.projected_bandstructure.get_yl_ordering.rst", "auto/ase2sprkkr.asr.projected_bandstructure.projected_bs_pbe.rst", "auto/ase2sprkkr.asr.projected_bandstructure.webpanel.rst", "auto/ase2sprkkr.asr.push.rst", "auto/ase2sprkkr.asr.raman.rst", "auto/ase2sprkkr.asr.raman.Result.rst", "auto/ase2sprkkr.asr.raman.count_deg.rst", "auto/ase2sprkkr.asr.raman.raman.rst", "auto/ase2sprkkr.asr.raman.webpanel.rst", "auto/ase2sprkkr.asr.relax.rst", "auto/ase2sprkkr.asr.relax.BrokenSymmetryError.rst", "auto/ase2sprkkr.asr.relax.Result.rst", "auto/ase2sprkkr.asr.relax.SpgAtoms.rst", "auto/ase2sprkkr.asr.relax.is_relax_done.rst", "auto/ase2sprkkr.asr.relax.myBFGS.rst", "auto/ase2sprkkr.asr.relax.relax.rst", "auto/ase2sprkkr.asr.relax.set_initial_magnetic_moments.rst", "auto/ase2sprkkr.asr.setinfo.rst", "auto/ase2sprkkr.asr.setinfo.KeyValuePair.rst", "auto/ase2sprkkr.asr.setinfo.check_key_value.rst", "auto/ase2sprkkr.asr.setup.rst", "auto/ase2sprkkr.asr.setup.decorate.rst", "auto/ase2sprkkr.asr.setup.decorate.apply_substitution.rst", "auto/ase2sprkkr.asr.setup.decorate.find_substitutions.rst", "auto/ase2sprkkr.asr.setup.decorate.generate_structures.rst", "auto/ase2sprkkr.asr.setup.decorate.get_p_ab.rst", "auto/ase2sprkkr.asr.setup.defects.rst", "auto/ase2sprkkr.asr.setup.defects.collect_data.rst", "auto/ase2sprkkr.asr.setup.defects.create_folder_structure.rst", "auto/ase2sprkkr.asr.setup.defects.setup_defects.rst", "auto/ase2sprkkr.asr.setup.defects.setup_supercell.rst", "auto/ase2sprkkr.asr.setup.displacements.rst", "auto/ase2sprkkr.asr.setup.displacements.create_displacements_folder.rst", "auto/ase2sprkkr.asr.setup.displacements.displace_atom.rst", "auto/ase2sprkkr.asr.setup.displacements.get_all_displacements.rst", "auto/ase2sprkkr.asr.setup.displacements.get_displacement_folder.rst", "auto/ase2sprkkr.asr.setup.magnetize.rst", "auto/ase2sprkkr.asr.setup.materials.rst", "auto/ase2sprkkr.asr.setup.params.rst", "auto/ase2sprkkr.asr.setup.scanparams.rst", "auto/ase2sprkkr.asr.setup.strains.rst", "auto/ase2sprkkr.asr.setup.strains.get_relevant_strains.rst", "auto/ase2sprkkr.asr.setup.strains.get_strained_folder_name.rst", "auto/ase2sprkkr.asr.setup.strains.setup_strains.rst", "auto/ase2sprkkr.asr.setup.symmetrize.rst", "auto/ase2sprkkr.asr.setup.symmetrize.symmetrize_atoms.rst", "auto/ase2sprkkr.asr.stiffness.rst", "auto/ase2sprkkr.asr.stiffness.Result.rst", "auto/ase2sprkkr.asr.stiffness.webpanel.rst", "auto/ase2sprkkr.asr.structureinfo.rst", "auto/ase2sprkkr.asr.structureinfo.Result.rst", "auto/ase2sprkkr.asr.structureinfo.get_reduced_formula.rst", "auto/ase2sprkkr.asr.structureinfo.webpanel.rst", "auto/ase2sprkkr.asr.test.rst", "auto/ase2sprkkr.asr.test.acceptance.rst", "auto/ase2sprkkr.asr.test.acceptance.test_borncharges.rst", "auto/ase2sprkkr.asr.test.acceptance.test_borncharges.test_gpaw_berry_get_berry_phases_integration.rst", "auto/ase2sprkkr.asr.test.acceptance.test_piezoelectrictensor.rst", "auto/ase2sprkkr.asr.test.acceptance.test_piezoelectrictensor.test_piezo_BN.rst", "auto/ase2sprkkr.asr.test.acceptance.test_relax.rst", "auto/ase2sprkkr.asr.test.acceptance.test_relax.test_relax_fe_gpaw.rst", "auto/ase2sprkkr.asr.test.conftest.rst", "auto/ase2sprkkr.asr.test.conftest.pytest_configure.rst", "auto/ase2sprkkr.asr.test.conftest.pytest_sessionstart.rst", "auto/ase2sprkkr.asr.test.fixtures.rst", "auto/ase2sprkkr.asr.test.fixtures._get_webcontent.rst", "auto/ase2sprkkr.asr.test.fixtures.asr_tmpdir.rst", "auto/ase2sprkkr.asr.test.fixtures.asr_tmpdir_w_params.rst", "auto/ase2sprkkr.asr.test.fixtures.duplicates_test_db.rst", "auto/ase2sprkkr.asr.test.fixtures.get_webcontent.rst", "auto/ase2sprkkr.asr.test.fixtures.mockgpaw.rst", "auto/ase2sprkkr.asr.test.fixtures.set_asr_test_environ_variable.rst", "auto/ase2sprkkr.asr.test.fixtures.test_material.rst", "auto/ase2sprkkr.asr.test.materials.rst", "auto/ase2sprkkr.asr.test.mocks.rst", "auto/ase2sprkkr.asr.test.mocks.gpaw.rst", "auto/ase2sprkkr.asr.test.mocks.gpaw.berryphase.rst", "auto/ase2sprkkr.asr.test.mocks.gpaw.berryphase.get_berry_phases.rst", "auto/ase2sprkkr.asr.test.mocks.gpaw.calculator.rst", "auto/ase2sprkkr.asr.test.mocks.gpaw.calculator.ASRCalculator.rst", "auto/ase2sprkkr.asr.test.mocks.gpaw.calculator.DOSCalculator.rst", "auto/ase2sprkkr.asr.test.mocks.gpaw.calculator.Occupations.rst", "auto/ase2sprkkr.asr.test.mocks.gpaw.calculator.Parameters.rst", "auto/ase2sprkkr.asr.test.mocks.gpaw.calculator.Setups.rst", "auto/ase2sprkkr.asr.test.mocks.gpaw.calculator.WaveFunctions.rst", "auto/ase2sprkkr.asr.test.mocks.gpaw.hybrids.rst", "auto/ase2sprkkr.asr.test.mocks.gpaw.hybrids.eigenvalues.rst", "auto/ase2sprkkr.asr.test.mocks.gpaw.kpt_descriptor.rst", "auto/ase2sprkkr.asr.test.mocks.gpaw.kpt_descriptor.kpts2sizeandoffsets.rst", "auto/ase2sprkkr.asr.test.mocks.gpaw.kpt_descriptor.to1bz.rst", "auto/ase2sprkkr.asr.test.mocks.gpaw.mpi.rst", "auto/ase2sprkkr.asr.test.mocks.gpaw.mpi.barrier.rst", "auto/ase2sprkkr.asr.test.mocks.gpaw.mpi.broadcast.rst", "auto/ase2sprkkr.asr.test.mocks.gpaw.mpi.new_communicator.rst", "auto/ase2sprkkr.asr.test.mocks.gpaw.mpi.world_sum.rst", "auto/ase2sprkkr.asr.test.mocks.gpaw.occupations.rst", "auto/ase2sprkkr.asr.test.mocks.gpaw.occupations.FermiDirac.rst", "auto/ase2sprkkr.asr.test.mocks.gpaw.occupations.create_occ_calc.rst", "auto/ase2sprkkr.asr.test.mocks.gpaw.response.rst", "auto/ase2sprkkr.asr.test.mocks.gpaw.response.bse.rst", "auto/ase2sprkkr.asr.test.mocks.gpaw.response.bse.BSE.rst", "auto/ase2sprkkr.asr.test.mocks.gpaw.response.df.rst", "auto/ase2sprkkr.asr.test.mocks.gpaw.response.df.DielectricFunction.rst", "auto/ase2sprkkr.asr.test.mocks.gpaw.response.g0w0.rst", "auto/ase2sprkkr.asr.test.mocks.gpaw.response.g0w0.G0W0.rst", "auto/ase2sprkkr.asr.test.mocks.gpaw.spinorbit.rst", "auto/ase2sprkkr.asr.test.mocks.gpaw.spinorbit.SOC.rst", "auto/ase2sprkkr.asr.test.mocks.gpaw.spinorbit.soc_eigenstates.rst", "auto/ase2sprkkr.asr.test.mocks.gpaw.symmetry.rst", "auto/ase2sprkkr.asr.test.mocks.gpaw.symmetry.Symmetry.rst", "auto/ase2sprkkr.asr.test.mocks.gpaw.utilities.rst", "auto/ase2sprkkr.asr.test.mocks.gpaw.utilities.dos.rst", "auto/ase2sprkkr.asr.test.mocks.gpaw.utilities.dos.raw_orbital_LDOS.rst", "auto/ase2sprkkr.asr.test.mocks.gpaw.utilities.ibz2bz.rst", "auto/ase2sprkkr.asr.test.mocks.gpaw.utilities.ibz2bz.ibz2bz.rst", "auto/ase2sprkkr.asr.test.mocks.gpaw.utilities.progressbar.rst", "auto/ase2sprkkr.asr.test.mocks.gpaw.utilities.progressbar.ProgressBar.rst", "auto/ase2sprkkr.asr.test.mocks.gpaw.xc.rst", "auto/ase2sprkkr.asr.test.mocks.gpaw.xc.exx.rst", "auto/ase2sprkkr.asr.test.mocks.gpaw.xc.tools.rst", "auto/ase2sprkkr.asr.test.test_bandstructure.rst", "auto/ase2sprkkr.asr.test.test_bandstructure.test_bandstructure_main.rst", "auto/ase2sprkkr.asr.test.test_berry.rst", "auto/ase2sprkkr.asr.test.test_berry.test_berry.rst", "auto/ase2sprkkr.asr.test.test_berry.test_berry_nontrivial.rst", "auto/ase2sprkkr.asr.test.test_borncharges.rst", "auto/ase2sprkkr.asr.test.test_borncharges.test_borncharges.rst", "auto/ase2sprkkr.asr.test.test_bse.rst", "auto/ase2sprkkr.asr.test.test_bse.test_bse.rst", "auto/ase2sprkkr.asr.test.test_cli.rst", "auto/ase2sprkkr.asr.test.test_cli.test_asr.rst", "auto/ase2sprkkr.asr.test.test_cli.test_asr_find.rst", "auto/ase2sprkkr.asr.test.test_cli.test_asr_find_help.rst", "auto/ase2sprkkr.asr.test.test_cli.test_asr_find_no_versions.rst", "auto/ase2sprkkr.asr.test.test_cli.test_asr_list.rst", "auto/ase2sprkkr.asr.test.test_cli.test_asr_results_bandstructure.rst", "auto/ase2sprkkr.asr.test.test_cli.test_asr_results_help.rst", "auto/ase2sprkkr.asr.test.test_cli.test_asr_run.rst", "auto/ase2sprkkr.asr.test.test_convex_hull.rst", "auto/ase2sprkkr.asr.test.test_convex_hull.test_convex_hull.rst", "auto/ase2sprkkr.asr.test.test_core.rst", "auto/ase2sprkkr.asr.test.test_core.recipe.rst", "auto/ase2sprkkr.asr.test.test_core.test_core.rst", "auto/ase2sprkkr.asr.test.test_core.test_recipe_defaults.rst", "auto/ase2sprkkr.asr.test.test_core.test_recipe_setting_new_defaults.rst", "auto/ase2sprkkr.asr.test.test_core.test_recipe_setting_overriding_defaults.rst", "auto/ase2sprkkr.asr.test.test_core_material.rst", "auto/ase2sprkkr.asr.test.test_core_material.test_asr_cli_results_figures_gs.rst", "auto/ase2sprkkr.asr.test.test_core_results.rst", "auto/ase2sprkkr.asr.test.test_core_results.MyResult.rst", "auto/ase2sprkkr.asr.test.test_core_results.MyResultVer0.rst", "auto/ase2sprkkr.asr.test.test_core_results.MyWebPanel.rst", "auto/ase2sprkkr.asr.test.test_core_results.test_read_old_format.rst", "auto/ase2sprkkr.asr.test.test_core_results.test_reading_older_version.rst", "auto/ase2sprkkr.asr.test.test_core_results.test_reading_result.rst", "auto/ase2sprkkr.asr.test.test_core_results.test_results_object.rst", "auto/ase2sprkkr.asr.test.test_database_duplicates.rst", "auto/ase2sprkkr.asr.test.test_database_duplicates.test_database_duplicates.rst", "auto/ase2sprkkr.asr.test.test_database_duplicates.test_database_duplicates_filter_magstate.rst", "auto/ase2sprkkr.asr.test.test_database_duplicates.test_database_duplicates_no_duplicates.rst", "auto/ase2sprkkr.asr.test.test_database_fromtree.rst", "auto/ase2sprkkr.asr.test.test_database_fromtree.folder_tree.rst", "auto/ase2sprkkr.asr.test.test_database_fromtree.make_tree.rst", "auto/ase2sprkkr.asr.test.test_database_fromtree.test_database_fromtree_raises_when_missing_uids.rst", "auto/ase2sprkkr.asr.test.test_database_fromtree.test_database_fromtree_totree.rst", "auto/ase2sprkkr.asr.test.test_database_fromtree.test_database_fromtree_works_without_write_permission.rst", "auto/ase2sprkkr.asr.test.test_database_rmsd.rst", "auto/ase2sprkkr.asr.test.test_database_rmsd.rattle_atoms.rst", "auto/ase2sprkkr.asr.test.test_database_rmsd.test_database_rmsd_duplicates.rst", "auto/ase2sprkkr.asr.test.test_database_rmsd.test_database_rmsd_duplicates_comparison_keys.rst", "auto/ase2sprkkr.asr.test.test_database_rmsd.test_database_rmsd_move_one_atom.rst", "auto/ase2sprkkr.asr.test.test_database_rmsd.test_database_rmsd_none_handling.rst", "auto/ase2sprkkr.asr.test.test_database_rmsd.test_database_rmsd_not_equal.rst", "auto/ase2sprkkr.asr.test.test_database_rmsd.test_database_rmsd_rattled.rst", "auto/ase2sprkkr.asr.test.test_database_rmsd.test_database_rmsd_rotation.rst", "auto/ase2sprkkr.asr.test.test_database_totree.rst", "auto/ase2sprkkr.asr.test.test_database_totree.make_test_db.rst", "auto/ase2sprkkr.asr.test.test_database_totree.test_database_totree.rst", "auto/ase2sprkkr.asr.test.test_database_totree.test_database_totree_files_and_hard_links.rst", "auto/ase2sprkkr.asr.test.test_dimensionality.rst", "auto/ase2sprkkr.asr.test.test_dimensionality.test_dimensionality.rst", "auto/ase2sprkkr.asr.test.test_dimensionality.test_dimensionality_cli.rst", "auto/ase2sprkkr.asr.test.test_emasses.rst", "auto/ase2sprkkr.asr.test.test_emasses._get_all_eigenvalues.rst", "auto/ase2sprkkr.asr.test.test_emasses.resultstest.rst", "auto/ase2sprkkr.asr.test.test_emasses.test_emasses_freelectron.rst", "auto/ase2sprkkr.asr.test.test_emasses.test_emasses_indirect.rst", "auto/ase2sprkkr.asr.test.test_fixtures.rst", "auto/ase2sprkkr.asr.test.test_fixtures.test_env_variables.rst", "auto/ase2sprkkr.asr.test.test_formalpolarization.rst", "auto/ase2sprkkr.asr.test.test_formalpolarization.test_formalpolarization.rst", "auto/ase2sprkkr.asr.test.test_formalpolarization.test_formalpolarization_test_atoms_too_close_to_boundary.rst", "auto/ase2sprkkr.asr.test.test_gs.rst", "auto/ase2sprkkr.asr.test.test_gs.test_gs.rst", "auto/ase2sprkkr.asr.test.test_gs.test_gs_asr_cli_results_figures.rst", "auto/ase2sprkkr.asr.test.test_gs.test_gs_integration_gpaw.rst", "auto/ase2sprkkr.asr.test.test_gw.rst", "auto/ase2sprkkr.asr.test.test_gw.test_gw.rst", "auto/ase2sprkkr.asr.test.test_hse.rst", "auto/ase2sprkkr.asr.test.test_hse.test_hse.rst", "auto/ase2sprkkr.asr.test.test_pdos.rst", "auto/ase2sprkkr.asr.test.test_pdos.test_pdos.rst", "auto/ase2sprkkr.asr.test.test_pdos.test_pdos_full.rst", "auto/ase2sprkkr.asr.test.test_phonons.rst", "auto/ase2sprkkr.asr.test.test_phonons.test_phonons.rst", "auto/ase2sprkkr.asr.test.test_phonopy.rst", "auto/ase2sprkkr.asr.test.test_phonopy.test_phonopy.rst", "auto/ase2sprkkr.asr.test.test_piezoelectrictensor.rst", "auto/ase2sprkkr.asr.test.test_piezoelectrictensor.get_strain_from_atoms.rst", "auto/ase2sprkkr.asr.test.test_piezoelectrictensor.test_piezoelectrictensor.rst", "auto/ase2sprkkr.asr.test.test_piezoelectrictensor.zero_pad_non_pbc_strain_directions.rst", "auto/ase2sprkkr.asr.test.test_plasmafrequency.rst", "auto/ase2sprkkr.asr.test.test_plasmafrequency.test_plasmafrequency.rst", "auto/ase2sprkkr.asr.test.test_polarizability.rst", "auto/ase2sprkkr.asr.test.test_polarizability.test_polarizability.rst", "auto/ase2sprkkr.asr.test.test_projected_bandstructure.rst", "auto/ase2sprkkr.asr.test.test_projected_bandstructure.test_projected_bs_mocked.rst", "auto/ase2sprkkr.asr.test.test_raman.rst", "auto/ase2sprkkr.asr.test.test_raman.test_raman.rst", "auto/ase2sprkkr.asr.test.test_relax.rst", "auto/ase2sprkkr.asr.test.test_relax.test_relax_basic.rst", "auto/ase2sprkkr.asr.test.test_relax.test_relax_bn_gpaw.rst", "auto/ase2sprkkr.asr.test.test_relax.test_relax_emt.rst", "auto/ase2sprkkr.asr.test.test_relax.test_relax_emt_fail_broken_symmetry.rst", "auto/ase2sprkkr.asr.test.test_relax.test_relax_find_higher_symmetry.rst", "auto/ase2sprkkr.asr.test.test_relax.test_relax_magmoms.rst", "auto/ase2sprkkr.asr.test.test_relax.test_relax_si_gpaw.rst", "auto/ase2sprkkr.asr.test.test_setinfo.rst", "auto/ase2sprkkr.asr.test.test_setinfo.test_info.rst", "auto/ase2sprkkr.asr.test.test_setinfo.test_info_call_from_cli.rst", "auto/ase2sprkkr.asr.test.test_setinfo.test_info_raises_with_protected_key.rst", "auto/ase2sprkkr.asr.test.test_setup_decorate.rst", "auto/ase2sprkkr.asr.test.test_setup_decorate.test_setup_decorate_si.rst", "auto/ase2sprkkr.asr.test.test_setup_displacements.rst", "auto/ase2sprkkr.asr.test.test_setup_displacements.test_setup_displacements.rst", "auto/ase2sprkkr.asr.test.test_setup_displacements.test_setup_displacements_displace_atom.rst", "auto/ase2sprkkr.asr.test.test_setup_displacements.test_setup_displacements_get_all_displacements.rst", "auto/ase2sprkkr.asr.test.test_setup_magnetize.rst", "auto/ase2sprkkr.asr.test.test_setup_magnetize.test_setup_magnetize.rst", "auto/ase2sprkkr.asr.test.test_setup_magnetize.test_setup_magnetize_state_inputs.rst", "auto/ase2sprkkr.asr.test.test_setup_materials.rst", "auto/ase2sprkkr.asr.test.test_setup_materials.test_setup_magnetize.rst", "auto/ase2sprkkr.asr.test.test_setup_scanparams.rst", "auto/ase2sprkkr.asr.test.test_setup_scanparams.test_setup_params.rst", "auto/ase2sprkkr.asr.test.test_setup_strains.rst", "auto/ase2sprkkr.asr.test.test_setup_strains.test_setup_strains.rst", "auto/ase2sprkkr.asr.test.test_setup_strains.test_setup_strains_get_relevant_strains.rst", "auto/ase2sprkkr.asr.test.test_setup_symmetrize.rst", "auto/ase2sprkkr.asr.test.test_setup_symmetrize.test_setup_symmetrize.rst", "auto/ase2sprkkr.asr.test.test_stiffness.rst", "auto/ase2sprkkr.asr.test.test_stiffness.test_stiffness_emt.rst", "auto/ase2sprkkr.asr.test.test_stiffness.test_stiffness_gpaw.rst", "auto/ase2sprkkr.asr.utils.rst", "auto/ase2sprkkr.asr.utils.args.rst", "auto/ase2sprkkr.asr.utils.args.parse_arg.rst", "auto/ase2sprkkr.asr.utils.calculator_utils.rst", "auto/ase2sprkkr.asr.utils.calculator_utils.fermi_level.rst", "auto/ase2sprkkr.asr.utils.calculator_utils.get_eigenvalues.rst", "auto/ase2sprkkr.asr.utils.gpw2eigs.rst", "auto/ase2sprkkr.asr.utils.gpw2eigs.calc2eigs.rst", "auto/ase2sprkkr.asr.utils.gpw2eigs.gpw2eigs.rst", "auto/ase2sprkkr.asr.utils.kpts.rst", "auto/ase2sprkkr.asr.utils.kpts.get_kpts_size.rst", "auto/ase2sprkkr.asr.utils.magnetism.rst", "auto/ase2sprkkr.asr.utils.magnetism.is_magnetic.rst", "auto/ase2sprkkr.asr.utils.magnetism.magnetic_atoms.rst", "auto/ase2sprkkr.asr.utils.refinegs.rst", "auto/ase2sprkkr.asr.utils.refinegs.get_filenames.rst", "auto/ase2sprkkr.asr.utils.refinegs.get_parstr.rst", "auto/ase2sprkkr.asr.utils.refinegs.nonselfc.rst", "auto/ase2sprkkr.asr.utils.refinegs.refinegs.rst", "auto/ase2sprkkr.asr.utils.something.rst", "auto/ase2sprkkr.asr.utils.something.calculate_something.rst", "auto/ase2sprkkr.asr.utils.something.collect_data.rst", "auto/ase2sprkkr.asr.utils.something.create_plot.rst", "auto/ase2sprkkr.asr.utils.something.webpanel.rst", "auto/ase2sprkkr.asr.utils.symmetry.rst", "auto/ase2sprkkr.asr.utils.symmetry._atoms2symmetry_gpaw.rst", "auto/ase2sprkkr.asr.utils.symmetry.atoms2spgcell.rst", "auto/ase2sprkkr.asr.utils.symmetry.atoms2symmetry.rst", "auto/ase2sprkkr.asr.utils.symmetry.has_inversion.rst", "auto/ase2sprkkr.asr.utils.symmetry.restrict_spin_projection_2d.rst", "auto/ase2sprkkr.asr.utils.utils.rst", "auto/ase2sprkkr.asr.utils.utils.timed_print.rst", "auto/ase2sprkkr.asr.workflow.rst", "auto/ase2sprkkr.bindings.rst", "auto/ase2sprkkr.bindings.empty_spheres.rst", "auto/ase2sprkkr.bindings.empty_spheres.EmptySpheresResult.rst", "auto/ase2sprkkr.bindings.empty_spheres.add_empty_spheres.rst", "auto/ase2sprkkr.bindings.empty_spheres.empty_spheres.rst", "auto/ase2sprkkr.bindings.empty_spheres.empty_spheres_atoms.rst", "auto/ase2sprkkr.bindings.es_finder.rst", "auto/ase2sprkkr.bindings.es_finder.empty_spheres.rst", "auto/ase2sprkkr.bindings.nomad.rst", "auto/ase2sprkkr.bindings.nomad.nomad.rst", "auto/ase2sprkkr.bindings.nomad.nomad.ExternalEntry.rst", "auto/ase2sprkkr.bindings.nomad.nomad.NomadArchive.rst", "auto/ase2sprkkr.bindings.nomad.nomad.NomadEntry.rst", "auto/ase2sprkkr.bindings.nomad.nomad.map_io_to_nomad.rst", "auto/ase2sprkkr.bindings.nomad.nomad_api.rst", "auto/ase2sprkkr.bindings.nomad.nomad_api.NomadApi.rst", "auto/ase2sprkkr.bindings.nomad.nomad_api.with_token.rst", "auto/ase2sprkkr.bindings.spglib.rst", "auto/ase2sprkkr.bindings.spglib.SpacegroupInfo.rst", "auto/ase2sprkkr.bindings.spglib.possibly_equivalent_sites.rst", "auto/ase2sprkkr.bindings.spglib.spglib_dataset.rst", "auto/ase2sprkkr.bindings.tests.rst", "auto/ase2sprkkr.bindings.tests.init_tests.rst", "auto/ase2sprkkr.bindings.tests.init_tests.TestCase.rst", "auto/ase2sprkkr.bindings.tests.init_tests.arr_testfce.rst", "auto/ase2sprkkr.bindings.tests.init_tests.assertDictEqual.rst", "auto/ase2sprkkr.bindings.tests.init_tests.assertListEqual.rst", "auto/ase2sprkkr.bindings.tests.init_tests.assert_almost_equals.rst", "auto/ase2sprkkr.bindings.tests.init_tests.assert_equals.rst", "auto/ase2sprkkr.bindings.tests.init_tests.extdict.rst", "auto/ase2sprkkr.bindings.tests.init_tests.testfce.rst", "auto/ase2sprkkr.bindings.tests.test_es_finder.rst", "auto/ase2sprkkr.bindings.tests.test_es_finder.TestEsFinder.rst", "auto/ase2sprkkr.bindings.tests.test_spglib.rst", "auto/ase2sprkkr.bindings.tests.test_spglib.TestSpgilib.rst", "auto/ase2sprkkr.bindings.xband.rst", "auto/ase2sprkkr.bindings.xband.spheres.rst", "auto/ase2sprkkr.bindings.xband.symmetry.rst", "auto/ase2sprkkr.bindings.xband.tests.rst", "auto/ase2sprkkr.bindings.xband.tests.init_tests.rst", "auto/ase2sprkkr.bindings.xband.tests.init_tests.TestCase.rst", "auto/ase2sprkkr.bindings.xband.tests.init_tests.arr_testfce.rst", "auto/ase2sprkkr.bindings.xband.tests.init_tests.assertDictEqual.rst", "auto/ase2sprkkr.bindings.xband.tests.init_tests.assertListEqual.rst", "auto/ase2sprkkr.bindings.xband.tests.init_tests.assert_almost_equals.rst", "auto/ase2sprkkr.bindings.xband.tests.init_tests.assert_equals.rst", "auto/ase2sprkkr.bindings.xband.tests.init_tests.extdict.rst", "auto/ase2sprkkr.bindings.xband.tests.init_tests.patch_package.rst", "auto/ase2sprkkr.bindings.xband.tests.init_tests.testfce.rst", "auto/ase2sprkkr.bindings.xband.tests.test_spheres.rst", "auto/ase2sprkkr.bindings.xband.tests.test_spheres.TestSpheres.rst", "auto/ase2sprkkr.common.rst", "auto/ase2sprkkr.common.alternative_types.rst", "auto/ase2sprkkr.common.alternative_types.allowed_types.rst", "auto/ase2sprkkr.common.alternative_types.normalize_type.rst", "auto/ase2sprkkr.common.alternative_types.normalize_type_map.rst", "auto/ase2sprkkr.common.alternative_types.numpy_types.rst", "auto/ase2sprkkr.common.alternative_types.types_alternatives.rst", "auto/ase2sprkkr.common.backward_compatibility.rst", "auto/ase2sprkkr.common.configuration.rst", "auto/ase2sprkkr.common.configuration.Configuration.rst", "auto/ase2sprkkr.common.configuration_containers.rst", "auto/ase2sprkkr.common.configuration_containers.BaseConfigurationContainer.rst", "auto/ase2sprkkr.common.configuration_containers.BaseSection.rst", "auto/ase2sprkkr.common.configuration_containers.ConfigurationContainer.rst", "auto/ase2sprkkr.common.configuration_containers.CustomSection.rst", "auto/ase2sprkkr.common.configuration_containers.DisabledAttributeError.rst", "auto/ase2sprkkr.common.configuration_containers.RootConfigurationContainer.rst", "auto/ase2sprkkr.common.configuration_containers.Section.rst", "auto/ase2sprkkr.common.configuration_definitions.rst", "auto/ase2sprkkr.common.configuration_definitions.BaseDefinition.rst", "auto/ase2sprkkr.common.configuration_definitions.ControlDefinition.rst", "auto/ase2sprkkr.common.configuration_definitions.Gather.rst", "auto/ase2sprkkr.common.configuration_definitions.Ignored.rst", "auto/ase2sprkkr.common.configuration_definitions.NotAllowed.rst", "auto/ase2sprkkr.common.configuration_definitions.RealItemDefinition.rst", "auto/ase2sprkkr.common.configuration_definitions.SeparatorDefinition.rst", "auto/ase2sprkkr.common.configuration_definitions.Stub.rst", "auto/ase2sprkkr.common.configuration_definitions.Switch.rst", "auto/ase2sprkkr.common.configuration_definitions.VirtualDefinition.rst", "auto/ase2sprkkr.common.configuration_definitions.gather.rst", "auto/ase2sprkkr.common.configuration_definitions.if_defined.rst", "auto/ase2sprkkr.common.configuration_definitions.if_not_defined.rst", "auto/ase2sprkkr.common.configuration_definitions.switch.rst", "auto/ase2sprkkr.common.container_definitions.rst", "auto/ase2sprkkr.common.container_definitions.ConfigurationRootDefinition.rst", "auto/ase2sprkkr.common.container_definitions.ContainerDefinition.rst", "auto/ase2sprkkr.common.container_definitions.SectionDefinition.rst", "auto/ase2sprkkr.common.debug.rst", "auto/ase2sprkkr.common.debug.add_debug_hook.rst", "auto/ase2sprkkr.common.debug.debug_pyparsing.rst", "auto/ase2sprkkr.common.decorators.rst", "auto/ase2sprkkr.common.decorators.add_called_class_as_argument.rst", "auto/ase2sprkkr.common.decorators.add_to_signature.rst", "auto/ase2sprkkr.common.decorators.cached_class_property.rst", "auto/ase2sprkkr.common.decorators.cached_property.rst", "auto/ase2sprkkr.common.decorators.class_property.rst", "auto/ase2sprkkr.common.decorators.maybeclassmethod.rst", "auto/ase2sprkkr.common.decorators.std_cached_property.rst", "auto/ase2sprkkr.common.decorators.warnings_from_here.rst", "auto/ase2sprkkr.common.directory.rst", "auto/ase2sprkkr.common.directory.Directory.rst", "auto/ase2sprkkr.common.doc.rst", "auto/ase2sprkkr.common.doc.process_input_parameters_definition.rst", "auto/ase2sprkkr.common.doc.verbatim.rst", "auto/ase2sprkkr.common.formats.rst", "auto/ase2sprkkr.common.formats.format_for_string.rst", "auto/ase2sprkkr.common.formats.fortran_format.rst", "auto/ase2sprkkr.common.formats.full_format_for_string.rst", "auto/ase2sprkkr.common.generated_configuration_definitions.rst", "auto/ase2sprkkr.common.generated_configuration_definitions.BaseGeneratedValueDefinition.rst", "auto/ase2sprkkr.common.generated_configuration_definitions.GeneratedValueDefinition.rst", "auto/ase2sprkkr.common.generated_configuration_definitions.Length.rst", "auto/ase2sprkkr.common.generated_configuration_definitions.NumpyViewDefinition.rst", "auto/ase2sprkkr.common.grammar.rst", "auto/ase2sprkkr.common.grammar.SkipToRegex.rst", "auto/ase2sprkkr.common.grammar.White.rst", "auto/ase2sprkkr.common.grammar.addConditionEx.rst", "auto/ase2sprkkr.common.grammar.addParseActionEx.rst", "auto/ase2sprkkr.common.grammar.delimitedList.rst", "auto/ase2sprkkr.common.grammar.end_of_file.rst", "auto/ase2sprkkr.common.grammar.generate_grammar.rst", "auto/ase2sprkkr.common.grammar.line_end.rst", "auto/ase2sprkkr.common.grammar.optional_line_end.rst", "auto/ase2sprkkr.common.grammar.optional_quote.rst", "auto/ase2sprkkr.common.grammar.replace_whitechars.rst", "auto/ase2sprkkr.common.grammar.separator_grammar.rst", "auto/ase2sprkkr.common.grammar.separator_pattern.rst", "auto/ase2sprkkr.common.grammar_types.rst", "auto/ase2sprkkr.common.grammar_types.arrays.rst", "auto/ase2sprkkr.common.grammar_types.arrays.Array.rst", "auto/ase2sprkkr.common.grammar_types.arrays.Complex.rst", "auto/ase2sprkkr.common.grammar_types.arrays.Sequence.rst", "auto/ase2sprkkr.common.grammar_types.arrays.SetOf.rst", "auto/ase2sprkkr.common.grammar_types.arrays.SpecialColumn.rst", "auto/ase2sprkkr.common.grammar_types.arrays.Table.rst", "auto/ase2sprkkr.common.grammar_types.arrays.complex_number.rst", "auto/ase2sprkkr.common.grammar_types.arrays.set_of_integers.rst", "auto/ase2sprkkr.common.grammar_types.arrays.set_of_reals.rst", "auto/ase2sprkkr.common.grammar_types.basic.rst", "auto/ase2sprkkr.common.grammar_types.basic.BaseBool.rst", "auto/ase2sprkkr.common.grammar_types.basic.BaseRealWithUnits.rst", "auto/ase2sprkkr.common.grammar_types.basic.BaseString.rst", "auto/ase2sprkkr.common.grammar_types.basic.BasicSeparator.rst", "auto/ase2sprkkr.common.grammar_types.basic.BlankSeparator.rst", "auto/ase2sprkkr.common.grammar_types.basic.Bool.rst", "auto/ase2sprkkr.common.grammar_types.basic.Date.rst", "auto/ase2sprkkr.common.grammar_types.basic.DefKeyword.rst", "auto/ase2sprkkr.common.grammar_types.basic.Energy.rst", "auto/ase2sprkkr.common.grammar_types.basic.FixedPointNumber.rst", "auto/ase2sprkkr.common.grammar_types.basic.Flag.rst", "auto/ase2sprkkr.common.grammar_types.basic.IntBool.rst", "auto/ase2sprkkr.common.grammar_types.basic.Integer.rst", "auto/ase2sprkkr.common.grammar_types.basic.Keyword.rst", "auto/ase2sprkkr.common.grammar_types.basic.LineString.rst", "auto/ase2sprkkr.common.grammar_types.basic.Number.rst", "auto/ase2sprkkr.common.grammar_types.basic.ObjectNumber.rst", "auto/ase2sprkkr.common.grammar_types.basic.QString.rst", "auto/ase2sprkkr.common.grammar_types.basic.Real.rst", "auto/ase2sprkkr.common.grammar_types.basic.RealWithUnits.rst", "auto/ase2sprkkr.common.grammar_types.basic.Separator.rst", "auto/ase2sprkkr.common.grammar_types.basic.String.rst", "auto/ase2sprkkr.common.grammar_types.basic.Unsigned.rst", "auto/ase2sprkkr.common.grammar_types.basic.boolean.rst", "auto/ase2sprkkr.common.grammar_types.basic.date.rst", "auto/ase2sprkkr.common.grammar_types.basic.energy.rst", "auto/ase2sprkkr.common.grammar_types.basic.flag.rst", "auto/ase2sprkkr.common.grammar_types.basic.int_bool.rst", "auto/ase2sprkkr.common.grammar_types.basic.integer.rst", "auto/ase2sprkkr.common.grammar_types.basic.line_string.rst", "auto/ase2sprkkr.common.grammar_types.basic.qstring.rst", "auto/ase2sprkkr.common.grammar_types.basic.real.rst", "auto/ase2sprkkr.common.grammar_types.basic.separator.rst", "auto/ase2sprkkr.common.grammar_types.basic.string.rst", "auto/ase2sprkkr.common.grammar_types.basic.unsigned.rst", "auto/ase2sprkkr.common.grammar_types.data.rst", "auto/ase2sprkkr.common.grammar_types.data.NumpyArray.rst", "auto/ase2sprkkr.common.grammar_types.data.Prefixed.rst", "auto/ase2sprkkr.common.grammar_types.data.RawData.rst", "auto/ase2sprkkr.common.grammar_types.data.RestOfTheFile.rst", "auto/ase2sprkkr.common.grammar_types.grammar_type.rst", "auto/ase2sprkkr.common.grammar_types.grammar_type.GrammarType.rst", "auto/ase2sprkkr.common.grammar_types.grammar_type.TypedGrammarType.rst", "auto/ase2sprkkr.common.grammar_types.grammar_type.compare_numpy_values.rst", "auto/ase2sprkkr.common.grammar_types.grammar_type.format_for_type.rst", "auto/ase2sprkkr.common.grammar_types.grammar_type.recognized_set_types.rst", "auto/ase2sprkkr.common.grammar_types.grammar_type.type_from_default_value.rst", "auto/ase2sprkkr.common.grammar_types.grammar_type.type_from_type.rst", "auto/ase2sprkkr.common.grammar_types.grammar_type.type_from_value.rst", "auto/ase2sprkkr.common.grammar_types.mixed.rst", "auto/ase2sprkkr.common.grammar_types.recognized_set_types.rst", "auto/ase2sprkkr.common.grammar_types.type_from_set_map.rst", "auto/ase2sprkkr.common.grammar_types.type_from_type_map.rst", "auto/ase2sprkkr.common.grammar_types.warnings.rst", "auto/ase2sprkkr.common.grammar_types.warnings.SuspiciousValueWarning.rst", "auto/ase2sprkkr.common.init_tests.rst", "auto/ase2sprkkr.common.init_tests.TestCase.rst", "auto/ase2sprkkr.common.init_tests.arr_testfce.rst", "auto/ase2sprkkr.common.init_tests.assertDictEqual.rst", "auto/ase2sprkkr.common.init_tests.assertListEqual.rst", "auto/ase2sprkkr.common.init_tests.assert_almost_equals.rst", "auto/ase2sprkkr.common.init_tests.assert_equals.rst", "auto/ase2sprkkr.common.init_tests.extdict.rst", "auto/ase2sprkkr.common.init_tests.patch_package.rst", "auto/ase2sprkkr.common.init_tests.testfce.rst", "auto/ase2sprkkr.common.lazy_string.rst", "auto/ase2sprkkr.common.lazy_string.LazyString.rst", "auto/ase2sprkkr.common.misc.rst", "auto/ase2sprkkr.common.misc.as_integer.rst", "auto/ase2sprkkr.common.misc.config_property.rst", "auto/ase2sprkkr.common.misc.copy_list.rst", "auto/ase2sprkkr.common.misc.dict_first_item.rst", "auto/ase2sprkkr.common.misc.first_non_none.rst", "auto/ase2sprkkr.common.misc.njit.rst", "auto/ase2sprkkr.common.misc.numpy_index.rst", "auto/ase2sprkkr.common.no_output.rst", "auto/ase2sprkkr.common.no_output.NoOutput.rst", "auto/ase2sprkkr.common.options.rst", "auto/ase2sprkkr.common.options.BaseOption.rst", "auto/ase2sprkkr.common.options.CustomOption.rst", "auto/ase2sprkkr.common.options.DangerousValue.rst", "auto/ase2sprkkr.common.options.Dummy.rst", "auto/ase2sprkkr.common.options.DummyStub.rst", "auto/ase2sprkkr.common.options.Option.rst", "auto/ase2sprkkr.common.parsing_results.rst", "auto/ase2sprkkr.common.parsing_results.ArrayKey.rst", "auto/ase2sprkkr.common.parsing_results.DefDictKey.rst", "auto/ase2sprkkr.common.parsing_results.DictKey.rst", "auto/ase2sprkkr.common.parsing_results.IgnoredKey.rst", "auto/ase2sprkkr.common.parsing_results.Key.rst", "auto/ase2sprkkr.common.parsing_results.RepeatedKey.rst", "auto/ase2sprkkr.common.parsing_results.Result.rst", "auto/ase2sprkkr.common.parsing_results.SubKey.rst", "auto/ase2sprkkr.common.parsing_results.ValidateKey.rst", "auto/ase2sprkkr.common.parsing_results.Values.rst", "auto/ase2sprkkr.common.parsing_results.dict_from_parsed.rst", "auto/ase2sprkkr.common.process_output_reader.rst", "auto/ase2sprkkr.common.process_output_reader.AsyncioFileReader.rst", "auto/ase2sprkkr.common.process_output_reader.ProcessOutputReader.rst", "auto/ase2sprkkr.common.process_output_reader.readline.rst", "auto/ase2sprkkr.common.process_output_reader.readline_until.rst", "auto/ase2sprkkr.common.repeated_configuration_containers.rst", "auto/ase2sprkkr.common.repeated_configuration_containers.RepeatedConfigurationContainer.rst", "auto/ase2sprkkr.common.section_adaptors.rst", "auto/ase2sprkkr.common.section_adaptors.MergeSectionAdaptor.rst", "auto/ase2sprkkr.common.section_adaptors.MergeSectionDefinitionAdaptor.rst", "auto/ase2sprkkr.common.section_adaptors.SectionAdaptor.rst", "auto/ase2sprkkr.common.subprocess.rst", "auto/ase2sprkkr.common.subprocess._call_function.rst", "auto/ase2sprkkr.common.subprocess.ignore_signal.rst", "auto/ase2sprkkr.common.subprocess.in_subprocess.rst", "auto/ase2sprkkr.common.test.rst", "auto/ase2sprkkr.common.test.init_tests.rst", "auto/ase2sprkkr.common.test.init_tests.TestCase.rst", "auto/ase2sprkkr.common.test.init_tests.arr_testfce.rst", "auto/ase2sprkkr.common.test.init_tests.assertDictEqual.rst", "auto/ase2sprkkr.common.test.init_tests.assertListEqual.rst", "auto/ase2sprkkr.common.test.init_tests.assert_almost_equals.rst", "auto/ase2sprkkr.common.test.init_tests.assert_equals.rst", "auto/ase2sprkkr.common.test.init_tests.extdict.rst", "auto/ase2sprkkr.common.test.init_tests.testfce.rst", "auto/ase2sprkkr.common.test.test_common.rst", "auto/ase2sprkkr.common.test.test_common.TestCommon.rst", "auto/ase2sprkkr.common.test.test_grammar_types.rst", "auto/ase2sprkkr.common.test.test_grammar_types.TestGrammar.rst", "auto/ase2sprkkr.common.tools.rst", "auto/ase2sprkkr.common.tools.append_id_to_filename.rst", "auto/ase2sprkkr.common.tools.main.rst", "auto/ase2sprkkr.common.tools.parse_inches.rst", "auto/ase2sprkkr.common.tools.parse_named_option.rst", "auto/ase2sprkkr.common.tools.parse_tuple_function.rst", "auto/ase2sprkkr.common.unique_values.rst", "auto/ase2sprkkr.common.unique_values.UniqueValuesMapping.rst", "auto/ase2sprkkr.common.value_definitions.rst", "auto/ase2sprkkr.common.value_definitions.InheritingValueModifier.rst", "auto/ase2sprkkr.common.value_definitions.ValueDefinition.rst", "auto/ase2sprkkr.common.value_definitions.ValueModifier.rst", "auto/ase2sprkkr.common.warnings.rst", "auto/ase2sprkkr.common.warnings.DataValidityError.rst", "auto/ase2sprkkr.common.warnings.DataValidityWarning.rst", "auto/ase2sprkkr.common.yaml.rst", "auto/ase2sprkkr.common.yaml.IndentDumper.rst", "auto/ase2sprkkr.config.rst", "auto/ase2sprkkr.config.ConfigFileDefinition.rst", "auto/ase2sprkkr.config.Configuration.rst", "auto/ase2sprkkr.config.Section.rst", "auto/ase2sprkkr.config._get_suffix.rst", "auto/ase2sprkkr.config.find_default_mpi_runner.rst", "auto/ase2sprkkr.config.get_default_mpi_runner.rst", "auto/ase2sprkkr.config.load_user_preferences.rst", "auto/ase2sprkkr.config.mpi_runner.rst", "auto/ase2sprkkr.config.user_preferences_file.rst", "auto/ase2sprkkr.examples.rst", "auto/ase2sprkkr.examples.A1_Fe_scf_simple.rst", "auto/ase2sprkkr.examples.A1_Fe_scf_simple.Fe.rst", "auto/ase2sprkkr.examples.A1_Fe_scf_simple.Fe.main.rst", "auto/ase2sprkkr.examples.A2_Fe_scf_input_modifications.rst", "auto/ase2sprkkr.examples.A2_Fe_scf_input_modifications.Fe.rst", "auto/ase2sprkkr.examples.A2_Fe_scf_input_modifications.Fe.main.rst", "auto/ase2sprkkr.examples.A3_Fe_dos.rst", "auto/ase2sprkkr.examples.A3_Fe_dos.Fe.rst", "auto/ase2sprkkr.examples.A3_Fe_dos.Fe.main.rst", "auto/ase2sprkkr.examples.A4_CPA_Example.rst", "auto/ase2sprkkr.examples.A4_CPA_Example.Ni_doped_STO.rst", "auto/ase2sprkkr.examples.A4_CPA_Example.Ni_doped_STO.main.rst", "auto/ase2sprkkr.examples.A5_Al_EOS.rst", "auto/ase2sprkkr.examples.A5_Al_EOS.Al.rst", "auto/ase2sprkkr.examples.A5_Al_EOS.Al.main.rst", "auto/ase2sprkkr.examples.A6_Cu_MSSPEC.rst", "auto/ase2sprkkr.examples.A6_Cu_MSSPEC.Cu.rst", "auto/ase2sprkkr.examples.A6_Cu_MSSPEC.Cu.main.rst", "auto/ase2sprkkr.examples.A7_SrTiO3_MSSPEC.rst", "auto/ase2sprkkr.examples.A7_SrTiO3_MSSPEC.STO.rst", "auto/ase2sprkkr.examples.A7_SrTiO3_MSSPEC.STO.main.rst", "auto/ase2sprkkr.examples.A8_ARPES_and_plotting.rst", "auto/ase2sprkkr.examples.A8_ARPES_and_plotting.arpes.rst", "auto/ase2sprkkr.examples.A8_ARPES_and_plotting.arpes.main.rst", "auto/ase2sprkkr.input_parameters.rst", "auto/ase2sprkkr.input_parameters.definitions.rst", "auto/ase2sprkkr.input_parameters.definitions.arpes.rst", "auto/ase2sprkkr.input_parameters.definitions.arpes.input_parameters.rst", "auto/ase2sprkkr.input_parameters.definitions.bsfek.rst", "auto/ase2sprkkr.input_parameters.definitions.bsfek.input_parameters.rst", "auto/ase2sprkkr.input_parameters.definitions.bsfkk.rst", "auto/ase2sprkkr.input_parameters.definitions.bsfkk.input_parameters.rst", "auto/ase2sprkkr.input_parameters.definitions.dos.rst", "auto/ase2sprkkr.input_parameters.definitions.dos.input_parameters.rst", "auto/ase2sprkkr.input_parameters.definitions.gilbert.rst", "auto/ase2sprkkr.input_parameters.definitions.gilbert.input_parameters.rst", "auto/ase2sprkkr.input_parameters.definitions.jxc.rst", "auto/ase2sprkkr.input_parameters.definitions.jxc.input_parameters.rst", "auto/ase2sprkkr.input_parameters.definitions.marpes.rst", "auto/ase2sprkkr.input_parameters.definitions.marpes.input_parameters.rst", "auto/ase2sprkkr.input_parameters.definitions.phagen.rst", "auto/ase2sprkkr.input_parameters.definitions.phagen.input_parameters.rst", "auto/ase2sprkkr.input_parameters.definitions.scf.rst", "auto/ase2sprkkr.input_parameters.definitions.scf.input_parameters.rst", "auto/ase2sprkkr.input_parameters.definitions.sections.rst", "auto/ase2sprkkr.input_parameters.definitions.sections.CONTROL.rst", "auto/ase2sprkkr.input_parameters.definitions.sections.CPA.rst", "auto/ase2sprkkr.input_parameters.definitions.sections.ENERGY.rst", "auto/ase2sprkkr.input_parameters.definitions.sections.MODE.rst", "auto/ase2sprkkr.input_parameters.definitions.sections.SCF.rst", "auto/ase2sprkkr.input_parameters.definitions.sections.SITES.rst", "auto/ase2sprkkr.input_parameters.definitions.sections.STRCONST.rst", "auto/ase2sprkkr.input_parameters.definitions.sections.TASK.rst", "auto/ase2sprkkr.input_parameters.definitions.sections.TAU.rst", "auto/ase2sprkkr.input_parameters.definitions.sections.TauSection.rst", "auto/ase2sprkkr.input_parameters.definitions.sections._nktab_value.rst", "auto/ase2sprkkr.input_parameters.definitions.sections.xc.rst", "auto/ase2sprkkr.input_parameters.input_parameters.rst", "auto/ase2sprkkr.input_parameters.input_parameters.InputParameters.rst", "auto/ase2sprkkr.input_parameters.input_parameters.InputSection.rst", "auto/ase2sprkkr.input_parameters.input_parameters_definitions.rst", "auto/ase2sprkkr.input_parameters.input_parameters_definitions.InputParametersDefinition.rst", "auto/ase2sprkkr.input_parameters.input_parameters_definitions.InputSectionDefinition.rst", "auto/ase2sprkkr.input_parameters.input_parameters_definitions.InputValueDefinition.rst", "auto/ase2sprkkr.input_parameters.test.rst", "auto/ase2sprkkr.input_parameters.test.init_tests.rst", "auto/ase2sprkkr.input_parameters.test.init_tests.TestCase.rst", "auto/ase2sprkkr.input_parameters.test.init_tests.arr_testfce.rst", "auto/ase2sprkkr.input_parameters.test.init_tests.assertDictEqual.rst", "auto/ase2sprkkr.input_parameters.test.init_tests.assertListEqual.rst", "auto/ase2sprkkr.input_parameters.test.init_tests.assert_almost_equals.rst", "auto/ase2sprkkr.input_parameters.test.init_tests.assert_equals.rst", "auto/ase2sprkkr.input_parameters.test.init_tests.extdict.rst", "auto/ase2sprkkr.input_parameters.test.init_tests.testfce.rst", "auto/ase2sprkkr.input_parameters.test.test_definitions.rst", "auto/ase2sprkkr.input_parameters.test.test_definitions.TestDefinitions.rst", "auto/ase2sprkkr.input_parameters.test.test_input_parameters.rst", "auto/ase2sprkkr.input_parameters.test.test_input_parameters.TestInputParameters.rst", "auto/ase2sprkkr.input_parameters.test.test_input_parameters.ar.rst", "auto/ase2sprkkr.output_files.rst", "auto/ase2sprkkr.output_files.definitions.rst", "auto/ase2sprkkr.output_files.definitions.Arithmetic.rst", "auto/ase2sprkkr.output_files.definitions.CommonOutputFile.rst", "auto/ase2sprkkr.output_files.definitions.OutputFile.rst", "auto/ase2sprkkr.output_files.definitions.UnknownDataValue.rst", "auto/ase2sprkkr.output_files.definitions.bsf.rst", "auto/ase2sprkkr.output_files.definitions.bsf.BSFDefinition.rst", "auto/ase2sprkkr.output_files.definitions.bsf.BSFOutputFile.rst", "auto/ase2sprkkr.output_files.definitions.bsf.create_definition.rst", "auto/ase2sprkkr.output_files.definitions.dos.rst", "auto/ase2sprkkr.output_files.definitions.dos.DOS.rst", "auto/ase2sprkkr.output_files.definitions.dos.DOSDefinition.rst", "auto/ase2sprkkr.output_files.definitions.dos.DOSOutputFile.rst", "auto/ase2sprkkr.output_files.definitions.dos.create_definition.rst", "auto/ase2sprkkr.output_files.definitions.spc.rst", "auto/ase2sprkkr.output_files.definitions.spc.ARPESDefinition.rst", "auto/ase2sprkkr.output_files.definitions.spc.ARPESOutputFile.rst", "auto/ase2sprkkr.output_files.definitions.spc.create_definition.rst", "auto/ase2sprkkr.output_files.output_files.rst", "auto/ase2sprkkr.output_files.output_files.Arithmetic.rst", "auto/ase2sprkkr.output_files.output_files.CommonOutputFile.rst", "auto/ase2sprkkr.output_files.output_files.OutputFile.rst", "auto/ase2sprkkr.output_files.output_files.UnknownDataValue.rst", "auto/ase2sprkkr.output_files.output_files_definitions.rst", "auto/ase2sprkkr.output_files.output_files_definitions.BlankSeparator.rst", "auto/ase2sprkkr.output_files.output_files_definitions.OutputFileDefinition.rst", "auto/ase2sprkkr.output_files.output_files_definitions.OutputFileValueDefinition.rst", "auto/ase2sprkkr.output_files.output_files_definitions.Separator.rst", "auto/ase2sprkkr.output_files.output_files_definitions.create_output_file_definition.rst", "auto/ase2sprkkr.output_files.output_files_definitions.output_file_header.rst", "auto/ase2sprkkr.output_files.test.rst", "auto/ase2sprkkr.output_files.test.init_tests.rst", "auto/ase2sprkkr.output_files.test.init_tests.TestCase.rst", "auto/ase2sprkkr.output_files.test.init_tests.arr_testfce.rst", "auto/ase2sprkkr.output_files.test.init_tests.assertDictEqual.rst", "auto/ase2sprkkr.output_files.test.init_tests.assertListEqual.rst", "auto/ase2sprkkr.output_files.test.init_tests.assert_almost_equals.rst", "auto/ase2sprkkr.output_files.test.init_tests.assert_equals.rst", "auto/ase2sprkkr.output_files.test.init_tests.extdict.rst", "auto/ase2sprkkr.output_files.test.init_tests.testfce.rst", "auto/ase2sprkkr.output_files.test.test_files.rst", "auto/ase2sprkkr.output_files.test.test_files.TestOutput.rst", "auto/ase2sprkkr.outputs.rst", "auto/ase2sprkkr.outputs.output_definitions.rst", "auto/ase2sprkkr.outputs.output_definitions.OutputNonameValueDefinition.rst", "auto/ase2sprkkr.outputs.output_definitions.OutputSectionDefinition.rst", "auto/ase2sprkkr.outputs.output_definitions.OutputValueDefinition.rst", "auto/ase2sprkkr.outputs.output_definitions.OutputValueEqualDefinition.rst", "auto/ase2sprkkr.outputs.readers.rst", "auto/ase2sprkkr.outputs.readers.arpes.rst", "auto/ase2sprkkr.outputs.readers.arpes.ArpesProcess.rst", "auto/ase2sprkkr.outputs.readers.arpes.ArpesResult.rst", "auto/ase2sprkkr.outputs.readers.bsf.rst", "auto/ase2sprkkr.outputs.readers.bsf.BsfProcess.rst", "auto/ase2sprkkr.outputs.readers.bsf.BsfResult.rst", "auto/ase2sprkkr.outputs.readers.default.rst", "auto/ase2sprkkr.outputs.readers.default.DefaultOutputReader.rst", "auto/ase2sprkkr.outputs.readers.default.DefaultProcess.rst", "auto/ase2sprkkr.outputs.readers.default.DefaultResult.rst", "auto/ase2sprkkr.outputs.readers.dos.rst", "auto/ase2sprkkr.outputs.readers.dos.DosProcess.rst", "auto/ase2sprkkr.outputs.readers.dos.DosResult.rst", "auto/ase2sprkkr.outputs.readers.scf.rst", "auto/ase2sprkkr.outputs.readers.scf.RealOrStars.rst", "auto/ase2sprkkr.outputs.readers.scf.ScfOutputReader.rst", "auto/ase2sprkkr.outputs.readers.scf.ScfProcess.rst", "auto/ase2sprkkr.outputs.readers.scf.ScfResult.rst", "auto/ase2sprkkr.outputs.readers.scf.atomic_types_definition.rst", "auto/ase2sprkkr.outputs.sprkkr_output_reader.rst", "auto/ase2sprkkr.outputs.sprkkr_output_reader.SprKkrOutputReader.rst", "auto/ase2sprkkr.outputs.task_result.rst", "auto/ase2sprkkr.outputs.task_result.KkrProcess.rst", "auto/ase2sprkkr.outputs.task_result.TaskResult.rst", "auto/ase2sprkkr.outputs.test.rst", "auto/ase2sprkkr.outputs.test.init_tests.rst", "auto/ase2sprkkr.outputs.test.init_tests.TestCase.rst", "auto/ase2sprkkr.outputs.test.init_tests.arr_testfce.rst", "auto/ase2sprkkr.outputs.test.init_tests.assertDictEqual.rst", "auto/ase2sprkkr.outputs.test.init_tests.assertListEqual.rst", "auto/ase2sprkkr.outputs.test.init_tests.assert_almost_equals.rst", "auto/ase2sprkkr.outputs.test.init_tests.assert_equals.rst", "auto/ase2sprkkr.outputs.test.init_tests.extdict.rst", "auto/ase2sprkkr.outputs.test.init_tests.testfce.rst", "auto/ase2sprkkr.outputs.test.test_output.rst", "auto/ase2sprkkr.outputs.test.test_output.TestOutput.rst", "auto/ase2sprkkr.physics.rst", "auto/ase2sprkkr.physics.lattice_data.rst", "auto/ase2sprkkr.physics.lattice_data.LatticeData.rst", "auto/ase2sprkkr.physics.lattice_data.Pearson.rst", "auto/ase2sprkkr.physics.lattice_data.international_numbers_to_AP.rst", "auto/ase2sprkkr.physics.winger_seitz_radii.rst", "auto/ase2sprkkr.physics.winger_seitz_radii.winger_seitz_radii.rst", "auto/ase2sprkkr.potentials.rst", "auto/ase2sprkkr.potentials.custom_potential_section.rst", "auto/ase2sprkkr.potentials.custom_potential_section.CustomPotentialSection.rst", "auto/ase2sprkkr.potentials.custom_potential_section.CustomPotentialSectionDefinition.rst", "auto/ase2sprkkr.potentials.custom_potential_section.CustomSectionToken.rst", "auto/ase2sprkkr.potentials.custom_potential_section.SectionString.rst", "auto/ase2sprkkr.potentials.definitions.rst", "auto/ase2sprkkr.potentials.definitions.potential.rst", "auto/ase2sprkkr.potentials.definitions.potential.potential_definition.rst", "auto/ase2sprkkr.potentials.definitions.sections.rst", "auto/ase2sprkkr.potentials.definitions.sections._sections.rst", "auto/ase2sprkkr.potentials.definitions.sections.charge.rst", "auto/ase2sprkkr.potentials.definitions.sections.charge.ChargeSection.rst", "auto/ase2sprkkr.potentials.definitions.sections.charge.ChargeSectionDefinition.rst", "auto/ase2sprkkr.potentials.definitions.sections.charge.ChargesSection.rst", "auto/ase2sprkkr.potentials.definitions.sections.charge.section.rst", "auto/ase2sprkkr.potentials.definitions.sections.charge_moments.rst", "auto/ase2sprkkr.potentials.definitions.sections.charge_moments.ChargeMomentsSection.rst", "auto/ase2sprkkr.potentials.definitions.sections.charge_moments.ChargeMomentsSectionDefinition.rst", "auto/ase2sprkkr.potentials.definitions.sections.charge_moments.section.rst", "auto/ase2sprkkr.potentials.definitions.sections.global_system_parameter.rst", "auto/ase2sprkkr.potentials.definitions.sections.global_system_parameter.GlobalSystemParameter.rst", "auto/ase2sprkkr.potentials.definitions.sections.global_system_parameter.GlobalSystemParameterDefinition.rst", "auto/ase2sprkkr.potentials.definitions.sections.global_system_parameter.section.rst", "auto/ase2sprkkr.potentials.definitions.sections.host_madelung_potential.rst", "auto/ase2sprkkr.potentials.definitions.sections.host_madelung_potential.HostMadelungPotentialSection.rst", "auto/ase2sprkkr.potentials.definitions.sections.host_madelung_potential.HostMadelungPotentialSectionDefinition.rst", "auto/ase2sprkkr.potentials.definitions.sections.host_madelung_potential.section.rst", "auto/ase2sprkkr.potentials.definitions.sections.lattice.rst", "auto/ase2sprkkr.potentials.definitions.sections.lattice.LatticeSection.rst", "auto/ase2sprkkr.potentials.definitions.sections.lattice.LatticeSectionDefinition.rst", "auto/ase2sprkkr.potentials.definitions.sections.lattice.section.rst", "auto/ase2sprkkr.potentials.definitions.sections.mesh_information.rst", "auto/ase2sprkkr.potentials.definitions.sections.mesh_information.MeshInformationSection.rst", "auto/ase2sprkkr.potentials.definitions.sections.mesh_information.MeshInformationSectionDefinition.rst", "auto/ase2sprkkr.potentials.definitions.sections.mesh_information.section.rst", "auto/ase2sprkkr.potentials.definitions.sections.moments.rst", "auto/ase2sprkkr.potentials.definitions.sections.moments.MomentSection.rst", "auto/ase2sprkkr.potentials.definitions.sections.moments.MomentsSection.rst", "auto/ase2sprkkr.potentials.definitions.sections.moments.MomentsSectionDefinition.rst", "auto/ase2sprkkr.potentials.definitions.sections.moments.section.rst", "auto/ase2sprkkr.potentials.definitions.sections.occupation.rst", "auto/ase2sprkkr.potentials.definitions.sections.occupation.OccupationSection.rst", "auto/ase2sprkkr.potentials.definitions.sections.occupation.OccupationSectionDefinition.rst", "auto/ase2sprkkr.potentials.definitions.sections.occupation.section.rst", "auto/ase2sprkkr.potentials.definitions.sections.potential.rst", "auto/ase2sprkkr.potentials.definitions.sections.potential.PotentialSection.rst", "auto/ase2sprkkr.potentials.definitions.sections.potential.PotentialSectionDefinition.rst", "auto/ase2sprkkr.potentials.definitions.sections.potential.PotentialsSection.rst", "auto/ase2sprkkr.potentials.definitions.sections.potential.section.rst", "auto/ase2sprkkr.potentials.definitions.sections.reference_system.rst", "auto/ase2sprkkr.potentials.definitions.sections.reference_system.ReferenceSystemSection.rst", "auto/ase2sprkkr.potentials.definitions.sections.reference_system.ReferenceSystemSectionDefinition.rst", "auto/ase2sprkkr.potentials.definitions.sections.reference_system.section.rst", "auto/ase2sprkkr.potentials.definitions.sections.scf_info.rst", "auto/ase2sprkkr.potentials.definitions.sections.scf_info.ScfInfoSection.rst", "auto/ase2sprkkr.potentials.definitions.sections.scf_info.ScfInfoSectionDefinition.rst", "auto/ase2sprkkr.potentials.definitions.sections.scf_info.section.rst", "auto/ase2sprkkr.potentials.definitions.sections.sites.rst", "auto/ase2sprkkr.potentials.definitions.sections.sites.SitesSection.rst", "auto/ase2sprkkr.potentials.definitions.sections.sites.SitesSectionDefinition.rst", "auto/ase2sprkkr.potentials.definitions.sections.sites.section.rst", "auto/ase2sprkkr.potentials.definitions.sections.types.rst", "auto/ase2sprkkr.potentials.definitions.sections.types.TypesSection.rst", "auto/ase2sprkkr.potentials.definitions.sections.types.TypesSectionDefinition.rst", "auto/ase2sprkkr.potentials.definitions.sections.types.section.rst", "auto/ase2sprkkr.potentials.potential_definitions.rst", "auto/ase2sprkkr.potentials.potential_definitions.ASEArraySectionDefinition.rst", "auto/ase2sprkkr.potentials.potential_definitions.PotSectionDefinition.rst", "auto/ase2sprkkr.potentials.potential_definitions.PotValueDefinition.rst", "auto/ase2sprkkr.potentials.potential_definitions.PotentialDefinition.rst", "auto/ase2sprkkr.potentials.potential_definitions.Separator.rst", "auto/ase2sprkkr.potentials.potential_sections.rst", "auto/ase2sprkkr.potentials.potential_sections.ASEArraySection.rst", "auto/ase2sprkkr.potentials.potential_sections.AtomicTypePotentialSection.rst", "auto/ase2sprkkr.potentials.potential_sections.PotentialSection.rst", "auto/ase2sprkkr.potentials.potential_sections.PotentialSectionTrait.rst", "auto/ase2sprkkr.potentials.potential_sections.RepeatedPotentialSection.rst", "auto/ase2sprkkr.potentials.potential_sections.UniqueListSection.rst", "auto/ase2sprkkr.potentials.potentials.rst", "auto/ase2sprkkr.potentials.potentials.Potential.rst", "auto/ase2sprkkr.potentials.test.rst", "auto/ase2sprkkr.potentials.test.init_tests.rst", "auto/ase2sprkkr.potentials.test.init_tests.TestCase.rst", "auto/ase2sprkkr.potentials.test.init_tests.arr_testfce.rst", "auto/ase2sprkkr.potentials.test.init_tests.assertDictEqual.rst", "auto/ase2sprkkr.potentials.test.init_tests.assertListEqual.rst", "auto/ase2sprkkr.potentials.test.init_tests.assert_almost_equals.rst", "auto/ase2sprkkr.potentials.test.init_tests.assert_equals.rst", "auto/ase2sprkkr.potentials.test.init_tests.extdict.rst", "auto/ase2sprkkr.potentials.test.init_tests.testfce.rst", "auto/ase2sprkkr.potentials.test.test_2D.rst", "auto/ase2sprkkr.potentials.test.test_2D.Test2DPotential.rst", "auto/ase2sprkkr.potentials.test.test_custom_section.rst", "auto/ase2sprkkr.potentials.test.test_custom_section.TestCustomSection.rst", "auto/ase2sprkkr.potentials.test.test_potential.rst", "auto/ase2sprkkr.potentials.test.test_potential.TestPotential.rst", "auto/ase2sprkkr.potentials.test.test_structure.rst", "auto/ase2sprkkr.potentials.test.test_structure.TestStructure.rst", "auto/ase2sprkkr.sprkkr.rst", "auto/ase2sprkkr.sprkkr.atomic_types.rst", "auto/ase2sprkkr.sprkkr.atomic_types.AtomicType.rst", "auto/ase2sprkkr.sprkkr.atoms_region.rst", "auto/ase2sprkkr.sprkkr.atoms_region.AtomsRegion.rst", "auto/ase2sprkkr.sprkkr.build.rst", "auto/ase2sprkkr.sprkkr.build.semiinfinite_system.rst", "auto/ase2sprkkr.sprkkr.build.stack.rst", "auto/ase2sprkkr.sprkkr.build.vacuum_like.rst", "auto/ase2sprkkr.sprkkr.calculator.rst", "auto/ase2sprkkr.sprkkr.calculator.FilenameTemplator.rst", "auto/ase2sprkkr.sprkkr.calculator.SPRKKR.rst", "auto/ase2sprkkr.sprkkr.configuration.rst", "auto/ase2sprkkr.sprkkr.configuration.ConfigurationFile.rst", "auto/ase2sprkkr.sprkkr.configuration.ConfigurationFileDefinition.rst", "auto/ase2sprkkr.sprkkr.configuration.ConfigurationSection.rst", "auto/ase2sprkkr.sprkkr.configuration.ConfigurationSectionDefinition.rst", "auto/ase2sprkkr.sprkkr.configuration.ConfigurationSectionTrait.rst", "auto/ase2sprkkr.sprkkr.configuration.ConfigurationValue.rst", "auto/ase2sprkkr.sprkkr.configuration.ConfigurationValueDefinition.rst", "auto/ase2sprkkr.sprkkr.configuration.CustomConfigurationSection.rst", "auto/ase2sprkkr.sprkkr.configuration.CustomConfigurationValue.rst", "auto/ase2sprkkr.sprkkr.configuration.RepeatedConfigurationSection.rst", "auto/ase2sprkkr.sprkkr.io_data.rst", "auto/ase2sprkkr.sprkkr.io_data.BaseIoData.rst", "auto/ase2sprkkr.sprkkr.io_data.ReadIoData.rst", "auto/ase2sprkkr.sprkkr.io_data.WriteIoData.rst", "auto/ase2sprkkr.sprkkr.io_data.unique_mapping.rst", "auto/ase2sprkkr.sprkkr.moments.rst", "auto/ase2sprkkr.sprkkr.moments.Moments.rst", "auto/ase2sprkkr.sprkkr.occupations.rst", "auto/ase2sprkkr.sprkkr.occupations.Occupation.rst", "auto/ase2sprkkr.sprkkr.radial.rst", "auto/ase2sprkkr.sprkkr.radial.RadialCharge.rst", "auto/ase2sprkkr.sprkkr.radial.RadialPotential.rst", "auto/ase2sprkkr.sprkkr.radial.RadialValue.rst", "auto/ase2sprkkr.sprkkr.radial_meshes.rst", "auto/ase2sprkkr.sprkkr.radial_meshes.ExponentialMesh.rst", "auto/ase2sprkkr.sprkkr.radial_meshes.Mesh.rst", "auto/ase2sprkkr.sprkkr.radial_meshes._clearing_property.rst", "auto/ase2sprkkr.sprkkr.reference_systems.rst", "auto/ase2sprkkr.sprkkr.reference_systems.ReferenceSystem.rst", "auto/ase2sprkkr.sprkkr.sites.rst", "auto/ase2sprkkr.sprkkr.sites.Site.rst", "auto/ase2sprkkr.sprkkr.sites.SiteType.rst", "auto/ase2sprkkr.sprkkr.sprkkr_atoms.rst", "auto/ase2sprkkr.sprkkr.sprkkr_atoms.SPRKKRAtoms.rst", "auto/ase2sprkkr.sprkkr.sprkkr_grammar_types.rst", "auto/ase2sprkkr.sprkkr.sprkkr_grammar_types.AtomicType.rst", "auto/ase2sprkkr.sprkkr.sprkkr_grammar_types.Site.rst", "auto/ase2sprkkr.sprkkr.structure.rst", "auto/ase2sprkkr.sprkkr.structure.AtomData.rst", "auto/ase2sprkkr.sprkkr.structure.LayerData.rst", "auto/ase2sprkkr.sprkkr.structure.floatjm.rst", "auto/ase2sprkkr.sprkkr.structure.structure_file_to_atoms.rst", "auto/ase2sprkkr.sprkkr.sysfile.rst", "auto/ase2sprkkr.sprkkr.sysfile.sysfile_content.rst", "auto/ase2sprkkr.sprkkr.sysfile.write_sysfile.rst", "auto/ase2sprkkr.sprkkr.test.rst", "auto/ase2sprkkr.sprkkr.test.init_tests.rst", "auto/ase2sprkkr.sprkkr.test.init_tests.TestCase.rst", "auto/ase2sprkkr.sprkkr.test.init_tests.arr_testfce.rst", "auto/ase2sprkkr.sprkkr.test.init_tests.assertDictEqual.rst", "auto/ase2sprkkr.sprkkr.test.init_tests.assertListEqual.rst", "auto/ase2sprkkr.sprkkr.test.init_tests.assert_almost_equals.rst", "auto/ase2sprkkr.sprkkr.test.init_tests.assert_equals.rst", "auto/ase2sprkkr.sprkkr.test.init_tests.extdict.rst", "auto/ase2sprkkr.sprkkr.test.init_tests.testfce.rst", "auto/ase2sprkkr.sprkkr.test.test_arpes.rst", "auto/ase2sprkkr.sprkkr.test.test_arpes.TestCalculator.rst", "auto/ase2sprkkr.sprkkr.test.test_build.rst", "auto/ase2sprkkr.sprkkr.test.test_build.TestBuild.rst", "auto/ase2sprkkr.sprkkr.test.test_calculator.rst", "auto/ase2sprkkr.sprkkr.test.test_calculator.TestCalculator.rst", "auto/ase2sprkkr.sprkkr.test.test_calculator._fast_atoms.rst", "auto/ase2sprkkr.sprkkr.test.test_occupation.rst", "auto/ase2sprkkr.sprkkr.test.test_occupation.test.rst", "auto/ase2sprkkr.sprkkr.test.test_sites.rst", "auto/ase2sprkkr.sprkkr.test.test_sites.TestSites.rst", "auto/ase2sprkkr.sprkkr.test.test_sprkkr_atoms.rst", "auto/ase2sprkkr.sprkkr.test.test_sprkkr_atoms.TestSPRKKRAtoms.rst", "auto/ase2sprkkr.sprkkr.test.test_sysfile.rst", "auto/ase2sprkkr.sprkkr.test.test_sysfile.TestSysfile.rst", "auto/ase2sprkkr.tools.rst", "auto/ase2sprkkr.tools.ase2sprkkr.rst", "auto/ase2sprkkr.tools.ase2sprkkr.run.rst", "auto/ase2sprkkr.tools.commands.rst", "auto/ase2sprkkr.tools.commands.config.rst", "auto/ase2sprkkr.tools.commands.config.default_content.rst", "auto/ase2sprkkr.tools.commands.config.parser.rst", "auto/ase2sprkkr.tools.commands.config.run.rst", "auto/ase2sprkkr.tools.commands.examples.rst", "auto/ase2sprkkr.tools.commands.examples.parser.rst", "auto/ase2sprkkr.tools.commands.examples.run.rst", "auto/ase2sprkkr.tools.commands.info.rst", "auto/ase2sprkkr.tools.commands.info.default_options.rst", "auto/ase2sprkkr.tools.commands.info.description.rst", "auto/ase2sprkkr.tools.commands.info.parser.rst", "auto/ase2sprkkr.tools.commands.info.run.rst", "auto/ase2sprkkr.tools.commands.nomad.rst", "auto/ase2sprkkr.tools.commands.nomad.authenticate.rst", "auto/ase2sprkkr.tools.commands.nomad.gather_files.rst", "auto/ase2sprkkr.tools.commands.nomad.get_token.rst", "auto/ase2sprkkr.tools.commands.nomad.parser.rst", "auto/ase2sprkkr.tools.commands.nomad.retrieve_token.rst", "auto/ase2sprkkr.tools.commands.nomad.run.rst", "auto/ase2sprkkr.tools.commands.nomad.token.rst", "auto/ase2sprkkr.tools.commands.nomad.upload.rst", "auto/ase2sprkkr.tools.commands.nomad.zipp.rst", "auto/ase2sprkkr.tools.commands.plot.rst", "auto/ase2sprkkr.tools.commands.plot.parser.rst", "auto/ase2sprkkr.tools.commands.plot.run.rst", "auto/ase2sprkkr.tools.commands.run.rst", "auto/ase2sprkkr.tools.commands.run.parser.rst", "auto/ase2sprkkr.tools.commands.run.run.rst", "auto/ase2sprkkr.tools.commands.show_structure.rst", "auto/ase2sprkkr.tools.commands.show_structure.parser.rst", "auto/ase2sprkkr.tools.commands.show_structure.run.rst", "auto/ase2sprkkr.tools.commands.test.rst", "auto/ase2sprkkr.tools.commands.test.parser.rst", "auto/ase2sprkkr.tools.commands.test.run.rst", "auto/ase2sprkkr.tools.shared.rst", "auto/ase2sprkkr.tools.shared.main.rst", "auto/ase2sprkkr.tools.test.rst", "auto/ase2sprkkr.tools.test.init_tests.rst", "auto/ase2sprkkr.tools.test.init_tests.TestCase.rst", "auto/ase2sprkkr.tools.test.init_tests.arr_testfce.rst", "auto/ase2sprkkr.tools.test.init_tests.assertDictEqual.rst", "auto/ase2sprkkr.tools.test.init_tests.assertListEqual.rst", "auto/ase2sprkkr.tools.test.init_tests.assert_almost_equals.rst", "auto/ase2sprkkr.tools.test.init_tests.assert_equals.rst", "auto/ase2sprkkr.tools.test.init_tests.extdict.rst", "auto/ase2sprkkr.tools.test.init_tests.testfce.rst", "auto/ase2sprkkr.tools.test.test_tools.rst", "auto/ase2sprkkr.tools.test.test_tools.TestCommon.rst", "auto/ase2sprkkr.version.rst", "auto/ase2sprkkr.visualise.rst", "auto/ase2sprkkr.visualise.plot.rst", "auto/ase2sprkkr.visualise.plot.Multiplot.rst", "auto/ase2sprkkr.visualise.plot.auto_range.rst", "auto/ase2sprkkr.visualise.plot.change_default_kwargs.rst", "auto/ase2sprkkr.visualise.plot.colormesh.rst", "auto/ase2sprkkr.visualise.plot.combine_colormaps.rst", "auto/ase2sprkkr.visualise.plot.combined_colormap.rst", "auto/ase2sprkkr.visualise.plot.create_rc_context.rst", "auto/ase2sprkkr.visualise.plot.finish_plot.rst", "auto/ase2sprkkr.visualise.plot.normalize_rc_params.rst", "auto/ase2sprkkr.visualise.plot.plotting_function.rst", "auto/ase2sprkkr.visualise.plot.set_up_common_plot.rst", "auto/ase2sprkkr.visualise.plot.single_plot.rst", "auto/modules.rst", "changelog.rst", "examples.rst", "examples_generated.rst", "how-to-install.rst", "index.rst", "installation.rst", "introduction.rst", "philosophy.rst", "usage.rst"], "titles": ["ASE2SPRKKR", "ase2sprkkr", "ase", "build", "aperiodic_times", "stack", "io", "read_sprkkr", "write_sprkkr", "pbc", "check_symmetry", "register", "ase_register", "register", "symbols", "filename_from_symbols", "pretty_symbols", "test", "init_tests", "TestCase", "arr_testfce", "assertDictEqual", "assertListEqual", "assert_almost_equals", "assert_equals", "extdict", "testfce", "test_build", "TestBuild", "visualise", "view", "asr", "asr", "bader", "print", "bandstructure", "Result", "add_bs_pbe", "bs_pbe", "bs_pbe_html", "plot_with_colors", "webpanel", "berry", "Result", "plot_phases", "webpanel", "borncharges", "Result", "webpanel", "bse", "Result", "absorption", "get_kpts_size", "webpanel", "calculators", "get_calculator", "chc", "ase2sprkkr.asr.chc.CHCError", "ConvexHullReference", "Hyperplane", "Intermediate", "LeanIntermediate", "Line", "Reference", "Result", "_permutecontain", "append_references", "calculate_intermediates", "chcut_plot", "convex_hull", "convex_hull_planes", "filrefs", "get_coords", "get_hof", "gscheck", "is_collinear", "is_independent", "mgs", "mgsls", "mu_adjustment", "orthogonalize", "projuv", "read_structure", "refs2ims", "results2ref", "row2ref", "tuplespermuted", "webpanel", "convex_hull", "Result", "convex_hull_tables", "get_reference_energies", "hof", "plot", "select_references", "webpanel", "core", "cli", "append_job", "check_git", "extract_hash_from_file", "format", "get_config_dir", "get_git_rev_list", "initialize_asr_configuration_dir", "is_asr_initialized", "run_command", "command", "fix_old_files", "is_results_file", "material", "Material", "get_material_from_folder", "get_webpanels_from_material", "make_panel_figures", "results", "ASRResult", "DictEncoder", "HTMLEncoder", "HackedASRResult", "JSONEncoder", "MetaData", "ase2sprkkr.asr.core.results.MetaDataNotSetError", "ObjectDescription", "ResultEncoder", "ase2sprkkr.asr.core.results.UnknownASRResultFormat", "ase2sprkkr.asr.core.results.UnknownDataFormat", "WebPanelEncoder", "data_to_dict", "dct_to_result", "find_class_matching_version", "format_key_description_pair", "get_key_descriptions", "get_object_matching_obj_id", "get_object_types", "get_reader_function", "make_property", "obj_to_id", "object_description_to_object", "prepare_result", "read_hacked_data", "read_new_data", "read_old_data", "types", "AtomsFile", "DictStr", "clickify_docstring", "utils", "chdir", "dct_to_object", "encode_json", "file_barrier", "get_dep_tree", "get_recipe_from_name", "md5sum", "parse_dict_string", "parse_mod_func", "read_json", "recursive_update", "singleprec_dict", "unlink", "write_file", "write_json", "database", "browser", "RowWrapper", "create_table", "describe_entries", "describe_entry", "dict_to_list", "entry_parameter_description", "extract_recipe_from_filename", "fig", "is_results_file", "layout", "merge_panels", "miscellaneous_section", "table", "val2str", "check", "clonetree", "duplicates", "compare", "filter_uids", "find_duplicate_group", "parse_filter_string", "material_fingerprint", "get_hash_of_atoms", "get_uid_of_atoms", "todict", "merge", "rmsd", "get_rmsd", "normalize_nonpbc_atoms", "update_rmsd", "templates", "totree", "make_folder_dict", "make_folder_tree", "defectformation", "check_and_get_general_inputs", "collect_data", "find_file_in_folder", "intersection", "line", "line_intersection", "plot_formation_and_transitions", "deformationpotentials", "Result", "webpanel", "dimensionality", "get_dimtypes", "plot_dimensionality_histogram", "webpanel", "dos", "collect_data", "plot", "webpanel", "emasses", "ase2sprkkr.asr.emasses.NoGapError", "Result", "calculate_bs_along_emass_vecs", "check_soc", "convert_key_to_tuple", "create_columns_fnames", "custom_table", "em", "embands", "evalmodel", "fit", "get_2nd_order_extremum", "get_3rd_order_extremum", "get_bt_ks", "get_emass_dict_from_row", "get_extremum_type", "get_gapskn", "get_name", "get_range", "get_vb_cb_indices", "kptsinsphere", "make_the_plots", "model", "nonsc_sphere", "preliminary_refine", "set_default", "unpack_masses", "webpanel", "wideMAE", "exchange", "get_parameters", "fere", "ase2sprkkr.asr.fere.DBAlreadyExistsError", "ase2sprkkr.asr.fere.MaterialNotFoundError", "ase2sprkkr.asr.fere.ParseError", "count", "create_corrected_db", "elements_from_refs", "formulas_eq", "get_dE_alpha", "get_hof", "load_data", "minimize_error", "multiply_formula", "only", "parse_reactions", "parse_refs", "safe_get", "select", "single", "unique", "where", "fermisurface", "Result", "add_fermi", "bz_vertices", "find_contours", "plot_fermi", "webpanel", "formalpolarization", "ase2sprkkr.asr.formalpolarization.AtomsTooCloseToBoundary", "distance_to_non_pbc_boundary", "get_atomic_polarization_phase", "get_dipole_polarization_phase", "get_electronic_polarization_phase", "get_wavefunctions", "gs", "GapsResult", "Result", "VacuumLevelResults", "bz_with_band_extremums", "evacdiff", "gaps", "get_1bz_k", "get_gap_info", "vacuumlevels", "webpanel", "gw", "Result", "bs_gw", "get_kpts_size", "webpanel", "hse", "MP_interpolate", "Result", "bs_hse", "get_kpts_size", "hse", "hse_spinorbit", "webpanel", "infraredpolarizability", "Result", "create_plot", "get_phonon_pol", "webpanel", "magnetic_anisotropy", "Result", "get_spin_axis", "get_spin_index", "spin_axis", "webpanel", "magstate", "Result", "get_magstate", "webpanel", "pdos", "Result", "calculate_pdos", "get_l_a", "get_ordered_syl_dict", "get_yl_colors", "pdos", "plot_pdos", "plot_pdos_nosoc", "plot_pdos_soc", "webpanel", "phonons", "Result", "creates", "mingocorrection", "plot_bandstructure", "plot_phonons", "requires", "todict", "topckl", "webpanel", "phonopy", "Result", "distance_to_sc", "lattice_vectors", "plot_bandstructure", "plot_phonons", "requires", "webpanel", "piezoelectrictensor", "Result", "webpanel", "plasmafrequency", "Result", "get_kpts_size", "webpanel", "polarizability", "Result", "get_kpts_size", "polarizability", "webpanel", "projected_bandstructure", "Result", "get_bs_sampling", "get_orbital_ldos", "get_pie_markers", "get_pie_slice", "get_yl_ordering", "projected_bs_pbe", "webpanel", "push", "raman", "Result", "count_deg", "raman", "webpanel", "relax", "ase2sprkkr.asr.relax.BrokenSymmetryError", "Result", "SpgAtoms", "is_relax_done", "myBFGS", "relax", "set_initial_magnetic_moments", "setinfo", "KeyValuePair", "check_key_value", "setup", "decorate", "apply_substitution", "find_substitutions", "generate_structures", "get_p_ab", "defects", "collect_data", "create_folder_structure", "setup_defects", "setup_supercell", "displacements", "create_displacements_folder", "displace_atom", "get_all_displacements", "get_displacement_folder", "magnetize", "materials", "params", "scanparams", "strains", "get_relevant_strains", "get_strained_folder_name", "setup_strains", "symmetrize", "symmetrize_atoms", "stiffness", "Result", "webpanel", "structureinfo", "Result", "get_reduced_formula", "webpanel", "test", "acceptance", "test_borncharges", "test_gpaw_berry_get_berry_phases_integration", "test_piezoelectrictensor", "test_piezo_BN", "test_relax", "test_relax_fe_gpaw", "conftest", "pytest_configure", "pytest_sessionstart", "fixtures", "_get_webcontent", "asr_tmpdir", "asr_tmpdir_w_params", "duplicates_test_db", "get_webcontent", "mockgpaw", "set_asr_test_environ_variable", "test_material", "materials", "mocks", "gpaw", "berryphase", "get_berry_phases", "calculator", "ASRCalculator", "DOSCalculator", "Occupations", "Parameters", "Setups", "WaveFunctions", "hybrids", "eigenvalues", "kpt_descriptor", "kpts2sizeandoffsets", "to1bz", "mpi", "barrier", "broadcast", "new_communicator", "world_sum", "occupations", "FermiDirac", "create_occ_calc", "response", "bse", "BSE", "df", "DielectricFunction", "g0w0", "G0W0", "spinorbit", "SOC", "soc_eigenstates", "symmetry", "Symmetry", "utilities", "dos", "raw_orbital_LDOS", "ibz2bz", "ibz2bz", "progressbar", "ProgressBar", "xc", "exx", "tools", "test_bandstructure", "test_bandstructure_main", "test_berry", "test_berry", "test_berry_nontrivial", "test_borncharges", "test_borncharges", "test_bse", "test_bse", "test_cli", "test_asr", "test_asr_find", "test_asr_find_help", "test_asr_find_no_versions", "test_asr_list", "test_asr_results_bandstructure", "test_asr_results_help", "test_asr_run", "test_convex_hull", "test_convex_hull", "test_core", "recipe", "test_core", "test_recipe_defaults", "test_recipe_setting_new_defaults", "test_recipe_setting_overriding_defaults", "test_core_material", "test_asr_cli_results_figures_gs", "test_core_results", "MyResult", "MyResultVer0", "MyWebPanel", "test_read_old_format", "test_reading_older_version", "test_reading_result", "test_results_object", "test_database_duplicates", "test_database_duplicates", "test_database_duplicates_filter_magstate", "test_database_duplicates_no_duplicates", "test_database_fromtree", "folder_tree", "make_tree", "test_database_fromtree_raises_when_missing_uids", "test_database_fromtree_totree", "test_database_fromtree_works_without_write_permission", "test_database_rmsd", "rattle_atoms", "test_database_rmsd_duplicates", "test_database_rmsd_duplicates_comparison_keys", "test_database_rmsd_move_one_atom", "test_database_rmsd_none_handling", "test_database_rmsd_not_equal", "test_database_rmsd_rattled", "test_database_rmsd_rotation", "test_database_totree", "make_test_db", "test_database_totree", "test_database_totree_files_and_hard_links", "test_dimensionality", "test_dimensionality", "test_dimensionality_cli", "test_emasses", "_get_all_eigenvalues", "resultstest", "test_emasses_freelectron", "test_emasses_indirect", "test_fixtures", "test_env_variables", "test_formalpolarization", "test_formalpolarization", "test_formalpolarization_test_atoms_too_close_to_boundary", "test_gs", "test_gs", "test_gs_asr_cli_results_figures", "test_gs_integration_gpaw", "test_gw", "test_gw", "test_hse", "test_hse", "test_pdos", "test_pdos", "test_pdos_full", "test_phonons", "test_phonons", "test_phonopy", "test_phonopy", "test_piezoelectrictensor", "get_strain_from_atoms", "test_piezoelectrictensor", "zero_pad_non_pbc_strain_directions", "test_plasmafrequency", "test_plasmafrequency", "test_polarizability", "test_polarizability", "test_projected_bandstructure", "test_projected_bs_mocked", "test_raman", "test_raman", "test_relax", "test_relax_basic", "test_relax_bn_gpaw", "test_relax_emt", "test_relax_emt_fail_broken_symmetry", "test_relax_find_higher_symmetry", "test_relax_magmoms", "test_relax_si_gpaw", "test_setinfo", "test_info", "test_info_call_from_cli", "test_info_raises_with_protected_key", "test_setup_decorate", "test_setup_decorate_si", "test_setup_displacements", "test_setup_displacements", "test_setup_displacements_displace_atom", "test_setup_displacements_get_all_displacements", "test_setup_magnetize", "test_setup_magnetize", "test_setup_magnetize_state_inputs", "test_setup_materials", "test_setup_magnetize", "test_setup_scanparams", "test_setup_params", "test_setup_strains", "test_setup_strains", "test_setup_strains_get_relevant_strains", "test_setup_symmetrize", "test_setup_symmetrize", "test_stiffness", "test_stiffness_emt", "test_stiffness_gpaw", "utils", "args", "parse_arg", "calculator_utils", "fermi_level", "get_eigenvalues", "gpw2eigs", "calc2eigs", "gpw2eigs", "kpts", "get_kpts_size", "magnetism", "is_magnetic", "magnetic_atoms", "refinegs", "get_filenames", "get_parstr", "nonselfc", "refinegs", "something", "calculate_something", "collect_data", "create_plot", "webpanel", "symmetry", "_atoms2symmetry_gpaw", "atoms2spgcell", "atoms2symmetry", "has_inversion", "restrict_spin_projection_2d", "utils", "timed_print", "workflow", "bindings", "empty_spheres", "EmptySpheresResult", "add_empty_spheres", "empty_spheres", "empty_spheres_atoms", "es_finder", "empty_spheres", "nomad", "nomad", "ExternalEntry", "NomadArchive", "NomadEntry", "map_io_to_nomad", "nomad_api", "NomadApi", "with_token", "spglib", "SpacegroupInfo", "possibly_equivalent_sites", "spglib_dataset", "tests", "init_tests", "TestCase", "arr_testfce", "assertDictEqual", "assertListEqual", "assert_almost_equals", "assert_equals", "extdict", "testfce", "test_es_finder", "TestEsFinder", "test_spglib", "TestSpgilib", "xband", "ase2sprkkr.bindings.xband.spheres module", "ase2sprkkr.bindings.xband.symmetry module", "tests", "init_tests", "TestCase", "arr_testfce", "assertDictEqual", "assertListEqual", "assert_almost_equals", "assert_equals", "extdict", "patch_package", "testfce", "test_spheres", "TestSpheres", "common", "alternative_types", "allowed_types", "normalize_type", "normalize_type_map", "numpy_types", "types_alternatives", "backward_compatibility", "configuration", "Configuration", "configuration_containers", "BaseConfigurationContainer", "BaseSection", "ConfigurationContainer", "CustomSection", "ase2sprkkr.common.configuration_containers.DisabledAttributeError", "RootConfigurationContainer", "Section", "configuration_definitions", "BaseDefinition", "ControlDefinition", "Gather", "Ignored", "NotAllowed", "RealItemDefinition", "SeparatorDefinition", "Stub", "Switch", "VirtualDefinition", "gather", "if_defined", "if_not_defined", "switch", "container_definitions", "ConfigurationRootDefinition", "ContainerDefinition", "SectionDefinition", "debug", "add_debug_hook", "debug_pyparsing", "decorators", "add_called_class_as_argument", "add_to_signature", "cached_class_property", "cached_property", "class_property", "maybeclassmethod", "std_cached_property", "warnings_from_here", "directory", "Directory", "doc", "process_input_parameters_definition", "verbatim", "formats", "format_for_string", "fortran_format", "full_format_for_string", "generated_configuration_definitions", "BaseGeneratedValueDefinition", "GeneratedValueDefinition", "Length", "NumpyViewDefinition", "grammar", "SkipToRegex", "White", "addConditionEx", "addParseActionEx", "delimitedList", "end_of_file", "generate_grammar", "line_end", "optional_line_end", "optional_quote", "replace_whitechars", "separator_grammar", "separator_pattern", "grammar_types", "arrays", "Array", "Complex", "Sequence", "SetOf", "SpecialColumn", "Table", "complex_number", "set_of_integers", "set_of_reals", "basic", "BaseBool", "BaseRealWithUnits", "BaseString", "BasicSeparator", "BlankSeparator", "Bool", "Date", "DefKeyword", "Energy", "FixedPointNumber", "Flag", "IntBool", "Integer", "Keyword", "LineString", "Number", "ObjectNumber", "QString", "Real", "RealWithUnits", "Separator", "String", "Unsigned", "boolean", "date", "energy", "flag", "int_bool", "integer", "line_string", "qstring", "real", "separator", "string", "unsigned", "data", "NumpyArray", "Prefixed", "RawData", "RestOfTheFile", "grammar_type", "GrammarType", "TypedGrammarType", "compare_numpy_values", "format_for_type", "recognized_set_types", "type_from_default_value", "type_from_type", "type_from_value", "mixed", "recognized_set_types", "type_from_set_map", "type_from_type_map", "warnings", "ase2sprkkr.common.grammar_types.warnings.SuspiciousValueWarning", "init_tests", "TestCase", "arr_testfce", "assertDictEqual", "assertListEqual", "assert_almost_equals", "assert_equals", "extdict", "patch_package", "testfce", "lazy_string", "LazyString", "misc", "as_integer", "config_property", "copy_list", "dict_first_item", "first_non_none", "njit", "numpy_index", "no_output", "NoOutput", "options", "BaseOption", "CustomOption", "DangerousValue", "Dummy", "DummyStub", "Option", "parsing_results", "ArrayKey", "DefDictKey", "DictKey", "IgnoredKey", "Key", "RepeatedKey", "Result", "SubKey", "ValidateKey", "Values", "dict_from_parsed", "process_output_reader", "AsyncioFileReader", "ProcessOutputReader", "readline", "readline_until", "repeated_configuration_containers", "RepeatedConfigurationContainer", "section_adaptors", "MergeSectionAdaptor", "MergeSectionDefinitionAdaptor", "SectionAdaptor", "subprocess", "_call_function", "ignore_signal", "in_subprocess", "test", "init_tests", "TestCase", "arr_testfce", "assertDictEqual", "assertListEqual", "assert_almost_equals", "assert_equals", "extdict", "testfce", "test_common", "TestCommon", "test_grammar_types", "TestGrammar", "tools", "append_id_to_filename", "main", "parse_inches", "parse_named_option", "parse_tuple_function", "unique_values", "UniqueValuesMapping", "value_definitions", "InheritingValueModifier", "ValueDefinition", "ValueModifier", "warnings", "ase2sprkkr.common.warnings.DataValidityError", "ase2sprkkr.common.warnings.DataValidityWarning", "yaml", "IndentDumper", "config", "ConfigFileDefinition", "Configuration", "Section", "_get_suffix", "find_default_mpi_runner", "get_default_mpi_runner", "load_user_preferences", "mpi_runner", "user_preferences_file", "examples", "A1_Fe_scf_simple", "Fe", "main", "A2_Fe_scf_input_modifications", "Fe", "main", "A3_Fe_dos", "Fe", "main", "A4_CPA_Example", "Ni_doped_STO", "main", "A5_Al_EOS", "Al", "main", "A6_Cu_MSSPEC", "Cu", "main", "A7_SrTiO3_MSSPEC", "STO", "main", "A8_ARPES_and_plotting", "arpes", "main", "input_parameters", "definitions", "arpes", "input_parameters", "bsfek", "input_parameters", "bsfkk", "input_parameters", "dos", "input_parameters", "gilbert", "input_parameters", "jxc", "input_parameters", "marpes", "input_parameters", "phagen", "input_parameters", "scf", "input_parameters", "sections", "CONTROL", "CPA", "ENERGY", "MODE", "SCF", "SITES", "STRCONST", "TASK", "TAU", "TauSection", "_nktab_value", "xc", "input_parameters", "InputParameters", "InputSection", "input_parameters_definitions", "InputParametersDefinition", "InputSectionDefinition", "InputValueDefinition", "test", "init_tests", "TestCase", "arr_testfce", "assertDictEqual", "assertListEqual", "assert_almost_equals", "assert_equals", "extdict", "testfce", "test_definitions", "TestDefinitions", "test_input_parameters", "TestInputParameters", "ar", "output_files", "definitions", "Arithmetic", "CommonOutputFile", "OutputFile", "UnknownDataValue", "bsf", "BSFDefinition", "BSFOutputFile", "create_definition", "dos", "DOS", "DOSDefinition", "DOSOutputFile", "create_definition", "spc", "ARPESDefinition", "ARPESOutputFile", "create_definition", "output_files", "Arithmetic", "CommonOutputFile", "OutputFile", "UnknownDataValue", "output_files_definitions", "BlankSeparator", "OutputFileDefinition", "OutputFileValueDefinition", "Separator", "create_output_file_definition", "output_file_header", "test", "init_tests", "TestCase", "arr_testfce", "assertDictEqual", "assertListEqual", "assert_almost_equals", "assert_equals", "extdict", "testfce", "test_files", "TestOutput", "outputs", "output_definitions", "OutputNonameValueDefinition", "OutputSectionDefinition", "OutputValueDefinition", "OutputValueEqualDefinition", "readers", "arpes", "ArpesProcess", "ArpesResult", "bsf", "BsfProcess", "BsfResult", "default", "DefaultOutputReader", "DefaultProcess", "DefaultResult", "dos", "DosProcess", "DosResult", "scf", "RealOrStars", "ScfOutputReader", "ScfProcess", "ScfResult", "atomic_types_definition", "sprkkr_output_reader", "SprKkrOutputReader", "task_result", "KkrProcess", "TaskResult", "test", "init_tests", "TestCase", "arr_testfce", "assertDictEqual", "assertListEqual", "assert_almost_equals", "assert_equals", "extdict", "testfce", "test_output", "TestOutput", "physics", "lattice_data", "LatticeData", "Pearson", "international_numbers_to_AP", "winger_seitz_radii", "winger_seitz_radii", "potentials", "custom_potential_section", "CustomPotentialSection", "CustomPotentialSectionDefinition", "CustomSectionToken", "SectionString", "definitions", "potential", "potential_definition", "sections", "_sections", "charge", "ChargeSection", "ChargeSectionDefinition", "ChargesSection", "section", "charge_moments", "ChargeMomentsSection", "ChargeMomentsSectionDefinition", "section", "global_system_parameter", "GlobalSystemParameter", "GlobalSystemParameterDefinition", "section", "host_madelung_potential", "HostMadelungPotentialSection", "HostMadelungPotentialSectionDefinition", "section", "lattice", "LatticeSection", "LatticeSectionDefinition", "section", "mesh_information", "MeshInformationSection", "MeshInformationSectionDefinition", "section", "moments", "MomentSection", "MomentsSection", "MomentsSectionDefinition", "section", "occupation", "OccupationSection", "OccupationSectionDefinition", "section", "potential", "PotentialSection", "PotentialSectionDefinition", "PotentialsSection", "section", "reference_system", "ReferenceSystemSection", "ReferenceSystemSectionDefinition", "section", "scf_info", "ScfInfoSection", "ScfInfoSectionDefinition", "section", "sites", "SitesSection", "SitesSectionDefinition", "section", "types", "TypesSection", "TypesSectionDefinition", "section", "potential_definitions", "ASEArraySectionDefinition", "PotSectionDefinition", "PotValueDefinition", "PotentialDefinition", "Separator", "potential_sections", "ASEArraySection", "AtomicTypePotentialSection", "PotentialSection", "PotentialSectionTrait", "RepeatedPotentialSection", "UniqueListSection", "potentials", "Potential", "test", "init_tests", "TestCase", "arr_testfce", "assertDictEqual", "assertListEqual", "assert_almost_equals", "assert_equals", "extdict", "testfce", "test_2D", "Test2DPotential", "test_custom_section", "TestCustomSection", "test_potential", "TestPotential", "test_structure", "TestStructure", "sprkkr", "atomic_types", "AtomicType", "atoms_region", "AtomsRegion", "build", "semiinfinite_system", "stack", "vacuum_like", "calculator", "FilenameTemplator", "SPRKKR", "configuration", "ConfigurationFile", "ConfigurationFileDefinition", "ConfigurationSection", "ConfigurationSectionDefinition", "ConfigurationSectionTrait", "ConfigurationValue", "ConfigurationValueDefinition", "CustomConfigurationSection", "CustomConfigurationValue", "RepeatedConfigurationSection", "io_data", "BaseIoData", "ReadIoData", "WriteIoData", "unique_mapping", "moments", "Moments", "occupations", "Occupation", "radial", "RadialCharge", "RadialPotential", "RadialValue", "radial_meshes", "ExponentialMesh", "Mesh", "_clearing_property", "reference_systems", "ReferenceSystem", "sites", "Site", "SiteType", "sprkkr_atoms", "SPRKKRAtoms", "sprkkr_grammar_types", "AtomicType", "Site", "structure", "AtomData", "LayerData", "floatjm", "structure_file_to_atoms", "sysfile", "sysfile_content", "write_sysfile", "test", "init_tests", "TestCase", "arr_testfce", "assertDictEqual", "assertListEqual", "assert_almost_equals", "assert_equals", "extdict", "testfce", "test_arpes", "TestCalculator", "test_build", "TestBuild", "test_calculator", "TestCalculator", "_fast_atoms", "test_occupation", "test", "test_sites", "TestSites", "test_sprkkr_atoms", "TestSPRKKRAtoms", "test_sysfile", "TestSysfile", "tools", "ase2sprkkr", "run", "commands", "config", "default_content", "parser", "run", "examples", "parser", "run", "info", "default_options", "description", "parser", "run", "nomad", "authenticate", "gather_files", "get_token", "parser", "retrieve_token", "run", "token", "upload", "zipp", "plot", "parser", "run", "run", "parser", "run", "show_structure", "parser", "run", "test", "parser", "run", "shared", "main", "test", "init_tests", "TestCase", "arr_testfce", "assertDictEqual", "assertListEqual", "assert_almost_equals", "assert_equals", "extdict", "testfce", "test_tools", "TestCommon", "version", "visualise", "plot", "Multiplot", "auto_range", "change_default_kwargs", "colormesh", "combine_colormaps", "combined_colormap", "create_rc_context", "finish_plot", "normalize_rc_params", "plotting_function", "set_up_common_plot", "single_plot", "ase2sprkkr", "Changelog", "Some examples of ase2sprkkr", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">A1_Fe_scf_simple</span></code>", "More about installing of the ASE2SPRKKR package", "ASE2SPRKKR software package", "Installation of the package using package managers", "Usefull links", "ASE2SPR-KKR\u2019s philosophy for the developers", "How to use ASE2SPRKKR"], "terms": {"provid": [0, 1, 98, 116, 124, 450, 627, 663, 670, 674, 753, 786, 787, 789, 928, 931, 1012, 1055, 1073, 1075, 1076, 1115, 1124, 1190, 1239, 1251, 1264, 1375, 1377, 1379], "an": [0, 10, 100, 110, 111, 112, 116, 129, 142, 380, 383, 385, 443, 450, 523, 594, 649, 650, 661, 671, 708, 716, 720, 725, 729, 731, 741, 742, 743, 745, 754, 774, 776, 779, 780, 782, 788, 796, 798, 799, 800, 801, 806, 807, 809, 810, 812, 813, 816, 817, 833, 835, 837, 838, 842, 864, 875, 879, 898, 931, 939, 941, 971, 975, 987, 1003, 1007, 1010, 1011, 1012, 1032, 1035, 1036, 1040, 1044, 1045, 1050, 1054, 1055, 1073, 1074, 1075, 1076, 1123, 1124, 1126, 1188, 1190, 1191, 1201, 1222, 1224, 1231, 1233, 1234, 1236, 1239, 1251, 1257, 1262, 1264, 1265, 1266, 1371, 1372, 1373, 1374, 1375, 1376, 1377, 1378, 1379], "interfac": [0, 1, 97, 893, 1231, 1375, 1377], "allow": [0, 31, 595, 626, 663, 709, 716, 720, 723, 726, 731, 733, 742, 751, 766, 767, 769, 776, 786, 787, 789, 797, 802, 804, 805, 808, 811, 812, 814, 815, 818, 891, 898, 931, 975, 977, 979, 981, 983, 985, 987, 989, 991, 1007, 1009, 1032, 1050, 1079, 1082, 1089, 1092, 1187, 1189, 1201, 1233, 1239, 1258, 1266, 1268, 1269, 1371, 1375, 1377, 1378, 1379], "spr": [0, 1, 973, 974, 993, 1006, 1007, 1071, 1077, 1093, 1121, 1127, 1200, 1201, 1220, 1225, 1229, 1231, 1232, 1239, 1256, 1258, 1266, 1267, 1303, 1374, 1375, 1376, 1377, 1378, 1379], "kkr": [0, 1, 973, 974, 977, 979, 985, 991, 993, 1006, 1007, 1032, 1050, 1071, 1077, 1093, 1121, 1127, 1200, 1201, 1220, 1225, 1229, 1231, 1232, 1239, 1256, 1258, 1266, 1267, 1303, 1374, 1375, 1376, 1377, 1379], "electron": [0, 1, 35, 42, 285, 310, 450, 627, 975, 983, 987, 1120, 1222, 1266, 1375, 1377], "structur": [0, 1, 30, 35, 40, 42, 89, 111, 112, 186, 215, 294, 301, 302, 335, 345, 365, 367, 372, 380, 382, 392, 397, 399, 400, 401, 402, 407, 411, 415, 420, 450, 532, 541, 544, 545, 591, 595, 650, 661, 663, 674, 726, 791, 834, 931, 975, 977, 979, 985, 987, 991, 1009, 1187, 1220, 1231, 1266, 1271, 1272, 1273, 1274, 1370, 1371, 1375, 1377, 1379], "calcul": [0, 1, 3, 31, 55, 203, 205, 241, 242, 278, 284, 290, 294, 302, 326, 330, 353, 380, 383, 445, 450, 451, 452, 453, 454, 455, 471, 475, 626, 627, 628, 640, 641, 879, 950, 956, 959, 962, 965, 968, 971, 975, 977, 979, 981, 983, 985, 987, 989, 991, 1007, 1079, 1080, 1082, 1083, 1086, 1087, 1089, 1090, 1094, 1095, 1100, 1101, 1220, 1225, 1230, 1231, 1266, 1370, 1371, 1372, 1373, 1375, 1377, 1378], "within": [0, 202, 227, 238, 383, 791, 1375, 1377], "atom": [0, 4, 5, 8, 30, 52, 89, 91, 111, 144, 145, 183, 186, 187, 188, 189, 215, 280, 284, 287, 290, 294, 299, 305, 321, 326, 327, 338, 347, 358, 362, 380, 382, 383, 384, 385, 386, 387, 389, 392, 393, 397, 402, 404, 405, 407, 411, 415, 416, 443, 450, 538, 562, 566, 579, 633, 636, 644, 648, 649, 650, 651, 659, 660, 661, 663, 674, 675, 879, 975, 977, 979, 981, 983, 985, 987, 989, 991, 1003, 1007, 1010, 1039, 1041, 1096, 1101, 1116, 1123, 1142, 1150, 1163, 1172, 1176, 1180, 1188, 1194, 1195, 1197, 1199, 1201, 1221, 1222, 1223, 1224, 1226, 1227, 1228, 1231, 1233, 1237, 1238, 1239, 1241, 1245, 1246, 1250, 1251, 1257, 1262, 1263, 1264, 1265, 1266, 1268, 1269, 1271, 1274, 1276, 1277, 1371, 1375, 1377, 1378], "simul": [0, 983, 1375, 1377], "environ": [0, 559, 1231, 1371, 1375, 1377, 1379], "abbrevi": [0, 1375, 1377], "ASE": [0, 1, 3, 5, 127, 190, 450, 627, 661, 674, 1150, 1163, 1176, 1180, 1188, 1194, 1201, 1231, 1237, 1264, 1266, 1274, 1371, 1375, 1377, 1378, 1379], "python": [0, 674, 710, 745, 754, 772, 786, 787, 788, 789, 796, 797, 798, 799, 800, 801, 806, 807, 809, 810, 813, 816, 817, 833, 835, 837, 838, 843, 844, 847, 848, 937, 1126, 1371, 1374, 1375, 1376, 1377, 1378, 1379], "tool": [0, 922, 923, 924, 925, 926, 1304, 1305, 1306, 1307, 1308, 1309, 1310, 1311, 1312, 1313, 1314, 1315, 1316, 1317, 1318, 1319, 1320, 1321, 1322, 1323, 1324, 1325, 1326, 1327, 1328, 1329, 1330, 1331, 1332, 1333, 1334, 1335, 1336, 1337, 1338, 1339, 1340, 1341, 1342, 1343, 1344, 1345, 1346, 1347, 1348, 1349, 1350, 1351, 1352, 1353, 1354, 1370, 1375, 1377], "integr": [0, 121, 179, 975, 977, 979, 981, 983, 985, 987, 989, 991, 1258, 1371, 1375, 1377], "variou": [0, 547, 747, 770, 784, 863, 1007, 1115, 1231, 1371, 1375, 1377, 1378, 1379], "onlin": [0, 1374, 1375, 1376, 1377], "version": [0, 36, 116, 121, 125, 130, 382, 520, 521, 754, 937, 1010, 1231, 1258, 1265, 1370, 1374, 1375, 1376, 1377, 1378, 1379], "thi": [0, 1, 3, 5, 16, 31, 89, 111, 115, 116, 139, 144, 145, 151, 200, 227, 278, 294, 328, 353, 371, 380, 383, 385, 396, 424, 432, 444, 450, 626, 627, 648, 656, 665, 667, 670, 671, 708, 714, 715, 716, 717, 718, 720, 722, 726, 727, 730, 731, 734, 741, 742, 743, 748, 749, 753, 754, 766, 767, 769, 772, 786, 787, 788, 789, 791, 796, 797, 798, 799, 800, 801, 802, 806, 807, 808, 809, 810, 811, 813, 814, 816, 817, 818, 831, 832, 833, 834, 835, 837, 838, 839, 848, 874, 876, 877, 878, 879, 884, 889, 894, 898, 899, 900, 901, 902, 921, 923, 928, 930, 931, 932, 933, 934, 935, 938, 939, 941, 959, 975, 977, 979, 981, 983, 985, 987, 989, 991, 1003, 1007, 1009, 1010, 1011, 1012, 1029, 1032, 1035, 1040, 1044, 1047, 1050, 1054, 1055, 1071, 1072, 1073, 1074, 1075, 1076, 1080, 1083, 1090, 1093, 1095, 1096, 1099, 1114, 1115, 1117, 1119, 1123, 1124, 1126, 1130, 1134, 1139, 1142, 1143, 1147, 1150, 1151, 1155, 1160, 1163, 1164, 1168, 1173, 1176, 1177, 1180, 1181, 1185, 1187, 1189, 1190, 1191, 1193, 1195, 1197, 1201, 1223, 1224, 1225, 1229, 1231, 1232, 1233, 1234, 1236, 1237, 1239, 1258, 1264, 1265, 1266, 1267, 1270, 1307, 1311, 1314, 1316, 1319, 1329, 1332, 1335, 1338, 1341, 1357, 1358, 1372, 1373, 1375, 1377, 1378, 1379], "github": [0, 674, 1374, 1375, 1376, 1377, 1379], "repositori": [0, 1375, 1377, 1379], "manual": [0, 116, 388, 975, 987, 1201, 1375, 1377, 1378, 1379], "The": [0, 4, 5, 115, 116, 183, 278, 353, 380, 383, 385, 396, 400, 450, 626, 663, 674, 716, 718, 720, 724, 726, 731, 734, 741, 742, 743, 748, 749, 750, 752, 763, 766, 767, 769, 786, 787, 788, 789, 791, 796, 797, 798, 799, 800, 801, 802, 804, 806, 807, 809, 810, 812, 813, 816, 817, 832, 833, 834, 835, 837, 838, 839, 841, 843, 846, 848, 871, 872, 873, 874, 875, 877, 878, 879, 885, 894, 898, 926, 928, 930, 931, 934, 939, 941, 974, 975, 977, 979, 981, 983, 984, 985, 987, 989, 991, 996, 998, 999, 1000, 1002, 1003, 1006, 1007, 1010, 1011, 1012, 1032, 1033, 1035, 1040, 1041, 1044, 1050, 1051, 1053, 1054, 1055, 1056, 1073, 1074, 1075, 1076, 1078, 1080, 1081, 1083, 1088, 1090, 1095, 1101, 1123, 1124, 1125, 1126, 1127, 1154, 1164, 1172, 1176, 1180, 1184, 1188, 1189, 1190, 1191, 1192, 1194, 1195, 1197, 1199, 1201, 1222, 1224, 1226, 1227, 1230, 1231, 1233, 1234, 1236, 1237, 1238, 1239, 1241, 1251, 1258, 1262, 1264, 1266, 1304, 1358, 1367, 1369, 1371, 1374, 1375, 1376, 1379], "simplest": [0, 1374, 1376], "wai": [0, 4, 31, 115, 399, 400, 450, 718, 726, 729, 731, 766, 767, 769, 786, 787, 788, 791, 800, 801, 802, 807, 816, 832, 833, 834, 837, 843, 885, 931, 975, 977, 979, 981, 983, 985, 987, 989, 991, 1007, 1012, 1055, 1073, 1075, 1076, 1124, 1190, 1231, 1239, 1371, 1374, 1376, 1378], "i": [0, 4, 5, 30, 31, 99, 105, 115, 116, 130, 137, 139, 183, 185, 227, 242, 278, 294, 321, 353, 366, 368, 371, 383, 385, 396, 400, 413, 450, 453, 542, 559, 595, 627, 639, 641, 663, 667, 671, 674, 675, 709, 710, 716, 718, 719, 720, 722, 723, 724, 726, 729, 731, 733, 734, 735, 741, 742, 743, 745, 748, 749, 750, 752, 754, 765, 766, 767, 769, 786, 787, 788, 789, 791, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 816, 817, 818, 832, 833, 834, 835, 837, 838, 839, 840, 842, 843, 845, 862, 864, 866, 869, 870, 871, 872, 874, 876, 879, 884, 889, 891, 893, 894, 898, 902, 928, 931, 932, 939, 941, 975, 977, 979, 981, 983, 985, 987, 989, 991, 1003, 1007, 1010, 1011, 1012, 1032, 1035, 1040, 1041, 1044, 1050, 1053, 1054, 1055, 1056, 1072, 1073, 1074, 1075, 1076, 1095, 1096, 1100, 1120, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1134, 1139, 1143, 1147, 1150, 1151, 1155, 1160, 1163, 1164, 1168, 1173, 1176, 1177, 1180, 1181, 1185, 1188, 1189, 1190, 1191, 1192, 1193, 1194, 1195, 1197, 1199, 1200, 1201, 1222, 1224, 1226, 1231, 1233, 1234, 1236, 1237, 1239, 1245, 1251, 1258, 1264, 1266, 1268, 1269, 1270, 1314, 1316, 1319, 1329, 1332, 1335, 1358, 1367, 1369, 1371, 1374, 1376, 1378, 1379], "them": [0, 1, 31, 432, 716, 717, 718, 898, 1007, 1131, 1251, 1266, 1358, 1367, 1374, 1376], "either": [0, 717, 718, 720, 731, 734, 742, 743, 769, 809, 812, 813, 837, 845, 879, 898, 928, 1007, 1041, 1150, 1163, 1176, 1180, 1195, 1197, 1222, 1231, 1251, 1264, 1367, 1369, 1374, 1376, 1378, 1379], "c": [0, 230, 231, 382, 674, 720, 867, 871, 872, 975, 977, 979, 985, 987, 991, 1120, 1230, 1231, 1258, 1361, 1374, 1376, 1379], "reccomend": [0, 1374, 1376], "beta": [0, 382, 1374, 1375, 1376], "can": [0, 5, 115, 116, 123, 183, 385, 396, 399, 424, 440, 450, 534, 535, 648, 662, 667, 674, 716, 720, 723, 726, 729, 730, 731, 734, 741, 742, 743, 748, 749, 750, 752, 753, 754, 766, 767, 769, 784, 786, 787, 788, 789, 791, 797, 803, 804, 806, 809, 811, 812, 832, 834, 837, 839, 842, 843, 845, 848, 875, 876, 879, 887, 894, 898, 899, 923, 926, 928, 931, 939, 941, 977, 979, 985, 991, 1003, 1007, 1010, 1011, 1012, 1032, 1035, 1036, 1040, 1041, 1044, 1045, 1050, 1054, 1055, 1073, 1074, 1075, 1076, 1095, 1100, 1122, 1124, 1150, 1163, 1164, 1176, 1180, 1189, 1190, 1191, 1194, 1195, 1197, 1201, 1222, 1224, 1225, 1231, 1233, 1234, 1236, 1238, 1239, 1250, 1251, 1258, 1264, 1266, 1270, 1341, 1358, 1371, 1374, 1376, 1378, 1379], "some": [0, 19, 116, 432, 450, 513, 543, 663, 679, 696, 716, 720, 731, 741, 768, 786, 787, 788, 791, 796, 798, 799, 800, 801, 802, 806, 807, 809, 810, 813, 816, 817, 832, 833, 834, 835, 837, 838, 852, 879, 887, 898, 902, 909, 931, 935, 977, 979, 985, 991, 1007, 1012, 1015, 1055, 1061, 1073, 1075, 1076, 1104, 1124, 1126, 1150, 1163, 1176, 1180, 1190, 1195, 1197, 1204, 1224, 1231, 1233, 1238, 1239, 1246, 1266, 1280, 1345, 1371, 1374, 1376, 1378, 1379], "mostli": [0, 1231, 1374, 1376, 1378], "ha": [0, 115, 116, 380, 421, 450, 651, 716, 718, 720, 722, 726, 727, 731, 741, 742, 743, 748, 749, 766, 767, 769, 791, 799, 834, 837, 840, 842, 876, 885, 931, 939, 941, 1003, 1007, 1008, 1011, 1012, 1032, 1035, 1040, 1044, 1050, 1054, 1055, 1073, 1074, 1075, 1076, 1095, 1122, 1124, 1150, 1163, 1176, 1180, 1190, 1191, 1195, 1197, 1199, 1224, 1231, 1234, 1236, 1239, 1258, 1264, 1266, 1371, 1374, 1376, 1378, 1379], "more": [0, 5, 16, 139, 183, 278, 450, 742, 837, 845, 926, 931, 975, 977, 979, 981, 983, 985, 987, 989, 991, 1012, 1055, 1073, 1075, 1076, 1124, 1190, 1229, 1239, 1246, 1250, 1251, 1258, 1358, 1367, 1371, 1375, 1376], "repair": [0, 1374, 1376], "than": [0, 5, 139, 294, 422, 450, 834, 926, 931, 983, 1012, 1055, 1073, 1075, 1076, 1124, 1164, 1176, 1180, 1189, 1190, 1195, 1197, 1239, 1374, 1376], "introduc": [0, 1371, 1374, 1376], "moreov": [0, 748, 891, 1007, 1374, 1376], "you": [0, 444, 450, 726, 754, 797, 837, 931, 977, 979, 985, 991, 1012, 1032, 1050, 1055, 1201, 1231, 1258, 1374, 1376, 1379], "enjoi": [0, 1374, 1376], "new": [0, 116, 141, 641, 671, 749, 757, 791, 834, 842, 879, 1007, 1080, 1083, 1090, 1095, 1101, 1150, 1163, 1176, 1180, 1195, 1197, 1222, 1229, 1231, 1245, 1251, 1258, 1263, 1266, 1374, 1376, 1379], "properti": [0, 36, 43, 47, 50, 60, 63, 89, 116, 121, 123, 139, 285, 286, 287, 288, 297, 303, 310, 315, 321, 325, 336, 346, 354, 357, 361, 366, 382, 418, 421, 450, 454, 513, 520, 521, 634, 668, 674, 716, 718, 724, 726, 731, 733, 734, 735, 741, 742, 743, 749, 750, 751, 752, 766, 767, 769, 771, 786, 788, 791, 812, 816, 833, 837, 842, 862, 874, 877, 878, 879, 931, 1007, 1012, 1032, 1039, 1041, 1050, 1055, 1073, 1075, 1076, 1080, 1083, 1090, 1095, 1100, 1101, 1116, 1124, 1150, 1154, 1163, 1172, 1176, 1180, 1184, 1190, 1194, 1195, 1197, 1199, 1201, 1222, 1224, 1230, 1231, 1239, 1246, 1251, 1254, 1255, 1257, 1258, 1262, 1263, 1264, 1266, 1374, 1375, 1376, 1378], "ar": [0, 4, 5, 115, 183, 200, 238, 294, 327, 380, 383, 450, 515, 516, 539, 540, 549, 566, 596, 599, 600, 626, 627, 663, 670, 674, 709, 714, 716, 717, 718, 720, 723, 724, 725, 726, 731, 741, 742, 743, 749, 766, 767, 769, 776, 791, 804, 832, 834, 837, 841, 842, 846, 847, 879, 887, 891, 898, 899, 928, 931, 935, 939, 941, 975, 977, 979, 981, 983, 985, 987, 989, 991, 1003, 1006, 1007, 1010, 1011, 1012, 1035, 1040, 1044, 1054, 1055, 1072, 1073, 1074, 1075, 1076, 1095, 1100, 1120, 1122, 1123, 1124, 1127, 1189, 1190, 1191, 1193, 1194, 1201, 1224, 1226, 1230, 1231, 1232, 1233, 1234, 1236, 1239, 1243, 1245, 1246, 1251, 1258, 1266, 1267, 1315, 1357, 1371, 1374, 1376, 1378, 1379], "avail": [0, 31, 112, 432, 869, 928, 1258, 1266, 1304, 1371, 1374, 1376, 1379], "onli": [0, 4, 5, 183, 385, 439, 626, 627, 663, 667, 670, 716, 720, 731, 741, 742, 743, 749, 750, 754, 766, 767, 769, 797, 806, 837, 847, 862, 876, 879, 898, 900, 901, 902, 931, 939, 941, 975, 983, 987, 1003, 1007, 1011, 1012, 1032, 1035, 1040, 1044, 1050, 1054, 1055, 1072, 1073, 1074, 1075, 1076, 1124, 1190, 1191, 1224, 1226, 1231, 1234, 1236, 1239, 1258, 1264, 1266, 1270, 1370, 1371, 1374, 1376, 1378, 1379], "through": [0, 115, 116, 130, 1258, 1374, 1376, 1379], "pre": [0, 1374, 1376], "To": [0, 116, 278, 380, 716, 731, 742, 748, 879, 1258, 1266, 1374, 1376, 1378, 1379], "blead": [0, 1374, 1376], "edg": [0, 294, 1374, 1376], "newest": [0, 1374, 1376], "featur": [0, 147, 380, 453, 975, 987, 1374, 1376, 1379], "risk": [0, 385, 1374, 1376], "encount": [0, 122, 125, 144, 1374, 1376], "http": [0, 671, 674, 745, 797, 937, 1229, 1231, 1374, 1376, 1378, 1379], "com": [0, 745, 797, 937, 1374, 1376, 1379], "develop": [0, 726, 1095, 1231, 1374, 1375, 1376], "In": [0, 432, 450, 714, 717, 723, 772, 788, 796, 798, 799, 800, 801, 806, 807, 809, 810, 813, 816, 817, 833, 835, 837, 838, 879, 893, 977, 979, 985, 991, 1054, 1120, 1123, 1126, 1127, 1193, 1231, 1232, 1258, 1267, 1357, 1374, 1376, 1378, 1379], "system": [0, 321, 399, 408, 975, 977, 979, 981, 983, 985, 987, 989, 991, 1143, 1173, 1199, 1224, 1225, 1226, 1264, 1374, 1376, 1379], "util": [0, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 380, 385, 440, 482, 483, 484, 485, 486, 487, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 654, 748, 879, 1270, 1370, 1374, 1376, 1378], "python3": [0, 31, 671, 1374, 1376], "call": [0, 31, 450, 716, 726, 734, 748, 791, 837, 864, 879, 891, 926, 931, 965, 968, 975, 977, 979, 981, 983, 985, 987, 989, 991, 1007, 1142, 1150, 1163, 1176, 1180, 1195, 1197, 1201, 1231, 1233, 1266, 1367, 1371, 1374, 1376, 1378, 1379], "pip3": [0, 1374, 1376], "It": [0, 116, 139, 380, 663, 720, 726, 731, 743, 766, 767, 769, 788, 796, 798, 799, 800, 801, 806, 807, 809, 810, 813, 816, 817, 833, 835, 837, 838, 842, 875, 894, 902, 928, 931, 932, 975, 977, 979, 981, 983, 985, 987, 989, 991, 1007, 1100, 1126, 1201, 1222, 1258, 1264, 1374, 1376, 1379], "mai": [0, 450, 708, 837, 1374, 1376, 1379], "possibl": [0, 3, 183, 367, 400, 631, 720, 731, 734, 791, 806, 809, 811, 818, 837, 879, 892, 898, 928, 931, 975, 977, 979, 981, 983, 985, 987, 989, 991, 1007, 1076, 1117, 1266, 1371, 1374, 1376, 1378, 1379], "path": [0, 102, 109, 137, 151, 160, 174, 212, 302, 336, 346, 382, 716, 931, 975, 977, 979, 981, 983, 985, 987, 989, 991, 1007, 1012, 1055, 1073, 1075, 1076, 1100, 1101, 1124, 1190, 1231, 1239, 1374, 1376, 1379], "case": [0, 144, 543, 716, 720, 741, 788, 796, 798, 799, 800, 801, 806, 807, 809, 810, 813, 816, 817, 833, 835, 837, 838, 879, 931, 975, 977, 979, 981, 983, 985, 987, 989, 991, 1124, 1126, 1245, 1266, 1374, 1376, 1379], "run": [0, 30, 106, 179, 380, 655, 894, 923, 1007, 1010, 1030, 1039, 1048, 1100, 1101, 1231, 1307, 1311, 1314, 1319, 1329, 1333, 1335, 1338, 1341, 1370, 1371, 1374, 1375, 1376], "m": [0, 31, 239, 418, 451, 797, 802, 1117, 1374, 1376], "If": [0, 4, 5, 30, 123, 144, 385, 422, 450, 453, 641, 663, 667, 674, 716, 718, 720, 726, 731, 741, 742, 743, 748, 749, 766, 767, 769, 786, 787, 789, 791, 797, 809, 834, 837, 840, 843, 870, 898, 925, 928, 931, 932, 939, 941, 975, 977, 979, 981, 983, 985, 987, 989, 991, 1003, 1007, 1011, 1012, 1032, 1035, 1040, 1044, 1050, 1054, 1055, 1073, 1074, 1075, 1076, 1095, 1124, 1150, 1163, 1176, 1180, 1190, 1191, 1194, 1195, 1197, 1201, 1222, 1224, 1226, 1231, 1234, 1236, 1237, 1239, 1251, 1258, 1264, 1266, 1358, 1367, 1369, 1374, 1376, 1378, 1379], "linux": [0, 1374, 1376], "distribut": [0, 1374, 1376], "e": [0, 183, 185, 287, 288, 385, 399, 400, 422, 671, 674, 675, 708, 709, 710, 716, 718, 719, 720, 722, 723, 724, 725, 726, 731, 733, 741, 742, 743, 763, 769, 786, 787, 788, 789, 791, 806, 809, 837, 841, 843, 845, 846, 876, 879, 900, 901, 931, 939, 941, 946, 974, 975, 977, 979, 981, 985, 987, 989, 991, 1003, 1007, 1011, 1012, 1035, 1040, 1044, 1054, 1055, 1073, 1074, 1075, 1076, 1095, 1100, 1120, 1122, 1124, 1125, 1126, 1134, 1139, 1142, 1143, 1147, 1150, 1151, 1155, 1160, 1163, 1164, 1168, 1173, 1176, 1177, 1180, 1181, 1185, 1189, 1190, 1191, 1194, 1195, 1197, 1199, 1201, 1222, 1224, 1225, 1230, 1231, 1233, 1234, 1236, 1237, 1239, 1251, 1258, 1264, 1266, 1371, 1374, 1376, 1378, 1379], "g": [0, 121, 242, 243, 249, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 385, 399, 422, 523, 640, 671, 674, 708, 716, 718, 722, 723, 725, 726, 731, 733, 741, 742, 743, 769, 786, 787, 788, 789, 791, 806, 809, 837, 841, 843, 845, 846, 876, 879, 900, 901, 931, 939, 941, 946, 974, 977, 979, 985, 989, 991, 1003, 1007, 1011, 1012, 1035, 1040, 1044, 1054, 1055, 1073, 1074, 1075, 1076, 1095, 1100, 1124, 1142, 1150, 1163, 1176, 1180, 1190, 1191, 1194, 1195, 1197, 1199, 1201, 1222, 1224, 1225, 1230, 1231, 1233, 1234, 1236, 1237, 1239, 1251, 1266, 1370, 1371, 1374, 1376, 1378, 1379], "debian": [0, 1374, 1376], "ubuntu": [0, 1374, 1376], "apt": [0, 75, 1374, 1376], "zypper": [0, 1374, 1376], "For": [0, 121, 185, 383, 450, 674, 741, 742, 743, 837, 879, 939, 941, 975, 977, 979, 981, 983, 985, 987, 989, 991, 1003, 1010, 1011, 1035, 1040, 1044, 1054, 1074, 1134, 1139, 1143, 1147, 1151, 1155, 1160, 1164, 1168, 1173, 1177, 1181, 1185, 1188, 1189, 1191, 1229, 1231, 1234, 1236, 1244, 1258, 1266, 1374, 1376, 1379], "instruct": [0, 1374, 1376], "see": [0, 4, 5, 89, 116, 278, 369, 371, 396, 399, 400, 445, 674, 716, 718, 728, 729, 731, 741, 742, 743, 752, 788, 837, 843, 847, 928, 931, 939, 941, 948, 975, 977, 979, 981, 983, 985, 987, 989, 991, 1003, 1007, 1010, 1011, 1012, 1035, 1040, 1044, 1054, 1055, 1073, 1074, 1075, 1076, 1100, 1124, 1134, 1139, 1143, 1147, 1151, 1155, 1160, 1164, 1168, 1173, 1177, 1181, 1185, 1188, 1189, 1190, 1191, 1194, 1224, 1230, 1231, 1234, 1236, 1239, 1251, 1258, 1266, 1304, 1314, 1319, 1329, 1332, 1335, 1361, 1374, 1376, 1378, 1379], "anaconda": [0, 1374, 1376], "doc": [0, 89, 136, 146, 716, 759, 760, 940, 1261, 1314, 1319, 1329, 1332, 1335, 1370, 1374, 1376, 1378], "howev": [0, 4, 31, 385, 731, 741, 742, 766, 767, 769, 786, 787, 788, 789, 791, 797, 801, 802, 806, 807, 808, 809, 810, 813, 814, 817, 818, 832, 835, 837, 839, 879, 894, 928, 931, 1012, 1032, 1041, 1050, 1055, 1073, 1075, 1076, 1124, 1126, 1190, 1239, 1245, 1264, 1266, 1374, 1376, 1378, 1379], "user": [0, 720, 721, 731, 766, 767, 769, 786, 787, 788, 791, 805, 809, 812, 814, 815, 832, 834, 837, 838, 875, 898, 931, 945, 947, 1012, 1055, 1073, 1075, 1076, 1124, 1190, 1239, 1374, 1375, 1376, 1379], "unexperienc": [0, 1374, 1376], "simpler": [0, 1374, 1376], "recommend": [0, 1374, 1376], "do": [0, 151, 206, 215, 216, 217, 226, 242, 294, 326, 330, 380, 399, 450, 483, 716, 718, 720, 723, 726, 731, 735, 741, 742, 745, 749, 754, 766, 772, 786, 787, 788, 791, 797, 800, 801, 802, 807, 809, 816, 832, 833, 834, 837, 876, 891, 898, 928, 931, 956, 974, 975, 977, 979, 982, 983, 985, 987, 989, 991, 1007, 1032, 1040, 1041, 1042, 1050, 1054, 1079, 1082, 1089, 1090, 1201, 1231, 1233, 1237, 1370, 1371, 1372, 1373, 1374, 1376, 1379], "want": [0, 775, 894, 1231, 1374, 1376, 1379], "public": [0, 450, 1374, 1376], "3": [0, 166, 226, 230, 231, 234, 239, 241, 346, 450, 736, 772, 789, 797, 891, 926, 928, 975, 977, 979, 981, 983, 985, 987, 989, 991, 1039, 1117, 1118, 1120, 1231, 1258, 1359, 1374, 1375, 1376, 1379], "8": [0, 294, 867, 975, 987, 1117, 1118, 1120, 1229, 1374, 1376, 1379], "check": [0, 5, 10, 99, 116, 200, 380, 390, 559, 566, 716, 720, 726, 743, 768, 773, 788, 796, 798, 799, 800, 801, 806, 807, 809, 810, 813, 816, 817, 833, 835, 837, 838, 879, 890, 898, 931, 1007, 1036, 1045, 1126, 1233, 1251, 1370, 1371, 1374, 1376, 1379], "pypoject": [0, 1374, 1376], "toml": [0, 1374, 1376], "file": [0, 100, 121, 140, 144, 151, 157, 160, 200, 202, 216, 242, 294, 385, 399, 409, 424, 432, 450, 523, 638, 641, 667, 668, 671, 716, 717, 719, 720, 723, 725, 726, 728, 729, 731, 732, 733, 734, 736, 741, 742, 743, 765, 766, 767, 768, 769, 776, 782, 791, 799, 806, 819, 821, 822, 825, 826, 828, 831, 832, 834, 835, 837, 872, 874, 875, 876, 879, 893, 894, 898, 931, 933, 938, 939, 941, 953, 973, 975, 977, 979, 981, 983, 985, 987, 989, 991, 993, 994, 996, 998, 999, 1000, 1001, 1002, 1003, 1006, 1007, 1009, 1010, 1011, 1012, 1029, 1032, 1033, 1035, 1036, 1039, 1040, 1044, 1045, 1047, 1050, 1051, 1053, 1054, 1055, 1056, 1057, 1058, 1071, 1072, 1073, 1074, 1075, 1076, 1079, 1080, 1082, 1083, 1089, 1090, 1095, 1099, 1100, 1101, 1123, 1124, 1129, 1134, 1139, 1142, 1143, 1147, 1150, 1151, 1155, 1160, 1163, 1164, 1168, 1173, 1176, 1177, 1180, 1181, 1185, 1187, 1189, 1190, 1191, 1193, 1195, 1197, 1200, 1201, 1231, 1232, 1233, 1234, 1235, 1236, 1238, 1239, 1240, 1241, 1242, 1243, 1245, 1246, 1265, 1270, 1271, 1274, 1308, 1314, 1319, 1329, 1332, 1335, 1357, 1365, 1371, 1372, 1373, 1374, 1375, 1376], "clone": [0, 180, 1374, 1376, 1379], "checkout": [0, 1374, 1376], "releas": [0, 648, 1374, 1376], "first": [0, 4, 5, 175, 183, 716, 720, 723, 728, 731, 736, 742, 748, 749, 766, 767, 769, 803, 834, 867, 870, 898, 931, 975, 977, 979, 981, 983, 985, 987, 991, 1007, 1012, 1032, 1050, 1055, 1058, 1073, 1075, 1076, 1124, 1190, 1201, 1226, 1231, 1233, 1239, 1251, 1257, 1258, 1374, 1376, 1378, 1379], "line": [0, 56, 97, 203, 205, 249, 726, 731, 742, 791, 800, 809, 810, 816, 825, 832, 833, 834, 837, 931, 1053, 1054, 1056, 1192, 1231, 1271, 1370, 1374, 1376, 1378, 1379], "fetch": [0, 1374, 1376], "second": [0, 183, 654, 834, 979, 989, 991, 1226, 1258, 1374, 1376, 1378], "one": [0, 4, 5, 450, 667, 674, 675, 731, 742, 775, 786, 791, 803, 804, 809, 825, 837, 873, 879, 928, 931, 975, 977, 979, 981, 983, 985, 987, 989, 991, 1011, 1012, 1032, 1039, 1050, 1054, 1055, 1073, 1074, 1075, 1076, 1124, 1142, 1150, 1163, 1176, 1180, 1189, 1190, 1195, 1197, 1226, 1227, 1231, 1237, 1239, 1246, 1250, 1251, 1258, 1263, 1264, 1266, 1270, 1358, 1371, 1374, 1376, 1378, 1379], "out": [0, 19, 226, 287, 288, 290, 679, 696, 852, 894, 909, 1007, 1015, 1054, 1061, 1104, 1204, 1231, 1258, 1280, 1345, 1371, 1374, 1376, 1379], "stabl": [0, 206, 1374, 1376], "product": [0, 1374, 1376], "current": [0, 202, 437, 722, 726, 734, 894, 931, 934, 1007, 1012, 1055, 1073, 1075, 1076, 1078, 1079, 1081, 1082, 1088, 1089, 1124, 1190, 1231, 1239, 1264, 1266, 1374, 1376, 1378, 1379], "earlier": [0, 754, 1374, 1376, 1379], "download": [0, 1374, 1376], "altern": [0, 711, 713, 720, 731, 766, 767, 769, 898, 931, 1012, 1055, 1073, 1075, 1076, 1124, 1190, 1231, 1239, 1374, 1376], "master": [0, 385, 1224, 1374, 1376], "branch": [0, 733, 1374, 1376], "newer": [0, 1374, 1376], "thorougli": [0, 1374, 1376], "test": [0, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 408, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 671, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 851, 859, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 920, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1203, 1204, 1205, 1206, 1207, 1208, 1209, 1210, 1211, 1212, 1213, 1214, 1215, 1216, 1217, 1218, 1219, 1231, 1276, 1279, 1280, 1281, 1282, 1283, 1284, 1285, 1286, 1287, 1288, 1289, 1290, 1291, 1292, 1293, 1294, 1295, 1297, 1298, 1299, 1300, 1301, 1302, 1307, 1311, 1339, 1340, 1344, 1345, 1346, 1347, 1348, 1349, 1350, 1351, 1352, 1353, 1354, 1370, 1371, 1374, 1376, 1379], "yet": [0, 16, 1008, 1374, 1376, 1379], "bleed": [0, 1374, 1376], "feel": [0, 1374, 1376, 1379], "free": [0, 1120, 1374, 1376, 1379], "try": [0, 52, 299, 358, 362, 633, 720, 726, 743, 898, 1032, 1050, 1231, 1374, 1376], "Or": [0, 1374, 1376], "better": [0, 19, 679, 696, 741, 852, 909, 937, 1015, 1061, 1104, 1204, 1280, 1345, 1371, 1374, 1376], "idea": [0, 1374, 1376], "edit": [0, 741, 742, 743, 939, 941, 1003, 1011, 1035, 1040, 1044, 1054, 1074, 1191, 1234, 1236, 1374, 1376], "where": [0, 112, 183, 197, 720, 726, 742, 743, 837, 898, 928, 1007, 1092, 1231, 1264, 1274, 1358, 1369, 1370, 1374, 1376, 1379], "chang": [0, 139, 437, 450, 716, 726, 731, 879, 898, 931, 938, 977, 979, 985, 989, 991, 1007, 1012, 1055, 1073, 1075, 1076, 1124, 1190, 1231, 1239, 1254, 1266, 1360, 1374, 1375, 1376, 1378, 1379], "made": [0, 1266, 1374, 1376, 1379], "build": [0, 4, 5, 380, 797, 1226, 1227, 1228, 1370, 1371, 1374, 1376, 1379], "isol": [0, 437, 1374, 1376], "add": [0, 4, 660, 667, 720, 726, 731, 742, 748, 749, 759, 768, 773, 774, 786, 787, 788, 791, 800, 801, 802, 807, 816, 832, 833, 834, 837, 881, 883, 884, 886, 889, 898, 931, 975, 977, 979, 985, 987, 991, 1001, 1012, 1055, 1057, 1073, 1075, 1076, 1124, 1190, 1224, 1231, 1239, 1251, 1266, 1371, 1374, 1376, 1379], "dep": [0, 1374, 1376], "switch": [0, 725, 733, 977, 979, 985, 991, 1370, 1371, 1374, 1376], "faster": [0, 975, 977, 979, 981, 983, 985, 987, 989, 991, 1374, 1376], "rebuild": [0, 1374, 1376], "limit": [0, 5, 720, 983, 1374, 1376, 1379], "won": [0, 4, 1266, 1374, 1376], "t": [0, 4, 65, 294, 383, 450, 627, 720, 728, 801, 975, 977, 979, 981, 983, 985, 987, 989, 991, 1012, 1055, 1101, 1125, 1126, 1190, 1224, 1230, 1231, 1264, 1266, 1374, 1376, 1379], "newli": [0, 742, 899, 900, 901, 1245, 1266, 1374, 1376, 1379], "creat": [0, 121, 148, 166, 176, 211, 399, 437, 438, 440, 648, 665, 671, 674, 716, 718, 719, 720, 721, 723, 724, 726, 731, 733, 735, 741, 742, 753, 766, 784, 788, 796, 798, 799, 800, 801, 806, 807, 809, 810, 813, 816, 817, 833, 834, 835, 837, 838, 842, 874, 877, 878, 891, 898, 923, 928, 931, 940, 994, 1001, 1007, 1008, 1012, 1031, 1032, 1036, 1041, 1045, 1049, 1050, 1055, 1057, 1126, 1133, 1135, 1138, 1142, 1146, 1150, 1154, 1158, 1159, 1163, 1167, 1169, 1172, 1176, 1180, 1184, 1194, 1195, 1196, 1197, 1198, 1199, 1201, 1224, 1226, 1227, 1228, 1231, 1233, 1235, 1237, 1240, 1242, 1245, 1246, 1247, 1251, 1263, 1264, 1266, 1271, 1274, 1364, 1367, 1369, 1370, 1374, 1376, 1378, 1379], "automat": [0, 380, 667, 797, 1251, 1266, 1374, 1376, 1378, 1379], "need": [0, 147, 294, 385, 450, 674, 726, 734, 748, 876, 899, 931, 1012, 1055, 1231, 1246, 1258, 1266, 1371, 1374, 1376, 1378, 1379], "command": [0, 97, 106, 946, 1100, 1304, 1307, 1308, 1309, 1310, 1311, 1312, 1313, 1314, 1315, 1316, 1317, 1318, 1319, 1320, 1321, 1322, 1323, 1324, 1325, 1326, 1327, 1328, 1329, 1330, 1331, 1332, 1333, 1334, 1335, 1336, 1337, 1338, 1339, 1340, 1370, 1374, 1376], "abov": [0, 89, 185, 326, 1231, 1274, 1374, 1376, 1378, 1379], "again": [0, 876, 1007, 1374, 1376, 1378], "make": [0, 16, 111, 114, 116, 127, 146, 176, 380, 432, 438, 450, 534, 535, 547, 667, 703, 859, 879, 892, 928, 1251, 1266, 1371, 1374, 1376, 1379], "notic": [0, 1374, 1376], "process": [0, 399, 671, 726, 892, 894, 1007, 1010, 1100, 1164, 1176, 1180, 1189, 1194, 1195, 1197, 1230, 1231, 1303, 1371, 1374, 1376, 1379], "fail": [0, 595, 720, 748, 773, 774, 898, 1374, 1376, 1379], "remov": [0, 151, 720, 721, 726, 742, 764, 875, 931, 1251, 1374, 1376], "directori": [0, 19, 202, 399, 437, 450, 679, 696, 852, 894, 909, 1007, 1015, 1061, 1079, 1080, 1082, 1083, 1086, 1087, 1089, 1090, 1094, 1095, 1100, 1101, 1104, 1204, 1231, 1280, 1345, 1370, 1371, 1374, 1376], "y": [0, 30, 50, 294, 310, 315, 328, 329, 357, 361, 366, 368, 418, 802, 891, 977, 979, 985, 991, 1120, 1258, 1361, 1374, 1376], "previou": [0, 720, 731, 742, 743, 898, 931, 1073, 1374, 1376], "exist": [0, 183, 200, 385, 450, 720, 722, 733, 1194, 1231, 1251, 1264, 1374, 1376, 1379], "happen": [0, 380, 1374, 1376], "ommit": [0, 731, 806, 837, 1374, 1376], "On": [0, 837, 1374, 1376, 1379], "encout": [0, 1374, 1376], "problem": [0, 543, 708, 716, 720, 723, 731, 784, 898, 935, 975, 977, 979, 981, 983, 985, 987, 989, 991, 1003, 1371, 1374, 1376, 1379], "ninja": [0, 1374, 1376], "help": [0, 139, 176, 716, 731, 766, 767, 769, 879, 1371, 1374, 1376, 1379], "sudo": [0, 1374, 1376], "publish": [0, 671, 1374, 1376], "io": [0, 7, 8, 385, 674, 1370, 1374, 1376, 1378], "open": [0, 385, 720, 742, 898, 931, 1007, 1231, 1374, 1376], "index": [0, 286, 287, 328, 366, 368, 371, 450, 769, 870, 879, 928, 1041, 1159, 1195, 1229, 1264, 1374, 1375, 1376], "html": [0, 39, 116, 118, 674, 1231, 1374, 1376], "offlin": [0, 1374, 1376], "contain": [0, 3, 36, 43, 47, 50, 59, 64, 89, 116, 119, 121, 140, 208, 220, 272, 286, 287, 288, 297, 303, 310, 315, 321, 325, 336, 346, 353, 354, 357, 361, 366, 376, 382, 399, 418, 421, 422, 424, 435, 439, 444, 445, 450, 520, 521, 547, 650, 651, 656, 670, 674, 708, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 726, 727, 731, 733, 734, 735, 741, 742, 743, 763, 766, 767, 768, 769, 784, 791, 797, 831, 834, 837, 874, 875, 877, 878, 879, 898, 902, 921, 926, 931, 938, 939, 940, 941, 974, 975, 977, 979, 981, 983, 985, 987, 989, 991, 1003, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1031, 1032, 1033, 1035, 1036, 1040, 1041, 1044, 1045, 1049, 1050, 1051, 1054, 1055, 1057, 1071, 1072, 1073, 1074, 1075, 1076, 1080, 1083, 1090, 1099, 1101, 1114, 1115, 1119, 1123, 1124, 1127, 1130, 1133, 1134, 1135, 1138, 1139, 1142, 1143, 1146, 1147, 1150, 1151, 1154, 1155, 1158, 1159, 1160, 1163, 1164, 1167, 1168, 1169, 1172, 1173, 1175, 1176, 1177, 1180, 1181, 1184, 1185, 1187, 1188, 1189, 1190, 1191, 1194, 1195, 1196, 1198, 1199, 1201, 1224, 1225, 1229, 1231, 1233, 1234, 1235, 1236, 1237, 1238, 1239, 1240, 1241, 1242, 1246, 1258, 1265, 1266, 1270, 1274, 1275, 1374, 1376, 1378, 1379], "part": [0, 4, 719, 725, 731, 879, 894, 975, 977, 979, 981, 983, 985, 987, 989, 991, 1072, 1074, 1122, 1224, 1226, 1374, 1376, 1378], "gener": [0, 3, 115, 116, 392, 397, 399, 402, 405, 406, 407, 408, 409, 410, 411, 415, 450, 520, 521, 653, 716, 720, 726, 727, 731, 741, 748, 759, 765, 766, 769, 837, 874, 879, 898, 931, 965, 968, 975, 987, 1012, 1055, 1073, 1075, 1076, 1114, 1124, 1142, 1150, 1163, 1176, 1180, 1190, 1193, 1195, 1197, 1231, 1239, 1266, 1357, 1358, 1371, 1372, 1373, 1374, 1375, 1376, 1378], "docstr": [0, 131, 146, 758, 759, 1371, 1374, 1376], "regener": [0, 1374, 1376], "sphinx": [0, 1374, 1376], "toolbox": [0, 1374, 1376], "pandoc": [0, 1374, 1376], "readm": [0, 1374, 1376], "md": [0, 383, 1374, 1376], "offici": [0, 1374, 1376], "miss": [0, 144, 450, 716, 731, 766, 767, 769, 1007, 1233, 1359, 1374, 1376], "attribut": [0, 116, 127, 708, 722, 726, 731, 747, 754, 770, 784, 785, 791, 795, 836, 837, 928, 931, 974, 975, 977, 979, 981, 983, 989, 991, 993, 1073, 1091, 1115, 1119, 1128, 1231, 1266, 1314, 1371, 1374, 1376, 1379], "when": [0, 122, 125, 382, 383, 450, 516, 541, 545, 627, 663, 726, 731, 734, 741, 743, 745, 753, 766, 767, 769, 791, 876, 879, 887, 899, 931, 1012, 1055, 1073, 1075, 1076, 1124, 1150, 1163, 1176, 1180, 1190, 1195, 1197, 1231, 1239, 1251, 1258, 1266, 1374, 1376, 1378, 1379], "so": [0, 5, 396, 422, 445, 718, 726, 731, 734, 741, 754, 766, 767, 769, 786, 787, 788, 791, 797, 800, 801, 802, 807, 809, 816, 832, 833, 834, 837, 841, 846, 866, 876, 879, 1007, 1009, 1114, 1164, 1176, 1180, 1187, 1189, 1195, 1197, 1222, 1230, 1231, 1246, 1251, 1266, 1371, 1374, 1376, 1378, 1379], "till": [0, 1374, 1376], "pullrequest": [0, 1374, 1376, 1379], "correct": [0, 294, 302, 514, 542, 566, 726, 1251, 1276, 1371, 1374, 1376, 1379], "behavior": [0, 731, 743, 832, 931, 1073, 1374, 1376], "merg": [0, 5, 175, 741, 742, 743, 899, 900, 901, 928, 939, 941, 1003, 1011, 1035, 1040, 1044, 1054, 1074, 1191, 1234, 1236, 1370, 1371, 1374, 1376], "pleas": [0, 278, 450, 1010, 1231, 1266, 1275, 1374, 1376, 1379], "follow": [0, 399, 400, 734, 749, 834, 1229, 1231, 1374, 1376, 1378, 1379], "fork": [0, 1374, 1376], "lokik": [0, 1374, 1376], "pull": [0, 1374, 1376], "request": [0, 437, 439, 443, 671, 674, 1231, 1374, 1376, 1379], "post": [0, 1374, 1376, 1379], "issu": [0, 714, 731, 766, 767, 769, 899, 935, 1374, 1376, 1379], "full": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 21, 22, 23, 24, 26, 27, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 44, 45, 46, 48, 49, 51, 52, 53, 54, 55, 56, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 112, 113, 114, 115, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 273, 274, 275, 276, 277, 278, 280, 281, 282, 283, 284, 285, 289, 290, 291, 292, 293, 294, 295, 296, 298, 299, 300, 301, 302, 304, 305, 306, 307, 308, 309, 311, 312, 313, 314, 316, 317, 318, 319, 320, 322, 323, 324, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 337, 338, 339, 340, 341, 342, 343, 344, 345, 347, 348, 349, 350, 351, 352, 353, 355, 356, 358, 359, 360, 362, 363, 364, 365, 367, 368, 369, 370, 371, 372, 373, 374, 375, 377, 378, 379, 380, 384, 386, 387, 388, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 419, 420, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 468, 469, 470, 472, 474, 476, 478, 479, 481, 482, 483, 484, 485, 486, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 659, 660, 661, 662, 663, 664, 665, 669, 670, 672, 673, 675, 676, 677, 678, 680, 681, 682, 683, 684, 686, 687, 689, 691, 694, 695, 697, 698, 699, 700, 701, 703, 704, 705, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 720, 725, 736, 737, 738, 739, 740, 744, 745, 746, 747, 748, 749, 754, 755, 756, 758, 759, 760, 761, 762, 763, 764, 765, 770, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 792, 793, 794, 795, 803, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 836, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 851, 853, 854, 855, 856, 857, 859, 860, 861, 863, 864, 865, 866, 867, 868, 869, 870, 871, 873, 880, 891, 892, 895, 896, 897, 898, 899, 903, 904, 905, 906, 907, 908, 910, 911, 912, 913, 914, 916, 917, 919, 921, 922, 923, 924, 925, 926, 927, 929, 933, 936, 938, 942, 943, 944, 945, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 966, 967, 968, 969, 970, 971, 972, 973, 974, 975, 976, 977, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1004, 1005, 1006, 1007, 1009, 1013, 1014, 1016, 1017, 1018, 1019, 1020, 1022, 1023, 1025, 1027, 1028, 1029, 1034, 1037, 1038, 1042, 1043, 1046, 1047, 1052, 1057, 1058, 1059, 1060, 1062, 1063, 1064, 1065, 1066, 1068, 1069, 1071, 1072, 1077, 1078, 1081, 1084, 1088, 1091, 1096, 1097, 1099, 1101, 1102, 1103, 1105, 1106, 1107, 1108, 1109, 1111, 1112, 1114, 1115, 1118, 1119, 1120, 1121, 1122, 1127, 1128, 1129, 1130, 1131, 1132, 1137, 1141, 1145, 1149, 1153, 1157, 1162, 1166, 1171, 1175, 1179, 1183, 1187, 1193, 1200, 1202, 1203, 1205, 1206, 1207, 1208, 1209, 1211, 1212, 1214, 1216, 1218, 1220, 1221, 1223, 1225, 1226, 1227, 1228, 1229, 1232, 1233, 1237, 1243, 1247, 1248, 1250, 1252, 1256, 1259, 1260, 1262, 1265, 1267, 1270, 1273, 1274, 1275, 1276, 1277, 1278, 1279, 1281, 1282, 1283, 1284, 1285, 1287, 1288, 1290, 1292, 1294, 1295, 1297, 1299, 1301, 1303, 1304, 1305, 1306, 1307, 1308, 1309, 1310, 1311, 1312, 1313, 1314, 1315, 1316, 1317, 1318, 1319, 1320, 1321, 1322, 1323, 1324, 1325, 1326, 1327, 1328, 1329, 1330, 1331, 1332, 1333, 1334, 1335, 1336, 1337, 1338, 1339, 1340, 1341, 1342, 1343, 1344, 1346, 1347, 1348, 1349, 1350, 1352, 1353, 1355, 1356, 1357, 1359, 1360, 1361, 1362, 1363, 1364, 1365, 1366, 1367, 1368, 1369], "name": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 21, 22, 23, 24, 26, 27, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 44, 45, 46, 48, 49, 51, 52, 53, 54, 55, 56, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 112, 113, 114, 115, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 273, 274, 275, 276, 277, 278, 280, 281, 282, 283, 284, 285, 289, 290, 291, 292, 293, 294, 295, 296, 298, 299, 300, 301, 302, 304, 305, 306, 307, 308, 309, 311, 312, 313, 314, 316, 317, 318, 319, 320, 322, 323, 324, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 337, 338, 339, 340, 341, 342, 343, 344, 345, 347, 348, 349, 350, 351, 352, 353, 355, 356, 358, 359, 360, 362, 363, 364, 365, 367, 368, 369, 370, 371, 372, 373, 374, 375, 377, 378, 379, 380, 384, 385, 386, 387, 388, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 419, 420, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 468, 469, 470, 472, 474, 476, 478, 479, 481, 482, 483, 484, 485, 486, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 659, 660, 661, 662, 663, 664, 665, 667, 668, 669, 670, 672, 673, 674, 675, 676, 677, 678, 680, 681, 682, 683, 684, 686, 687, 689, 691, 694, 695, 697, 698, 699, 700, 701, 703, 704, 705, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 720, 721, 723, 725, 726, 727, 728, 731, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 754, 755, 756, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 769, 770, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 788, 789, 791, 792, 793, 794, 795, 797, 800, 801, 802, 803, 806, 807, 808, 809, 810, 813, 814, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 835, 836, 837, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 851, 853, 854, 855, 856, 857, 859, 860, 861, 863, 864, 865, 866, 867, 868, 869, 870, 871, 873, 874, 879, 880, 891, 892, 895, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 910, 911, 912, 913, 914, 916, 917, 919, 921, 922, 923, 924, 925, 926, 927, 928, 929, 931, 933, 936, 938, 939, 940, 941, 942, 943, 944, 945, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 966, 967, 968, 969, 970, 971, 972, 973, 974, 975, 976, 977, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1009, 1010, 1011, 1012, 1013, 1014, 1016, 1017, 1018, 1019, 1020, 1022, 1023, 1025, 1027, 1028, 1029, 1034, 1035, 1037, 1038, 1040, 1042, 1043, 1044, 1046, 1047, 1052, 1054, 1055, 1057, 1058, 1059, 1060, 1062, 1063, 1064, 1065, 1066, 1068, 1069, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1080, 1081, 1083, 1084, 1088, 1090, 1091, 1092, 1095, 1096, 1097, 1099, 1101, 1102, 1103, 1105, 1106, 1107, 1108, 1109, 1111, 1112, 1114, 1115, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1134, 1137, 1139, 1141, 1143, 1145, 1147, 1149, 1151, 1153, 1154, 1155, 1157, 1160, 1162, 1164, 1166, 1168, 1171, 1172, 1173, 1175, 1176, 1177, 1179, 1180, 1181, 1183, 1184, 1185, 1187, 1188, 1189, 1190, 1191, 1193, 1194, 1195, 1197, 1199, 1200, 1202, 1203, 1205, 1206, 1207, 1208, 1209, 1211, 1212, 1214, 1216, 1218, 1220, 1221, 1223, 1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1232, 1234, 1236, 1239, 1243, 1247, 1248, 1250, 1251, 1252, 1256, 1259, 1260, 1262, 1265, 1266, 1267, 1270, 1273, 1274, 1275, 1276, 1277, 1278, 1279, 1281, 1282, 1283, 1284, 1285, 1287, 1288, 1290, 1292, 1294, 1295, 1297, 1299, 1301, 1303, 1304, 1305, 1306, 1307, 1308, 1309, 1310, 1311, 1312, 1313, 1314, 1315, 1316, 1317, 1318, 1319, 1320, 1321, 1322, 1323, 1324, 1325, 1326, 1327, 1328, 1329, 1330, 1331, 1332, 1333, 1334, 1335, 1336, 1337, 1338, 1339, 1340, 1341, 1342, 1343, 1344, 1346, 1347, 1348, 1349, 1350, 1352, 1353, 1355, 1356, 1357, 1359, 1360, 1361, 1362, 1363, 1364, 1365, 1366, 1367, 1368, 1369, 1371, 1378, 1379], "descript": [1, 2, 3, 6, 9, 11, 14, 17, 18, 27, 29, 31, 32, 33, 35, 42, 46, 49, 54, 56, 88, 96, 97, 107, 108, 110, 115, 116, 123, 131, 132, 138, 139, 143, 144, 145, 147, 163, 164, 167, 168, 179, 180, 181, 186, 190, 191, 195, 196, 199, 207, 210, 214, 218, 248, 250, 271, 278, 285, 296, 301, 309, 314, 320, 324, 335, 345, 353, 356, 360, 365, 374, 375, 380, 388, 391, 392, 397, 402, 407, 408, 409, 410, 411, 415, 417, 420, 424, 425, 426, 428, 430, 432, 435, 444, 445, 446, 447, 449, 456, 457, 458, 461, 466, 469, 470, 472, 474, 476, 479, 481, 482, 484, 486, 488, 489, 490, 491, 493, 496, 498, 500, 509, 511, 517, 519, 520, 521, 527, 531, 537, 546, 550, 553, 558, 560, 563, 567, 569, 571, 574, 576, 578, 582, 584, 586, 588, 590, 598, 602, 604, 608, 611, 613, 615, 618, 620, 623, 624, 626, 629, 632, 634, 637, 642, 647, 653, 655, 656, 657, 662, 664, 665, 668, 670, 673, 674, 677, 678, 687, 689, 691, 694, 695, 705, 707, 708, 714, 715, 717, 725, 726, 731, 740, 742, 743, 744, 747, 756, 758, 761, 765, 766, 767, 769, 770, 784, 785, 795, 796, 797, 798, 799, 800, 801, 802, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 817, 818, 831, 832, 833, 834, 835, 836, 837, 838, 845, 849, 851, 861, 863, 871, 873, 880, 892, 897, 899, 903, 907, 908, 917, 919, 921, 927, 929, 931, 933, 936, 938, 941, 948, 949, 950, 952, 953, 955, 956, 958, 959, 961, 962, 964, 965, 967, 968, 970, 971, 973, 974, 975, 977, 979, 981, 983, 985, 987, 989, 991, 993, 1003, 1006, 1009, 1011, 1012, 1013, 1014, 1023, 1025, 1028, 1029, 1034, 1038, 1043, 1047, 1052, 1055, 1059, 1060, 1069, 1071, 1072, 1074, 1077, 1078, 1081, 1084, 1088, 1091, 1092, 1097, 1099, 1102, 1103, 1112, 1114, 1115, 1119, 1121, 1122, 1124, 1126, 1127, 1128, 1130, 1132, 1137, 1141, 1145, 1149, 1153, 1157, 1162, 1166, 1171, 1175, 1179, 1183, 1187, 1193, 1200, 1202, 1203, 1212, 1214, 1216, 1218, 1220, 1221, 1223, 1225, 1229, 1232, 1236, 1239, 1243, 1248, 1250, 1252, 1256, 1260, 1262, 1265, 1267, 1268, 1269, 1270, 1275, 1278, 1279, 1288, 1290, 1292, 1295, 1297, 1299, 1301, 1303, 1304, 1306, 1307, 1311, 1314, 1319, 1329, 1332, 1335, 1338, 1341, 1343, 1344, 1353, 1355, 1356, 1357], "root": [1, 463, 716, 741, 1233, 1234, 1258], "packag": [1, 424, 445, 656, 662, 667, 671, 703, 707, 859, 863, 948, 977, 979, 985, 991, 1071, 1127, 1130, 1266, 1355, 1371, 1377, 1379], "import": [1, 31, 115, 183, 424, 432, 444, 703, 797, 859, 879, 1131, 1258, 1263, 1264, 1379], "few": [1, 743, 770, 817, 833, 1231, 1367, 1378], "most": [1, 115, 183, 206, 654, 809, 837, 864, 891, 926, 1124, 1263, 1264, 1379], "us": [1, 4, 18, 30, 115, 123, 139, 147, 302, 369, 380, 383, 385, 399, 424, 450, 631, 641, 650, 663, 674, 678, 695, 707, 716, 726, 731, 741, 743, 748, 763, 766, 767, 769, 770, 786, 787, 788, 789, 793, 794, 796, 797, 798, 799, 800, 801, 806, 807, 809, 810, 812, 813, 816, 817, 831, 833, 835, 837, 838, 851, 863, 876, 879, 884, 889, 902, 908, 928, 931, 956, 975, 977, 979, 981, 983, 985, 987, 989, 991, 993, 1007, 1012, 1014, 1055, 1060, 1072, 1073, 1075, 1076, 1095, 1096, 1099, 1100, 1103, 1117, 1124, 1126, 1127, 1130, 1142, 1150, 1163, 1175, 1176, 1180, 1190, 1195, 1197, 1199, 1201, 1203, 1220, 1222, 1224, 1225, 1226, 1229, 1230, 1231, 1233, 1235, 1239, 1240, 1242, 1243, 1244, 1246, 1251, 1256, 1258, 1264, 1265, 1266, 1270, 1275, 1279, 1344, 1358, 1371, 1372, 1373, 1375, 1377, 1378], "object": [1, 5, 110, 111, 115, 116, 117, 118, 120, 121, 123, 124, 127, 129, 132, 134, 137, 138, 139, 144, 145, 149, 326, 367, 385, 389, 443, 450, 455, 520, 522, 641, 648, 649, 650, 674, 675, 716, 718, 720, 724, 725, 726, 727, 729, 730, 731, 733, 734, 735, 742, 743, 766, 767, 768, 769, 771, 772, 788, 796, 797, 798, 799, 800, 801, 806, 807, 809, 810, 811, 812, 813, 816, 817, 833, 835, 837, 838, 842, 864, 866, 874, 875, 877, 878, 879, 881, 898, 927, 928, 931, 1006, 1007, 1012, 1032, 1033, 1039, 1050, 1051, 1055, 1073, 1075, 1076, 1080, 1083, 1090, 1095, 1115, 1117, 1123, 1124, 1125, 1126, 1142, 1150, 1163, 1176, 1180, 1190, 1194, 1195, 1197, 1199, 1200, 1201, 1222, 1223, 1224, 1226, 1227, 1231, 1237, 1238, 1239, 1241, 1243, 1244, 1245, 1251, 1264, 1266, 1271, 1274, 1276, 1363, 1378], "shortcut": [1, 172, 1231], "modul": [1, 2, 3, 17, 18, 27, 31, 32, 35, 42, 46, 49, 56, 88, 96, 110, 115, 137, 143, 163, 164, 207, 218, 271, 278, 285, 296, 301, 309, 314, 320, 324, 335, 345, 353, 356, 360, 365, 375, 380, 388, 391, 402, 417, 420, 424, 425, 435, 444, 445, 446, 449, 456, 466, 469, 470, 472, 474, 476, 479, 481, 486, 488, 519, 598, 623, 626, 647, 655, 656, 657, 664, 665, 670, 671, 673, 677, 678, 687, 689, 691, 694, 695, 705, 707, 708, 714, 715, 717, 725, 726, 740, 747, 756, 759, 765, 770, 784, 785, 795, 797, 831, 836, 851, 861, 871, 873, 880, 892, 897, 899, 904, 906, 907, 908, 917, 919, 921, 927, 929, 933, 936, 938, 948, 949, 952, 955, 958, 961, 964, 967, 970, 973, 974, 975, 977, 979, 981, 983, 989, 991, 993, 1006, 1007, 1009, 1013, 1014, 1023, 1025, 1028, 1029, 1032, 1034, 1038, 1043, 1047, 1050, 1052, 1059, 1060, 1069, 1071, 1072, 1077, 1078, 1081, 1084, 1088, 1091, 1097, 1099, 1102, 1103, 1112, 1114, 1115, 1119, 1121, 1122, 1127, 1128, 1130, 1131, 1132, 1137, 1141, 1145, 1149, 1153, 1157, 1162, 1166, 1171, 1175, 1179, 1183, 1187, 1193, 1200, 1202, 1203, 1212, 1214, 1216, 1218, 1220, 1221, 1223, 1225, 1232, 1243, 1248, 1250, 1252, 1256, 1260, 1262, 1265, 1267, 1270, 1275, 1278, 1279, 1288, 1290, 1292, 1295, 1297, 1299, 1301, 1303, 1306, 1314, 1343, 1344, 1353, 1356, 1357, 1370, 1375, 1378], "ase2sprkkr": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 123, 124, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 923, 924, 925, 926, 927, 928, 929, 930, 931, 932, 933, 936, 937, 938, 939, 940, 941, 942, 943, 944, 945, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 966, 967, 968, 969, 970, 971, 972, 973, 974, 975, 976, 977, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1144, 1145, 1146, 1147, 1148, 1149, 1150, 1151, 1152, 1153, 1154, 1155, 1156, 1157, 1158, 1159, 1160, 1161, 1162, 1163, 1164, 1165, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1174, 1175, 1176, 1177, 1178, 1179, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 1194, 1195, 1196, 1197, 1198, 1199, 1200, 1201, 1202, 1203, 1204, 1205, 1206, 1207, 1208, 1209, 1210, 1211, 1212, 1213, 1214, 1215, 1216, 1217, 1218, 1219, 1220, 1221, 1222, 1223, 1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1238, 1239, 1240, 1241, 1242, 1243, 1244, 1245, 1246, 1247, 1248, 1249, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1265, 1266, 1267, 1268, 1269, 1270, 1271, 1272, 1273, 1274, 1275, 1276, 1277, 1278, 1279, 1280, 1281, 1282, 1283, 1284, 1285, 1286, 1287, 1288, 1289, 1290, 1291, 1292, 1293, 1294, 1295, 1296, 1297, 1298, 1299, 1300, 1301, 1302, 1303, 1305, 1306, 1307, 1308, 1309, 1310, 1311, 1312, 1313, 1314, 1315, 1316, 1317, 1318, 1319, 1320, 1321, 1322, 1323, 1324, 1325, 1326, 1327, 1328, 1329, 1330, 1331, 1332, 1333, 1334, 1335, 1336, 1337, 1338, 1339, 1340, 1341, 1342, 1343, 1344, 1345, 1346, 1347, 1348, 1349, 1350, 1351, 1352, 1353, 1354, 1355, 1356, 1357, 1358, 1359, 1360, 1361, 1362, 1363, 1364, 1365, 1366, 1367, 1368, 1369, 1371, 1376, 1377, 1378], "ase": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 110, 111, 144, 367, 380, 383, 385, 443, 449, 450, 649, 650, 1224, 1227, 1229, 1231, 1265, 1266, 1370, 1379], "routin": [3, 14, 18, 656, 670, 678, 695, 716, 761, 770, 788, 796, 798, 799, 800, 801, 806, 807, 809, 810, 813, 816, 817, 833, 835, 837, 838, 851, 863, 894, 908, 1007, 1014, 1060, 1103, 1121, 1126, 1203, 1225, 1233, 1237, 1266, 1279, 1344, 1357, 1371, 1378], "materi": [3, 112, 113, 114, 183, 294, 321, 388, 421, 424, 439, 443, 450, 1120, 1370, 1375], "unlik": [3, 726, 928, 1237, 1266], "sprkkr": [3, 31, 661, 707, 719, 791, 879, 953, 965, 968, 974, 975, 977, 979, 981, 983, 985, 987, 989, 991, 993, 1003, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1029, 1031, 1032, 1033, 1034, 1035, 1036, 1038, 1040, 1041, 1043, 1044, 1045, 1047, 1049, 1050, 1051, 1052, 1054, 1055, 1117, 1121, 1122, 1123, 1124, 1127, 1132, 1133, 1134, 1135, 1137, 1138, 1139, 1141, 1142, 1143, 1145, 1146, 1147, 1149, 1150, 1151, 1153, 1154, 1155, 1157, 1158, 1159, 1160, 1162, 1163, 1164, 1166, 1167, 1168, 1169, 1171, 1172, 1173, 1175, 1176, 1177, 1179, 1180, 1181, 1183, 1184, 1185, 1187, 1188, 1189, 1190, 1191, 1193, 1194, 1195, 1196, 1198, 1199, 1200, 1201, 1221, 1222, 1223, 1224, 1225, 1226, 1227, 1228, 1229, 1230, 1232, 1233, 1234, 1235, 1236, 1237, 1238, 1239, 1240, 1241, 1242, 1243, 1244, 1245, 1246, 1247, 1248, 1249, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1265, 1266, 1267, 1268, 1269, 1270, 1271, 1272, 1273, 1274, 1275, 1276, 1277, 1278, 1279, 1280, 1281, 1282, 1283, 1284, 1285, 1286, 1287, 1288, 1289, 1290, 1291, 1292, 1293, 1294, 1295, 1296, 1297, 1298, 1299, 1300, 1301, 1302, 1370, 1372, 1373, 1375, 1379], "usabl": [3, 1266], "plain": 3, "ani": [3, 36, 43, 47, 50, 64, 89, 90, 116, 119, 172, 174, 208, 220, 272, 286, 287, 288, 297, 303, 310, 315, 321, 325, 336, 346, 354, 357, 361, 366, 376, 380, 382, 390, 418, 421, 450, 520, 521, 667, 718, 720, 731, 741, 742, 743, 769, 791, 793, 794, 796, 797, 798, 799, 800, 801, 802, 804, 805, 806, 807, 808, 810, 811, 812, 813, 814, 817, 818, 832, 833, 834, 835, 837, 838, 879, 898, 925, 928, 939, 941, 975, 977, 979, 981, 983, 985, 987, 989, 991, 1003, 1011, 1032, 1035, 1040, 1044, 1050, 1054, 1074, 1092, 1122, 1126, 1191, 1231, 1234, 1236, 1237, 1268, 1269, 1371, 1378, 1379], "function": [3, 5, 6, 9, 11, 14, 18, 29, 33, 35, 36, 42, 43, 46, 47, 49, 50, 54, 56, 64, 88, 89, 96, 97, 108, 110, 115, 124, 139, 143, 164, 176, 181, 186, 191, 196, 199, 203, 204, 205, 206, 207, 208, 210, 214, 218, 220, 248, 250, 271, 272, 278, 285, 287, 296, 297, 301, 303, 309, 310, 314, 315, 320, 321, 324, 325, 330, 335, 336, 345, 346, 353, 354, 356, 357, 360, 361, 365, 366, 375, 376, 380, 385, 388, 392, 397, 402, 411, 415, 417, 418, 420, 421, 426, 428, 430, 432, 435, 440, 447, 450, 458, 461, 466, 476, 482, 484, 491, 493, 496, 498, 500, 509, 511, 517, 519, 527, 531, 537, 546, 550, 553, 558, 560, 563, 567, 569, 571, 574, 576, 578, 582, 584, 586, 588, 590, 598, 602, 604, 608, 611, 613, 615, 618, 620, 624, 626, 629, 632, 634, 637, 642, 647, 653, 657, 662, 663, 665, 670, 673, 678, 695, 708, 720, 721, 725, 726, 734, 739, 742, 744, 747, 748, 749, 758, 761, 769, 770, 788, 795, 796, 798, 799, 800, 801, 806, 807, 809, 810, 813, 816, 817, 833, 835, 836, 837, 838, 851, 863, 870, 871, 872, 875, 879, 880, 892, 894, 903, 908, 921, 923, 926, 931, 938, 950, 953, 956, 959, 962, 965, 968, 971, 975, 977, 979, 981, 983, 985, 987, 989, 991, 993, 1009, 1014, 1025, 1030, 1034, 1036, 1038, 1039, 1043, 1048, 1052, 1060, 1095, 1103, 1126, 1130, 1142, 1150, 1163, 1164, 1176, 1180, 1187, 1189, 1195, 1197, 1201, 1203, 1225, 1227, 1230, 1231, 1243, 1245, 1247, 1251, 1256, 1258, 1270, 1275, 1279, 1292, 1304, 1307, 1311, 1314, 1319, 1329, 1332, 1335, 1338, 1341, 1344, 1357, 1360, 1367, 1369, 1372, 1373, 1379], "time": [4, 116, 121, 396, 726, 1201, 1226, 1231, 1237, 1379], "axi": [4, 5, 30, 315, 450, 541, 769, 975, 987, 1039, 1226, 1227, 1258, 1361, 1367, 1368], "none": [4, 5, 12, 19, 30, 36, 40, 43, 47, 50, 58, 64, 89, 98, 101, 102, 103, 104, 105, 106, 111, 114, 116, 119, 123, 144, 151, 155, 160, 172, 184, 192, 208, 212, 216, 220, 226, 227, 235, 242, 243, 249, 259, 269, 272, 273, 275, 276, 286, 287, 288, 297, 303, 310, 315, 321, 325, 336, 346, 354, 357, 361, 366, 376, 382, 383, 385, 386, 416, 418, 421, 450, 451, 454, 455, 471, 475, 478, 483, 520, 521, 542, 627, 630, 631, 640, 641, 648, 649, 663, 667, 671, 674, 675, 679, 696, 716, 718, 719, 720, 721, 723, 724, 726, 727, 728, 729, 731, 732, 733, 734, 735, 737, 738, 739, 741, 742, 743, 749, 750, 751, 752, 753, 766, 767, 768, 769, 771, 774, 786, 787, 788, 789, 791, 796, 797, 798, 799, 800, 801, 802, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 816, 817, 818, 832, 833, 834, 835, 837, 838, 840, 852, 874, 875, 876, 877, 878, 879, 885, 894, 898, 900, 901, 902, 906, 909, 926, 928, 931, 937, 940, 941, 1003, 1007, 1008, 1010, 1011, 1012, 1015, 1026, 1031, 1032, 1033, 1036, 1039, 1041, 1045, 1049, 1050, 1051, 1053, 1054, 1055, 1056, 1057, 1061, 1073, 1074, 1075, 1076, 1080, 1083, 1087, 1090, 1092, 1095, 1100, 1101, 1104, 1117, 1123, 1124, 1126, 1133, 1135, 1138, 1142, 1146, 1150, 1154, 1158, 1159, 1163, 1167, 1169, 1172, 1176, 1180, 1184, 1190, 1192, 1194, 1195, 1196, 1197, 1198, 1199, 1201, 1204, 1222, 1224, 1226, 1231, 1233, 1235, 1236, 1237, 1238, 1239, 1240, 1241, 1242, 1245, 1251, 1255, 1258, 1263, 1264, 1266, 1268, 1269, 1280, 1321, 1324, 1345, 1358, 1359, 1361, 1365, 1368, 1369, 1379], "direct": [4, 50, 51, 286, 287, 293, 294, 297, 303, 310, 315, 450, 471, 731, 741, 742, 743, 766, 767, 769, 939, 941, 975, 977, 979, 983, 985, 987, 991, 1003, 1011, 1035, 1040, 1044, 1054, 1074, 1191, 1194, 1234, 1236], "1": [4, 5, 40, 116, 120, 121, 221, 226, 227, 239, 241, 276, 280, 331, 346, 384, 414, 418, 450, 451, 471, 478, 520, 627, 663, 674, 726, 734, 736, 742, 755, 763, 769, 789, 791, 804, 807, 872, 891, 926, 928, 975, 977, 979, 981, 983, 985, 987, 989, 991, 1039, 1117, 1118, 1120, 1251, 1257, 1258, 1264, 1363, 1375, 1378, 1379], "sourc": [4, 5, 7, 8, 10, 12, 13, 15, 16, 19, 20, 21, 22, 25, 26, 28, 30, 34, 36, 37, 38, 39, 40, 41, 43, 44, 45, 47, 48, 50, 51, 52, 53, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 89, 90, 91, 92, 93, 94, 95, 98, 99, 100, 101, 102, 103, 104, 105, 106, 109, 111, 112, 113, 114, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 144, 145, 146, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 182, 183, 184, 185, 187, 188, 189, 192, 193, 194, 197, 198, 200, 201, 202, 203, 204, 205, 206, 208, 209, 211, 212, 213, 215, 216, 217, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 249, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 272, 273, 274, 275, 276, 277, 279, 280, 281, 282, 283, 284, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 297, 298, 299, 300, 302, 303, 304, 305, 306, 307, 308, 310, 311, 312, 313, 315, 316, 317, 318, 319, 321, 322, 323, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 336, 337, 338, 339, 340, 341, 342, 343, 344, 346, 347, 348, 349, 350, 351, 352, 354, 355, 357, 358, 359, 361, 362, 363, 364, 366, 367, 368, 369, 370, 371, 372, 373, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 389, 390, 393, 394, 395, 396, 398, 399, 400, 401, 403, 404, 405, 406, 412, 413, 414, 416, 418, 419, 421, 422, 423, 427, 429, 431, 433, 434, 436, 437, 438, 439, 440, 441, 442, 443, 448, 450, 451, 452, 453, 454, 455, 459, 460, 462, 463, 464, 465, 467, 468, 471, 473, 475, 477, 478, 480, 483, 485, 487, 492, 494, 495, 497, 499, 501, 502, 503, 504, 505, 506, 507, 508, 510, 512, 513, 514, 515, 516, 518, 520, 521, 522, 523, 524, 525, 526, 528, 529, 530, 532, 533, 534, 535, 536, 538, 539, 540, 541, 542, 543, 544, 545, 547, 548, 549, 551, 552, 554, 555, 556, 557, 559, 561, 562, 564, 565, 566, 568, 570, 572, 573, 575, 577, 579, 580, 581, 583, 585, 587, 589, 591, 592, 593, 594, 595, 596, 597, 599, 600, 601, 603, 605, 606, 607, 609, 610, 612, 614, 616, 617, 619, 621, 622, 625, 627, 628, 630, 631, 633, 635, 636, 638, 639, 640, 641, 643, 644, 645, 646, 648, 649, 650, 651, 652, 654, 658, 659, 660, 661, 663, 666, 667, 668, 669, 671, 672, 674, 675, 676, 679, 680, 681, 682, 685, 686, 688, 690, 696, 697, 698, 699, 702, 703, 704, 706, 710, 716, 718, 719, 720, 721, 722, 723, 724, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 741, 742, 743, 745, 746, 748, 749, 750, 751, 752, 753, 755, 757, 759, 760, 762, 763, 764, 766, 767, 768, 769, 771, 772, 773, 774, 775, 777, 781, 782, 783, 786, 787, 788, 789, 790, 791, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 832, 833, 834, 835, 837, 838, 839, 840, 842, 843, 844, 850, 852, 853, 854, 855, 858, 859, 860, 862, 864, 865, 866, 867, 868, 869, 870, 872, 874, 875, 876, 877, 878, 879, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 893, 894, 895, 896, 898, 899, 900, 901, 902, 904, 905, 906, 909, 910, 911, 912, 915, 916, 918, 920, 922, 923, 924, 925, 926, 928, 930, 931, 932, 934, 935, 937, 939, 940, 941, 942, 943, 944, 945, 946, 947, 951, 954, 957, 960, 963, 966, 969, 972, 986, 988, 994, 1001, 1003, 1004, 1005, 1007, 1008, 1010, 1011, 1012, 1015, 1016, 1017, 1018, 1021, 1022, 1024, 1026, 1027, 1030, 1031, 1032, 1033, 1035, 1036, 1037, 1039, 1040, 1041, 1042, 1044, 1045, 1046, 1048, 1049, 1050, 1051, 1053, 1054, 1055, 1056, 1057, 1058, 1061, 1062, 1063, 1064, 1067, 1068, 1070, 1073, 1074, 1075, 1076, 1079, 1080, 1082, 1083, 1085, 1086, 1087, 1089, 1090, 1092, 1093, 1094, 1095, 1098, 1100, 1101, 1104, 1105, 1106, 1107, 1110, 1111, 1113, 1116, 1117, 1123, 1124, 1125, 1126, 1131, 1133, 1134, 1135, 1138, 1139, 1142, 1143, 1146, 1147, 1150, 1151, 1154, 1155, 1158, 1159, 1160, 1163, 1164, 1167, 1168, 1169, 1172, 1173, 1176, 1177, 1180, 1181, 1184, 1185, 1188, 1189, 1190, 1191, 1192, 1194, 1195, 1196, 1197, 1198, 1199, 1201, 1204, 1205, 1206, 1207, 1210, 1211, 1213, 1215, 1217, 1219, 1222, 1224, 1226, 1227, 1228, 1230, 1231, 1233, 1234, 1235, 1236, 1237, 1238, 1239, 1240, 1241, 1242, 1244, 1245, 1246, 1247, 1249, 1251, 1253, 1254, 1255, 1257, 1258, 1259, 1261, 1263, 1264, 1266, 1268, 1269, 1271, 1272, 1273, 1274, 1276, 1277, 1280, 1281, 1282, 1283, 1286, 1287, 1289, 1291, 1293, 1294, 1296, 1298, 1300, 1302, 1305, 1308, 1309, 1310, 1312, 1313, 1317, 1318, 1320, 1321, 1322, 1323, 1324, 1325, 1326, 1327, 1328, 1330, 1331, 1333, 1334, 1336, 1337, 1339, 1340, 1342, 1345, 1346, 1347, 1348, 1351, 1352, 1354, 1358, 1359, 1360, 1361, 1362, 1363, 1364, 1365, 1366, 1367, 1368, 1369, 1372, 1373, 1375, 1379], "multipli": [4, 1251, 1257], "repeat": [4, 30, 726, 731, 741, 742, 743, 879, 887, 931, 939, 941, 1003, 1011, 1012, 1035, 1040, 1044, 1054, 1055, 1073, 1074, 1075, 1076, 1124, 1190, 1191, 1198, 1226, 1234, 1236, 1239, 1245, 1371, 1379], "same": [4, 5, 30, 31, 175, 183, 302, 422, 674, 675, 716, 720, 726, 742, 743, 749, 754, 789, 791, 837, 879, 893, 928, 931, 1007, 1012, 1055, 1072, 1073, 1075, 1076, 1124, 1190, 1224, 1226, 1230, 1231, 1233, 1237, 1239, 1251, 1258, 1264, 1266, 1360, 1378, 1379], "__mult__": 4, "oper": [4, 183, 975, 977, 979, 981, 983, 985, 987, 989, 991], "accept": [4, 183, 426, 427, 428, 429, 430, 431, 726, 743, 791, 797, 841, 845, 846, 879, 931, 1012, 1055, 1073, 1075, 1076, 1124, 1190, 1227, 1237, 1239, 1370, 1371, 1379], "float": [4, 30, 50, 89, 227, 238, 286, 287, 288, 290, 294, 297, 303, 310, 315, 321, 325, 326, 336, 346, 354, 357, 361, 366, 370, 372, 382, 385, 401, 418, 421, 627, 650, 663, 674, 709, 711, 712, 713, 763, 791, 797, 804, 814, 815, 821, 847, 848, 864, 926, 1095, 1251, 1257, 1266, 1274], "too": [4, 720, 749, 876, 881, 883, 884, 885, 886, 889, 1007, 1226, 1231], "last": [4, 5, 741, 769, 864, 891, 926, 1032, 1050, 1095, 1231, 1258], "cell": [4, 5, 274, 287, 294, 315, 325, 348, 382, 383, 400, 401, 421, 450, 649, 662, 663, 673, 674, 1150, 1224, 1231, 1266, 1379], "paramet": [4, 5, 30, 36, 43, 47, 50, 64, 89, 90, 98, 106, 109, 111, 112, 113, 114, 116, 117, 118, 119, 120, 121, 123, 129, 131, 138, 139, 144, 151, 160, 171, 172, 174, 178, 183, 185, 200, 208, 212, 220, 226, 227, 238, 241, 242, 249, 272, 286, 287, 288, 294, 297, 303, 310, 315, 321, 325, 327, 328, 329, 336, 346, 354, 357, 361, 366, 367, 369, 370, 371, 372, 376, 382, 385, 399, 400, 401, 409, 410, 418, 421, 422, 449, 450, 516, 520, 521, 533, 566, 627, 628, 631, 639, 641, 650, 651, 663, 667, 668, 674, 675, 716, 718, 720, 721, 723, 726, 731, 734, 741, 742, 743, 749, 759, 763, 766, 767, 769, 771, 776, 778, 779, 780, 786, 787, 788, 789, 791, 796, 797, 798, 799, 800, 801, 802, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 832, 833, 834, 835, 837, 838, 840, 843, 872, 874, 876, 877, 878, 879, 894, 898, 925, 928, 931, 939, 941, 946, 975, 976, 977, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 989, 990, 991, 992, 993, 994, 1001, 1003, 1006, 1007, 1008, 1010, 1011, 1012, 1032, 1035, 1036, 1040, 1041, 1044, 1045, 1050, 1054, 1055, 1072, 1073, 1074, 1075, 1076, 1092, 1095, 1100, 1117, 1124, 1126, 1134, 1139, 1142, 1143, 1147, 1150, 1151, 1155, 1160, 1163, 1164, 1168, 1173, 1176, 1177, 1180, 1181, 1185, 1188, 1189, 1190, 1191, 1194, 1195, 1197, 1199, 1201, 1222, 1224, 1226, 1227, 1231, 1233, 1234, 1236, 1237, 1238, 1239, 1241, 1251, 1257, 1258, 1263, 1264, 1266, 1268, 1269, 1274, 1277, 1358, 1364, 1365, 1369, 1371, 1375, 1378], "union": [4, 30, 151, 160, 385, 663, 667, 668, 716, 720, 742, 769, 791, 796, 797, 798, 799, 800, 801, 802, 804, 805, 806, 807, 808, 810, 811, 812, 813, 814, 817, 818, 832, 833, 834, 835, 837, 838, 843, 872, 898, 928, 931, 1007, 1012, 1055, 1073, 1075, 1076, 1092, 1124, 1126, 1190, 1224, 1226, 1231, 1239, 1251, 1263, 1266, 1268, 1269], "int": [4, 5, 30, 36, 89, 98, 106, 116, 286, 287, 294, 321, 327, 346, 367, 370, 372, 382, 421, 450, 520, 521, 627, 631, 663, 708, 709, 710, 711, 712, 713, 734, 742, 768, 791, 797, 802, 804, 805, 808, 811, 812, 814, 818, 832, 843, 847, 848, 872, 894, 928, 931, 1092, 1222, 1226, 1227, 1231, 1251, 1257, 1258, 1266, 1268, 1269, 1274], "list": [4, 5, 47, 50, 89, 90, 103, 113, 114, 121, 151, 174, 183, 185, 211, 297, 303, 310, 321, 325, 326, 327, 328, 336, 346, 354, 357, 361, 366, 368, 369, 371, 382, 418, 444, 450, 631, 651, 674, 675, 726, 731, 742, 749, 766, 767, 769, 775, 786, 787, 789, 791, 837, 841, 846, 866, 890, 928, 931, 946, 991, 1007, 1009, 1012, 1032, 1050, 1055, 1073, 1075, 1076, 1095, 1124, 1154, 1172, 1184, 1187, 1190, 1199, 1224, 1227, 1231, 1239, 1246, 1266], "three": [4, 977, 979, 985, 991], "integ": [4, 793, 795, 812, 818, 823, 830, 834, 843, 844, 848, 864, 879, 928, 975, 977, 979, 981, 983, 985, 987, 989, 991, 1041, 1226, 1231, 1251, 1264, 1379], "sai": [4, 731], "how": [4, 639, 716, 720, 729, 731, 741, 742, 745, 766, 767, 769, 786, 787, 788, 791, 797, 800, 801, 802, 807, 816, 832, 833, 834, 837, 843, 898, 931, 953, 975, 977, 979, 981, 983, 985, 987, 989, 991, 1012, 1054, 1055, 1073, 1075, 1076, 1124, 1189, 1190, 1226, 1231, 1239, 1251, 1372, 1373, 1375, 1378], "mani": [4, 674, 1226, 1378, 1379], "should": [4, 5, 113, 370, 444, 450, 716, 720, 726, 731, 741, 742, 766, 767, 768, 769, 786, 787, 788, 791, 796, 798, 799, 800, 801, 802, 806, 807, 809, 810, 812, 813, 816, 817, 832, 833, 834, 835, 837, 838, 840, 876, 879, 884, 889, 898, 926, 931, 935, 974, 977, 979, 985, 991, 1007, 1012, 1055, 1057, 1073, 1075, 1076, 1095, 1100, 1114, 1124, 1126, 1142, 1150, 1163, 1164, 1176, 1180, 1189, 1190, 1195, 1197, 1199, 1226, 1231, 1236, 1238, 1239, 1264, 1266, 1358, 1369, 1379], "along": [4, 5, 30, 302, 367, 374, 450, 979, 1226, 1227, 1258], "given": [4, 5, 15, 30, 203, 205, 206, 327, 400, 401, 450, 663, 667, 674, 675, 709, 710, 716, 720, 721, 723, 726, 731, 736, 741, 742, 743, 749, 762, 763, 764, 766, 767, 769, 771, 773, 774, 784, 786, 787, 788, 789, 791, 796, 797, 798, 799, 800, 801, 806, 807, 809, 810, 812, 813, 816, 817, 832, 833, 834, 835, 837, 838, 840, 843, 848, 867, 871, 872, 874, 875, 879, 898, 925, 926, 928, 931, 932, 939, 941, 977, 979, 985, 991, 1003, 1007, 1011, 1012, 1030, 1035, 1039, 1040, 1041, 1044, 1048, 1054, 1055, 1073, 1074, 1075, 1076, 1095, 1101, 1117, 1124, 1126, 1164, 1176, 1180, 1189, 1190, 1191, 1194, 1195, 1197, 1201, 1222, 1224, 1226, 1227, 1231, 1233, 1234, 1236, 1237, 1239, 1245, 1247, 1251, 1258, 1264, 1266, 1274, 1276, 1316, 1359, 1365, 1367, 1369, 1378, 1379], "all": [4, 5, 30, 127, 128, 139, 144, 151, 176, 200, 211, 399, 400, 405, 424, 432, 435, 444, 445, 450, 631, 709, 716, 720, 726, 729, 731, 742, 766, 791, 796, 806, 810, 837, 879, 894, 898, 931, 1030, 1039, 1048, 1073, 1095, 1117, 1125, 1131, 1196, 1198, 1201, 1227, 1230, 1231, 1251, 1258, 1266, 1315, 1316, 1379], "ax": [4, 5, 30, 37, 40, 273, 769, 1095, 1224, 1258], "unless": [4, 842], "argument": [4, 5, 123, 450, 599, 600, 626, 720, 726, 742, 748, 749, 750, 752, 769, 788, 791, 796, 798, 799, 800, 801, 806, 807, 809, 810, 813, 816, 817, 832, 833, 834, 835, 837, 838, 879, 891, 898, 931, 965, 968, 1007, 1010, 1012, 1041, 1055, 1073, 1075, 1076, 1095, 1124, 1126, 1190, 1224, 1226, 1231, 1237, 1239, 1251, 1266, 1316, 1367, 1371, 1379], "decim": [4, 1226], "mean": [4, 5, 116, 183, 385, 667, 716, 726, 731, 741, 742, 743, 766, 767, 769, 786, 787, 788, 789, 791, 796, 798, 799, 800, 801, 806, 807, 809, 810, 813, 816, 817, 833, 835, 837, 838, 898, 928, 931, 939, 941, 1003, 1007, 1010, 1011, 1012, 1032, 1035, 1040, 1044, 1050, 1054, 1055, 1073, 1074, 1075, 1076, 1092, 1124, 1126, 1190, 1191, 1231, 1233, 1234, 1236, 1237, 1239, 1258, 1379], "ad": [4, 176, 183, 383, 661, 663, 667, 720, 726, 749, 788, 796, 798, 799, 800, 801, 806, 807, 809, 810, 813, 816, 817, 833, 835, 837, 838, 875, 898, 1126, 1189, 1231, 1367, 1371, 1378], "whole": [4, 667, 716, 726, 741, 742, 748, 832, 931, 1378], "its": [4, 111, 450, 719, 720, 721, 723, 724, 725, 731, 741, 742, 749, 766, 767, 769, 786, 791, 837, 875, 879, 894, 898, 923, 931, 940, 946, 971, 975, 977, 979, 981, 983, 985, 987, 989, 991, 1007, 1008, 1012, 1031, 1032, 1033, 1036, 1041, 1045, 1049, 1050, 1051, 1055, 1073, 1074, 1075, 1076, 1100, 1117, 1120, 1123, 1124, 1133, 1135, 1138, 1142, 1146, 1150, 1154, 1158, 1159, 1163, 1167, 1169, 1172, 1176, 1180, 1184, 1188, 1190, 1194, 1195, 1196, 1198, 1199, 1201, 1224, 1226, 1231, 1233, 1235, 1238, 1239, 1240, 1241, 1242, 1246, 1251, 1341, 1372, 1373, 1378, 1379], "option": [4, 5, 19, 89, 98, 106, 116, 119, 123, 124, 227, 369, 370, 385, 421, 450, 627, 667, 674, 679, 696, 715, 716, 720, 725, 726, 729, 731, 733, 734, 735, 736, 763, 766, 767, 769, 771, 776, 778, 779, 780, 786, 788, 789, 791, 796, 797, 798, 799, 800, 801, 802, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 816, 817, 818, 832, 833, 834, 835, 837, 838, 843, 852, 865, 874, 875, 876, 877, 878, 887, 894, 898, 909, 925, 928, 931, 974, 975, 977, 979, 981, 983, 985, 987, 989, 991, 1004, 1007, 1009, 1010, 1011, 1012, 1015, 1029, 1033, 1036, 1041, 1045, 1047, 1051, 1054, 1055, 1061, 1073, 1074, 1075, 1076, 1092, 1104, 1122, 1123, 1124, 1126, 1175, 1187, 1189, 1190, 1191, 1204, 1224, 1226, 1229, 1231, 1232, 1237, 1238, 1239, 1241, 1251, 1258, 1263, 1266, 1268, 1269, 1280, 1315, 1316, 1345, 1358, 1365, 1369, 1370, 1371, 1378, 1379], "each": [4, 329, 366, 368, 371, 380, 383, 399, 450, 731, 742, 784, 791, 833, 866, 931, 974, 1041, 1058, 1095, 1258, 1266, 1378, 1379], "neg": [4, 450], "partial": [4, 959, 1264, 1371, 1372, 1373], "begin": [4, 731, 741, 742, 743, 791, 834, 931, 939, 941, 975, 987, 989, 991, 1003, 1011, 1035, 1040, 1044, 1054, 1074, 1191, 1231, 1234, 1236], "stack": [4, 1370], "otherwis": [4, 718, 720, 723, 742, 754, 837, 843, 898, 931, 977, 979, 985, 991, 1007, 1032, 1050, 1095, 1201, 1231, 1236, 1258, 1379], "atoms": [5, 1227], "rel": [5, 30, 703, 859, 931, 977, 979, 985, 991, 1007, 1012, 1055, 1073, 1075, 1076, 1100, 1124, 1190, 1231, 1239], "fals": [5, 19, 30, 40, 44, 59, 106, 116, 144, 148, 216, 229, 242, 249, 287, 383, 385, 386, 401, 413, 414, 416, 422, 450, 630, 631, 638, 639, 641, 659, 667, 674, 675, 679, 696, 716, 718, 720, 723, 726, 728, 729, 731, 732, 733, 741, 742, 743, 745, 749, 766, 767, 768, 769, 771, 786, 787, 788, 789, 791, 796, 798, 799, 800, 801, 806, 807, 809, 810, 813, 816, 817, 832, 833, 834, 835, 837, 838, 842, 843, 852, 874, 879, 894, 898, 909, 925, 928, 931, 937, 939, 940, 941, 975, 977, 979, 981, 983, 985, 987, 989, 991, 1003, 1007, 1011, 1012, 1015, 1032, 1035, 1040, 1044, 1050, 1054, 1055, 1061, 1073, 1074, 1075, 1076, 1100, 1104, 1124, 1126, 1190, 1191, 1201, 1204, 1224, 1231, 1234, 1236, 1237, 1239, 1251, 1263, 1264, 1266, 1280, 1345, 1358, 1361, 1369, 1371, 1379], "scale": [5, 273, 276, 286, 287, 369, 382, 450, 478, 538, 975, 977, 979, 981, 983, 985, 987, 989, 991, 1142, 1150, 1163, 1176, 1180, 1195, 1197, 1371], "pbc": [5, 10, 383, 412, 471, 617, 1224, 1231, 1370], "check_strain": 5, "auto": [5, 19, 660, 667, 679, 696, 852, 909, 1015, 1061, 1104, 1204, 1231, 1280, 1345], "max_strain": 5, "1e": [5, 630, 631, 648, 650, 674, 989, 991, 1266], "10": [5, 15, 40, 121, 276, 298, 304, 326, 372, 720, 772, 898, 975, 987, 1036, 1039, 1045, 1117, 1118, 1258, 1274], "check_pbc": 5, "true": [5, 36, 38, 39, 40, 43, 47, 50, 64, 89, 116, 139, 144, 151, 152, 208, 220, 228, 235, 243, 272, 273, 276, 286, 287, 288, 291, 297, 298, 303, 304, 310, 315, 321, 325, 331, 336, 346, 354, 357, 361, 366, 369, 376, 382, 383, 385, 386, 400, 414, 418, 421, 422, 450, 520, 521, 630, 631, 651, 661, 663, 667, 674, 716, 718, 720, 723, 726, 731, 735, 741, 742, 743, 749, 766, 767, 768, 769, 771, 786, 787, 788, 789, 791, 796, 798, 799, 800, 801, 806, 807, 809, 810, 813, 816, 817, 832, 833, 835, 837, 838, 872, 874, 876, 879, 896, 898, 926, 928, 931, 932, 937, 939, 941, 975, 987, 1003, 1007, 1010, 1011, 1012, 1032, 1035, 1036, 1039, 1040, 1041, 1044, 1045, 1050, 1054, 1055, 1073, 1074, 1075, 1076, 1124, 1125, 1126, 1173, 1188, 1189, 1190, 1191, 1201, 1224, 1227, 1231, 1233, 1234, 1236, 1237, 1239, 1251, 1258, 1264, 1266, 1358, 1364, 1369, 1379], "period": [5, 294, 1224, 1226, 1258], "concaten": 5, "veri": [5, 748], "similiar": [5, 791, 837], "support": [5, 380, 450, 921, 931, 1012, 1055, 1073, 1075, 1076, 1124, 1190, 1239, 1371, 1378, 1379], "two": [5, 203, 205, 399, 716, 718, 791, 834, 845, 874, 877, 878, 894, 899, 928, 931, 979, 1224, 1226, 1258, 1264, 1271, 1371, 1378, 1379], "themselv": [5, 809, 837], "bit": [5, 1251, 1266, 1275], "differ": [5, 115, 116, 288, 290, 294, 368, 400, 410, 674, 716, 723, 741, 742, 743, 791, 797, 879, 898, 931, 939, 941, 1003, 1011, 1012, 1035, 1040, 1044, 1054, 1055, 1058, 1074, 1150, 1163, 1164, 1176, 1180, 1189, 1191, 1195, 1197, 1201, 1229, 1231, 1234, 1236, 1264, 1371, 1378, 1379], "todo": [5, 16, 226, 663, 741, 742, 743, 931, 939, 941, 989, 1003, 1011, 1012, 1035, 1040, 1044, 1054, 1055, 1073, 1074, 1075, 1076, 1124, 1190, 1191, 1234, 1236, 1239, 1261, 1270, 1275], "could": [5, 741, 791, 837, 938, 1221, 1222], "togeth": [5, 111], "which": [5, 52, 113, 115, 116, 175, 183, 242, 299, 305, 327, 358, 362, 370, 385, 432, 450, 633, 667, 674, 718, 720, 724, 725, 726, 734, 742, 769, 788, 791, 797, 799, 806, 837, 876, 898, 931, 935, 983, 985, 1007, 1010, 1058, 1095, 1100, 1201, 1224, 1225, 1226, 1231, 1237, 1251, 1258, 1264, 1266, 1270, 1378, 1379], "0": [5, 30, 36, 37, 38, 40, 44, 101, 116, 121, 169, 221, 227, 239, 247, 249, 273, 276, 287, 298, 304, 310, 357, 369, 370, 372, 382, 384, 385, 386, 395, 414, 448, 450, 451, 471, 473, 478, 521, 538, 539, 540, 541, 545, 627, 630, 631, 640, 650, 663, 671, 674, 726, 763, 769, 797, 804, 807, 844, 864, 879, 894, 926, 928, 975, 977, 979, 981, 983, 985, 987, 989, 991, 1039, 1100, 1224, 1231, 1251, 1258, 1264, 1274, 1363, 1375, 1378, 1379], "coordin": [5, 226, 286, 287, 315, 367, 674, 975, 977, 979, 985, 987, 991, 1226], "n": [5, 238, 294, 366, 368, 418, 463, 628, 742, 834, 893, 928, 1010, 1011, 1054, 1074, 1101, 1120, 1124, 1125, 1126, 1189, 1191, 1222, 1251, 1257, 1258, 1316], "th": [5, 1120, 1251], "locat": [5, 731, 931, 1073, 1378, 1379], "respepect": 5, "accord": [5, 183, 652, 661, 719, 720, 721, 723, 724, 742, 837, 898, 928, 931, 937, 940, 974, 975, 977, 979, 981, 983, 985, 987, 989, 991, 1003, 1007, 1008, 1012, 1031, 1032, 1036, 1041, 1045, 1049, 1050, 1055, 1073, 1075, 1076, 1124, 1133, 1135, 1138, 1142, 1146, 1150, 1154, 1158, 1159, 1163, 1167, 1169, 1172, 1176, 1180, 1184, 1190, 1194, 1195, 1196, 1198, 1199, 1201, 1226, 1231, 1233, 1235, 1237, 1239, 1240, 1242, 1251, 1264, 1266, 1274, 1367, 1369, 1378, 1379], "nth": 5, "shift": [5, 287, 769, 975, 987], "distanc": [5, 238, 385], "determin": [5, 105, 135, 200, 320, 322, 327, 450, 650, 651, 662, 716, 731, 734, 834, 843, 931, 977, 979, 985, 991, 1010, 1012, 1055, 1073, 1075, 1076, 1100, 1124, 1190, 1222, 1226, 1231, 1239, 1251, 1258, 1264, 1266, 1378, 1379], "posit": [5, 202, 382, 383, 450, 658, 662, 663, 731, 742, 749, 766, 767, 769, 791, 837, 931, 975, 977, 979, 981, 983, 985, 987, 989, 991, 1073, 1074, 1163, 1176, 1180, 1224, 1231, 1264, 1266], "origin": [5, 31, 422, 734, 777, 931, 989, 991], "result": [5, 35, 41, 42, 45, 46, 48, 49, 53, 56, 87, 88, 95, 100, 116, 117, 118, 119, 120, 121, 123, 124, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 207, 209, 213, 217, 218, 246, 271, 277, 285, 286, 288, 295, 296, 300, 301, 308, 309, 313, 314, 319, 320, 323, 324, 334, 335, 344, 345, 352, 353, 355, 356, 359, 360, 364, 365, 373, 375, 379, 380, 417, 419, 420, 423, 519, 520, 521, 522, 523, 555, 566, 646, 661, 667, 674, 717, 721, 725, 726, 730, 731, 741, 742, 748, 749, 769, 775, 788, 789, 791, 796, 797, 798, 799, 800, 801, 806, 807, 809, 810, 812, 813, 816, 817, 832, 833, 835, 837, 838, 842, 843, 879, 880, 881, 890, 894, 928, 931, 971, 975, 977, 979, 981, 983, 985, 987, 989, 991, 994, 1001, 1007, 1010, 1012, 1041, 1055, 1072, 1073, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1085, 1088, 1089, 1090, 1093, 1095, 1098, 1100, 1101, 1124, 1126, 1190, 1191, 1226, 1231, 1239, 1247, 1258, 1266, 1303, 1358, 1370, 1371, 1372, 1373, 1375, 1378], "plu": 5, "vector": [5, 348, 401, 545, 975, 977, 979, 985, 987, 991, 1224, 1226], "There": [5, 741, 791, 891, 1074, 1191, 1264, 1378, 1379], "item": [5, 116, 669, 716, 720, 726, 727, 728, 729, 731, 733, 734, 735, 737, 738, 739, 741, 742, 743, 766, 788, 799, 837, 845, 867, 870, 879, 885, 888, 898, 928, 931, 939, 941, 1003, 1011, 1035, 1040, 1044, 1054, 1074, 1189, 1191, 1222, 1224, 1234, 1236, 1246, 1251, 1257], "just": [5, 31, 674, 715, 716, 718, 726, 727, 731, 735, 741, 742, 743, 749, 766, 786, 787, 789, 791, 809, 813, 817, 832, 837, 840, 866, 874, 877, 878, 928, 931, 933, 975, 977, 979, 981, 983, 985, 987, 989, 991, 1012, 1032, 1050, 1055, 1073, 1075, 1076, 1079, 1082, 1089, 1096, 1123, 1124, 1125, 1190, 1194, 1231, 1239, 1266, 1275, 1307, 1311, 1338, 1355, 1367, 1378, 1379], "scalar": [5, 734, 977, 979, 985, 991, 1258], "r": [5, 797, 1125, 1126], "consid": [5, 720, 742, 837, 898, 934, 975, 977, 979, 981, 983, 985, 987, 989, 991, 1226, 1266], "unitari": 5, "bool": [5, 30, 36, 43, 47, 50, 64, 89, 106, 116, 119, 144, 208, 220, 227, 242, 272, 286, 287, 288, 297, 303, 310, 315, 321, 325, 336, 346, 354, 357, 361, 366, 369, 376, 382, 385, 400, 401, 418, 421, 422, 450, 520, 521, 631, 641, 650, 651, 667, 668, 674, 675, 709, 711, 713, 716, 718, 720, 723, 726, 731, 741, 742, 743, 766, 767, 769, 771, 791, 795, 796, 797, 798, 799, 800, 802, 804, 805, 806, 807, 808, 810, 811, 812, 813, 814, 817, 818, 819, 823, 832, 833, 834, 835, 837, 838, 843, 848, 876, 879, 898, 925, 928, 931, 939, 941, 1003, 1007, 1010, 1011, 1012, 1035, 1036, 1040, 1041, 1044, 1045, 1054, 1055, 1073, 1074, 1075, 1076, 1092, 1124, 1126, 1188, 1189, 1190, 1191, 1224, 1231, 1234, 1236, 1237, 1239, 1258, 1263, 1264, 1266, 1268, 1269, 1358, 1364, 1365, 1369, 1371], "corner": 5, "dimens": [5, 769, 791, 1258], "correspond": [5, 129, 329, 369, 422, 631, 962, 1039, 1117, 1251, 1258, 1264, 1372, 1373, 1378], "default": [5, 111, 116, 216, 227, 380, 383, 385, 450, 514, 515, 516, 627, 641, 663, 667, 716, 718, 720, 724, 726, 731, 742, 757, 766, 767, 769, 786, 787, 788, 789, 791, 796, 797, 798, 799, 800, 801, 802, 803, 804, 806, 807, 808, 809, 810, 813, 814, 816, 817, 818, 832, 833, 835, 837, 838, 842, 843, 872, 879, 898, 900, 901, 902, 928, 931, 974, 977, 979, 985, 991, 994, 1001, 1007, 1010, 1012, 1055, 1073, 1075, 1076, 1085, 1086, 1087, 1124, 1126, 1190, 1230, 1231, 1233, 1236, 1237, 1239, 1251, 1258, 1261, 1264, 1266, 1360, 1364, 1370, 1371, 1378, 1379], "valu": [5, 111, 116, 121, 144, 145, 158, 168, 183, 197, 227, 294, 327, 385, 388, 389, 390, 450, 663, 674, 715, 716, 717, 718, 720, 721, 723, 724, 726, 728, 729, 731, 732, 733, 734, 735, 736, 737, 738, 739, 741, 742, 743, 750, 752, 754, 763, 765, 766, 767, 768, 769, 784, 786, 787, 788, 789, 791, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 821, 832, 833, 834, 835, 837, 838, 841, 842, 844, 845, 846, 848, 850, 862, 864, 873, 874, 875, 876, 879, 880, 883, 891, 894, 898, 900, 901, 925, 926, 928, 930, 931, 932, 939, 940, 941, 974, 975, 977, 979, 981, 983, 985, 987, 989, 991, 994, 1001, 1003, 1007, 1009, 1011, 1012, 1026, 1033, 1035, 1040, 1044, 1051, 1053, 1054, 1055, 1056, 1057, 1058, 1073, 1074, 1075, 1076, 1092, 1095, 1123, 1124, 1126, 1142, 1150, 1163, 1172, 1173, 1176, 1180, 1187, 1189, 1190, 1191, 1192, 1194, 1195, 1197, 1199, 1201, 1222, 1224, 1230, 1231, 1233, 1234, 1236, 1237, 1238, 1239, 1241, 1251, 1253, 1254, 1255, 1258, 1268, 1269, 1316, 1359, 1370, 1371, 1378, 1379], "done": [5, 242, 718, 977, 979, 985, 991, 1222, 1266, 1371, 1378, 1379], "compat": [5, 127, 146, 676, 714, 1231], "other": [5, 183, 450, 656, 717, 720, 726, 727, 728, 733, 742, 765, 766, 769, 803, 832, 834, 837, 902, 928, 931, 1007, 1010, 1012, 1030, 1036, 1039, 1045, 1048, 1055, 1073, 1075, 1076, 1095, 1124, 1134, 1139, 1143, 1147, 1151, 1155, 1160, 1164, 1168, 1173, 1177, 1181, 1185, 1188, 1189, 1190, 1199, 1227, 1231, 1239, 1266, 1371, 1378, 1379], "maxim": [5, 786, 787, 789, 797, 802, 804, 805, 808, 811, 812, 814, 815, 818, 975, 977, 979, 981, 983, 985, 987, 989, 991, 1092, 1268, 1269], "strain": [5, 412, 413, 414, 418, 1370], "cannot": [5, 601, 786, 788, 791, 832, 839, 864, 931, 1150, 1163, 1176, 1180, 1195, 1197, 1258], "exceed": 5, "valueerror": [5, 10, 926], "rais": [5, 10, 122, 130, 144, 380, 594, 716, 720, 722, 742, 773, 774, 864, 898, 1007, 1032, 1050, 1233], "norm": [5, 1361], "displac": [5, 403, 404, 405, 406, 541, 983, 1370], "have": [5, 175, 383, 450, 543, 544, 650, 667, 674, 720, 731, 734, 735, 742, 749, 754, 763, 786, 787, 788, 789, 791, 797, 809, 811, 837, 879, 885, 888, 898, 931, 974, 975, 977, 979, 981, 983, 985, 987, 989, 991, 1009, 1010, 1012, 1055, 1073, 1074, 1075, 1076, 1079, 1082, 1089, 1124, 1187, 1190, 1224, 1226, 1231, 1236, 1239, 1258, 1266, 1367, 1371, 1379], "fd": [7, 8, 872], "symmetri": [10, 52, 299, 305, 358, 362, 380, 383, 421, 594, 595, 633, 648, 649, 650, 651, 652, 673, 674, 975, 977, 979, 981, 983, 985, 987, 989, 991, 1117, 1223, 1264, 1266, 1370, 1371, 1379], "error": [10, 122, 144, 380, 450, 594, 716, 720, 742, 786, 787, 788, 791, 796, 797, 798, 799, 800, 801, 805, 806, 807, 809, 810, 811, 812, 813, 816, 817, 818, 832, 833, 835, 837, 838, 879, 894, 898, 931, 933, 934, 935, 1007, 1012, 1055, 1073, 1075, 1076, 1095, 1100, 1101, 1124, 1126, 1190, 1195, 1233, 1239, 1266, 1375, 1378], "err_class": 10, "class": [10, 18, 19, 25, 27, 28, 35, 36, 42, 43, 46, 47, 49, 50, 56, 58, 59, 60, 61, 62, 63, 64, 88, 89, 107, 110, 111, 115, 116, 117, 118, 119, 120, 121, 123, 124, 127, 130, 137, 139, 143, 144, 145, 164, 165, 207, 208, 218, 220, 271, 272, 285, 286, 287, 288, 296, 297, 301, 303, 309, 310, 314, 315, 320, 321, 324, 325, 335, 336, 345, 346, 353, 354, 356, 357, 360, 361, 365, 366, 375, 376, 380, 382, 383, 385, 388, 389, 417, 418, 420, 421, 449, 450, 451, 452, 453, 454, 455, 466, 467, 470, 471, 472, 473, 474, 475, 476, 477, 479, 480, 486, 487, 519, 520, 521, 522, 657, 658, 665, 666, 667, 668, 670, 671, 673, 674, 675, 678, 679, 685, 687, 688, 689, 690, 695, 696, 702, 705, 706, 709, 710, 711, 712, 713, 715, 716, 717, 718, 719, 720, 721, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 740, 741, 742, 743, 747, 748, 750, 751, 752, 753, 756, 757, 765, 766, 767, 768, 769, 770, 771, 772, 784, 785, 786, 787, 788, 789, 790, 791, 795, 796, 797, 798, 799, 800, 801, 802, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 831, 832, 833, 834, 835, 836, 837, 838, 841, 843, 846, 847, 848, 851, 852, 858, 861, 862, 863, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 892, 893, 894, 897, 898, 899, 900, 901, 902, 908, 909, 915, 917, 918, 919, 920, 927, 928, 929, 930, 931, 932, 933, 934, 936, 937, 938, 939, 940, 941, 993, 1003, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1014, 1015, 1021, 1023, 1024, 1025, 1026, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1038, 1039, 1040, 1041, 1043, 1044, 1045, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1060, 1061, 1067, 1069, 1070, 1072, 1073, 1074, 1075, 1076, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1097, 1098, 1099, 1100, 1101, 1103, 1104, 1110, 1112, 1113, 1115, 1116, 1117, 1122, 1123, 1124, 1125, 1126, 1132, 1133, 1134, 1135, 1137, 1138, 1139, 1141, 1142, 1143, 1145, 1146, 1147, 1149, 1150, 1151, 1153, 1154, 1155, 1157, 1158, 1159, 1160, 1162, 1163, 1164, 1166, 1167, 1168, 1169, 1171, 1172, 1173, 1175, 1176, 1177, 1179, 1180, 1181, 1183, 1184, 1185, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 1194, 1195, 1196, 1197, 1198, 1199, 1200, 1201, 1203, 1204, 1210, 1212, 1213, 1214, 1215, 1216, 1217, 1218, 1219, 1221, 1222, 1223, 1224, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1238, 1239, 1240, 1241, 1242, 1243, 1244, 1245, 1246, 1248, 1249, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1260, 1261, 1262, 1263, 1264, 1265, 1266, 1267, 1268, 1269, 1270, 1271, 1272, 1279, 1280, 1286, 1288, 1289, 1290, 1291, 1292, 1293, 1295, 1296, 1297, 1298, 1299, 1300, 1301, 1302, 1344, 1345, 1351, 1353, 1354, 1357, 1358, 1371, 1378, 1379], "pcb": [10, 1224], "except": [10, 56, 57, 115, 122, 125, 126, 176, 218, 219, 250, 251, 252, 253, 278, 279, 380, 381, 716, 717, 720, 722, 745, 773, 774, 837, 849, 850, 891, 898, 933, 934, 935, 1007, 1032, 1050, 1231, 1233, 1258], "thei": [10, 663, 670, 674, 716, 725, 727, 731, 736, 741, 749, 766, 767, 769, 809, 837, 892, 894, 928, 931, 1009, 1012, 1055, 1073, 1074, 1075, 1076, 1122, 1124, 1150, 1163, 1176, 1180, 1187, 1190, 1195, 1197, 1226, 1231, 1239, 1371, 1378, 1379], "satisfi": [10, 791, 876], "requir": [10, 121, 383, 720, 723, 726, 731, 766, 767, 769, 778, 788, 791, 796, 798, 799, 800, 801, 806, 807, 809, 810, 813, 816, 817, 833, 835, 837, 838, 876, 879, 898, 931, 1007, 1012, 1055, 1073, 1075, 1076, 1124, 1126, 1134, 1139, 1143, 1147, 1151, 1155, 1160, 1164, 1168, 1173, 1177, 1181, 1185, 1188, 1189, 1190, 1201, 1231, 1237, 1239, 1258, 1370, 1375, 1378, 1379], "regist": [12, 726, 1264, 1370], "plugin": 12, "deal": [14, 708], "symbol": [15, 16, 47, 94, 160, 326, 328, 329, 366, 368, 371, 382, 383, 450, 668, 1117, 1120, 1222, 1224, 1230, 1251, 1263, 1264, 1266, 1370, 1379], "max_len": 15, "choos": [15, 401, 1379], "best": [15, 663], "short": [15, 731, 766, 767, 769], "represent": [15, 115, 137, 346, 936, 937, 1258], "gextexgextexgextexgextex9": [15, 16], "12": [15, 418, 450, 791, 1054, 1117, 1118, 1189], "gextex": [15, 16], "4x8": [15, 16], "ge4te4x16": 15, "gextexgextexh": 15, "2h": 15, "gextexgextex": 15, "c4h4oc4h4oc2c4h4oc4h4oc2": [15, 16], "c20h16o4": 15, "co2": [15, 16], "string": [16, 98, 120, 137, 144, 145, 147, 155, 185, 327, 329, 366, 368, 385, 389, 422, 625, 639, 641, 716, 720, 731, 741, 742, 743, 762, 763, 764, 769, 784, 786, 787, 788, 791, 795, 796, 797, 798, 799, 800, 801, 802, 803, 806, 807, 808, 809, 810, 813, 814, 816, 818, 825, 826, 832, 833, 834, 835, 837, 838, 848, 862, 898, 924, 925, 931, 939, 941, 946, 975, 977, 979, 981, 983, 985, 987, 989, 991, 994, 1001, 1003, 1007, 1011, 1012, 1035, 1040, 1041, 1044, 1054, 1055, 1073, 1074, 1075, 1076, 1123, 1124, 1126, 1190, 1191, 1195, 1201, 1231, 1233, 1234, 1236, 1237, 1239, 1251, 1258, 1264, 1371, 1379], "pretti": 16, "especi": 16, "suitabl": [16, 726, 743], "long": 16, "2d": [16, 294, 357, 369, 401, 975, 977, 979, 981, 983, 985, 987, 989, 991, 1224, 1225, 1361, 1371], "semiinfinit": [16, 1224, 1225, 1226], "bulk": [16, 975, 987, 1120, 1226, 1274, 1375], "doe": [16, 20, 650, 680, 697, 726, 727, 743, 809, 837, 853, 910, 1016, 1062, 1105, 1205, 1266, 1281, 1346, 1378, 1379], "work": [16, 20, 437, 450, 523, 627, 680, 697, 703, 853, 859, 910, 977, 979, 985, 991, 1016, 1062, 1105, 1205, 1258, 1266, 1281, 1346, 1375], "c4h4o": 16, "2c2": 16, "2": [16, 39, 40, 101, 121, 177, 178, 249, 276, 336, 346, 377, 385, 421, 627, 663, 726, 736, 769, 789, 791, 802, 844, 867, 891, 926, 928, 975, 977, 979, 981, 983, 985, 987, 989, 991, 1036, 1041, 1045, 1117, 1118, 1120, 1226, 1258, 1274, 1359, 1375, 1379], "hierarchi": [18, 19, 25, 27, 28, 35, 36, 42, 43, 46, 47, 49, 50, 56, 58, 59, 60, 61, 62, 63, 64, 88, 89, 110, 111, 115, 116, 117, 118, 119, 120, 121, 123, 124, 127, 130, 143, 144, 145, 164, 165, 207, 208, 218, 220, 271, 272, 285, 286, 287, 288, 296, 297, 301, 303, 309, 310, 314, 315, 320, 321, 324, 325, 335, 336, 345, 346, 353, 354, 356, 357, 360, 361, 365, 366, 375, 376, 380, 382, 383, 385, 388, 389, 417, 418, 420, 421, 449, 450, 451, 452, 453, 454, 455, 466, 467, 470, 471, 472, 473, 474, 475, 476, 477, 479, 480, 486, 487, 519, 520, 521, 522, 657, 658, 665, 666, 667, 668, 670, 671, 673, 674, 678, 679, 685, 687, 688, 689, 690, 695, 696, 702, 705, 706, 715, 716, 717, 718, 719, 720, 721, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 740, 741, 742, 743, 747, 750, 751, 752, 753, 756, 757, 765, 766, 767, 768, 769, 770, 771, 772, 785, 786, 787, 788, 789, 790, 791, 795, 796, 797, 798, 799, 800, 801, 802, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 831, 832, 833, 834, 835, 836, 837, 838, 851, 852, 858, 861, 862, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 892, 893, 894, 897, 898, 899, 900, 901, 902, 908, 909, 915, 917, 918, 919, 920, 927, 928, 929, 930, 931, 932, 936, 937, 938, 939, 940, 941, 993, 1003, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1014, 1015, 1021, 1023, 1024, 1025, 1026, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1038, 1039, 1040, 1041, 1043, 1044, 1045, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1060, 1061, 1067, 1069, 1070, 1072, 1073, 1074, 1075, 1076, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1097, 1098, 1099, 1100, 1101, 1103, 1104, 1110, 1112, 1113, 1115, 1116, 1117, 1122, 1123, 1124, 1125, 1126, 1132, 1133, 1134, 1135, 1137, 1138, 1139, 1141, 1142, 1143, 1145, 1146, 1147, 1149, 1150, 1151, 1153, 1154, 1155, 1157, 1158, 1159, 1160, 1162, 1163, 1164, 1166, 1167, 1168, 1169, 1171, 1172, 1173, 1175, 1176, 1177, 1179, 1180, 1181, 1183, 1184, 1185, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 1194, 1195, 1196, 1197, 1198, 1199, 1200, 1201, 1203, 1204, 1210, 1212, 1213, 1214, 1215, 1216, 1217, 1218, 1219, 1221, 1222, 1223, 1224, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1238, 1239, 1240, 1241, 1242, 1243, 1244, 1245, 1246, 1248, 1249, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1260, 1261, 1262, 1263, 1264, 1265, 1266, 1267, 1268, 1269, 1270, 1271, 1272, 1279, 1280, 1286, 1288, 1289, 1290, 1291, 1292, 1293, 1295, 1296, 1297, 1298, 1299, 1300, 1301, 1302, 1344, 1345, 1351, 1353, 1354, 1357, 1358], "common": [18, 19, 25, 27, 28, 678, 679, 685, 687, 688, 689, 690, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 923, 924, 925, 926, 927, 928, 929, 930, 931, 932, 933, 936, 937, 938, 939, 940, 941, 975, 977, 979, 981, 983, 985, 987, 989, 991, 993, 1003, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1014, 1015, 1021, 1023, 1024, 1025, 1026, 1029, 1031, 1032, 1033, 1034, 1035, 1036, 1038, 1040, 1041, 1043, 1044, 1045, 1047, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1058, 1060, 1061, 1067, 1069, 1070, 1072, 1073, 1074, 1075, 1076, 1084, 1085, 1091, 1092, 1093, 1097, 1098, 1100, 1103, 1104, 1110, 1112, 1113, 1122, 1123, 1124, 1126, 1132, 1133, 1134, 1135, 1137, 1138, 1139, 1141, 1142, 1143, 1145, 1146, 1147, 1149, 1150, 1151, 1153, 1154, 1155, 1157, 1158, 1159, 1160, 1162, 1163, 1164, 1166, 1167, 1168, 1169, 1171, 1172, 1173, 1175, 1176, 1177, 1179, 1180, 1181, 1183, 1184, 1185, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 1194, 1195, 1196, 1198, 1199, 1200, 1201, 1203, 1204, 1210, 1212, 1213, 1214, 1215, 1216, 1217, 1218, 1219, 1232, 1233, 1234, 1235, 1236, 1238, 1239, 1240, 1241, 1242, 1267, 1268, 1269, 1279, 1280, 1286, 1288, 1289, 1290, 1291, 1292, 1293, 1295, 1296, 1297, 1298, 1299, 1300, 1301, 1302, 1344, 1345, 1351, 1353, 1354, 1370, 1375, 1379], "testcas": [18, 27, 28, 678, 687, 688, 689, 690, 695, 703, 705, 706, 851, 859, 908, 917, 918, 919, 920, 1014, 1023, 1024, 1025, 1026, 1060, 1069, 1070, 1103, 1112, 1113, 1203, 1212, 1213, 1214, 1215, 1216, 1217, 1218, 1219, 1279, 1288, 1289, 1290, 1291, 1292, 1293, 1295, 1296, 1297, 1298, 1299, 1300, 1301, 1302, 1344, 1353, 1354, 1370], "extdict": [18, 678, 695, 851, 908, 1014, 1060, 1103, 1203, 1279, 1344, 1370], "init_test": [19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 852, 853, 854, 855, 856, 857, 858, 859, 860, 909, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 920, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1204, 1205, 1206, 1207, 1208, 1209, 1210, 1211, 1212, 1213, 1214, 1215, 1216, 1217, 1218, 1219, 1280, 1281, 1282, 1283, 1284, 1285, 1286, 1287, 1288, 1289, 1290, 1291, 1292, 1293, 1295, 1296, 1297, 1298, 1299, 1300, 1301, 1302, 1345, 1346, 1347, 1348, 1349, 1350, 1351, 1352, 1353, 1354, 1370], "A": [19, 110, 115, 116, 385, 422, 437, 450, 520, 521, 679, 696, 719, 720, 724, 731, 748, 749, 763, 766, 767, 769, 786, 788, 790, 792, 793, 794, 796, 801, 802, 803, 806, 807, 809, 810, 814, 815, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 837, 843, 852, 874, 876, 879, 885, 888, 898, 909, 928, 1007, 1015, 1053, 1056, 1061, 1092, 1101, 1104, 1118, 1188, 1192, 1193, 1194, 1195, 1196, 1197, 1198, 1204, 1231, 1251, 1258, 1266, 1271, 1280, 1345, 1375, 1378], "useful": [19, 679, 696, 836, 837, 852, 909, 1015, 1061, 1104, 1204, 1231, 1280, 1345], "assert": [19, 121, 679, 696, 852, 909, 1015, 1061, 1104, 1204, 1280, 1345], "numpi": [19, 679, 696, 708, 709, 710, 711, 712, 713, 718, 726, 769, 786, 787, 788, 791, 796, 805, 808, 814, 832, 837, 839, 841, 846, 847, 848, 852, 891, 909, 928, 1015, 1061, 1104, 1204, 1258, 1268, 1269, 1280, 1345, 1378], "arrai": [19, 47, 326, 327, 367, 368, 369, 382, 383, 384, 450, 473, 628, 663, 679, 696, 708, 718, 720, 726, 768, 769, 787, 788, 789, 790, 791, 792, 793, 794, 832, 837, 839, 841, 845, 846, 852, 870, 879, 891, 909, 928, 931, 975, 977, 979, 981, 983, 985, 987, 989, 991, 1012, 1015, 1041, 1055, 1061, 1073, 1075, 1076, 1095, 1104, 1124, 1188, 1190, 1194, 1204, 1239, 1258, 1264, 1266, 1280, 1345, 1370, 1371, 1378, 1379], "comparison": [19, 183, 679, 696, 837, 852, 909, 1015, 1061, 1104, 1204, 1280, 1345], "constructor": [19, 25, 28, 36, 43, 47, 50, 58, 59, 60, 61, 62, 63, 64, 89, 111, 116, 117, 118, 119, 120, 121, 123, 124, 127, 144, 145, 165, 208, 220, 272, 286, 287, 288, 297, 303, 310, 315, 321, 325, 336, 346, 354, 357, 361, 366, 376, 382, 383, 385, 389, 418, 421, 450, 451, 452, 453, 454, 455, 467, 471, 473, 475, 477, 480, 487, 520, 521, 522, 658, 666, 667, 668, 671, 674, 679, 685, 688, 690, 696, 702, 706, 716, 718, 719, 720, 721, 723, 724, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 741, 742, 743, 750, 751, 752, 753, 757, 766, 767, 768, 769, 771, 772, 786, 787, 788, 789, 790, 791, 796, 797, 798, 799, 800, 801, 802, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 832, 833, 834, 835, 837, 838, 852, 858, 862, 872, 874, 875, 876, 877, 878, 879, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 893, 894, 898, 900, 901, 902, 909, 915, 918, 920, 928, 930, 931, 932, 937, 939, 940, 941, 1003, 1007, 1008, 1010, 1011, 1012, 1015, 1021, 1024, 1026, 1030, 1031, 1032, 1033, 1035, 1036, 1039, 1040, 1041, 1044, 1045, 1048, 1049, 1050, 1051, 1053, 1054, 1055, 1056, 1061, 1067, 1070, 1073, 1074, 1075, 1076, 1079, 1080, 1082, 1083, 1085, 1086, 1087, 1089, 1090, 1092, 1093, 1094, 1095, 1098, 1100, 1101, 1104, 1110, 1113, 1116, 1117, 1123, 1124, 1125, 1126, 1133, 1134, 1135, 1138, 1139, 1142, 1143, 1146, 1147, 1150, 1151, 1154, 1155, 1158, 1159, 1160, 1163, 1164, 1167, 1168, 1169, 1172, 1173, 1176, 1177, 1180, 1181, 1184, 1185, 1188, 1189, 1190, 1191, 1192, 1194, 1195, 1196, 1197, 1198, 1199, 1201, 1204, 1210, 1213, 1215, 1217, 1219, 1222, 1224, 1230, 1231, 1233, 1234, 1235, 1236, 1237, 1238, 1239, 1240, 1241, 1242, 1244, 1245, 1246, 1249, 1251, 1253, 1254, 1255, 1257, 1258, 1261, 1263, 1264, 1266, 1268, 1269, 1271, 1272, 1280, 1286, 1289, 1291, 1293, 1296, 1298, 1300, 1302, 1345, 1351, 1354, 1358, 1379], "__init__": [19, 25, 28, 36, 43, 47, 50, 58, 59, 60, 61, 62, 63, 64, 89, 111, 116, 117, 118, 119, 120, 121, 123, 124, 127, 144, 145, 165, 208, 220, 272, 286, 287, 288, 297, 303, 310, 315, 321, 325, 336, 346, 354, 357, 361, 366, 376, 382, 383, 385, 389, 418, 421, 450, 451, 452, 453, 454, 455, 467, 471, 473, 475, 477, 480, 487, 520, 521, 522, 658, 666, 667, 668, 671, 674, 679, 685, 688, 690, 696, 702, 706, 716, 718, 719, 720, 721, 723, 724, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 741, 742, 743, 750, 751, 752, 753, 757, 766, 767, 768, 769, 771, 772, 786, 787, 788, 789, 790, 791, 796, 797, 798, 799, 800, 801, 802, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 832, 833, 834, 835, 837, 838, 852, 858, 862, 872, 874, 875, 876, 877, 878, 879, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 893, 894, 898, 900, 901, 902, 909, 915, 918, 920, 928, 930, 931, 932, 937, 938, 939, 940, 941, 945, 1003, 1007, 1008, 1010, 1011, 1012, 1015, 1021, 1024, 1026, 1030, 1031, 1032, 1033, 1035, 1036, 1039, 1040, 1041, 1044, 1045, 1048, 1049, 1050, 1051, 1053, 1054, 1055, 1056, 1061, 1067, 1070, 1073, 1074, 1075, 1076, 1079, 1080, 1082, 1083, 1085, 1086, 1087, 1089, 1090, 1092, 1093, 1094, 1095, 1098, 1100, 1101, 1104, 1110, 1113, 1116, 1117, 1123, 1124, 1125, 1126, 1133, 1134, 1135, 1138, 1139, 1142, 1143, 1146, 1147, 1150, 1151, 1154, 1155, 1158, 1159, 1160, 1163, 1164, 1167, 1168, 1169, 1172, 1173, 1176, 1177, 1180, 1181, 1184, 1185, 1188, 1189, 1190, 1191, 1192, 1194, 1195, 1196, 1197, 1198, 1199, 1201, 1204, 1210, 1213, 1215, 1217, 1219, 1222, 1224, 1230, 1231, 1233, 1234, 1235, 1236, 1237, 1238, 1239, 1240, 1241, 1242, 1244, 1245, 1246, 1249, 1251, 1253, 1254, 1255, 1257, 1258, 1261, 1263, 1264, 1266, 1268, 1269, 1271, 1272, 1280, 1286, 1289, 1291, 1293, 1296, 1298, 1300, 1302, 1345, 1351, 1354, 1358], "_print_output": [19, 679, 696, 852, 909, 1015, 1061, 1104, 1204, 1280, 1345], "_calc_arg": [19, 679, 696, 852, 909, 1015, 1061, 1104, 1204, 1280, 1345], "empty_spher": [19, 658, 659, 661, 679, 696, 852, 909, 1015, 1061, 1104, 1204, 1231, 1280, 1345, 1370], "input_fil": [19, 679, 696, 852, 909, 1007, 1015, 1061, 1080, 1083, 1087, 1090, 1095, 1100, 1101, 1104, 1204, 1231, 1280, 1345, 1379], "output_test_calc": [19, 679, 696, 852, 909, 1015, 1061, 1104, 1204, 1280, 1345], "inp": [19, 679, 696, 852, 909, 975, 987, 1015, 1061, 1104, 1204, 1270, 1271, 1273, 1274, 1280, 1314, 1319, 1329, 1332, 1335, 1345, 1379], "mpi": [19, 462, 463, 464, 465, 679, 696, 852, 909, 946, 1007, 1010, 1015, 1061, 1104, 1204, 1231, 1280, 1345, 1375], "ne": [19, 679, 696, 720, 769, 852, 898, 909, 975, 977, 979, 981, 983, 985, 987, 989, 991, 1015, 1061, 1104, 1120, 1204, 1280, 1345, 1379], "20": [19, 640, 654, 679, 696, 852, 909, 991, 1015, 1061, 1104, 1118, 1204, 1280, 1294, 1345], "nktab": [19, 679, 696, 852, 909, 975, 977, 979, 981, 983, 985, 987, 989, 991, 1003, 1015, 1061, 1104, 1204, 1280, 1345, 1379], "5": [19, 30, 38, 40, 276, 298, 304, 331, 357, 372, 679, 696, 720, 769, 852, 879, 898, 909, 926, 928, 975, 977, 979, 981, 983, 985, 987, 989, 991, 1015, 1061, 1104, 1117, 1118, 1120, 1204, 1258, 1280, 1345, 1359, 1363, 1379], "output_fil": [19, 679, 696, 852, 909, 1007, 1015, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1080, 1083, 1087, 1090, 1095, 1100, 1101, 1104, 1204, 1231, 1280, 1315, 1321, 1345, 1370, 1379], "potential_fil": [19, 679, 696, 852, 909, 1015, 1061, 1104, 1128, 1204, 1231, 1280, 1345, 1379], "pot": [19, 226, 679, 696, 731, 743, 766, 767, 769, 852, 909, 1015, 1061, 1104, 1204, 1270, 1280, 1345, 1371, 1379], "print_output": [19, 679, 696, 852, 894, 909, 1007, 1015, 1061, 1100, 1104, 1204, 1231, 1280, 1345], "temporary_dir": [19, 679, 696, 706, 852, 909, 1015, 1061, 1104, 1204, 1217, 1280, 1289, 1293, 1298, 1345], "classmethod": [19, 116, 123, 383, 679, 696, 721, 726, 741, 742, 743, 753, 852, 875, 909, 1007, 1010, 1015, 1032, 1050, 1061, 1101, 1104, 1191, 1201, 1204, 1222, 1258, 1280, 1345, 1371], "calc_arg": [19, 679, 696, 852, 909, 1015, 1061, 1104, 1204, 1280, 1345], "type": [19, 90, 112, 113, 114, 116, 129, 131, 134, 139, 140, 141, 142, 144, 145, 146, 172, 174, 178, 183, 185, 211, 212, 226, 227, 238, 290, 291, 303, 327, 328, 329, 336, 357, 369, 370, 371, 382, 383, 388, 389, 400, 401, 422, 450, 627, 628, 631, 650, 651, 667, 674, 675, 679, 696, 709, 710, 711, 712, 713, 716, 718, 720, 721, 723, 726, 731, 734, 742, 743, 763, 768, 776, 778, 779, 780, 784, 785, 786, 787, 788, 789, 791, 792, 793, 794, 796, 798, 799, 800, 801, 802, 804, 806, 807, 808, 809, 810, 812, 813, 814, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 832, 833, 835, 836, 837, 838, 840, 841, 842, 843, 844, 845, 846, 847, 848, 852, 875, 876, 879, 891, 894, 898, 909, 925, 926, 928, 931, 932, 946, 975, 977, 979, 981, 983, 985, 987, 989, 991, 994, 1001, 1003, 1007, 1010, 1011, 1012, 1015, 1031, 1032, 1033, 1039, 1041, 1049, 1050, 1051, 1054, 1055, 1061, 1073, 1074, 1075, 1076, 1092, 1095, 1104, 1123, 1124, 1126, 1150, 1163, 1164, 1176, 1180, 1184, 1185, 1186, 1189, 1190, 1191, 1195, 1197, 1199, 1201, 1204, 1222, 1231, 1233, 1237, 1238, 1239, 1241, 1246, 1250, 1251, 1258, 1264, 1266, 1268, 1269, 1274, 1280, 1345, 1370, 1371, 1375, 1378], "kwarg": [19, 20, 25, 26, 116, 121, 123, 124, 139, 144, 332, 333, 383, 450, 453, 454, 459, 467, 471, 473, 475, 480, 638, 639, 641, 659, 660, 661, 679, 680, 685, 686, 696, 697, 702, 704, 720, 726, 728, 733, 741, 742, 749, 786, 787, 788, 789, 791, 803, 809, 815, 816, 832, 834, 852, 853, 858, 860, 894, 898, 904, 906, 909, 910, 915, 916, 939, 1005, 1007, 1010, 1015, 1016, 1021, 1022, 1035, 1036, 1039, 1040, 1041, 1044, 1045, 1054, 1057, 1061, 1062, 1067, 1068, 1073, 1075, 1076, 1095, 1100, 1104, 1105, 1110, 1111, 1134, 1139, 1143, 1147, 1151, 1155, 1160, 1164, 1168, 1173, 1177, 1181, 1185, 1188, 1189, 1190, 1191, 1204, 1205, 1210, 1211, 1227, 1231, 1234, 1244, 1266, 1280, 1281, 1286, 1287, 1345, 1346, 1351, 1352, 1358, 1360, 1361, 1368, 1369], "run_sprkkr": [19, 679, 696, 852, 909, 1015, 1061, 1104, 1204, 1280, 1345], "assertasyncequ": [19, 679, 696, 852, 909, 1015, 1061, 1104, 1204, 1280, 1345], "b": [19, 20, 21, 22, 23, 24, 38, 39, 40, 298, 304, 372, 382, 396, 521, 679, 680, 681, 682, 683, 684, 696, 697, 698, 699, 700, 701, 748, 786, 788, 791, 832, 837, 839, 852, 853, 854, 855, 856, 857, 891, 893, 909, 910, 911, 912, 913, 914, 928, 1015, 1016, 1017, 1018, 1019, 1020, 1061, 1062, 1063, 1064, 1065, 1066, 1104, 1105, 1106, 1107, 1108, 1109, 1120, 1204, 1205, 1206, 1207, 1208, 1209, 1258, 1280, 1281, 1282, 1283, 1284, 1285, 1294, 1345, 1346, 1347, 1348, 1349, 1350], "assertasyncrais": [19, 679, 696, 852, 909, 1015, 1061, 1104, 1204, 1280, 1345], "assertrais": [19, 679, 696, 852, 909, 1015, 1061, 1104, 1204, 1280, 1345], "assertalmostequ": [19, 679, 696, 852, 909, 1015, 1061, 1104, 1204, 1280, 1345], "assertisnon": [19, 679, 696, 852, 909, 1015, 1061, 1104, 1204, 1280, 1345], "static": [19, 361, 674, 679, 696, 716, 720, 742, 786, 788, 791, 832, 837, 852, 893, 909, 928, 1010, 1011, 1015, 1041, 1061, 1100, 1104, 1117, 1189, 1201, 1204, 1224, 1251, 1254, 1258, 1261, 1263, 1266, 1271, 1280, 1345], "runasync": [19, 679, 696, 852, 909, 1015, 1061, 1104, 1204, 1280, 1345], "corr": [19, 679, 696, 852, 909, 1015, 1061, 1104, 1204, 1280, 1345], "asserttru": [19, 679, 696, 852, 909, 1015, 1061, 1104, 1204, 1280, 1345], "val": [19, 679, 696, 726, 741, 742, 786, 787, 788, 790, 800, 801, 802, 807, 816, 834, 837, 852, 881, 884, 886, 889, 909, 1015, 1061, 1104, 1204, 1215, 1280, 1345], "assertfals": [19, 679, 696, 852, 909, 1015, 1061, 1104, 1204, 1280, 1345], "assertequ": [19, 679, 696, 852, 909, 1015, 1061, 1104, 1204, 1280, 1345], "msg": [19, 20, 21, 22, 23, 24, 26, 679, 680, 681, 682, 683, 684, 686, 696, 697, 698, 699, 700, 701, 704, 730, 852, 853, 854, 855, 856, 857, 860, 909, 910, 911, 912, 913, 914, 916, 1015, 1016, 1017, 1018, 1019, 1020, 1022, 1061, 1062, 1063, 1064, 1065, 1066, 1068, 1104, 1105, 1106, 1107, 1108, 1109, 1111, 1204, 1205, 1206, 1207, 1208, 1209, 1211, 1280, 1281, 1282, 1283, 1284, 1285, 1287, 1345, 1346, 1347, 1348, 1349, 1350, 1352], "assertnotequ": [19, 679, 696, 852, 909, 1015, 1061, 1104, 1204, 1280, 1345], "almost_equal_precis": [19, 679, 696, 852, 909, 1015, 1061, 1104, 1204, 1280, 1345], "assert_almost_equ": [20, 680, 697, 853, 910, 1016, 1062, 1105, 1205, 1281, 1346, 1370], "non": [20, 242, 399, 450, 626, 640, 680, 697, 716, 720, 731, 741, 742, 743, 766, 767, 769, 853, 891, 898, 910, 928, 933, 939, 941, 975, 977, 979, 981, 983, 985, 987, 989, 991, 1003, 1011, 1016, 1035, 1040, 1044, 1054, 1062, 1074, 1105, 1191, 1205, 1226, 1231, 1234, 1236, 1266, 1281, 1346, 1378, 1379], "numer": [20, 680, 697, 769, 791, 797, 853, 910, 1016, 1062, 1105, 1205, 1281, 1346], "dtype": [20, 680, 697, 786, 791, 832, 837, 853, 910, 928, 1016, 1062, 1105, 1205, 1258, 1281, 1346], "kwar": [23, 24, 683, 684, 700, 701, 856, 857, 913, 914, 1019, 1020, 1065, 1066, 1108, 1109, 1208, 1209, 1284, 1285, 1349, 1350], "arg": [25, 58, 68, 116, 123, 124, 139, 144, 240, 332, 333, 383, 450, 453, 454, 459, 467, 471, 473, 475, 480, 625, 654, 685, 702, 726, 742, 749, 815, 816, 834, 858, 868, 894, 904, 906, 915, 966, 969, 1005, 1007, 1021, 1067, 1073, 1075, 1076, 1110, 1150, 1163, 1176, 1180, 1188, 1189, 1190, 1195, 1197, 1210, 1227, 1231, 1244, 1266, 1286, 1310, 1313, 1318, 1320, 1322, 1324, 1325, 1326, 1327, 1328, 1331, 1334, 1337, 1340, 1351, 1369, 1370], "fce": [26, 686, 704, 860, 869, 916, 1022, 1068, 1111, 1211, 1247, 1287, 1352], "testbuild": [27, 1290], "test_build": [28, 1291, 1370], "test_stack": 28, "visualis": [30, 1270, 1314, 1319, 1329, 1332, 1335, 1357, 1358, 1359, 1360, 1361, 1362, 1363, 1364, 1365, 1366, 1367, 1368, 1369, 1370, 1371, 1379], "scale_radii": 30, "rotat": [30, 541, 545, 975, 987, 1226], "bond": 30, "graph": 30, "termin": [30, 745], "block": [30, 151, 834], "viewer": 30, "tupl": [30, 123, 174, 183, 185, 286, 287, 336, 346, 366, 389, 674, 731, 741, 742, 786, 787, 789, 834, 837, 841, 846, 894, 925, 926, 1226, 1258], "x": [30, 50, 51, 294, 310, 315, 357, 361, 380, 418, 750, 752, 797, 891, 925, 931, 975, 977, 979, 981, 983, 985, 987, 989, 991, 1027, 1258, 1361, 1379], "z": [30, 50, 294, 310, 315, 327, 361, 813, 817, 977, 979, 985, 991, 1101, 1254], "number": [30, 98, 125, 183, 294, 321, 327, 367, 372, 383, 385, 394, 396, 421, 450, 627, 643, 663, 674, 675, 726, 763, 769, 791, 792, 795, 797, 802, 804, 805, 808, 812, 814, 815, 818, 832, 834, 845, 866, 879, 925, 928, 931, 975, 977, 979, 981, 983, 985, 987, 989, 991, 1041, 1091, 1092, 1118, 1142, 1150, 1163, 1176, 1180, 1195, 1197, 1199, 1201, 1222, 1226, 1231, 1237, 1251, 1258, 1264, 1266, 1267, 1268, 1269, 1274, 1371, 1379], "size": [30, 52, 299, 305, 358, 362, 370, 372, 450, 663, 1188, 1371], "site": [30, 400, 661, 663, 671, 879, 975, 977, 979, 981, 983, 985, 987, 989, 991, 1041, 1180, 1181, 1182, 1201, 1221, 1222, 1224, 1226, 1237, 1246, 1250, 1251, 1257, 1264, 1266, 1267, 1370, 1371, 1379], "str": [30, 36, 43, 47, 50, 64, 89, 90, 98, 106, 112, 116, 119, 120, 123, 131, 139, 144, 145, 151, 160, 171, 172, 174, 178, 183, 185, 208, 220, 227, 242, 272, 286, 287, 288, 294, 297, 303, 310, 315, 321, 325, 327, 336, 346, 354, 357, 361, 366, 376, 382, 385, 418, 421, 422, 450, 520, 521, 533, 631, 641, 663, 667, 668, 716, 720, 721, 723, 726, 731, 734, 742, 763, 766, 767, 769, 776, 778, 779, 780, 786, 788, 789, 791, 796, 797, 798, 799, 800, 801, 802, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 816, 817, 818, 832, 833, 834, 835, 837, 838, 840, 843, 848, 879, 898, 925, 928, 931, 1007, 1010, 1011, 1012, 1036, 1041, 1045, 1054, 1055, 1073, 1074, 1075, 1076, 1092, 1095, 1117, 1124, 1126, 1151, 1154, 1164, 1172, 1176, 1180, 1184, 1188, 1189, 1190, 1191, 1195, 1197, 1199, 1201, 1222, 1224, 1227, 1231, 1233, 1237, 1239, 1251, 1268, 1269, 1274, 1277, 1358, 1365, 1369], "exampl": [30, 116, 121, 185, 287, 380, 399, 422, 450, 671, 734, 748, 749, 750, 752, 797, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 966, 967, 968, 969, 970, 971, 972, 1101, 1231, 1258, 1312, 1313, 1316, 1370, 1371, 1373, 1375, 1379], "x90": 30, "y90": 30, "z90": 30, "show": [30, 40, 44, 216, 716, 731, 742, 931, 1036, 1041, 1045, 1095, 1258, 1316, 1358, 1365, 1367, 1369, 1372, 1373], "between": [30, 203, 204, 205, 206, 315, 928, 975, 987, 1258, 1371, 1378], "subprocess": [30, 904, 905, 906, 1370], "achiev": [30, 1258], "nonblock": 30, "recip": [31, 113, 116, 171, 200, 278, 353, 380, 444, 502, 513, 514, 515, 516, 575, 577, 583, 591, 642], "thu": [31, 708, 720, 748, 791, 879, 931, 1007, 1100, 1258, 1266, 1378, 1379], "relax": [31, 382, 383, 384, 385, 387, 399, 591, 1370], "main": [32, 278, 330, 353, 382, 399, 400, 450, 501, 1251, 1304, 1370, 1379], "asr": [33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 123, 124, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 1370, 1371], "charg": [33, 34, 46, 206, 383, 400, 450, 975, 977, 979, 981, 983, 985, 987, 989, 991, 1080, 1083, 1090, 1101, 1133, 1134, 1135, 1136, 1139, 1222, 1231, 1263, 1264, 1371, 1379], "analysi": [33, 42, 88], "bader": [34, 1370], "core": [35, 36, 42, 43, 46, 47, 49, 50, 56, 64, 88, 89, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 123, 124, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 207, 208, 218, 220, 271, 272, 285, 286, 287, 288, 296, 297, 301, 303, 309, 310, 314, 315, 320, 321, 324, 325, 335, 336, 345, 346, 353, 354, 356, 357, 360, 361, 365, 366, 375, 376, 380, 382, 417, 418, 420, 421, 519, 520, 521, 522, 770, 771, 772, 1122, 1125, 1222, 1370], "asrresult": [35, 36, 42, 43, 46, 47, 49, 50, 56, 64, 88, 89, 115, 117, 118, 119, 120, 123, 137, 207, 208, 218, 220, 271, 272, 285, 286, 287, 288, 296, 297, 301, 303, 309, 310, 314, 315, 320, 321, 324, 325, 335, 336, 345, 346, 353, 354, 356, 357, 360, 361, 365, 366, 375, 376, 380, 382, 417, 418, 420, 421, 519, 520, 521], "band": [35, 40, 43, 215, 221, 227, 238, 286, 287, 297, 301, 302, 303, 335, 345, 365, 367, 372, 450, 631, 975, 987], "bandstructur": [36, 37, 38, 39, 40, 41, 297, 303, 336, 346, 1370], "bs_nosoc": 36, "bs_soc": 36, "dict": [36, 43, 47, 50, 64, 89, 90, 111, 116, 117, 119, 121, 123, 129, 147, 155, 166, 172, 174, 183, 208, 220, 272, 286, 287, 288, 297, 303, 310, 315, 321, 325, 327, 328, 336, 346, 354, 357, 361, 366, 376, 382, 400, 418, 421, 450, 520, 521, 631, 650, 663, 674, 720, 726, 840, 843, 867, 898, 900, 901, 902, 928, 931, 1012, 1055, 1073, 1075, 1076, 1095, 1124, 1190, 1222, 1227, 1231, 1239, 1251, 1264, 1266], "instanti": [36, 43, 47, 50, 64, 89, 116, 119, 123, 138, 208, 220, 272, 286, 287, 288, 297, 303, 310, 315, 321, 325, 336, 346, 354, 357, 361, 366, 376, 382, 418, 421, 520, 521, 731, 837, 931, 1007, 1073, 1378], "data": [36, 43, 47, 50, 64, 89, 111, 112, 116, 119, 139, 150, 162, 170, 208, 220, 272, 286, 287, 288, 297, 303, 310, 315, 321, 325, 336, 346, 354, 357, 361, 366, 376, 382, 394, 396, 418, 421, 520, 521, 547, 708, 716, 720, 722, 723, 731, 742, 766, 767, 768, 769, 791, 832, 833, 834, 835, 887, 894, 898, 899, 900, 901, 931, 933, 935, 983, 1007, 1012, 1030, 1032, 1039, 1041, 1048, 1050, 1055, 1057, 1072, 1073, 1075, 1076, 1095, 1096, 1117, 1124, 1151, 1154, 1172, 1184, 1188, 1190, 1194, 1195, 1199, 1200, 1201, 1220, 1222, 1233, 1237, 1238, 1239, 1245, 1251, 1258, 1264, 1266, 1271, 1274, 1359, 1361, 1370, 1371, 1378], "input": [36, 43, 47, 50, 64, 89, 116, 119, 200, 208, 220, 272, 286, 287, 288, 297, 303, 310, 315, 321, 325, 336, 346, 354, 357, 361, 366, 376, 382, 400, 401, 418, 421, 520, 521, 638, 668, 720, 723, 731, 741, 742, 743, 759, 766, 767, 769, 782, 799, 806, 822, 826, 837, 843, 898, 928, 931, 939, 941, 953, 973, 975, 976, 977, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 989, 990, 991, 992, 993, 994, 996, 998, 999, 1000, 1001, 1002, 1003, 1006, 1007, 1008, 1010, 1011, 1012, 1035, 1040, 1044, 1054, 1055, 1072, 1073, 1074, 1075, 1076, 1100, 1101, 1121, 1124, 1190, 1191, 1201, 1231, 1234, 1236, 1239, 1371, 1372, 1373, 1375, 1378], "wrap": [36, 43, 47, 50, 64, 89, 115, 116, 119, 208, 220, 272, 286, 287, 288, 297, 303, 310, 315, 321, 325, 336, 346, 354, 357, 361, 366, 376, 382, 418, 421, 520, 521, 748, 834, 902], "metadata": [36, 43, 47, 50, 64, 89, 115, 116, 119, 122, 140, 208, 220, 272, 286, 287, 288, 297, 303, 310, 315, 321, 325, 336, 346, 354, 357, 361, 366, 376, 382, 418, 421, 520, 521, 671], "dictionari": [36, 43, 47, 50, 64, 89, 115, 116, 119, 123, 141, 142, 145, 149, 183, 197, 208, 220, 272, 286, 287, 288, 297, 303, 310, 315, 321, 325, 328, 329, 336, 346, 354, 357, 361, 366, 369, 370, 376, 382, 400, 418, 421, 450, 453, 520, 521, 667, 674, 716, 720, 726, 734, 741, 742, 890, 891, 898, 928, 931, 1120, 1231, 1264, 1378], "strict": [36, 43, 47, 50, 64, 89, 116, 119, 139, 208, 220, 272, 286, 287, 288, 297, 303, 310, 315, 321, 325, 336, 346, 354, 357, 361, 366, 376, 382, 418, 421, 520, 521, 876, 928], "strictli": [36, 43, 47, 50, 64, 89, 116, 119, 208, 220, 272, 286, 287, 288, 297, 303, 310, 315, 321, 325, 336, 346, 354, 357, 361, 366, 376, 382, 418, 421, 520, 521, 1258], "enforc": [36, 43, 47, 50, 64, 89, 116, 119, 208, 220, 272, 286, 287, 288, 297, 303, 310, 315, 321, 325, 336, 346, 354, 357, 361, 366, 376, 380, 382, 418, 421, 520, 521, 720, 837, 879, 898], "entri": [36, 43, 47, 50, 64, 89, 116, 119, 170, 175, 208, 220, 272, 286, 287, 288, 297, 303, 310, 315, 321, 325, 336, 346, 354, 357, 361, 366, 376, 382, 418, 421, 520, 521, 667, 668, 671], "spin": [36, 221, 227, 238, 286, 287, 321, 326, 328, 329, 448, 450, 451, 483, 627, 652, 975, 977, 979, 983, 985, 987, 989, 991, 1039, 1041], "orbit": [36, 227, 326, 365, 366, 368, 977, 979, 985, 991, 1041], "coupl": [36, 227, 242, 380, 631, 977, 979, 985, 991], "without": [36, 287, 288, 361, 380, 595, 674, 720, 791, 813, 817, 837, 898, 1375, 1378], "key_descript": [36, 41, 43, 45, 47, 48, 50, 53, 87, 89, 95, 116, 127, 166, 174, 176, 209, 213, 217, 246, 277, 286, 287, 288, 295, 297, 300, 303, 308, 310, 313, 315, 319, 321, 323, 325, 334, 336, 344, 346, 352, 354, 355, 357, 359, 361, 364, 366, 373, 379, 382, 418, 419, 421, 423, 520, 521, 646], "format": [36, 43, 47, 50, 64, 89, 92, 116, 121, 124, 126, 131, 199, 206, 208, 220, 272, 287, 297, 303, 310, 315, 321, 325, 336, 346, 354, 357, 361, 366, 376, 418, 421, 520, 671, 716, 731, 741, 742, 762, 763, 764, 786, 787, 788, 789, 790, 791, 796, 797, 798, 799, 800, 801, 802, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 816, 817, 818, 832, 833, 834, 835, 837, 838, 840, 842, 843, 875, 879, 925, 935, 975, 977, 979, 981, 983, 985, 987, 989, 991, 1007, 1009, 1010, 1011, 1012, 1033, 1051, 1054, 1055, 1074, 1092, 1123, 1126, 1127, 1128, 1129, 1187, 1189, 1191, 1233, 1238, 1241, 1254, 1258, 1268, 1269, 1370, 1371, 1378, 1379], "ase_webpanel": [36, 43, 47, 50, 64, 89, 208, 220, 272, 287, 297, 303, 310, 315, 321, 325, 336, 346, 354, 357, 361, 366, 376, 418, 421, 520], "webpanel": [36, 43, 47, 50, 64, 89, 113, 116, 127, 208, 220, 272, 287, 297, 303, 310, 315, 321, 325, 336, 346, 354, 357, 361, 366, 376, 418, 421, 522, 1370], "_known_data_kei": [36, 43, 47, 50, 64, 89, 208, 220, 272, 286, 287, 288, 297, 303, 310, 315, 321, 325, 336, 346, 354, 357, 361, 366, 376, 382, 418, 421, 520, 521], "row": [37, 38, 39, 41, 45, 48, 51, 53, 68, 85, 87, 90, 93, 95, 127, 165, 166, 167, 174, 176, 177, 178, 183, 197, 209, 212, 213, 216, 217, 224, 233, 240, 246, 259, 273, 276, 277, 289, 295, 298, 300, 304, 308, 311, 313, 319, 323, 331, 334, 339, 340, 344, 349, 350, 352, 355, 359, 363, 364, 372, 373, 378, 379, 419, 423, 645, 646, 791], "refer": [37, 56, 58, 59, 60, 61, 66, 69, 89, 91, 183, 250, 671, 1173, 1199, 1246, 1258, 1264, 1370], "color": [37, 40, 329, 1361, 1363], "c1": 37, "plot": [37, 40, 206, 372, 769, 971, 1036, 1039, 1041, 1045, 1095, 1258, 1330, 1331, 1358, 1359, 1360, 1361, 1362, 1363, 1364, 1365, 1366, 1367, 1368, 1369, 1370, 1371, 1372, 1373], "pbe": [37, 38, 39, 215, 302, 372, 989, 991], "soc": [37, 215, 221, 227, 235, 236, 242, 243, 245, 287, 288, 291, 293, 297, 303, 315, 325, 331, 450, 476, 630, 631, 977, 979, 985, 991], "filenam": [38, 39, 40, 51, 100, 144, 145, 154, 157, 161, 162, 171, 172, 173, 202, 216, 227, 242, 298, 304, 331, 342, 343, 372, 378, 389, 471, 641, 667, 893, 922, 947, 1007, 1010, 1032, 1036, 1041, 1045, 1050, 1095, 1201, 1230, 1231, 1274, 1276, 1277, 1358, 1365, 1369, 1379], "png": [38, 216, 298, 304, 372], "figsiz": [38, 39, 298, 304, 331, 372, 1036, 1041, 1045, 1258, 1358, 1369], "show_legend": [38, 39, 298, 304], "": [38, 39, 40, 273, 298, 304, 328, 329, 366, 368, 369, 370, 418, 716, 720, 731, 742, 749, 760, 786, 788, 791, 797, 832, 839, 879, 898, 931, 975, 987, 989, 991, 1032, 1039, 1050, 1073, 1095, 1101, 1120, 1188, 1222, 1231, 1246, 1258], "6": [39, 414, 975, 977, 979, 981, 983, 985, 987, 989, 991, 1036, 1041, 1045, 1117, 1118, 1120, 1231, 1258, 1358, 1369, 1375, 1379], "4": [39, 450, 790, 797, 802, 864, 867, 926, 928, 946, 975, 977, 979, 981, 983, 985, 987, 989, 991, 1041, 1117, 1118, 1120, 1229, 1231, 1258, 1358, 1359, 1369, 1375, 1379], "emin": [40, 386, 977, 979, 981, 985, 989, 991, 1095], "emax": [40, 977, 979, 981], "energi": [40, 50, 73, 89, 91, 92, 183, 185, 199, 206, 250, 287, 290, 315, 326, 382, 385, 450, 451, 631, 716, 795, 879, 962, 975, 977, 979, 981, 983, 985, 987, 989, 991, 1039, 1041, 1095, 1231, 1316, 1371, 1372, 1373, 1379], "colorbar": [40, 1361], "ylabel": [40, 1361, 1368], "clabel": 40, "s_z": 40, "cmin": 40, "cmax": 40, "sortcolor": 40, "loc": [40, 771, 1125, 1258], "topolog": 42, "berri": [43, 44, 45, 450, 1370], "topologi": [43, 495], "fname": [44, 82, 93, 276, 289, 311, 339, 340, 349, 350, 645], "effect": [46, 218, 226, 227, 361, 769, 928, 931, 1266], "born": 46, "borncharg": [47, 48, 1370], "z_avv": [47, 312], "sym_a": 47, "ndarrai": [47, 226, 238, 241, 287, 288, 382, 450, 627, 663, 726, 786, 787, 789, 791, 841, 846, 928, 1224, 1258, 1266], "chemic": [47, 326, 328, 329, 366, 382, 392, 421, 422, 663, 1120, 1222, 1251, 1263, 1264, 1379], "beth": 49, "salpet": 49, "absorpt": [49, 1370], "spectrum": [49, 367, 375], "bse": [50, 51, 52, 53, 1370], "bse_alphay_w": 50, "bse_alphax_w": 50, "e_b": 50, "bse_alphaz_w": 50, "exciton": 50, "bind": [50, 111, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 1173, 1231, 1370], "from": [50, 100, 103, 112, 116, 123, 144, 145, 158, 166, 202, 227, 290, 294, 380, 389, 406, 422, 450, 542, 627, 628, 648, 671, 674, 675, 703, 716, 718, 720, 721, 723, 726, 731, 734, 741, 742, 743, 748, 750, 752, 754, 762, 764, 765, 766, 767, 769, 786, 787, 788, 791, 803, 805, 809, 812, 814, 832, 833, 834, 837, 838, 839, 842, 843, 844, 845, 859, 874, 875, 877, 878, 879, 891, 894, 898, 900, 901, 928, 930, 931, 939, 941, 945, 975, 977, 979, 981, 983, 985, 987, 989, 991, 1003, 1007, 1009, 1010, 1011, 1012, 1032, 1035, 1036, 1040, 1044, 1045, 1050, 1054, 1055, 1072, 1073, 1074, 1075, 1076, 1095, 1096, 1124, 1131, 1150, 1163, 1172, 1176, 1180, 1187, 1190, 1191, 1194, 1195, 1197, 1199, 1201, 1222, 1224, 1226, 1231, 1233, 1234, 1236, 1237, 1239, 1247, 1258, 1266, 1271, 1274, 1371, 1375, 1378, 1379], "ev": [50, 89, 227, 286, 287, 288, 290, 294, 297, 303, 310, 315, 325, 326, 336, 346, 357, 361, 382, 627, 804, 879, 975, 977, 979, 981, 983, 985, 987, 989, 991], "polariz": [50, 309, 310, 361, 362, 364, 1370], "kptdensiti": [52, 299, 305, 306, 414, 640], "get": [52, 102, 103, 111, 116, 123, 132, 134, 137, 183, 203, 205, 294, 299, 329, 358, 362, 368, 369, 370, 371, 383, 396, 422, 450, 627, 628, 633, 638, 639, 671, 716, 720, 832, 874, 878, 879, 885, 898, 900, 901, 902, 931, 1007, 1012, 1032, 1050, 1055, 1073, 1075, 1076, 1124, 1131, 1190, 1194, 1231, 1239, 1379], "reason": [52, 299, 305, 358, 362, 633, 837], "monkhorst": [52, 299, 305, 358, 362, 633], "hit": [52, 299, 305, 358, 362, 633], "high": [52, 299, 305, 336, 358, 362, 418, 633, 977, 979, 985, 991], "point": [52, 206, 226, 286, 287, 288, 297, 299, 303, 305, 358, 362, 367, 370, 372, 400, 421, 450, 633, 651, 667, 975, 977, 979, 981, 983, 985, 987, 989, 991, 1258], "convexhullrefer": [56, 1370], "hyperplan": [56, 1370], "intermedi": [56, 79, 1243, 1370], "leanintermedi": [56, 1370], "chc": [58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 1370], "element": [58, 66, 72, 183, 250, 422, 450, 663, 726, 728, 731, 734, 742, 766, 767, 769, 770, 837, 843, 874, 931, 1012, 1055, 1073, 1075, 1076, 1124, 1190, 1222, 1239, 1251, 1263, 1264, 1371], "_construct_coordin": 58, "from_refer": 58, "is_singl": 58, "pt": [59, 75, 1120], "find_t": 59, "p": [59, 62, 797, 802, 975, 987, 1039, 1120, 1231, 1379], "mat_refer": [60, 61], "reactant_refer": [60, 61], "to_dict": [60, 61, 63, 716, 890], "from_dict": [60, 61, 63], "label": [60, 450, 674, 790, 791, 1231, 1258], "to_result": [60, 61], "_get_hform_data": 60, "reactant_cont": 60, "pt1": 62, "pt2": 62, "intersect": [62, 205, 1370], "plane": [62, 287, 288, 290, 977, 979], "find_": 62, "formula": [63, 73, 84, 259, 421, 422, 977, 979, 985, 991], "hform": [63, 89], "to_el": 63, "natom": [63, 183, 185], "tl": [65, 1120], "db": [66, 73, 85, 94, 110, 111, 255, 258, 259, 266, 436], "mat_ref": [67, 69, 79, 83], "reactant_ref": [67, 79, 83], "ref": [67, 71, 72, 83, 256, 258, 797], "chref": 70, "mat_formula": 70, "react_formula": 70, "u": [74, 78, 80, 81, 1120, 1379], "ind": 75, "eq": [75, 928], "si": [75, 380, 1120], "oh": 75, "v1": [76, 671], "v2": 76, "u0": 77, "v": [81, 734, 797, 989, 991, 1120], "t1": 86, "t2": 86, "convex": [88, 89], "hull": [88, 89], "stabil": [88, 89, 335, 336, 346, 418, 1371], "convex_hul": [89, 90, 91, 92, 93, 94, 95, 1370], "thermodynamic_stability_level": 89, "ehul": 89, "indic": [89, 238, 327, 329, 367, 975, 987, 1371, 1379], "coef": 89, "heat": [89, 92], "relev": 89, "thermodynam": 89, "level": [89, 227, 238, 286, 287, 288, 290, 294, 297, 303, 325, 450, 627, 631, 731, 742, 975, 987], "fraction": [89, 372, 1264], "decompos": 89, "atomsrow": [90, 110, 111, 174, 212], "return": [90, 112, 113, 114, 116, 121, 129, 130, 135, 139, 140, 141, 142, 144, 145, 147, 155, 171, 172, 174, 178, 182, 183, 185, 197, 212, 226, 238, 290, 291, 326, 327, 328, 329, 348, 367, 368, 369, 370, 371, 383, 389, 400, 401, 422, 440, 443, 450, 512, 514, 627, 628, 631, 641, 650, 651, 660, 667, 671, 674, 675, 710, 716, 718, 720, 721, 724, 726, 730, 731, 734, 741, 742, 743, 748, 750, 752, 762, 763, 764, 766, 767, 769, 776, 778, 779, 780, 786, 787, 788, 789, 791, 796, 797, 798, 799, 800, 801, 802, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 816, 817, 818, 832, 833, 834, 835, 837, 838, 840, 842, 843, 867, 870, 875, 879, 894, 898, 900, 901, 925, 926, 928, 931, 946, 947, 994, 1001, 1007, 1010, 1011, 1012, 1041, 1054, 1055, 1058, 1074, 1075, 1076, 1092, 1095, 1096, 1100, 1101, 1117, 1126, 1150, 1163, 1164, 1176, 1180, 1189, 1190, 1191, 1195, 1197, 1222, 1224, 1231, 1247, 1251, 1258, 1264, 1266, 1276, 1360, 1371, 1378, 1379], "energy_kei": [91, 510], "count": [92, 396, 1370], "ref_energi": 92, "cli": [98, 99, 100, 101, 102, 103, 104, 105, 106, 501, 600, 923, 1341, 1370], "job_num": [98, 106], "append": [98, 797, 1007, 1231, 1266], "job": 98, "messag": [98, 731, 766, 767, 769, 773, 774, 786, 787, 788, 791, 796, 797, 798, 799, 800, 801, 805, 806, 807, 809, 810, 811, 812, 813, 816, 817, 818, 832, 833, 835, 837, 838, 850, 931, 1012, 1055, 1073, 1075, 1076, 1124, 1126, 1190, 1239, 1379], "git": [99, 103, 1375, 1379], "instal": [99, 380, 870, 1371, 1375], "extract": [100, 249], "hash": [100, 103, 186, 188], "content": [101, 113, 114, 399, 709, 720, 724, 731, 741, 742, 791, 898, 1007, 1032, 1050, 1122, 1123, 1124, 1125, 1201, 1276, 1378, 1379], "indent": [101, 120, 169, 731, 742, 834, 931, 937], "titl": [101, 175, 177, 225, 1361, 1368], "pad": 101, "home": [102, 103, 104, 105, 380, 671, 945, 1007, 1032, 1050], "configur": [102, 104, 399, 400, 424, 432, 433, 717, 718, 719, 720, 721, 723, 724, 725, 726, 731, 741, 742, 765, 766, 767, 769, 784, 806, 837, 873, 874, 875, 877, 878, 879, 897, 898, 931, 933, 938, 939, 993, 1003, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1029, 1031, 1032, 1033, 1034, 1035, 1036, 1038, 1040, 1041, 1043, 1044, 1045, 1047, 1049, 1050, 1051, 1052, 1054, 1055, 1073, 1075, 1076, 1122, 1123, 1124, 1132, 1133, 1134, 1135, 1137, 1138, 1139, 1141, 1142, 1143, 1145, 1146, 1147, 1149, 1150, 1151, 1153, 1154, 1155, 1157, 1158, 1159, 1160, 1162, 1163, 1164, 1166, 1167, 1168, 1169, 1171, 1172, 1173, 1175, 1176, 1177, 1179, 1180, 1181, 1183, 1184, 1185, 1187, 1188, 1189, 1190, 1191, 1193, 1194, 1195, 1196, 1198, 1199, 1200, 1201, 1231, 1233, 1234, 1235, 1236, 1237, 1238, 1239, 1240, 1241, 1242, 1370, 1371, 1375], "dir": [102, 104, 438, 448, 450, 757, 1231], "rev": 103, "hash1": 103, "hash2": 103, "construct": [104, 111, 112, 123, 183, 450, 674, 1258], "initi": [105, 121, 123, 144, 385, 596, 975, 987, 1231, 1251, 1266], "folder": [106, 112, 148, 180, 196, 197, 198, 202, 399, 400, 403, 406, 410, 418, 437, 532, 533], "not_recip": 106, "dry_run": 106, "skip_if_don": 106, "dont_rais": 106, "updat": [106, 158, 450, 661, 674, 1199, 1201, 1222, 1231, 1238, 1251, 1264, 1266, 1378, 1379], "must_exist": [106, 144], "implement": [107, 115, 116, 143, 147, 435, 450, 716, 726, 741, 748, 754, 837, 931, 933, 1007, 1233, 1239, 1378, 1379], "asrcommand": [107, 113], "relat": [107, 115, 144, 287, 674, 936, 1007, 1100, 1114], "decor": [107, 393, 394, 395, 396, 748, 749, 750, 751, 752, 753, 754, 755, 1367, 1370], "fix_old_fil": [109, 1370], "defin": [110, 130, 139, 203, 204, 278, 327, 383, 424, 663, 716, 718, 724, 726, 731, 733, 735, 748, 749, 766, 767, 769, 791, 797, 815, 879, 931, 945, 1007, 1010, 1012, 1055, 1073, 1075, 1076, 1100, 1124, 1128, 1190, 1223, 1224, 1229, 1239, 1262, 1371, 1375, 1378], "close": [110, 111, 893], "mimic": [110, 111, 893], "behaviour": [110, 116], "kvp": [111, 303, 336, 357], "instanc": [111, 112, 113, 116, 123, 128, 450, 453, 716, 725, 731, 741, 742, 754, 791, 792, 793, 794, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 837, 842, 843, 879, 928, 931, 1010, 1012, 1055, 1073, 1075, 1076, 1124, 1190, 1191, 1239, 1258], "kei": [111, 116, 121, 122, 131, 132, 136, 139, 166, 176, 177, 178, 183, 197, 223, 327, 328, 329, 371, 388, 389, 390, 601, 720, 726, 734, 768, 769, 880, 881, 882, 883, 884, 886, 887, 888, 889, 891, 928, 1041, 1120, 1370], "pair": [111, 388, 390, 837, 874, 931, 1378], "raw": [111, 383, 769], "associ": [111, 115, 1231, 1251, 1379], "stuctur": [111, 302], "toatom": 111, "contruct": 112, "collect": [112, 847, 927, 928, 1095], "output": [112, 502, 641, 663, 666, 667, 668, 726, 728, 729, 731, 736, 742, 763, 765, 766, 767, 769, 786, 787, 788, 791, 796, 798, 799, 800, 801, 802, 806, 807, 809, 810, 813, 816, 817, 831, 832, 833, 834, 835, 837, 838, 842, 871, 872, 879, 892, 894, 931, 975, 977, 979, 981, 983, 985, 987, 989, 991, 1007, 1010, 1012, 1029, 1032, 1036, 1047, 1050, 1053, 1054, 1055, 1056, 1057, 1058, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1121, 1124, 1126, 1190, 1231, 1239, 1370, 1371, 1375, 1379], "web": 113, "panel": [113, 114, 175], "evalu": [113, 294, 438, 862, 1258], "figur": [114, 172], "interest": 114, "dictencod": [115, 116], "resultencod": [115, 117, 118, 120, 127, 519, 522], "abc": [115, 117, 118, 120, 124, 127, 449, 450, 519, 522, 770, 771, 772, 1095, 1122, 1125, 1229, 1231], "htmlencod": [115, 116], "hackedasrresult": 115, "jsonencod": [115, 116], "objectdescript": [115, 116, 138, 140, 141, 142], "webpanelencod": [115, 519, 520, 522], "quantiti": 115, "bunch": 115, "encod": [115, 117, 118, 120, 124, 127, 937], "repres": [115, 129, 443, 444, 627, 716, 784, 801, 807, 983, 1222, 1258, 1264], "potenti": [115, 207, 288, 450, 717, 724, 742, 791, 819, 821, 825, 828, 837, 875, 879, 975, 977, 979, 981, 983, 985, 987, 989, 991, 1007, 1009, 1010, 1033, 1051, 1054, 1072, 1074, 1080, 1083, 1090, 1095, 1100, 1101, 1122, 1123, 1124, 1125, 1126, 1127, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1144, 1145, 1146, 1147, 1148, 1149, 1150, 1151, 1152, 1153, 1154, 1155, 1156, 1157, 1158, 1159, 1160, 1161, 1162, 1163, 1164, 1165, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1174, 1175, 1176, 1177, 1178, 1179, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 1194, 1195, 1196, 1197, 1198, 1199, 1202, 1203, 1204, 1205, 1206, 1207, 1208, 1209, 1210, 1211, 1212, 1213, 1214, 1215, 1216, 1217, 1218, 1219, 1222, 1231, 1237, 1238, 1241, 1243, 1244, 1245, 1246, 1254, 1263, 1264, 1266, 1271, 1274, 1335, 1370, 1371, 1375], "also": [115, 139, 175, 380, 385, 450, 641, 731, 742, 928, 931, 1006, 1012, 1055, 1073, 1075, 1076, 1124, 1190, 1222, 1239, 1266, 1378, 1379], "decod": [115, 117, 120, 124], "These": [115, 977, 979, 985, 991, 1006, 1194, 1315, 1378], "convert": [115, 123, 129, 144, 145, 147, 149, 155, 196, 389, 649, 750, 752, 763, 786, 787, 788, 791, 796, 797, 798, 799, 800, 801, 802, 805, 806, 807, 809, 810, 812, 813, 814, 816, 817, 832, 833, 834, 835, 837, 838, 843, 882, 888, 925, 1126, 1231, 1266], "dct_to_result": 115, "base": [116, 124, 294, 640, 715, 716, 720, 723, 726, 731, 735, 742, 743, 766, 791, 796, 797, 798, 811, 837, 874, 885, 888, 898, 928, 1101, 1196, 1198, 1232, 1244, 1258, 1375], "describ": [116, 667, 674, 675, 731, 742, 769, 791, 812, 837, 977, 979, 985, 991, 1007, 1010, 1011, 1012, 1029, 1047, 1054, 1055, 1074, 1117, 1189, 1191, 1201, 1220, 1223, 1224, 1266, 1378, 1379], "circumst": 116, "under": [116, 326], "were": [116, 203, 716, 1371, 1379], "respect": [116, 238, 772, 975, 987, 1258], "set": [116, 121, 139, 183, 242, 243, 244, 383, 385, 388, 400, 401, 424, 432, 438, 439, 444, 450, 515, 516, 532, 559, 596, 601, 703, 713, 716, 718, 720, 726, 729, 731, 734, 745, 766, 767, 768, 769, 777, 786, 787, 788, 789, 791, 797, 798, 799, 801, 802, 803, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 817, 818, 832, 835, 837, 838, 842, 843, 859, 874, 877, 878, 879, 898, 899, 928, 931, 932, 975, 977, 979, 981, 983, 985, 987, 989, 991, 1003, 1007, 1012, 1055, 1073, 1075, 1076, 1095, 1124, 1126, 1142, 1150, 1151, 1163, 1172, 1173, 1176, 1180, 1190, 1194, 1195, 1197, 1199, 1201, 1224, 1231, 1233, 1237, 1239, 1251, 1258, 1263, 1264, 1266, 1358, 1364, 1369, 1371, 1375, 1378], "access": [116, 671, 748, 750, 752, 786, 787, 788, 791, 832, 837, 879, 931, 1012, 1055, 1073, 1075, 1076, 1124, 1190, 1231, 1239, 1264, 1266, 1371], "directli": [116, 750, 752, 879, 1231, 1379], "present": [116, 139, 383, 723, 731, 745, 837, 931, 1007, 1073, 1201, 1231, 1232, 1251, 1263, 1264, 1267, 1357, 1379], "obtain": [116, 206, 450, 674, 720, 837, 931, 1072, 1266, 1375, 1378, 1379], "get_format": 116, "method": [116, 450, 660, 674, 716, 726, 734, 741, 742, 743, 747, 748, 750, 752, 753, 786, 788, 791, 796, 798, 799, 800, 801, 806, 807, 809, 810, 813, 816, 817, 832, 833, 835, 837, 838, 839, 879, 923, 928, 931, 959, 975, 977, 979, 981, 983, 985, 987, 989, 991, 1007, 1126, 1231, 1251, 1258, 1264, 1266, 1341, 1371, 1372, 1373, 1378, 1379], "inherit": [116, 930, 1224], "overwrit": 116, "appropri": [116, 627, 840, 848, 1100, 1231], "namespac": [116, 450, 473], "like": [116, 450, 532, 900, 901, 1231, 1251, 1371], "below": [116, 754, 1258], "prepare_result": 116, "fromdata": 116, "resourc": [116, 121, 668], "good": [116, 975, 977, 979, 981, 983, 985, 987, 989, 991, 1258], "other_result": 116, "print": [116, 127, 654, 716, 731, 741, 742, 743, 748, 749, 763, 766, 767, 769, 788, 791, 796, 798, 799, 800, 801, 806, 807, 809, 810, 813, 816, 817, 833, 834, 835, 837, 838, 975, 977, 979, 981, 983, 985, 987, 989, 991, 1007, 1054, 1126, 1189, 1231, 1258, 1316, 1370, 1371, 1379], "json": [116, 120, 157, 216, 380, 399, 409, 438, 515, 591], "object_id": [116, 123], "prev_vers": [116, 130, 520], "get_obj_id": 116, "from_format": 116, "input_data": 116, "format_a": 116, "specif": [116, 124, 202, 450, 716, 931, 1007, 1012, 1055, 1073, 1075, 1076, 1124, 1190, 1229, 1233, 1239, 1267, 1378, 1379], "get_object_desc": 116, "todict": [116, 121, 123, 128, 452, 1370], "fromdict": [116, 123], "dct": [116, 117, 123, 128, 129, 135, 140, 141, 142, 149, 155, 158, 159, 169, 226, 307, 343, 468, 1251], "self": [116, 554, 640, 641, 716, 720, 726, 731, 748, 753, 773, 774, 867, 879, 894, 898, 928, 991, 1010, 1201, 1231, 1266, 1379], "cl": [117, 120, 137, 139, 748, 750, 752, 753, 894, 1057, 1120, 1379], "_abc_impl": [117, 118, 120, 124, 127, 450, 522, 771, 772, 1125, 1231], "_abc": [117, 118, 120, 124, 127, 450, 522, 771, 772, 1125, 1231], "_abc_data": [117, 118, 120, 124, 127, 450, 522, 771, 772, 1125, 1231], "json_str": 120, "asr_nam": 121, "code_vers": 121, "param": [121, 144, 145, 389, 399, 438, 453, 515, 749, 875, 879, 1007, 1033, 1051, 1123, 1238, 1241, 1366, 1370], "accepted_kei": 121, "valid": [121, 390, 716, 720, 726, 731, 742, 743, 766, 767, 769, 786, 787, 788, 791, 796, 797, 798, 799, 800, 801, 805, 806, 807, 809, 810, 811, 812, 813, 816, 817, 818, 832, 833, 835, 837, 838, 876, 879, 898, 899, 902, 931, 1007, 1126, 1151, 1173, 1233, 1237, 1258, 1371], "code": [121, 656, 703, 834, 859, 965, 968, 1275, 1371, 1372, 1373, 1375, 1379], "_set": 121, "_get": [121, 720, 1230], "unknown": [122, 125, 126, 720, 742, 837, 879, 898, 1032, 1050, 1123, 1125, 1191, 1231, 1276], "descriptor": [123, 748, 871, 872], "id": [123, 898, 922, 928, 931, 1012, 1039, 1041, 1055, 1073, 1075, 1076, 1124, 1190, 1224, 1229, 1239], "eg": 123, "produc": [123, 372, 566, 591, 1100, 1371], "obj_to_id": 123, "keyword": [123, 450, 720, 734, 749, 795, 837, 898, 1057, 1058, 1231, 1371], "ie": [123, 137, 627], "callabl": [123, 721, 726, 796, 797, 798, 799, 800, 801, 802, 804, 805, 806, 807, 808, 810, 811, 812, 813, 814, 817, 818, 832, 833, 834, 835, 837, 838, 879, 931, 1012, 1055, 1073, 1075, 1076, 1092, 1124, 1126, 1190, 1231, 1239, 1268, 1269, 1369], "unset": 123, "extra": [123, 450, 791, 1266], "suppli": [123, 734, 931, 975, 987, 1006, 1057, 1231, 1251, 1379], "abstract": [124, 812], "formatted_result": 124, "basic": [127, 450, 626, 716, 732, 742, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 836, 898, 931, 1007, 1091, 1092, 1233, 1267, 1268, 1269, 1370, 1379], "simpli": [127, 1378], "recurs": [128, 158, 741], "find": [130, 202, 238, 305, 595, 663, 720, 723, 726, 743, 898, 928, 1231, 1251, 1266, 1316, 1371], "match": [130, 797, 832, 834, 835, 1258], "walk": 130, "search": [130, 385, 720, 989, 991, 1375, 1378], "fulfil": [130, 726], "unknownasrresultformat": 130, "found": [130, 1231, 1251], "attr_typ": 131, "document": [131, 674, 731, 742, 931, 975, 977, 979, 981, 983, 985, 987, 989, 991, 1010, 1054, 1134, 1139, 1143, 1147, 1151, 1155, 1160, 1164, 1168, 1173, 1177, 1181, 1185, 1188, 1189, 1191, 1194, 1231, 1371, 1377, 1379], "obj": [132, 134, 137, 367, 641, 1266], "asr_obj_id": 133, "hint": [134, 1032, 1050], "dataformat": 135, "approri": 135, "reader": [135, 892, 893, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1100, 1370, 1378, 1379], "return_typ": 136, "live": 137, "correspind": 137, "would": [137, 185, 741, 935, 1007, 1258], "object_descript": 138, "prepar": [139, 1258, 1358, 1371], "read": [139, 144, 145, 151, 157, 380, 389, 450, 523, 716, 723, 726, 728, 729, 731, 742, 766, 832, 834, 884, 889, 892, 894, 900, 901, 902, 931, 1007, 1010, 1012, 1032, 1050, 1055, 1072, 1073, 1075, 1076, 1093, 1100, 1122, 1124, 1125, 1150, 1163, 1164, 1176, 1180, 1189, 1190, 1194, 1195, 1197, 1199, 1201, 1231, 1233, 1239, 1243, 1244, 1245, 1270, 1271, 1274, 1375], "assign": [139, 726, 734, 743, 791, 837, 931, 1012, 1055, 1073, 1075, 1076, 1095, 1124, 1190, 1239, 1361], "ensur": [139, 726], "signatur": [139, 721, 749], "someth": [139, 151, 643, 644, 645, 646, 989, 1199, 1370], "fix": [140, 741, 742, 772, 832, 931, 975, 987, 1012, 1054, 1055, 1073, 1074, 1075, 1076, 1124, 1189, 1190, 1191, 1239, 1371], "hack": [140, 1251, 1266], "necessari": [140, 200, 450, 791, 975, 977, 979, 981, 983, 985, 987, 989, 991, 1201, 1266, 1379], "pars": [141, 142, 171, 185, 717, 720, 725, 726, 731, 735, 741, 742, 766, 767, 769, 773, 774, 784, 788, 791, 796, 798, 799, 800, 801, 806, 807, 809, 810, 813, 816, 817, 833, 835, 837, 838, 876, 887, 890, 894, 898, 900, 901, 925, 926, 931, 935, 1007, 1010, 1012, 1026, 1032, 1050, 1055, 1073, 1074, 1075, 1076, 1093, 1096, 1122, 1124, 1126, 1190, 1191, 1239, 1371, 1378], "style": [141, 142, 748], "old": [142, 523, 674, 749, 834, 899, 975, 987, 1222, 1275, 1379], "atomsfil": [143, 198], "click": [143, 144, 145, 146, 388, 389], "paramtyp": [143, 144, 145, 388, 389], "dictstr": 143, "custom": [143, 432, 720, 721, 742, 743, 786, 787, 789, 898, 975, 977, 979, 981, 983, 985, 987, 989, 991, 1010, 1011, 1054, 1074, 1122, 1124, 1125, 1126, 1189, 1231, 1240, 1241, 1378, 1379], "empti": [144, 148, 660, 661, 662, 663, 734, 741, 742, 743, 800, 806, 939, 941, 1003, 1011, 1035, 1040, 1044, 1054, 1074, 1191, 1231, 1234, 1236, 1371, 1379], "ignor": [144, 422, 450, 465, 725, 726, 741, 884, 889, 1007, 1054, 1231, 1370], "ctx": [144, 145, 389], "dictionary_str": 145, "take": [146, 227, 626, 749, 803, 809, 810, 812, 832, 975, 977, 979, 981, 983, 985, 987, 989, 991, 1006, 1258], "standard": [146, 371, 710, 724, 729, 792, 793, 794, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 848, 975, 977, 979, 981, 983, 985, 987, 989, 991, 1009, 1011, 1054, 1074, 1187, 1189, 1191, 1239, 1378], "sever": [147, 1371, 1379], "parse_dict_str": 147, "serial": [147, 155, 936, 937], "real": [147, 155, 385, 674, 726, 794, 795, 797, 804, 815, 844, 848, 879, 931, 975, 977, 979, 981, 983, 985, 987, 989, 991, 1091, 1092, 1222, 1226, 1258], "world": [151, 160, 450], "delet": [151, 160, 751, 754], "context": [151, 437, 871, 872, 1364], "manag": [151, 437, 871, 872, 1375, 1379], "write": [151, 198, 242, 450, 641, 717, 720, 725, 729, 731, 742, 766, 767, 769, 832, 837, 874, 879, 898, 931, 1007, 1012, 1055, 1073, 1075, 1076, 1124, 1126, 1142, 1150, 1163, 1164, 1176, 1180, 1189, 1190, 1195, 1197, 1199, 1201, 1231, 1239, 1243, 1244, 1246, 1275, 1371, 1375], "after": [151, 328, 371, 380, 720, 726, 731, 741, 749, 769, 788, 791, 796, 798, 799, 800, 801, 806, 807, 809, 810, 813, 816, 817, 832, 833, 835, 837, 838, 879, 898, 931, 989, 991, 1007, 1073, 1126, 1150, 1163, 1176, 1180, 1194, 1195, 1197, 1231, 1379], "abl": [151, 717, 725, 748, 1231, 1266], "txt": [151, 249, 450, 638, 640, 641, 1101], "wait": [151, 654, 894], "reload": 152, "defaultdct": 158, "defualtdct": 158, "safe": 160, "link": [160, 172, 549, 1229], "text": [161, 731, 791, 834, 1026, 1032, 1050, 1271, 1379], "databas": [164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 408, 436, 439, 531, 534, 535, 547, 1370], "rowwrapp": 164, "browser": [165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 1370], "header": [166, 175, 790, 791, 837, 1029, 1032, 1047, 1050, 1053, 1055, 1056, 1058, 1192], "digit": [166, 177, 178], "tabl": [166, 175, 176, 785, 790, 837, 1095, 1118], "char": [169, 782, 783, 813, 816, 817, 832], "caption": 172, "prefix": [174, 450, 731, 741, 742, 769, 786, 787, 788, 789, 791, 796, 797, 798, 799, 800, 801, 802, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 816, 817, 818, 831, 832, 834, 835, 837, 838, 931, 1012, 1055, 1073, 1075, 1076, 1092, 1124, 1126, 1190, 1239, 1268, 1269], "page": [174, 175, 1375], "exclud": [176, 450, 749, 1258], "miscellan": [176, 1378], "section": [176, 715, 716, 717, 718, 719, 720, 721, 723, 725, 726, 731, 733, 735, 741, 742, 743, 766, 767, 768, 769, 782, 816, 875, 879, 898, 899, 900, 901, 931, 938, 939, 975, 977, 979, 981, 983, 985, 987, 989, 991, 994, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1035, 1040, 1044, 1054, 1055, 1073, 1074, 1075, 1076, 1096, 1122, 1123, 1124, 1125, 1126, 1127, 1131, 1132, 1133, 1134, 1135, 1137, 1138, 1139, 1141, 1142, 1143, 1145, 1146, 1147, 1149, 1150, 1151, 1153, 1154, 1155, 1157, 1158, 1159, 1160, 1162, 1163, 1164, 1166, 1167, 1168, 1169, 1171, 1172, 1173, 1175, 1176, 1177, 1179, 1180, 1181, 1183, 1184, 1185, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 1194, 1195, 1196, 1197, 1198, 1199, 1201, 1231, 1232, 1234, 1235, 1236, 1237, 1239, 1240, 1242, 1246, 1316, 1370, 1371, 1378, 1379], "those": [176, 399], "kd": [177, 455], "tree": [180, 196, 198, 202, 399, 532, 716, 1378], "duplic": [182, 183, 184, 185, 439, 539, 540, 891, 1370, 1379], "value1": [182, 450, 1371], "value2": [182, 450, 1371], "all_row": 183, "duplicate_id": 183, "ops_and_kei": [183, 185], "uid_kei": 183, "filterstr": [183, 185], "uid": [183, 184, 197, 418], "iter": [183, 385, 424, 454, 663, 720, 872, 928, 989, 991, 1095, 1231, 1247, 1251, 1371, 1378, 1379], "filter": [183, 185], "compar": [183, 541, 545, 786, 788, 791, 832, 837, 839], "addit": [183, 450, 626, 723, 731, 741, 766, 767, 769, 786, 787, 788, 791, 796, 798, 799, 800, 801, 802, 806, 807, 809, 810, 813, 816, 817, 832, 833, 834, 835, 837, 838, 931, 1057, 1126, 1201, 1231, 1237, 1258, 1266], "complex": [183, 310, 346, 361, 418, 709, 711, 712, 713, 734, 785, 792, 837, 848, 864, 975, 987, 1258, 1371], "pick": 183, "lower": [183, 385, 720, 983, 1258, 1379], "AND": 183, "fewer": 183, "connect": 183, "filtered_uid": 183, "rmsd_by_id": [184, 194], "rmsd_tol": 184, "already_considered_uid": 184, "comma": [185, 926], "separ": [185, 450, 731, 732, 782, 795, 799, 800, 837, 1052, 1053, 1122, 1125, 1126, 1187, 1189, 1370, 1371, 1378], "uniqu": [186, 866, 891, 928, 1199, 1370], "material_fingerprint": [187, 188, 189, 1370], "rmsd": [192, 193, 194, 539, 540, 541, 544, 545, 1370], "atoms1": [192, 193, 543], "atoms2": [192, 193, 543, 1226], "adaptor": 192, "matcher": 192, "rowid": 194, "otherrowid": 194, "totre": [197, 198, 1370], "tree_structur": 197, "chunk": 198, "copi": [198, 659, 716, 718, 726, 734, 742, 837, 843, 866, 898, 931, 1039, 1222, 1226, 1228, 1231, 1249, 1251, 1255, 1257, 1261, 1263, 1264, 1266], "pattern": [198, 771, 782, 834, 1125, 1378], "update_tre": 198, "disk": [198, 380], "defect": [199, 206, 398, 399, 400, 401, 1370], "defectform": [200, 201, 202, 203, 204, 205, 206, 1370], "whether": [200, 726, 743, 791, 837, 879, 928, 931, 1010, 1012, 1055, 1073, 1075, 1076, 1124, 1190, 1231, 1239, 1258, 1266], "acess": [200, 1379], "foldernam": 202, "start": [202, 370, 726, 742, 791, 837, 928, 977, 979, 985, 989, 991, 1258, 1379], "your": [202, 444, 671, 797, 1379], "l1": 203, "l2": 203, "helper": [203, 204, 205, 708, 1270, 1271], "upper": [203, 983], "p1": 204, "p2": 204, "line1": 205, "line2": 205, "defect_dict": 206, "defectnam": 206, "gap": [206, 286, 287, 297, 303, 450, 556, 557, 564, 662, 1370], "xxx": 206, "me": [206, 226, 875], "versu": 206, "fermi": [206, 227, 238, 271, 286, 287, 288, 297, 303, 325, 326, 450, 627, 631, 975, 977, 979, 985, 987, 989, 991], "transit": 206, "state": [206, 214, 285, 287, 320, 321, 323, 324, 325, 326, 400, 610, 639, 641, 726, 777, 962, 975, 981, 982, 987, 1041, 1201, 1236, 1237, 1372, 1373], "deform": 207, "deformationpotenti": [208, 209, 1370], "dimension": [211, 212, 213, 239, 380, 979, 1370], "densiti": [214, 324, 325, 326, 358, 362, 633, 640, 641, 975, 977, 979, 981, 982, 983, 985, 987, 989, 991, 1041, 1080, 1083, 1090, 1101], "gw": [215, 297, 298, 299, 300, 1370], "mass": [218, 226, 227, 237, 245, 247, 383], "emass": [220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 1370], "masses_dict": 221, "bt": [221, 236, 245, 247, 1254], "calc": [221, 281, 283, 291, 292, 293, 294, 302, 307, 322, 326, 330, 368, 448, 471, 475, 478, 483, 627, 628, 630, 641], "erang": [221, 239, 247], "25": [221, 273, 418, 975, 987, 1118, 1120], "npoint": [221, 239, 367, 372], "91": [221, 1118, 1120], "nband": [221, 450, 483, 627], "spin_band_dict": 222, "values_dict": 225, "kpts_kv": [226, 228, 229, 241], "eps_k": [226, 229], "bandtyp": [226, 227, 232, 242, 243], "ndim": [226, 230, 231, 234], "nk": [226, 238, 241, 628, 977, 979], "shape": [226, 238, 241, 627, 628, 720, 769, 786, 832, 837, 1039, 1117, 1258], "k": [226, 286, 287, 297, 303, 366, 367, 368, 450, 975, 977, 979, 981, 983, 985, 987, 989, 991, 1120, 1258], "cartesian": [226, 977, 979, 985, 991], "unit": [226, 241, 287, 294, 315, 325, 421, 450, 797, 804, 815, 1258, 1266], "bohr": [226, 241], "eigenvalu": [226, 238, 336, 346, 418, 450, 477, 478, 627, 628, 631], "hartre": [226, 357, 975, 977, 979, 981, 983, 985, 987, 989, 991], "m_e": 226, "eigenvector": 226, "extremum": 226, "gpw": [227, 235, 242, 243, 294, 631, 638, 640, 641], "delta": [227, 238, 404], "extrema": [227, 238], "includ": [227, 238, 367, 731, 742, 834, 1266, 1371], "vb": [227, 238, 242], "cb": [227, 238, 242], "efermi": [227, 238, 286, 287, 326, 631], "em": [227, 1370], "fit": [227, 250, 809, 837, 1370], "c_p": 228, "thirdord": [228, 229], "xm": 231, "ym": 231, "zm": 231, "extremum_typ": 231, "k1_c": 232, "k2_c": 232, "dxx": 234, "dyi": 234, "dzz": 234, "dxy": 234, "dxz": 234, "dyz": 234, "fallback": [235, 242], "_erang": 237, "e_skn": [238, 628, 631], "nb": [238, 628, 1120], "vb_indic": 238, "cb_indic": 238, "aka": 238, "sbandex": 238, "cell_cv": [239, 247, 282, 312, 460], "9": [239, 797, 1117, 1118, 1120, 1258], "001": [239, 247, 977, 979], "simpl": [241, 512, 513, 575, 577, 769, 837, 933, 950, 965, 1372, 1373], "third": [241, 1222, 1258, 1378], "order": [241, 328, 329, 371, 383, 422, 741, 742, 743, 769, 931, 939, 941, 1003, 1011, 1012, 1035, 1040, 1044, 1054, 1055, 1073, 1074, 1075, 1076, 1124, 1164, 1176, 1180, 1189, 1190, 1191, 1195, 1197, 1234, 1236, 1239, 1258, 1264, 1378], "sc": [242, 399, 400, 1120], "kpt": [242, 450, 633, 652, 1370], "sphere": [242, 660, 661, 662, 663, 985, 1120, 1231, 1371], "around": [242, 370, 372, 975, 977, 979, 981, 983, 985, 987, 989, 991, 1378], "vbm": [242, 286, 287], "cbm": [242, 286, 287], "em_circle_vb_soc": 242, "em_circle_cb_soc": 242, "em_circle_vb_nosoc": 242, "em_circle_cb_nosoc": 242, "spinorbit": [242, 477, 478, 631], "we": [242, 383, 1258, 1379], "both": [242, 288, 294, 627, 631, 715, 725, 726, 734, 753, 784, 874, 931, 1012, 1055, 1073, 1075, 1076, 1124, 1190, 1224, 1239, 1258, 1378, 1379], "results_dict": 245, "exchang": [249, 380, 985, 989, 991, 1370], "dis_cut": 249, "a0": 249, "heisenberg": 249, "fere": [254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 1370], "pred": [254, 263, 267, 268, 270], "l": [254, 263, 267, 268, 269, 270, 328, 329, 366, 368, 451, 797, 975, 977, 979, 981, 983, 985, 987, 991, 1039, 1041, 1230], "newnam": 255, "reaction": [255, 258], "els_dmu": 255, "form1": 257, "form2": 257, "queri": [259, 266, 1379], "reactionsstr": [260, 264], "refsstr": [260, 265], "de": [261, 380, 671, 1229, 1258], "alpha": [261, 382, 385], "prod": [262, 266, 671], "j": [262, 413], "selector": [269, 769], "surfac": [271, 385, 1270, 1274, 1379], "fermisurfac": [272, 273, 274, 275, 276, 277, 1370], "annot": [273, 276], "angl": [273, 276, 370, 545, 650, 975, 983, 987], "eigs_nk": 275, "bzk_kv": 275, "s_nk": 275, "fontsiz": [276, 298, 304, 372], "svbm": 276, "100": [276, 663, 1118, 1258, 1264], "scbm": 276, "40": [276, 367, 372, 989, 991, 1118], "lwvbm": 276, "sf": 276, "dpi": [276, 1036, 1041, 1045, 1358, 1365, 1369], "200": [276, 977, 989, 991, 1118], "scalecb": 276, "bbox_to_anchor": 276, "formal": 278, "polar": [278, 315, 975, 977, 979, 985, 987, 991], "phase": [278, 450, 975, 987, 1378], "modern": 278, "theori": 278, "learn": 278, "about": [278, 674, 742, 748, 759, 933, 983, 1006, 1115, 1117, 1229, 1266, 1274, 1316, 1375], "our": [278, 1379], "explan": [278, 931, 1007], "particular": [278, 432, 837, 977, 979, 985, 991], "definit": [278, 716, 718, 719, 720, 721, 723, 724, 725, 726, 727, 728, 729, 731, 734, 735, 736, 741, 742, 743, 759, 765, 766, 769, 837, 874, 875, 877, 878, 879, 898, 901, 930, 931, 932, 939, 940, 941, 973, 975, 976, 977, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1007, 1008, 1009, 1011, 1012, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1049, 1050, 1051, 1054, 1055, 1057, 1072, 1073, 1074, 1075, 1076, 1096, 1123, 1124, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1144, 1145, 1146, 1147, 1148, 1149, 1150, 1151, 1152, 1153, 1154, 1155, 1156, 1157, 1158, 1159, 1160, 1161, 1162, 1163, 1164, 1165, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1174, 1175, 1176, 1177, 1178, 1179, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1190, 1191, 1194, 1195, 1196, 1198, 1199, 1201, 1231, 1233, 1234, 1235, 1236, 1238, 1239, 1240, 1241, 1242, 1256, 1257, 1264, 1370, 1371, 1378, 1379], "central": [278, 353, 975, 977, 979, 981, 983, 985, 987, 989, 991, 1224, 1226], "formalpolar": [280, 281, 282, 283, 284, 1370], "ep": 280, "dipole_v": 282, "gapsresult": [285, 287, 291, 1370], "vacuumlevelresult": [285, 287, 1370], "ground": [285, 287, 639, 641], "skn1": [286, 287], "skn2_dir": [286, 287], "vbm_dir": [286, 287], "cbm_dir": [286, 287], "k_cbm_dir_c": [286, 287], "skn1_dir": [286, 287], "k_vbm_c": [286, 287], "gap_dir": [286, 287], "skn2": [286, 287], "k_cbm_c": [286, 287], "k_vbm_dir_c": [286, 287], "valenc": [286, 287, 297, 303, 450, 1222, 1266], "maximum": [286, 287, 297, 303, 385, 401, 663, 975, 987, 991], "conduct": [286, 287, 297, 303, 450], "minimum": [286, 287, 297, 303, 336, 346, 663, 975, 987], "calenc": [286, 287], "evac": [287, 294], "workfunct": 287, "gap_dir_nosoc": 287, "etot": [287, 382, 1095], "gap_nosoc": 287, "stress": [287, 383, 385, 450, 1231], "vacuumlevel": [287, 1370], "evacdiff": [287, 288, 1370], "gaps_nosoc": 287, "dipz": [287, 288], "forc": [287, 346, 380, 383, 385, 450, 674, 742, 975, 977, 979, 981, 983, 985, 987, 989, 991, 1032, 1050, 1231], "re": [287, 369, 370, 372, 797, 802, 835, 1101, 1120, 1125], "angstrom": 287, "dim": [287, 418], "total": [287, 315, 321, 382, 450, 962, 975, 977, 979, 981, 983, 985, 987, 989, 991, 1041, 1095, 1371, 1372, 1373], "vacuum": [287, 288, 290, 663, 1222, 1225, 1226, 1228, 1264, 1274], "dipol": [287, 288, 290, 294, 450, 1231], "ang": [287, 288, 336, 346, 357, 361, 382, 421], "bandgap": [287, 450], "z_z": 288, "efermi_nosoc": 288, "evac1": 288, "v_z": 288, "evacmean": 288, "evac2": 288, "grid": [288, 310, 361, 633, 663, 975, 977, 979, 981, 983, 985, 987, 989, 991, 1361], "\u00e5": [288, 385, 401], "electrostat": [288, 450], "side": [288, 294], "slab": [288, 290], "top": [288, 372], "bottom": 288, "averag": [288, 975, 977, 979, 981, 983, 985, 987, 989, 991], "deriv": [290, 741, 762, 764, 845, 931, 1012, 1055, 1073, 1075, 1076, 1124, 1190, 1239, 1258], "moment": [290, 294, 321, 450, 596, 989, 991, 1139, 1158, 1159, 1160, 1161, 1222, 1263, 1264, 1370, 1371, 1379], "assum": [290, 294, 977, 979, 985, 991, 1258, 1379], "xy": [290, 383], "ibzkpt": 292, "k_index": 292, "Will": [294, 1007], "dft": [294, 296, 380, 382, 386], "janu": 294, "center": [294, 380, 650, 975, 977, 979, 981, 983, 985, 987, 989, 991, 1117, 1258], "dipcorrg": 294, "evacdiffmin": 294, "thresshold": 294, "predict": 294, "less": [294, 385, 975, 977, 979, 981, 983, 985, 987, 989, 991], "don": [294, 383, 450, 1231], "gridpoint": 294, "awai": 294, "vac": 294, "kcbm_nosoc": [297, 303], "cbm_gw": 297, "efermi_gw_soc": 297, "kvbm_nosoc": [297, 303], "gap_dir_gw_nosoc": 297, "kcbm": [297, 303], "gap_gw": 297, "efermi_gw_nosoc": 297, "gap_dir_gw": 297, "kvbm": [297, 303], "gap_gw_nosoc": 297, "vbm_gw_nosoc": 297, "cbm_gw_nosoc": 297, "vbm_gw": 297, "w": [297, 303, 325, 631, 813, 817, 1092, 1120, 1231], "o": [297, 303, 325, 631, 1117, 1120, 1239, 1258], "g0w0": 297, "hse": [302, 303, 304, 305, 307, 308, 1370], "delta_skn": 302, "lb": 302, "ub": 302, "interpol": [302, 336, 1255, 1258], "patch": [302, 450], "onto": [302, 327], "gap_hs": 303, "gap_dir_hs": 303, "gap_dir_hse_nosoc": 303, "cbm_hse": 303, "efermi_hse_nosoc": 303, "cbm_hse_nosoc": 303, "vbm_hse": 303, "efermi_hse_soc": 303, "gap_hse_nosoc": 303, "vbm_hse_nosoc": 303, "pack": [305, 534, 535, 633], "emptyband": [306, 640], "infrar": 309, "infraredpolariz": [310, 311, 312, 313, 1370], "alphay_lat": 310, "alphax_lat": 310, "alphax": 310, "alphaz_lat": 310, "alpha_wvv": 310, "omega_w": [310, 312], "alphai": 310, "alphaz": 310, "lattic": [310, 348, 401, 977, 979, 983, 985, 991, 1114, 1115, 1117, 1150, 1151, 1152, 1226], "frequenc": [310, 336, 346, 356, 357, 361], "omega": 310, "freqs_l": [312, 377], "modes_xl": 312, "m_a": 312, "eta": [312, 471, 977, 979, 985, 991], "magnet": [314, 315, 320, 321, 323, 450, 596, 635, 636, 975, 977, 979, 981, 983, 985, 987, 989, 991, 1194, 1370], "anisotropi": [314, 315], "magnetic_anisotropi": [315, 316, 317, 318, 319, 1370], "theta": [315, 318, 370, 450, 478, 630, 631, 975, 987, 1258], "e_x": 315, "phi": [315, 318, 450, 478, 630, 631, 975, 987], "de_zi": 315, "spin_axi": [315, 1370], "de_zx": 315, "e_z": 315, "e_i": 315, "easi": [315, 450, 1079, 1082, 1089, 1371], "radian": 315, "mev": 315, "magstat": [321, 322, 323, 1370], "nspin": [321, 580, 627], "magmom": [321, 383, 450, 649, 1231], "is_magnet": 321, "project": [324, 325, 326, 327, 365, 368, 372, 652, 975, 987], "pdo": [325, 326, 327, 328, 329, 331, 332, 333, 334, 1370], "dos_at_ef_soc": 325, "dos_at_ef_nosoc": 325, "pdos_nosoc": 325, "pdos_soc": 325, "nd": [326, 347, 368, 1120], "pdos_syl": 326, "defaultdict": [326, 726], "angular": [326, 327, 328, 329, 366, 368, 483, 674, 975, 987], "momentum": [326, 327, 328, 329, 366, 368, 975, 977, 979, 981, 983, 985, 987, 991], "z1": 327, "z2": 327, "zi": 327, "l_a": 327, "spd": 327, "dct_syl": [328, 329], "syl": 328, "f": [328, 329, 641, 749, 801, 837, 1039, 1120, 1126, 1360, 1379], "sort": [328, 371], "outdct_syl": 328, "ordereddict": [328, 329], "color_yl": 329, "singl": [330, 370, 671, 726, 743, 750, 752, 879, 1369, 1370, 1378], "lw": 331, "dynam": [335, 336, 346, 380, 383, 385, 418, 450], "phonon": [336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 374, 575, 1370], "q_qc": [336, 346], "modes_kl": 336, "omega_kl": [336, 346], "dynamic_stability_phonon": 336, "minhessianeig": [336, 346], "interp_freqs_kl": 336, "bandpath": [336, 346], "hessian": [336, 346, 385], "low": [336, 418], "momenta": [336, 346, 383], "consist": [336, 346, 640, 641, 833, 991, 1371, 1379], "supercel": [336, 338, 346, 348, 399, 401], "mode": [336, 346, 374, 450, 931, 975, 977, 979, 981, 983, 985, 987, 989, 991, 1007, 1012, 1055, 1073, 1075, 1076, 1124, 1173, 1190, 1231, 1239, 1361, 1371], "cin_nvv": 338, "phonopi": [346, 347, 348, 349, 350, 351, 352, 1370], "irr_l": 346, "u_klav": 346, "dynamic_stability_level": 346, "phi_anv": 346, "eigs_kl": 346, "matrix": [346, 383, 385, 396, 975, 977, 979, 981, 983, 985, 987, 989, 991], "constant": [346, 977, 979, 985, 991, 1142, 1150, 1163, 1176, 1180, 1195, 1197, 1378], "irreduc": [346, 450], "dist_max": 347, "n_c": 348, "piezoelectr": [353, 354], "tensor": [353, 354, 357, 361, 383, 417, 418], "piezoelectrictensor": [354, 355, 1370], "eps_vvv": 354, "eps_clamped_vvv": 354, "plasma": [356, 357, 583], "plasmafrequ": [357, 358, 359, 361, 1370], "plasmafrequency_i": 357, "plasmafreq_vv": [357, 361, 473], "plasmafrequency_x": 357, "optic": 360, "alphay_w": 361, "alphaz_w": 361, "alpha0x_w": 361, "alphax_w": 361, "alphax_el": 361, "alpha0y_w": 361, "alphay_el": 361, "alphaz_el": 361, "alpha0z_w": 361, "interband": 361, "local": [361, 671, 923, 1342], "field": [361, 797, 975, 977, 979, 981, 983, 985, 987, 989, 991], "fx": 363, "fy": 363, "fz": 363, "projected_bandstructur": [366, 367, 368, 369, 370, 371, 372, 373, 1370], "weight_skni": [366, 368], "yl_i": [366, 368, 371], "weight": [366, 368, 369, 372, 450, 977, 979, 985, 991], "projector": [366, 368], "bsp": 367, "sampl": [367, 975, 977, 979, 981, 983, 985, 987, 989, 991, 1258], "evenli": 367, "allwai": 367, "special": [367, 450, 453, 718, 729, 748, 790, 800, 813, 816, 817, 831, 885, 887, 975, 977, 979, 981, 983, 985, 987, 989, 991, 1008, 1053, 1056, 1079, 1082, 1089, 1192, 1378, 1379], "band_structur": 367, "bandstructureplot": 367, "chosenx_x": 367, "1d": [367, 1258], "np": [367, 369, 450, 710, 786, 787, 789, 791, 864, 928, 946, 975, 987, 1120, 1231, 1258, 1379], "chosen": 367, "k_x": 367, "weight_xi": 369, "scale_mark": 369, "36": [369, 370, 372, 418, 1118], "64": [369, 370, 372, 418, 1118, 1120, 1379], "pie": [369, 370, 372], "marker": [369, 370, 372, 432], "sum": [369, 450, 977, 979, 985, 991, 1036, 1045, 1251], "markers": [369, 372], "get_pie_slic": [369, 1370], "pie_xi": 369, "mpl": 369, "theta0": 370, "slice": [370, 631, 769, 1036, 1041, 1045, 1224], "cover": 370, "resolut": [370, 372], "circumfer": [370, 372], "matplotlib": [370, 1095, 1258, 1361, 1363], "pyplot": [370, 1258, 1361], "scatter": [370, 975, 977, 979, 981, 983, 985, 987, 989, 991], "yl": 371, "get_orbital_ldo": [371, 1370], "c_i": [371, 1117], "chart": 372, "per": [372, 385, 450, 1120, 1231], "raman": [376, 377, 379, 1370], "freq_err": 377, "spgatom": [380, 1370], "mybfg": [380, 1370], "optim": [380, 385], "bfg": [380, 385], "iocontext": [380, 385], "By": [380, 450, 726, 731, 766, 769, 786, 788, 791, 797, 801, 802, 806, 807, 808, 809, 810, 813, 814, 816, 817, 818, 835, 837, 931, 977, 979, 985, 991, 1073, 1126, 1264], "unrelax": [380, 399], "save": [380, 385, 396, 716, 720, 742, 837, 877, 879, 894, 898, 1007, 1010, 1231, 1233, 1237, 1238, 1358, 1365, 1367, 1369, 1378, 1379], "final": [380, 667, 975, 987], "note": [380, 648, 726, 931, 975, 987, 1012, 1055, 1073, 1075, 1076, 1124, 1190, 1239, 1258, 1375, 1378], "worthi": 380, "handl": [380, 450, 542, 600, 647, 665, 667, 720, 726, 748, 777, 898, 899, 1231, 1270, 1341, 1371], "tri": [380, 1032, 1050], "contin": 380, "step": [380, 385, 975, 987, 1378], "broken": [380, 450, 594], "vdw": 380, "dftd3": [380, 386], "mkdir": 380, "cd": [380, 797, 1120], "wget": 380, "chemi": 380, "uni": [380, 1229], "bonn": 380, "pctc": 380, "mulliken": 380, "softwar": 380, "d3": 380, "tgz": 380, "tar": 380, "zxf": 380, "echo": 380, "export": [380, 931, 1012, 1055, 1073, 1075, 1076, 1124, 1190, 1239, 1379], "ase_dftd3_command": 380, "bashrc": 380, "diamond": 380, "nod3": 380, "lda": [380, 989, 991], "correl": [380, 989, 991], "xc": [380, 453, 489, 490, 797], "edft": 382, "imag": [382, 1358], "gamma": 382, "spo": 382, "taken": [382, 627, 754, 769, 975, 977, 979, 981, 983, 985, 987, 989, 991, 1224], "deg": 382, "tag": [383, 928, 937], "scaled_posit": 383, "celldisp": 383, "constraint": [383, 723, 726, 1201], "info": [383, 674, 716, 726, 731, 742, 743, 766, 767, 769, 879, 931, 941, 1003, 1007, 1011, 1012, 1055, 1074, 1124, 1175, 1177, 1231, 1236, 1239, 1266, 1315, 1316, 1317, 1318, 1370, 1379], "veloc": 383, "from_atom": [383, 674, 1201, 1224, 1266, 1379], "set_symmetri": 383, "translat": [383, 879, 975, 987, 1117, 1118], "get_stress": 383, "voigt": 383, "six": [383, 1231], "independ": [383, 1150, 1163, 1176, 1180, 1195, 1197, 1258], "compon": [383, 418], "symmetr": [383, 416, 663, 1224, 1266, 1370], "tradit": 383, "xx": [383, 671], "yy": 383, "zz": 383, "yz": 383, "xz": 383, "3x3": [383, 651], "ideal": [383, 662], "ga": [383, 1120], "contribut": [383, 1375], "include_ideal_ga": 383, "get_forc": 383, "ask": 383, "attach": [383, 450, 1007], "appli": [383, 515, 720, 748, 786, 787, 788, 791, 796, 798, 799, 800, 801, 802, 806, 807, 809, 810, 813, 816, 817, 832, 833, 834, 835, 837, 838, 842, 843, 977, 979, 985, 991, 1126, 1245, 1258], "apply_constraint": 383, "molecular": [383, 975, 977, 979, 981, 983, 985, 987, 989, 991], "holonom": 383, "rigid": 383, "linear": [383, 975, 983, 987, 1258], "triatom": 383, "molecul": 383, "redistribut": 383, "tripl": 383, "fmax": [384, 386], "01": [384, 386, 538, 650, 763, 981], "smax": 384, "002": 384, "smask": [384, 386], "restart": [385, 450, 1231], "logfil": 385, "trajectori": 385, "append_trajectori": 385, "maxstep": 385, "pickl": 385, "store": [385, 726, 754, 873, 876, 879, 1007, 1142, 1150, 1154, 1163, 1172, 1176, 1180, 1184, 1195, 1197, 1199, 1245, 1266, 1358, 1369, 1379], "movement": 385, "stdout": [385, 837, 872, 894, 895, 896, 1007, 1085, 1093, 1098, 1231], "move": [385, 1371], "boolean": [385, 731, 766, 767, 769, 796, 806, 822, 1231], "caus": 385, "rank": [385, 450, 464], "guess": [385, 842, 843, 931, 989, 991, 1012, 1032, 1050, 1055, 1222], "curvatur": [385, 450], "conserv": 385, "70": [385, 1118], "converg": [385, 631, 977, 979, 985, 991, 1080, 1083, 1090, 1095, 1101, 1378, 1379], "might": [385, 450, 977, 979, 985, 991], "instabl": 385, "log": 385, "dummi": [385, 873, 874, 878, 879, 1231, 1370, 1378], "placehold": [385, 874, 1230, 1231, 1379], "logger": 385, "tmp_atoms_fil": 386, "inf": 386, "fixcel": 386, "allow_symmetry_break": 386, "enforce_symmetri": 386, "keyvaluepair": [388, 1370], "setinfo": [389, 390, 598, 1370], "protect": [390, 601], "setup": [392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 449, 450, 1370], "similar": [392, 396], "substitut": [393, 396, 648, 991], "threshold": [394, 395, 663, 989, 991, 1266], "prototyp": [395, 421], "p_ab": 395, "08": 395, "s_ab": 396, "give": [396, 631, 812, 837, 975, 977, 979, 981, 983, 985, 987, 989, 991], "icsd": 396, "normal": [396, 753, 928, 1117, 1251], "probabl": [396, 1100, 1251, 1263, 1264], "succes": 396, "structure_dict": [399, 400], "chargest": 399, "intrins": [399, 400], "vacanc": [399, 400], "max_lattic": [399, 400, 401], "is_2d": [399, 400, 401], "everi": [399, 654], "further": [399, 1095, 1100, 1231, 1246, 1375, 1379], "charge_st": 400, "up": [400, 401, 439, 441, 445, 450, 532, 741, 742, 748, 810, 832, 834, 835, 975, 977, 979, 981, 983, 985, 987, 989, 991, 1058, 1122, 1125, 1254, 1275, 1378], "anti": 400, "extrins": 400, "primit": [400, 401, 662, 663, 673, 975, 987, 1117, 1224, 1379], "incorpor": 400, "built": [400, 1378], "depend": [401, 667, 726, 975, 977, 979, 983, 985, 987, 991, 1007, 1258, 1266, 1371], "length": [401, 732, 765, 786, 787, 789, 791, 793, 794, 816, 926, 928, 975, 977, 979, 985, 987, 989, 991, 1053, 1056, 1192, 1258, 1266, 1370], "3d": [401, 975, 977, 979, 981, 983, 985, 987, 989, 991, 1224, 1226, 1361], "structure_sc": 401, "ia": [404, 405, 406], "iv": [404, 405, 406, 797], "sign": [404, 405, 406, 808, 824, 837], "atomic_index": 406, "cartesian_index": 406, "displacement_sign": 406, "strain_perc": [413, 414], "clamp": [413, 1258], "copyparam": 414, "clamp_atom": 414, "toler": [416, 648, 650, 674, 989, 991], "angle_toler": [416, 650], "return_dataset": 416, "stiff": [418, 419, 1370], "speed_of_sound_i": 418, "c_56": 418, "c_16": 418, "c_26": 418, "c_34": 418, "c_51": 418, "c_22": 418, "c_15": 418, "c_66": 418, "c_42": 418, "c_21": 418, "c_62": 418, "c_53": 418, "c_63": 418, "c_13": 418, "c_61": 418, "c_36": 418, "stiffness_tensor": 418, "c_65": 418, "c_52": 418, "c_35": 418, "c_64": 418, "c_14": 418, "c_44": 418, "__links__": 418, "c_24": 418, "speed_of_sound_x": 418, "c_46": 418, "c_41": 418, "c_55": 418, "c_33": 418, "c_32": 418, "c_43": 418, "c_45": 418, "c_31": 418, "c_25": 418, "c_23": 418, "dynamic_stability_stiff": 418, "c_12": 418, "c_54": 418, "c_11": 418, "11": [418, 671, 1117, 1118, 1371], "13": [418, 1117, 1118, 1120, 1379], "14": [418, 762, 763, 764, 791, 1117, 1118, 1120], "15": [418, 1118, 1363], "16": [418, 735, 791, 1118], "21": [418, 1118], "22": [418, 791, 1118, 1120], "23": [418, 1118, 1120], "24": [418, 663, 1118], "26": [418, 1118], "31": [418, 1118, 1120], "32": [418, 985, 989, 991, 1118, 1120], "33": [418, 1118], "34": [418, 1118], "35": [418, 1118], "41": [418, 1118], "42": [418, 538, 1118], "43": [418, 1118], "44": [418, 1118, 1120], "45": [418, 975, 987, 1118, 1120], "46": [418, 1118, 1120], "51": [418, 1118], "52": [418, 1118, 1120], "53": [418, 1118], "54": [418, 1118], "55": [418, 1118, 1120], "56": [418, 1118, 1120], "61": [418, 1118, 1120], "62": [418, 1118, 1120], "63": [418, 1118, 1120], "65": [418, 1118, 1120], "66": [418, 1118, 1120], "speed": [418, 748, 977, 979, 985, 991], "sound": 418, "inform": [420, 674, 731, 742, 748, 759, 766, 767, 769, 837, 931, 983, 1115, 1117, 1155, 1222, 1229, 1258, 1266, 1274, 1316, 1379], "structureinfo": [421, 422, 423, 1370], "spgnum": 421, "spacegroup": [421, 674, 1266], "has_inversion_symmetri": 421, "stoichiometri": [421, 422], "pointgroup": 421, "spglib_dataset": [421, 1370], "crystal_prototyp": 421, "cell_area": 421, "area": 421, "invers": [421, 650, 651], "space": [421, 731, 742, 834, 931, 975, 977, 979, 981, 983, 985, 987, 991, 1076, 1191], "group": [421, 651, 671, 720, 791, 797, 898], "crystal": [421, 674, 975, 987], "spglib": [421, 649, 650, 674, 675, 676, 1266, 1370], "dataset": [421, 650, 671, 674, 676, 975, 977, 979, 981, 983, 985, 987, 989, 991], "reduc": 422, "cu2s4": 422, "cus2": 422, "appear": [422, 726, 736, 741, 742, 743, 768, 784, 806, 939, 941, 1003, 1011, 1029, 1035, 1040, 1044, 1047, 1053, 1054, 1056, 1074, 1191, 1192, 1234, 1236], "ab2": 422, "rather": 422, "mos2": 422, "sub": [424, 445, 881, 882, 883, 888, 923], "notabl": 424, "conftest": [424, 433, 434, 1370], "py": [424, 671, 938, 945, 1007, 1032, 1050, 1379], "containt": 424, "pytest": [424, 432, 433, 435, 450, 1371], "fixtur": [424, 432, 436, 437, 438, 439, 440, 441, 442, 443, 1370], "over": [424, 720], "test_borncharg": [427, 1370], "asr_tmpdir_w_param": [427, 429, 492, 494, 495, 497, 499, 504, 508, 510, 513, 548, 556, 557, 561, 562, 564, 565, 568, 570, 572, 573, 575, 577, 580, 583, 585, 589, 591, 593, 594, 595, 596, 603, 605, 609, 610, 612, 614, 616, 617, 619, 621, 622], "test_piezoelectrictensor": [429, 579, 581, 1370], "test_relax": [431, 591, 592, 593, 594, 595, 596, 597, 1370], "asr_tmpdir": [431, 438, 439, 506, 514, 515, 516, 534, 535, 536, 542, 547, 551, 552, 566, 587, 589, 592, 597, 599, 600, 601], "global": [432, 726, 745, 1143], "config": [433, 768, 939, 940, 941, 942, 943, 944, 945, 946, 947, 1007, 1231, 1308, 1309, 1310, 1370], "session": 434, "tmp_path_factori": 437, "temp": [437, 438, 1379], "temporari": [437, 1231, 1371], "filesystem": 437, "fast": 438, "webcont": 440, "monkeypatch": [441, 442, 594, 595], "mock": [441, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 714, 869, 1370], "gpaw": [441, 445, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 566, 641, 648], "std": 443, "variabl": [444, 450, 559, 731, 766, 767, 769, 806, 837, 975, 987, 991, 1007, 1199, 1231, 1258, 1371, 1379], "std_test_materi": 444, "minim": [444, 786, 787, 789, 797, 802, 804, 805, 808, 811, 812, 814, 815, 818, 975, 977, 979, 981, 983, 985, 987, 989, 991, 1092, 1268, 1269], "all_test_materi": 444, "far": [445, 786, 788, 791, 832, 839, 1371], "berryphas": 448, "asrcalcul": 449, "basecalcul": [449, 450, 1229, 1231], "getpropertiesmixin": [449, 450, 1229, 1231], "doscalcul": 449, "occup": [449, 450, 467, 468, 675, 959, 1163, 1164, 1165, 1263, 1264, 1266, 1370, 1371, 1372, 1373, 1379], "wavefunct": [449, 450, 1095, 1379], "ignore_bad_restart_fil": 450, "design": 450, "look": 450, "monkei": 450, "ident": [450, 1226, 1258, 1266], "privat": 450, "prefac": 450, "underscor": 450, "easili": 450, "mocker": [450, 494, 497, 499, 506, 556, 557, 564, 568, 570, 580, 596, 622], "get_fermi_level": 450, "_get_fermi_level": 450, "furthermor": 450, "_get_band_gap": 450, "zero": [450, 763, 791, 818, 928, 1194, 1222, 1224, 1231, 1251, 1258], "manipul": 450, "deprec": 450, "pass": [450, 720, 723, 726, 788, 791, 796, 798, 799, 800, 801, 806, 807, 809, 810, 813, 816, 817, 832, 833, 834, 835, 837, 838, 842, 894, 898, 931, 1095, 1126, 1150, 1163, 1176, 1180, 1195, 1197, 1201, 1231, 1258, 1266, 1371, 1378, 1379], "stop": [450, 991], "futur": [450, 648, 1244], "purepath": 450, "perform": [450, 641, 1231, 1378], "Not": [450, 734, 837, 1276], "instead": [450, 797, 837, 977, 979, 985, 989, 991, 1231, 1266, 1371], "implemented_properti": [450, 1231], "fermi_level": [450, 451, 477, 556, 557, 564], "berry_phas": 450, "default_paramet": [450, 1007], "gridsiz": 450, "wf": 450, "broadcast": 450, "barrier": 450, "new_commun": 450, "world_sum": 450, "stead": 450, "amend": 450, "key1": 450, "key2": 450, "been": [450, 674, 720, 742, 876, 898, 1150, 1163, 1176, 1180, 1195, 1197, 1231, 1371, 1379], "subclass": [450, 837, 894, 931], "must": [450, 1258, 1379], "chaneg": 450, "decid": 450, "reset": [450, 720, 898, 1123, 1197, 1201, 1231, 1263, 1264, 1379], "harmless": 450, "verbos": [450, 663, 716, 731, 742, 769, 931, 975, 977, 979, 981, 983, 985, 987, 989, 991, 1379], "spos_ac": 450, "_get_scaled_posit": 450, "_get_setup": 450, "_get_setup_fingerprint": 450, "element_numb": 450, "fingerprint": 450, "_get_setup_symbol": 450, "_get_setup_nval": 450, "control": [450, 716, 727, 734, 735, 975, 977, 979, 981, 983, 985, 987, 989, 991, 1001, 1231, 1258, 1371], "simplenamespac": [450, 650], "resembl": 450, "_get_berry_phas": 450, "channel": [450, 627], "_get_dipole_mo": 450, "cach": [450, 751, 752, 754, 797, 1246, 1247, 1254], "formi": 450, "_get_forc": 450, "_get_magmom": 450, "_get_potential_energi": 450, "_get_stress": 450, "get_all_eigenvalu": 450, "get_number_of_valence_electron": 450, "get_eigenvalu": 450, "get_k_point_weight": 450, "get_ibz_k_point": 450, "get_bz_k_point": 450, "get_bz_to_ibz_map": 450, "bz": [450, 975, 977, 979, 981, 983, 985, 987, 989, 991], "ibz": 450, "map": [450, 674, 710, 711, 712, 713, 847, 848, 928, 1117, 1123, 1222, 1251, 1263, 1264], "get_number_of_spin": 450, "get_number_of_band": 450, "get_number_of_conduction_electron": 450, "get_number_of_electron": 450, "dope": [450, 959, 1372, 1373], "due": [450, 983, 1371], "get_electrostatic_potenti": 450, "diagonalize_full_hamiltonian": 450, "ecut": 450, "diagon": 450, "hamiltonian": 450, "shift_fermi_level": 450, "fixed_dens": 450, "raw_do": 451, "width": [451, 630, 937], "raw_pdo": 451, "shorthand": 453, "nvalenc": [454, 455], "id_a": [454, 648], "griddescriptor": 455, "kpointdescriptor": 455, "banddescriptor": 455, "gd": [455, 1120], "bd": 455, "hybrid": 457, "kpt_descriptor": [459, 460], "bzk_kc": 460, "fermidirac": 466, "respons": [470, 471, 472, 473, 474, 475], "get_polariz": [471, 473], "w_w": 471, "q_c": 471, "pol_bs": 471, "csv": 471, "readfil": 471, "write_eig": 471, "eig": 471, "dat": 471, "dielectricfunct": 472, "df": 473, "chi0": 473, "get_frequ": 473, "e_km": 477, "s_kvm": 477, "spin_project": 477, "calculate_band_energi": 477, "n1": [478, 1258, 1362, 1363], "n2": [478, 1258, 1362, 1363], "occcalc": 478, "analyz": [480, 1379], "name1": [485, 1371], "name2": [485, 1371], "enumer": [487, 1251], "lst": 487, "test_bandstructur": [492, 1370], "mockgpaw": [492, 494, 497, 499, 506, 510, 556, 557, 561, 562, 564, 565, 568, 570, 572, 575, 577, 580, 583, 585, 587, 591, 596, 603, 616, 622], "test_materi": [492, 494, 497, 499, 541, 544, 545, 551, 552, 556, 557, 561, 564, 568, 570, 572, 575, 580, 583, 585, 587, 589, 591, 596, 605, 606, 607, 616, 622], "get_webcont": [492, 494, 495, 499, 510, 564, 568, 570, 572, 575, 577, 580, 583, 585, 587, 589, 621, 622], "test_berri": [495, 1370], "test_cli": [501, 502, 503, 504, 505, 506, 507, 508, 1370], "hashish": 502, "metal": 510, "test_cor": [512, 514, 515, 516, 1370], "get_default": 514, "correctli": [515, 516, 539, 540, 549, 596, 599, 600, 1258], "overridden": 516, "test_core_materi": [518, 1370], "myresult": 519, "myresultver0": [519, 520], "mywebpanel": 519, "test_core_result": [520, 521, 522, 523, 524, 525, 526, 1370], "alia": [520, 742, 743, 766, 768, 787, 796, 797, 798, 801, 802, 804, 805, 806, 808, 811, 814, 835, 837, 838, 931, 939, 1010, 1011, 1035, 1040, 1044, 1054, 1074, 1079, 1082, 1086, 1089, 1094, 1134, 1136, 1139, 1140, 1143, 1144, 1147, 1148, 1151, 1152, 1154, 1155, 1156, 1160, 1161, 1164, 1165, 1168, 1170, 1172, 1173, 1174, 1177, 1178, 1181, 1182, 1184, 1185, 1186, 1188, 1189, 1191, 1236, 1239, 1268, 1269], "capsi": [526, 594, 595], "duplicates_test_db": [528, 529, 530, 539, 540], "test_database_dupl": [529, 530, 1370], "from_tre": 531, "test_database_fromtre": [532, 533, 534, 535, 536, 1370], "folder_tre": [534, 535, 536], "sure": [534, 535], "unpack": [534, 535, 741, 742, 879], "faithfulli": [534, 535], "njob": 535, "test_database_rmsd": [538, 539, 540, 541, 542, 543, 544, 545, 1370], "seed": 538, "identifi": [539, 540, 742, 791, 809, 837, 928, 1073, 1074, 1251], "atom_index": 541, "get_rmsd": 542, "explicit": [543, 716], "previous": [543, 720, 1007, 1258, 1266, 1371], "pose": 543, "rattl": 544, "finit": [544, 983, 1258], "test_database_totre": [547, 549, 1370], "form": [547, 736, 786, 787, 788, 791, 797, 802, 805, 809, 812, 814, 832, 834, 837, 838, 840, 1075, 1076, 1200, 1201, 1378, 1379], "make_test_db": 549, "hard": [549, 935, 1266], "reproduc": 549, "test_dimension": [552, 1370], "test_emass": [554, 555, 556, 557, 1370], "vbmass": [555, 556, 557], "cbmass": [555, 556, 557], "test_fixtur": [559, 1370], "test_formalpolar": [562, 1370], "test_g": [565, 566, 1370], "groundstat": 566, "test_pdo": [573, 1370], "phononpi": 577, "inv_cell_vc": 579, "matrix_cvv": 581, "pbc_c": 581, "freuquenc": 583, "test_projected_bandstructur": [587, 1370], "actual": [591, 786, 787, 788, 791, 800, 801, 802, 807, 816, 832, 833, 834, 837, 928, 1057, 1231, 1378, 1379], "higher": [595, 975, 977, 979, 981, 983, 985, 987, 989, 991], "initial_magmom": [596, 1231], "set_magmom": 596, "final_magmom": 596, "test_setinfo": [599, 600, 601, 1370], "overwritten": 599, "arbitrarili": 601, "test_setup_decor": [603, 1370], "test_setup_displac": [606, 607, 1370], "inputatom": [609, 610, 619], "test_setup_magnet": [610, 1370], "test_setup_materi": [612, 1370], "test_setup_scanparam": [614, 1370], "test_setup_strain": [617, 1370], "test_stiff": [621, 622, 1370], "contan": 626, "essenti": 626, "calculator_util": [627, 628, 1370], "nelectron": 627, "fill": [627, 662, 663, 1228, 1359], "nkpoint": 627, "eps_skn": 627, "gpw2eig": [630, 1370], "return_spin": [630, 631], "symmetry_toler": [630, 631], "07": [630, 631, 648, 650], "els": [631, 703, 859], "conta": 631, "refineg": [638, 639, 640, 1370], "selfc": [638, 639, 641], "specifi": [638, 639, 641, 731, 742, 791, 797, 804, 975, 977, 979, 981, 983, 985, 987, 989, 991, 1007, 1231, 1258, 1379], "refin": [639, 641], "cycl": [641, 989, 991, 1371, 1379], "refinedgs_": 641, "parstr": 641, "anoth": [641, 726, 729, 731, 733, 743, 748, 766, 767, 769, 791, 928, 1142, 1150, 1163, 1176, 1180, 1195, 1197, 1246], "written": [641, 720, 731, 742, 766, 767, 769, 879, 884, 889, 898, 931, 1012, 1054, 1055, 1073, 1075, 1076, 1124, 1189, 1190, 1231, 1239, 1371, 1375, 1378], "templat": [642, 727, 734, 735, 1231, 1370, 1379], "atoms2symmetri": 648, "has_invers": 650, "rotations_n": 651, "matric": 651, "op_scc": 652, "s_vm": 652, "restrict": [652, 985, 1041], "purpos": [653, 741, 977, 979, 985, 991, 1270], "wrapper": [656, 673], "physic": [656, 1115, 1116, 1117, 1118, 1119, 1120, 1370], "librari": [656, 1222], "emptyspheresresult": [657, 1370], "radii": [658, 661, 663, 975, 977, 979, 981, 983, 985, 987, 989, 991, 1119, 1120, 1371], "centr": 660, "round_zero": 661, "shphere": 661, "es_find": [663, 1370, 1371], "overlap_matrix": 663, "18": [663, 1118, 1258], "radii_ratios_map": 663, "max_es_overlap": 663, "adjust_overlap": 663, "28": [663, 1118, 1120], "min_es_radiu": 663, "max_es_radiu": 663, "symmetrize_threshold": 663, "7": [663, 926, 979, 1117, 1118, 1120, 1229, 1359, 1375], "max_iter": 663, "48": [663, 1118], "comput": [663, 673, 726, 750, 754, 766, 769, 928, 931, 975, 977, 979, 981, 983, 985, 987, 989, 991, 1080, 1083, 1090, 1095, 1175, 1220, 1239, 1251, 1258, 1266, 1375], "coverag": 663, "pseudoatom": [663, 1225, 1226, 1228, 1264, 1371], "extend": [663, 931, 1266], "ratio": 663, "dimensionless": 663, "matter": 663, "walu": 663, "winger": [663, 1119, 1120], "seitz": [663, 1119, 1120], "supplement": 663, "max": [663, 797, 802, 804, 805, 808, 811, 812, 814, 815, 818, 834, 1092, 1268, 1269], "overlap": 663, "radiu": [663, 975, 977, 979, 981, 983, 985, 987, 989, 991, 1120], "shpere": 663, "symetrize_threshold": 663, "algorithm": [663, 989, 991], "externalentri": 665, "nomadarch": [665, 668], "nomadentri": [665, 667], "archiv": [665, 667, 668], "upload": [665, 667, 671], "nomad": [666, 667, 668, 669, 670, 671, 672, 1320, 1321, 1322, 1323, 1324, 1325, 1326, 1327, 1328, 1370], "zip": [667, 671], "task": [667, 668, 717, 721, 724, 731, 759, 766, 767, 769, 875, 879, 946, 973, 974, 975, 976, 977, 978, 979, 980, 981, 983, 985, 986, 987, 989, 990, 991, 992, 993, 994, 996, 998, 999, 1000, 1002, 1006, 1007, 1010, 1011, 1012, 1033, 1051, 1077, 1079, 1082, 1089, 1093, 1100, 1101, 1123, 1230, 1231, 1238, 1241, 1315, 1316, 1371, 1375, 1378], "dependend": 667, "autodetect": [667, 791, 1231], "scf": [667, 950, 956, 962, 965, 968, 974, 989, 992, 1007, 1080, 1083, 1090, 1092, 1093, 1094, 1095, 1096, 1175, 1177, 1231, 1316, 1370, 1371, 1372, 1373, 1378, 1379], "workflow": [667, 1370], "add_symlink": 667, "frm": 667, "_add_entri": 667, "add_entri": 667, "taskresult": [667, 668, 1078, 1080, 1081, 1083, 1084, 1087, 1088, 1090, 1091, 1095, 1099, 1100, 1370], "foreign": 667, "alreadi": [667, 748, 775, 876, 928, 1266, 1379], "detect": [667, 1379], "No": [667, 1054], "resolve_auto_depend": 667, "uniq": [667, 1266], "yaml": [667, 937, 1370], "depends_on": [668, 1164, 1188, 1189], "task_nam": [668, 1007, 1101], "_resourc": 668, "nomadapi": 670, "talk": 670, "slightli": [670, 674, 977, 979, 985, 991], "modifi": [670, 727, 736, 742, 749, 932, 989, 991, 1231, 1239, 1371, 1379], "gui": 670, "nomad_api": [671, 672, 1370], "nomad_url": 671, "default_api_url": 671, "lab": 671, "eu": [671, 1120], "api": 671, "logik": [671, 1007, 1032, 1050], "lib": 671, "get_authentication_token": 671, "usernam": 671, "password": 671, "expir": [671, 1324], "token": [671, 770, 771, 772, 797, 1122, 1125], "unpublish": 671, "remot": 671, "create_dataset": 671, "dataset_nam": 671, "seri": 671, "upload_fil": 671, "check_upload_statu": 671, "upload_id": 671, "success": 671, "publish_upload": 671, "complet": [671, 716, 837, 1007, 1101, 1233, 1367, 1379], "successfulli": 671, "edit_upload_metadata": 671, "upload_nam": 671, "test_upload_nam": 671, "doi": 671, "org": 671, "xxxx": 671, "xxxxxx": 671, "dataset_id": 671, "embargo_length": 671, "coauthor": 671, "affili": 671, "comment": [671, 741], "func": [672, 726, 730, 748, 749, 751, 931, 1030, 1039, 1048, 1367], "spacegroupinfo": [673, 1266, 1370], "equivalent_sit": 674, "carri": [674, 837], "sprkkr_atom": [674, 1231, 1266, 1274, 1370, 1378, 1379], "sprkkratom": [674, 1142, 1150, 1163, 1176, 1180, 1194, 1195, 1197, 1199, 1231, 1237, 1238, 1241, 1264, 1265, 1274, 1370, 1378, 1379], "uniquevaluesmap": [674, 675, 927, 1247, 1370], "desrib": [674, 725, 734], "recomput": [674, 1266], "equival": [674, 675, 927, 928, 989, 991, 1264, 1266], "allow_chang": 674, "compute_spacegroup_info": 674, "atomic_numb": [674, 675, 1222, 1266], "consider_old": [674, 675, 1266], "precis": [674, 1239, 1258], "05": [674, 975, 987, 989, 991, 1120, 1266], "angular_precis": 674, "suit": [674, 762, 764], "member": [674, 718, 719, 720, 721, 723, 724, 726, 731, 736, 741, 742, 743, 766, 767, 769, 847, 898, 928, 931, 939, 940, 941, 1003, 1007, 1008, 1010, 1011, 1012, 1031, 1032, 1035, 1036, 1040, 1041, 1044, 1045, 1049, 1050, 1054, 1055, 1058, 1073, 1074, 1075, 1076, 1124, 1133, 1135, 1138, 1142, 1146, 1150, 1154, 1158, 1159, 1163, 1167, 1169, 1172, 1176, 1180, 1184, 1190, 1191, 1194, 1195, 1196, 1198, 1199, 1201, 1233, 1234, 1235, 1236, 1239, 1240, 1242], "overriden": [674, 837, 1231], "partiali": [674, 1379], "break": [674, 745], "ones": [674, 710, 711, 742, 749, 874, 1100, 1150, 1163, 1176, 1180, 1195, 1197, 1379], "treat": [674, 718, 885, 977, 979, 985, 991], "unprecis": 674, "etc": [675, 716, 718, 724, 726, 731, 742, 786, 787, 788, 791, 795, 800, 801, 802, 807, 816, 832, 833, 834, 837, 864, 931, 975, 987, 1007, 1012, 1030, 1039, 1048, 1055, 1073, 1075, 1076, 1080, 1083, 1090, 1095, 1101, 1124, 1142, 1150, 1163, 1176, 1180, 1190, 1195, 1197, 1199, 1201, 1230, 1231, 1237, 1239, 1371, 1378], "backward": [676, 714], "testesfind": 687, "test_es_find": [688, 1370], "testspgilib": 689, "test_spglib": [690, 1370], "test_possibly_equivalent_sit": 690, "test_spacegroup_info": 690, "xband": [694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 1117, 1231, 1275, 1276, 1370], "usag": [703, 720, 859, 871, 872, 879, 898, 948, 1316, 1375], "__package__": [703, 859], "__name__": [703, 859], "testspher": 705, "test_spher": 706, "test_xband": 706, "own": [708, 716, 718, 720, 723, 874, 875, 877, 878, 879, 923, 931, 1033, 1051, 1123, 1224, 1238, 1241, 1264, 1341, 1371, 1379], "datatyp": [708, 787, 796, 798, 801, 802, 804, 805, 806, 808, 811, 814, 835, 838, 931, 1268, 1269], "what": [708, 768, 786, 788, 791, 797, 801, 802, 806, 807, 808, 809, 810, 813, 814, 817, 818, 835, 837, 931, 1012, 1032, 1050, 1055, 1073, 1075, 1076, 1095, 1124, 1126, 1190, 1231, 1239], "seem": 708, "alternative_typ": [709, 710, 711, 712, 713, 1370], "int64": [709, 710, 711, 713, 805, 808, 864, 1268, 1269], "int32": [709, 711, 712, 713, 805, 808, 847, 848, 928, 1268, 1269], "float64": [709, 711, 712, 713, 814, 848], "complex128": [709, 711, 712, 713, 787, 848], "bool_": [709, 711, 713, 796], "datetim": [709, 711, 713, 802, 1230], "datetime64": [709, 711, 713], "types_altern": [709, 1370], "primari": 709, "itself": [709, 1246, 1258], "canon": [710, 711, 847, 937], "intern": [710, 879, 1118, 1375], "doctest": [710, 844, 928, 1101], "solv": [714, 927, 1371], "configuration_definit": [716, 718, 721, 724, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 765, 766, 767, 769, 874, 877, 878, 929, 931, 938, 939, 941, 993, 1003, 1007, 1009, 1010, 1011, 1012, 1034, 1035, 1038, 1040, 1043, 1044, 1052, 1053, 1054, 1055, 1056, 1072, 1073, 1074, 1075, 1076, 1122, 1124, 1132, 1134, 1137, 1139, 1141, 1143, 1145, 1147, 1149, 1151, 1153, 1155, 1157, 1160, 1162, 1164, 1166, 1168, 1171, 1173, 1175, 1177, 1179, 1181, 1183, 1185, 1187, 1188, 1189, 1190, 1191, 1192, 1232, 1234, 1236, 1239, 1370, 1378], "basedefinit": [716, 718, 721, 725, 727, 731, 732, 733, 734, 735, 740, 741, 742, 743, 765, 766, 767, 769, 874, 877, 878, 929, 931, 938, 939, 941, 993, 1003, 1009, 1010, 1011, 1012, 1034, 1035, 1038, 1040, 1043, 1044, 1052, 1053, 1054, 1055, 1056, 1072, 1073, 1074, 1075, 1076, 1122, 1124, 1132, 1134, 1137, 1139, 1141, 1143, 1145, 1147, 1149, 1151, 1153, 1155, 1157, 1160, 1162, 1164, 1166, 1168, 1171, 1173, 1175, 1177, 1179, 1181, 1183, 1185, 1187, 1188, 1189, 1190, 1191, 1192, 1232, 1234, 1236, 1239, 1370], "configuration_contain": [716, 718, 719, 720, 721, 723, 724, 874, 877, 878, 879, 897, 898, 938, 940, 1006, 1007, 1008, 1029, 1031, 1032, 1034, 1036, 1038, 1041, 1043, 1045, 1047, 1049, 1050, 1132, 1133, 1135, 1137, 1138, 1141, 1142, 1145, 1146, 1149, 1150, 1153, 1154, 1157, 1158, 1159, 1162, 1163, 1166, 1167, 1169, 1171, 1172, 1175, 1176, 1179, 1180, 1183, 1184, 1193, 1194, 1195, 1196, 1198, 1199, 1200, 1201, 1232, 1233, 1235, 1240, 1242, 1370, 1378], "configurationcontain": [716, 717, 718, 719, 721, 723, 724, 874, 877, 878, 879, 938, 940, 1006, 1007, 1008, 1029, 1031, 1032, 1034, 1036, 1038, 1041, 1043, 1045, 1047, 1049, 1050, 1132, 1133, 1137, 1138, 1141, 1142, 1145, 1146, 1149, 1150, 1153, 1154, 1157, 1158, 1162, 1163, 1166, 1167, 1171, 1172, 1175, 1176, 1179, 1180, 1183, 1184, 1193, 1194, 1196, 1199, 1200, 1201, 1232, 1233, 1235, 1240, 1370, 1371, 1378], "_definit": [716, 1007], "_contain": 716, "parent": [716, 721, 749, 875, 1224], "hold": [716, 717, 718, 726, 731, 766, 767, 769, 874, 928, 931, 974, 1007, 1012, 1032, 1039, 1050, 1055, 1073, 1075, 1076, 1080, 1083, 1090, 1095, 1117, 1123, 1124, 1190, 1200, 1201, 1239, 1258, 1266, 1371, 1378, 1379], "_get_path": 716, "include_root": 716, "dot": [716, 1231, 1379], "delimit": [716, 720, 728, 729, 731, 732, 733, 741, 742, 743, 775, 786, 789, 800, 832, 834, 874, 898, 926, 931, 1010, 1011, 1054, 1074, 1124, 1189, 1191], "_get_root_contain": 716, "_as_dict": [716, 720, 874, 878, 879], "as_dict_gett": 716, "only_chang": [716, 898], "as_dict": [716, 898, 1251], "getter": [716, 767, 768, 769], "redefin": [716, 726, 731, 741, 742, 743, 766, 767, 769, 791, 837, 894, 931, 1012, 1055, 1073, 1075, 1076, 1124, 1190, 1199, 1239], "descend": [716, 720, 726, 731, 742, 811, 812, 843, 894, 898, 931, 1012, 1055, 1073, 1100, 1199, 1231, 1378], "expert": [716, 731, 766, 767, 769, 898, 931, 975, 977, 979, 981, 983, 985, 987, 989, 991, 1012, 1055, 1073, 1075, 1076, 1124, 1190, 1239, 1371], "explicitli": 716, "even": [716, 726, 742, 786, 788, 791, 797, 801, 802, 806, 807, 808, 809, 810, 813, 814, 817, 818, 835, 837, 864, 879, 1126, 1371], "show_hidden": [716, 731, 742, 769, 931], "check_for_error": 716, "why": [716, 720, 742, 768, 786, 787, 788, 791, 797, 798, 799, 805, 806, 809, 811, 812, 818, 832, 837, 838, 839, 877, 879, 898, 931, 1151, 1173, 1237], "save_to_fil": [716, 1007, 1233, 1378], "stuff": [716, 936, 1007, 1073, 1114, 1233, 1378], "_save_to_fil": [716, 720, 728, 729, 732, 733, 742, 874, 898, 931, 1007, 1233], "select": [716, 769, 1007, 1041, 1233, 1370, 1378], "to_str": 716, "warn": [716, 731, 766, 767, 769, 1370, 1371], "befor": [716, 769, 788, 791, 796, 798, 799, 800, 801, 806, 807, 809, 810, 813, 816, 817, 832, 833, 834, 835, 837, 838, 931, 1010, 1126, 1142, 1150, 1163, 1164, 1176, 1180, 1189, 1195, 1197, 1231, 1379], "retriev": [716, 931, 1150, 1163, 1176, 1180], "throw": [716, 720, 837, 898, 1231], "_find_memb": [716, 720, 874], "lower_cas": [716, 723, 726, 731, 874], "is_opt": [716, 720, 723, 726, 731, 742, 743, 766, 767, 769, 931, 941, 1003, 1011, 1012, 1055, 1073, 1074, 1075, 1076, 1124, 1190, 1236, 1239], "baseconfigurationcontain": [717, 719, 720, 721, 723, 724, 742, 897, 898, 938, 940, 1006, 1007, 1008, 1029, 1031, 1032, 1034, 1036, 1038, 1041, 1043, 1045, 1047, 1049, 1050, 1132, 1133, 1135, 1137, 1138, 1141, 1142, 1145, 1146, 1149, 1150, 1153, 1154, 1157, 1158, 1159, 1162, 1163, 1166, 1167, 1169, 1171, 1172, 1175, 1176, 1179, 1180, 1183, 1184, 1193, 1194, 1195, 1196, 1198, 1199, 1200, 1201, 1232, 1233, 1235, 1240, 1242, 1370], "basesect": [717, 721, 724, 1006, 1008, 1132, 1133, 1137, 1138, 1141, 1142, 1145, 1146, 1149, 1150, 1153, 1154, 1157, 1158, 1162, 1163, 1166, 1167, 1171, 1172, 1175, 1176, 1179, 1180, 1183, 1184, 1193, 1194, 1196, 1199, 1232, 1235, 1240, 1370], "customsect": [717, 1232, 1240, 1370], "rootconfigurationcontain": [717, 938, 940, 1006, 1007, 1029, 1031, 1032, 1034, 1036, 1038, 1041, 1043, 1045, 1047, 1049, 1050, 1200, 1201, 1232, 1233, 1370], "classic": 718, "copy_valu": [718, 769, 789, 832, 837, 931, 1039], "modif": [718, 879, 1379], "affect": [718, 975, 977, 979, 981, 983, 985, 987, 989, 991], "has_any_valu": [718, 720, 877, 879, 1194], "containerdefinit": [718, 724, 740, 741, 743, 938, 939, 941, 993, 1003, 1007, 1009, 1010, 1011, 1034, 1035, 1038, 1040, 1043, 1044, 1052, 1054, 1072, 1074, 1132, 1134, 1137, 1139, 1141, 1143, 1145, 1147, 1149, 1151, 1153, 1155, 1157, 1160, 1162, 1164, 1166, 1168, 1171, 1173, 1175, 1177, 1179, 1181, 1183, 1185, 1187, 1188, 1189, 1191, 1232, 1234, 1236, 1370, 1378], "_init_members_from_the_definit": 720, "_get_memb": 720, "interactive_memb": 720, "clear": [720, 723, 874, 879, 898, 1201, 1254], "do_not_check_requir": [720, 874, 879, 898], "call_hook": [720, 874, 879, 898], "eras": [720, 898], "subcontain": [720, 898], "prevent": [720, 898, 935], "neverthenless": [720, 898], "anywai": [720, 786, 787, 789, 898], "theirs": [720, 898], "hook": [720, 726, 734, 879, 898, 931, 1010], "get_memb": 720, "child": [720, 734, 742, 743, 749, 898, 1011, 1054, 1074, 1189, 1191], "insensit": 720, "conain": [720, 898], "find_exact": 720, "sensit": 720, "mix": [720, 763, 837, 875, 876, 879, 894, 898, 931, 989, 991, 1007, 1012, 1033, 1051, 1055, 1073, 1075, 1076, 1123, 1124, 1190, 1238, 1239, 1241, 1370], "input_paramet": [720, 879, 898, 930, 974, 975, 977, 979, 981, 983, 985, 987, 989, 991, 993, 994, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1079, 1080, 1082, 1083, 1086, 1087, 1089, 1090, 1094, 1095, 1100, 1101, 1130, 1231, 1243, 1370, 1371, 1375], "niter": [720, 898, 989, 991], "unkwnown": [720, 898], "known": [720, 898, 975, 977, 979, 981, 983, 985, 987, 989, 991, 1032, 1050, 1073, 1074, 1231, 1379], "syntax": [720, 725, 898, 1231, 1371], "syntact": [720, 837, 898, 1231], "sugar": [720, 898, 1231], "remove_memb": 720, "nest": [720, 731, 786, 788, 791, 832, 839, 898], "transform": [720, 769, 786, 787, 788, 791, 800, 801, 802, 807, 812, 816, 832, 833, 834, 837, 879, 891, 898, 931, 1012, 1055, 1073, 1075, 1076, 1124, 1190, 1239, 1378], "well": [720, 898, 930], "lowercas": 720, "_interactive_member_nam": 720, "sanit": 720, "acces": 720, "notat": [720, 763, 1231, 1371, 1379], "_add": 720, "is_chang": [720, 879, 898], "alwai": [720, 728, 729, 732, 733, 742, 874, 879, 898, 931, 975, 987, 1231, 1266, 1358, 1369, 1371], "name_in_grammar": [720, 723, 728, 729, 731, 732, 733, 741, 742, 743, 766, 767, 769, 791, 837, 874, 898, 931, 941, 1003, 1011, 1012, 1055, 1073, 1074, 1075, 1076, 1124, 1190, 1236, 1239], "condit": [720, 726, 727, 730, 731, 733, 734, 735, 739, 742, 766, 767, 769, 773, 788, 791, 796, 797, 798, 799, 800, 801, 802, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 816, 817, 818, 832, 833, 834, 835, 837, 838, 879, 898, 931, 1012, 1055, 1073, 1075, 1076, 1092, 1124, 1126, 1190, 1239, 1258, 1268, 1269], "something_have_been_written": [720, 742, 898], "_valid": [720, 786, 787, 788, 791, 797, 798, 799, 805, 806, 809, 811, 812, 818, 832, 837, 838, 877, 879, 898], "dure": [720, 731, 766, 767, 769, 791, 837, 898, 902, 1095, 1150, 1163, 1164, 1176, 1180, 1189, 1195, 1197, 1199, 1238, 1243, 1244, 1245, 1246, 1251, 1379], "parser": [720, 797, 898, 1071, 1077, 1099], "skip": [720, 726, 731, 766, 767, 769, 771, 791, 837, 879, 898, 931, 989, 991, 1012, 1055, 1073, 1075, 1076, 1124, 1190, 1239, 1251, 1378], "validate_sect": [720, 726, 768], "section_adaptor": [720, 900, 901, 902, 1370], "_validate_sect": 720, "factori": [721, 875, 1010, 1011], "definition_typ": 721, "disabl": 722, "becaus": 722, "sens": [722, 731, 766, 767, 769], "capabl": [723, 1378, 1379], "read_from_fil": [723, 742, 894, 1100, 1201, 1371], "clear_first": [723, 1201], "allow_danger": [723, 726, 728, 732, 733, 741, 742, 768, 931, 1007, 1201], "preserv": [723, 797, 1201], "load": [723, 945, 1201, 1379], "dangerous_valu": [723, 1201], "violat": [723, 1201, 1258], "whose": [724, 726, 733, 734, 735, 749, 801, 807, 1122, 1125, 1150, 1163, 1176, 1180, 1195, 1197, 1199, 1231], "predefind": 724, "sectiondefinit": [724, 740, 938, 941, 993, 1003, 1009, 1011, 1072, 1074, 1132, 1134, 1137, 1139, 1141, 1143, 1145, 1147, 1149, 1151, 1153, 1155, 1157, 1160, 1162, 1164, 1166, 1168, 1171, 1173, 1175, 1177, 1179, 1181, 1183, 1185, 1187, 1188, 1189, 1232, 1236, 1370], "controldefinit": [725, 734, 1370], "virtualdefinit": [725, 727, 732, 733, 734, 1052, 1053, 1056, 1187, 1192, 1370], "gather": [725, 729, 1370, 1371], "notallow": [725, 1370], "realitemdefinit": [725, 740, 741, 742, 743, 765, 766, 767, 769, 929, 931, 938, 939, 941, 993, 1003, 1009, 1010, 1011, 1012, 1034, 1035, 1038, 1040, 1043, 1044, 1052, 1054, 1055, 1072, 1073, 1074, 1075, 1076, 1122, 1124, 1132, 1134, 1137, 1139, 1141, 1143, 1145, 1147, 1149, 1151, 1153, 1155, 1157, 1160, 1162, 1164, 1166, 1168, 1171, 1173, 1175, 1177, 1179, 1181, 1183, 1185, 1187, 1188, 1189, 1190, 1191, 1232, 1234, 1236, 1239, 1370], "separatordefinit": [725, 1052, 1053, 1056, 1187, 1192, 1370], "stub": [725, 1370], "virtual": [726, 1266], "grammar": [726, 727, 728, 731, 734, 741, 742, 743, 766, 767, 769, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 797, 798, 801, 802, 804, 806, 807, 808, 809, 810, 813, 814, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 834, 835, 837, 842, 843, 844, 845, 847, 874, 876, 931, 1012, 1026, 1055, 1072, 1073, 1075, 1076, 1124, 1125, 1126, 1190, 1191, 1239, 1370, 1371, 1378], "omit": [726, 931, 1012, 1055, 1073, 1075, 1076, 1124, 1190, 1239], "parse_condit": [726, 731, 766, 767, 769, 931, 1012, 1055, 1073, 1075, 1076, 1124, 1190, 1239], "invok": [726, 731, 745, 766, 767, 769, 931, 1012, 1055, 1073, 1075, 1076, 1124, 1190, 1239, 1378], "hide": [726, 731, 766, 767, 769, 931, 1012, 1055, 1073, 1075, 1076, 1124, 1190, 1239], "inact": [726, 731, 766, 767, 769, 931, 1012, 1055, 1073, 1075, 1076, 1124, 1190, 1239], "qualnam": 726, "boundari": [726, 1258], "repetit": [726, 1274], "NO": 726, "ye": 726, "with_default": 726, "has_default": 726, "grammar_typ": [726, 731, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 876, 931, 1091, 1092, 1122, 1126, 1267, 1268, 1269, 1370, 1378], "is_arrai": 726, "is_dict": 726, "parsing_result": [726, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 1370], "ignoredkei": [726, 880, 1370], "repeatedkei": [726, 880, 891, 1370], "repeated_sect": 726, "lambda": [726, 731, 734, 739, 766, 767, 769, 1230], "arraykei": [726, 880, 1370], "dictkei": [726, 880, 882, 891, 1370], "defdictkei": [726, 880, 1370], "is_rep": [726, 741, 742, 743, 931, 939, 941, 1003, 1011, 1012, 1035, 1040, 1044, 1054, 1055, 1073, 1074, 1075, 1076, 1124, 1190, 1191, 1234, 1236, 1239], "real_nam": [726, 733], "has_nam": [726, 731], "add_grammar_hook": 726, "remove_grammar_hook": 726, "pypars": [726, 731, 770, 771, 772, 773, 774, 777, 837, 891, 1122, 1125, 1378], "danger": [726, 879, 1007, 1371], "_grammar": [726, 727, 728, 729, 766, 788, 791, 797, 800, 801, 802, 806, 807, 808, 810, 813, 814, 816, 817, 818, 832, 833, 834, 835, 837, 931, 1092, 1126], "conditionali": [726, 931], "has_grammar": [726, 729], "_hooked_grammar": 726, "whitespac": [726, 776, 813, 817], "propper": [726, 769, 837, 1126, 1142, 1150, 1163, 1176, 1180, 1195, 1197, 1230, 1275], "_create_grammar": [726, 732, 733, 741, 742, 768, 931], "creation": [726, 1201, 1237], "_add_hooks_to_grammar": 726, "closur": 726, "added_to_contain": [726, 734, 834, 837, 931], "get_path": [726, 874], "_get_copy_arg": [726, 931], "create_object": [726, 733, 734, 735, 742], "can_be_rep": [726, 931], "multipl": [726, 975, 977, 979, 981, 983, 985, 987, 989, 991], "is_independent_on_the_predecessor": [726, 731, 809, 837, 931], "_copy_excluded_arg": [726, 731, 931], "grammar_hook": [726, 731, 931], "enrich": [726, 758, 766, 769, 788, 837, 931], "output_definit": [726, 1073, 1074, 1075, 1076, 1370], "accept_valu": [726, 743], "here": [726, 743, 764, 786, 787, 788, 791, 800, 801, 802, 807, 816, 832, 833, 834, 837, 879, 931, 1128, 1266], "name_delimit": 728, "value_delimit": 728, "value_delimiter_grammar": 728, "besid": 728, "himself": 728, "goe": 728, "go": 728, "overrid": [729, 837, 1231], "writen": 729, "singleton": 729, "configurationdefinit": 730, "written_nam": [731, 766, 767, 769, 931, 1012, 1055, 1073, 1075, 1076, 1124, 1190, 1239], "alternative_nam": [731, 742, 743, 766, 767, 769, 931, 941, 1003, 1011, 1012, 1055, 1073, 1074, 1075, 1076, 1124, 1173, 1190, 1236, 1239], "is_hidden": [731, 735, 742, 743, 766, 767, 769, 931, 941, 1003, 1011, 1012, 1055, 1073, 1074, 1075, 1076, 1124, 1190, 1236, 1239], "is_expert": [731, 742, 743, 766, 767, 769, 931, 941, 1003, 1011, 1012, 1055, 1073, 1074, 1075, 1076, 1124, 1190, 1236, 1239], "name_format": [731, 766, 767, 769, 931, 1012, 1055, 1073, 1075, 1076, 1124, 1190, 1239], "write_alternative_nam": [731, 742, 743, 766, 767, 769, 931, 941, 1003, 1011, 1012, 1055, 1073, 1074, 1075, 1076, 1124, 1173, 1190, 1236, 1239], "name_regex": [731, 742, 743, 766, 767, 769, 941, 1003, 1011, 1074, 1236], "write_condit": [731, 766, 767, 769, 931, 1012, 1055, 1073, 1075, 1076, 1124, 1190, 1239], "result_class": [731, 742, 743, 766, 767, 769, 931, 939, 941, 1003, 1010, 1011, 1012, 1035, 1040, 1044, 1054, 1055, 1073, 1074, 1075, 1076, 1079, 1082, 1086, 1089, 1094, 1100, 1124, 1134, 1139, 1143, 1147, 1151, 1155, 1160, 1164, 1168, 1173, 1177, 1181, 1185, 1188, 1189, 1190, 1191, 1236, 1239], "warning_condit": [731, 766, 767, 769], "denot": [731, 766, 767, 769, 928, 931, 1012, 1055, 1073, 1075, 1076, 1124, 1190, 1239, 1266, 1379], "contrari": [731, 766, 767, 769], "still": [731, 766, 767, 769, 786, 788, 791, 832, 839, 879, 931, 1012, 1055, 1073, 1075, 1076, 1124, 1190, 1239, 1379], "hidden": [731, 742, 766, 767, 769, 931, 1012, 1053, 1055, 1056, 1073, 1075, 1076, 1124, 1190, 1192, 1239], "offer": [731, 766, 767, 769, 893], "usual": [731, 766, 767, 769], "somewhat": [731, 766, 767, 769, 931, 1012, 1055, 1073, 1075, 1076, 1124, 1190, 1239], "recogn": [731, 766, 767, 769, 797, 841, 846, 925, 1032, 1050], "perex": [731, 766, 767, 769], "wheter": [731, 766, 767, 769, 931, 1012, 1055, 1073, 1075, 1076, 1124, 1190, 1239], "info_in_data_descript": [731, 941], "expect": [731, 847, 931, 1073], "_info": [731, 1003, 1011, 1012], "_descript": [731, 1003, 1011, 1012], "longer": [731, 834], "formated_nam": 731, "validate_warn": 731, "all_names_in_grammar": [731, 735], "allow_dupl": [731, 742, 931], "predecessor": [731, 809, 837, 931, 1188], "much": 731, "_description_indent": 731, "detail": [731, 742, 931], "commonli": [731, 741, 742, 791, 837, 876, 931], "_grammar_of_nam": 731, "_tuple_with_my_nam": [731, 741], "expr": [731, 741, 775, 781], "has_valu": [731, 799, 837], "expres": 731, "express": [731, 786, 788, 791, 797, 801, 802, 806, 807, 808, 809, 810, 813, 814, 817, 818, 823, 835, 837, 1126], "do_not_skip_whitespaces_before_nam": [731, 1011], "separator_typ": [732, 1053, 1056, 1192], "reus": [733, 1142, 1150, 1163, 1176, 1180, 1195, 1197], "place": [733, 834, 1221, 1222, 1251, 1379], "activ": 734, "1e5": 734, "7e5": 734, "autogener": 734, "parserel": [734, 770, 771, 772, 776, 778, 779, 780, 786, 789, 800, 801, 802, 806, 807, 808, 810, 813, 814, 817, 818, 835, 1010, 1011, 1012, 1054, 1055, 1074, 1075, 1076, 1092, 1122, 1125, 1126, 1189, 1190, 1191], "items_for": 734, "all_valu": [734, 769, 931], "prepare_grammar": 734, "_choos": 734, "replac": [734, 748, 928, 1224, 1226, 1230, 1231, 1251, 1258, 1266, 1379], "forward": 734, "item_hook": 734, "remove_from_contain": 734, "switch_valu": 734, "condition_nam": 734, "flow": [735, 937], "counter": [735, 1230, 1231, 1379], "item_typ": [735, 741, 742, 766, 931], "not_valu": [737, 738], "configurationrootdefinit": [740, 938, 939, 1009, 1010, 1034, 1035, 1038, 1040, 1043, 1044, 1052, 1054, 1187, 1191, 1232, 1234, 1370], "container_definit": [741, 742, 743, 938, 939, 941, 993, 1003, 1009, 1010, 1011, 1034, 1035, 1038, 1040, 1043, 1044, 1052, 1054, 1072, 1074, 1132, 1134, 1137, 1139, 1141, 1143, 1145, 1147, 1149, 1151, 1153, 1155, 1157, 1160, 1162, 1164, 1166, 1168, 1171, 1173, 1175, 1177, 1179, 1181, 1183, 1185, 1187, 1188, 1189, 1191, 1232, 1234, 1236, 1370], "rest": [741, 742, 743, 834, 939, 941, 1003, 1011, 1032, 1035, 1040, 1044, 1050, 1054, 1074, 1191, 1234, 1236, 1367, 1378], "has_hidden_memb": [741, 742, 743, 939, 941, 1003, 1011, 1035, 1040, 1044, 1054, 1074, 1191, 1234, 1236], "intend": [741, 742, 743, 894, 939, 941, 1003, 1011, 1035, 1040, 1044, 1054, 1074, 1191, 1234, 1236], "onc": [741, 742, 743, 750, 754, 866, 931, 939, 941, 1003, 1011, 1012, 1035, 1040, 1044, 1054, 1055, 1073, 1074, 1075, 1076, 1124, 1190, 1191, 1234, 1236, 1239], "valuedefinit": [741, 742, 743, 791, 837, 875, 879, 929, 939, 941, 1003, 1009, 1011, 1012, 1033, 1035, 1040, 1044, 1051, 1052, 1054, 1055, 1072, 1073, 1074, 1075, 1076, 1122, 1123, 1124, 1187, 1190, 1191, 1232, 1234, 1236, 1238, 1239, 1241, 1370, 1378], "swtich": [741, 742, 743, 939, 941, 1003, 1011, 1035, 1040, 1044, 1054, 1074, 1191, 1234, 1236], "divid": [741, 742, 743, 939, 941, 1003, 1011, 1035, 1040, 1044, 1054, 1074, 1191, 1193, 1234, 1236, 1251, 1378], "force_ord": [741, 742, 743, 939, 941, 1003, 1011, 1035, 1040, 1044, 1054, 1074, 1189, 1191, 1234, 1236], "retain": [741, 742, 743, 749, 837, 866, 879, 939, 941, 1003, 1007, 1011, 1035, 1040, 1044, 1054, 1074, 1191, 1231, 1234, 1236, 1266], "write_last_delimit": [741, 742], "newlin": [741, 777, 778, 779, 1010, 1011, 1054, 1074, 1124, 1126, 1189, 1191], "kind": [741, 796, 931, 1012, 1055, 1073, 1075, 1076, 1124, 1190, 1239], "definition_from_dict": 741, "def": [741, 748, 749, 750, 752], "custom_value_nam": [741, 743], "custom_sect": 741, "parse_return": [741, 742], "return_value_onli": [741, 742], "clean": [741, 742, 1251, 1275], "unnecessari": [741, 742], "tweak": [741, 1371], "add_ignor": [741, 1054], "inputparamet": [742, 743, 879, 1006, 1010, 1011, 1231, 1370, 1371, 1378], "value_name_format": [742, 931, 1054, 1189], "_dict_from_named_valu": 742, "auxiliari": 742, "configuration_type_nam": [742, 931, 1010, 1054, 1191], "runtim": [742, 759, 931, 1010, 1012, 1054, 1055, 1073, 1075, 1076, 1124, 1190, 1191, 1239, 1371], "data_descript": [742, 769, 931], "additional_data_descript": [742, 931], "children": 742, "copy_memb": 742, "new_memb": 742, "_grammar_of_valu": [742, 931], "_allow_duplicates_of": 742, "delimited_custom_value_grammar": [742, 743], "custom_name_charact": [742, 1191], "abcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyz0123456789_": [742, 1191], "charact": [742, 834], "custom_member_grammar": 742, "name_condit": 742, "all_member_nam": 742, "excluded_names_condit": 742, "_first_section_has_to_be_first": 742, "ve": 742, "unord": 742, "sequenc": [742, 785, 791, 837], "parse_fil": [742, 1098], "whole_str": [742, 837], "async": [742, 837, 893, 894, 895, 896, 1085, 1093, 1098], "parse_from_stream": [742, 837], "stream": [742, 837, 937, 1126, 1378], "up_to": [742, 837], "asyncio": [742, 892, 893, 1378], "read_from_dict": 742, "read_from_str": 742, "repeated_class": [742, 1134, 1160, 1168], "repeatedconfigurationcontain": [742, 897, 1132, 1135, 1157, 1159, 1166, 1169, 1193, 1195, 1198, 1232, 1242, 1370], "belong": [742, 1100, 1224, 1264], "Then": 742, "typic": [743, 928, 1246], "custom_valu": 743, "_generic_info": [743, 931, 1010, 1191], "debug": [745, 746, 1370], "only_origin": 745, "unhandl": 745, "occur": [745, 870, 1264, 1378], "stackoverflow": [745, 797, 937], "question": [745, 797, 937], "1237379": 745, "sy": [745, 1371], "excepthook": 745, "pdb": 745, "term": [746, 1258], "cached_class_properti": [747, 752, 1370], "cached_properti": [747, 754, 1370], "functool": [747, 751, 754], "class_properti": [747, 750, 1370], "maybeclassmethod": [747, 1370], "mainli": 747, "lost": 748, "As": [748, 1120], "consequ": [748, 956, 1372, 1373], "execut": [748, 946, 1006, 1007, 1010, 1101, 1231, 1245, 1378, 1379], "super": 748, "tricki": 748, "situat": 748, "__set_name__": 748, "lose": 748, "recov": 748, "protocol": 748, "thing": [748, 931], "know": 748, "everyth": 748, "end": [748, 776, 810, 832, 834, 835, 931, 975, 987, 1012, 1055, 1073, 1075, 1076, 1124, 1126, 1190, 1239, 1258], "ab": 748, "prepend": 749, "keyword_onli": 749, "new_param": 749, "alter": [749, 789, 837, 1231, 1379], "regular": [749, 797, 885, 975, 977, 979, 981, 983, 985, 987, 989, 991], "cls_properti": [750, 752], "some_cached_valu": 750, "another_cls_properti": 750, "another_cached_valu": 750, "fset": 751, "fdel": 751, "setter": [751, 767, 768, 769, 1266, 1379], "desir": [752, 786, 788, 791, 797, 801, 802, 806, 807, 808, 809, 810, 813, 814, 817, 818, 835, 837, 1126, 1251], "some_valu": 752, "behaw": 753, "invalid": [754, 788, 796, 798, 799, 800, 801, 806, 807, 809, 810, 813, 816, 817, 833, 835, 837, 838, 935, 1126], "stacklevel": 755, "chdir": 757, "14e": [762, 764], "12e": 763, "lead": [763, 975, 977, 979, 981, 983, 985, 987, 989, 991, 1379], "fortran": [763, 871, 872], "scientif": 763, "1000000000000e": 763, "00": 763, "6e": 763, "1000000e": 763, "cokoli": 764, "tu": 764, "14g": 764, "basegeneratedvaluedefinit": [765, 767, 769, 1370], "generatedvaluedefinit": [765, 1370], "value_definit": [765, 768, 875, 930, 931, 932, 1009, 1012, 1052, 1055, 1072, 1073, 1075, 1076, 1122, 1124, 1187, 1190, 1232, 1239, 1370], "inheritingvaluemodifi": [765, 768, 929, 1370], "valuemodifi": [765, 768, 929, 930, 1370], "numpyviewdefinit": [765, 1370], "generated_configuration_definit": [766, 767, 768, 769, 1370], "is_gener": [766, 768, 931], "is_stor": [766, 768, 931, 1012, 1055, 1073, 1075, 1076, 1124, 1190, 1239], "sinc": [766, 879, 1231, 1371], "reciev": [766, 769], "enhanc": [766, 769, 1265], "default_valu": [768, 786, 787, 788, 789, 791, 796, 797, 798, 799, 800, 801, 802, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 816, 817, 818, 832, 833, 834, 835, 837, 838, 879, 931, 1012, 1055, 1073, 1075, 1076, 1092, 1124, 1126, 1190, 1239, 1268, 1269], "sometim": [768, 786, 788, 791, 797, 801, 802, 806, 807, 808, 809, 810, 813, 814, 817, 818, 835, 837, 876, 1007, 1126], "is_valid": [768, 931], "_no_default": 768, "modify_definit": [768, 930], "validate_pars": 768, "ln": 768, "transpos": 769, "reorder": 769, "transform_kei": 769, "possibli": [769, 931, 1012, 1055, 1073, 1075, 1076, 1124, 1190, 1239, 1263, 1378], "reshap": 769, "view": [769, 1229, 1370, 1379], "larg": [769, 831], "idnex": 769, "plotinfo": 769, "determine_shap": 769, "skiptoregex": [770, 1370], "white": [770, 1370], "include_pattern": 771, "parse_pattern": 771, "regex": [771, 797, 834, 1378], "custom_nam": 771, "parseimpl": [771, 1125], "instr": [771, 1125], "doaction": [771, 1125], "whitechar": 772, "pp": [772, 797], "default_white_char": 772, "parseel": 773, "pa": [774, 1120], "action": [774, 837, 934], "parseelemenet": 774, "delim": 775, "suppress": [775, 780, 786, 871, 872, 1011, 1074, 1126, 1191], "eof": 776, "restor": 777, "optin": 779, "quot": [780, 813, 826, 925], "definitionfil": 784, "grammartyp": [785, 786, 787, 788, 789, 791, 795, 796, 797, 798, 799, 800, 801, 802, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 831, 832, 833, 834, 835, 836, 838, 843, 876, 931, 1012, 1055, 1073, 1075, 1076, 1091, 1092, 1122, 1124, 1126, 1190, 1237, 1239, 1267, 1268, 1269, 1371, 1378], "setof": [785, 787, 793, 794, 841, 846, 847], "typedgrammartyp": [785, 787, 795, 796, 797, 798, 801, 802, 804, 805, 806, 807, 808, 810, 811, 812, 813, 814, 815, 817, 818, 836, 1091, 1092, 1267, 1268, 1269], "specialcolumn": 785, "max_length": [786, 787, 789, 926], "min_length": [786, 787, 789], "as_list": [786, 787, 788, 789], "min_": [786, 787, 789], "sp": [786, 977, 979, 985, 991, 1011], "tab": [786, 1011, 1379], "delimiter_str": [786, 789], "array_access": [786, 787, 791, 832, 837], "_set_convert_act": 786, "grammar_nam": [786, 788, 791, 797, 801, 802, 806, 807, 808, 809, 810, 813, 814, 817, 818, 835, 837, 1126], "human": [786, 788, 791, 797, 801, 802, 806, 807, 808, 809, 810, 813, 814, 817, 818, 835, 837, 1126], "readabl": [786, 788, 791, 797, 801, 802, 806, 807, 808, 809, 810, 813, 814, 817, 818, 835, 837, 1126], "setnam": [786, 788, 791, 797, 801, 802, 806, 807, 808, 809, 810, 813, 814, 817, 818, 835, 837, 1126], "shorter": [786, 788, 791, 797, 801, 802, 806, 807, 808, 809, 810, 813, 814, 817, 818, 835, 837, 1126], "_string": [786, 787, 788, 791, 800, 801, 802, 807, 816, 832, 833, 834, 837], "ouput": [786, 787, 788, 791, 800, 801, 802, 807, 816, 832, 833, 834, 837], "postfix": [786, 787, 788, 791, 796, 797, 798, 799, 800, 801, 802, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 816, 817, 818, 832, 833, 834, 835, 837, 838, 1007, 1092, 1126, 1268, 1269], "_dtype_condit": 786, "cannon": [786, 787, 788, 791, 805, 809, 812, 814, 832, 834, 837, 838, 1117], "is_the_same_valu": [786, 788, 791, 832, 837], "perfect": [786, 788, 791, 832, 839], "is_numpy_arrai": 786, "numpy_dtyp": [786, 837], "numpy_typ": [787, 791, 796, 797, 802, 805, 814, 837, 1370], "_grammar_nam": [787, 800, 816], "allowed_typ": [787, 796, 798, 802, 805, 808, 811, 813, 814, 838, 1268, 1269, 1370], "datatype_nam": [787, 796, 798, 802, 805, 808, 811, 814, 818, 835, 838], "format_al": [788, 791, 842, 843], "allowed_valu": 788, "after_format": [788, 796, 797, 798, 799, 800, 801, 802, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 816, 817, 818, 832, 833, 834, 835, 837, 838, 1092, 1126, 1268, 1269], "interpret": [788, 796, 798, 799, 800, 801, 806, 807, 809, 810, 813, 816, 817, 833, 835, 837, 838, 864, 1007, 1126, 1231, 1379], "explain": [788, 796, 798, 799, 800, 801, 806, 807, 809, 810, 813, 816, 817, 833, 835, 837, 838, 1126], "after_convert": [788, 796, 797, 798, 799, 800, 801, 802, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 816, 817, 818, 832, 833, 834, 835, 837, 838, 1092, 1126, 1268, 1269], "enter": [788, 796, 798, 799, 800, 801, 806, 807, 809, 810, 813, 816, 817, 833, 835, 837, 838, 1126], "param_nam": [788, 789, 791, 797, 832, 834, 837], "abil": [788, 837], "transform_grammar": [789, 837], "chanc": [789, 837], "column": [790, 791, 1095], "default_format": [790, 840], "add_grammar": 790, "add_header_grammar": 790, "format_str": [790, 791, 837], "free_head": 791, "numbering_label": 791, "numbering_format": 791, "grouping_label": 791, "grouping_format": 791, "row_condit": 791, "flatten": 791, "named_result": 791, "group_siz": 791, "group_size_format": 791, "groups_as_list": 791, "optionali": 791, "iq": 791, "irefq": 791, "imq": 791, "noq": 791, "itoq": 791, "conc": 791, "000": 791, "exact": [791, 1378], "similiard": 791, "meaning": 791, "behav": [791, 902], "least": [791, 926, 1379], "subtabl": 791, "column1_nam": 791, "column2_nam": 791, "special_column": 791, "featureless": 791, "_numpy_typ": 791, "number_of_column": 791, "zero_data": 791, "variant": [793, 794, 845], "basebool": [795, 801, 806, 807], "baserealwithunit": [795, 804, 815], "basestr": [795, 810, 813, 817], "basicsepar": [795, 800, 816], "blanksepar": [795, 1052, 1370], "date": [795, 797, 1231, 1379], "fixedpointnumb": [795, 808, 812, 818, 1267, 1268, 1269], "flag": [795, 837, 842, 975, 977, 979, 981, 983, 985, 987, 989, 991, 1012, 1371], "intbool": [795, 823], "linestr": [795, 825, 1055], "objectnumb": [795, 1267, 1268, 1269], "unsign": [795, 812, 1267, 1268, 1269], "qstring": 795, "realwithunit": 795, "type_nam": [796, 802], "min": [797, 802, 804, 805, 808, 811, 812, 814, 815, 818, 975, 977, 979, 981, 983, 985, 987, 989, 991, 1092, 1268, 1269], "grammar_cach": 797, "_grammar_unit": 797, "stdlib": 797, "parseresult": 797, "wish": 797, "compil": [797, 869, 1007, 1101, 1125, 1379], "wa": [797, 879, 1258, 1266, 1371], "realnum": 797, "d": [797, 802, 1039, 1230, 1258, 1379], "267399": 797, "roman": 797, "cm": [797, 1120], "xl": 797, "ix": 797, "year": 797, "month": 797, "dai": 797, "fake": 799, "blank": [800, 1053, 1056], "fact": [800, 845, 893, 1123, 1124], "letter": [801, 807], "dd": 802, "mm": 802, "yyyi": 802, "predefin": [803, 809, 894, 977, 1130, 1379], "rydberg": 804, "ry": [804, 879, 975, 977, 979, 981, 983, 985, 987, 989, 991], "07349864494991327": 804, "convers": 804, "factor": [804, 975, 977, 979, 981, 983, 985, 987, 989, 991], "missing_valu": [806, 837], "configuraion": [806, 837], "can_be_ommit": [806, 837], "ommis": [806, 837], "do_not_output_the_opt": [806, 837], "revers": [807, 928], "_rev_grammar": 807, "alias": 809, "additional_descript": [809, 837], "choic": [809, 837, 931], "multilin": [809, 837], "hoewev": [809, 837], "skipto": 810, "lineend": [810, 1011], "stringend": 810, "reffer": 812, "care": [812, 1006], "te": [812, 1120], "word": 813, "fnumber": [814, 1092], "79": [816, 1118, 1120], "insid": 816, "star": 816, "numpyarrai": [831, 1371], "rawdata": [831, 832], "restofthefil": [831, 1371], "written_shap": 832, "item_format": 832, "18e": 832, "no_newline_at_end": 832, "anyth": [832, 834, 835, 894, 1231, 1378], "resiz": 832, "data_prefix": 833, "allow_empti": 833, "line_length": 834, "ends_with": 834, "ends_with_str": 834, "include_ends_with": 834, "split": [834, 1371], "_n_lines_grammar": 834, "Such": [837, 891], "yield": [837, 887, 935], "confus": 837, "opposit": [837, 1266], "absenc": 837, "hand": [837, 977, 979, 985, 991], "descendatn": 837, "equal": [837, 879, 928, 975, 987, 1120, 1251, 1258, 1264, 1266], "rare": 837, "incomplet": 837, "set_from_atom": [837, 1003, 1201, 1237, 1239, 1268, 1269], "_valueerror": 837, "error_messag": 837, "apply_format": 837, "manner": 837, "type_valid": 837, "typenam": 837, "suffici": [837, 928], "ok": 837, "used_in_definit": 837, "format_for_the_typ": 840, "array_lik": [841, 846, 1258], "type_map": [842, 843, 844], "becom": 842, "left": [842, 975, 987, 1007, 1226, 1231, 1258], "descendatnt": 843, "format_for_typ": 843, "gue": 844, "rang": [845, 928, 975, 977, 979, 985, 987, 991, 1359], "float32": 847, "normalize_typ": [847, 1370], "lazystr": [861, 1370], "lazy_str": [862, 1370], "lazi": 862, "demand": [862, 1246], "thorough": 863, "misc": [864, 865, 866, 867, 868, 869, 870, 1370], "typeerror": 864, "traceback": [864, 891, 926], "recent": [864, 891, 926], "src": [866, 1007, 1032, 1050], "h": [867, 975, 987, 1120], "numba": [869, 870], "jit": 869, "acceler": 870, "nooutput": [871, 1370], "no_output": [872, 1370], "baseopt": [873, 875, 877, 878, 879, 1029, 1033, 1047, 1051, 1122, 1123, 1232, 1238, 1241, 1370], "customopt": [873, 1122, 1123, 1232, 1241, 1370], "dangerousvalu": [873, 879, 931, 1370], "dummystub": [873, 1370], "leaf": 874, "my": [875, 1131, 1379], "value_typ": 876, "encapsul": [876, 933], "overcam": 876, "enfor": 876, "stringifi": 876, "write_valu": [876, 931], "conf": [879, 931, 1012, 1055, 1073, 1075, 1076, 1124, 1190, 1239], "im": [879, 975, 977, 979, 981, 983, 985, 987, 989, 991, 1379], "set_danger": 879, "1j": 879, "_value_or_default": 879, "is_danger": [879, 900, 901, 902], "bypass": 879, "proper": [879, 1007], "completli": 879, "_create_dangerous_valu": 879, "underlin": [879, 1100], "compatibil": 879, "_post_set": 879, "add_hook": 879, "_check_array_access": 879, "_set_item": 879, "saniti": 879, "_getitem": 879, "_unpack_valu": 879, "potention": 879, "_pack_valu": 879, "clear_result": 879, "is_set": 879, "_written_valu": 879, "value_and_chang": 879, "is_it_the_default_valu": 879, "wildcard": 879, "subkei": [880, 881, 882, 883, 1370], "validatekei": [880, 1370], "resultclass": [881, 883, 886], "not_set": 881, "totali": [884, 889], "silent": [884, 889], "agreg": 887, "dict_from_pars": [890, 1370], "subdictionari": 891, "parseexcept": 891, "asynciofileread": [892, 1370], "processoutputread": [892, 1007, 1010, 1084, 1085, 1091, 1093, 1097, 1098, 1100, 1370, 1371], "emploi": [892, 1231, 1378], "stdio": 892, "stderr": [892, 894], "concur": 892, "process_output_read": [893, 894, 895, 896, 1007, 1010, 1084, 1085, 1091, 1093, 1097, 1098, 1100, 1370], "buffers": 893, "8192": 893, "streamread": 893, "synchron": 893, "readlin": [893, 1370], "separator_shift": 893, "sep": 893, "readuntil": 893, "read_error": 894, "read_output": [894, 1085, 1093, 1378], "run_subprocess": 894, "read_arg": 894, "postprocess": [894, 1378, 1379], "return_cod": [894, 1100, 1101], "cmd": [894, 1100], "outfil": [894, 1100], "result_from_fil": 894, "cond": 896, "can_end": 896, "repeated_configuration_contain": [898, 1132, 1135, 1157, 1159, 1166, 1169, 1193, 1195, 1198, 1232, 1242, 1370], "mergesectionadaptor": [899, 1370], "mergesectiondefinitionadaptor": [899, 1370], "sectionadaptor": [899, 1370], "addon": 902, "num": 905, "lmbda": 906, "testcommon": [917, 1353], "test_common": [918, 1370], "test_asyncio_file_read": 918, "test_cached_properti": 918, "testgrammar": 919, "test_grammar_typ": [920, 1370], "test_is_the_same_valu": 920, "test_typ": 920, "_test_typ": 920, "connector": 922, "_": [922, 942, 1041, 1194], "subcommand": [923, 1341], "script": [923, 1303, 1304, 1371, 1378, 1379], "numbers_allow": 925, "unique_valu": [928, 1370], "value_to_class_id": 928, "distinct": [928, 1371], "criterion": 928, "from_valu": 928, "start_from": 928, "unique_index": 928, "iter_uniqu": 928, "unique_item": 928, "len_of_uniqu": 928, "len": [928, 1231, 1379], "_create_map": 928, "uniquevalu": 928, "is_equivalent_to": 928, "regardless": [928, 1007], "are_equival": 928, "is_equival": 928, "noth": [928, 1008, 1079, 1082, 1089, 1231], "mappind": 928, "equivalence_class": 928, "unique_values_map": 928, "_enriching_class": 930, "input_parameters_definit": [930, 993, 1003, 1010, 1011, 1012, 1370], "inputvaluedefinit": [930, 1009, 1011, 1370], "lengthinputvaluedefinit": 930, "default_value_from_contain": [931, 1012, 1055, 1124, 1239], "fixed_valu": [931, 1012, 1055, 1073, 1075, 1076, 1124, 1190, 1239], "init_by_default": [931, 1012, 1055, 1073, 1075, 1076, 1124, 1190, 1239], "result_is_vis": [931, 1012, 1055, 1073, 1075, 1076, 1124, 1190, 1239], "is_always_ad": [931, 1012, 1055, 1073, 1075, 1076, 1124, 1190, 1239], "anyt": [931, 1012, 1055, 1073, 1075, 1076, 1124, 1190, 1239], "alternativelli": [931, 1012, 1055, 1073, 1075, 1076, 1124, 1190, 1239], "callback": [931, 1012, 1055, 1073, 1075, 1076, 1124, 1190, 1239, 1369], "met": [931, 1012, 1055, 1073, 1075, 1076, 1124, 1190, 1239], "init": [931, 1012, 1055, 1073, 1075, 1076, 1124, 1190, 1239], "visibl": [931, 1012, 1055, 1073, 1075, 1076, 1124, 1190, 1239], "absolut": [931, 1012, 1055, 1073, 1075, 1076, 1124, 1190, 1239], "apper": [931, 1012, 1055, 1073, 1075, 1076, 1124, 1190, 1239], "dens": [931, 1012, 1055, 1073, 1075, 1076, 1124, 1190, 1239], "spars": [931, 1012, 1055, 1073, 1075, 1076, 1124, 1190, 1239], "name_value_delimit": [931, 1012, 1055, 1073, 1075, 1076, 1124, 1190, 1239], "type_from_type_map": [931, 1012, 1055, 1370], "docst": 931, "validate_typ": 931, "against": 931, "convert_and_valid": 931, "get_valu": 931, "write_nam": 931, "builtin": 931, "check_array_access": 931, "somehow": 932, "responsibil": 932, "critic": 933, "suspici": 933, "interrupt": 934, "indentdump": [936, 1370], "dumper": [936, 937], "emitt": [936, 937], "saferepresent": [936, 937], "baserepresent": [936, 937], "resolv": [936, 937, 975, 987, 1231], "baseresolv": [936, 937], "default_styl": 937, "default_flow_styl": 937, "allow_unicod": 937, "line_break": 937, "explicit_start": 937, "explicit_end": 937, "sort_kei": 937, "25108581": 937, "dump": 937, "bad": 937, "increase_ind": 937, "indentless": 937, "configfiledefinit": [938, 1370], "preferr": 938, "set_perman": 940, "doc_regex": 940, "prefer": [945, 947], "shell": [946, 975, 977, 979, 981, 983, 985, 987, 989, 991, 1379], "mpirun": [946, 1231, 1379], "sumodul": 948, "a1_fe_scf_simpl": [950, 951, 1370, 1375], "bcc": [950, 1372, 1373], "fe": [951, 954, 957, 1120, 1222, 1370, 1372, 1373], "a2_fe_scf_input_modif": [953, 954, 1370, 1375], "demonstr": [953, 959, 1372, 1373], "chage": [953, 1372, 1373], "a3_fe_do": [956, 957, 1370, 1375], "kkrscf": [956, 977, 979, 985, 991, 1010, 1101, 1372, 1373], "kkrgen": [956, 977, 979, 985, 991, 1231, 1372, 1373], "a4_cpa_exampl": [959, 960, 1370, 1375], "ni": [959, 1120, 1372, 1373], "srtio3": [959, 968, 1372, 1373], "cpa": [959, 991, 1372, 1373], "ni_doped_sto": [960, 1370], "a5_al_eo": [962, 963, 1370, 1375], "volum": [962, 1120, 1372, 1373], "equat": [962, 1258, 1372, 1373], "fite": [962, 1372, 1373], "al": [963, 1120, 1370], "a6_cu_msspec": [965, 966, 1370, 1375], "fcc": [965, 1372, 1373], "combin": [965, 968, 1231, 1372, 1373], "msspec": [965, 968, 1229, 1372, 1373], "photoelectron": [965, 968, 975, 987, 1372, 1373], "diffract": [965, 968, 1372, 1373], "commandlin": [965, 968], "cu": [966, 1120, 1370, 1372, 1373], "a7_srtio3_msspec": [968, 969, 1370, 1375], "sto": [969, 1370], "a8_arpes_and_plot": [971, 972, 1370, 1375], "arp": [972, 974, 976, 987, 1007, 1079, 1080, 1081, 1082, 1088, 1089, 1231, 1370, 1371, 1372, 1373, 1379], "inputparameterss": [974, 1009, 1187], "configurt": 974, "photoemiss": [975, 987], "spectroscopi": [975, 987, 1229], "ext": [975, 977, 979, 981, 983, 985, 987, 989, 991], "adsi": [975, 977, 979, 981, 983, 985, 987, 989, 991, 994], "fixedvalu": [975, 977, 979, 981, 983, 985, 987, 989, 991], "potfil": [975, 977, 979, 981, 983, 985, 987, 989, 991], "isn": [975, 977, 979, 981, 983, 985, 987, 989, 991], "krw": [975, 977, 979, 981, 983, 985, 987, 989, 991, 1371], "rw": [975, 977, 979, 981, 983, 985, 987, 989, 991, 1257], "muffin": [975, 977, 979, 981, 983, 985, 987, 989, 991], "tin": [975, 977, 979, 981, 983, 985, 987, 989, 991], "fullpot": [975, 977, 979, 981, 983, 985, 987, 989, 991, 1371], "krmt": [975, 977, 979, 981, 983, 985, 987, 989, 991, 1371], "anyof": [975, 977, 979, 981, 983, 985, 987, 989, 991], "rmt": [975, 977, 979, 981, 983, 985, 987, 989, 991, 1257], "d_ij": [975, 977, 979, 981, 983, 985, 987, 989, 991], "amount": [975, 977, 979, 981, 983, 985, 987, 989, 991], "nonmag": [975, 977, 979, 981, 983, 985, 987, 989, 991], "tau": [975, 977, 979, 981, 983, 985, 987, 989, 991, 1003, 1379], "bzint": [975, 977, 979, 981, 983, 985, 987, 989, 991], "weyl": [975, 977, 979, 981, 983, 985, 987, 989, 991], "ran": [975, 977, 979, 981, 983, 985, 987, 989, 991], "dom": [975, 977, 979, 981, 983, 985, 987, 989, 991], "vari": [975, 977, 979, 981, 983, 985, 987, 989, 991, 1258], "quadrat": [975, 977, 979, 981, 983, 985, 987, 989, 991], "tween": [975, 977, 979, 981, 983, 985, 987, 989, 991], "imaginari": [975, 977, 979, 981, 983, 985, 987, 989, 991], "compromis": [975, 977, 979, 981, 983, 985, 987, 989, 991], "concern": [975, 977, 979, 981, 983, 985, 987, 989, 991], "accuraci": [975, 977, 979, 981, 983, 985, 987, 989, 991], "effici": [975, 977, 979, 981, 983, 985, 987, 989, 991], "adjust": [975, 977, 979, 981, 983, 985, 987, 989, 991], "mesh": [975, 977, 979, 981, 983, 985, 987, 989, 991, 1142, 1150, 1154, 1155, 1163, 1176, 1180, 1195, 1197, 1199, 1222, 1246, 1251, 1253, 1254, 1255, 1256, 1257, 1263, 1264, 1266, 1370], "\u03c4": [975, 977, 979, 981, 983, 985, 987, 989, 991], "250": [975, 977, 979, 981, 983, 985, 989, 991], "nktab2d": [975, 977, 979, 981, 983, 985, 987, 989, 991], "region": [975, 977, 979, 981, 983, 985, 987, 989, 991, 1223, 1224, 1226, 1227, 1266], "nktab3d": [975, 977, 979, 981, 983, 985, 987, 989, 991], "nkmin": [975, 977, 979, 981, 983, 985, 987, 989, 991], "300": [975, 977, 979, 981, 983, 985, 987, 989, 991, 1118], "nkmax": [975, 977, 979, 981, 983, 985, 987, 989, 991], "500": [975, 977, 979, 981, 983, 985, 987, 989, 991], "cluster": [975, 977, 979, 981, 983, 985, 987, 989, 991, 1231, 1379], "nshlclu": [975, 977, 979, 981, 983, 985, 987, 989, 991], "clurad": [975, 977, 979, 981, 983, 985, 987, 989, 991], "alat": [975, 977, 979, 981, 983, 985, 987, 989, 991], "iqcntr": [975, 977, 979, 981, 983, 985, 987, 989, 991], "basi": [975, 977, 979, 981, 983, 985, 987, 989, 991, 1258], "itcntr": [975, 977, 979, 981, 983, 985, 987, 989, 991], "atomictyp": [975, 977, 979, 981, 983, 985, 987, 989, 991, 1184, 1221, 1251, 1264, 1267, 1370], "occupi": [975, 977, 979, 981, 983, 985, 987, 989, 991], "nlout": [975, 977, 979, 981, 983, 985, 987, 989, 991], "lmax": [975, 977, 979, 981, 983, 985, 987, 989, 991], "mol": [975, 977, 979, 981, 983, 985, 987, 989, 991], "eminev": [975, 987], "window": [975, 987, 1358], "emaxev": [975, 987], "ework_ev": [975, 987], "inner": [975, 987], "imv_ini_ev": [975, 987], "imv_fin_ev": [975, 987], "nl": [975, 977, 979, 981, 983, 985, 987, 991], "angula": [975, 977, 979, 981, 983, 985, 987, 991], "cutoff": [975, 977, 979, 981, 983, 985, 987, 991], "discard": [975, 977, 979, 981, 983, 985, 987, 991], "aip": [975, 987], "spleed": [975, 987], "leed": [975, 987], "experiment": [975, 987, 1371], "iq_at_surf": [975, 987], "miller_hkl": [975, 987], "crys_vec": [975, 987], "miller": [975, 987, 1226], "crystalograph": [975, 987, 1115], "strver": [975, 987], "struc": [975, 987], "inpver": [975, 987], "rslab": [975, 987], "spec_ph": [975, 987], "photon": [975, 987], "azimuth": [975, 987], "pol_p": [975, 987], "light": [975, 977, 979, 985, 987, 991], "ephot": [975, 987], "alq": [975, 987], "align": [975, 987], "pol": [975, 987], "ellipsi": [975, 987], "delq": [975, 987], "90": [975, 987, 1118], "circular": [975, 987], "npol": [975, 987], "unpolar": [975, 987], "dichroism": [975, 987], "rcp": [975, 987], "ellipt": [975, 987], "icirc": [975, 987], "lcp": [975, 987], "ddad": [975, 987], "ldad": [975, 987], "arbitrari": [975, 977, 979, 985, 987, 991, 1258], "idreh": [975, 987], "linearli": [975, 987], "right": [975, 987, 1226], "helic": [975, 987], "ifsp": [975, 987], "theta_fix": [975, 987], "spec_el": [975, 987], "nt": [975, 987], "ka": [975, 977, 987], "scater": [975, 987], "k1": [975, 979, 987], "nk1": [975, 979, 987], "k2": [975, 979, 987], "nk2": [975, 979, 987], "k3": [975, 987], "nk3": [975, 987], "k4": [975, 987], "nk4": [975, 987], "pol_": [975, 987], "pz": [975, 987], "spol": [975, 987], "pspin": [975, 987], "beta1": [975, 987, 1375], "beta2": [975, 987, 1375], "rotaxi": [975, 987], "typ": [975, 987, 1159, 1195], "diagram": [975, 987], "scan": [975, 987], "orthonorm": [975, 987], "stereograph": [975, 987], "pe": [975, 987], "xp": [975, 987], "nx": [975, 987], "ny": [975, 987], "coordinat": [975, 987], "splout": [975, 987], "xpsrun": [975, 987], "upsrun": [975, 987], "istr": [975, 987], "beam": [975, 987], "pol0": [975, 987], "pol0l": [975, 987], "laboratori": [975, 987], "q1": [975, 987], "0j": [975, 987], "amplitud": [975, 987], "q2": [975, 987], "q3": [975, 987], "q4": [975, 987], "spec_str": [975, 987], "n_laydbl": [975, 987], "nlat_g_vec": [975, 987], "57": [975, 987, 1118, 1120], "n_layer": [975, 987], "50": [975, 987, 1118], "surf_bar": [975, 987], "transp_bar": [975, 987], "bloch": [977, 979, 1036], "spectral": [977, 979, 1036], "blochsf": [977, 979], "bsf": [977, 979, 1032, 1035, 1036, 1037, 1050, 1082, 1083, 1370, 1371], "kpath": 977, "nkdir": 977, "segment": [977, 1258], "2\u03c0": 977, "rectangular": 977, "ke": 977, "lowest": [977, 979, 981, 985, 989, 991], "highest": [977, 979], "nrel": [977, 979, 985, 991], "srel": [977, 979, 985, 991], "nonrelativist": [977, 979, 985, 991], "relativist": [977, 979, 985, 991], "frel": [977, 979, 985, 991], "lloyd": [977, 979, 985, 991], "improv": [977, 979, 985, 991, 1371], "mdir": [977, 979, 985, 991, 1371], "magnetis": [977, 979, 985, 991], "normalis": [977, 979, 985, 991], "strength": [977, 979, 985, 991], "program": [977, 979, 985, 991, 1375], "fulli": [977, 979, 985, 991, 1266, 1276, 1371], "strconst": [977, 979, 985, 991], "ewald": [977, 979, 985, 991], "rmax": [977, 979, 985, 991], "gmax": [977, 979, 985, 991], "reciproc": [977, 979, 985, 991], "respec": [977, 979, 985, 991], "tive": [977, 979, 985, 991], "optimis": [977, 979, 985, 991], "anew": [977, 979, 985, 991], "via": [977, 979, 985, 991, 1231, 1379], "necesseri": [977, 979, 985, 991], "bsfek": [978, 1007, 1370], "jxc": [978, 980, 986, 1007, 1024, 1370, 1371], "\ufb01rst": 979, "span": 979, "bsfkk": [980, 1007, 1370], "damp": [983, 984], "ntmp": 983, "temperatur": 983, "\u03b1": 983, "setfluct": 983, "mlin": 983, "m_t": 983, "account": 983, "vibrat": 983, "nftet": 983, "nfphi": 983, "nvibra": 983, "bigger": 983, "fluctuat": 983, "thermal": 983, "tmpmin": 983, "setlfunc": 983, "tmpmax": 983, "fluctfil": 983, "\ufb01le": 983, "magnetizst": 983, "experi": 983, "mont": 983, "carlo": 983, "\u03b8": 983, "\u03c6": 983, "gilbert": [984, 1007, 1370, 1371], "555": 987, "marp": [988, 1007, 1370], "mixop": [989, 991], "vxc": [989, 991], "vwn": [989, 991], "mjw": [989, 991], "vbh": [989, 991], "pw92": [989, 991], "gga": [989, 991], "bj": [989, 991], "mbj": [989, 991], "vosko": [989, 991], "wilk": [989, 991], "nusair": [989, 991], "libxc": [989, 991], "lda_c_vwn": [989, 991], "janak": [989, 991], "william": [989, 991], "moruzzigit": [989, 991], "von": [989, 991], "barth": [989, 991], "hedin": [989, 991], "lda_c_vbh": [989, 991], "perdew": [989, 991], "burk": [989, 991], "ernzendorf": [989, 991], "gga_x_pb": [989, 991], "wang": [989, 991], "gga_x_pw91": [989, 991], "engel": [989, 991], "gga_x_ev93": [989, 991], "beck": [989, 991], "johnson": [989, 991], "metagga": [989, 991], "mgga_x_bj06": [989, 991], "parametris": [989, 991], "alg": [989, 991], "broyden2": [989, 991], "tchebi": [989, 991], "broyden": [989, 991], "tchebychev": [989, 991], "efguess": [989, 991], "tol": [989, 991], "istbri": [989, 991], "spheric": [989, 991], "callcul": [989, 991], "asa": [989, 991], "itdept": [989, 991], "depth": [989, 991], "histori": [989, 991], "qion": [989, 991], "ionic": [989, 991], "qt": [989, 991], "qionscl": [989, 991], "mspin": [989, 991], "\u03bc_": [989, 991], "usevmatt": [989, 991], "mattheissconstruct": [989, 991], "meaningful": 989, "phagen": [990, 1007, 1231, 1370, 1379], "0001": 991, "disord": 991, "tausect": 993, "inputsectiondefinit": [993, 994, 1001, 1003, 1009, 1010, 1370], "configurationsectiondefinit": [993, 1003, 1009, 1011, 1132, 1134, 1137, 1139, 1141, 1143, 1145, 1147, 1149, 1151, 1153, 1155, 1157, 1160, 1162, 1164, 1166, 1168, 1171, 1173, 1175, 1177, 1179, 1181, 1183, 1185, 1187, 1188, 1189, 1232, 1370], "io_data": [1003, 1123, 1172, 1199, 1201, 1237, 1238, 1241, 1244, 1245, 1246, 1247, 1268, 1269, 1370], "xd": 1003, "_copy_arg": [1003, 1010, 1011, 1012], "_member": [1003, 1010, 1011], "configurationfil": [1006, 1007, 1029, 1031, 1032, 1034, 1036, 1038, 1041, 1043, 1045, 1047, 1049, 1050, 1200, 1201, 1232, 1370], "configurationsectiontrait": [1006, 1007, 1008, 1029, 1031, 1032, 1034, 1036, 1038, 1041, 1043, 1045, 1047, 1049, 1050, 1132, 1133, 1135, 1137, 1138, 1141, 1142, 1145, 1146, 1149, 1150, 1153, 1154, 1157, 1158, 1159, 1162, 1163, 1166, 1167, 1169, 1171, 1172, 1175, 1176, 1179, 1180, 1183, 1184, 1193, 1194, 1195, 1196, 1198, 1199, 1200, 1201, 1232, 1233, 1235, 1240, 1242, 1370], "inputsect": [1006, 1011, 1370], "configurationsect": [1006, 1008, 1132, 1133, 1137, 1138, 1141, 1142, 1145, 1146, 1149, 1150, 1153, 1154, 1157, 1158, 1162, 1163, 1166, 1167, 1171, 1172, 1175, 1176, 1179, 1180, 1183, 1184, 1193, 1194, 1196, 1199, 1232, 1236, 1370], "inputfil": 1007, "outputfil": [1007, 1029, 1047, 1054, 1370], "resolve_executable_suffix": 1007, "suffix": [1007, 1231, 1379], "sprkkr_executable_suffix": [1007, 1231, 1379], "env": 1007, "user_defined_valu": 1007, "inputparametersdefinit": [1007, 1009, 1370], "is_mpi": 1007, "mpi_runn": [1007, 1370], "run_process": 1007, "executable_suffix": [1007, 1231, 1371], "executable_dir": [1007, 1231], "gdb": [1007, 1231], "paamet": 1007, "binari": 1007, "infrom": 1007, "postfixi": 1007, "result_read": [1007, 1010], "ruther": 1007, "read_output_from_fil": 1007, "executable_param": 1007, "stdin": 1007, "popen": 1007, "set_opt": 1007, "definition_modul": 1007, "skola": [1007, 1032, 1050], "is_it_an_input_parameters_nam": 1007, "create_input_paramet": 1007, "from_fil": [1007, 1032, 1050, 1101, 1201, 1379], "fullfil": 1007, "change_task": [1007, 1024, 1231, 1371], "configurationfiledefinit": [1009, 1010, 1034, 1035, 1038, 1040, 1043, 1044, 1052, 1054, 1187, 1191, 1232, 1370], "configurationvaluedefinit": [1009, 1012, 1052, 1055, 1122, 1124, 1187, 1190, 1232, 1370], "simlilar": [1009, 1187], "share": [1009, 1187, 1222, 1264, 1266, 1342, 1370, 1371, 1378, 1379], "save_hook": 1010, "child_class": [1010, 1011, 1054, 1074, 1189, 1191], "custom_class": [1010, 1011, 1054, 1074, 1189, 1191], "grammar_of_delimit": [1010, 1011, 1012, 1054, 1055, 1074, 1075, 1076, 1126, 1189, 1190, 1191], "printabl": 1010, "custom_value_grammar": [1010, 1191], "ouptut": [1011, 1054, 1074, 1189], "wordstart": [1011, 1074, 1075], "type_of_danger": [1012, 1055, 1190], "testdefinit": 1023, "test_definit": [1024, 1370], "test_default": 1024, "testinputparamet": 1025, "test_input_paramet": [1026, 1027, 1370], "assertpars": 1026, "assertnotvalid": 1026, "test_section_delimiter_valu": 1026, "test_custom_valu": 1026, "test_dangerous_valu": 1026, "test_write_condit": 1026, "test_input_parameters_definit": 1026, "test_set_valu": 1026, "test_repeated_valu": 1026, "test_sparse_numb": 1026, "test_gath": 1026, "test_numpy_arrai": 1026, "test_copi": 1026, "test_length": 1026, "test_switch": 1026, "arithmet": [1029, 1034, 1036, 1038, 1039, 1043, 1045, 1047, 1370, 1371], "commonoutputfil": [1029, 1034, 1036, 1038, 1041, 1043, 1045, 1047, 1370], "unknowndatavalu": [1029, 1047, 1370], "configurationvalu": [1029, 1033, 1047, 1051, 1232, 1239, 1370], "_check_arithmet": [1030, 1039, 1048], "_do_arithmet": [1030, 1039, 1048], "summabl": [1030, 1039, 1048], "subtract": [1030, 1039, 1048], "n_atom": [1031, 1049], "n_type": [1031, 1049], "site_type_index": [1031, 1049], "n_orbit": [1031, 1049], "unknown_output_file_definit": [1032, 1050], "spc": [1032, 1044, 1045, 1046, 1050, 1079, 1080, 1082, 1089, 1370, 1371], "first_tri": [1032, 1050], "try_onli": [1032, 1050], "certain": [1032, 1050], "extens": [1032, 1050], "as_arrai": [1033, 1051], "bsfdefinit": 1034, "output_files_definit": [1034, 1035, 1038, 1040, 1043, 1044, 1053, 1054, 1055, 1056, 1057, 1058, 1370], "outputfiledefinit": [1034, 1035, 1038, 1040, 1043, 1044, 1052, 1057, 1370], "bsfoutputfil": [1034, 1035], "layout": [1036, 1041, 1045, 1358], "latex": [1036, 1041, 1045, 1358, 1364, 1369], "600": [1036, 1041, 1045, 1358, 1365, 1369], "_arithmetic_valu": [1036, 1045], "raw_data": [1036, 1045], "_assert_arithmet": [1036, 1045], "subtrack": [1036, 1045], "dosdefinit": 1038, "dosoutputfil": [1038, 1040], "legend_ncol": 1039, "legend_height": 1039, "legend_fonts": 1039, "_clear_comput": 1041, "total_do": 1041, "ll": 1041, "_resolve_spin": 1041, "iterate_data_slic": 1041, "iterate_do": 1041, "index_of_dos_for_site_typ": 1041, "dos_for_site_typ": 1041, "_create_do": 1041, "n_orbitals_for": 1041, "record": 1041, "n_spin": 1041, "arpesdefinit": 1043, "arpesoutputfil": [1043, 1044], "outputfilevaluedefinit": [1052, 1054, 1370], "doublecross": [1054, 1192], "potmix": [1055, 1190], "One": [1057, 1367], "testoutput": [1069, 1112], "test_fil": [1070, 1370], "test_output": [1070, 1113, 1370], "outputnonamevaluedefinit": [1072, 1370], "outputvaluedefinit": [1072, 1073, 1074, 1076, 1370], "outputsectiondefinit": [1072, 1370], "outputvalueequaldefinit": [1072, 1370], "although": 1072, "approach": 1072, "arpesprocess": 1078, "task_result": [1078, 1079, 1080, 1081, 1082, 1083, 1084, 1086, 1087, 1088, 1089, 1090, 1091, 1094, 1095, 1100, 1101, 1370], "kkrprocess": [1078, 1079, 1081, 1082, 1084, 1086, 1088, 1089, 1091, 1094, 1099, 1370], "arpesresult": [1078, 1079], "acc": [1079, 1082, 1089], "reader_class": [1079, 1082, 1086, 1089, 1094, 1100], "defaultoutputread": [1079, 1082, 1084, 1086, 1089], "spc_filenam": 1080, "bsfprocess": 1081, "bsfresult": [1081, 1082], "bsf_filenam": 1083, "sprkkr_output_read": [1084, 1085, 1091, 1093, 1098, 1370], "sprkkroutputread": [1084, 1085, 1091, 1093, 1097, 1370], "defaultprocess": 1084, "defaultresult": [1084, 1086], "dosprocess": 1088, "dosresult": [1088, 1089], "dos_filenam": 1090, "realorstar": 1091, "scfoutputread": [1091, 1094, 1378], "scfprocess": 1091, "scfresult": [1091, 1094, 1379], "nan": [1092, 1258], "hopefulli": 1095, "potential_filenam": [1095, 1101, 1231, 1379], "start_potential_filenam": 1095, "start_potenti": 1095, "coverg": 1095, "iteration_valu": 1095, "last_iter": [1095, 1379], "logscal": 1095, "err": 1095, "render": 1095, "screen": 1095, "read_common": 1098, "wich": 1100, "_wrap": 1100, "fn": [1100, 1369], "class_for_task": 1100, "path_to": 1101, "input_parameters_fil": 1101, "new_task": 1101, "_match_task_regex": 1101, "test_scf": 1113, "geometri": [1114, 1150, 1266], "latticedata": [1115, 1370, 1371], "pearson": [1115, 1370], "classif": 1115, "lattice_data": [1116, 1117, 1118, 1370], "bravais_numb": [1116, 1117], "shoenflies_symbol": 1116, "pearson_symbol": 1117, "famili": 1117, "centering_typ": 1117, "herman_mauguin": 1117, "shoenfli": 1117, "xband_data": 1117, "sysfil": [1117, 1276, 1277, 1370], "from_symbol": 1117, "normalize_symbol": 1117, "ap": 1117, "triclin": 1117, "cf": [1117, 1120], "cubic": [1117, 1258], "face": 1117, "m3m": 1117, "o_h": 1117, "ci": 1117, "bodi": 1117, "cp": 1117, "hp": 1117, "hexagon": 1117, "mmm": 1117, "d_6h": 1117, "hr": 1117, "trigon": 1117, "3m": 1117, "d_3d": 1117, "mp": 1117, "monoclin": 1117, "c_2h": 1117, "oF": 1117, "orthoromb": 1117, "d_2h": 1117, "oi": 1117, "op": 1117, "ti": [1117, 1120], "tetragon": 1117, "d_4h": 1117, "tp": 1117, "27": [1118, 1120], "39": [1118, 1120], "73": [1118, 1120], "17": [1118, 1120, 1379], "74": 1118, "77": [1118, 1120], "19": 1118, "80": 1118, "81": [1118, 1120], "84": [1118, 1120], "87": 1118, "88": [1118, 1120], "89": [1118, 1120], "93": [1118, 1120], "99": [1118, 1120], "102": 1118, "29": 1118, "108": 1118, "30": 1118, "114": 1118, "120": 1118, "126": 1118, "129": 1118, "135": 1118, "138": 1118, "145": 1118, "37": [1118, 1120], "147": 1118, "38": 1118, "150": 1118, "156": 1118, "162": 1118, "168": 1118, "174": 1118, "177": 1118, "180": 1118, "183": 1118, "186": 1118, "47": 1118, "192": 1118, "193": 1118, "49": 1118, "195": 1118, "198": 1118, "204": 1118, "210": 1118, "216": 1118, "222": 1118, "228": 1118, "231": 1118, "234": 1118, "58": 1118, "240": 1118, "59": 1118, "247": 1118, "60": 1118, "249": 1118, "255": 1118, "257": 1118, "263": 1118, "269": 1118, "275": 1118, "278": 1118, "67": [1118, 1120], "281": 1118, "68": 1118, "287": 1118, "69": 1118, "299": 1118, "71": [1118, 1120], "302": 1118, "72": 1118, "303": 1118, "306": 1118, "308": 1118, "75": [1118, 1120], "314": 1118, "76": [1118, 1120], "315": 1118, "316": 1118, "78": [1118, 1120], "317": 1118, "318": 1118, "319": 1118, "320": 1118, "82": [1118, 1120], "321": 1118, "83": [1118, 1120], "322": 1118, "323": 1118, "85": [1118, 1120], "324": 1118, "86": [1118, 1120], "326": 1118, "328": 1118, "329": 1118, "331": 1118, "332": 1118, "333": 1118, "92": 1118, "334": 1118, "335": 1118, "94": [1118, 1120], "336": 1118, "95": [1118, 1120], "337": 1118, "96": [1118, 1120], "338": 1118, "97": 1118, "339": 1118, "98": [1118, 1120], "340": 1118, "341": 1118, "342": 1118, "101": 1118, "343": 1118, "344": 1118, "103": 1118, "345": 1118, "104": 1118, "346": 1118, "105": 1118, "347": 1118, "106": 1118, "348": 1118, "107": 1118, "349": 1118, "350": 1118, "109": 1118, "351": 1118, "110": 1118, "352": 1118, "111": 1118, "353": 1118, "112": 1118, "354": 1118, "113": 1118, "355": 1118, "356": 1118, "115": 1118, "357": 1118, "116": 1118, "358": 1118, "117": 1118, "359": 1118, "118": 1118, "360": 1118, "119": 1118, "361": 1118, "362": 1118, "121": 1118, "363": 1118, "122": 1118, "364": 1118, "123": 1118, "365": 1118, "124": 1118, "366": 1118, "125": 1118, "368": 1118, "370": 1118, "127": 1118, "371": 1118, "128": 1118, "372": 1118, "374": 1118, "130": 1118, "376": 1118, "131": 1118, "377": 1118, "132": 1118, "378": 1118, "133": 1118, "380": 1118, "134": 1118, "382": 1118, "383": 1118, "136": 1118, "384": 1118, "137": 1118, "386": 1118, "388": 1118, "139": 1118, "389": 1118, "140": 1118, "390": 1118, "141": 1118, "392": 1118, "142": 1118, "394": 1118, "143": 1118, "396": 1118, "144": 1118, "398": 1118, "400": 1118, "146": 1118, "401": 1118, "404": 1118, "148": 1118, "405": 1118, "149": 1118, "407": 1118, "408": 1118, "151": 1118, "409": 1118, "152": 1118, "410": 1118, "153": 1118, "411": 1118, "154": 1118, "412": 1118, "155": 1118, "414": 1118, "415": 1118, "157": 1118, "416": 1118, "158": 1118, "417": 1118, "159": 1118, "418": 1118, "160": 1118, "419": 1118, "161": 1118, "422": 1118, "423": 1118, "163": 1118, "424": 1118, "164": 1118, "425": 1118, "165": 1118, "426": 1118, "166": 1118, "428": 1118, "167": 1118, "430": 1118, "431": 1118, "169": 1118, "432": 1118, "170": 1118, "433": 1118, "171": 1118, "434": 1118, "172": 1118, "435": 1118, "173": 1118, "436": 1118, "437": 1118, "175": 1118, "438": 1118, "176": 1118, "439": 1118, "440": 1118, "178": 1118, "441": 1118, "179": 1118, "442": 1118, "443": 1118, "181": 1118, "444": 1118, "182": 1118, "445": 1118, "446": 1118, "184": 1118, "447": 1118, "185": 1118, "448": 1118, "449": 1118, "187": 1118, "450": 1118, "188": 1118, "451": 1118, "189": 1118, "452": 1118, "190": 1118, "453": 1118, "191": 1118, "454": 1118, "455": 1118, "456": 1118, "194": 1118, "457": 1118, "458": 1118, "196": 1118, "459": 1118, "197": 1118, "460": 1118, "461": 1118, "199": 1118, "462": 1118, "463": 1118, "201": 1118, "465": 1118, "202": 1118, "466": 1118, "203": 1118, "468": 1118, "469": 1118, "205": 1118, "470": 1118, "206": 1118, "471": 1118, "207": 1118, "472": 1118, "208": 1118, "473": 1118, "209": 1118, "474": 1118, "475": 1118, "211": 1118, "476": 1118, "212": 1118, "477": 1118, "213": 1118, "478": 1118, "214": 1118, "479": 1118, "215": 1118, "480": 1118, "481": 1118, "217": 1118, "482": 1118, "218": 1118, "483": 1118, "219": 1118, "484": 1118, "220": 1118, "485": 1118, "221": 1118, "486": 1118, "488": 1118, "223": 1118, "489": 1118, "224": 1118, "491": 1118, "225": 1118, "492": 1118, "226": 1118, "493": 1118, "227": 1118, "494": 1118, "229": 1118, "498": 1118, "230": 1118, "499": 1118, "perlov": 1118, "ac": 1120, "ag": 1120, "am": 1120, "At": 1120, "au": 1120, "ba": 1120, "Be": 1120, "bi": 1120, "bk": 1120, "br": [1120, 1379], "ca": 1120, "ce": 1120, "co": [1120, 1258], "cr": 1120, "dy": [1120, 1258], "er": 1120, "fm": 1120, "fr": 1120, "ge": 1120, "he": 1120, "hf": 1120, "hg": 1120, "ho": 1120, "ir": 1120, "kr": 1120, "la": 1120, "li": [1120, 1379], "04": 1120, "lu": 1120, "mg": [1120, 1370], "mn": 1120, "mo": 1120, "na": 1120, "03": 1120, "02": 1120, "pb": 1120, "14351193885013": 1120, "pd": 1120, "pm": 1120, "po": 1120, "pr": 1120, "pu": 1120, "ra": 1120, "rb": 1120, "rh": 1120, "rn": 1120, "ru": 1120, "sb": 1120, "se": 1120, "sm": 1120, "sn": 1120, "sr": 1120, "ta": 1120, "tb": 1120, "tc": 1120, "tm": 1120, "vc": 1120, "xe": 1120, "yb": 1120, "zn": 1120, "zr": [1120, 1254], "custompotentialsect": [1122, 1191, 1370], "customconfigurationvalu": [1122, 1123, 1232, 1370], "custompotentialsectiondefinit": [1122, 1370], "customsectiontoken": [1122, 1370], "sectionstr": [1122, 1370], "custom_potential_sect": [1123, 1124, 1125, 1126, 1370], "_depends_on": [1123, 1176, 1180, 1194, 1195, 1197], "_set_from_atom": [1123, 1142, 1150, 1163, 1172, 1176, 1180, 1194, 1195, 1197, 1199, 1237, 1238, 1239, 1241], "_update_atom": [1123, 1150, 1163, 1176, 1180, 1194, 1195, 1197, 1199, 1251], "mandatori": [1124, 1134, 1139, 1143, 1147, 1151, 1155, 1160, 1164, 1168, 1173, 1177, 1181, 1185, 1188, 1189, 1194], "obvious": 1124, "let": [1125, 1378], "dotal": 1125, "endofsect": [1125, 1126], "delimiter_pattern": 1126, "potentialdefinit": [1129, 1187, 1201, 1370], "chargesect": [1132, 1134], "potential_sect": [1132, 1133, 1135, 1137, 1138, 1141, 1142, 1145, 1146, 1149, 1150, 1153, 1154, 1157, 1158, 1159, 1162, 1163, 1166, 1167, 1169, 1171, 1172, 1175, 1176, 1179, 1180, 1183, 1184, 1194, 1195, 1196, 1197, 1198, 1199, 1370], "potentialsect": [1132, 1133, 1137, 1138, 1141, 1142, 1145, 1146, 1149, 1150, 1153, 1154, 1157, 1158, 1162, 1163, 1166, 1168, 1171, 1172, 1175, 1176, 1179, 1180, 1183, 1184, 1189, 1193, 1194, 1199, 1370], "potentialsectiontrait": [1132, 1133, 1135, 1137, 1138, 1141, 1142, 1145, 1146, 1149, 1150, 1153, 1154, 1157, 1158, 1159, 1162, 1163, 1166, 1167, 1169, 1171, 1172, 1175, 1176, 1179, 1180, 1183, 1184, 1193, 1194, 1195, 1196, 1198, 1199, 1370], "chargesectiondefinit": [1132, 1136], "potential_definit": [1132, 1134, 1137, 1139, 1141, 1143, 1145, 1147, 1149, 1151, 1153, 1155, 1157, 1160, 1162, 1164, 1166, 1168, 1171, 1173, 1175, 1177, 1179, 1181, 1183, 1185, 1188, 1189, 1190, 1191, 1192, 1201, 1370, 1378], "potsectiondefinit": [1132, 1134, 1137, 1139, 1141, 1143, 1145, 1147, 1149, 1151, 1153, 1155, 1157, 1160, 1162, 1164, 1166, 1168, 1171, 1173, 1175, 1177, 1179, 1181, 1183, 1185, 1187, 1188, 1191, 1370], "chargessect": [1132, 1134], "atomictypepotentialsect": [1132, 1135, 1157, 1159, 1166, 1169, 1193, 1370], "repeatedconfigurationsect": [1132, 1135, 1157, 1159, 1166, 1169, 1193, 1195, 1198, 1232, 1370], "property_nam": [1135, 1159, 1169], "property_label": [1135, 1169, 1195], "radial": [1135, 1169, 1222, 1253, 1254, 1255, 1256, 1257, 1258, 1264, 1370], "chargemomentssect": [1137, 1139], "asearraysect": [1137, 1138, 1145, 1146, 1188, 1193, 1370], "chargemomentssectiondefinit": [1137, 1140], "charge_mo": [1138, 1139, 1140], "array_nam": [1139, 1147, 1188, 1194], "globalsystemparamet": [1141, 1143], "globalsystemparameterdefinit": [1141, 1144], "global_system_paramet": [1142, 1143, 1144, 1379], "write_io_data": [1142, 1150, 1154, 1163, 1172, 1176, 1180, 1184, 1195, 1197, 1199], "writeiodata": [1142, 1150, 1163, 1176, 1180, 1195, 1197, 1199, 1201, 1237, 1238, 1241, 1243, 1370], "hostmadelungpotentialsect": [1145, 1147], "hostmadelungpotentialsectiondefinit": [1145, 1148], "host_madelung_potenti": [1146, 1147, 1148], "host": [1147, 1371], "madelung": [1147, 1371], "latticesect": [1149, 1151], "latticesectiondefinit": [1149, 1152], "read_io_data": [1150, 1163, 1176, 1180, 1195, 1197, 1199], "readiodata": [1150, 1163, 1176, 1180, 1195, 1197, 1199, 1243, 1370], "mechan": [1150, 1163, 1176, 1180, 1195, 1197], "testabl": [1150, 1163, 1176, 1180, 1195, 1197], "obejct": [1150, 1163, 1176, 1180, 1195, 1197], "adapt": [1150, 1163, 1176, 1180, 1195, 1197], "meshinformationsect": [1153, 1155], "uniquelistsect": [1153, 1154, 1171, 1172, 1183, 1184, 1193, 1370], "meshinformationsectiondefinit": [1153, 1156], "mesh_inform": [1154, 1155, 1156], "_value_nam": [1154, 1172, 1184, 1199], "_value_class": [1154, 1172, 1184, 1199], "exponentialmesh": [1154, 1256, 1264, 1370], "momentsect": [1157, 1160], "momentssect": [1157, 1160], "momentssectiondefinit": [1157, 1161], "write_data": [1159, 1195], "occupationsect": [1162, 1164], "occupationsectiondefinit": [1162, 1165], "prerequisit": [1164, 1176, 1180, 1189, 1195, 1197], "potentialsectiondefinit": [1166, 1170], "potentialssect": [1166, 1168], "referencesystemsect": [1171, 1173], "referencesystemsectiondefinit": [1171, 1174], "reference_system": [1172, 1173, 1174, 1246, 1261, 1263, 1264, 1370], "referencesystem": [1172, 1260, 1264, 1370], "FOR": 1173, "tight": 1173, "scfinfosect": [1175, 1177], "scfinfosectiondefinit": [1175, 1178], "scf_info": [1176, 1177, 1178], "sitessect": [1179, 1181], "sitessectiondefinit": [1179, 1182], "typessect": [1183, 1185], "typessectiondefinit": [1183, 1186], "asearraysectiondefinit": [1187, 1370], "potvaluedefinit": [1187, 1189, 1370], "setarrai": 1188, "repeatedpotentialsect": [1193, 1370], "accordingli": [1194, 1199, 1378, 1379], "_has_data": 1195, "read_data": 1195, "trait": 1197, "self_value_class": 1199, "from_tupl": 1199, "being": 1201, "make_complet": 1201, "update_atom": [1201, 1245, 1251, 1264], "frozen": [1201, 1237], "from_str": 1201, "test2dpotenti": 1212, "test_2d": [1213, 1217, 1293, 1370], "testcustomsect": 1214, "test_custom_sect": [1215, 1370], "assertnon": 1215, "testpotenti": 1216, "test_potenti": [1217, 1298, 1370], "test_grammar": 1217, "test_potential_data": 1217, "test_exampl": 1217, "test_sequ": 1217, "test_reset": 1217, "teststructur": 1218, "test_structur": [1219, 1370], "test_lattic": 1219, "atomic_typ": [1222, 1251, 1263, 1264, 1370], "n_core": 1222, "n_valenc": 1222, "n_semicor": 1222, "n_electron": 1222, "pseudoel": 1222, "attempt": 1222, "parti": 1222, "semicor": [1222, 1266], "_mendeleev_modul": 1222, "to_atomic_typ": 1222, "for_mesh": [1222, 1251, 1255], "mendeleev": 1222, "_check_n_electron": 1222, "_clear_symbol_cach": 1222, "to_tupl": [1222, 1251, 1257, 1261], "is_vacuum": [1222, 1263, 1264], "remesh": [1222, 1251, 1263, 1264], "has_converged_data": [1222, 1246], "atomsregion": [1223, 1370], "atoms_region": [1224, 1370], "inherit_cel": [1224, 1227], "__": 1224, "___________________": 1224, "spatial": [1224, 1264, 1266], "peridod": 1224, "_clear_cach": 1224, "set_atom": 1224, "create_atom": 1224, "shared_ids_with": 1224, "set_of_id": 1224, "only_vacuum_atom": 1224, "hkl": 1226, "hkl2": 1226, "pseudo": 1226, "outer": 1226, "complement": 1226, "filenametempl": [1229, 1231, 1370], "understood": 1229, "olymp": 1229, "cup": 1229, "muenchen": 1229, "php": 1229, "com_cont": 1229, "articl": 1229, "3asprkkr": 1229, "catid": 1229, "3asoftwar": 1229, "itemid": 1229, "lang": 1229, "en": [1229, 1378], "rememb": 1230, "easier": 1231, "dto": 1231, "calculator_paramet": 1231, "runner": [1231, 1379], "save_input": [1231, 1371, 1379], "slash": [1231, 1379], "hostnam": [1231, 1379], "exacut": 1231, "add_empty_spher": [1231, 1370], "pathnam": 1231, "tak": 1231, "inputpamat": 1231, "bewar": 1231, "option_nam": 1231, "sought": [1231, 1258], "ambigu": 1231, "_advance_count": 1231, "advanc": [1231, 1379], "_open_fil": 1231, "allow_temporari": 1231, "create_subdir": 1231, "unchang": 1231, "filema": 1231, "return_fil": 1231, "later": [1231, 1245, 1379], "calcualtor": 1231, "input_filenam": 1231, "output_filenam": 1231, "executable_postifx": 1231, "contructor": 1231, "value_or_default": 1231, "system_chang": 1231, "initial_charg": 1231, "wiki": 1231, "fysik": 1231, "dtu": 1231, "dk": 1231, "insert": 1231, "shown": 1231, "kkrspec": 1231, "kkrch": 1231, "run_xband": 1231, "copy_with_potenti": 1231, "potential_object": 1231, "customconfigurationsect": [1232, 1370], "node": [1234, 1378], "non_underscor": 1237, "reli": 1239, "underli": [1239, 1251], "baseiodata": [1243, 1245, 1246, 1370], "iodata": 1243, "serv": 1243, "storag": 1243, "apply_on_atom": 1245, "handler": 1245, "replai": 1245, "while": [1246, 1266, 1378, 1379], "qel": 1249, "nos": 1249, "smt": 1249, "omt": 1249, "hff": 1249, "as_tupl": 1249, "alloi": 1251, "sitetyp": [1251, 1262, 1263, 1370, 1371], "_occup": 1251, "to_occup": 1251, "_find_kei": 1251, "identif": 1251, "orderd": 1251, "replace_typ": 1251, "primary_atomic_typ": 1251, "largest": 1251, "primary_atomic_numb": [1251, 1263, 1264], "primary_symbol": [1251, 1263, 1264], "_normal": 1251, "except_from": 1251, "remaind": 1251, "among": [1251, 1266], "total_occup": 1251, "_clear_data": [1251, 1263, 1264], "radialcharg": [1252, 1370], "radialvalu": [1252, 1253, 1254, 1370], "radialpotenti": [1252, 1370], "from_munchen": 1254, "from_julich": 1254, "vt": 1254, "munchen": 1254, "julich": 1254, "down": 1254, "_clear": [1254, 1257], "coor": [1255, 1257, 1258], "raw_valu": 1255, "radial_mesh": [1257, 1258, 1259, 1370], "r1": [1257, 1294], "dx": [1257, 1258], "jrmt": 1257, "jrw": [1257, 1294], "r_n": 1257, "r_": 1257, "cubicsplin": 1258, "bc_type": 1258, "knot": 1258, "extrapol": 1258, "spline": 1258, "piecewis": 1258, "polynomi": 1258, "twice": 1258, "continu": 1258, "differenti": 1258, "ppoli": 1258, "breakpoint": 1258, "increas": 1258, "coeffici": 1258, "curv": 1258, "natur": 1258, "mention": 1258, "deriv_valu": 1258, "n0": 1258, "bound": 1258, "interv": 1258, "trail": 1258, "__call__": 1258, "antideriv": 1258, "akima1dinterpol": 1258, "akima": 1258, "pchipinterpol": 1258, "pchip": 1258, "monoton": 1258, "former": 1258, "latter": [1258, 1379], "slope": 1258, "solut": 1258, "parabola": 1258, "splrep": 1258, "interpolatedunivariatesplin": 1258, "sinusoid": 1258, "scipi": 1258, "plt": 1258, "arang": 1258, "sin": 1258, "fig": 1258, "subplot": 1258, "set_xlim": 1258, "legend": 1258, "ncol": 1258, "circl": 1258, "exactli": 1258, "pi": 1258, "linspac": 1258, "c_": 1258, "1f": 1258, "set_aspect": 1258, "endpoint": 1258, "allclos": 1258, "wikivers": 1258, "carl": 1258, "boor": 1258, "practic": 1258, "guid": 1258, "springer": 1258, "verlag": 1258, "1978": 1258, "_validate_bc": 1258, "expected_deriv_shap": 1258, "validated_bc": 1258, "cast": 1258, "interpolator_for_coor": 1258, "vref": 1261, "rmtref": 1261, "site_typ": [1263, 1371], "copy_sit": 1263, "has_symmetri": [1263, 1264, 1371], "break_symmetri": [1263, 1264, 1371], "exit": 1263, "unregist": 1264, "_just_one_typ": 1264, "copy_mesh": 1264, "captur": 1264, "occpanc": 1264, "atomictypeslookup": 1264, "sites_array_nam": 1266, "sprkkr_sites_data": 1266, "promote_ase_atom": [1266, 1378, 1379], "ugli": 1266, "__class__": 1266, "promot": [1266, 1379], "_init": 1266, "add_region": 1266, "remove_region": 1266, "set_region": 1266, "compute_sites_symmetri": [1266, 1379], "symmetry_precis": 1266, "_site": 1266, "firstli": 1266, "nearli": 1266, "get_spacegroup": 1266, "_init_sit": 1266, "metod": 1266, "distinguish": 1266, "infom": 1266, "cancel_sites_symmetri": 1266, "cancel": 1266, "reflect": [1266, 1379], "are_sites_init": 1266, "set_sit": 1266, "spacegroup_info": 1266, "spacegoup_info": 1266, "sg_info": 1266, "has_potenti": 1266, "reset_sprkkr_potenti": 1266, "sprkkr_grammar_typ": [1268, 1269, 1370], "atomdata": [1270, 1370], "layerdata": [1270, 1370], "a2s_visualise_in_struct": [1270, 1371, 1379], "structure_file_to_atom": [1270, 1370], "in_structur": [1270, 1271, 1274, 1379], "implementaion": 1270, "from_text": 1271, "get_symbol": 1271, "n_bulk": 1274, "vacuum_height": 1274, "height": 1274, "thy": 1275, "legaci": 1275, "caution": 1275, "thoroughli": 1276, "nor": [1276, 1379], "guarant": 1276, "testcalcul": [1288, 1292], "test_arp": [1289, 1370], "test_run": [1289, 1293], "test_calcul": [1293, 1294, 1370], "test_phagen": 1293, "2e": 1294, "06": 1294, "test_occup": [1296, 1298, 1300, 1370], "testsit": 1297, "test_sit": [1298, 1370], "test_ad": 1298, "test_vacuum": 1298, "test_charg": 1298, "testsprkkratom": 1299, "test_sprkkr_atom": [1300, 1370], "test_extend": 1300, "test_atom": 1300, "test_symmetri": 1300, "testsysfil": 1301, "test_sysfil": [1302, 1370], "subdir": 1304, "sctipt": [1314, 1319, 1329, 1332, 1335], "in_struct": [1314, 1319, 1329, 1332, 1335], "show_structur": [1336, 1337, 1370], "test_tool": [1354, 1370], "multiplot": [1357, 1370], "updown_layout": 1358, "get_new_axi": 1358, "plot_funct": 1358, "finish": 1358, "never": [1358, 1369], "rng": 1359, "xrang": 1361, "yrang": 1361, "colormap": 1361, "show_zero_lin": 1361, "vmin": 1361, "vmax": 1361, "xlabel": [1361, 1368], "xticklabel": [1361, 1368], "yticklabel": [1361, 1368], "xtick": [1361, 1368], "ytick": [1361, 1368], "pcolormesh": 1361, "cmap1": [1362, 1363], "cmap2": [1362, 1363], "index1": 1362, "index2": 1362, "range1": 1363, "range2": 1363, "8000": 1363, "15000": 1363, "linearsegmentedcolormap": 1363, "draw": 1367, "matplolib": 1367, "drawn": 1367, "aperiodic_tim": 1370, "read_sprkkr": 1370, "write_sprkkr": 1370, "check_symmetri": 1370, "ase_regist": 1370, "filename_from_symbol": 1370, "pretty_symbol": 1370, "add_bs_pb": 1370, "bs_pbe": 1370, "bs_pbe_html": 1370, "plot_with_color": 1370, "plot_phas": 1370, "get_kpts_siz": 1370, "get_calcul": 1370, "_permutecontain": 1370, "append_refer": 1370, "calculate_intermedi": 1370, "chcut_plot": 1370, "convex_hull_plan": 1370, "filref": 1370, "get_coord": 1370, "get_hof": 1370, "gscheck": 1370, "is_collinear": 1370, "is_independ": 1370, "mgsl": 1370, "mu_adjust": 1370, "orthogon": 1370, "projuv": 1370, "read_structur": 1370, "refs2im": 1370, "results2ref": 1370, "row2ref": 1370, "tuplespermut": 1370, "chcerror": 1370, "convex_hull_t": 1370, "get_reference_energi": 1370, "hof": 1370, "select_refer": 1370, "clonetre": 1370, "check_and_get_general_input": 1370, "collect_data": 1370, "find_file_in_fold": 1370, "line_intersect": 1370, "plot_formation_and_transit": 1370, "get_dimtyp": 1370, "plot_dimensionality_histogram": 1370, "calculate_bs_along_emass_vec": 1370, "check_soc": 1370, "convert_key_to_tupl": 1370, "create_columns_fnam": 1370, "custom_t": 1370, "emband": 1370, "evalmodel": 1370, "get_2nd_order_extremum": 1370, "get_3rd_order_extremum": 1370, "get_bt_k": 1370, "get_emass_dict_from_row": 1370, "get_extremum_typ": 1370, "get_gapskn": 1370, "get_nam": 1370, "get_rang": 1370, "get_vb_cb_indic": 1370, "kptsinspher": 1370, "make_the_plot": 1370, "model": 1370, "nonsc_spher": 1370, "preliminary_refin": 1370, "set_default": 1370, "unpack_mass": 1370, "widema": 1370, "nogaperror": 1370, "get_paramet": 1370, "create_corrected_db": 1370, "elements_from_ref": 1370, "formulas_eq": 1370, "get_de_alpha": 1370, "load_data": 1370, "minimize_error": 1370, "multiply_formula": 1370, "parse_react": 1370, "parse_ref": 1370, "safe_get": 1370, "dbalreadyexistserror": 1370, "materialnotfounderror": 1370, "parseerror": 1370, "add_fermi": 1370, "bz_vertic": 1370, "find_contour": 1370, "plot_fermi": 1370, "distance_to_non_pbc_boundari": 1370, "get_atomic_polarization_phas": 1370, "get_dipole_polarization_phas": 1370, "get_electronic_polarization_phas": 1370, "get_wavefunct": 1370, "atomstooclosetoboundari": 1370, "bz_with_band_extremum": 1370, "get_1bz_k": 1370, "get_gap_info": 1370, "bs_gw": 1370, "mp_interpol": 1370, "bs_hse": 1370, "hse_spinorbit": 1370, "create_plot": 1370, "get_phonon_pol": 1370, "get_spin_axi": 1370, "get_spin_index": 1370, "get_magst": 1370, "calculate_pdo": 1370, "get_l_a": 1370, "get_ordered_syl_dict": 1370, "get_yl_color": 1370, "plot_pdo": 1370, "plot_pdos_nosoc": 1370, "plot_pdos_soc": 1370, "mingocorrect": 1370, "plot_bandstructur": 1370, "plot_phonon": 1370, "topckl": 1370, "distance_to_sc": 1370, "lattice_vector": 1370, "get_bs_sampl": 1370, "get_pie_mark": 1370, "get_yl_ord": 1370, "projected_bs_pb": 1370, "push": 1370, "count_deg": 1370, "is_relax_don": 1370, "set_initial_magnetic_mo": 1370, "brokensymmetryerror": 1370, "check_key_valu": 1370, "scanparam": 1370, "get_reduced_formula": 1370, "test_bs": 1370, "test_convex_hul": 1370, "test_gw": 1370, "test_hs": 1370, "test_phonon": 1370, "test_phonopi": 1370, "test_plasmafrequ": 1370, "test_polariz": 1370, "test_raman": 1370, "test_setup_symmetr": 1370, "empty_spheres_atom": 1370, "possibly_equivalent_sit": 1370, "normalize_type_map": 1370, "backward_compat": 1370, "disabledattributeerror": 1370, "if_defin": 1370, "if_not_defin": 1370, "add_debug_hook": 1370, "debug_pypars": 1370, "std_cached_properti": 1370, "add_called_class_as_argu": 1370, "add_to_signatur": 1370, "warnings_from_her": 1370, "process_input_parameters_definit": 1370, "verbatim": 1370, "format_for_str": 1370, "fortran_format": 1370, "full_format_for_str": 1370, "optional_line_end": 1370, "line_end": 1370, "end_of_fil": 1370, "optional_quot": 1370, "addconditionex": 1370, "addparseactionex": 1370, "delimitedlist": 1370, "generate_grammar": 1370, "replace_whitechar": 1370, "separator_grammar": 1370, "separator_pattern": 1370, "type_from_set_map": 1370, "recognized_set_typ": 1370, "arr_testfc": 1370, "assertdictequ": 1370, "assertlistequ": 1370, "assert_equ": 1370, "patch_packag": 1370, "testfc": 1370, "as_integ": 1370, "config_properti": 1370, "copy_list": 1370, "dict_first_item": 1370, "first_non_non": 1370, "njit": 1370, "numpy_index": 1370, "readline_until": 1370, "_call_funct": 1370, "ignore_sign": 1370, "in_subprocess": 1370, "append_id_to_filenam": 1370, "parse_inch": 1370, "parse_named_opt": 1370, "parse_tuple_funct": 1370, "datavalidityerror": 1370, "datavaliditywarn": 1370, "_get_suffix": 1370, "find_default_mpi_runn": 1370, "get_default_mpi_runn": 1370, "load_user_prefer": 1370, "user_preferences_fil": 1370, "create_output_file_definit": 1370, "output_file_head": 1370, "international_numbers_to_ap": 1370, "winger_seitz_radii": 1370, "semiinfinite_system": 1370, "vacuum_lik": 1370, "unique_map": 1370, "_clearing_properti": 1370, "floatjm": 1370, "sysfile_cont": 1370, "write_sysfil": 1370, "auto_rang": 1370, "change_default_kwarg": 1370, "colormesh": 1370, "combine_colormap": 1370, "combined_colormap": 1370, "create_rc_context": 1370, "finish_plot": 1370, "normalize_rc_param": 1370, "plotting_funct": 1370, "set_up_common_plot": 1370, "single_plot": 1370, "fixi": 1371, "now": 1371, "upnorm": 1371, "vacum": 1371, "uniform": 1371, "a2s_": 1371, "linint": 1371, "emit": 1371, "backend": 1371, "meson": 1371, "cython": 1371, "unittest": 1371, "drop": 1371, "set_valu": 1371, "a2s_plot_output": 1371, "executable_postfix": 1371, "renam": 1371, "repeatedli": 1371, "hope": 1371, "small": 1371, "minor": 1371, "grammmartyp": 1371, "repcipi": 1371, "subpackag": [1371, 1378], "hastili": [1371, 1375], "slide": [1371, 1375], "bracket": 1371, "abus": 1371, "basesometh": 1371, "descirpt": 1371, "mdir1": 1371, "mdir2": 1371, "bundl": 1375, "report": 1375, "pip": [1375, 1379], "conda": [1375, 1379], "bug": 1375, "philosophi": 1375, "changelog": 1375, "refactor": 1375, "architectur": 1375, "leav": 1378, "Their": 1378, "relationship": 1378, "prescrib": 1378, "oop": 1378, "ancestor": 1378, "sprkrr": 1378, "readthedoc": 1378, "latest": 1378, "input_prameters_definit": 1378, "outputread": 1378, "sh": 1379, "encourag": 1379, "somewher": 1379, "bash": 1379, "kkrscf8": 1379, "rc": 1379, "topic": 1379, "aim": 1379, "primarili": 1379, "experienc": 1379, "bellow": 1379, "environment": 1379, "sprkkr_command_suffix": 1379, "licl": 1379, "rocksalt": 1379, "indistinguish": 1379, "interoper": 1379, "meth": 1379, "receiv": 1379, "avoid": 1379, "conflict": 1379, "interact": 1379, "input_paramt": 1379, "uppercas": 1379, "my_custom_sect": 1379, "my_custom_valu": 1379, "necess": 1379, "usecas": 1379, "subseuent": 1379, "an_input_fil": 1379, "a_potential_fil": 1379, "cours": 1379, "my_potential_fil": 1379, "irel": 1379, "accep": 1379, "interperet": 1379, "cf4": 1379, "therefor": 1379, "logic": 1379, "behind": 1379, "scene": 1379, "thereaft": 1379, "batch": 1379, "mpirunn": 1379, "openmpi": 1379, "mpich": 1379, "subdirectori": 1379, "visualise_in_struct": 1379, "highli": 1379, "appreci": 1379}, "objects": {"": [[1, 0, 0, "-", "ase2sprkkr"]], "ase2sprkkr": [[2, 0, 0, "-", "ase"], [31, 0, 0, "-", "asr"], [656, 0, 0, "-", "bindings"], [707, 0, 0, "-", "common"], [938, 0, 0, "-", "config"], [948, 0, 0, "-", "examples"], [973, 0, 0, "-", "input_parameters"], [1028, 0, 0, "-", "output_files"], [1071, 0, 0, "-", "outputs"], [1114, 0, 0, "-", "physics"], [1121, 0, 0, "-", "potentials"], [1220, 0, 0, "-", "sprkkr"], [1303, 0, 0, "-", "tools"], [1355, 0, 0, "-", "version"], [1356, 0, 0, "-", "visualise"]], "ase2sprkkr.ase": [[3, 0, 0, "-", "build"], [6, 0, 0, "-", "io"], [9, 0, 0, "-", "pbc"], [11, 0, 0, "-", "register"], [14, 0, 0, "-", "symbols"], [17, 0, 0, "-", "test"], [29, 0, 0, "-", "visualise"]], "ase2sprkkr.ase.build": [[4, 1, 1, "", "aperiodic_times"], [5, 1, 1, "", "stack"]], "ase2sprkkr.ase.io": [[7, 1, 1, "", "read_sprkkr"], [8, 1, 1, "", "write_sprkkr"]], "ase2sprkkr.ase.pbc": [[10, 1, 1, "", "check_symmetry"]], "ase2sprkkr.ase.register": [[12, 1, 1, "", "ase_register"], [13, 1, 1, "", "register"]], "ase2sprkkr.ase.symbols": [[15, 1, 1, "", "filename_from_symbols"], [16, 1, 1, "", "pretty_symbols"]], "ase2sprkkr.ase.test": [[18, 0, 0, "-", "init_tests"], [27, 0, 0, "-", "test_build"]], "ase2sprkkr.ase.test.init_tests": [[19, 2, 1, "", "TestCase"], [20, 1, 1, "", "arr_testfce"], [21, 1, 1, "", "assertDictEqual"], [22, 1, 1, "", "assertListEqual"], [23, 1, 1, "", "assert_almost_equals"], [24, 1, 1, "", "assert_equals"], [25, 2, 1, "", "extdict"], [26, 1, 1, "", "testfce"]], "ase2sprkkr.ase.test.init_tests.TestCase": [[19, 3, 1, "", "__init__"], [19, 4, 1, "", "_calc_args"], [19, 4, 1, "", "_print_output"], [19, 3, 1, "", "almost_equal_precision"], [19, 3, 1, "", "assertAlmostEqual"], [19, 3, 1, "", "assertAsyncEqual"], [19, 3, 1, "", "assertAsyncRaises"], [19, 3, 1, "", "assertEqual"], [19, 3, 1, "", "assertFalse"], [19, 3, 1, "", "assertIsNone"], [19, 3, 1, "", "assertNotEqual"], [19, 3, 1, "", "assertRaises"], [19, 3, 1, "", "assertTrue"], [19, 3, 1, "", "calc_args"], [19, 3, 1, "", "runAsync"], [19, 3, 1, "", "run_sprkkr"], [19, 3, 1, "", "temporary_dir"]], "ase2sprkkr.ase.test.init_tests.extdict": [[25, 3, 1, "", "__init__"]], "ase2sprkkr.ase.test.test_build": [[28, 2, 1, "", "TestBuild"]], "ase2sprkkr.ase.test.test_build.TestBuild": [[28, 3, 1, "", "__init__"], [28, 3, 1, "", "test"], [28, 3, 1, "", "test_stack"]], "ase2sprkkr.ase.visualise": [[30, 1, 1, "", "view"]], "ase2sprkkr.asr": [[32, 0, 0, "-", "asr"], [33, 0, 0, "-", "bader"], [35, 0, 0, "-", "bandstructure"], [42, 0, 0, "-", "berry"], [46, 0, 0, "-", "borncharges"], [49, 0, 0, "-", "bse"], [54, 0, 0, "-", "calculators"], [56, 0, 0, "-", "chc"], [88, 0, 0, "-", "convex_hull"], [96, 0, 0, "-", "core"], [163, 0, 0, "-", "database"], [199, 0, 0, "-", "defectformation"], [207, 0, 0, "-", "deformationpotentials"], [210, 0, 0, "-", "dimensionality"], [214, 0, 0, "-", "dos"], [218, 0, 0, "-", "emasses"], [248, 0, 0, "-", "exchange"], [250, 0, 0, "-", "fere"], [271, 0, 0, "-", "fermisurface"], [278, 0, 0, "-", "formalpolarization"], [285, 0, 0, "-", "gs"], [296, 0, 0, "-", "gw"], [301, 0, 0, "-", "hse"], [309, 0, 0, "-", "infraredpolarizability"], [314, 0, 0, "-", "magnetic_anisotropy"], [320, 0, 0, "-", "magstate"], [324, 0, 0, "-", "pdos"], [335, 0, 0, "-", "phonons"], [345, 0, 0, "-", "phonopy"], [353, 0, 0, "-", "piezoelectrictensor"], [356, 0, 0, "-", "plasmafrequency"], [360, 0, 0, "-", "polarizability"], [365, 0, 0, "-", "projected_bandstructure"], [374, 0, 0, "-", "push"], [375, 0, 0, "-", "raman"], [380, 0, 0, "-", "relax"], [388, 0, 0, "-", "setinfo"], [391, 0, 0, "-", "setup"], [417, 0, 0, "-", "stiffness"], [420, 0, 0, "-", "structureinfo"], [424, 0, 0, "-", "test"], [623, 0, 0, "-", "utils"], [655, 0, 0, "-", "workflow"]], "ase2sprkkr.asr.bader": [[34, 1, 1, "", "print"]], "ase2sprkkr.asr.bandstructure": [[36, 2, 1, "", "Result"], [37, 1, 1, "", "add_bs_pbe"], [38, 1, 1, "", "bs_pbe"], [39, 1, 1, "", "bs_pbe_html"], [40, 1, 1, "", "plot_with_colors"], [41, 1, 1, "", "webpanel"]], "ase2sprkkr.asr.bandstructure.Result": [[36, 3, 1, "", "__init__"], [36, 4, 1, "", "_known_data_keys"], [36, 5, 1, "", "bs_nosoc"], [36, 5, 1, "", "bs_soc"], [36, 4, 1, "", "formats"], [36, 4, 1, "", "key_descriptions"], [36, 4, 1, "", "strict"], [36, 4, 1, "", "version"]], "ase2sprkkr.asr.berry": [[43, 2, 1, "", "Result"], [44, 1, 1, "", "plot_phases"], [45, 1, 1, "", "webpanel"]], "ase2sprkkr.asr.berry.Result": [[43, 5, 1, "", "Topology"], [43, 3, 1, "", "__init__"], [43, 4, 1, "", "_known_data_keys"], [43, 4, 1, "", "formats"], [43, 4, 1, "", "key_descriptions"], [43, 4, 1, "", "strict"]], "ase2sprkkr.asr.borncharges": [[47, 2, 1, "", "Result"], [48, 1, 1, "", "webpanel"]], "ase2sprkkr.asr.borncharges.Result": [[47, 5, 1, "", "Z_avv"], [47, 3, 1, "", "__init__"], [47, 4, 1, "", "_known_data_keys"], [47, 4, 1, "", "formats"], [47, 4, 1, "", "key_descriptions"], [47, 4, 1, "", "strict"], [47, 5, 1, "", "sym_a"]], "ase2sprkkr.asr.bse": [[50, 2, 1, "", "Result"], [51, 1, 1, "", "absorption"], [52, 1, 1, "", "get_kpts_size"], [53, 1, 1, "", "webpanel"]], "ase2sprkkr.asr.bse.Result": [[50, 5, 1, "", "E_B"], [50, 3, 1, "", "__init__"], [50, 4, 1, "", "_known_data_keys"], [50, 5, 1, "", "bse_alphax_w"], [50, 5, 1, "", "bse_alphay_w"], [50, 5, 1, "", "bse_alphaz_w"], [50, 4, 1, "", "formats"], [50, 4, 1, "", "key_descriptions"], [50, 4, 1, "", "strict"]], "ase2sprkkr.asr.calculators": [[55, 1, 1, "", "get_calculator"]], "ase2sprkkr.asr.chc": [[57, 6, 1, "", "CHCError"], [58, 2, 1, "", "ConvexHullReference"], [59, 2, 1, "", "Hyperplane"], [60, 2, 1, "", "Intermediate"], [61, 2, 1, "", "LeanIntermediate"], [62, 2, 1, "", "Line"], [63, 2, 1, "", "Reference"], [64, 2, 1, "", "Result"], [65, 1, 1, "", "_permutecontain"], [66, 1, 1, "", "append_references"], [67, 1, 1, "", "calculate_intermediates"], [68, 1, 1, "", "chcut_plot"], [69, 1, 1, "", "convex_hull"], [70, 1, 1, "", "convex_hull_planes"], [71, 1, 1, "", "filrefs"], [72, 1, 1, "", "get_coords"], [73, 1, 1, "", "get_hof"], [74, 1, 1, "", "gscheck"], [75, 1, 1, "", "is_collinear"], [76, 1, 1, "", "is_independent"], [77, 1, 1, "", "mgs"], [78, 1, 1, "", "mgsls"], [79, 1, 1, "", "mu_adjustment"], [80, 1, 1, "", "orthogonalize"], [81, 1, 1, "", "projuv"], [82, 1, 1, "", "read_structure"], [83, 1, 1, "", "refs2ims"], [84, 1, 1, "", "results2ref"], [85, 1, 1, "", "row2ref"], [86, 1, 1, "", "tuplespermuted"], [87, 1, 1, "", "webpanel"]], "ase2sprkkr.asr.chc.ConvexHullReference": [[58, 3, 1, "", "__init__"], [58, 3, 1, "", "_construct_coordinates"], [58, 3, 1, "", "from_reference"], [58, 3, 1, "", "is_single"]], "ase2sprkkr.asr.chc.Hyperplane": [[59, 3, 1, "", "__init__"], [59, 3, 1, "", "contains"], [59, 3, 1, "", "find_ts"]], "ase2sprkkr.asr.chc.Intermediate": [[60, 3, 1, "", "__init__"], [60, 3, 1, "", "_get_hform_data"], [60, 3, 1, "", "from_dict"], [60, 5, 1, "", "label"], [60, 5, 1, "", "reactant_content"], [60, 3, 1, "", "to_dict"], [60, 3, 1, "", "to_result"]], "ase2sprkkr.asr.chc.LeanIntermediate": [[61, 3, 1, "", "__init__"], [61, 3, 1, "", "from_dict"], [61, 3, 1, "", "to_dict"], [61, 3, 1, "", "to_result"]], "ase2sprkkr.asr.chc.Line": [[62, 3, 1, "", "__init__"], [62, 3, 1, "", "find_s"], [62, 3, 1, "", "intersects"]], "ase2sprkkr.asr.chc.Reference": [[63, 3, 1, "", "__init__"], [63, 3, 1, "", "from_dict"], [63, 5, 1, "", "natoms"], [63, 3, 1, "", "to_dict"], [63, 3, 1, "", "to_elements"]], "ase2sprkkr.asr.chc.Result": [[64, 3, 1, "", "__init__"], [64, 4, 1, "", "_known_data_keys"], [64, 4, 1, "", "formats"], [64, 4, 1, "", "strict"]], "ase2sprkkr.asr.convex_hull": [[89, 2, 1, "", "Result"], [90, 1, 1, "", "convex_hull_tables"], [91, 1, 1, "", "get_reference_energies"], [92, 1, 1, "", "hof"], [93, 1, 1, "", "plot"], [94, 1, 1, "", "select_references"], [95, 1, 1, "", "webpanel"]], "ase2sprkkr.asr.convex_hull.Result": [[89, 3, 1, "", "__init__"], [89, 4, 1, "", "_known_data_keys"], [89, 5, 1, "", "coefs"], [89, 5, 1, "", "ehull"], [89, 4, 1, "", "formats"], [89, 5, 1, "", "hform"], [89, 5, 1, "", "indices"], [89, 4, 1, "", "key_descriptions"], [89, 5, 1, "", "references"], [89, 4, 1, "", "strict"], [89, 5, 1, "", "thermodynamic_stability_level"]], "ase2sprkkr.asr.core": [[97, 0, 0, "-", "cli"], [107, 0, 0, "-", "command"], [108, 0, 0, "-", "fix_old_files"], [110, 0, 0, "-", "material"], [115, 0, 0, "-", "results"], [143, 0, 0, "-", "types"], [147, 0, 0, "-", "utils"]], "ase2sprkkr.asr.core.cli": [[98, 1, 1, "", "append_job"], [99, 1, 1, "", "check_git"], [100, 1, 1, "", "extract_hash_from_file"], [101, 1, 1, "", "format"], [102, 1, 1, "", "get_config_dir"], [103, 1, 1, "", "get_git_rev_list"], [104, 1, 1, "", "initialize_asr_configuration_dir"], [105, 1, 1, "", "is_asr_initialized"], [106, 1, 1, "", "run_command"]], "ase2sprkkr.asr.core.fix_old_files": [[109, 1, 1, "", "is_results_file"]], "ase2sprkkr.asr.core.material": [[111, 2, 1, "", "Material"], [112, 1, 1, "", "get_material_from_folder"], [113, 1, 1, "", "get_webpanels_from_material"], [114, 1, 1, "", "make_panel_figures"]], "ase2sprkkr.asr.core.material.Material": [[111, 3, 1, "", "__init__"], [111, 3, 1, "", "get"], [111, 3, 1, "", "toatoms"]], "ase2sprkkr.asr.core.results": [[116, 2, 1, "", "ASRResult"], [117, 2, 1, "", "DictEncoder"], [118, 2, 1, "", "HTMLEncoder"], [119, 2, 1, "", "HackedASRResult"], [120, 2, 1, "", "JSONEncoder"], [121, 2, 1, "", "MetaData"], [122, 6, 1, "", "MetaDataNotSetError"], [123, 2, 1, "", "ObjectDescription"], [124, 2, 1, "", "ResultEncoder"], [125, 6, 1, "", "UnknownASRResultFormat"], [126, 6, 1, "", "UnknownDataFormat"], [127, 2, 1, "", "WebPanelEncoder"], [128, 1, 1, "", "data_to_dict"], [129, 1, 1, "", "dct_to_result"], [130, 1, 1, "", "find_class_matching_version"], [131, 1, 1, "", "format_key_description_pair"], [132, 1, 1, "", "get_key_descriptions"], [133, 1, 1, "", "get_object_matching_obj_id"], [134, 1, 1, "", "get_object_types"], [135, 1, 1, "", "get_reader_function"], [136, 1, 1, "", "make_property"], [137, 1, 1, "", "obj_to_id"], [138, 1, 1, "", "object_description_to_object"], [139, 1, 1, "", "prepare_result"], [140, 1, 1, "", "read_hacked_data"], [141, 1, 1, "", "read_new_data"], [142, 1, 1, "", "read_old_data"]], "ase2sprkkr.asr.core.results.ASRResult": [[116, 3, 1, "", "__init__"], [116, 5, 1, "", "data"], [116, 3, 1, "", "format_as"], [116, 4, 1, "", "formats"], [116, 3, 1, "", "from_format"], [116, 3, 1, "", "fromdata"], [116, 3, 1, "", "fromdict"], [116, 3, 1, "", "get"], [116, 3, 1, "", "get_formats"], [116, 3, 1, "", "get_obj_id"], [116, 3, 1, "", "get_object_desc"], [116, 3, 1, "", "items"], [116, 4, 1, "", "key_descriptions"], [116, 3, 1, "", "keys"], [116, 5, 1, "", "metadata"], [116, 4, 1, "", "prev_version"], [116, 4, 1, "", "strict"], [116, 3, 1, "", "todict"], [116, 3, 1, "", "values"], [116, 4, 1, "", "version"]], "ase2sprkkr.asr.core.results.DictEncoder": [[117, 3, 1, "", "__init__"], [117, 4, 1, "", "_abc_impl"], [117, 3, 1, "", "decode"], [117, 3, 1, "", "encode"]], "ase2sprkkr.asr.core.results.HTMLEncoder": [[118, 3, 1, "", "__init__"], [118, 4, 1, "", "_abc_impl"], [118, 3, 1, "", "encode"]], "ase2sprkkr.asr.core.results.HackedASRResult": [[119, 3, 1, "", "__init__"]], "ase2sprkkr.asr.core.results.JSONEncoder": [[120, 3, 1, "", "__init__"], [120, 4, 1, "", "_abc_impl"], [120, 3, 1, "", "decode"], [120, 3, 1, "", "encode"]], "ase2sprkkr.asr.core.results.MetaData": [[121, 3, 1, "", "__init__"], [121, 3, 1, "", "_get"], [121, 3, 1, "", "_set"], [121, 4, 1, "", "accepted_keys"], [121, 5, 1, "", "asr_name"], [121, 5, 1, "", "code_versions"], [121, 5, 1, "", "creates"], [121, 5, 1, "", "params"], [121, 5, 1, "", "requires"], [121, 5, 1, "", "resources"], [121, 3, 1, "", "set"], [121, 3, 1, "", "todict"], [121, 3, 1, "", "validate"]], "ase2sprkkr.asr.core.results.ObjectDescription": [[123, 3, 1, "", "__init__"], [123, 5, 1, "", "args"], [123, 5, 1, "", "constructor"], [123, 3, 1, "", "fromdict"], [123, 3, 1, "", "instantiate"], [123, 5, 1, "", "kwargs"], [123, 5, 1, "", "object_id"], [123, 3, 1, "", "todict"]], "ase2sprkkr.asr.core.results.ResultEncoder": [[124, 3, 1, "", "__init__"], [124, 4, 1, "", "_abc_impl"], [124, 3, 1, "", "decode"], [124, 3, 1, "", "encode"]], "ase2sprkkr.asr.core.results.WebPanelEncoder": [[127, 3, 1, "", "__init__"], [127, 4, 1, "", "_abc_impl"], [127, 3, 1, "", "encode"]], "ase2sprkkr.asr.core.types": [[144, 2, 1, "", "AtomsFile"], [145, 2, 1, "", "DictStr"], [146, 1, 1, "", "clickify_docstring"]], "ase2sprkkr.asr.core.types.AtomsFile": [[144, 3, 1, "", "__init__"], [144, 3, 1, "", "convert"], [144, 4, 1, "", "name"]], "ase2sprkkr.asr.core.types.DictStr": [[145, 3, 1, "", "__init__"], [145, 3, 1, "", "convert"], [145, 4, 1, "", "name"]], "ase2sprkkr.asr.core.utils": [[148, 1, 1, "", "chdir"], [149, 1, 1, "", "dct_to_object"], [150, 1, 1, "", "encode_json"], [151, 1, 1, "", "file_barrier"], [152, 1, 1, "", "get_dep_tree"], [153, 1, 1, "", "get_recipe_from_name"], [154, 1, 1, "", "md5sum"], [155, 1, 1, "", "parse_dict_string"], [156, 1, 1, "", "parse_mod_func"], [157, 1, 1, "", "read_json"], [158, 1, 1, "", "recursive_update"], [159, 1, 1, "", "singleprec_dict"], [160, 1, 1, "", "unlink"], [161, 1, 1, "", "write_file"], [162, 1, 1, "", "write_json"]], "ase2sprkkr.asr.database": [[164, 0, 0, "-", "browser"], [179, 0, 0, "-", "check"], [180, 0, 0, "-", "clonetree"], [181, 0, 0, "-", "duplicates"], [186, 0, 0, "-", "material_fingerprint"], [190, 0, 0, "-", "merge"], [191, 0, 0, "-", "rmsd"], [195, 0, 0, "-", "templates"], [196, 0, 0, "-", "totree"]], "ase2sprkkr.asr.database.browser": [[165, 2, 1, "", "RowWrapper"], [166, 1, 1, "", "create_table"], [167, 1, 1, "", "describe_entries"], [168, 1, 1, "", "describe_entry"], [169, 1, 1, "", "dict_to_list"], [170, 1, 1, "", "entry_parameter_description"], [171, 1, 1, "", "extract_recipe_from_filename"], [172, 1, 1, "", "fig"], [173, 1, 1, "", "is_results_file"], [174, 1, 1, "", "layout"], [175, 1, 1, "", "merge_panels"], [176, 1, 1, "", "miscellaneous_section"], [177, 1, 1, "", "table"], [178, 1, 1, "", "val2str"]], "ase2sprkkr.asr.database.browser.RowWrapper": [[165, 3, 1, "", "__init__"]], "ase2sprkkr.asr.database.duplicates": [[182, 1, 1, "", "compare"], [183, 1, 1, "", "filter_uids"], [184, 1, 1, "", "find_duplicate_group"], [185, 1, 1, "", "parse_filter_string"]], "ase2sprkkr.asr.database.material_fingerprint": [[187, 1, 1, "", "get_hash_of_atoms"], [188, 1, 1, "", "get_uid_of_atoms"], [189, 1, 1, "", "todict"]], "ase2sprkkr.asr.database.rmsd": [[192, 1, 1, "", "get_rmsd"], [193, 1, 1, "", "normalize_nonpbc_atoms"], [194, 1, 1, "", "update_rmsd"]], "ase2sprkkr.asr.database.totree": [[197, 1, 1, "", "make_folder_dict"], [198, 1, 1, "", "make_folder_tree"]], "ase2sprkkr.asr.defectformation": [[200, 1, 1, "", "check_and_get_general_inputs"], [201, 1, 1, "", "collect_data"], [202, 1, 1, "", "find_file_in_folder"], [203, 1, 1, "", "intersection"], [204, 1, 1, "", "line"], [205, 1, 1, "", "line_intersection"], [206, 1, 1, "", "plot_formation_and_transitions"]], "ase2sprkkr.asr.deformationpotentials": [[208, 2, 1, "", "Result"], [209, 1, 1, "", "webpanel"]], "ase2sprkkr.asr.deformationpotentials.Result": [[208, 3, 1, "", "__init__"], [208, 4, 1, "", "_known_data_keys"], [208, 4, 1, "", "formats"], [208, 4, 1, "", "strict"]], "ase2sprkkr.asr.dimensionality": [[211, 1, 1, "", "get_dimtypes"], [212, 1, 1, "", "plot_dimensionality_histogram"], [213, 1, 1, "", "webpanel"]], "ase2sprkkr.asr.dos": [[215, 1, 1, "", "collect_data"], [216, 1, 1, "", "plot"], [217, 1, 1, "", "webpanel"]], "ase2sprkkr.asr.emasses": [[219, 6, 1, "", "NoGapError"], [220, 2, 1, "", "Result"], [221, 1, 1, "", "calculate_bs_along_emass_vecs"], [222, 1, 1, "", "check_soc"], [223, 1, 1, "", "convert_key_to_tuple"], [224, 1, 1, "", "create_columns_fnames"], [225, 1, 1, "", "custom_table"], [226, 1, 1, "", "em"], [227, 1, 1, "", "embands"], [228, 1, 1, "", "evalmodel"], [229, 1, 1, "", "fit"], [230, 1, 1, "", "get_2nd_order_extremum"], [231, 1, 1, "", "get_3rd_order_extremum"], [232, 1, 1, "", "get_bt_ks"], [233, 1, 1, "", "get_emass_dict_from_row"], [234, 1, 1, "", "get_extremum_type"], [235, 1, 1, "", "get_gapskn"], [236, 1, 1, "", "get_name"], [237, 1, 1, "", "get_range"], [238, 1, 1, "", "get_vb_cb_indices"], [239, 1, 1, "", "kptsinsphere"], [240, 1, 1, "", "make_the_plots"], [241, 1, 1, "", "model"], [242, 1, 1, "", "nonsc_sphere"], [243, 1, 1, "", "preliminary_refine"], [244, 1, 1, "", "set_default"], [245, 1, 1, "", "unpack_masses"], [246, 1, 1, "", "webpanel"], [247, 1, 1, "", "wideMAE"]], "ase2sprkkr.asr.emasses.Result": [[220, 3, 1, "", "__init__"], [220, 4, 1, "", "_known_data_keys"], [220, 4, 1, "", "formats"], [220, 4, 1, "", "strict"]], "ase2sprkkr.asr.exchange": [[249, 1, 1, "", "get_parameters"]], "ase2sprkkr.asr.fere": [[251, 6, 1, "", "DBAlreadyExistsError"], [252, 6, 1, "", "MaterialNotFoundError"], [253, 6, 1, "", "ParseError"], [254, 1, 1, "", "count"], [255, 1, 1, "", "create_corrected_db"], [256, 1, 1, "", "elements_from_refs"], [257, 1, 1, "", "formulas_eq"], [258, 1, 1, "", "get_dE_alpha"], [259, 1, 1, "", "get_hof"], [260, 1, 1, "", "load_data"], [261, 1, 1, "", "minimize_error"], [262, 1, 1, "", "multiply_formula"], [263, 1, 1, "", "only"], [264, 1, 1, "", "parse_reactions"], [265, 1, 1, "", "parse_refs"], [266, 1, 1, "", "safe_get"], [267, 1, 1, "", "select"], [268, 1, 1, "", "single"], [269, 1, 1, "", "unique"], [270, 1, 1, "", "where"]], "ase2sprkkr.asr.fermisurface": [[272, 2, 1, "", "Result"], [273, 1, 1, "", "add_fermi"], [274, 1, 1, "", "bz_vertices"], [275, 1, 1, "", "find_contours"], [276, 1, 1, "", "plot_fermi"], [277, 1, 1, "", "webpanel"]], "ase2sprkkr.asr.fermisurface.Result": [[272, 3, 1, "", "__init__"], [272, 4, 1, "", "_known_data_keys"], [272, 4, 1, "", "formats"], [272, 4, 1, "", "strict"]], "ase2sprkkr.asr.formalpolarization": [[279, 6, 1, "", "AtomsTooCloseToBoundary"], [280, 1, 1, "", "distance_to_non_pbc_boundary"], [281, 1, 1, "", "get_atomic_polarization_phase"], [282, 1, 1, "", "get_dipole_polarization_phase"], [283, 1, 1, "", "get_electronic_polarization_phase"], [284, 1, 1, "", "get_wavefunctions"]], "ase2sprkkr.asr.gs": [[286, 2, 1, "", "GapsResult"], [287, 2, 1, "", "Result"], [288, 2, 1, "", "VacuumLevelResults"], [289, 1, 1, "", "bz_with_band_extremums"], [290, 1, 1, "", "evacdiff"], [291, 1, 1, "", "gaps"], [292, 1, 1, "", "get_1bz_k"], [293, 1, 1, "", "get_gap_info"], [294, 1, 1, "", "vacuumlevels"], [295, 1, 1, "", "webpanel"]], "ase2sprkkr.asr.gs.GapsResult": [[286, 3, 1, "", "__init__"], [286, 4, 1, "", "_known_data_keys"], [286, 5, 1, "", "cbm"], [286, 5, 1, "", "cbm_dir"], [286, 5, 1, "", "efermi"], [286, 5, 1, "", "gap"], [286, 5, 1, "", "gap_dir"], [286, 5, 1, "", "k_cbm_c"], [286, 5, 1, "", "k_cbm_dir_c"], [286, 5, 1, "", "k_vbm_c"], [286, 5, 1, "", "k_vbm_dir_c"], [286, 4, 1, "", "key_descriptions"], [286, 5, 1, "", "skn1"], [286, 5, 1, "", "skn1_dir"], [286, 5, 1, "", "skn2"], [286, 5, 1, "", "skn2_dir"], [286, 4, 1, "", "strict"], [286, 5, 1, "", "vbm"], [286, 5, 1, "", "vbm_dir"]], "ase2sprkkr.asr.gs.Result": [[287, 3, 1, "", "__init__"], [287, 4, 1, "", "_known_data_keys"], [287, 5, 1, "", "cbm"], [287, 5, 1, "", "cbm_dir"], [287, 5, 1, "", "dipz"], [287, 5, 1, "", "efermi"], [287, 5, 1, "", "etot"], [287, 5, 1, "", "evac"], [287, 5, 1, "", "evacdiff"], [287, 5, 1, "", "forces"], [287, 4, 1, "", "formats"], [287, 5, 1, "", "gap"], [287, 5, 1, "", "gap_dir"], [287, 5, 1, "", "gap_dir_nosoc"], [287, 5, 1, "", "gap_nosoc"], [287, 5, 1, "", "gaps_nosoc"], [287, 5, 1, "", "k_cbm_c"], [287, 5, 1, "", "k_cbm_dir_c"], [287, 5, 1, "", "k_vbm_c"], [287, 5, 1, "", "k_vbm_dir_c"], [287, 4, 1, "", "key_descriptions"], [287, 5, 1, "", "skn1"], [287, 5, 1, "", "skn1_dir"], [287, 5, 1, "", "skn2"], [287, 5, 1, "", "skn2_dir"], [287, 5, 1, "", "stresses"], [287, 4, 1, "", "strict"], [287, 5, 1, "", "vacuumlevels"], [287, 5, 1, "", "vbm"], [287, 5, 1, "", "vbm_dir"], [287, 5, 1, "", "workfunction"]], "ase2sprkkr.asr.gs.VacuumLevelResults": [[288, 3, 1, "", "__init__"], [288, 4, 1, "", "_known_data_keys"], [288, 5, 1, "", "dipz"], [288, 5, 1, "", "efermi_nosoc"], [288, 5, 1, "", "evac1"], [288, 5, 1, "", "evac2"], [288, 5, 1, "", "evacdiff"], [288, 5, 1, "", "evacmean"], [288, 4, 1, "", "key_descriptions"], [288, 4, 1, "", "strict"], [288, 5, 1, "", "v_z"], [288, 5, 1, "", "z_z"]], "ase2sprkkr.asr.gw": [[297, 2, 1, "", "Result"], [298, 1, 1, "", "bs_gw"], [299, 1, 1, "", "get_kpts_size"], [300, 1, 1, "", "webpanel"]], "ase2sprkkr.asr.gw.Result": [[297, 3, 1, "", "__init__"], [297, 4, 1, "", "_known_data_keys"], [297, 5, 1, "", "bandstructure"], [297, 5, 1, "", "cbm_gw"], [297, 5, 1, "", "cbm_gw_nosoc"], [297, 5, 1, "", "efermi_gw_nosoc"], [297, 5, 1, "", "efermi_gw_soc"], [297, 4, 1, "", "formats"], [297, 5, 1, "", "gap_dir_gw"], [297, 5, 1, "", "gap_dir_gw_nosoc"], [297, 5, 1, "", "gap_gw"], [297, 5, 1, "", "gap_gw_nosoc"], [297, 5, 1, "", "kcbm"], [297, 5, 1, "", "kcbm_nosoc"], [297, 4, 1, "", "key_descriptions"], [297, 5, 1, "", "kvbm"], [297, 5, 1, "", "kvbm_nosoc"], [297, 4, 1, "", "strict"], [297, 5, 1, "", "vbm_gw"], [297, 5, 1, "", "vbm_gw_nosoc"]], "ase2sprkkr.asr.hse": [[302, 1, 1, "", "MP_interpolate"], [303, 2, 1, "", "Result"], [304, 1, 1, "", "bs_hse"], [305, 1, 1, "", "get_kpts_size"], [306, 1, 1, "", "hse"], [307, 1, 1, "", "hse_spinorbit"], [308, 1, 1, "", "webpanel"]], "ase2sprkkr.asr.hse.Result": [[303, 3, 1, "", "__init__"], [303, 4, 1, "", "_known_data_keys"], [303, 5, 1, "", "bandstructure"], [303, 5, 1, "", "cbm_hse"], [303, 5, 1, "", "cbm_hse_nosoc"], [303, 5, 1, "", "efermi_hse_nosoc"], [303, 5, 1, "", "efermi_hse_soc"], [303, 4, 1, "", "formats"], [303, 5, 1, "", "gap_dir_hse"], [303, 5, 1, "", "gap_dir_hse_nosoc"], [303, 5, 1, "", "gap_hse"], [303, 5, 1, "", "gap_hse_nosoc"], [303, 5, 1, "", "kcbm"], [303, 5, 1, "", "kcbm_nosoc"], [303, 4, 1, "", "key_descriptions"], [303, 5, 1, "", "kvbm"], [303, 5, 1, "", "kvbm_nosoc"], [303, 4, 1, "", "strict"], [303, 5, 1, "", "vbm_hse"], [303, 5, 1, "", "vbm_hse_nosoc"]], "ase2sprkkr.asr.infraredpolarizability": [[310, 2, 1, "", "Result"], [311, 1, 1, "", "create_plot"], [312, 1, 1, "", "get_phonon_pol"], [313, 1, 1, "", "webpanel"]], "ase2sprkkr.asr.infraredpolarizability.Result": [[310, 3, 1, "", "__init__"], [310, 4, 1, "", "_known_data_keys"], [310, 5, 1, "", "alpha_wvv"], [310, 5, 1, "", "alphax"], [310, 5, 1, "", "alphax_lat"], [310, 5, 1, "", "alphay"], [310, 5, 1, "", "alphay_lat"], [310, 5, 1, "", "alphaz"], [310, 5, 1, "", "alphaz_lat"], [310, 4, 1, "", "formats"], [310, 4, 1, "", "key_descriptions"], [310, 5, 1, "", "omega_w"], [310, 4, 1, "", "strict"]], "ase2sprkkr.asr.magnetic_anisotropy": [[315, 2, 1, "", "Result"], [316, 1, 1, "", "get_spin_axis"], [317, 1, 1, "", "get_spin_index"], [318, 1, 1, "", "spin_axis"], [319, 1, 1, "", "webpanel"]], "ase2sprkkr.asr.magnetic_anisotropy.Result": [[315, 5, 1, "", "E_x"], [315, 5, 1, "", "E_y"], [315, 5, 1, "", "E_z"], [315, 3, 1, "", "__init__"], [315, 4, 1, "", "_known_data_keys"], [315, 5, 1, "", "dE_zx"], [315, 5, 1, "", "dE_zy"], [315, 4, 1, "", "formats"], [315, 4, 1, "", "key_descriptions"], [315, 5, 1, "", "phi"], [315, 5, 1, "", "spin_axis"], [315, 4, 1, "", "strict"], [315, 5, 1, "", "theta"]], "ase2sprkkr.asr.magstate": [[321, 2, 1, "", "Result"], [322, 1, 1, "", "get_magstate"], [323, 1, 1, "", "webpanel"]], "ase2sprkkr.asr.magstate.Result": [[321, 3, 1, "", "__init__"], [321, 4, 1, "", "_known_data_keys"], [321, 4, 1, "", "formats"], [321, 5, 1, "", "is_magnetic"], [321, 4, 1, "", "key_descriptions"], [321, 5, 1, "", "magmom"], [321, 5, 1, "", "magmoms"], [321, 5, 1, "", "magstate"], [321, 5, 1, "", "nspins"], [321, 4, 1, "", "strict"]], "ase2sprkkr.asr.pdos": [[325, 2, 1, "", "Result"], [326, 1, 1, "", "calculate_pdos"], [327, 1, 1, "", "get_l_a"], [328, 1, 1, "", "get_ordered_syl_dict"], [329, 1, 1, "", "get_yl_colors"], [330, 1, 1, "", "pdos"], [331, 1, 1, "", "plot_pdos"], [332, 1, 1, "", "plot_pdos_nosoc"], [333, 1, 1, "", "plot_pdos_soc"], [334, 1, 1, "", "webpanel"]], "ase2sprkkr.asr.pdos.Result": [[325, 3, 1, "", "__init__"], [325, 4, 1, "", "_known_data_keys"], [325, 5, 1, "", "dos_at_ef_nosoc"], [325, 5, 1, "", "dos_at_ef_soc"], [325, 4, 1, "", "formats"], [325, 4, 1, "", "key_descriptions"], [325, 5, 1, "", "pdos_nosoc"], [325, 5, 1, "", "pdos_soc"], [325, 4, 1, "", "strict"]], "ase2sprkkr.asr.phonons": [[336, 2, 1, "", "Result"], [337, 1, 1, "", "creates"], [338, 1, 1, "", "mingocorrection"], [339, 1, 1, "", "plot_bandstructure"], [340, 1, 1, "", "plot_phonons"], [341, 1, 1, "", "requires"], [342, 1, 1, "", "todict"], [343, 1, 1, "", "topckl"], [344, 1, 1, "", "webpanel"]], "ase2sprkkr.asr.phonons.Result": [[336, 3, 1, "", "__init__"], [336, 4, 1, "", "_known_data_keys"], [336, 5, 1, "", "dynamic_stability_phonons"], [336, 4, 1, "", "formats"], [336, 5, 1, "", "interp_freqs_kl"], [336, 4, 1, "", "key_descriptions"], [336, 5, 1, "", "minhessianeig"], [336, 5, 1, "", "modes_kl"], [336, 5, 1, "", "omega_kl"], [336, 5, 1, "", "path"], [336, 5, 1, "", "q_qc"], [336, 4, 1, "", "strict"]], "ase2sprkkr.asr.phonopy": [[346, 2, 1, "", "Result"], [347, 1, 1, "", "distance_to_sc"], [348, 1, 1, "", "lattice_vectors"], [349, 1, 1, "", "plot_bandstructure"], [350, 1, 1, "", "plot_phonons"], [351, 1, 1, "", "requires"], [352, 1, 1, "", "webpanel"]], "ase2sprkkr.asr.phonopy.Result": [[346, 3, 1, "", "__init__"], [346, 4, 1, "", "_known_data_keys"], [346, 5, 1, "", "dynamic_stability_level"], [346, 5, 1, "", "eigs_kl"], [346, 4, 1, "", "formats"], [346, 5, 1, "", "irr_l"], [346, 4, 1, "", "key_descriptions"], [346, 5, 1, "", "minhessianeig"], [346, 5, 1, "", "omega_kl"], [346, 5, 1, "", "path"], [346, 5, 1, "", "phi_anv"], [346, 5, 1, "", "q_qc"], [346, 4, 1, "", "strict"], [346, 5, 1, "", "u_klav"]], "ase2sprkkr.asr.piezoelectrictensor": [[354, 2, 1, "", "Result"], [355, 1, 1, "", "webpanel"]], "ase2sprkkr.asr.piezoelectrictensor.Result": [[354, 3, 1, "", "__init__"], [354, 4, 1, "", "_known_data_keys"], [354, 5, 1, "", "eps_clamped_vvv"], [354, 5, 1, "", "eps_vvv"], [354, 4, 1, "", "formats"], [354, 4, 1, "", "key_descriptions"], [354, 4, 1, "", "strict"]], "ase2sprkkr.asr.plasmafrequency": [[357, 2, 1, "", "Result"], [358, 1, 1, "", "get_kpts_size"], [359, 1, 1, "", "webpanel"]], "ase2sprkkr.asr.plasmafrequency.Result": [[357, 3, 1, "", "__init__"], [357, 4, 1, "", "_known_data_keys"], [357, 4, 1, "", "formats"], [357, 4, 1, "", "key_descriptions"], [357, 5, 1, "", "plasmafreq_vv"], [357, 5, 1, "", "plasmafrequency_x"], [357, 5, 1, "", "plasmafrequency_y"], [357, 4, 1, "", "strict"]], "ase2sprkkr.asr.polarizability": [[361, 2, 1, "", "Result"], [362, 1, 1, "", "get_kpts_size"], [363, 1, 1, "", "polarizability"], [364, 1, 1, "", "webpanel"]], "ase2sprkkr.asr.polarizability.Result": [[361, 3, 1, "", "__init__"], [361, 4, 1, "", "_known_data_keys"], [361, 5, 1, "", "alpha0x_w"], [361, 5, 1, "", "alpha0y_w"], [361, 5, 1, "", "alpha0z_w"], [361, 5, 1, "", "alphax_el"], [361, 5, 1, "", "alphax_w"], [361, 5, 1, "", "alphay_el"], [361, 5, 1, "", "alphay_w"], [361, 5, 1, "", "alphaz_el"], [361, 5, 1, "", "alphaz_w"], [361, 4, 1, "", "formats"], [361, 5, 1, "", "frequencies"], [361, 4, 1, "", "key_descriptions"], [361, 5, 1, "", "plasmafreq_vv"], [361, 4, 1, "", "strict"]], "ase2sprkkr.asr.projected_bandstructure": [[366, 2, 1, "", "Result"], [367, 1, 1, "", "get_bs_sampling"], [368, 1, 1, "", "get_orbital_ldos"], [369, 1, 1, "", "get_pie_markers"], [370, 1, 1, "", "get_pie_slice"], [371, 1, 1, "", "get_yl_ordering"], [372, 1, 1, "", "projected_bs_pbe"], [373, 1, 1, "", "webpanel"]], "ase2sprkkr.asr.projected_bandstructure.Result": [[366, 3, 1, "", "__init__"], [366, 4, 1, "", "_known_data_keys"], [366, 4, 1, "", "formats"], [366, 4, 1, "", "key_descriptions"], [366, 4, 1, "", "strict"], [366, 5, 1, "", "symbols"], [366, 5, 1, "", "weight_skni"], [366, 5, 1, "", "yl_i"]], "ase2sprkkr.asr.raman": [[376, 2, 1, "", "Result"], [377, 1, 1, "", "count_deg"], [378, 1, 1, "", "raman"], [379, 1, 1, "", "webpanel"]], "ase2sprkkr.asr.raman.Result": [[376, 3, 1, "", "__init__"], [376, 4, 1, "", "_known_data_keys"], [376, 4, 1, "", "formats"], [376, 4, 1, "", "strict"]], "ase2sprkkr.asr.relax": [[381, 6, 1, "", "BrokenSymmetryError"], [382, 2, 1, "", "Result"], [383, 2, 1, "", "SpgAtoms"], [384, 1, 1, "", "is_relax_done"], [385, 2, 1, "", "myBFGS"], [386, 1, 1, "", "relax"], [387, 1, 1, "", "set_initial_magnetic_moments"]], "ase2sprkkr.asr.relax.Result": [[382, 3, 1, "", "__init__"], [382, 4, 1, "", "_known_data_keys"], [382, 5, 1, "", "a"], [382, 5, 1, "", "alpha"], [382, 5, 1, "", "atoms"], [382, 5, 1, "", "b"], [382, 5, 1, "", "beta"], [382, 5, 1, "", "c"], [382, 5, 1, "", "edft"], [382, 5, 1, "", "etot"], [382, 5, 1, "", "gamma"], [382, 5, 1, "", "images"], [382, 4, 1, "", "key_descriptions"], [382, 5, 1, "", "spos"], [382, 4, 1, "", "strict"], [382, 5, 1, "", "symbols"], [382, 4, 1, "", "version"]], "ase2sprkkr.asr.relax.SpgAtoms": [[383, 3, 1, "", "__init__"], [383, 3, 1, "", "from_atoms"], [383, 3, 1, "", "get_forces"], [383, 3, 1, "", "get_stress"], [383, 3, 1, "", "set_symmetries"]], "ase2sprkkr.asr.relax.myBFGS": [[385, 3, 1, "", "__init__"], [385, 3, 1, "", "log"]], "ase2sprkkr.asr.setinfo": [[389, 2, 1, "", "KeyValuePair"], [390, 1, 1, "", "check_key_value"]], "ase2sprkkr.asr.setinfo.KeyValuePair": [[389, 3, 1, "", "__init__"], [389, 3, 1, "", "convert"]], "ase2sprkkr.asr.setup": [[392, 0, 0, "-", "decorate"], [397, 0, 0, "-", "defects"], [402, 0, 0, "-", "displacements"], [407, 0, 0, "-", "magnetize"], [408, 0, 0, "-", "materials"], [409, 0, 0, "-", "params"], [410, 0, 0, "-", "scanparams"], [411, 0, 0, "-", "strains"], [415, 0, 0, "-", "symmetrize"]], "ase2sprkkr.asr.setup.decorate": [[393, 1, 1, "", "apply_substitution"], [394, 1, 1, "", "find_substitutions"], [395, 1, 1, "", "generate_structures"], [396, 1, 1, "", "get_p_ab"]], "ase2sprkkr.asr.setup.defects": [[398, 1, 1, "", "collect_data"], [399, 1, 1, "", "create_folder_structure"], [400, 1, 1, "", "setup_defects"], [401, 1, 1, "", "setup_supercell"]], "ase2sprkkr.asr.setup.displacements": [[403, 1, 1, "", "create_displacements_folder"], [404, 1, 1, "", "displace_atom"], [405, 1, 1, "", "get_all_displacements"], [406, 1, 1, "", "get_displacement_folder"]], "ase2sprkkr.asr.setup.strains": [[412, 1, 1, "", "get_relevant_strains"], [413, 1, 1, "", "get_strained_folder_name"], [414, 1, 1, "", "setup_strains"]], "ase2sprkkr.asr.setup.symmetrize": [[416, 1, 1, "", "symmetrize_atoms"]], "ase2sprkkr.asr.stiffness": [[418, 2, 1, "", "Result"], [419, 1, 1, "", "webpanel"]], "ase2sprkkr.asr.stiffness.Result": [[418, 3, 1, "", "__init__"], [418, 4, 1, "", "_known_data_keys"], [418, 5, 1, "", "c_11"], [418, 5, 1, "", "c_12"], [418, 5, 1, "", "c_13"], [418, 5, 1, "", "c_14"], [418, 5, 1, "", "c_15"], [418, 5, 1, "", "c_16"], [418, 5, 1, "", "c_21"], [418, 5, 1, "", "c_22"], [418, 5, 1, "", "c_23"], [418, 5, 1, "", "c_24"], [418, 5, 1, "", "c_25"], [418, 5, 1, "", "c_26"], [418, 5, 1, "", "c_31"], [418, 5, 1, "", "c_32"], [418, 5, 1, "", "c_33"], [418, 5, 1, "", "c_34"], [418, 5, 1, "", "c_35"], [418, 5, 1, "", "c_36"], [418, 5, 1, "", "c_41"], [418, 5, 1, "", "c_42"], [418, 5, 1, "", "c_43"], [418, 5, 1, "", "c_44"], [418, 5, 1, "", "c_45"], [418, 5, 1, "", "c_46"], [418, 5, 1, "", "c_51"], [418, 5, 1, "", "c_52"], [418, 5, 1, "", "c_53"], [418, 5, 1, "", "c_54"], [418, 5, 1, "", "c_55"], [418, 5, 1, "", "c_56"], [418, 5, 1, "", "c_61"], [418, 5, 1, "", "c_62"], [418, 5, 1, "", "c_63"], [418, 5, 1, "", "c_64"], [418, 5, 1, "", "c_65"], [418, 5, 1, "", "c_66"], [418, 5, 1, "", "dynamic_stability_stiffness"], [418, 5, 1, "", "eigenvalues"], [418, 4, 1, "", "formats"], [418, 4, 1, "", "key_descriptions"], [418, 5, 1, "", "speed_of_sound_x"], [418, 5, 1, "", "speed_of_sound_y"], [418, 5, 1, "", "stiffness_tensor"], [418, 4, 1, "", "strict"]], "ase2sprkkr.asr.structureinfo": [[421, 2, 1, "", "Result"], [422, 1, 1, "", "get_reduced_formula"], [423, 1, 1, "", "webpanel"]], "ase2sprkkr.asr.structureinfo.Result": [[421, 3, 1, "", "__init__"], [421, 4, 1, "", "_known_data_keys"], [421, 5, 1, "", "cell_area"], [421, 5, 1, "", "crystal_prototype"], [421, 4, 1, "", "formats"], [421, 5, 1, "", "formula"], [421, 5, 1, "", "has_inversion_symmetry"], [421, 4, 1, "", "key_descriptions"], [421, 5, 1, "", "pointgroup"], [421, 5, 1, "", "spacegroup"], [421, 5, 1, "", "spglib_dataset"], [421, 5, 1, "", "spgnum"], [421, 5, 1, "", "stoichiometry"], [421, 4, 1, "", "strict"]], "ase2sprkkr.asr.test": [[425, 0, 0, "-", "acceptance"], [432, 0, 0, "-", "conftest"], [435, 0, 0, "-", "fixtures"], [444, 0, 0, "-", "materials"], [445, 0, 0, "-", "mocks"], [491, 0, 0, "-", "test_bandstructure"], [493, 0, 0, "-", "test_berry"], [496, 0, 0, "-", "test_borncharges"], [498, 0, 0, "-", "test_bse"], [500, 0, 0, "-", "test_cli"], [509, 0, 0, "-", "test_convex_hull"], [511, 0, 0, "-", "test_core"], [517, 0, 0, "-", "test_core_material"], [519, 0, 0, "-", "test_core_results"], [527, 0, 0, "-", "test_database_duplicates"], [531, 0, 0, "-", "test_database_fromtree"], [537, 0, 0, "-", "test_database_rmsd"], [546, 0, 0, "-", "test_database_totree"], [550, 0, 0, "-", "test_dimensionality"], [553, 0, 0, "-", "test_emasses"], [558, 0, 0, "-", "test_fixtures"], [560, 0, 0, "-", "test_formalpolarization"], [563, 0, 0, "-", "test_gs"], [567, 0, 0, "-", "test_gw"], [569, 0, 0, "-", "test_hse"], [571, 0, 0, "-", "test_pdos"], [574, 0, 0, "-", "test_phonons"], [576, 0, 0, "-", "test_phonopy"], [578, 0, 0, "-", "test_piezoelectrictensor"], [582, 0, 0, "-", "test_plasmafrequency"], [584, 0, 0, "-", "test_polarizability"], [586, 0, 0, "-", "test_projected_bandstructure"], [588, 0, 0, "-", "test_raman"], [590, 0, 0, "-", "test_relax"], [598, 0, 0, "-", "test_setinfo"], [602, 0, 0, "-", "test_setup_decorate"], [604, 0, 0, "-", "test_setup_displacements"], [608, 0, 0, "-", "test_setup_magnetize"], [611, 0, 0, "-", "test_setup_materials"], [613, 0, 0, "-", "test_setup_scanparams"], [615, 0, 0, "-", "test_setup_strains"], [618, 0, 0, "-", "test_setup_symmetrize"], [620, 0, 0, "-", "test_stiffness"]], "ase2sprkkr.asr.test.acceptance": [[426, 0, 0, "-", "test_borncharges"], [428, 0, 0, "-", "test_piezoelectrictensor"], [430, 0, 0, "-", "test_relax"]], "ase2sprkkr.asr.test.acceptance.test_borncharges": [[427, 1, 1, "", "test_gpaw_berry_get_berry_phases_integration"]], "ase2sprkkr.asr.test.acceptance.test_piezoelectrictensor": [[429, 1, 1, "", "test_piezo_BN"]], "ase2sprkkr.asr.test.acceptance.test_relax": [[431, 1, 1, "", "test_relax_fe_gpaw"]], "ase2sprkkr.asr.test.conftest": [[433, 1, 1, "", "pytest_configure"], [434, 1, 1, "", "pytest_sessionstart"]], "ase2sprkkr.asr.test.fixtures": [[436, 1, 1, "", "_get_webcontent"], [437, 1, 1, "", "asr_tmpdir"], [438, 1, 1, "", "asr_tmpdir_w_params"], [439, 1, 1, "", "duplicates_test_db"], [440, 1, 1, "", "get_webcontent"], [441, 1, 1, "", "mockgpaw"], [442, 1, 1, "", "set_asr_test_environ_variable"], [443, 1, 1, "", "test_material"]], "ase2sprkkr.asr.test.mocks": [[446, 0, 0, "-", "gpaw"]], "ase2sprkkr.asr.test.mocks.gpaw": [[447, 0, 0, "-", "berryphase"], [449, 0, 0, "-", "calculator"], [456, 0, 0, "-", "hybrids"], [458, 0, 0, "-", "kpt_descriptor"], [461, 0, 0, "-", "mpi"], [466, 0, 0, "-", "occupations"], [469, 0, 0, "-", "response"], [476, 0, 0, "-", "spinorbit"], [479, 0, 0, "-", "symmetry"], [481, 0, 0, "-", "utilities"], [488, 0, 0, "-", "xc"]], "ase2sprkkr.asr.test.mocks.gpaw.berryphase": [[448, 1, 1, "", "get_berry_phases"]], "ase2sprkkr.asr.test.mocks.gpaw.calculator": [[450, 2, 1, "", "ASRCalculator"], [451, 2, 1, "", "DOSCalculator"], [452, 2, 1, "", "Occupations"], [453, 2, 1, "", "Parameters"], [454, 2, 1, "", "Setups"], [455, 2, 1, "", "WaveFunctions"]], "ase2sprkkr.asr.test.mocks.gpaw.calculator.ASRCalculator": [[450, 3, 1, "", "__init__"], [450, 4, 1, "", "_abc_impl"], [450, 3, 1, "", "_get_band_gap"], [450, 3, 1, "", "_get_berry_phases"], [450, 3, 1, "", "_get_dipole_moment"], [450, 3, 1, "", "_get_fermi_level"], [450, 3, 1, "", "_get_forces"], [450, 3, 1, "", "_get_magmom"], [450, 3, 1, "", "_get_magmoms"], [450, 3, 1, "", "_get_potential_energy"], [450, 3, 1, "", "_get_scaled_positions"], [450, 3, 1, "", "_get_setup"], [450, 3, 1, "", "_get_setup_fingerprint"], [450, 3, 1, "", "_get_setup_nvalence"], [450, 3, 1, "", "_get_setup_symbol"], [450, 3, 1, "", "_get_setups"], [450, 3, 1, "", "_get_stress"], [450, 3, 1, "", "calculate"], [450, 4, 1, "", "default_parameters"], [450, 3, 1, "", "diagonalize_full_hamiltonian"], [450, 3, 1, "", "dos"], [450, 3, 1, "", "fixed_density"], [450, 3, 1, "", "get_all_eigenvalues"], [450, 3, 1, "", "get_bz_k_points"], [450, 3, 1, "", "get_bz_to_ibz_map"], [450, 3, 1, "", "get_eigenvalues"], [450, 3, 1, "", "get_electrostatic_potential"], [450, 3, 1, "", "get_fermi_level"], [450, 3, 1, "", "get_ibz_k_points"], [450, 3, 1, "", "get_k_point_weights"], [450, 3, 1, "", "get_number_of_bands"], [450, 3, 1, "", "get_number_of_conduction_electrons"], [450, 3, 1, "", "get_number_of_electrons"], [450, 3, 1, "", "get_number_of_spins"], [450, 3, 1, "", "get_number_of_valence_electrons"], [450, 4, 1, "", "implemented_properties"], [450, 4, 1, "", "occupations"], [450, 3, 1, "", "read"], [450, 3, 1, "", "set"], [450, 5, 1, "", "spos_ac"], [450, 4, 1, "", "wfs"], [450, 4, 1, "", "world"], [450, 3, 1, "", "write"]], "ase2sprkkr.asr.test.mocks.gpaw.calculator.DOSCalculator": [[451, 3, 1, "", "__init__"], [451, 3, 1, "", "raw_dos"], [451, 3, 1, "", "raw_pdos"]], "ase2sprkkr.asr.test.mocks.gpaw.calculator.Occupations": [[452, 3, 1, "", "__init__"], [452, 3, 1, "", "todict"]], "ase2sprkkr.asr.test.mocks.gpaw.calculator.Parameters": [[453, 3, 1, "", "__init__"]], "ase2sprkkr.asr.test.mocks.gpaw.calculator.Setups": [[454, 3, 1, "", "__init__"], [454, 5, 1, "", "id_a"], [454, 4, 1, "", "nvalence"]], "ase2sprkkr.asr.test.mocks.gpaw.calculator.WaveFunctions": [[455, 2, 1, "", "BandDescriptor"], [455, 2, 1, "", "GridDescriptor"], [455, 2, 1, "", "KPointDescriptor"], [455, 3, 1, "", "__init__"], [455, 4, 1, "", "bd"], [455, 4, 1, "", "gd"], [455, 4, 1, "", "kd"], [455, 4, 1, "", "nvalence"]], "ase2sprkkr.asr.test.mocks.gpaw.hybrids": [[457, 0, 0, "-", "eigenvalues"]], "ase2sprkkr.asr.test.mocks.gpaw.kpt_descriptor": [[459, 1, 1, "", "kpts2sizeandoffsets"], [460, 1, 1, "", "to1bz"]], "ase2sprkkr.asr.test.mocks.gpaw.mpi": [[462, 1, 1, "", "barrier"], [463, 1, 1, "", "broadcast"], [464, 1, 1, "", "new_communicator"], [465, 1, 1, "", "world_sum"]], "ase2sprkkr.asr.test.mocks.gpaw.occupations": [[467, 2, 1, "", "FermiDirac"], [468, 1, 1, "", "create_occ_calc"]], "ase2sprkkr.asr.test.mocks.gpaw.occupations.FermiDirac": [[467, 3, 1, "", "__init__"]], "ase2sprkkr.asr.test.mocks.gpaw.response": [[470, 0, 0, "-", "bse"], [472, 0, 0, "-", "df"], [474, 0, 0, "-", "g0w0"]], "ase2sprkkr.asr.test.mocks.gpaw.response.bse": [[471, 2, 1, "", "BSE"]], "ase2sprkkr.asr.test.mocks.gpaw.response.bse.BSE": [[471, 3, 1, "", "__init__"], [471, 3, 1, "", "calculate"], [471, 3, 1, "", "get_polarizability"]], "ase2sprkkr.asr.test.mocks.gpaw.response.df": [[473, 2, 1, "", "DielectricFunction"]], "ase2sprkkr.asr.test.mocks.gpaw.response.df.DielectricFunction": [[473, 3, 1, "", "__init__"], [473, 4, 1, "", "chi0"], [473, 3, 1, "", "get_frequencies"], [473, 3, 1, "", "get_polarizability"]], "ase2sprkkr.asr.test.mocks.gpaw.response.g0w0": [[475, 2, 1, "", "G0W0"]], "ase2sprkkr.asr.test.mocks.gpaw.response.g0w0.G0W0": [[475, 3, 1, "", "__init__"], [475, 3, 1, "", "calculate"]], "ase2sprkkr.asr.test.mocks.gpaw.spinorbit": [[477, 2, 1, "", "SOC"], [478, 1, 1, "", "soc_eigenstates"]], "ase2sprkkr.asr.test.mocks.gpaw.spinorbit.SOC": [[477, 3, 1, "", "__init__"], [477, 3, 1, "", "calculate_band_energy"], [477, 3, 1, "", "eigenvalues"], [477, 3, 1, "", "spin_projections"]], "ase2sprkkr.asr.test.mocks.gpaw.symmetry": [[480, 2, 1, "", "Symmetry"]], "ase2sprkkr.asr.test.mocks.gpaw.symmetry.Symmetry": [[480, 3, 1, "", "__init__"], [480, 3, 1, "", "analyze"]], "ase2sprkkr.asr.test.mocks.gpaw.utilities": [[482, 0, 0, "-", "dos"], [484, 0, 0, "-", "ibz2bz"], [486, 0, 0, "-", "progressbar"]], "ase2sprkkr.asr.test.mocks.gpaw.utilities.dos": [[483, 1, 1, "", "raw_orbital_LDOS"]], "ase2sprkkr.asr.test.mocks.gpaw.utilities.ibz2bz": [[485, 1, 1, "", "ibz2bz"]], "ase2sprkkr.asr.test.mocks.gpaw.utilities.progressbar": [[487, 2, 1, "", "ProgressBar"]], "ase2sprkkr.asr.test.mocks.gpaw.utilities.progressbar.ProgressBar": [[487, 3, 1, "", "__init__"], [487, 3, 1, "", "enumerate"]], "ase2sprkkr.asr.test.mocks.gpaw.xc": [[489, 0, 0, "-", "exx"], [490, 0, 0, "-", "tools"]], "ase2sprkkr.asr.test.test_bandstructure": [[492, 1, 1, "", "test_bandstructure_main"]], "ase2sprkkr.asr.test.test_berry": [[494, 1, 1, "", "test_berry"], [495, 1, 1, "", "test_berry_nontrivial"]], "ase2sprkkr.asr.test.test_borncharges": [[497, 1, 1, "", "test_borncharges"]], "ase2sprkkr.asr.test.test_bse": [[499, 1, 1, "", "test_bse"]], "ase2sprkkr.asr.test.test_cli": [[501, 1, 1, "", "test_asr"], [502, 1, 1, "", "test_asr_find"], [503, 1, 1, "", "test_asr_find_help"], [504, 1, 1, "", "test_asr_find_no_versions"], [505, 1, 1, "", "test_asr_list"], [506, 1, 1, "", "test_asr_results_bandstructure"], [507, 1, 1, "", "test_asr_results_help"], [508, 1, 1, "", "test_asr_run"]], "ase2sprkkr.asr.test.test_convex_hull": [[510, 1, 1, "", "test_convex_hull"]], "ase2sprkkr.asr.test.test_core": [[512, 1, 1, "", "recipe"], [513, 1, 1, "", "test_core"], [514, 1, 1, "", "test_recipe_defaults"], [515, 1, 1, "", "test_recipe_setting_new_defaults"], [516, 1, 1, "", "test_recipe_setting_overriding_defaults"]], "ase2sprkkr.asr.test.test_core_material": [[518, 1, 1, "", "test_asr_cli_results_figures_gs"]], "ase2sprkkr.asr.test.test_core_results": [[520, 2, 1, "", "MyResult"], [521, 2, 1, "", "MyResultVer0"], [522, 2, 1, "", "MyWebPanel"], [523, 1, 1, "", "test_read_old_format"], [524, 1, 1, "", "test_reading_older_version"], [525, 1, 1, "", "test_reading_result"], [526, 1, 1, "", "test_results_object"]], "ase2sprkkr.asr.test.test_core_results.MyResult": [[520, 3, 1, "", "__init__"], [520, 4, 1, "", "_known_data_keys"], [520, 5, 1, "", "a"], [520, 4, 1, "", "formats"], [520, 4, 1, "", "key_descriptions"], [520, 4, 1, "", "prev_version"], [520, 4, 1, "", "strict"], [520, 4, 1, "", "version"]], "ase2sprkkr.asr.test.test_core_results.MyResultVer0": [[521, 3, 1, "", "__init__"], [521, 4, 1, "", "_known_data_keys"], [521, 5, 1, "", "a"], [521, 5, 1, "", "b"], [521, 4, 1, "", "key_descriptions"], [521, 4, 1, "", "strict"], [521, 4, 1, "", "version"]], "ase2sprkkr.asr.test.test_core_results.MyWebPanel": [[522, 3, 1, "", "__init__"], [522, 4, 1, "", "_abc_impl"]], "ase2sprkkr.asr.test.test_database_duplicates": [[528, 1, 1, "", "test_database_duplicates"], [529, 1, 1, "", "test_database_duplicates_filter_magstate"], [530, 1, 1, "", "test_database_duplicates_no_duplicates"]], "ase2sprkkr.asr.test.test_database_fromtree": [[532, 1, 1, "", "folder_tree"], [533, 1, 1, "", "make_tree"], [534, 1, 1, "", "test_database_fromtree_raises_when_missing_uids"], [535, 1, 1, "", "test_database_fromtree_totree"], [536, 1, 1, "", "test_database_fromtree_works_without_write_permission"]], "ase2sprkkr.asr.test.test_database_rmsd": [[538, 1, 1, "", "rattle_atoms"], [539, 1, 1, "", "test_database_rmsd_duplicates"], [540, 1, 1, "", "test_database_rmsd_duplicates_comparison_keys"], [541, 1, 1, "", "test_database_rmsd_move_one_atom"], [542, 1, 1, "", "test_database_rmsd_none_handling"], [543, 1, 1, "", "test_database_rmsd_not_equal"], [544, 1, 1, "", "test_database_rmsd_rattled"], [545, 1, 1, "", "test_database_rmsd_rotation"]], "ase2sprkkr.asr.test.test_database_totree": [[547, 1, 1, "", "make_test_db"], [548, 1, 1, "", "test_database_totree"], [549, 1, 1, "", "test_database_totree_files_and_hard_links"]], "ase2sprkkr.asr.test.test_dimensionality": [[551, 1, 1, "", "test_dimensionality"], [552, 1, 1, "", "test_dimensionality_cli"]], "ase2sprkkr.asr.test.test_emasses": [[554, 1, 1, "", "_get_all_eigenvalues"], [555, 1, 1, "", "resultstest"], [556, 1, 1, "", "test_emasses_freelectron"], [557, 1, 1, "", "test_emasses_indirect"]], "ase2sprkkr.asr.test.test_fixtures": [[559, 1, 1, "", "test_env_variables"]], "ase2sprkkr.asr.test.test_formalpolarization": [[561, 1, 1, "", "test_formalpolarization"], [562, 1, 1, "", "test_formalpolarization_test_atoms_too_close_to_boundary"]], "ase2sprkkr.asr.test.test_gs": [[564, 1, 1, "", "test_gs"], [565, 1, 1, "", "test_gs_asr_cli_results_figures"], [566, 1, 1, "", "test_gs_integration_gpaw"]], "ase2sprkkr.asr.test.test_gw": [[568, 1, 1, "", "test_gw"]], "ase2sprkkr.asr.test.test_hse": [[570, 1, 1, "", "test_hse"]], "ase2sprkkr.asr.test.test_pdos": [[572, 1, 1, "", "test_pdos"], [573, 1, 1, "", "test_pdos_full"]], "ase2sprkkr.asr.test.test_phonons": [[575, 1, 1, "", "test_phonons"]], "ase2sprkkr.asr.test.test_phonopy": [[577, 1, 1, "", "test_phonopy"]], "ase2sprkkr.asr.test.test_piezoelectrictensor": [[579, 1, 1, "", "get_strain_from_atoms"], [580, 1, 1, "", "test_piezoelectrictensor"], [581, 1, 1, "", "zero_pad_non_pbc_strain_directions"]], "ase2sprkkr.asr.test.test_plasmafrequency": [[583, 1, 1, "", "test_plasmafrequency"]], "ase2sprkkr.asr.test.test_polarizability": [[585, 1, 1, "", "test_polarizability"]], "ase2sprkkr.asr.test.test_projected_bandstructure": [[587, 1, 1, "", "test_projected_bs_mocked"]], "ase2sprkkr.asr.test.test_raman": [[589, 1, 1, "", "test_raman"]], "ase2sprkkr.asr.test.test_relax": [[591, 1, 1, "", "test_relax_basic"], [592, 1, 1, "", "test_relax_bn_gpaw"], [593, 1, 1, "", "test_relax_emt"], [594, 1, 1, "", "test_relax_emt_fail_broken_symmetry"], [595, 1, 1, "", "test_relax_find_higher_symmetry"], [596, 1, 1, "", "test_relax_magmoms"], [597, 1, 1, "", "test_relax_si_gpaw"]], "ase2sprkkr.asr.test.test_setinfo": [[599, 1, 1, "", "test_info"], [600, 1, 1, "", "test_info_call_from_cli"], [601, 1, 1, "", "test_info_raises_with_protected_key"]], "ase2sprkkr.asr.test.test_setup_decorate": [[603, 1, 1, "", "test_setup_decorate_si"]], "ase2sprkkr.asr.test.test_setup_displacements": [[605, 1, 1, "", "test_setup_displacements"], [606, 1, 1, "", "test_setup_displacements_displace_atom"], [607, 1, 1, "", "test_setup_displacements_get_all_displacements"]], "ase2sprkkr.asr.test.test_setup_magnetize": [[609, 1, 1, "", "test_setup_magnetize"], [610, 1, 1, "", "test_setup_magnetize_state_inputs"]], "ase2sprkkr.asr.test.test_setup_materials": [[612, 1, 1, "", "test_setup_magnetize"]], "ase2sprkkr.asr.test.test_setup_scanparams": [[614, 1, 1, "", "test_setup_params"]], "ase2sprkkr.asr.test.test_setup_strains": [[616, 1, 1, "", "test_setup_strains"], [617, 1, 1, "", "test_setup_strains_get_relevant_strains"]], "ase2sprkkr.asr.test.test_setup_symmetrize": [[619, 1, 1, "", "test_setup_symmetrize"]], "ase2sprkkr.asr.test.test_stiffness": [[621, 1, 1, "", "test_stiffness_emt"], [622, 1, 1, "", "test_stiffness_gpaw"]], "ase2sprkkr.asr.utils": [[624, 0, 0, "-", "args"], [626, 0, 0, "-", "calculator_utils"], [629, 0, 0, "-", "gpw2eigs"], [632, 0, 0, "-", "kpts"], [634, 0, 0, "-", "magnetism"], [637, 0, 0, "-", "refinegs"], [642, 0, 0, "-", "something"], [647, 0, 0, "-", "symmetry"], [653, 0, 0, "-", "utils"]], "ase2sprkkr.asr.utils.args": [[625, 1, 1, "", "parse_arg"]], "ase2sprkkr.asr.utils.calculator_utils": [[627, 1, 1, "", "fermi_level"], [628, 1, 1, "", "get_eigenvalues"]], "ase2sprkkr.asr.utils.gpw2eigs": [[630, 1, 1, "", "calc2eigs"], [631, 1, 1, "", "gpw2eigs"]], "ase2sprkkr.asr.utils.kpts": [[633, 1, 1, "", "get_kpts_size"]], "ase2sprkkr.asr.utils.magnetism": [[635, 1, 1, "", "is_magnetic"], [636, 1, 1, "", "magnetic_atoms"]], "ase2sprkkr.asr.utils.refinegs": [[638, 1, 1, "", "get_filenames"], [639, 1, 1, "", "get_parstr"], [640, 1, 1, "", "nonselfc"], [641, 1, 1, "", "refinegs"]], "ase2sprkkr.asr.utils.something": [[643, 1, 1, "", "calculate_something"], [644, 1, 1, "", "collect_data"], [645, 1, 1, "", "create_plot"], [646, 1, 1, "", "webpanel"]], "ase2sprkkr.asr.utils.symmetry": [[648, 1, 1, "", "_atoms2symmetry_gpaw"], [649, 1, 1, "", "atoms2spgcell"], [650, 1, 1, "", "atoms2symmetry"], [651, 1, 1, "", "has_inversion"], [652, 1, 1, "", "restrict_spin_projection_2d"]], "ase2sprkkr.asr.utils.utils": [[654, 1, 1, "", "timed_print"]], "ase2sprkkr.bindings": [[657, 0, 0, "-", "empty_spheres"], [662, 0, 0, "-", "es_finder"], [664, 0, 0, "-", "nomad"], [673, 0, 0, "-", "spglib"], [677, 0, 0, "-", "tests"], [691, 0, 0, "-", "xband"]], "ase2sprkkr.bindings.empty_spheres": [[658, 2, 1, "", "EmptySpheresResult"], [659, 1, 1, "", "add_empty_spheres"], [660, 1, 1, "", "empty_spheres"], [661, 1, 1, "", "empty_spheres_atoms"]], "ase2sprkkr.bindings.empty_spheres.EmptySpheresResult": [[658, 3, 1, "", "__init__"]], "ase2sprkkr.bindings.es_finder": [[663, 1, 1, "", "empty_spheres"]], "ase2sprkkr.bindings.nomad": [[665, 0, 0, "-", "nomad"], [670, 0, 0, "-", "nomad_api"]], "ase2sprkkr.bindings.nomad.nomad": [[666, 2, 1, "", "ExternalEntry"], [667, 2, 1, "", "NomadArchive"], [668, 2, 1, "", "NomadEntry"], [669, 1, 1, "", "map_io_to_nomad"]], "ase2sprkkr.bindings.nomad.nomad.ExternalEntry": [[666, 3, 1, "", "__init__"], [666, 3, 1, "", "outputs"]], "ase2sprkkr.bindings.nomad.nomad.NomadArchive": [[667, 3, 1, "", "__init__"], [667, 3, 1, "", "_add_entry"], [667, 3, 1, "", "add_entry"], [667, 3, 1, "", "add_symlink"], [667, 3, 1, "", "finalize"], [667, 3, 1, "", "resolve_auto_dependencies"], [667, 3, 1, "", "workflow"]], "ase2sprkkr.bindings.nomad.nomad.NomadEntry": [[668, 3, 1, "", "__init__"], [668, 3, 1, "", "_resource"], [668, 5, 1, "", "depends_on"], [668, 3, 1, "", "file"], [668, 3, 1, "", "inputs"], [668, 3, 1, "", "outputs"], [668, 5, 1, "", "symbols"], [668, 3, 1, "", "task"], [668, 5, 1, "", "task_name"]], "ase2sprkkr.bindings.nomad.nomad_api": [[671, 2, 1, "", "NomadApi"], [672, 1, 1, "", "with_token"]], "ase2sprkkr.bindings.nomad.nomad_api.NomadApi": [[671, 3, 1, "", "__init__"], [671, 3, 1, "", "check_upload_status"], [671, 3, 1, "", "create_dataset"], [671, 4, 1, "", "default_api_url"], [671, 3, 1, "", "edit_upload_metadata"], [671, 3, 1, "", "get_authentication_token"], [671, 3, 1, "", "publish_upload"], [671, 4, 1, "", "requests"], [671, 3, 1, "", "upload"]], "ase2sprkkr.bindings.spglib": [[674, 2, 1, "", "SpacegroupInfo"], [675, 1, 1, "", "possibly_equivalent_sites"], [676, 1, 1, "", "spglib_dataset"]], "ase2sprkkr.bindings.spglib.SpacegroupInfo": [[674, 3, 1, "", "__init__"], [674, 3, 1, "", "compute_spacegroup_info"], [674, 5, 1, "", "dataset"], [674, 5, 1, "", "equivalent_sites"], [674, 3, 1, "", "from_atoms"], [674, 3, 1, "", "number"], [674, 3, 1, "", "recompute"]], "ase2sprkkr.bindings.tests": [[678, 0, 0, "-", "init_tests"], [687, 0, 0, "-", "test_es_finder"], [689, 0, 0, "-", "test_spglib"]], "ase2sprkkr.bindings.tests.init_tests": [[679, 2, 1, "", "TestCase"], [680, 1, 1, "", "arr_testfce"], [681, 1, 1, "", "assertDictEqual"], [682, 1, 1, "", "assertListEqual"], [683, 1, 1, "", "assert_almost_equals"], [684, 1, 1, "", "assert_equals"], [685, 2, 1, "", "extdict"], [686, 1, 1, "", "testfce"]], "ase2sprkkr.bindings.tests.init_tests.TestCase": [[679, 3, 1, "", "__init__"], [679, 4, 1, "", "_calc_args"], [679, 4, 1, "", "_print_output"], [679, 3, 1, "", "almost_equal_precision"], [679, 3, 1, "", "assertAlmostEqual"], [679, 3, 1, "", "assertAsyncEqual"], [679, 3, 1, "", "assertAsyncRaises"], [679, 3, 1, "", "assertEqual"], [679, 3, 1, "", "assertFalse"], [679, 3, 1, "", "assertIsNone"], [679, 3, 1, "", "assertNotEqual"], [679, 3, 1, "", "assertRaises"], [679, 3, 1, "", "assertTrue"], [679, 3, 1, "", "calc_args"], [679, 3, 1, "", "runAsync"], [679, 3, 1, "", "run_sprkkr"], [679, 3, 1, "", "temporary_dir"]], "ase2sprkkr.bindings.tests.init_tests.extdict": [[685, 3, 1, "", "__init__"]], "ase2sprkkr.bindings.tests.test_es_finder": [[688, 2, 1, "", "TestEsFinder"]], "ase2sprkkr.bindings.tests.test_es_finder.TestEsFinder": [[688, 3, 1, "", "__init__"], [688, 3, 1, "", "test_es_finder"]], "ase2sprkkr.bindings.tests.test_spglib": [[690, 2, 1, "", "TestSpgilib"]], "ase2sprkkr.bindings.tests.test_spglib.TestSpgilib": [[690, 3, 1, "", "__init__"], [690, 3, 1, "", "test_possibly_equivalent_sites"], [690, 3, 1, "", "test_spacegroup_info"]], "ase2sprkkr.bindings.xband": [[692, 0, 0, "-", "spheres"], [693, 0, 0, "-", "symmetry"], [694, 0, 0, "-", "tests"]], "ase2sprkkr.bindings.xband.tests": [[695, 0, 0, "-", "init_tests"], [705, 0, 0, "-", "test_spheres"]], "ase2sprkkr.bindings.xband.tests.init_tests": [[696, 2, 1, "", "TestCase"], [697, 1, 1, "", "arr_testfce"], [698, 1, 1, "", "assertDictEqual"], [699, 1, 1, "", "assertListEqual"], [700, 1, 1, "", "assert_almost_equals"], [701, 1, 1, "", "assert_equals"], [702, 2, 1, "", "extdict"], [703, 1, 1, "", "patch_package"], [704, 1, 1, "", "testfce"]], "ase2sprkkr.bindings.xband.tests.init_tests.TestCase": [[696, 3, 1, "", "__init__"], [696, 4, 1, "", "_calc_args"], [696, 4, 1, "", "_print_output"], [696, 3, 1, "", "almost_equal_precision"], [696, 3, 1, "", "assertAlmostEqual"], [696, 3, 1, "", "assertAsyncEqual"], [696, 3, 1, "", "assertAsyncRaises"], [696, 3, 1, "", "assertEqual"], [696, 3, 1, "", "assertFalse"], [696, 3, 1, "", "assertIsNone"], [696, 3, 1, "", "assertNotEqual"], [696, 3, 1, "", "assertRaises"], [696, 3, 1, "", "assertTrue"], [696, 3, 1, "", "calc_args"], [696, 3, 1, "", "runAsync"], [696, 3, 1, "", "run_sprkkr"], [696, 3, 1, "", "temporary_dir"]], "ase2sprkkr.bindings.xband.tests.init_tests.extdict": [[702, 3, 1, "", "__init__"]], "ase2sprkkr.bindings.xband.tests.test_spheres": [[706, 2, 1, "", "TestSpheres"]], "ase2sprkkr.bindings.xband.tests.test_spheres.TestSpheres": [[706, 3, 1, "", "__init__"], [706, 3, 1, "", "test"], [706, 3, 1, "", "test_xband"]], "ase2sprkkr.common": [[708, 0, 0, "-", "alternative_types"], [714, 0, 0, "-", "backward_compatibility"], [715, 0, 0, "-", "configuration"], [717, 0, 0, "-", "configuration_containers"], [725, 0, 0, "-", "configuration_definitions"], [740, 0, 0, "-", "container_definitions"], [744, 0, 0, "-", "debug"], [747, 0, 0, "-", "decorators"], [756, 0, 0, "-", "directory"], [758, 0, 0, "-", "doc"], [761, 0, 0, "-", "formats"], [765, 0, 0, "-", "generated_configuration_definitions"], [770, 0, 0, "-", "grammar"], [784, 0, 0, "-", "grammar_types"], [851, 0, 0, "-", "init_tests"], [861, 0, 0, "-", "lazy_string"], [863, 0, 0, "-", "misc"], [871, 0, 0, "-", "no_output"], [873, 0, 0, "-", "options"], [880, 0, 0, "-", "parsing_results"], [892, 0, 0, "-", "process_output_reader"], [897, 0, 0, "-", "repeated_configuration_containers"], [899, 0, 0, "-", "section_adaptors"], [903, 0, 0, "-", "subprocess"], [907, 0, 0, "-", "test"], [921, 0, 0, "-", "tools"], [927, 0, 0, "-", "unique_values"], [929, 0, 0, "-", "value_definitions"], [933, 0, 0, "-", "warnings"], [936, 0, 0, "-", "yaml"]], "ase2sprkkr.common.alternative_types": [[709, 7, 1, "", "allowed_types"], [710, 1, 1, "", "normalize_type"], [711, 7, 1, "", "normalize_type_map"], [712, 7, 1, "", "numpy_types"], [713, 7, 1, "", "types_alternatives"]], "ase2sprkkr.common.configuration": [[716, 2, 1, "", "Configuration"]], "ase2sprkkr.common.configuration.Configuration": [[716, 3, 1, "", "__init__"], [716, 3, 1, "", "_as_dict"], [716, 4, 1, "", "_container"], [716, 4, 1, "", "_definition"], [716, 3, 1, "", "_find_member"], [716, 3, 1, "", "_get_path"], [716, 3, 1, "", "_get_root_container"], [716, 3, 1, "", "as_dict"], [716, 3, 1, "", "as_dict_getter"], [716, 3, 1, "", "check_for_errors"], [716, 5, 1, "", "doc"], [716, 3, 1, "", "help"], [716, 5, 1, "", "info"], [716, 5, 1, "", "name"], [716, 3, 1, "", "save_to_file"], [716, 3, 1, "", "show"], [716, 3, 1, "", "to_dict"], [716, 3, 1, "", "to_string"], [716, 3, 1, "", "validate"]], "ase2sprkkr.common.configuration_containers": [[718, 2, 1, "", "BaseConfigurationContainer"], [719, 2, 1, "", "BaseSection"], [720, 2, 1, "", "ConfigurationContainer"], [721, 2, 1, "", "CustomSection"], [722, 6, 1, "", "DisabledAttributeError"], [723, 2, 1, "", "RootConfigurationContainer"], [724, 2, 1, "", "Section"]], "ase2sprkkr.common.configuration_containers.BaseConfigurationContainer": [[718, 3, 1, "", "__init__"], [718, 3, 1, "", "copy"], [718, 5, 1, "", "definition"], [718, 3, 1, "", "has_any_value"]], "ase2sprkkr.common.configuration_containers.BaseSection": [[719, 3, 1, "", "__init__"]], "ase2sprkkr.common.configuration_containers.ConfigurationContainer": [[720, 3, 1, "", "__init__"], [720, 3, 1, "", "_add"], [720, 3, 1, "", "_as_dict"], [720, 3, 1, "", "_find_members"], [720, 3, 1, "", "_get"], [720, 3, 1, "", "_get_member"], [720, 3, 1, "", "_init_members_from_the_definition"], [720, 3, 1, "", "_interactive_member_name"], [720, 3, 1, "", "_save_to_file"], [720, 3, 1, "", "_validate"], [720, 3, 1, "", "_validate_section"], [720, 3, 1, "", "add"], [720, 3, 1, "", "clear"], [720, 3, 1, "", "get"], [720, 3, 1, "", "get_members"], [720, 3, 1, "", "has_any_value"], [720, 3, 1, "", "is_changed"], [720, 3, 1, "", "items"], [720, 3, 1, "", "remove_member"], [720, 3, 1, "", "set"], [720, 3, 1, "", "validate_section"]], "ase2sprkkr.common.configuration_containers.CustomSection": [[721, 3, 1, "", "__init__"], [721, 3, 1, "", "factory"], [721, 3, 1, "", "remove"]], "ase2sprkkr.common.configuration_containers.RootConfigurationContainer": [[723, 3, 1, "", "__init__"], [723, 3, 1, "", "find"], [723, 4, 1, "", "name_in_grammar"], [723, 3, 1, "", "read_from_file"]], "ase2sprkkr.common.configuration_containers.Section": [[724, 3, 1, "", "__init__"], [724, 5, 1, "", "definition"]], "ase2sprkkr.common.configuration_definitions": [[726, 2, 1, "", "BaseDefinition"], [727, 2, 1, "", "ControlDefinition"], [728, 2, 1, "", "Gather"], [729, 2, 1, "", "Ignored"], [730, 2, 1, "", "NotAllowed"], [731, 2, 1, "", "RealItemDefinition"], [732, 2, 1, "", "SeparatorDefinition"], [733, 2, 1, "", "Stub"], [734, 2, 1, "", "Switch"], [735, 2, 1, "", "VirtualDefinition"], [736, 1, 1, "", "gather"], [737, 1, 1, "", "if_defined"], [738, 1, 1, "", "if_not_defined"], [739, 1, 1, "", "switch"]], "ase2sprkkr.common.configuration_definitions.BaseDefinition": [[726, 2, 1, "", "Repeated"], [726, 3, 1, "", "__init__"], [726, 3, 1, "", "_add_hooks_to_grammar"], [726, 4, 1, "", "_copy_excluded_args"], [726, 3, 1, "", "_get_copy_args"], [726, 5, 1, "", "_grammar"], [726, 3, 1, "", "_hooked_grammar"], [726, 3, 1, "", "accept_value"], [726, 3, 1, "", "add_grammar_hook"], [726, 3, 1, "", "added_to_container"], [726, 3, 1, "", "allowed"], [726, 4, 1, "", "can_be_repeated"], [726, 3, 1, "", "copy"], [726, 3, 1, "", "create_object"], [726, 3, 1, "", "description"], [726, 3, 1, "", "enrich"], [726, 3, 1, "", "get_path"], [726, 3, 1, "", "grammar"], [726, 3, 1, "", "has_grammar"], [726, 3, 1, "", "has_name"], [726, 3, 1, "", "info"], [726, 4, 1, "", "is_independent_on_the_predecessor"], [726, 4, 1, "", "is_repeated"], [726, 5, 1, "", "output_definition"], [726, 5, 1, "", "real_name"], [726, 3, 1, "", "remove_grammar_hook"], [726, 4, 1, "", "validate_section"]], "ase2sprkkr.common.configuration_definitions.BaseDefinition.Repeated": [[726, 4, 1, "", "ARRAY"], [726, 4, 1, "", "DEFAULTDICT"], [726, 4, 1, "", "DICT"], [726, 4, 1, "", "IGNORED"], [726, 4, 1, "", "NO"], [726, 4, 1, "", "NUMBERED"], [726, 2, 1, "", "Numbering"], [726, 4, 1, "", "REPEATED"], [726, 4, 1, "", "REPEATED_SECTION"], [726, 2, 1, "", "Type"], [726, 3, 1, "", "create"], [726, 5, 1, "", "is_array"], [726, 5, 1, "", "is_dict"]], "ase2sprkkr.common.configuration_definitions.BaseDefinition.Repeated.Numbering": [[726, 4, 1, "", "NO"], [726, 4, 1, "", "WITH_DEFAULT"], [726, 4, 1, "", "YES"], [726, 5, 1, "", "has_default"]], "ase2sprkkr.common.configuration_definitions.BaseDefinition.Repeated.Type": [[726, 4, 1, "", "ARRAY"], [726, 4, 1, "", "DICT"], [726, 4, 1, "", "LIST"], [726, 4, 1, "", "NO"]], "ase2sprkkr.common.configuration_definitions.ControlDefinition": [[727, 3, 1, "", "__init__"], [727, 4, 1, "", "_grammar"]], "ase2sprkkr.common.configuration_definitions.Gather": [[728, 3, 1, "", "__init__"], [728, 3, 1, "", "_grammar"], [728, 3, 1, "", "_save_to_file"]], "ase2sprkkr.common.configuration_definitions.Ignored": [[729, 3, 1, "", "__init__"], [729, 4, 1, "", "_grammar"], [729, 3, 1, "", "_save_to_file"], [729, 3, 1, "", "has_grammar"], [729, 4, 1, "", "singleton"]], "ase2sprkkr.common.configuration_definitions.NotAllowed": [[730, 3, 1, "", "__init__"]], "ase2sprkkr.common.configuration_definitions.RealItemDefinition": [[731, 3, 1, "", "__init__"], [731, 4, 1, "", "_copy_excluded_args"], [731, 4, 1, "", "_description"], [731, 4, 1, "", "_description_indentation"], [731, 3, 1, "", "_grammar_of_name"], [731, 4, 1, "", "_info"], [731, 3, 1, "", "_tuple_with_my_name"], [731, 3, 1, "", "all_names_in_grammar"], [731, 3, 1, "", "allow_duplication"], [731, 3, 1, "", "description"], [731, 4, 1, "", "do_not_skip_whitespaces_before_name"], [731, 5, 1, "", "formated_name"], [731, 3, 1, "", "has_name"], [731, 3, 1, "", "info"], [731, 4, 1, "", "info_in_data_description"], [731, 4, 1, "", "is_hidden"], [731, 5, 1, "", "is_independent_on_the_predecessor"], [731, 4, 1, "", "name_in_grammar"], [731, 4, 1, "", "name_regex"], [731, 4, 1, "", "result_class"], [731, 3, 1, "", "validate_warning"], [731, 4, 1, "", "written_name"]], "ase2sprkkr.common.configuration_definitions.SeparatorDefinition": [[732, 3, 1, "", "__init__"], [732, 3, 1, "", "_create_grammar"], [732, 3, 1, "", "_save_to_file"]], "ase2sprkkr.common.configuration_definitions.Stub": [[733, 3, 1, "", "__init__"], [733, 3, 1, "", "_create_grammar"], [733, 3, 1, "", "_save_to_file"], [733, 3, 1, "", "create_object"], [733, 5, 1, "", "real_name"]], "ase2sprkkr.common.configuration_definitions.Switch": [[734, 3, 1, "", "__init__"], [734, 3, 1, "", "added_to_container"], [734, 3, 1, "", "all_values"], [734, 5, 1, "", "condition_name"], [734, 3, 1, "", "copy"], [734, 4, 1, "", "create_object"], [734, 4, 1, "", "empty"], [734, 3, 1, "", "item_hook"], [734, 3, 1, "", "items_for"], [734, 3, 1, "", "prepare_grammar"], [734, 3, 1, "", "remove_from_container"], [734, 3, 1, "", "switch_value"]], "ase2sprkkr.common.configuration_definitions.VirtualDefinition": [[735, 3, 1, "", "__init__"], [735, 3, 1, "", "all_names_in_grammar"], [735, 4, 1, "", "counter"], [735, 3, 1, "", "create_object"], [735, 4, 1, "", "is_hidden"], [735, 4, 1, "", "item_type"]], "ase2sprkkr.common.container_definitions": [[741, 2, 1, "", "ConfigurationRootDefinition"], [742, 2, 1, "", "ContainerDefinition"], [743, 2, 1, "", "SectionDefinition"]], "ase2sprkkr.common.container_definitions.ConfigurationRootDefinition": [[741, 3, 1, "", "__init__"], [741, 3, 1, "", "_create_grammar"], [741, 3, 1, "", "_tuple_with_my_name"], [741, 3, 1, "", "add_ignored"], [741, 4, 1, "", "custom_value_name"], [741, 3, 1, "", "definition_from_dict"], [741, 4, 1, "", "item_type"], [741, 4, 1, "", "name_in_grammar"], [741, 3, 1, "", "parse_return"], [741, 5, 1, "", "sections"], [741, 4, 1, "", "write_last_delimiter"]], "ase2sprkkr.common.container_definitions.ContainerDefinition": [[742, 3, 1, "", "__init__"], [742, 3, 1, "", "_allow_duplicates_of"], [742, 3, 1, "", "_create_grammar"], [742, 3, 1, "", "_dict_from_named_values"], [742, 3, 1, "", "_first_section_has_to_be_first"], [742, 3, 1, "", "_grammar_of_values"], [742, 3, 1, "", "_save_to_file"], [742, 3, 1, "", "additional_data_description"], [742, 3, 1, "", "all_member_names"], [742, 3, 1, "", "allow_duplication"], [742, 4, 1, "", "configuration_type_name"], [742, 3, 1, "", "copy"], [742, 3, 1, "", "copy_member"], [742, 3, 1, "", "create_object"], [742, 3, 1, "", "custom_member_grammar"], [742, 4, 1, "", "custom_name_characters"], [742, 3, 1, "", "data_description"], [742, 3, 1, "", "delimited_custom_value_grammar"], [742, 3, 1, "", "excluded_names_condition"], [742, 4, 1, "", "force_order"], [742, 4, 1, "", "item_type"], [742, 3, 1, "", "members"], [742, 3, 1, "", "names"], [742, 3, 1, "", "parse"], [742, 3, 1, "", "parse_file"], [742, 3, 1, "", "parse_from_stream"], [742, 3, 1, "", "parse_return"], [742, 3, 1, "", "read_from_dict"], [742, 3, 1, "", "read_from_file"], [742, 3, 1, "", "read_from_string"], [742, 3, 1, "", "remove"], [742, 4, 1, "", "repeated_class"], [742, 3, 1, "", "validate"], [742, 4, 1, "", "value_name_format"], [742, 4, 1, "", "write_last_delimiter"]], "ase2sprkkr.common.container_definitions.SectionDefinition": [[743, 3, 1, "", "__init__"], [743, 3, 1, "", "_generic_info"], [743, 3, 1, "", "accept_value"], [743, 4, 1, "", "custom_value_name"], [743, 3, 1, "", "delimited_custom_value_grammar"], [743, 4, 1, "", "result_class"], [743, 5, 1, "", "values"]], "ase2sprkkr.common.debug": [[745, 1, 1, "", "add_debug_hook"], [746, 1, 1, "", "debug_pyparsing"]], "ase2sprkkr.common.decorators": [[748, 1, 1, "", "add_called_class_as_argument"], [749, 1, 1, "", "add_to_signature"], [750, 2, 1, "", "cached_class_property"], [751, 2, 1, "", "cached_property"], [752, 2, 1, "", "class_property"], [753, 2, 1, "", "maybeclassmethod"], [754, 4, 1, "", "std_cached_property"], [755, 1, 1, "", "warnings_from_here"]], "ase2sprkkr.common.decorators.cached_class_property": [[750, 3, 1, "", "__init__"]], "ase2sprkkr.common.decorators.cached_property": [[751, 3, 1, "", "__init__"], [751, 3, 1, "", "deleter"], [751, 3, 1, "", "setter"]], "ase2sprkkr.common.decorators.class_property": [[752, 3, 1, "", "__init__"]], "ase2sprkkr.common.decorators.maybeclassmethod": [[753, 3, 1, "", "__init__"]], "ase2sprkkr.common.directory": [[757, 2, 1, "", "Directory"]], "ase2sprkkr.common.directory.Directory": [[757, 3, 1, "", "__init__"], [757, 3, 1, "", "chdir"], [757, 3, 1, "", "new"]], "ase2sprkkr.common.doc": [[759, 1, 1, "", "process_input_parameters_definition"], [760, 1, 1, "", "verbatim"]], "ase2sprkkr.common.formats": [[762, 1, 1, "", "format_for_string"], [763, 1, 1, "", "fortran_format"], [764, 1, 1, "", "full_format_for_string"]], "ase2sprkkr.common.generated_configuration_definitions": [[766, 2, 1, "", "BaseGeneratedValueDefinition"], [767, 2, 1, "", "GeneratedValueDefinition"], [768, 2, 1, "", "Length"], [769, 2, 1, "", "NumpyViewDefinition"]], "ase2sprkkr.common.generated_configuration_definitions.BaseGeneratedValueDefinition": [[766, 3, 1, "", "__init__"], [766, 4, 1, "", "_grammar"], [766, 3, 1, "", "enrich"], [766, 4, 1, "", "is_generated"], [766, 4, 1, "", "is_stored"], [766, 4, 1, "", "item_type"], [766, 4, 1, "", "result_class"]], "ase2sprkkr.common.generated_configuration_definitions.GeneratedValueDefinition": [[767, 3, 1, "", "__init__"], [767, 5, 1, "", "setter"]], "ase2sprkkr.common.generated_configuration_definitions.Length": [[768, 4, 1, "", "_NO_DEFAULT"], [768, 3, 1, "", "__init__"], [768, 3, 1, "", "_create_grammar"], [768, 3, 1, "", "getter"], [768, 4, 1, "", "is_generated"], [768, 4, 1, "", "is_stored"], [768, 4, 1, "", "is_validated"], [768, 3, 1, "", "modify_definition"], [768, 3, 1, "", "setter"], [768, 4, 1, "", "type"], [768, 3, 1, "", "validate_parse"], [768, 3, 1, "", "validate_section"]], "ase2sprkkr.common.generated_configuration_definitions.NumpyViewDefinition": [[769, 3, 1, "", "__init__"], [769, 3, 1, "", "copy_value"], [769, 3, 1, "", "data_description"], [769, 3, 1, "", "determine_shape"], [769, 3, 1, "", "enrich"], [769, 3, 1, "", "getter"], [769, 3, 1, "", "setter"], [769, 3, 1, "", "source"]], "ase2sprkkr.common.grammar": [[771, 2, 1, "", "SkipToRegex"], [772, 2, 1, "", "White"], [773, 1, 1, "", "addConditionEx"], [774, 1, 1, "", "addParseActionEx"], [775, 1, 1, "", "delimitedList"], [776, 7, 1, "", "end_of_file"], [777, 1, 1, "", "generate_grammar"], [778, 7, 1, "", "line_end"], [779, 7, 1, "", "optional_line_end"], [780, 7, 1, "", "optional_quote"], [781, 1, 1, "", "replace_whitechars"], [782, 1, 1, "", "separator_grammar"], [783, 1, 1, "", "separator_pattern"]], "ase2sprkkr.common.grammar.SkipToRegex": [[771, 3, 1, "", "__init__"], [771, 4, 1, "", "_abc_impl"], [771, 5, 1, "", "custom_name"], [771, 3, 1, "", "parseImpl"]], "ase2sprkkr.common.grammar.White": [[772, 3, 1, "", "__init__"], [772, 4, 1, "", "_abc_impl"]], "ase2sprkkr.common.grammar_types": [[785, 0, 0, "-", "arrays"], [795, 0, 0, "-", "basic"], [831, 0, 0, "-", "data"], [836, 0, 0, "-", "grammar_type"], [845, 0, 0, "-", "mixed"], [846, 7, 1, "", "recognized_set_types"], [847, 7, 1, "", "type_from_set_map"], [848, 7, 1, "", "type_from_type_map"], [849, 0, 0, "-", "warnings"]], "ase2sprkkr.common.grammar_types.arrays": [[786, 2, 1, "", "Array"], [787, 2, 1, "", "Complex"], [788, 2, 1, "", "Sequence"], [789, 2, 1, "", "SetOf"], [790, 2, 1, "", "SpecialColumn"], [791, 2, 1, "", "Table"], [792, 7, 1, "", "complex_number"], [793, 7, 1, "", "set_of_integers"], [794, 7, 1, "", "set_of_reals"]], "ase2sprkkr.common.grammar_types.arrays.Array": [[786, 3, 1, "", "__init__"], [786, 5, 1, "", "_dtype_condition"], [786, 3, 1, "", "_set_convert_action"], [786, 3, 1, "", "_string"], [786, 3, 1, "", "_validate"], [786, 4, 1, "", "array_access"], [786, 3, 1, "", "convert"], [786, 4, 1, "", "delimiter"], [786, 4, 1, "", "delimiter_str"], [786, 3, 1, "", "grammar_name"], [786, 5, 1, "", "is_numpy_array"], [786, 3, 1, "", "is_the_same_value"], [786, 3, 1, "", "numpy_dtype"]], "ase2sprkkr.common.grammar_types.arrays.Complex": [[787, 4, 1, "", "I"], [787, 3, 1, "", "__init__"], [787, 3, 1, "", "_grammar_name"], [787, 3, 1, "", "_string"], [787, 3, 1, "", "_validate"], [787, 4, 1, "", "allowed_types"], [787, 4, 1, "", "array_access"], [787, 3, 1, "", "convert"], [787, 4, 1, "", "datatype"], [787, 4, 1, "", "datatype_name"], [787, 4, 1, "", "numpy_type"]], "ase2sprkkr.common.grammar_types.arrays.Sequence": [[788, 3, 1, "", "__init__"], [788, 3, 1, "", "_grammar"], [788, 3, 1, "", "_string"], [788, 3, 1, "", "_validate"], [788, 3, 1, "", "convert"], [788, 3, 1, "", "enrich"], [788, 3, 1, "", "grammar_name"], [788, 3, 1, "", "is_the_same_value"]], "ase2sprkkr.common.grammar_types.arrays.SetOf": [[789, 3, 1, "", "__init__"], [789, 3, 1, "", "copy_value"], [789, 4, 1, "", "delimiter"], [789, 4, 1, "", "delimiter_str"], [789, 3, 1, "", "transform_grammar"]], "ase2sprkkr.common.grammar_types.arrays.SpecialColumn": [[790, 3, 1, "", "__init__"], [790, 3, 1, "", "add_grammar"], [790, 3, 1, "", "add_header_grammar"], [790, 3, 1, "", "format_string"], [790, 3, 1, "", "header"]], "ase2sprkkr.common.grammar_types.arrays.Table": [[791, 3, 1, "", "__init__"], [791, 3, 1, "", "_grammar"], [791, 5, 1, "", "_numpy_type"], [791, 3, 1, "", "_string"], [791, 3, 1, "", "_validate"], [791, 4, 1, "", "array_access"], [791, 3, 1, "", "convert"], [791, 3, 1, "", "grammar_name"], [791, 3, 1, "", "is_the_same_value"], [791, 4, 1, "", "name_in_grammar"], [791, 3, 1, "", "number_of_columns"], [791, 5, 1, "", "numpy_type"], [791, 3, 1, "", "special_columns"], [791, 3, 1, "", "zero_data"]], "ase2sprkkr.common.grammar_types.basic": [[796, 2, 1, "", "BaseBool"], [797, 2, 1, "", "BaseRealWithUnits"], [798, 2, 1, "", "BaseString"], [799, 2, 1, "", "BasicSeparator"], [800, 2, 1, "", "BlankSeparator"], [801, 2, 1, "", "Bool"], [802, 2, 1, "", "Date"], [803, 1, 1, "", "DefKeyword"], [804, 2, 1, "", "Energy"], [805, 2, 1, "", "FixedPointNumber"], [806, 2, 1, "", "Flag"], [807, 2, 1, "", "IntBool"], [808, 2, 1, "", "Integer"], [809, 2, 1, "", "Keyword"], [810, 2, 1, "", "LineString"], [811, 2, 1, "", "Number"], [812, 2, 1, "", "ObjectNumber"], [813, 2, 1, "", "QString"], [814, 2, 1, "", "Real"], [815, 2, 1, "", "RealWithUnits"], [816, 2, 1, "", "Separator"], [817, 2, 1, "", "String"], [818, 2, 1, "", "Unsigned"], [819, 7, 1, "", "boolean"], [820, 7, 1, "", "date"], [821, 7, 1, "", "energy"], [822, 7, 1, "", "flag"], [823, 7, 1, "", "int_bool"], [824, 7, 1, "", "integer"], [825, 7, 1, "", "line_string"], [826, 7, 1, "", "qstring"], [827, 7, 1, "", "real"], [828, 7, 1, "", "separator"], [829, 7, 1, "", "string"], [830, 7, 1, "", "unsigned"]], "ase2sprkkr.common.grammar_types.basic.BaseBool": [[796, 3, 1, "", "__init__"], [796, 4, 1, "", "allowed_types"], [796, 4, 1, "", "datatype"], [796, 4, 1, "", "datatype_name"], [796, 4, 1, "", "numpy_type"], [796, 4, 1, "", "type_name"]], "ase2sprkkr.common.grammar_types.basic.BaseRealWithUnits": [[797, 3, 1, "", "__init__"], [797, 3, 1, "", "_grammar"], [797, 3, 1, "", "_grammar_units"], [797, 3, 1, "", "_validate"], [797, 4, 1, "", "grammar_cache"], [797, 3, 1, "", "grammar_name"], [797, 4, 1, "", "numpy_type"]], "ase2sprkkr.common.grammar_types.basic.BaseString": [[798, 3, 1, "", "__init__"], [798, 3, 1, "", "_validate"], [798, 4, 1, "", "allowed_types"], [798, 4, 1, "", "datatype"], [798, 4, 1, "", "datatype_name"]], "ase2sprkkr.common.grammar_types.basic.BasicSeparator": [[799, 3, 1, "", "__init__"], [799, 3, 1, "", "_validate"], [799, 4, 1, "", "has_value"]], "ase2sprkkr.common.grammar_types.basic.BlankSeparator": [[800, 3, 1, "", "__init__"], [800, 4, 1, "", "_grammar"], [800, 3, 1, "", "_grammar_name"], [800, 3, 1, "", "_string"]], "ase2sprkkr.common.grammar_types.basic.Bool": [[801, 4, 1, "", "I"], [801, 3, 1, "", "__init__"], [801, 4, 1, "", "_grammar"], [801, 3, 1, "", "_string"], [801, 4, 1, "", "datatype"], [801, 3, 1, "", "grammar_name"]], "ase2sprkkr.common.grammar_types.basic.Date": [[802, 4, 1, "", "I"], [802, 3, 1, "", "__init__"], [802, 4, 1, "", "_grammar"], [802, 3, 1, "", "_string"], [802, 4, 1, "", "allowed_types"], [802, 4, 1, "", "datatype"], [802, 4, 1, "", "datatype_name"], [802, 3, 1, "", "grammar_name"], [802, 4, 1, "", "numpy_type"], [802, 4, 1, "", "type_name"]], "ase2sprkkr.common.grammar_types.basic.Energy": [[804, 4, 1, "", "I"], [804, 3, 1, "", "__init__"], [804, 4, 1, "", "datatype"], [804, 4, 1, "", "units"]], "ase2sprkkr.common.grammar_types.basic.FixedPointNumber": [[805, 3, 1, "", "__init__"], [805, 3, 1, "", "_validate"], [805, 4, 1, "", "allowed_types"], [805, 3, 1, "", "convert"], [805, 4, 1, "", "datatype"], [805, 4, 1, "", "datatype_name"], [805, 4, 1, "", "numpy_type"]], "ase2sprkkr.common.grammar_types.basic.Flag": [[806, 4, 1, "", "I"], [806, 3, 1, "", "__init__"], [806, 4, 1, "", "_grammar"], [806, 3, 1, "", "_validate"], [806, 4, 1, "", "datatype"], [806, 3, 1, "", "grammar_name"], [806, 3, 1, "", "missing_value"], [806, 3, 1, "", "str"]], "ase2sprkkr.common.grammar_types.basic.IntBool": [[807, 4, 1, "", "I"], [807, 3, 1, "", "__init__"], [807, 4, 1, "", "_grammar"], [807, 4, 1, "", "_rev_grammar"], [807, 3, 1, "", "_string"], [807, 3, 1, "", "grammar_name"]], "ase2sprkkr.common.grammar_types.basic.Integer": [[808, 4, 1, "", "I"], [808, 3, 1, "", "__init__"], [808, 4, 1, "", "_grammar"], [808, 4, 1, "", "allowed_types"], [808, 4, 1, "", "datatype"], [808, 4, 1, "", "datatype_name"], [808, 3, 1, "", "grammar_name"]], "ase2sprkkr.common.grammar_types.basic.Keyword": [[809, 3, 1, "", "__init__"], [809, 3, 1, "", "_validate"], [809, 3, 1, "", "additional_description"], [809, 3, 1, "", "convert"], [809, 3, 1, "", "grammar_name"], [809, 4, 1, "", "is_independent_on_the_predecessor"]], "ase2sprkkr.common.grammar_types.basic.LineString": [[810, 4, 1, "", "I"], [810, 3, 1, "", "__init__"], [810, 4, 1, "", "_grammar"], [810, 3, 1, "", "grammar_name"]], "ase2sprkkr.common.grammar_types.basic.Number": [[811, 3, 1, "", "__init__"], [811, 3, 1, "", "_validate"], [811, 4, 1, "", "allowed_types"], [811, 4, 1, "", "datatype"], [811, 4, 1, "", "datatype_name"]], "ase2sprkkr.common.grammar_types.basic.ObjectNumber": [[812, 3, 1, "", "__init__"], [812, 3, 1, "", "_validate"], [812, 3, 1, "", "convert"]], "ase2sprkkr.common.grammar_types.basic.QString": [[813, 4, 1, "", "I"], [813, 3, 1, "", "__init__"], [813, 4, 1, "", "_grammar"], [813, 4, 1, "", "allowed_types"], [813, 3, 1, "", "grammar_name"]], "ase2sprkkr.common.grammar_types.basic.Real": [[814, 4, 1, "", "I"], [814, 3, 1, "", "__init__"], [814, 4, 1, "", "_grammar"], [814, 4, 1, "", "allowed_types"], [814, 3, 1, "", "convert"], [814, 4, 1, "", "datatype"], [814, 4, 1, "", "datatype_name"], [814, 3, 1, "", "grammar_name"], [814, 4, 1, "", "numpy_type"]], "ase2sprkkr.common.grammar_types.basic.RealWithUnits": [[815, 3, 1, "", "__init__"]], "ase2sprkkr.common.grammar_types.basic.Separator": [[816, 4, 1, "", "I"], [816, 3, 1, "", "__init__"], [816, 5, 1, "", "_grammar"], [816, 3, 1, "", "_grammar_name"], [816, 3, 1, "", "_string"]], "ase2sprkkr.common.grammar_types.basic.String": [[817, 4, 1, "", "I"], [817, 3, 1, "", "__init__"], [817, 4, 1, "", "_grammar"], [817, 3, 1, "", "grammar_name"]], "ase2sprkkr.common.grammar_types.basic.Unsigned": [[818, 4, 1, "", "I"], [818, 3, 1, "", "__init__"], [818, 4, 1, "", "_grammar"], [818, 3, 1, "", "_validate"], [818, 4, 1, "", "datatype_name"], [818, 3, 1, "", "grammar_name"]], "ase2sprkkr.common.grammar_types.data": [[832, 2, 1, "", "NumpyArray"], [833, 2, 1, "", "Prefixed"], [834, 2, 1, "", "RawData"], [835, 2, 1, "", "RestOfTheFile"]], "ase2sprkkr.common.grammar_types.data.NumpyArray": [[832, 3, 1, "", "__init__"], [832, 3, 1, "", "_grammar"], [832, 3, 1, "", "_string"], [832, 3, 1, "", "_validate"], [832, 4, 1, "", "array_access"], [832, 3, 1, "", "convert"], [832, 3, 1, "", "copy_value"], [832, 3, 1, "", "is_the_same_value"]], "ase2sprkkr.common.grammar_types.data.Prefixed": [[833, 3, 1, "", "__init__"], [833, 5, 1, "", "_grammar"], [833, 3, 1, "", "_string"]], "ase2sprkkr.common.grammar_types.data.RawData": [[834, 3, 1, "", "__init__"], [834, 3, 1, "", "_grammar"], [834, 3, 1, "", "_n_lines_grammar"], [834, 3, 1, "", "_string"], [834, 3, 1, "", "added_to_container"], [834, 3, 1, "", "convert"]], "ase2sprkkr.common.grammar_types.data.RestOfTheFile": [[835, 3, 1, "", "__init__"], [835, 4, 1, "", "_grammar"], [835, 4, 1, "", "datatype"], [835, 4, 1, "", "datatype_name"], [835, 3, 1, "", "grammar_name"]], "ase2sprkkr.common.grammar_types.grammar_type": [[837, 2, 1, "", "GrammarType"], [838, 2, 1, "", "TypedGrammarType"], [839, 1, 1, "", "compare_numpy_values"], [840, 1, 1, "", "format_for_type"], [841, 7, 1, "", "recognized_set_types"], [842, 1, 1, "", "type_from_default_value"], [843, 1, 1, "", "type_from_type"], [844, 1, 1, "", "type_from_value"]], "ase2sprkkr.common.grammar_types.grammar_type.GrammarType": [[837, 3, 1, "", "__init__"], [837, 3, 1, "", "_string"], [837, 3, 1, "", "_validate"], [837, 3, 1, "", "_valueError"], [837, 3, 1, "", "added_to_container"], [837, 3, 1, "", "additional_description"], [837, 4, 1, "", "after_format"], [837, 3, 1, "", "apply_format"], [837, 4, 1, "", "array_access"], [837, 3, 1, "", "convert"], [837, 3, 1, "", "copy"], [837, 3, 1, "", "copy_value"], [837, 4, 1, "", "default_value"], [837, 3, 1, "", "enrich"], [837, 5, 1, "", "format"], [837, 3, 1, "", "format_string"], [837, 3, 1, "", "grammar"], [837, 3, 1, "", "grammar_name"], [837, 4, 1, "", "has_value"], [837, 4, 1, "", "is_independent_on_the_predecessor"], [837, 3, 1, "", "is_the_same_value"], [837, 3, 1, "", "missing_value"], [837, 4, 1, "", "name_in_grammar"], [837, 3, 1, "", "numpy_dtype"], [837, 4, 1, "", "numpy_type"], [837, 3, 1, "", "parse"], [837, 3, 1, "", "parse_from_stream"], [837, 4, 1, "", "postfix"], [837, 4, 1, "", "prefix"], [837, 3, 1, "", "print"], [837, 3, 1, "", "string"], [837, 3, 1, "", "transform_grammar"], [837, 3, 1, "", "type_validation"], [837, 3, 1, "", "used_in_definition"], [837, 3, 1, "", "validate"], [837, 3, 1, "", "write"]], "ase2sprkkr.common.grammar_types.grammar_type.TypedGrammarType": [[838, 3, 1, "", "__init__"], [838, 3, 1, "", "_validate"], [838, 4, 1, "", "allowed_types"], [838, 3, 1, "", "convert"], [838, 4, 1, "", "datatype"], [838, 4, 1, "", "datatype_name"]], "ase2sprkkr.common.grammar_types.warnings": [[850, 6, 1, "", "SuspiciousValueWarning"]], "ase2sprkkr.common.init_tests.TestCase": [[852, 3, 1, "", "__init__"], [852, 4, 1, "", "_calc_args"], [852, 4, 1, "", "_print_output"], [852, 3, 1, "", "almost_equal_precision"], [852, 3, 1, "", "assertAlmostEqual"], [852, 3, 1, "", "assertAsyncEqual"], [852, 3, 1, "", "assertAsyncRaises"], [852, 3, 1, "", "assertEqual"], [852, 3, 1, "", "assertFalse"], [852, 3, 1, "", "assertIsNone"], [852, 3, 1, "", "assertNotEqual"], [852, 3, 1, "", "assertRaises"], [852, 3, 1, "", "assertTrue"], [852, 3, 1, "", "calc_args"], [852, 3, 1, "", "runAsync"], [852, 3, 1, "", "run_sprkkr"], [852, 3, 1, "", "temporary_dir"]], "ase2sprkkr.common.init_tests": [[853, 1, 1, "", "arr_testfce"], [854, 1, 1, "", "assertDictEqual"], [855, 1, 1, "", "assertListEqual"], [856, 1, 1, "", "assert_almost_equals"], [857, 1, 1, "", "assert_equals"], [859, 1, 1, "", "patch_package"], [860, 1, 1, "", "testfce"]], "ase2sprkkr.common.init_tests.extdict": [[858, 3, 1, "", "__init__"]], "ase2sprkkr.common.lazy_string": [[862, 2, 1, "", "LazyString"]], "ase2sprkkr.common.lazy_string.LazyString": [[862, 3, 1, "", "__init__"], [862, 5, 1, "", "value"]], "ase2sprkkr.common.misc": [[864, 1, 1, "", "as_integer"], [865, 1, 1, "", "config_property"], [866, 1, 1, "", "copy_list"], [867, 1, 1, "", "dict_first_item"], [868, 1, 1, "", "first_non_none"], [869, 1, 1, "", "njit"], [870, 1, 1, "", "numpy_index"]], "ase2sprkkr.common.no_output": [[872, 2, 1, "", "NoOutput"]], "ase2sprkkr.common.no_output.NoOutput": [[872, 3, 1, "", "__init__"]], "ase2sprkkr.common.options": [[874, 2, 1, "", "BaseOption"], [875, 2, 1, "", "CustomOption"], [876, 2, 1, "", "DangerousValue"], [877, 2, 1, "", "Dummy"], [878, 2, 1, "", "DummyStub"], [879, 2, 1, "", "Option"]], "ase2sprkkr.common.options.BaseOption": [[874, 3, 1, "", "__init__"], [874, 3, 1, "", "_as_dict"], [874, 3, 1, "", "_find_members"], [874, 3, 1, "", "_save_to_file"], [874, 3, 1, "", "clear"], [874, 3, 1, "", "get_path"]], "ase2sprkkr.common.options.CustomOption": [[875, 3, 1, "", "__init__"], [875, 3, 1, "", "factory"], [875, 3, 1, "", "remove"]], "ase2sprkkr.common.options.DangerousValue": [[876, 3, 1, "", "__init__"], [876, 3, 1, "", "write_value"]], "ase2sprkkr.common.options.Dummy": [[877, 3, 1, "", "__init__"], [877, 3, 1, "", "_validate"], [877, 3, 1, "", "has_any_value"]], "ase2sprkkr.common.options.DummyStub": [[878, 3, 1, "", "__init__"], [878, 3, 1, "", "_as_dict"]], "ase2sprkkr.common.options.Option": [[879, 3, 1, "", "__init__"], [879, 3, 1, "", "_as_dict"], [879, 3, 1, "", "_check_array_access"], [879, 3, 1, "", "_create_dangerous_value"], [879, 3, 1, "", "_getitem"], [879, 3, 1, "", "_pack_value"], [879, 3, 1, "", "_post_set"], [879, 3, 1, "", "_set_item"], [879, 3, 1, "", "_unpack_value"], [879, 3, 1, "", "_validate"], [879, 3, 1, "", "_value_or_default"], [879, 3, 1, "", "_written_value"], [879, 3, 1, "", "add_hook"], [879, 3, 1, "", "clear"], [879, 3, 1, "", "clear_result"], [879, 5, 1, "", "default_value"], [879, 3, 1, "", "get"], [879, 3, 1, "", "has_any_value"], [879, 3, 1, "", "is_changed"], [879, 3, 1, "", "is_dangerous"], [879, 3, 1, "", "is_it_the_default_value"], [879, 3, 1, "", "is_set"], [879, 5, 1, "", "name"], [879, 5, 1, "", "result"], [879, 3, 1, "", "set"], [879, 3, 1, "", "set_dangerous"], [879, 3, 1, "", "value_and_changed"]], "ase2sprkkr.common.parsing_results": [[881, 2, 1, "", "ArrayKey"], [882, 2, 1, "", "DefDictKey"], [883, 2, 1, "", "DictKey"], [884, 2, 1, "", "IgnoredKey"], [885, 2, 1, "", "Key"], [886, 2, 1, "", "RepeatedKey"], [887, 2, 1, "", "Result"], [888, 2, 1, "", "SubKey"], [889, 2, 1, "", "ValidateKey"], [890, 2, 1, "", "Values"], [891, 1, 1, "", "dict_from_parsed"]], "ase2sprkkr.common.parsing_results.ArrayKey": [[881, 2, 1, "", "ResultClass"], [881, 3, 1, "", "__init__"], [881, 3, 1, "", "add"]], "ase2sprkkr.common.parsing_results.ArrayKey.ResultClass": [[881, 4, 1, "", "NOT_SET"], [881, 3, 1, "", "result"]], "ase2sprkkr.common.parsing_results.DefDictKey": [[882, 3, 1, "", "__init__"], [882, 3, 1, "", "convert"]], "ase2sprkkr.common.parsing_results.DictKey": [[883, 2, 1, "", "ResultClass"], [883, 3, 1, "", "__init__"], [883, 3, 1, "", "add"]], "ase2sprkkr.common.parsing_results.IgnoredKey": [[884, 3, 1, "", "__init__"], [884, 3, 1, "", "add"]], "ase2sprkkr.common.parsing_results.Key": [[885, 3, 1, "", "NONE"], [885, 3, 1, "", "__init__"], [885, 3, 1, "", "get"]], "ase2sprkkr.common.parsing_results.RepeatedKey": [[886, 2, 1, "", "ResultClass"], [886, 3, 1, "", "__init__"], [886, 3, 1, "", "add"]], "ase2sprkkr.common.parsing_results.Result": [[887, 3, 1, "", "__init__"], [887, 3, 1, "", "result"]], "ase2sprkkr.common.parsing_results.SubKey": [[888, 3, 1, "", "__init__"], [888, 3, 1, "", "convert"]], "ase2sprkkr.common.parsing_results.ValidateKey": [[889, 3, 1, "", "__init__"], [889, 3, 1, "", "add"]], "ase2sprkkr.common.parsing_results.Values": [[890, 3, 1, "", "__init__"], [890, 3, 1, "", "to_dict"]], "ase2sprkkr.common.process_output_reader": [[893, 2, 1, "", "AsyncioFileReader"], [894, 2, 1, "", "ProcessOutputReader"], [895, 1, 1, "", "readline"], [896, 1, 1, "", "readline_until"]], "ase2sprkkr.common.process_output_reader.AsyncioFileReader": [[893, 3, 1, "", "__init__"], [893, 3, 1, "", "close"], [893, 3, 1, "", "readline"], [893, 3, 1, "", "readuntil"], [893, 3, 1, "", "separator_shifts"]], "ase2sprkkr.common.process_output_reader.ProcessOutputReader": [[894, 3, 1, "", "__init__"], [894, 3, 1, "", "read_error"], [894, 3, 1, "", "read_from_file"], [894, 3, 1, "", "read_output"], [894, 3, 1, "", "result"], [894, 3, 1, "", "result_from_file"], [894, 3, 1, "", "run"], [894, 3, 1, "", "run_subprocess"]], "ase2sprkkr.common.repeated_configuration_containers": [[898, 2, 1, "", "RepeatedConfigurationContainer"]], "ase2sprkkr.common.repeated_configuration_containers.RepeatedConfigurationContainer": [[898, 3, 1, "", "__init__"], [898, 3, 1, "", "_save_to_file"], [898, 3, 1, "", "_validate"], [898, 3, 1, "", "add"], [898, 3, 1, "", "as_dict"], [898, 3, 1, "", "clear"], [898, 3, 1, "", "get"], [898, 3, 1, "", "is_changed"], [898, 3, 1, "", "items"], [898, 3, 1, "", "set"], [898, 3, 1, "", "values"]], "ase2sprkkr.common.section_adaptors": [[900, 2, 1, "", "MergeSectionAdaptor"], [901, 2, 1, "", "MergeSectionDefinitionAdaptor"], [902, 2, 1, "", "SectionAdaptor"]], "ase2sprkkr.common.section_adaptors.MergeSectionAdaptor": [[900, 3, 1, "", "__init__"], [900, 3, 1, "", "get"], [900, 3, 1, "", "is_dangerous"]], "ase2sprkkr.common.section_adaptors.MergeSectionDefinitionAdaptor": [[901, 3, 1, "", "__init__"], [901, 3, 1, "", "get"], [901, 3, 1, "", "is_dangerous"]], "ase2sprkkr.common.section_adaptors.SectionAdaptor": [[902, 3, 1, "", "__init__"], [902, 3, 1, "", "get"], [902, 3, 1, "", "is_dangerous"]], "ase2sprkkr.common.subprocess": [[904, 1, 1, "", "_call_function"], [905, 1, 1, "", "ignore_signal"], [906, 1, 1, "", "in_subprocess"]], "ase2sprkkr.common.test": [[908, 0, 0, "-", "init_tests"], [917, 0, 0, "-", "test_common"], [919, 0, 0, "-", "test_grammar_types"]], "ase2sprkkr.common.test.init_tests": [[909, 2, 1, "", "TestCase"], [910, 1, 1, "", "arr_testfce"], [911, 1, 1, "", "assertDictEqual"], [912, 1, 1, "", "assertListEqual"], [913, 1, 1, "", "assert_almost_equals"], [914, 1, 1, "", "assert_equals"], [915, 2, 1, "", "extdict"], [916, 1, 1, "", "testfce"]], "ase2sprkkr.common.test.init_tests.TestCase": [[909, 3, 1, "", "__init__"], [909, 4, 1, "", "_calc_args"], [909, 4, 1, "", "_print_output"], [909, 3, 1, "", "almost_equal_precision"], [909, 3, 1, "", "assertAlmostEqual"], [909, 3, 1, "", "assertAsyncEqual"], [909, 3, 1, "", "assertAsyncRaises"], [909, 3, 1, "", "assertEqual"], [909, 3, 1, "", "assertFalse"], [909, 3, 1, "", "assertIsNone"], [909, 3, 1, "", "assertNotEqual"], [909, 3, 1, "", "assertRaises"], [909, 3, 1, "", "assertTrue"], [909, 3, 1, "", "calc_args"], [909, 3, 1, "", "runAsync"], [909, 3, 1, "", "run_sprkkr"], [909, 3, 1, "", "temporary_dir"]], "ase2sprkkr.common.test.init_tests.extdict": [[915, 3, 1, "", "__init__"]], "ase2sprkkr.common.test.test_common": [[918, 2, 1, "", "TestCommon"]], "ase2sprkkr.common.test.test_common.TestCommon": [[918, 3, 1, "", "__init__"], [918, 3, 1, "", "test_asyncio_file_reader"], [918, 3, 1, "", "test_cached_property"], [918, 3, 1, "", "test_common"]], "ase2sprkkr.common.test.test_grammar_types": [[920, 2, 1, "", "TestGrammar"]], "ase2sprkkr.common.test.test_grammar_types.TestGrammar": [[920, 3, 1, "", "__init__"], [920, 3, 1, "", "_test_types"], [920, 3, 1, "", "test_is_the_same_value"], [920, 3, 1, "", "test_types"]], "ase2sprkkr.common.tools": [[922, 1, 1, "", "append_id_to_filename"], [923, 1, 1, "", "main"], [924, 1, 1, "", "parse_inches"], [925, 1, 1, "", "parse_named_option"], [926, 1, 1, "", "parse_tuple_function"]], "ase2sprkkr.common.unique_values": [[928, 2, 1, "", "UniqueValuesMapping"]], "ase2sprkkr.common.unique_values.UniqueValuesMapping": [[928, 3, 1, "", "__init__"], [928, 3, 1, "", "_create_mapping"], [928, 3, 1, "", "are_equivalent"], [928, 3, 1, "", "from_values"], [928, 3, 1, "", "indexes"], [928, 3, 1, "", "is_equivalent_to"], [928, 3, 1, "", "iter_unique"], [928, 3, 1, "", "len_of_unique"], [928, 4, 1, "", "mapping"], [928, 3, 1, "", "merge"], [928, 3, 1, "", "normalize"], [928, 3, 1, "", "normalized"], [928, 3, 1, "", "unique_indexes"], [928, 3, 1, "", "unique_items"], [928, 4, 1, "", "value_to_class_id"]], "ase2sprkkr.common.value_definitions": [[930, 2, 1, "", "InheritingValueModifier"], [931, 2, 1, "", "ValueDefinition"], [932, 2, 1, "", "ValueModifier"]], "ase2sprkkr.common.value_definitions.InheritingValueModifier": [[930, 3, 1, "", "__init__"], [930, 4, 1, "", "_enriching_classes"], [930, 3, 1, "", "modify_definition"]], "ase2sprkkr.common.value_definitions.ValueDefinition": [[931, 3, 1, "", "__init__"], [931, 4, 1, "", "_copy_excluded_args"], [931, 3, 1, "", "_create_grammar"], [931, 3, 1, "", "_generic_info"], [931, 3, 1, "", "_get_copy_args"], [931, 5, 1, "", "_grammar"], [931, 3, 1, "", "_grammar_of_value"], [931, 3, 1, "", "_save_to_file"], [931, 3, 1, "", "added_to_container"], [931, 3, 1, "", "additional_data_description"], [931, 3, 1, "", "allow_duplication"], [931, 5, 1, "", "can_be_repeated"], [931, 3, 1, "", "check_array_access"], [931, 4, 1, "", "configuration_type_name"], [931, 3, 1, "", "convert_and_validate"], [931, 3, 1, "", "copy_value"], [931, 3, 1, "", "data_description"], [931, 3, 1, "", "enrich"], [931, 3, 1, "", "get_value"], [931, 4, 1, "", "is_generated"], [931, 5, 1, "", "is_independent_on_the_predecessor"], [931, 4, 1, "", "is_validated"], [931, 4, 1, "", "item_type"], [931, 4, 1, "", "name_in_grammar"], [931, 3, 1, "", "remove"], [931, 4, 1, "", "result_class"], [931, 4, 1, "", "type_from_type_map"], [931, 3, 1, "", "validate"], [931, 3, 1, "", "validate_type"], [931, 5, 1, "", "value_name_format"], [931, 3, 1, "", "write"], [931, 3, 1, "", "write_name"], [931, 3, 1, "", "write_value"]], "ase2sprkkr.common.value_definitions.ValueModifier": [[932, 3, 1, "", "__init__"]], "ase2sprkkr.common.warnings": [[934, 6, 1, "", "DataValidityError"], [935, 6, 1, "", "DataValidityWarning"]], "ase2sprkkr.common.yaml": [[937, 2, 1, "", "IndentDumper"]], "ase2sprkkr.common.yaml.IndentDumper": [[937, 3, 1, "", "__init__"], [937, 3, 1, "", "increase_indent"]], "ase2sprkkr.config": [[939, 2, 1, "", "ConfigFileDefinition"], [940, 2, 1, "", "Configuration"], [941, 2, 1, "", "Section"], [942, 1, 1, "", "_get_suffix"], [943, 1, 1, "", "find_default_mpi_runner"], [944, 1, 1, "", "get_default_mpi_runner"], [945, 1, 1, "", "load_user_preferences"], [946, 1, 1, "", "mpi_runner"], [947, 1, 1, "", "user_preferences_file"]], "ase2sprkkr.config.ConfigFileDefinition": [[939, 3, 1, "", "__init__"], [939, 4, 1, "", "result_class"]], "ase2sprkkr.config.Configuration": [[940, 3, 1, "", "__init__"], [940, 3, 1, "", "set_permanent"]], "ase2sprkkr.config.Section": [[941, 3, 1, "", "__init__"], [941, 4, 1, "", "info_in_data_description"]], "ase2sprkkr.examples": [[949, 0, 0, "-", "A1_Fe_scf_simple"], [952, 0, 0, "-", "A2_Fe_scf_input_modifications"], [955, 0, 0, "-", "A3_Fe_dos"], [958, 0, 0, "-", "A4_CPA_Example"], [961, 0, 0, "-", "A5_Al_EOS"], [964, 0, 0, "-", "A6_Cu_MSSPEC"], [967, 0, 0, "-", "A7_SrTiO3_MSSPEC"], [970, 0, 0, "-", "A8_ARPES_and_plotting"]], "ase2sprkkr.examples.A1_Fe_scf_simple": [[950, 0, 0, "-", "Fe"]], "ase2sprkkr.examples.A1_Fe_scf_simple.Fe": [[951, 1, 1, "", "main"]], "ase2sprkkr.examples.A2_Fe_scf_input_modifications": [[953, 0, 0, "-", "Fe"]], "ase2sprkkr.examples.A2_Fe_scf_input_modifications.Fe": [[954, 1, 1, "", "main"]], "ase2sprkkr.examples.A3_Fe_dos": [[956, 0, 0, "-", "Fe"]], "ase2sprkkr.examples.A3_Fe_dos.Fe": [[957, 1, 1, "", "main"]], "ase2sprkkr.examples.A4_CPA_Example": [[959, 0, 0, "-", "Ni_doped_STO"]], "ase2sprkkr.examples.A4_CPA_Example.Ni_doped_STO": [[960, 1, 1, "", "main"]], "ase2sprkkr.examples.A5_Al_EOS": [[962, 0, 0, "-", "Al"]], "ase2sprkkr.examples.A5_Al_EOS.Al": [[963, 1, 1, "", "main"]], "ase2sprkkr.examples.A6_Cu_MSSPEC": [[965, 0, 0, "-", "Cu"]], "ase2sprkkr.examples.A6_Cu_MSSPEC.Cu": [[966, 1, 1, "", "main"]], "ase2sprkkr.examples.A7_SrTiO3_MSSPEC": [[968, 0, 0, "-", "STO"]], "ase2sprkkr.examples.A7_SrTiO3_MSSPEC.STO": [[969, 1, 1, "", "main"]], "ase2sprkkr.examples.A8_ARPES_and_plotting": [[971, 0, 0, "-", "arpes"]], "ase2sprkkr.examples.A8_ARPES_and_plotting.arpes": [[972, 1, 1, "", "main"]], "ase2sprkkr.input_parameters": [[974, 0, 0, "-", "definitions"], [1006, 0, 0, "-", "input_parameters"], [1009, 0, 0, "-", "input_parameters_definitions"], [1013, 0, 0, "-", "test"]], "ase2sprkkr.input_parameters.definitions": [[975, 0, 0, "-", "arpes"], [977, 0, 0, "-", "bsfek"], [979, 0, 0, "-", "bsfkk"], [981, 0, 0, "-", "dos"], [983, 0, 0, "-", "gilbert"], [985, 0, 0, "-", "jxc"], [987, 0, 0, "-", "marpes"], [989, 0, 0, "-", "phagen"], [991, 0, 0, "-", "scf"], [993, 0, 0, "-", "sections"]], "ase2sprkkr.input_parameters.definitions.arpes": [[976, 1, 1, "", "input_parameters"]], "ase2sprkkr.input_parameters.definitions.bsfek": [[978, 1, 1, "", "input_parameters"]], "ase2sprkkr.input_parameters.definitions.bsfkk": [[980, 1, 1, "", "input_parameters"]], "ase2sprkkr.input_parameters.definitions.dos": [[982, 1, 1, "", "input_parameters"]], "ase2sprkkr.input_parameters.definitions.gilbert": [[984, 1, 1, "", "input_parameters"]], "ase2sprkkr.input_parameters.definitions.jxc": [[986, 1, 1, "", "input_parameters"]], "ase2sprkkr.input_parameters.definitions.marpes": [[988, 1, 1, "", "input_parameters"]], "ase2sprkkr.input_parameters.definitions.phagen": [[990, 1, 1, "", "input_parameters"]], "ase2sprkkr.input_parameters.definitions.scf": [[992, 1, 1, "", "input_parameters"]], "ase2sprkkr.input_parameters.definitions.sections": [[994, 1, 1, "", "CONTROL"], [995, 7, 1, "", "CPA"], [996, 7, 1, "", "ENERGY"], [997, 7, 1, "", "MODE"], [998, 7, 1, "", "SCF"], [999, 7, 1, "", "SITES"], [1000, 7, 1, "", "STRCONST"], [1001, 1, 1, "", "TASK"], [1002, 7, 1, "", "TAU"], [1003, 2, 1, "", "TauSection"], [1004, 1, 1, "", "_nktab_value"], [1005, 1, 1, "", "xc"]], "ase2sprkkr.input_parameters.definitions.sections.TauSection": [[1003, 3, 1, "", "__init__"], [1003, 4, 1, "", "_copy_args"], [1003, 3, 1, "", "set_from_atoms"]], "ase2sprkkr.input_parameters.input_parameters": [[1007, 2, 1, "", "InputParameters"], [1008, 2, 1, "", "InputSection"]], "ase2sprkkr.input_parameters.input_parameters.InputParameters": [[1007, 3, 1, "", "__init__"], [1007, 4, 1, "", "_definitions"], [1007, 3, 1, "", "calculate"], [1007, 3, 1, "", "change_task"], [1007, 3, 1, "", "create"], [1007, 3, 1, "", "create_input_parameters"], [1007, 3, 1, "", "default_parameters"], [1007, 3, 1, "", "definition"], [1007, 4, 1, "", "definition_modules"], [1007, 4, 1, "", "definitions"], [1007, 3, 1, "", "executable_params"], [1007, 3, 1, "", "from_file"], [1007, 3, 1, "", "is_it_an_input_parameters_name"], [1007, 3, 1, "", "is_mpi"], [1007, 5, 1, "", "potential"], [1007, 3, 1, "", "read_output_from_file"], [1007, 3, 1, "", "resolve_executable_suffix"], [1007, 3, 1, "", "result_reader"], [1007, 3, 1, "", "run_process"], [1007, 3, 1, "", "save_to_file"], [1007, 3, 1, "", "set_option"], [1007, 5, 1, "", "task_name"]], "ase2sprkkr.input_parameters.input_parameters.InputSection": [[1008, 3, 1, "", "__init__"]], "ase2sprkkr.input_parameters.input_parameters_definitions": [[1010, 2, 1, "", "InputParametersDefinition"], [1011, 2, 1, "", "InputSectionDefinition"], [1012, 2, 1, "", "InputValueDefinition"]], "ase2sprkkr.input_parameters.input_parameters_definitions.InputParametersDefinition": [[1010, 3, 1, "", "__init__"], [1010, 4, 1, "", "_copy_args"], [1010, 3, 1, "", "_generic_info"], [1010, 4, 1, "", "child_class"], [1010, 4, 1, "", "configuration_type_name"], [1010, 3, 1, "", "custom_class"], [1010, 3, 1, "", "custom_value_grammar"], [1010, 4, 1, "", "delimiter"], [1010, 4, 1, "", "grammar_of_delimiter"], [1010, 4, 1, "", "result_class"], [1010, 4, 1, "", "save_hook"]], "ase2sprkkr.input_parameters.input_parameters_definitions.InputSectionDefinition": [[1011, 3, 1, "", "__init__"], [1011, 4, 1, "", "_copy_args"], [1011, 4, 1, "", "child_class"], [1011, 3, 1, "", "custom_class"], [1011, 4, 1, "", "delimiter"], [1011, 4, 1, "", "do_not_skip_whitespaces_before_name"], [1011, 4, 1, "", "grammar_of_delimiter"], [1011, 4, 1, "", "result_class"]], "ase2sprkkr.input_parameters.input_parameters_definitions.InputValueDefinition": [[1012, 3, 1, "", "__init__"], [1012, 4, 1, "", "_copy_args"], [1012, 4, 1, "", "grammar_of_delimiter"], [1012, 4, 1, "", "name_value_delimiter"], [1012, 4, 1, "", "prefix"], [1012, 4, 1, "", "type_from_type_map"], [1012, 4, 1, "", "type_of_dangerous"]], "ase2sprkkr.input_parameters.test": [[1014, 0, 0, "-", "init_tests"], [1023, 0, 0, "-", "test_definitions"], [1025, 0, 0, "-", "test_input_parameters"]], "ase2sprkkr.input_parameters.test.init_tests": [[1015, 2, 1, "", "TestCase"], [1016, 1, 1, "", "arr_testfce"], [1017, 1, 1, "", "assertDictEqual"], [1018, 1, 1, "", "assertListEqual"], [1019, 1, 1, "", "assert_almost_equals"], [1020, 1, 1, "", "assert_equals"], [1021, 2, 1, "", "extdict"], [1022, 1, 1, "", "testfce"]], "ase2sprkkr.input_parameters.test.init_tests.TestCase": [[1015, 3, 1, "", "__init__"], [1015, 4, 1, "", "_calc_args"], [1015, 4, 1, "", "_print_output"], [1015, 3, 1, "", "almost_equal_precision"], [1015, 3, 1, "", "assertAlmostEqual"], [1015, 3, 1, "", "assertAsyncEqual"], [1015, 3, 1, "", "assertAsyncRaises"], [1015, 3, 1, "", "assertEqual"], [1015, 3, 1, "", "assertFalse"], [1015, 3, 1, "", "assertIsNone"], [1015, 3, 1, "", "assertNotEqual"], [1015, 3, 1, "", "assertRaises"], [1015, 3, 1, "", "assertTrue"], [1015, 3, 1, "", "calc_args"], [1015, 3, 1, "", "runAsync"], [1015, 3, 1, "", "run_sprkkr"], [1015, 3, 1, "", "temporary_dir"]], "ase2sprkkr.input_parameters.test.init_tests.extdict": [[1021, 3, 1, "", "__init__"]], "ase2sprkkr.input_parameters.test.test_definitions": [[1024, 2, 1, "", "TestDefinitions"]], "ase2sprkkr.input_parameters.test.test_definitions.TestDefinitions": [[1024, 3, 1, "", "__init__"], [1024, 3, 1, "", "change_task"], [1024, 3, 1, "", "jxc"], [1024, 3, 1, "", "test_defaults"], [1024, 3, 1, "", "test_definitions"]], "ase2sprkkr.input_parameters.test.test_input_parameters": [[1026, 2, 1, "", "TestInputParameters"], [1027, 1, 1, "", "ar"]], "ase2sprkkr.input_parameters.test.test_input_parameters.TestInputParameters": [[1026, 3, 1, "", "__init__"], [1026, 3, 1, "", "assertNotValid"], [1026, 3, 1, "", "assertParse"], [1026, 3, 1, "", "parse"], [1026, 3, 1, "", "test_copy"], [1026, 3, 1, "", "test_custom_value"], [1026, 3, 1, "", "test_dangerous_value"], [1026, 3, 1, "", "test_gather"], [1026, 3, 1, "", "test_input_parameters_definition"], [1026, 3, 1, "", "test_length"], [1026, 3, 1, "", "test_numpy_array"], [1026, 3, 1, "", "test_repeated_value"], [1026, 3, 1, "", "test_section_delimiter_value"], [1026, 3, 1, "", "test_set_values"], [1026, 3, 1, "", "test_sparse_numbered"], [1026, 3, 1, "", "test_switch"], [1026, 3, 1, "", "test_write_condition"]], "ase2sprkkr.output_files": [[1029, 0, 0, "-", "definitions"], [1047, 0, 0, "-", "output_files"], [1052, 0, 0, "-", "output_files_definitions"], [1059, 0, 0, "-", "test"]], "ase2sprkkr.output_files.definitions": [[1030, 2, 1, "", "Arithmetic"], [1031, 2, 1, "", "CommonOutputFile"], [1032, 2, 1, "", "OutputFile"], [1033, 2, 1, "", "UnknownDataValue"], [1034, 0, 0, "-", "bsf"], [1038, 0, 0, "-", "dos"], [1043, 0, 0, "-", "spc"]], "ase2sprkkr.output_files.definitions.Arithmetic": [[1030, 3, 1, "", "__init__"], [1030, 3, 1, "", "_check_arithmetic"], [1030, 3, 1, "", "_do_arithmetic"]], "ase2sprkkr.output_files.definitions.CommonOutputFile": [[1031, 3, 1, "", "__init__"], [1031, 3, 1, "", "n_atoms"], [1031, 3, 1, "", "n_orbitals"], [1031, 3, 1, "", "n_types"], [1031, 3, 1, "", "site_type_index"]], "ase2sprkkr.output_files.definitions.OutputFile": [[1032, 3, 1, "", "__init__"], [1032, 4, 1, "", "definitions"], [1032, 3, 1, "", "from_file"], [1032, 4, 1, "", "unknown_output_file_definition"]], "ase2sprkkr.output_files.definitions.UnknownDataValue": [[1033, 3, 1, "", "__init__"], [1033, 3, 1, "", "as_array"]], "ase2sprkkr.output_files.definitions.bsf": [[1035, 2, 1, "", "BSFDefinition"], [1036, 2, 1, "", "BSFOutputFile"], [1037, 1, 1, "", "create_definition"]], "ase2sprkkr.output_files.definitions.bsf.BSFDefinition": [[1035, 3, 1, "", "__init__"], [1035, 4, 1, "", "result_class"]], "ase2sprkkr.output_files.definitions.bsf.BSFOutputFile": [[1036, 3, 1, "", "__init__"], [1036, 4, 1, "", "_arithmetic_values"], [1036, 3, 1, "", "_assert_arithmetic"], [1036, 3, 1, "", "plot"]], "ase2sprkkr.output_files.definitions.dos": [[1039, 2, 1, "", "DOS"], [1040, 2, 1, "", "DOSDefinition"], [1041, 2, 1, "", "DOSOutputFile"], [1042, 1, 1, "", "create_definition"]], "ase2sprkkr.output_files.definitions.dos.DOS": [[1039, 3, 1, "", "__init__"], [1039, 3, 1, "", "_check_arithmetic"], [1039, 3, 1, "", "_do_arithmetic"], [1039, 3, 1, "", "copy"], [1039, 3, 1, "", "plot"], [1039, 5, 1, "", "shape"]], "ase2sprkkr.output_files.definitions.dos.DOSDefinition": [[1040, 3, 1, "", "__init__"], [1040, 4, 1, "", "result_class"]], "ase2sprkkr.output_files.definitions.dos.DOSOutputFile": [[1041, 3, 1, "", "__init__"], [1041, 3, 1, "", "_clear_computed"], [1041, 3, 1, "", "_create_dos"], [1041, 3, 1, "", "_resolve_spin"], [1041, 3, 1, "", "dos_for_site_type"], [1041, 5, 1, "", "energy"], [1041, 3, 1, "", "index_of_dos_for_site_type"], [1041, 3, 1, "", "iterate_data_slices"], [1041, 3, 1, "", "iterate_dos"], [1041, 3, 1, "", "n_orbitals_for"], [1041, 3, 1, "", "n_spins"], [1041, 3, 1, "", "plot"], [1041, 3, 1, "", "total_dos"]], "ase2sprkkr.output_files.definitions.spc": [[1044, 2, 1, "", "ARPESDefinition"], [1045, 2, 1, "", "ARPESOutputFile"], [1046, 1, 1, "", "create_definition"]], "ase2sprkkr.output_files.definitions.spc.ARPESDefinition": [[1044, 3, 1, "", "__init__"], [1044, 4, 1, "", "result_class"]], "ase2sprkkr.output_files.definitions.spc.ARPESOutputFile": [[1045, 3, 1, "", "__init__"], [1045, 4, 1, "", "_arithmetic_values"], [1045, 3, 1, "", "_assert_arithmetic"], [1045, 3, 1, "", "plot"]], "ase2sprkkr.output_files.output_files": [[1048, 2, 1, "", "Arithmetic"], [1049, 2, 1, "", "CommonOutputFile"], [1050, 2, 1, "", "OutputFile"], [1051, 2, 1, "", "UnknownDataValue"]], "ase2sprkkr.output_files.output_files.Arithmetic": [[1048, 3, 1, "", "__init__"], [1048, 3, 1, "", "_check_arithmetic"], [1048, 3, 1, "", "_do_arithmetic"]], "ase2sprkkr.output_files.output_files.CommonOutputFile": [[1049, 3, 1, "", "__init__"], [1049, 3, 1, "", "n_atoms"], [1049, 3, 1, "", "n_orbitals"], [1049, 3, 1, "", "n_types"], [1049, 3, 1, "", "site_type_index"]], "ase2sprkkr.output_files.output_files.OutputFile": [[1050, 3, 1, "", "__init__"], [1050, 4, 1, "", "definitions"], [1050, 3, 1, "", "from_file"], [1050, 4, 1, "", "unknown_output_file_definition"]], "ase2sprkkr.output_files.output_files.UnknownDataValue": [[1051, 3, 1, "", "__init__"], [1051, 3, 1, "", "as_array"]], "ase2sprkkr.output_files.output_files_definitions": [[1053, 2, 1, "", "BlankSeparator"], [1054, 2, 1, "", "OutputFileDefinition"], [1055, 2, 1, "", "OutputFileValueDefinition"], [1056, 2, 1, "", "Separator"], [1057, 1, 1, "", "create_output_file_definition"], [1058, 1, 1, "", "output_file_header"]], "ase2sprkkr.output_files.output_files_definitions.BlankSeparator": [[1053, 3, 1, "", "__init__"], [1053, 4, 1, "", "separator_type"]], "ase2sprkkr.output_files.output_files_definitions.OutputFileDefinition": [[1054, 3, 1, "", "__init__"], [1054, 3, 1, "", "add_ignored"], [1054, 4, 1, "", "child_class"], [1054, 4, 1, "", "configuration_type_name"], [1054, 4, 1, "", "custom_class"], [1054, 4, 1, "", "delimiter"], [1054, 4, 1, "", "force_order"], [1054, 4, 1, "", "grammar_of_delimiter"], [1054, 4, 1, "", "result_class"], [1054, 4, 1, "", "value_name_format"]], "ase2sprkkr.output_files.output_files_definitions.OutputFileValueDefinition": [[1055, 3, 1, "", "__init__"], [1055, 4, 1, "", "grammar_of_delimiter"], [1055, 4, 1, "", "name_value_delimiter"], [1055, 4, 1, "", "prefix"], [1055, 4, 1, "", "type_from_type_map"], [1055, 4, 1, "", "type_of_dangerous"]], "ase2sprkkr.output_files.output_files_definitions.Separator": [[1056, 3, 1, "", "__init__"], [1056, 4, 1, "", "separator_type"]], "ase2sprkkr.output_files.test": [[1060, 0, 0, "-", "init_tests"], [1069, 0, 0, "-", "test_files"]], "ase2sprkkr.output_files.test.init_tests": [[1061, 2, 1, "", "TestCase"], [1062, 1, 1, "", "arr_testfce"], [1063, 1, 1, "", "assertDictEqual"], [1064, 1, 1, "", "assertListEqual"], [1065, 1, 1, "", "assert_almost_equals"], [1066, 1, 1, "", "assert_equals"], [1067, 2, 1, "", "extdict"], [1068, 1, 1, "", "testfce"]], "ase2sprkkr.output_files.test.init_tests.TestCase": [[1061, 3, 1, "", "__init__"], [1061, 4, 1, "", "_calc_args"], [1061, 4, 1, "", "_print_output"], [1061, 3, 1, "", "almost_equal_precision"], [1061, 3, 1, "", "assertAlmostEqual"], [1061, 3, 1, "", "assertAsyncEqual"], [1061, 3, 1, "", "assertAsyncRaises"], [1061, 3, 1, "", "assertEqual"], [1061, 3, 1, "", "assertFalse"], [1061, 3, 1, "", "assertIsNone"], [1061, 3, 1, "", "assertNotEqual"], [1061, 3, 1, "", "assertRaises"], [1061, 3, 1, "", "assertTrue"], [1061, 3, 1, "", "calc_args"], [1061, 3, 1, "", "runAsync"], [1061, 3, 1, "", "run_sprkkr"], [1061, 3, 1, "", "temporary_dir"]], "ase2sprkkr.output_files.test.init_tests.extdict": [[1067, 3, 1, "", "__init__"]], "ase2sprkkr.output_files.test.test_files": [[1070, 2, 1, "", "TestOutput"]], "ase2sprkkr.output_files.test.test_files.TestOutput": [[1070, 3, 1, "", "__init__"], [1070, 3, 1, "", "test_output"]], "ase2sprkkr.outputs": [[1072, 0, 0, "-", "output_definitions"], [1077, 0, 0, "-", "readers"], [1097, 0, 0, "-", "sprkkr_output_reader"], [1099, 0, 0, "-", "task_result"], [1102, 0, 0, "-", "test"]], "ase2sprkkr.outputs.output_definitions": [[1073, 2, 1, "", "OutputNonameValueDefinition"], [1074, 2, 1, "", "OutputSectionDefinition"], [1075, 2, 1, "", "OutputValueDefinition"], [1076, 2, 1, "", "OutputValueEqualDefinition"]], "ase2sprkkr.outputs.output_definitions.OutputNonameValueDefinition": [[1073, 3, 1, "", "__init__"], [1073, 4, 1, "", "name_in_grammar"]], "ase2sprkkr.outputs.output_definitions.OutputSectionDefinition": [[1074, 3, 1, "", "__init__"], [1074, 4, 1, "", "child_class"], [1074, 4, 1, "", "custom_class"], [1074, 4, 1, "", "delimiter"], [1074, 4, 1, "", "force_order"], [1074, 4, 1, "", "grammar_of_delimiter"], [1074, 4, 1, "", "name_in_grammar"]], "ase2sprkkr.outputs.output_definitions.OutputValueDefinition": [[1075, 3, 1, "", "__init__"], [1075, 4, 1, "", "grammar_of_delimiter"], [1075, 4, 1, "", "prefix"]], "ase2sprkkr.outputs.output_definitions.OutputValueEqualDefinition": [[1076, 3, 1, "", "__init__"], [1076, 4, 1, "", "grammar_of_delimiter"], [1076, 4, 1, "", "name_value_delimiter"]], "ase2sprkkr.outputs.readers": [[1078, 0, 0, "-", "arpes"], [1081, 0, 0, "-", "bsf"], [1084, 0, 0, "-", "default"], [1088, 0, 0, "-", "dos"], [1091, 0, 0, "-", "scf"]], "ase2sprkkr.outputs.readers.arpes": [[1079, 2, 1, "", "ArpesProcess"], [1080, 2, 1, "", "ArpesResult"]], "ase2sprkkr.outputs.readers.arpes.ArpesProcess": [[1079, 3, 1, "", "__init__"], [1079, 4, 1, "", "reader_class"], [1079, 4, 1, "", "result_class"]], "ase2sprkkr.outputs.readers.arpes.ArpesResult": [[1080, 3, 1, "", "__init__"], [1080, 5, 1, "", "spc"], [1080, 5, 1, "", "spc_filename"]], "ase2sprkkr.outputs.readers.bsf": [[1082, 2, 1, "", "BsfProcess"], [1083, 2, 1, "", "BsfResult"]], "ase2sprkkr.outputs.readers.bsf.BsfProcess": [[1082, 3, 1, "", "__init__"], [1082, 4, 1, "", "reader_class"], [1082, 4, 1, "", "result_class"]], "ase2sprkkr.outputs.readers.bsf.BsfResult": [[1083, 3, 1, "", "__init__"], [1083, 5, 1, "", "bsf"], [1083, 5, 1, "", "bsf_filename"]], "ase2sprkkr.outputs.readers.default": [[1085, 2, 1, "", "DefaultOutputReader"], [1086, 2, 1, "", "DefaultProcess"], [1087, 2, 1, "", "DefaultResult"]], "ase2sprkkr.outputs.readers.default.DefaultOutputReader": [[1085, 3, 1, "", "__init__"], [1085, 3, 1, "", "read_output"]], "ase2sprkkr.outputs.readers.default.DefaultProcess": [[1086, 3, 1, "", "__init__"], [1086, 4, 1, "", "reader_class"], [1086, 4, 1, "", "result_class"]], "ase2sprkkr.outputs.readers.default.DefaultResult": [[1087, 3, 1, "", "__init__"]], "ase2sprkkr.outputs.readers.dos": [[1089, 2, 1, "", "DosProcess"], [1090, 2, 1, "", "DosResult"]], "ase2sprkkr.outputs.readers.dos.DosProcess": [[1089, 3, 1, "", "__init__"], [1089, 4, 1, "", "reader_class"], [1089, 4, 1, "", "result_class"]], "ase2sprkkr.outputs.readers.dos.DosResult": [[1090, 3, 1, "", "__init__"], [1090, 5, 1, "", "dos"], [1090, 5, 1, "", "dos_filename"]], "ase2sprkkr.outputs.readers.scf": [[1092, 2, 1, "", "RealOrStars"], [1093, 2, 1, "", "ScfOutputReader"], [1094, 2, 1, "", "ScfProcess"], [1095, 2, 1, "", "ScfResult"], [1096, 7, 1, "", "atomic_types_definition"]], "ase2sprkkr.outputs.readers.scf.RealOrStars": [[1092, 3, 1, "", "__init__"], [1092, 4, 1, "", "_grammar"]], "ase2sprkkr.outputs.readers.scf.ScfOutputReader": [[1093, 3, 1, "", "__init__"], [1093, 3, 1, "", "read_output"]], "ase2sprkkr.outputs.readers.scf.ScfProcess": [[1094, 3, 1, "", "__init__"], [1094, 4, 1, "", "reader_class"], [1094, 4, 1, "", "result_class"]], "ase2sprkkr.outputs.readers.scf.ScfResult": [[1095, 3, 1, "", "__init__"], [1095, 5, 1, "", "calculator"], [1095, 5, 1, "", "converged"], [1095, 5, 1, "", "energies"], [1095, 5, 1, "", "energy"], [1095, 3, 1, "", "iteration_values"], [1095, 5, 1, "", "last_iteration"], [1095, 3, 1, "", "plot"], [1095, 5, 1, "", "potential_filename"], [1095, 5, 1, "", "start_potential"], [1095, 5, 1, "", "start_potential_filename"]], "ase2sprkkr.outputs.sprkkr_output_reader": [[1098, 2, 1, "", "SprKkrOutputReader"]], "ase2sprkkr.outputs.sprkkr_output_reader.SprKkrOutputReader": [[1098, 3, 1, "", "__init__"], [1098, 3, 1, "", "parse_files"], [1098, 3, 1, "", "read_commons"]], "ase2sprkkr.outputs.task_result": [[1100, 2, 1, "", "KkrProcess"], [1101, 2, 1, "", "TaskResult"]], "ase2sprkkr.outputs.task_result.KkrProcess": [[1100, 3, 1, "", "__init__"], [1100, 3, 1, "", "_wraps"], [1100, 4, 1, "", "calculator"], [1100, 3, 1, "", "class_for_task"], [1100, 4, 1, "", "directory"], [1100, 4, 1, "", "input_parameters"], [1100, 3, 1, "", "read_from_file"], [1100, 3, 1, "", "run"]], "ase2sprkkr.outputs.task_result.TaskResult": [[1101, 3, 1, "", "__init__"], [1101, 4, 1, "", "_match_task_regex"], [1101, 5, 1, "", "atoms"], [1101, 3, 1, "", "complete"], [1101, 3, 1, "", "from_file"], [1101, 5, 1, "", "input_parameters"], [1101, 5, 1, "", "input_parameters_file"], [1101, 3, 1, "", "new_task"], [1101, 3, 1, "", "path_to"], [1101, 5, 1, "", "potential"], [1101, 5, 1, "", "potential_filename"], [1101, 5, 1, "", "task_name"]], "ase2sprkkr.outputs.test": [[1103, 0, 0, "-", "init_tests"], [1112, 0, 0, "-", "test_output"]], "ase2sprkkr.outputs.test.init_tests": [[1104, 2, 1, "", "TestCase"], [1105, 1, 1, "", "arr_testfce"], [1106, 1, 1, "", "assertDictEqual"], [1107, 1, 1, "", "assertListEqual"], [1108, 1, 1, "", "assert_almost_equals"], [1109, 1, 1, "", "assert_equals"], [1110, 2, 1, "", "extdict"], [1111, 1, 1, "", "testfce"]], "ase2sprkkr.outputs.test.init_tests.TestCase": [[1104, 3, 1, "", "__init__"], [1104, 4, 1, "", "_calc_args"], [1104, 4, 1, "", "_print_output"], [1104, 3, 1, "", "almost_equal_precision"], [1104, 3, 1, "", "assertAlmostEqual"], [1104, 3, 1, "", "assertAsyncEqual"], [1104, 3, 1, "", "assertAsyncRaises"], [1104, 3, 1, "", "assertEqual"], [1104, 3, 1, "", "assertFalse"], [1104, 3, 1, "", "assertIsNone"], [1104, 3, 1, "", "assertNotEqual"], [1104, 3, 1, "", "assertRaises"], [1104, 3, 1, "", "assertTrue"], [1104, 3, 1, "", "calc_args"], [1104, 3, 1, "", "runAsync"], [1104, 3, 1, "", "run_sprkkr"], [1104, 3, 1, "", "temporary_dir"]], "ase2sprkkr.outputs.test.init_tests.extdict": [[1110, 3, 1, "", "__init__"]], "ase2sprkkr.outputs.test.test_output": [[1113, 2, 1, "", "TestOutput"]], "ase2sprkkr.outputs.test.test_output.TestOutput": [[1113, 3, 1, "", "__init__"], [1113, 3, 1, "", "test_output"], [1113, 3, 1, "", "test_scf"]], "ase2sprkkr.physics": [[1115, 0, 0, "-", "lattice_data"], [1119, 0, 0, "-", "winger_seitz_radii"]], "ase2sprkkr.physics.lattice_data": [[1116, 2, 1, "", "LatticeData"], [1117, 2, 1, "", "Pearson"], [1118, 7, 1, "", "international_numbers_to_AP"]], "ase2sprkkr.physics.lattice_data.LatticeData": [[1116, 3, 1, "", "__init__"], [1116, 5, 1, "", "bravais_number"], [1116, 5, 1, "", "shoenflies_symbol"]], "ase2sprkkr.physics.lattice_data.Pearson": [[1117, 3, 1, "", "__init__"], [1117, 3, 1, "", "from_symbol"], [1117, 3, 1, "", "normalize_symbol"], [1117, 4, 1, "", "pearson"], [1117, 4, 1, "", "pearsons"], [1117, 3, 1, "", "xband_data"]], "ase2sprkkr.physics.winger_seitz_radii": [[1120, 7, 1, "", "winger_seitz_radii"]], "ase2sprkkr.potentials": [[1122, 0, 0, "-", "custom_potential_section"], [1127, 0, 0, "-", "definitions"], [1187, 0, 0, "-", "potential_definitions"], [1193, 0, 0, "-", "potential_sections"], [1200, 0, 0, "-", "potentials"], [1202, 0, 0, "-", "test"]], "ase2sprkkr.potentials.custom_potential_section": [[1123, 2, 1, "", "CustomPotentialSection"], [1124, 2, 1, "", "CustomPotentialSectionDefinition"], [1125, 2, 1, "", "CustomSectionToken"], [1126, 2, 1, "", "SectionString"]], "ase2sprkkr.potentials.custom_potential_section.CustomPotentialSection": [[1123, 3, 1, "", "__init__"], [1123, 3, 1, "", "_depends_on"], [1123, 3, 1, "", "_set_from_atoms"], [1123, 3, 1, "", "_update_atoms"], [1123, 3, 1, "", "reset"]], "ase2sprkkr.potentials.custom_potential_section.CustomPotentialSectionDefinition": [[1124, 3, 1, "", "__init__"], [1124, 4, 1, "", "mandatory"], [1124, 4, 1, "", "name_value_delimiter"], [1124, 4, 1, "", "prefix"]], "ase2sprkkr.potentials.custom_potential_section.CustomSectionToken": [[1125, 3, 1, "", "__init__"], [1125, 4, 1, "", "_abc_impl"], [1125, 4, 1, "", "name"], [1125, 3, 1, "", "parseImpl"], [1125, 4, 1, "", "pattern"]], "ase2sprkkr.potentials.custom_potential_section.SectionString": [[1126, 4, 1, "", "I"], [1126, 3, 1, "", "__init__"], [1126, 4, 1, "", "_grammar"], [1126, 4, 1, "", "delimiter_pattern"], [1126, 3, 1, "", "grammar_name"], [1126, 4, 1, "", "grammar_of_delimiter"], [1126, 3, 1, "", "write"]], "ase2sprkkr.potentials.definitions": [[1128, 0, 0, "-", "potential"], [1130, 0, 0, "-", "sections"]], "ase2sprkkr.potentials.definitions.potential": [[1129, 7, 1, "", "potential_definition"]], "ase2sprkkr.potentials.definitions.sections": [[1131, 1, 1, "", "_sections"], [1132, 0, 0, "-", "charge"], [1137, 0, 0, "-", "charge_moments"], [1141, 0, 0, "-", "global_system_parameter"], [1145, 0, 0, "-", "host_madelung_potential"], [1149, 0, 0, "-", "lattice"], [1153, 0, 0, "-", "mesh_information"], [1157, 0, 0, "-", "moments"], [1162, 0, 0, "-", "occupation"], [1166, 0, 0, "-", "potential"], [1171, 0, 0, "-", "reference_system"], [1175, 0, 0, "-", "scf_info"], [1179, 0, 0, "-", "sites"], [1183, 0, 0, "-", "types"]], "ase2sprkkr.potentials.definitions.sections.charge": [[1133, 2, 1, "", "ChargeSection"], [1134, 2, 1, "", "ChargeSectionDefinition"], [1135, 2, 1, "", "ChargesSection"], [1136, 4, 1, "", "section"]], "ase2sprkkr.potentials.definitions.sections.charge.ChargeSection": [[1133, 3, 1, "", "__init__"]], "ase2sprkkr.potentials.definitions.sections.charge.ChargeSectionDefinition": [[1134, 3, 1, "", "__init__"], [1134, 4, 1, "", "repeated_class"], [1134, 4, 1, "", "result_class"]], "ase2sprkkr.potentials.definitions.sections.charge.ChargesSection": [[1135, 3, 1, "", "__init__"], [1135, 4, 1, "", "property_label"], [1135, 4, 1, "", "property_name"]], "ase2sprkkr.potentials.definitions.sections.charge_moments": [[1138, 2, 1, "", "ChargeMomentsSection"], [1139, 2, 1, "", "ChargeMomentsSectionDefinition"], [1140, 4, 1, "", "section"]], "ase2sprkkr.potentials.definitions.sections.charge_moments.ChargeMomentsSection": [[1138, 3, 1, "", "__init__"]], "ase2sprkkr.potentials.definitions.sections.charge_moments.ChargeMomentsSectionDefinition": [[1139, 3, 1, "", "__init__"], [1139, 4, 1, "", "array_name"], [1139, 4, 1, "", "result_class"]], "ase2sprkkr.potentials.definitions.sections.global_system_parameter": [[1142, 2, 1, "", "GlobalSystemParameter"], [1143, 2, 1, "", "GlobalSystemParameterDefinition"], [1144, 4, 1, "", "section"]], "ase2sprkkr.potentials.definitions.sections.global_system_parameter.GlobalSystemParameter": [[1142, 3, 1, "", "__init__"], [1142, 3, 1, "", "_set_from_atoms"]], "ase2sprkkr.potentials.definitions.sections.global_system_parameter.GlobalSystemParameterDefinition": [[1143, 3, 1, "", "__init__"], [1143, 4, 1, "", "result_class"]], "ase2sprkkr.potentials.definitions.sections.host_madelung_potential": [[1146, 2, 1, "", "HostMadelungPotentialSection"], [1147, 2, 1, "", "HostMadelungPotentialSectionDefinition"], [1148, 4, 1, "", "section"]], "ase2sprkkr.potentials.definitions.sections.host_madelung_potential.HostMadelungPotentialSection": [[1146, 3, 1, "", "__init__"]], "ase2sprkkr.potentials.definitions.sections.host_madelung_potential.HostMadelungPotentialSectionDefinition": [[1147, 3, 1, "", "__init__"], [1147, 4, 1, "", "array_name"], [1147, 4, 1, "", "result_class"]], "ase2sprkkr.potentials.definitions.sections.lattice": [[1150, 2, 1, "", "LatticeSection"], [1151, 2, 1, "", "LatticeSectionDefinition"], [1152, 4, 1, "", "section"]], "ase2sprkkr.potentials.definitions.sections.lattice.LatticeSection": [[1150, 3, 1, "", "__init__"], [1150, 3, 1, "", "_set_from_atoms"], [1150, 3, 1, "", "_update_atoms"]], "ase2sprkkr.potentials.definitions.sections.lattice.LatticeSectionDefinition": [[1151, 3, 1, "", "__init__"], [1151, 4, 1, "", "result_class"], [1151, 3, 1, "", "validate"]], "ase2sprkkr.potentials.definitions.sections.mesh_information": [[1154, 2, 1, "", "MeshInformationSection"], [1155, 2, 1, "", "MeshInformationSectionDefinition"], [1156, 4, 1, "", "section"]], "ase2sprkkr.potentials.definitions.sections.mesh_information.MeshInformationSection": [[1154, 3, 1, "", "__init__"], [1154, 4, 1, "", "_value_class"], [1154, 4, 1, "", "_value_name"]], "ase2sprkkr.potentials.definitions.sections.mesh_information.MeshInformationSectionDefinition": [[1155, 3, 1, "", "__init__"], [1155, 4, 1, "", "result_class"]], "ase2sprkkr.potentials.definitions.sections.moments": [[1158, 2, 1, "", "MomentSection"], [1159, 2, 1, "", "MomentsSection"], [1160, 2, 1, "", "MomentsSectionDefinition"], [1161, 4, 1, "", "section"]], "ase2sprkkr.potentials.definitions.sections.moments.MomentSection": [[1158, 3, 1, "", "__init__"]], "ase2sprkkr.potentials.definitions.sections.moments.MomentsSection": [[1159, 3, 1, "", "__init__"], [1159, 4, 1, "", "property_name"], [1159, 3, 1, "", "write_data"]], "ase2sprkkr.potentials.definitions.sections.moments.MomentsSectionDefinition": [[1160, 3, 1, "", "__init__"], [1160, 4, 1, "", "repeated_class"], [1160, 4, 1, "", "result_class"]], "ase2sprkkr.potentials.definitions.sections.occupation": [[1163, 2, 1, "", "OccupationSection"], [1164, 2, 1, "", "OccupationSectionDefinition"], [1165, 4, 1, "", "section"]], "ase2sprkkr.potentials.definitions.sections.occupation.OccupationSection": [[1163, 3, 1, "", "__init__"], [1163, 3, 1, "", "_set_from_atoms"], [1163, 3, 1, "", "_update_atoms"]], "ase2sprkkr.potentials.definitions.sections.occupation.OccupationSectionDefinition": [[1164, 3, 1, "", "__init__"], [1164, 3, 1, "", "depends_on"], [1164, 4, 1, "", "result_class"]], "ase2sprkkr.potentials.definitions.sections.potential": [[1167, 2, 1, "", "PotentialSection"], [1168, 2, 1, "", "PotentialSectionDefinition"], [1169, 2, 1, "", "PotentialsSection"], [1170, 4, 1, "", "section"]], "ase2sprkkr.potentials.definitions.sections.potential.PotentialSection": [[1167, 3, 1, "", "__init__"]], "ase2sprkkr.potentials.definitions.sections.potential.PotentialSectionDefinition": [[1168, 3, 1, "", "__init__"], [1168, 4, 1, "", "repeated_class"], [1168, 4, 1, "", "result_class"]], "ase2sprkkr.potentials.definitions.sections.potential.PotentialsSection": [[1169, 3, 1, "", "__init__"], [1169, 4, 1, "", "property_label"], [1169, 4, 1, "", "property_name"]], "ase2sprkkr.potentials.definitions.sections.reference_system": [[1172, 2, 1, "", "ReferenceSystemSection"], [1173, 2, 1, "", "ReferenceSystemSectionDefinition"], [1174, 4, 1, "", "section"]], "ase2sprkkr.potentials.definitions.sections.reference_system.ReferenceSystemSection": [[1172, 3, 1, "", "__init__"], [1172, 3, 1, "", "_set_from_atoms"], [1172, 4, 1, "", "_value_class"], [1172, 4, 1, "", "_value_name"]], "ase2sprkkr.potentials.definitions.sections.reference_system.ReferenceSystemSectionDefinition": [[1173, 3, 1, "", "__init__"], [1173, 4, 1, "", "result_class"], [1173, 3, 1, "", "validate"]], "ase2sprkkr.potentials.definitions.sections.scf_info": [[1176, 2, 1, "", "ScfInfoSection"], [1177, 2, 1, "", "ScfInfoSectionDefinition"], [1178, 4, 1, "", "section"]], "ase2sprkkr.potentials.definitions.sections.scf_info.ScfInfoSection": [[1176, 3, 1, "", "__init__"], [1176, 3, 1, "", "_depends_on"], [1176, 3, 1, "", "_set_from_atoms"], [1176, 3, 1, "", "_update_atoms"]], "ase2sprkkr.potentials.definitions.sections.scf_info.ScfInfoSectionDefinition": [[1177, 3, 1, "", "__init__"], [1177, 4, 1, "", "result_class"]], "ase2sprkkr.potentials.definitions.sections.sites": [[1180, 2, 1, "", "SitesSection"], [1181, 2, 1, "", "SitesSectionDefinition"], [1182, 4, 1, "", "section"]], "ase2sprkkr.potentials.definitions.sections.sites.SitesSection": [[1180, 3, 1, "", "__init__"], [1180, 3, 1, "", "_depends_on"], [1180, 3, 1, "", "_set_from_atoms"], [1180, 3, 1, "", "_update_atoms"]], "ase2sprkkr.potentials.definitions.sections.sites.SitesSectionDefinition": [[1181, 3, 1, "", "__init__"], [1181, 4, 1, "", "result_class"]], "ase2sprkkr.potentials.definitions.sections.types": [[1184, 2, 1, "", "TypesSection"], [1185, 2, 1, "", "TypesSectionDefinition"], [1186, 4, 1, "", "section"]], "ase2sprkkr.potentials.definitions.sections.types.TypesSection": [[1184, 3, 1, "", "__init__"], [1184, 4, 1, "", "_value_class"], [1184, 4, 1, "", "_value_name"]], "ase2sprkkr.potentials.definitions.sections.types.TypesSectionDefinition": [[1185, 3, 1, "", "__init__"], [1185, 4, 1, "", "result_class"]], "ase2sprkkr.potentials.potential_definitions": [[1188, 2, 1, "", "ASEArraySectionDefinition"], [1189, 2, 1, "", "PotSectionDefinition"], [1190, 2, 1, "", "PotValueDefinition"], [1191, 2, 1, "", "PotentialDefinition"], [1192, 2, 1, "", "Separator"]], "ase2sprkkr.potentials.potential_definitions.ASEArraySectionDefinition": [[1188, 3, 1, "", "__init__"], [1188, 3, 1, "", "depends_on"], [1188, 4, 1, "", "result_class"]], "ase2sprkkr.potentials.potential_definitions.PotSectionDefinition": [[1189, 3, 1, "", "__init__"], [1189, 4, 1, "", "child_class"], [1189, 3, 1, "", "custom_class"], [1189, 4, 1, "", "delimiter"], [1189, 3, 1, "", "depends_on"], [1189, 4, 1, "", "force_order"], [1189, 4, 1, "", "grammar_of_delimiter"], [1189, 4, 1, "", "result_class"], [1189, 4, 1, "", "value_name_format"]], "ase2sprkkr.potentials.potential_definitions.PotValueDefinition": [[1190, 3, 1, "", "__init__"], [1190, 4, 1, "", "grammar_of_delimiter"], [1190, 4, 1, "", "name_value_delimiter"], [1190, 4, 1, "", "prefix"], [1190, 4, 1, "", "type_of_dangerous"]], "ase2sprkkr.potentials.potential_definitions.PotentialDefinition": [[1191, 3, 1, "", "__init__"], [1191, 3, 1, "", "_generic_info"], [1191, 4, 1, "", "child_class"], [1191, 4, 1, "", "configuration_type_name"], [1191, 4, 1, "", "custom_class"], [1191, 4, 1, "", "custom_name_characters"], [1191, 3, 1, "", "custom_value_grammar"], [1191, 4, 1, "", "delimiter"], [1191, 4, 1, "", "force_order"], [1191, 4, 1, "", "grammar_of_delimiter"], [1191, 4, 1, "", "result_class"]], "ase2sprkkr.potentials.potential_definitions.Separator": [[1192, 3, 1, "", "__init__"], [1192, 4, 1, "", "separator_type"]], "ase2sprkkr.potentials.potential_sections": [[1194, 2, 1, "", "ASEArraySection"], [1195, 2, 1, "", "AtomicTypePotentialSection"], [1196, 2, 1, "", "PotentialSection"], [1197, 2, 1, "", "PotentialSectionTrait"], [1198, 2, 1, "", "RepeatedPotentialSection"], [1199, 2, 1, "", "UniqueListSection"]], "ase2sprkkr.potentials.potential_sections.ASEArraySection": [[1194, 3, 1, "", "__init__"], [1194, 3, 1, "", "_depends_on"], [1194, 3, 1, "", "_set_from_atoms"], [1194, 3, 1, "", "_update_atoms"], [1194, 3, 1, "", "has_any_value"]], "ase2sprkkr.potentials.potential_sections.AtomicTypePotentialSection": [[1195, 3, 1, "", "__init__"], [1195, 3, 1, "", "_depends_on"], [1195, 3, 1, "", "_has_data"], [1195, 3, 1, "", "_set_from_atoms"], [1195, 3, 1, "", "_update_atoms"], [1195, 5, 1, "", "property_label"], [1195, 3, 1, "", "read_data"], [1195, 3, 1, "", "write_data"]], "ase2sprkkr.potentials.potential_sections.PotentialSection": [[1196, 3, 1, "", "__init__"]], "ase2sprkkr.potentials.potential_sections.PotentialSectionTrait": [[1197, 3, 1, "", "__init__"], [1197, 3, 1, "", "_depends_on"], [1197, 3, 1, "", "_set_from_atoms"], [1197, 3, 1, "", "_update_atoms"], [1197, 3, 1, "", "reset"]], "ase2sprkkr.potentials.potential_sections.RepeatedPotentialSection": [[1198, 3, 1, "", "__init__"]], "ase2sprkkr.potentials.potential_sections.UniqueListSection": [[1199, 3, 1, "", "__init__"], [1199, 3, 1, "", "_set_from_atoms"], [1199, 3, 1, "", "_update_atoms"], [1199, 4, 1, "", "_value_class"], [1199, 4, 1, "", "_value_name"]], "ase2sprkkr.potentials.potentials": [[1201, 2, 1, "", "Potential"]], "ase2sprkkr.potentials.potentials.Potential": [[1201, 3, 1, "", "__init__"], [1201, 5, 1, "", "atoms"], [1201, 3, 1, "", "from_atoms"], [1201, 3, 1, "", "from_file"], [1201, 3, 1, "", "from_string"], [1201, 3, 1, "", "make_complete"], [1201, 4, 1, "", "potential_definition"], [1201, 3, 1, "", "read_from_file"], [1201, 3, 1, "", "reset"], [1201, 3, 1, "", "set_from_atoms"], [1201, 3, 1, "", "update_atoms"]], "ase2sprkkr.potentials.test": [[1203, 0, 0, "-", "init_tests"], [1212, 0, 0, "-", "test_2D"], [1214, 0, 0, "-", "test_custom_section"], [1216, 0, 0, "-", "test_potential"], [1218, 0, 0, "-", "test_structure"]], "ase2sprkkr.potentials.test.init_tests": [[1204, 2, 1, "", "TestCase"], [1205, 1, 1, "", "arr_testfce"], [1206, 1, 1, "", "assertDictEqual"], [1207, 1, 1, "", "assertListEqual"], [1208, 1, 1, "", "assert_almost_equals"], [1209, 1, 1, "", "assert_equals"], [1210, 2, 1, "", "extdict"], [1211, 1, 1, "", "testfce"]], "ase2sprkkr.potentials.test.init_tests.TestCase": [[1204, 3, 1, "", "__init__"], [1204, 4, 1, "", "_calc_args"], [1204, 4, 1, "", "_print_output"], [1204, 3, 1, "", "almost_equal_precision"], [1204, 3, 1, "", "assertAlmostEqual"], [1204, 3, 1, "", "assertAsyncEqual"], [1204, 3, 1, "", "assertAsyncRaises"], [1204, 3, 1, "", "assertEqual"], [1204, 3, 1, "", "assertFalse"], [1204, 3, 1, "", "assertIsNone"], [1204, 3, 1, "", "assertNotEqual"], [1204, 3, 1, "", "assertRaises"], [1204, 3, 1, "", "assertTrue"], [1204, 3, 1, "", "calc_args"], [1204, 3, 1, "", "runAsync"], [1204, 3, 1, "", "run_sprkkr"], [1204, 3, 1, "", "temporary_dir"]], "ase2sprkkr.potentials.test.init_tests.extdict": [[1210, 3, 1, "", "__init__"]], "ase2sprkkr.potentials.test.test_2D": [[1213, 2, 1, "", "Test2DPotential"]], "ase2sprkkr.potentials.test.test_2D.Test2DPotential": [[1213, 3, 1, "", "__init__"], [1213, 3, 1, "", "test"]], "ase2sprkkr.potentials.test.test_custom_section": [[1215, 2, 1, "", "TestCustomSection"]], "ase2sprkkr.potentials.test.test_custom_section.TestCustomSection": [[1215, 3, 1, "", "__init__"], [1215, 3, 1, "", "assertNone"], [1215, 3, 1, "", "test_custom_section"]], "ase2sprkkr.potentials.test.test_potential": [[1217, 2, 1, "", "TestPotential"]], "ase2sprkkr.potentials.test.test_potential.TestPotential": [[1217, 3, 1, "", "__init__"], [1217, 3, 1, "", "test_2D"], [1217, 3, 1, "", "test_examples"], [1217, 3, 1, "", "test_grammar"], [1217, 3, 1, "", "test_potential"], [1217, 3, 1, "", "test_potential_data"], [1217, 3, 1, "", "test_reset"], [1217, 3, 1, "", "test_sequence"]], "ase2sprkkr.potentials.test.test_structure": [[1219, 2, 1, "", "TestStructure"]], "ase2sprkkr.potentials.test.test_structure.TestStructure": [[1219, 3, 1, "", "__init__"], [1219, 3, 1, "", "test_lattice"]], "ase2sprkkr.sprkkr": [[1221, 0, 0, "-", "atomic_types"], [1223, 0, 0, "-", "atoms_region"], [1225, 0, 0, "-", "build"], [1229, 0, 0, "-", "calculator"], [1232, 0, 0, "-", "configuration"], [1243, 0, 0, "-", "io_data"], [1248, 0, 0, "-", "moments"], [1250, 0, 0, "-", "occupations"], [1252, 0, 0, "-", "radial"], [1256, 0, 0, "-", "radial_meshes"], [1260, 0, 0, "-", "reference_systems"], [1262, 0, 0, "-", "sites"], [1265, 0, 0, "-", "sprkkr_atoms"], [1267, 0, 0, "-", "sprkkr_grammar_types"], [1270, 0, 0, "-", "structure"], [1275, 0, 0, "-", "sysfile"], [1278, 0, 0, "-", "test"]], "ase2sprkkr.sprkkr.atomic_types": [[1222, 2, 1, "", "AtomicType"]], "ase2sprkkr.sprkkr.atomic_types.AtomicType": [[1222, 3, 1, "", "__init__"], [1222, 3, 1, "", "_check_n_electrons"], [1222, 3, 1, "", "_clear_symbol_cache"], [1222, 4, 1, "", "_mendeleev_module"], [1222, 5, 1, "", "atomic_number"], [1222, 5, 1, "", "charge"], [1222, 3, 1, "", "copy"], [1222, 3, 1, "", "for_mesh"], [1222, 3, 1, "", "has_converged_data"], [1222, 3, 1, "", "is_vacuum"], [1222, 5, 1, "", "mendeleev"], [1222, 5, 1, "", "mesh"], [1222, 5, 1, "", "moments"], [1222, 5, 1, "", "n_core"], [1222, 5, 1, "", "n_electrons"], [1222, 5, 1, "", "n_semicore"], [1222, 5, 1, "", "n_valence"], [1222, 5, 1, "", "potential"], [1222, 3, 1, "", "remesh"], [1222, 5, 1, "", "symbol"], [1222, 3, 1, "", "to_atomic_type"], [1222, 3, 1, "", "to_tuple"]], "ase2sprkkr.sprkkr.atoms_region": [[1224, 2, 1, "", "AtomsRegion"]], "ase2sprkkr.sprkkr.atoms_region.AtomsRegion": [[1224, 3, 1, "", "__init__"], [1224, 3, 1, "", "_clear_cache"], [1224, 5, 1, "", "cell"], [1224, 3, 1, "", "create_atoms"], [1224, 3, 1, "", "from_atoms"], [1224, 5, 1, "", "ids"], [1224, 3, 1, "", "only_vacuum_atoms"], [1224, 5, 1, "", "pbc"], [1224, 5, 1, "", "positions"], [1224, 3, 1, "", "set_atoms"], [1224, 5, 1, "", "set_of_ids"], [1224, 3, 1, "", "shared_ids_with"], [1224, 5, 1, "", "slice"], [1224, 5, 1, "", "symbols"]], "ase2sprkkr.sprkkr.build": [[1226, 1, 1, "", "semiinfinite_system"], [1227, 1, 1, "", "stack"], [1228, 1, 1, "", "vacuum_like"]], "ase2sprkkr.sprkkr.calculator": [[1230, 2, 1, "", "FilenameTemplator"], [1231, 2, 1, "", "SPRKKR"]], "ase2sprkkr.sprkkr.calculator.FilenameTemplator": [[1230, 3, 1, "", "__init__"], [1230, 3, 1, "", "_get"], [1230, 4, 1, "", "replacements"]], "ase2sprkkr.sprkkr.calculator.SPRKKR": [[1231, 3, 1, "", "__init__"], [1231, 4, 1, "", "_abc_impl"], [1231, 3, 1, "", "_advance_counter"], [1231, 3, 1, "", "_open_file"], [1231, 5, 1, "", "atoms"], [1231, 3, 1, "", "calculate"], [1231, 3, 1, "", "change_task"], [1231, 3, 1, "", "copy_with_potential"], [1231, 5, 1, "", "empty_spheres"], [1231, 5, 1, "", "executable_dir"], [1231, 5, 1, "", "executable_suffix"], [1231, 3, 1, "", "get"], [1231, 4, 1, "", "implemented_properties"], [1231, 4, 1, "", "input_file"], [1231, 5, 1, "", "input_parameters"], [1231, 3, 1, "", "kkrch"], [1231, 3, 1, "", "kkrgen"], [1231, 3, 1, "", "kkrspec"], [1231, 5, 1, "", "mpi"], [1231, 4, 1, "", "output_file"], [1231, 3, 1, "", "phagen"], [1231, 5, 1, "", "potential"], [1231, 4, 1, "", "potential_file"], [1231, 5, 1, "", "potential_object"], [1231, 5, 1, "", "print_output"], [1231, 3, 1, "", "run"], [1231, 3, 1, "", "run_xband"], [1231, 3, 1, "", "save_input"], [1231, 3, 1, "", "scf"], [1231, 3, 1, "", "set"], [1231, 3, 1, "", "value_or_default"]], "ase2sprkkr.sprkkr.configuration": [[1233, 2, 1, "", "ConfigurationFile"], [1234, 2, 1, "", "ConfigurationFileDefinition"], [1235, 2, 1, "", "ConfigurationSection"], [1236, 2, 1, "", "ConfigurationSectionDefinition"], [1237, 2, 1, "", "ConfigurationSectionTrait"], [1238, 2, 1, "", "ConfigurationValue"], [1239, 2, 1, "", "ConfigurationValueDefinition"], [1240, 2, 1, "", "CustomConfigurationSection"], [1241, 2, 1, "", "CustomConfigurationValue"], [1242, 2, 1, "", "RepeatedConfigurationSection"]], "ase2sprkkr.sprkkr.configuration.ConfigurationFile": [[1233, 3, 1, "", "__init__"], [1233, 3, 1, "", "save_to_file"]], "ase2sprkkr.sprkkr.configuration.ConfigurationFileDefinition": [[1234, 3, 1, "", "__init__"]], "ase2sprkkr.sprkkr.configuration.ConfigurationSection": [[1235, 3, 1, "", "__init__"]], "ase2sprkkr.sprkkr.configuration.ConfigurationSectionDefinition": [[1236, 3, 1, "", "__init__"], [1236, 4, 1, "", "result_class"]], "ase2sprkkr.sprkkr.configuration.ConfigurationSectionTrait": [[1237, 3, 1, "", "__init__"], [1237, 3, 1, "", "_set_from_atoms"], [1237, 3, 1, "", "set_from_atoms"]], "ase2sprkkr.sprkkr.configuration.ConfigurationValue": [[1238, 3, 1, "", "__init__"], [1238, 3, 1, "", "_set_from_atoms"]], "ase2sprkkr.sprkkr.configuration.ConfigurationValueDefinition": [[1239, 3, 1, "", "__init__"], [1239, 5, 1, "", "_set_from_atoms"], [1239, 4, 1, "", "result_class"]], "ase2sprkkr.sprkkr.configuration.CustomConfigurationSection": [[1240, 3, 1, "", "__init__"]], "ase2sprkkr.sprkkr.configuration.CustomConfigurationValue": [[1241, 3, 1, "", "__init__"], [1241, 3, 1, "", "_set_from_atoms"]], "ase2sprkkr.sprkkr.configuration.RepeatedConfigurationSection": [[1242, 3, 1, "", "__init__"]], "ase2sprkkr.sprkkr.io_data": [[1244, 2, 1, "", "BaseIoData"], [1245, 2, 1, "", "ReadIoData"], [1246, 2, 1, "", "WriteIoData"], [1247, 1, 1, "", "unique_mapping"]], "ase2sprkkr.sprkkr.io_data.BaseIoData": [[1244, 3, 1, "", "__init__"]], "ase2sprkkr.sprkkr.io_data.ReadIoData": [[1245, 3, 1, "", "__init__"], [1245, 3, 1, "", "apply_on_atoms"], [1245, 3, 1, "", "update_atoms"]], "ase2sprkkr.sprkkr.io_data.WriteIoData": [[1246, 3, 1, "", "__init__"], [1246, 3, 1, "", "has_converged_data"], [1246, 5, 1, "", "meshes"], [1246, 5, 1, "", "reference_systems"], [1246, 5, 1, "", "sites"], [1246, 5, 1, "", "types"]], "ase2sprkkr.sprkkr.moments": [[1249, 2, 1, "", "Moments"]], "ase2sprkkr.sprkkr.moments.Moments": [[1249, 3, 1, "", "__init__"], [1249, 3, 1, "", "as_tuple"], [1249, 3, 1, "", "copy"]], "ase2sprkkr.sprkkr.occupations": [[1251, 2, 1, "", "Occupation"]], "ase2sprkkr.sprkkr.occupations.Occupation": [[1251, 3, 1, "", "__init__"], [1251, 3, 1, "", "_clear_data"], [1251, 3, 1, "", "_find_key"], [1251, 3, 1, "", "_normalize"], [1251, 4, 1, "", "_occupation"], [1251, 3, 1, "", "_update_atoms"], [1251, 3, 1, "", "add"], [1251, 5, 1, "", "as_dict"], [1251, 3, 1, "", "atomic_type"], [1251, 3, 1, "", "atomic_types"], [1251, 3, 1, "", "check"], [1251, 3, 1, "", "clean"], [1251, 3, 1, "", "copy"], [1251, 3, 1, "", "items"], [1251, 5, 1, "", "mesh"], [1251, 5, 1, "", "primary_atomic_number"], [1251, 5, 1, "", "primary_atomic_type"], [1251, 5, 1, "", "primary_symbol"], [1251, 3, 1, "", "remesh"], [1251, 3, 1, "", "replace_type"], [1251, 3, 1, "", "set"], [1251, 5, 1, "", "site"], [1251, 3, 1, "", "to_occupation"], [1251, 3, 1, "", "to_tuple"], [1251, 5, 1, "", "total_occupation"]], "ase2sprkkr.sprkkr.radial": [[1253, 2, 1, "", "RadialCharge"], [1254, 2, 1, "", "RadialPotential"], [1255, 2, 1, "", "RadialValue"]], "ase2sprkkr.sprkkr.radial.RadialCharge": [[1253, 3, 1, "", "__init__"]], "ase2sprkkr.sprkkr.radial.RadialPotential": [[1254, 3, 1, "", "__init__"], [1254, 3, 1, "", "_clear"], [1254, 5, 1, "", "bt"], [1254, 5, 1, "", "down"], [1254, 3, 1, "", "from_julich"], [1254, 3, 1, "", "from_munchen"], [1254, 5, 1, "", "julich"], [1254, 5, 1, "", "munchen"], [1254, 5, 1, "", "up"], [1254, 5, 1, "", "vt"], [1254, 5, 1, "", "zr"]], "ase2sprkkr.sprkkr.radial.RadialValue": [[1255, 3, 1, "", "__init__"], [1255, 3, 1, "", "copy"], [1255, 3, 1, "", "for_mesh"], [1255, 3, 1, "", "interpolate"], [1255, 5, 1, "", "interpolator"], [1255, 5, 1, "", "mesh"], [1255, 5, 1, "", "raw_value"]], "ase2sprkkr.sprkkr.radial_meshes": [[1257, 2, 1, "", "ExponentialMesh"], [1258, 2, 1, "", "Mesh"], [1259, 1, 1, "", "_clearing_property"]], "ase2sprkkr.sprkkr.radial_meshes.ExponentialMesh": [[1257, 3, 1, "", "__init__"], [1257, 3, 1, "", "_clear"], [1257, 5, 1, "", "coors"], [1257, 3, 1, "", "copy"], [1257, 5, 1, "", "dx"], [1257, 5, 1, "", "jrmt"], [1257, 5, 1, "", "jrws"], [1257, 5, 1, "", "r1"], [1257, 5, 1, "", "rmt"], [1257, 5, 1, "", "rws"], [1257, 3, 1, "", "to_tuple"]], "ase2sprkkr.sprkkr.radial_meshes.Mesh": [[1258, 2, 1, "", "CubicSpline"], [1258, 3, 1, "", "__init__"], [1258, 3, 1, "", "default"], [1258, 3, 1, "", "interpolate"], [1258, 3, 1, "", "interpolator"], [1258, 3, 1, "", "interpolator_for_coors"]], "ase2sprkkr.sprkkr.radial_meshes.Mesh.CubicSpline": [[1258, 3, 1, "", "__call__"], [1258, 3, 1, "", "_validate_bc"], [1258, 3, 1, "", "antiderivative"], [1258, 4, 1, "id6", "axis"], [1258, 4, 1, "id0", "c"], [1258, 3, 1, "", "derivative"], [1258, 4, 1, "", "extrapolate"], [1258, 3, 1, "", "integrate"], [1258, 3, 1, "", "roots"], [1258, 4, 1, "id5", "x"]], "ase2sprkkr.sprkkr.reference_systems": [[1261, 2, 1, "", "ReferenceSystem"]], "ase2sprkkr.sprkkr.reference_systems.ReferenceSystem": [[1261, 3, 1, "", "__init__"], [1261, 3, 1, "", "copy"], [1261, 3, 1, "", "default"], [1261, 3, 1, "", "to_tuple"]], "ase2sprkkr.sprkkr.sites": [[1263, 2, 1, "", "Site"], [1264, 2, 1, "", "SiteType"]], "ase2sprkkr.sprkkr.sites.Site": [[1263, 3, 1, "", "__init__"], [1263, 3, 1, "", "_clear_data"], [1263, 5, 1, "", "atomic_type"], [1263, 5, 1, "", "atomic_types"], [1263, 5, 1, "", "atoms"], [1263, 3, 1, "", "break_symmetry"], [1263, 5, 1, "", "charge"], [1263, 3, 1, "", "copy"], [1263, 3, 1, "", "copy_sites"], [1263, 3, 1, "", "create"], [1263, 5, 1, "", "has_symmetry"], [1263, 5, 1, "", "is_vacuum"], [1263, 5, 1, "", "mesh"], [1263, 5, 1, "", "moments"], [1263, 5, 1, "", "occupation"], [1263, 5, 1, "", "potential"], [1263, 5, 1, "", "primary_atomic_number"], [1263, 5, 1, "", "primary_symbol"], [1263, 5, 1, "", "reference_system"], [1263, 3, 1, "", "remesh"], [1263, 3, 1, "", "reset"], [1263, 5, 1, "", "site_type"]], "ase2sprkkr.sprkkr.sites.SiteType": [[1264, 3, 1, "", "__init__"], [1264, 3, 1, "", "_clear_data"], [1264, 3, 1, "", "_just_one_type"], [1264, 5, 1, "", "atomic_type"], [1264, 5, 1, "", "atomic_types"], [1264, 3, 1, "", "break_symmetry"], [1264, 5, 1, "", "charge"], [1264, 3, 1, "", "copy"], [1264, 5, 1, "", "has_symmetry"], [1264, 3, 1, "", "index"], [1264, 3, 1, "", "is_vacuum"], [1264, 5, 1, "", "mesh"], [1264, 5, 1, "", "moments"], [1264, 5, 1, "", "occupation"], [1264, 5, 1, "", "potential"], [1264, 5, 1, "", "primary_atomic_number"], [1264, 5, 1, "", "primary_symbol"], [1264, 3, 1, "", "register"], [1264, 3, 1, "", "remesh"], [1264, 3, 1, "", "reset"], [1264, 3, 1, "", "unregister"], [1264, 3, 1, "", "update_atoms"]], "ase2sprkkr.sprkkr.sprkkr_atoms": [[1266, 2, 1, "", "SPRKKRAtoms"]], "ase2sprkkr.sprkkr.sprkkr_atoms.SPRKKRAtoms": [[1266, 3, 1, "", "__init__"], [1266, 3, 1, "", "_init"], [1266, 3, 1, "", "_init_sites"], [1266, 3, 1, "", "add_region"], [1266, 3, 1, "", "are_sites_inited"], [1266, 3, 1, "", "cancel_sites_symmetry"], [1266, 3, 1, "", "compute_sites_symmetry"], [1266, 3, 1, "", "copy"], [1266, 3, 1, "", "extend"], [1266, 3, 1, "", "has_potential"], [1266, 5, 1, "", "potential"], [1266, 3, 1, "", "promote_ase_atoms"], [1266, 5, 1, "", "regions"], [1266, 3, 1, "", "remove_region"], [1266, 3, 1, "", "reset_sprkkr_potential"], [1266, 3, 1, "", "set_regions"], [1266, 3, 1, "", "set_sites"], [1266, 5, 1, "", "sites"], [1266, 4, 1, "", "sites_array_name"], [1266, 5, 1, "", "spacegroup_info"], [1266, 5, 1, "", "symmetry"]], "ase2sprkkr.sprkkr.sprkkr_grammar_types": [[1268, 2, 1, "", "AtomicType"], [1269, 2, 1, "", "Site"]], "ase2sprkkr.sprkkr.sprkkr_grammar_types.AtomicType": [[1268, 4, 1, "", "I"], [1268, 3, 1, "", "__init__"], [1268, 4, 1, "", "allowed_types"], [1268, 4, 1, "", "datatype"], [1268, 3, 1, "", "set_from_atoms"], [1268, 4, 1, "", "type"]], "ase2sprkkr.sprkkr.sprkkr_grammar_types.Site": [[1269, 4, 1, "", "I"], [1269, 3, 1, "", "__init__"], [1269, 4, 1, "", "allowed_types"], [1269, 4, 1, "", "datatype"], [1269, 3, 1, "", "set_from_atoms"], [1269, 4, 1, "", "type"]], "ase2sprkkr.sprkkr.structure": [[1271, 2, 1, "", "AtomData"], [1272, 2, 1, "", "LayerData"], [1273, 1, 1, "", "floatjm"], [1274, 1, 1, "", "structure_file_to_atoms"]], "ase2sprkkr.sprkkr.structure.AtomData": [[1271, 3, 1, "", "__init__"], [1271, 3, 1, "", "from_text"], [1271, 3, 1, "", "get_symbol"]], "ase2sprkkr.sprkkr.structure.LayerData": [[1272, 3, 1, "", "__init__"]], "ase2sprkkr.sprkkr.sysfile": [[1276, 1, 1, "", "sysfile_content"], [1277, 1, 1, "", "write_sysfile"]], "ase2sprkkr.sprkkr.test": [[1279, 0, 0, "-", "init_tests"], [1288, 0, 0, "-", "test_arpes"], [1290, 0, 0, "-", "test_build"], [1292, 0, 0, "-", "test_calculator"], [1295, 0, 0, "-", "test_occupation"], [1297, 0, 0, "-", "test_sites"], [1299, 0, 0, "-", "test_sprkkr_atoms"], [1301, 0, 0, "-", "test_sysfile"]], "ase2sprkkr.sprkkr.test.init_tests": [[1280, 2, 1, "", "TestCase"], [1281, 1, 1, "", "arr_testfce"], [1282, 1, 1, "", "assertDictEqual"], [1283, 1, 1, "", "assertListEqual"], [1284, 1, 1, "", "assert_almost_equals"], [1285, 1, 1, "", "assert_equals"], [1286, 2, 1, "", "extdict"], [1287, 1, 1, "", "testfce"]], "ase2sprkkr.sprkkr.test.init_tests.TestCase": [[1280, 3, 1, "", "__init__"], [1280, 4, 1, "", "_calc_args"], [1280, 4, 1, "", "_print_output"], [1280, 3, 1, "", "almost_equal_precision"], [1280, 3, 1, "", "assertAlmostEqual"], [1280, 3, 1, "", "assertAsyncEqual"], [1280, 3, 1, "", "assertAsyncRaises"], [1280, 3, 1, "", "assertEqual"], [1280, 3, 1, "", "assertFalse"], [1280, 3, 1, "", "assertIsNone"], [1280, 3, 1, "", "assertNotEqual"], [1280, 3, 1, "", "assertRaises"], [1280, 3, 1, "", "assertTrue"], [1280, 3, 1, "", "calc_args"], [1280, 3, 1, "", "runAsync"], [1280, 3, 1, "", "run_sprkkr"], [1280, 3, 1, "", "temporary_dir"]], "ase2sprkkr.sprkkr.test.init_tests.extdict": [[1286, 3, 1, "", "__init__"]], "ase2sprkkr.sprkkr.test.test_arpes": [[1289, 2, 1, "", "TestCalculator"]], "ase2sprkkr.sprkkr.test.test_arpes.TestCalculator": [[1289, 3, 1, "", "__init__"], [1289, 3, 1, "", "test_run"]], "ase2sprkkr.sprkkr.test.test_build": [[1291, 2, 1, "", "TestBuild"]], "ase2sprkkr.sprkkr.test.test_build.TestBuild": [[1291, 3, 1, "", "__init__"], [1291, 3, 1, "", "test"]], "ase2sprkkr.sprkkr.test.test_calculator": [[1293, 2, 1, "", "TestCalculator"], [1294, 1, 1, "", "_fast_atoms"]], "ase2sprkkr.sprkkr.test.test_calculator.TestCalculator": [[1293, 3, 1, "", "__init__"], [1293, 3, 1, "", "test_2D"], [1293, 3, 1, "", "test_calculator"], [1293, 3, 1, "", "test_phagen"], [1293, 3, 1, "", "test_run"]], "ase2sprkkr.sprkkr.test.test_occupation": [[1296, 2, 1, "", "test"]], "ase2sprkkr.sprkkr.test.test_occupation.test": [[1296, 3, 1, "", "__init__"], [1296, 3, 1, "", "test"]], "ase2sprkkr.sprkkr.test.test_sites": [[1298, 2, 1, "", "TestSites"]], "ase2sprkkr.sprkkr.test.test_sites.TestSites": [[1298, 3, 1, "", "__init__"], [1298, 3, 1, "", "test_adding"], [1298, 3, 1, "", "test_charge"], [1298, 3, 1, "", "test_occupancy"], [1298, 3, 1, "", "test_potential"], [1298, 3, 1, "", "test_vacuum"]], "ase2sprkkr.sprkkr.test.test_sprkkr_atoms": [[1300, 2, 1, "", "TestSPRKKRAtoms"]], "ase2sprkkr.sprkkr.test.test_sprkkr_atoms.TestSPRKKRAtoms": [[1300, 3, 1, "", "__init__"], [1300, 3, 1, "", "test_atoms"], [1300, 3, 1, "", "test_extend"], [1300, 3, 1, "", "test_occupancy"], [1300, 3, 1, "", "test_symmetry"]], "ase2sprkkr.sprkkr.test.test_sysfile": [[1302, 2, 1, "", "TestSysfile"]], "ase2sprkkr.sprkkr.test.test_sysfile.TestSysfile": [[1302, 3, 1, "", "__init__"], [1302, 3, 1, "", "test"]], "ase2sprkkr.tools": [[1304, 0, 0, "-", "ase2sprkkr"], [1306, 0, 0, "-", "commands"], [1341, 0, 0, "-", "shared"], [1343, 0, 0, "-", "test"]], "ase2sprkkr.tools.ase2sprkkr": [[1305, 1, 1, "", "run"]], "ase2sprkkr.tools.commands": [[1307, 0, 0, "-", "config"], [1311, 0, 0, "-", "examples"], [1314, 0, 0, "-", "info"], [1319, 0, 0, "-", "nomad"], [1329, 0, 0, "-", "plot"], [1332, 0, 0, "-", "run"], [1335, 0, 0, "-", "show_structure"], [1338, 0, 0, "-", "test"]], "ase2sprkkr.tools.commands.config": [[1308, 1, 1, "", "default_content"], [1309, 1, 1, "", "parser"], [1310, 1, 1, "", "run"]], "ase2sprkkr.tools.commands.examples": [[1312, 1, 1, "", "parser"], [1313, 1, 1, "", "run"]], "ase2sprkkr.tools.commands.info": [[1315, 7, 1, "", "default_options"], [1316, 7, 1, "", "description"], [1317, 1, 1, "", "parser"], [1318, 1, 1, "", "run"]], "ase2sprkkr.tools.commands.nomad": [[1320, 1, 1, "", "authenticate"], [1321, 1, 1, "", "gather_files"], [1322, 1, 1, "", "get_token"], [1323, 1, 1, "", "parser"], [1324, 1, 1, "", "retrieve_token"], [1325, 1, 1, "", "run"], [1326, 1, 1, "", "token"], [1327, 1, 1, "", "upload"], [1328, 1, 1, "", "zipp"]], "ase2sprkkr.tools.commands.plot": [[1330, 1, 1, "", "parser"], [1331, 1, 1, "", "run"]], "ase2sprkkr.tools.commands.run": [[1333, 1, 1, "", "parser"], [1334, 1, 1, "", "run"]], "ase2sprkkr.tools.commands.show_structure": [[1336, 1, 1, "", "parser"], [1337, 1, 1, "", "run"]], "ase2sprkkr.tools.commands.test": [[1339, 1, 1, "", "parser"], [1340, 1, 1, "", "run"]], "ase2sprkkr.tools.shared": [[1342, 1, 1, "", "main"]], "ase2sprkkr.tools.test": [[1344, 0, 0, "-", "init_tests"], [1353, 0, 0, "-", "test_tools"]], "ase2sprkkr.tools.test.init_tests": [[1345, 2, 1, "", "TestCase"], [1346, 1, 1, "", "arr_testfce"], [1347, 1, 1, "", "assertDictEqual"], [1348, 1, 1, "", "assertListEqual"], [1349, 1, 1, "", "assert_almost_equals"], [1350, 1, 1, "", "assert_equals"], [1351, 2, 1, "", "extdict"], [1352, 1, 1, "", "testfce"]], "ase2sprkkr.tools.test.init_tests.TestCase": [[1345, 3, 1, "", "__init__"], [1345, 4, 1, "", "_calc_args"], [1345, 4, 1, "", "_print_output"], [1345, 3, 1, "", "almost_equal_precision"], [1345, 3, 1, "", "assertAlmostEqual"], [1345, 3, 1, "", "assertAsyncEqual"], [1345, 3, 1, "", "assertAsyncRaises"], [1345, 3, 1, "", "assertEqual"], [1345, 3, 1, "", "assertFalse"], [1345, 3, 1, "", "assertIsNone"], [1345, 3, 1, "", "assertNotEqual"], [1345, 3, 1, "", "assertRaises"], [1345, 3, 1, "", "assertTrue"], [1345, 3, 1, "", "calc_args"], [1345, 3, 1, "", "runAsync"], [1345, 3, 1, "", "run_sprkkr"], [1345, 3, 1, "", "temporary_dir"]], "ase2sprkkr.tools.test.init_tests.extdict": [[1351, 3, 1, "", "__init__"]], "ase2sprkkr.tools.test.test_tools": [[1354, 2, 1, "", "TestCommon"]], "ase2sprkkr.tools.test.test_tools.TestCommon": [[1354, 3, 1, "", "__init__"], [1354, 3, 1, "", "test"]], "ase2sprkkr.visualise": [[1357, 0, 0, "-", "plot"]], "ase2sprkkr.visualise.plot": [[1358, 2, 1, "", "Multiplot"], [1359, 1, 1, "", "auto_range"], [1360, 1, 1, "", "change_default_kwargs"], [1361, 1, 1, "", "colormesh"], [1362, 1, 1, "", "combine_colormaps"], [1363, 1, 1, "", "combined_colormap"], [1364, 1, 1, "", "create_rc_context"], [1365, 1, 1, "", "finish_plot"], [1366, 1, 1, "", "normalize_rc_params"], [1367, 1, 1, "", "plotting_function"], [1368, 1, 1, "", "set_up_common_plot"], [1369, 1, 1, "", "single_plot"]], "ase2sprkkr.visualise.plot.Multiplot": [[1358, 3, 1, "", "__init__"], [1358, 3, 1, "", "finish"], [1358, 3, 1, "", "get_new_axis"], [1358, 3, 1, "", "plot"]]}, "objtypes": {"0": "py:module", "1": "py:function", "2": "py:class", "3": "py:method", "4": "py:attribute", "5": "py:property", "6": "py:exception", "7": "py:data"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "function", "Python function"], "2": ["py", "class", "Python class"], "3": ["py", "method", "Python method"], "4": ["py", "attribute", "Python attribute"], "5": ["py", "property", "Python property"], "6": ["py", "exception", "Python exception"], "7": ["py", "data", "Python data"]}, "titleterms": {"ase2sprkkr": [0, 1, 57, 122, 125, 126, 219, 251, 252, 253, 279, 381, 692, 693, 722, 850, 934, 935, 1304, 1370, 1372, 1374, 1375, 1379], "useful": [0, 1375, 1377], "link": [0, 1375, 1377], "instal": [0, 1374, 1376, 1379], "packag": [0, 1374, 1375, 1376, 1378], "us": [0, 1374, 1376, 1379], "manag": [0, 1374, 1376], "further": [0, 1374, 1376], "note": [0, 1374, 1376, 1379], "from": [0, 1374, 1376], "git": [0, 1374, 1376], "sourc": [0, 1374, 1376], "code": [0, 1374, 1376], "requir": [0, 341, 351, 1374, 1376], "obtain": [0, 1374, 1376], "without": [0, 1374, 1376], "pip": [0, 1374, 1376], "conda": [0, 1374, 1376], "document": [0, 1374, 1375, 1376], "how": [0, 1374, 1376, 1379], "contribut": [0, 1374, 1376, 1379], "report": [0, 1374, 1376, 1379], "bug": [0, 1374, 1376], "ase": 2, "build": [3, 1225], "aperiodic_tim": 4, "stack": [5, 1227], "io": 6, "read_sprkkr": 7, "write_sprkkr": 8, "pbc": 9, "check_symmetri": 10, "regist": [11, 13], "ase_regist": 12, "symbol": 14, "filename_from_symbol": 15, "pretty_symbol": 16, "test": [17, 424, 677, 694, 907, 1013, 1059, 1102, 1202, 1278, 1296, 1338, 1343], "init_test": [18, 678, 695, 851, 908, 1014, 1060, 1103, 1203, 1279, 1344], "testcas": [19, 679, 696, 852, 909, 1015, 1061, 1104, 1204, 1280, 1345], "arr_testfc": [20, 680, 697, 853, 910, 1016, 1062, 1105, 1205, 1281, 1346], "assertdictequ": [21, 681, 698, 854, 911, 1017, 1063, 1106, 1206, 1282, 1347], "assertlistequ": [22, 682, 699, 855, 912, 1018, 1064, 1107, 1207, 1283, 1348], "assert_almost_equ": [23, 683, 700, 856, 913, 1019, 1065, 1108, 1208, 1284, 1349], "assert_equ": [24, 684, 701, 857, 914, 1020, 1066, 1109, 1209, 1285, 1350], "extdict": [25, 685, 702, 858, 915, 1021, 1067, 1110, 1210, 1286, 1351], "testfc": [26, 686, 704, 860, 916, 1022, 1068, 1111, 1211, 1287, 1352], "test_build": [27, 1290], "testbuild": [28, 1291], "visualis": [29, 1356], "view": 30, "asr": [31, 32, 57, 122, 125, 126, 219, 251, 252, 253, 279, 381], "bader": 33, "print": 34, "bandstructur": 35, "result": [36, 43, 47, 50, 64, 89, 115, 122, 125, 126, 208, 220, 272, 287, 297, 303, 310, 315, 321, 325, 336, 346, 354, 357, 361, 366, 376, 382, 418, 421, 887, 1379], "add_bs_pb": 37, "bs_pbe": 38, "bs_pbe_html": 39, "plot_with_color": 40, "webpanel": [41, 45, 48, 53, 87, 95, 209, 213, 217, 246, 277, 295, 300, 308, 313, 319, 323, 334, 344, 352, 355, 359, 364, 373, 379, 419, 423, 646], "berri": 42, "plot_phas": 44, "borncharg": 46, "bse": [49, 470, 471], "absorpt": 51, "get_kpts_siz": [52, 299, 305, 358, 362, 633], "calcul": [54, 449, 1229, 1379], "get_calcul": 55, "chc": [56, 57], "chcerror": 57, "convexhullrefer": 58, "hyperplan": 59, "intermedi": 60, "leanintermedi": 61, "line": [62, 204], "refer": 63, "_permutecontain": 65, "append_refer": 66, "calculate_intermedi": 67, "chcut_plot": 68, "convex_hul": [69, 88], "convex_hull_plan": 70, "filref": 71, "get_coord": 72, "get_hof": [73, 259], "gscheck": 74, "is_collinear": 75, "is_independ": 76, "mg": 77, "mgsl": 78, "mu_adjust": 79, "orthogon": 80, "projuv": 81, "read_structur": 82, "refs2im": 83, "results2ref": 84, "row2ref": 85, "tuplespermut": 86, "convex_hull_t": 90, "get_reference_energi": 91, "hof": 92, "plot": [93, 216, 1329, 1357], "select_refer": 94, "core": [96, 122, 125, 126], "cli": 97, "append_job": 98, "check_git": 99, "extract_hash_from_fil": 100, "format": [101, 761], "get_config_dir": 102, "get_git_rev_list": 103, "initialize_asr_configuration_dir": 104, "is_asr_initi": 105, "run_command": 106, "command": [107, 1306], "fix_old_fil": 108, "is_results_fil": [109, 173], "materi": [110, 111, 408, 444, 1379], "get_material_from_fold": 112, "get_webpanels_from_materi": 113, "make_panel_figur": 114, "asrresult": 116, "dictencod": 117, "htmlencod": 118, "hackedasrresult": 119, "jsonencod": 120, "metadata": 121, "metadatanotseterror": 122, "objectdescript": 123, "resultencod": 124, "unknownasrresultformat": 125, "unknowndataformat": 126, "webpanelencod": 127, "data_to_dict": 128, "dct_to_result": 129, "find_class_matching_vers": 130, "format_key_description_pair": 131, "get_key_descript": 132, "get_object_matching_obj_id": 133, "get_object_typ": 134, "get_reader_funct": 135, "make_properti": 136, "obj_to_id": 137, "object_description_to_object": 138, "prepare_result": 139, "read_hacked_data": 140, "read_new_data": 141, "read_old_data": 142, "type": [143, 1183, 1379], "atomsfil": 144, "dictstr": 145, "clickify_docstr": 146, "util": [147, 481, 623, 653], "function": 147, "chdir": 148, "dct_to_object": 149, "encode_json": 150, "file_barri": 151, "get_dep_tre": 152, "get_recipe_from_nam": 153, "md5sum": 154, "parse_dict_str": 155, "parse_mod_func": 156, "read_json": 157, "recursive_upd": 158, "singleprec_dict": 159, "unlink": 160, "write_fil": 161, "write_json": 162, "databas": 163, "browser": 164, "rowwrapp": 165, "create_t": 166, "describe_entri": [167, 168], "dict_to_list": 169, "entry_parameter_descript": 170, "extract_recipe_from_filenam": 171, "fig": 172, "layout": 174, "merge_panel": 175, "miscellaneous_sect": 176, "tabl": [177, 791, 1375], "val2str": 178, "check": 179, "clonetre": 180, "duplic": 181, "compar": 182, "filter_uid": 183, "find_duplicate_group": 184, "parse_filter_str": 185, "material_fingerprint": 186, "get_hash_of_atom": 187, "get_uid_of_atom": 188, "todict": [189, 342], "merg": 190, "rmsd": 191, "get_rmsd": 192, "normalize_nonpbc_atom": 193, "update_rmsd": 194, "templat": 195, "totre": 196, "make_folder_dict": 197, "make_folder_tre": 198, "defectform": 199, "check_and_get_general_input": 200, "collect_data": [201, 215, 398, 644], "find_file_in_fold": 202, "intersect": 203, "line_intersect": 205, "plot_formation_and_transit": 206, "deformationpotenti": 207, "dimension": 210, "get_dimtyp": 211, "plot_dimensionality_histogram": 212, "do": [214, 482, 981, 1038, 1039, 1088], "emass": [218, 219], "nogaperror": 219, "calculate_bs_along_emass_vec": 221, "check_soc": 222, "convert_key_to_tupl": 223, "create_columns_fnam": 224, "custom_t": 225, "em": 226, "emband": 227, "evalmodel": 228, "fit": 229, "get_2nd_order_extremum": 230, "get_3rd_order_extremum": 231, "get_bt_k": 232, "get_emass_dict_from_row": 233, "get_extremum_typ": 234, "get_gapskn": 235, "get_nam": 236, "get_rang": 237, "get_vb_cb_indic": 238, "kptsinspher": 239, "make_the_plot": 240, "model": 241, "nonsc_spher": 242, "preliminary_refin": 243, "set_default": 244, "unpack_mass": 245, "widema": 247, "exchang": 248, "get_paramet": 249, "fere": [250, 251, 252, 253], "dbalreadyexistserror": 251, "materialnotfounderror": 252, "parseerror": 253, "count": 254, "create_corrected_db": 255, "elements_from_ref": 256, "formulas_eq": 257, "get_de_alpha": 258, "load_data": 260, "minimize_error": 261, "multiply_formula": 262, "onli": 263, "parse_react": 264, "parse_ref": 265, "safe_get": 266, "select": 267, "singl": 268, "uniqu": 269, "where": 270, "fermisurfac": 271, "add_fermi": 273, "bz_vertic": 274, "find_contour": 275, "plot_fermi": 276, "formalpolar": [278, 279], "atomstooclosetoboundari": 279, "distance_to_non_pbc_boundari": 280, "get_atomic_polarization_phas": 281, "get_dipole_polarization_phas": 282, "get_electronic_polarization_phas": 283, "get_wavefunct": 284, "g": 285, "gapsresult": 286, "vacuumlevelresult": 288, "bz_with_band_extremum": 289, "evacdiff": 290, "gap": 291, "get_1bz_k": 292, "get_gap_info": 293, "vacuumlevel": 294, "gw": 296, "bs_gw": 298, "hse": [301, 306], "mp_interpol": 302, "bs_hse": 304, "hse_spinorbit": 307, "infraredpolariz": 309, "create_plot": [311, 645], "get_phonon_pol": 312, "magnetic_anisotropi": 314, "get_spin_axi": 316, "get_spin_index": 317, "spin_axi": 318, "magstat": 320, "get_magst": 322, "pdo": [324, 330], "calculate_pdo": 326, "get_l_a": 327, "get_ordered_syl_dict": 328, "get_yl_color": 329, "plot_pdo": 331, "plot_pdos_nosoc": 332, "plot_pdos_soc": 333, "phonon": 335, "creat": 337, "mingocorrect": 338, "plot_bandstructur": [339, 349], "plot_phonon": [340, 350], "topckl": 343, "phonopi": 345, "distance_to_sc": 347, "lattice_vector": 348, "piezoelectrictensor": 353, "plasmafrequ": 356, "polariz": [360, 363], "projected_bandstructur": 365, "get_bs_sampl": 367, "get_orbital_ldo": 368, "get_pie_mark": 369, "get_pie_slic": 370, "get_yl_ord": 371, "projected_bs_pb": 372, "push": 374, "raman": [375, 378], "count_deg": 377, "relax": [380, 381, 386], "brokensymmetryerror": 381, "spgatom": 383, "is_relax_don": 384, "mybfg": 385, "set_initial_magnetic_mo": 387, "setinfo": 388, "keyvaluepair": 389, "check_key_valu": 390, "setup": [391, 454], "decor": [392, 747], "apply_substitut": 393, "find_substitut": 394, "generate_structur": 395, "get_p_ab": 396, "defect": 397, "create_folder_structur": 399, "setup_defect": 400, "setup_supercel": 401, "displac": 402, "create_displacements_fold": 403, "displace_atom": 404, "get_all_displac": 405, "get_displacement_fold": 406, "magnet": [407, 634], "param": 409, "scanparam": 410, "strain": 411, "get_relevant_strain": 412, "get_strained_folder_nam": 413, "setup_strain": 414, "symmetr": 415, "symmetrize_atom": 416, "stiff": 417, "structureinfo": 420, "get_reduced_formula": 422, "accept": 425, "test_borncharg": [426, 496, 497], "test_gpaw_berry_get_berry_phases_integr": 427, "test_piezoelectrictensor": [428, 578, 580], "test_piezo_bn": 429, "test_relax": [430, 590], "test_relax_fe_gpaw": 431, "conftest": 432, "pytest_configur": 433, "pytest_sessionstart": 434, "fixtur": 435, "_get_webcont": 436, "asr_tmpdir": 437, "asr_tmpdir_w_param": 438, "duplicates_test_db": 439, "get_webcont": 440, "mockgpaw": 441, "set_asr_test_environ_vari": 442, "test_materi": 443, "mock": 445, "gpaw": 446, "berryphas": 447, "get_berry_phas": 448, "asrcalcul": 450, "doscalcul": 451, "occup": [452, 466, 1162, 1250, 1251], "paramet": [453, 1379], "wavefunct": 455, "hybrid": 456, "eigenvalu": 457, "kpt_descriptor": 458, "kpts2sizeandoffset": 459, "to1bz": 460, "mpi": [461, 1379], "barrier": 462, "broadcast": 463, "new_commun": 464, "world_sum": 465, "fermidirac": 467, "create_occ_calc": 468, "respons": 469, "df": 472, "dielectricfunct": 473, "g0w0": [474, 475], "spinorbit": 476, "soc": 477, "soc_eigenst": 478, "symmetri": [479, 480, 647, 693], "raw_orbital_ldo": 483, "ibz2bz": [484, 485], "progressbar": [486, 487], "xc": [488, 1005], "exx": 489, "tool": [490, 921, 1303, 1371, 1378, 1379], "test_bandstructur": 491, "test_bandstructure_main": 492, "test_berri": [493, 494], "test_berry_nontrivi": 495, "test_bs": [498, 499], "test_cli": 500, "test_asr": 501, "test_asr_find": 502, "test_asr_find_help": 503, "test_asr_find_no_vers": 504, "test_asr_list": 505, "test_asr_results_bandstructur": 506, "test_asr_results_help": 507, "test_asr_run": 508, "test_convex_hul": [509, 510], "test_cor": [511, 513], "recip": 512, "test_recipe_default": 514, "test_recipe_setting_new_default": 515, "test_recipe_setting_overriding_default": 516, "test_core_materi": 517, "test_asr_cli_results_figures_g": 518, "test_core_result": 519, "myresult": 520, "myresultver0": 521, "mywebpanel": 522, "test_read_old_format": 523, "test_reading_older_vers": 524, "test_reading_result": 525, "test_results_object": 526, "test_database_dupl": [527, 528], "test_database_duplicates_filter_magst": 529, "test_database_duplicates_no_dupl": 530, "test_database_fromtre": 531, "folder_tre": 532, "make_tre": 533, "test_database_fromtree_raises_when_missing_uid": 534, "test_database_fromtree_totre": 535, "test_database_fromtree_works_without_write_permiss": 536, "test_database_rmsd": 537, "rattle_atom": 538, "test_database_rmsd_dupl": 539, "test_database_rmsd_duplicates_comparison_kei": 540, "test_database_rmsd_move_one_atom": 541, "test_database_rmsd_none_handl": 542, "test_database_rmsd_not_equ": 543, "test_database_rmsd_rattl": 544, "test_database_rmsd_rot": 545, "test_database_totre": [546, 548], "make_test_db": 547, "test_database_totree_files_and_hard_link": 549, "test_dimension": [550, 551], "test_dimensionality_cli": 552, "test_emass": 553, "_get_all_eigenvalu": 554, "resultstest": 555, "test_emasses_freelectron": 556, "test_emasses_indirect": 557, "test_fixtur": 558, "test_env_vari": 559, "test_formalpolar": [560, 561], "test_formalpolarization_test_atoms_too_close_to_boundari": 562, "test_g": [563, 564], "test_gs_asr_cli_results_figur": 565, "test_gs_integration_gpaw": 566, "test_gw": [567, 568], "test_hs": [569, 570], "test_pdo": [571, 572], "test_pdos_ful": 573, "test_phonon": [574, 575], "test_phonopi": [576, 577], "get_strain_from_atom": 579, "zero_pad_non_pbc_strain_direct": 581, "test_plasmafrequ": [582, 583], "test_polariz": [584, 585], "test_projected_bandstructur": 586, "test_projected_bs_mock": 587, "test_raman": [588, 589], "test_relax_bas": 591, "test_relax_bn_gpaw": 592, "test_relax_emt": 593, "test_relax_emt_fail_broken_symmetri": 594, "test_relax_find_higher_symmetri": 595, "test_relax_magmom": 596, "test_relax_si_gpaw": 597, "test_setinfo": 598, "test_info": 599, "test_info_call_from_cli": 600, "test_info_raises_with_protected_kei": 601, "test_setup_decor": 602, "test_setup_decorate_si": 603, "test_setup_displac": [604, 605], "test_setup_displacements_displace_atom": 606, "test_setup_displacements_get_all_displac": 607, "test_setup_magnet": [608, 609, 612], "test_setup_magnetize_state_input": 610, "test_setup_materi": 611, "test_setup_scanparam": 613, "test_setup_param": 614, "test_setup_strain": [615, 616], "test_setup_strains_get_relevant_strain": 617, "test_setup_symmetr": [618, 619], "test_stiff": 620, "test_stiffness_emt": 621, "test_stiffness_gpaw": 622, "arg": 624, "parse_arg": 625, "calculator_util": 626, "fermi_level": 627, "get_eigenvalu": 628, "gpw2eig": [629, 631], "calc2eig": 630, "kpt": 632, "is_magnet": 635, "magnetic_atom": 636, "refineg": [637, 641], "get_filenam": 638, "get_parstr": 639, "nonselfc": 640, "someth": 642, "calculate_someth": 643, "_atoms2symmetry_gpaw": 648, "atoms2spgcel": 649, "atoms2symmetri": 650, "has_invers": 651, "restrict_spin_projection_2d": 652, "timed_print": 654, "workflow": 655, "bind": [656, 692, 693], "empty_spher": [657, 660, 663], "emptyspheresresult": 658, "add_empty_spher": 659, "empty_spheres_atom": 661, "es_find": 662, "nomad": [664, 665, 1319], "externalentri": 666, "nomadarch": 667, "nomadentri": 668, "map_io_to_nomad": 669, "nomad_api": 670, "nomadapi": 671, "with_token": 672, "spglib": 673, "spacegroupinfo": 674, "possibly_equivalent_sit": 675, "spglib_dataset": 676, "test_es_find": 687, "testesfind": 688, "test_spglib": 689, "testspgilib": 690, "xband": [691, 692, 693], "sphere": 692, "modul": [692, 693, 1229, 1355], "patch_packag": [703, 859], "test_spher": 705, "testspher": 706, "common": [707, 722, 850, 934, 935, 1378], "alternative_typ": 708, "allowed_typ": 709, "normalize_typ": 710, "normalize_type_map": 711, "numpy_typ": 712, "types_altern": 713, "backward_compat": 714, "configur": [715, 716, 940, 1232, 1378], "configuration_contain": [717, 722], "baseconfigurationcontain": 718, "basesect": 719, "configurationcontain": 720, "customsect": 721, "disabledattributeerror": 722, "rootconfigurationcontain": 723, "section": [724, 941, 993, 1130, 1136, 1140, 1144, 1148, 1152, 1156, 1161, 1165, 1170, 1174, 1178, 1182, 1186], "configuration_definit": 725, "basedefinit": 726, "controldefinit": 727, "gather": [728, 736], "ignor": 729, "notallow": 730, "realitemdefinit": 731, "separatordefinit": 732, "stub": 733, "switch": [734, 739], "virtualdefinit": 735, "if_defin": 737, "if_not_defin": 738, "container_definit": 740, "configurationrootdefinit": 741, "containerdefinit": 742, "sectiondefinit": 743, "debug": 744, "add_debug_hook": 745, "debug_pypars": 746, "add_called_class_as_argu": 748, "add_to_signatur": 749, "cached_class_properti": 750, "cached_properti": 751, "class_properti": 752, "maybeclassmethod": 753, "std_cached_properti": 754, "warnings_from_her": 755, "directori": [756, 757], "doc": 758, "process_input_parameters_definit": 759, "verbatim": 760, "format_for_str": 762, "fortran_format": 763, "full_format_for_str": 764, "generated_configuration_definit": 765, "basegeneratedvaluedefinit": 766, "generatedvaluedefinit": 767, "length": 768, "numpyviewdefinit": 769, "grammar": 770, "skiptoregex": 771, "white": 772, "addconditionex": 773, "addparseactionex": 774, "delimitedlist": 775, "end_of_fil": 776, "generate_grammar": 777, "line_end": 778, "optional_line_end": 779, "optional_quot": 780, "replace_whitechar": 781, "separator_grammar": 782, "separator_pattern": 783, "grammar_typ": [784, 836, 850], "arrai": [785, 786], "complex": 787, "sequenc": 788, "setof": 789, "specialcolumn": 790, "complex_numb": 792, "set_of_integ": 793, "set_of_r": 794, "basic": 795, "basebool": 796, "baserealwithunit": 797, "basestr": 798, "basicsepar": 799, "blanksepar": [800, 1053], "bool": 801, "date": [802, 820], "defkeyword": 803, "energi": [804, 821, 996], "fixedpointnumb": 805, "flag": [806, 822], "intbool": 807, "integ": [808, 824], "keyword": 809, "linestr": 810, "number": 811, "objectnumb": 812, "qstring": [813, 826], "real": [814, 827], "realwithunit": 815, "separ": [816, 828, 1056, 1192], "string": [817, 829], "unsign": [818, 830], "boolean": 819, "int_bool": 823, "line_str": 825, "data": 831, "numpyarrai": 832, "prefix": 833, "rawdata": 834, "restofthefil": 835, "grammartyp": 837, "typedgrammartyp": 838, "compare_numpy_valu": 839, "format_for_typ": 840, "recognized_set_typ": [841, 846], "type_from_default_valu": 842, "type_from_typ": 843, "type_from_valu": 844, "mix": 845, "type_from_set_map": 847, "type_from_type_map": 848, "warn": [849, 850, 933, 934, 935], "suspiciousvaluewarn": 850, "lazy_str": 861, "lazystr": 862, "misc": 863, "as_integ": 864, "config_properti": 865, "copy_list": 866, "dict_first_item": 867, "first_non_non": 868, "njit": 869, "numpy_index": 870, "no_output": 871, "nooutput": 872, "option": [873, 879], "baseopt": 874, "customopt": 875, "dangerousvalu": 876, "dummi": 877, "dummystub": 878, "parsing_result": 880, "arraykei": 881, "defdictkei": 882, "dictkei": 883, "ignoredkei": 884, "kei": 885, "repeatedkei": 886, "subkei": 888, "validatekei": 889, "valu": 890, "dict_from_pars": 891, "process_output_read": 892, "asynciofileread": 893, "processoutputread": 894, "readlin": 895, "readline_until": 896, "repeated_configuration_contain": 897, "repeatedconfigurationcontain": 898, "section_adaptor": 899, "mergesectionadaptor": 900, "mergesectiondefinitionadaptor": 901, "sectionadaptor": 902, "subprocess": 903, "_call_funct": 904, "ignore_sign": 905, "in_subprocess": 906, "test_common": 917, "testcommon": [918, 1354], "test_grammar_typ": 919, "testgrammar": 920, "append_id_to_filenam": 922, "main": [923, 951, 954, 957, 960, 963, 966, 969, 972, 1342], "parse_inch": 924, "parse_named_opt": 925, "parse_tuple_funct": 926, "unique_valu": 927, "uniquevaluesmap": 928, "value_definit": 929, "inheritingvaluemodifi": 930, "valuedefinit": 931, "valuemodifi": 932, "datavalidityerror": 934, "datavaliditywarn": 935, "yaml": 936, "indentdump": 937, "config": [938, 1307], "configfiledefinit": 939, "_get_suffix": 942, "find_default_mpi_runn": 943, "get_default_mpi_runn": 944, "load_user_prefer": 945, "mpi_runn": 946, "user_preferences_fil": 947, "exampl": [948, 1311, 1372], "a1_fe_scf_simpl": [949, 1372, 1373], "fe": [950, 953, 956], "a2_fe_scf_input_modif": [952, 1372, 1373], "a3_fe_do": [955, 1372, 1373], "a4_cpa_exampl": [958, 1372, 1373], "ni_doped_sto": 959, "a5_al_eo": [961, 1372, 1373], "al": 962, "a6_cu_msspec": [964, 1372, 1373], "cu": 965, "a7_srtio3_msspec": [967, 1372, 1373], "sto": 968, "a8_arpes_and_plot": [970, 1372, 1373], "arp": [971, 975, 1078], "input_paramet": [973, 976, 978, 980, 982, 984, 986, 988, 990, 992, 1006, 1378, 1379], "definit": [974, 1029, 1127], "bsfek": 977, "bsfkk": 979, "gilbert": 983, "jxc": 985, "marp": 987, "phagen": 989, "scf": [991, 998, 1091], "control": 994, "cpa": 995, "mode": 997, "site": [999, 1179, 1262, 1263, 1269], "strconst": 1000, "task": [1001, 1379], "tau": 1002, "tausect": 1003, "_nktab_valu": 1004, "inputparamet": [1007, 1379], "inputsect": 1008, "input_parameters_definit": 1009, "inputparametersdefinit": 1010, "inputsectiondefinit": 1011, "inputvaluedefinit": 1012, "test_definit": 1023, "testdefinit": 1024, "test_input_paramet": 1025, "testinputparamet": 1026, "ar": 1027, "output_fil": [1028, 1047], "arithmet": [1030, 1048], "commonoutputfil": [1031, 1049], "outputfil": [1032, 1050], "unknowndatavalu": [1033, 1051], "bsf": [1034, 1081], "bsfdefinit": 1035, "bsfoutputfil": 1036, "create_definit": [1037, 1042, 1046], "dosdefinit": 1040, "dosoutputfil": 1041, "spc": 1043, "arpesdefinit": 1044, "arpesoutputfil": 1045, "output_files_definit": 1052, "outputfiledefinit": 1054, "outputfilevaluedefinit": 1055, "create_output_file_definit": 1057, "output_file_head": 1058, "test_fil": 1069, "testoutput": [1070, 1113], "output": [1071, 1378], "output_definit": 1072, "outputnonamevaluedefinit": 1073, "outputsectiondefinit": 1074, "outputvaluedefinit": 1075, "outputvalueequaldefinit": 1076, "reader": 1077, "arpesprocess": 1079, "arpesresult": 1080, "bsfprocess": 1082, "bsfresult": 1083, "default": 1084, "defaultoutputread": 1085, "defaultprocess": 1086, "defaultresult": 1087, "dosprocess": 1089, "dosresult": 1090, "realorstar": 1092, "scfoutputread": 1093, "scfprocess": 1094, "scfresult": 1095, "atomic_types_definit": 1096, "sprkkr_output_read": 1097, "sprkkroutputread": 1098, "task_result": 1099, "kkrprocess": 1100, "taskresult": 1101, "test_output": 1112, "physic": 1114, "lattice_data": 1115, "latticedata": 1116, "pearson": 1117, "international_numbers_to_ap": 1118, "winger_seitz_radii": [1119, 1120], "potenti": [1121, 1128, 1166, 1200, 1201, 1378, 1379], "custom_potential_sect": 1122, "custompotentialsect": 1123, "custompotentialsectiondefinit": 1124, "customsectiontoken": 1125, "sectionstr": 1126, "potential_definit": [1129, 1187], "_section": 1131, "charg": 1132, "chargesect": 1133, "chargesectiondefinit": 1134, "chargessect": 1135, "charge_mo": 1137, "chargemomentssect": 1138, "chargemomentssectiondefinit": 1139, "global_system_paramet": 1141, "globalsystemparamet": 1142, "globalsystemparameterdefinit": 1143, "host_madelung_potenti": 1145, "hostmadelungpotentialsect": 1146, "hostmadelungpotentialsectiondefinit": 1147, "lattic": 1149, "latticesect": 1150, "latticesectiondefinit": 1151, "mesh_inform": 1153, "meshinformationsect": 1154, "meshinformationsectiondefinit": 1155, "moment": [1157, 1248, 1249], "momentsect": 1158, "momentssect": 1159, "momentssectiondefinit": 1160, "occupationsect": 1163, "occupationsectiondefinit": 1164, "potentialsect": [1167, 1196], "potentialsectiondefinit": 1168, "potentialssect": 1169, "reference_system": [1171, 1260], "referencesystemsect": 1172, "referencesystemsectiondefinit": 1173, "scf_info": 1175, "scfinfosect": 1176, "scfinfosectiondefinit": 1177, "sitessect": 1180, "sitessectiondefinit": 1181, "typessect": 1184, "typessectiondefinit": 1185, "asearraysectiondefinit": 1188, "potsectiondefinit": 1189, "potvaluedefinit": 1190, "potentialdefinit": 1191, "potential_sect": 1193, "asearraysect": 1194, "atomictypepotentialsect": 1195, "potentialsectiontrait": 1197, "repeatedpotentialsect": 1198, "uniquelistsect": 1199, "test_2d": 1212, "test2dpotenti": 1213, "test_custom_sect": 1214, "testcustomsect": 1215, "test_potenti": 1216, "testpotenti": 1217, "test_structur": 1218, "teststructur": 1219, "sprkkr": [1220, 1231, 1378], "atomic_typ": 1221, "atomictyp": [1222, 1268], "atoms_region": 1223, "atomsregion": 1224, "semiinfinite_system": 1226, "vacuum_lik": 1228, "filenametempl": 1230, "configurationfil": 1233, "configurationfiledefinit": 1234, "configurationsect": 1235, "configurationsectiondefinit": 1236, "configurationsectiontrait": 1237, "configurationvalu": 1238, "configurationvaluedefinit": 1239, "customconfigurationsect": 1240, "customconfigurationvalu": 1241, "repeatedconfigurationsect": 1242, "io_data": 1243, "baseiodata": 1244, "readiodata": 1245, "writeiodata": 1246, "unique_map": 1247, "radial": 1252, "radialcharg": 1253, "radialpotenti": 1254, "radialvalu": 1255, "radial_mesh": 1256, "exponentialmesh": 1257, "mesh": 1258, "_clearing_properti": 1259, "referencesystem": 1261, "sitetyp": 1264, "sprkkr_atom": 1265, "sprkkratom": 1266, "sprkkr_grammar_typ": 1267, "structur": [1270, 1378], "atomdata": 1271, "layerdata": 1272, "floatjm": 1273, "structure_file_to_atom": 1274, "sysfil": 1275, "sysfile_cont": 1276, "todo": 1276, "write_sysfil": 1277, "test_arp": 1288, "testcalcul": [1289, 1293], "test_calcul": 1292, "_fast_atom": 1294, "test_occup": 1295, "test_sit": 1297, "testsit": 1298, "test_sprkkr_atom": 1299, "testsprkkratom": 1300, "test_sysfil": 1301, "testsysfil": 1302, "run": [1305, 1310, 1313, 1318, 1325, 1331, 1332, 1334, 1337, 1340, 1378, 1379], "default_cont": 1308, "parser": [1309, 1312, 1317, 1323, 1330, 1333, 1336, 1339], "info": 1314, "default_opt": 1315, "descript": 1316, "authent": 1320, "gather_fil": 1321, "get_token": 1322, "retrieve_token": 1324, "token": 1326, "upload": 1327, "zipp": 1328, "show_structur": 1335, "share": 1341, "test_tool": 1353, "version": [1355, 1371], "multiplot": 1358, "auto_rang": 1359, "change_default_kwarg": 1360, "colormesh": 1361, "combine_colormap": 1362, "combined_colormap": 1363, "create_rc_context": 1364, "finish_plot": 1365, "normalize_rc_param": 1366, "plotting_funct": 1367, "set_up_common_plot": 1368, "single_plot": 1369, "changelog": 1371, "3": 1371, "1": 1371, "0": 1371, "beta": 1371, "2": 1371, "user": 1371, "interfac": 1371, "intern": 1371, "refactor": 1371, "4": 1371, "beta2": 1371, "beta1": 1371, "architectur": 1371, "chang": 1371, "7": 1371, "6": 1371, "some": 1372, "more": [1374, 1379], "about": [1374, 1379], "softwar": 1375, "content": 1375, "class": 1375, "indic": 1375, "ase2spr": 1378, "kkr": 1378, "": 1378, "philosophi": 1378, "develop": 1378, "The": 1378, "base": 1378, "read": [1378, 1379], "file": [1378, 1379], "write": 1378, "program": 1378, "usag": 1379, "comput": 1379, "bulk": 1379, "defin": 1379, "properti": 1379, "set": 1379, "input": 1379, "work": 1379, "object": 1379, "subsequ": 1379, "gener": 1379, "A": 1379, "atom": 1379, "bundl": 1379, "error": 1379}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.todo": 2, "sphinx.ext.viewcode": 1, "sphinx": 57}, "alltitles": {"webpanel": [[209, "webpanel"], [217, "webpanel"], [213, "webpanel"], [277, "webpanel"], [246, "webpanel"], [48, "webpanel"], [53, "webpanel"], [41, "webpanel"], [45, "webpanel"], [319, "webpanel"], [308, "webpanel"], [300, "webpanel"], [323, "webpanel"], [313, "webpanel"], [295, "webpanel"], [95, "webpanel"], [87, "webpanel"], [646, "webpanel"], [419, "webpanel"], [423, "webpanel"], [379, "webpanel"], [373, "webpanel"], [334, "webpanel"], [344, "webpanel"], [352, "webpanel"], [359, "webpanel"], [355, "webpanel"], [364, "webpanel"]], "em": [[226, "em"]], "dimensionality": [[210, "dimensionality"]], "Result": [[208, "result"], [220, "result"], [272, "result"], [47, "result"], [43, "result"], [64, "result"], [50, "result"], [36, "result"], [297, "result"], [303, "result"], [287, "result"], [310, "result"], [325, "result"], [315, "result"], [321, "result"], [89, "result"], [887, "result"], [421, "result"], [418, "result"], [382, "result"], [376, "result"], [354, "result"], [366, "result"], [357, "result"], [336, "result"], [346, "result"], [361, "result"]], "fit": [[229, "fit"]], "create_columns_fnames": [[224, "create-columns-fnames"]], "get_3rd_order_extremum": [[231, "get-3rd-order-extremum"]], "deformationpotentials": [[207, "deformationpotentials"]], "preliminary_refine": [[243, "preliminary-refine"]], "custom_table": [[225, "custom-table"]], "dos": [[214, "dos"], [1088, "dos"], [981, "dos"], [1038, "dos"], [482, "dos"]], "get_vb_cb_indices": [[238, "get-vb-cb-indices"]], "check_soc": [[222, "check-soc"]], "plot": [[216, "plot"], [1329, "plot"], [1357, "plot"], [93, "plot"]], "get_emass_dict_from_row": [[233, "get-emass-dict-from-row"]], "embands": [[227, "embands"]], "emasses": [[218, "emasses"]], "get_name": [[236, "get-name"]], "get_extremum_type": [[234, "get-extremum-type"]], "line_intersection": [[205, "line-intersection"]], "plot_formation_and_transitions": [[206, "plot-formation-and-transitions"]], "ase2sprkkr.asr.emasses.NoGapError": [[219, "ase2sprkkr-asr-emasses-nogaperror"]], "evalmodel": [[228, "evalmodel"]], "get_2nd_order_extremum": [[230, "get-2nd-order-extremum"]], "model": [[241, "model"]], "unpack_masses": [[245, "unpack-masses"]], "get_bt_ks": [[232, "get-bt-ks"]], "get_range": [[237, "get-range"]], "make_the_plots": [[240, "make-the-plots"]], "nonsc_sphere": [[242, "nonsc-sphere"]], "calculate_bs_along_emass_vecs": [[221, "calculate-bs-along-emass-vecs"]], "plot_dimensionality_histogram": [[212, "plot-dimensionality-histogram"]], "get_dimtypes": [[211, "get-dimtypes"]], "convert_key_to_tuple": [[223, "convert-key-to-tuple"]], "collect_data": [[215, "collect-data"], [201, "collect-data"], [644, "collect-data"], [398, "collect-data"]], "get_gapskn": [[235, "get-gapskn"]], "kptsinsphere": [[239, "kptsinsphere"]], "set_default": [[244, "set-default"]], "count": [[254, "count"]], "ase2sprkkr.asr.fere.ParseError": [[253, "ase2sprkkr-asr-fere-parseerror"]], "fere": [[250, "fere"]], "get_hof": [[259, "get-hof"], [73, "get-hof"]], "safe_get": [[266, "safe-get"]], "multiply_formula": [[262, "multiply-formula"]], "get_wavefunctions": [[284, "get-wavefunctions"]], "parse_reactions": [[264, "parse-reactions"]], "minimize_error": [[261, "minimize-error"]], "ase2sprkkr.asr.fere.DBAlreadyExistsError": [[251, "ase2sprkkr-asr-fere-dbalreadyexistserror"]], "load_data": [[260, "load-data"]], "ase2sprkkr.asr.formalpolarization.AtomsTooCloseToBoundary": [[279, "ase2sprkkr-asr-formalpolarization-atomstooclosetoboundary"]], "formulas_eq": [[257, "formulas-eq"]], "ase2sprkkr.asr.fere.MaterialNotFoundError": [[252, "ase2sprkkr-asr-fere-materialnotfounderror"]], "exchange": [[248, "exchange"]], "elements_from_refs": [[256, "elements-from-refs"]], "parse_refs": [[265, "parse-refs"]], "get_electronic_polarization_phase": [[283, "get-electronic-polarization-phase"]], "distance_to_non_pbc_boundary": [[280, "distance-to-non-pbc-boundary"]], "get_dE_alpha": [[258, "get-de-alpha"]], "formalpolarization": [[278, "formalpolarization"]], "create_corrected_db": [[255, "create-corrected-db"]], "bz_vertices": [[274, "bz-vertices"]], "find_contours": [[275, "find-contours"]], "fermisurface": [[271, "fermisurface"]], "get_dipole_polarization_phase": [[282, "get-dipole-polarization-phase"]], "unique": [[269, "unique"]], "where": [[270, "where"]], "plot_fermi": [[276, "plot-fermi"]], "GapsResult": [[286, "gapsresult"]], "single": [[268, "single"]], "select": [[267, "select"]], "add_fermi": [[273, "add-fermi"]], "get_parameters": [[249, "get-parameters"]], "get_atomic_polarization_phase": [[281, "get-atomic-polarization-phase"]], "gs": [[285, "gs"]], "wideMAE": [[247, "widemae"]], "only": [[263, "only"]], "LeanIntermediate": [[61, "leanintermediate"]], "is_collinear": [[75, "is-collinear"]], "calculators": [[54, "calculators"]], "chcut_plot": [[68, "chcut-plot"]], "absorption": [[51, "absorption"]], "Intermediate": [[60, "intermediate"]], "filrefs": [[71, "filrefs"]], "Reference": [[63, "reference"]], "chc": [[56, "chc"]], "bse": [[49, "bse"], [470, "bse"]], "berry": [[42, "berry"]], "ase2sprkkr.asr.chc.CHCError": [[57, "ase2sprkkr-asr-chc-chcerror"]], "convex_hull_planes": [[70, "convex-hull-planes"]], "mu_adjustment": [[79, "mu-adjustment"]], "Hyperplane": [[59, "hyperplane"]], "get_calculator": [[55, "get-calculator"]], "calculate_intermediates": [[67, "calculate-intermediates"]], "get_kpts_size": [[52, "get-kpts-size"], [299, "get-kpts-size"], [305, "get-kpts-size"], [633, "get-kpts-size"], [362, "get-kpts-size"], [358, "get-kpts-size"]], "orthogonalize": [[80, "orthogonalize"]], "gscheck": [[74, "gscheck"]], "_permutecontain": [[65, "permutecontain"]], "borncharges": [[46, "borncharges"]], "Line": [[62, "line"]], "append_references": [[66, "append-references"]], "plot_phases": [[44, "plot-phases"]], "ConvexHullReference": [[58, "convexhullreference"]], "projuv": [[81, "projuv"]], "get_coords": [[72, "get-coords"]], "mgs": [[77, "mgs"]], "convex_hull": [[69, "convex-hull"], [88, "convex-hull"]], "is_independent": [[76, "is-independent"]], "mgsls": [[78, "mgsls"]], "assert_equals": [[24, "assert-equals"], [1350, "assert-equals"], [1285, "assert-equals"], [1109, "assert-equals"], [1066, "assert-equals"], [1209, "assert-equals"], [1020, "assert-equals"], [914, "assert-equals"], [857, "assert-equals"], [684, "assert-equals"], [701, "assert-equals"]], "test_build": [[27, "test-build"], [1290, "test-build"]], "bader": [[33, "bader"]], "TestCase": [[19, "testcase"], [1345, "testcase"], [1280, "testcase"], [1104, "testcase"], [1204, "testcase"], [1061, "testcase"], [1015, "testcase"], [909, "testcase"], [852, "testcase"], [679, "testcase"], [696, "testcase"]], "extdict": [[25, "extdict"], [1351, "extdict"], [1286, "extdict"], [1110, "extdict"], [1067, "extdict"], [1210, "extdict"], [1021, "extdict"], [915, "extdict"], [858, "extdict"], [685, "extdict"], [702, "extdict"]], "view": [[30, "view"]], "print": [[34, "print"]], "build": [[3, "build"], [1225, "build"]], "ase": [[2, "ase"]], "assertDictEqual": [[21, "assertdictequal"], [1347, "assertdictequal"], [1282, "assertdictequal"], [1106, "assertdictequal"], [1206, "assertdictequal"], [1063, "assertdictequal"], [1017, "assertdictequal"], [911, "assertdictequal"], [854, "assertdictequal"], [681, "assertdictequal"], [698, "assertdictequal"]], "bandstructure": [[35, "bandstructure"]], "ASE2SPRKKR": [[0, "ase2sprkkr"]], "Usefull links": [[0, "usefull-links"], [1375, "usefull-links"], [1377, "usefull-links"]], "Installation of the package using package managers": [[0, "installation-of-the-package-using-package-managers"], [1374, "installation-of-the-package-using-package-managers"], [1376, "installation-of-the-package-using-package-managers"]], "Further notes": [[0, "further-notes"], [1374, "further-notes"], [1376, "further-notes"]], "Install the packages from GIT (and/or source codes)": [[0, "install-the-packages-from-git-and-or-source-codes"], [1374, "install-the-packages-from-git-and-or-source-codes"], [1376, "install-the-packages-from-git-and-or-source-codes"]], "Requirements": [[0, "requirements"], [1374, "requirements"], [1376, "requirements"]], "Obtaining the package using GIT": [[0, "obtaining-the-package-using-git"], [1374, "obtaining-the-package-using-git"], [1376, "obtaining-the-package-using-git"]], "Using the package (without installing the pip/conda packages)": [[0, "using-the-package-without-installing-the-pip-conda-packages"], [1374, "using-the-package-without-installing-the-pip-conda-packages"], [1376, "using-the-package-without-installing-the-pip-conda-packages"]], "Documentation of the package": [[0, "documentation-of-the-package"], [1374, "documentation-of-the-package"], [1376, "documentation-of-the-package"]], "How to contribute or to report a bug": [[0, "how-to-contribute-or-to-report-a-bug"], [1374, "how-to-contribute-or-to-report-a-bug"], [1376, "how-to-contribute-or-to-report-a-bug"]], "testfce": [[26, "testfce"], [1352, "testfce"], [1287, "testfce"], [1111, "testfce"], [1068, "testfce"], [1211, "testfce"], [1022, "testfce"], [916, "testfce"], [860, "testfce"], [686, "testfce"], [704, "testfce"]], "assertListEqual": [[22, "assertlistequal"], [1348, "assertlistequal"], [1283, "assertlistequal"], [1107, "assertlistequal"], [1207, "assertlistequal"], [1064, "assertlistequal"], [1018, "assertlistequal"], [912, "assertlistequal"], [855, "assertlistequal"], [682, "assertlistequal"], [699, "assertlistequal"]], "filename_from_symbols": [[15, "filename-from-symbols"]], "ase2sprkkr": [[1, "ase2sprkkr"], [1304, "ase2sprkkr"], [1370, "ase2sprkkr"]], "bs_pbe_html": [[39, "bs-pbe-html"]], "ase_register": [[12, "ase-register"]], "asr": [[31, "asr"], [32, "asr"]], "io": [[6, "io"]], "visualise": [[29, "visualise"], [1356, "visualise"]], "check_symmetry": [[10, "check-symmetry"]], "symbols": [[14, "symbols"]], "stack": [[5, "stack"], [1227, "stack"]], "assert_almost_equals": [[23, "assert-almost-equals"], [1349, "assert-almost-equals"], [1284, "assert-almost-equals"], [1108, "assert-almost-equals"], [1208, "assert-almost-equals"], [1065, "assert-almost-equals"], [1019, "assert-almost-equals"], [913, "assert-almost-equals"], [856, "assert-almost-equals"], [683, "assert-almost-equals"], [700, "assert-almost-equals"]], "aperiodic_times": [[4, "aperiodic-times"]], "TestBuild": [[28, "testbuild"], [1291, "testbuild"]], "add_bs_pbe": [[37, "add-bs-pbe"]], "init_tests": [[18, "init-tests"], [1344, "init-tests"], [1279, "init-tests"], [1103, "init-tests"], [1203, "init-tests"], [1060, "init-tests"], [1014, "init-tests"], [908, "init-tests"], [851, "init-tests"], [695, "init-tests"], [678, "init-tests"]], "pbc": [[9, "pbc"]], "arr_testfce": [[20, "arr-testfce"], [1346, "arr-testfce"], [1281, "arr-testfce"], [1105, "arr-testfce"], [1205, "arr-testfce"], [1062, "arr-testfce"], [1016, "arr-testfce"], [910, "arr-testfce"], [853, "arr-testfce"], [680, "arr-testfce"], [697, "arr-testfce"]], "bs_pbe": [[38, "bs-pbe"]], "test": [[17, "test"], [1338, "test"], [1343, "test"], [1296, "test"], [1278, "test"], [1102, "test"], [1202, "test"], [1059, "test"], [1013, "test"], [907, "test"], [424, "test"]], "read_sprkkr": [[7, "read-sprkkr"]], "pretty_symbols": [[16, "pretty-symbols"]], "register": [[13, "register"], [11, "register"]], "write_sprkkr": [[8, "write-sprkkr"]], "plot_with_colors": [[40, "plot-with-colors"]], "get_object_types": [[134, "get-object-types"]], "prepare_result": [[139, "prepare-result"]], "clickify_docstring": [[146, "clickify-docstring"]], "get_key_descriptions": [[132, "get-key-descriptions"]], "recursive_update": [[158, "recursive-update"]], "database": [[163, "database"]], "ObjectDescription": [[123, "objectdescription"]], "read_old_data": [[142, "read-old-data"]], "ase2sprkkr.asr.core.results.UnknownASRResultFormat": [[125, "ase2sprkkr-asr-core-results-unknownasrresultformat"]], "ResultEncoder": [[124, "resultencoder"]], "format_key_description_pair": [[131, "format-key-description-pair"]], "get_recipe_from_name": [[153, "get-recipe-from-name"]], "find_class_matching_version": [[130, "find-class-matching-version"]], "md5sum": [[154, "md5sum"]], "ase2sprkkr.asr.core.results.UnknownDataFormat": [[126, "ase2sprkkr-asr-core-results-unknowndataformat"]], "object_description_to_object": [[138, "object-description-to-object"]], "obj_to_id": [[137, "obj-to-id"]], "make_property": [[136, "make-property"]], "WebPanelEncoder": [[127, "webpanelencoder"]], "encode_json": [[150, "encode-json"]], "read_json": [[157, "read-json"]], "dct_to_result": [[129, "dct-to-result"]], "unlink": [[160, "unlink"]], "write_json": [[162, "write-json"]], "get_object_matching_obj_id": [[133, "get-object-matching-obj-id"]], "data_to_dict": [[128, "data-to-dict"]], "read_new_data": [[141, "read-new-data"]], "read_hacked_data": [[140, "read-hacked-data"]], "get_reader_function": [[135, "get-reader-function"]], "DictStr": [[145, "dictstr"]], "utils": [[147, "utils"], [623, "utils"], [653, "utils"]], "Functions": [[147, "functions"]], "parse_mod_func": [[156, "parse-mod-func"]], "dct_to_object": [[149, "dct-to-object"]], "types": [[143, "types"], [1183, "types"]], "write_file": [[161, "write-file"]], "get_dep_tree": [[152, "get-dep-tree"]], "parse_dict_string": [[155, "parse-dict-string"]], "file_barrier": [[151, "file-barrier"]], "singleprec_dict": [[159, "singleprec-dict"]], "chdir": [[148, "chdir"]], "AtomsFile": [[144, "atomsfile"]], "layout": [[174, "layout"]], "describe_entries": [[167, "describe-entries"]], "merge_panels": [[175, "merge-panels"]], "fig": [[172, "fig"]], "material_fingerprint": [[186, "material-fingerprint"]], "templates": [[195, "templates"]], "compare": [[182, "compare"]], "duplicates": [[181, "duplicates"]], "rmsd": [[191, "rmsd"]], "check_and_get_general_inputs": [[200, "check-and-get-general-inputs"]], "get_hash_of_atoms": [[187, "get-hash-of-atoms"]], "describe_entry": [[168, "describe-entry"]], "todict": [[189, "todict"], [342, "todict"]], "make_folder_tree": [[198, "make-folder-tree"]], "create_table": [[166, "create-table"]], "totree": [[196, "totree"]], "intersection": [[203, "intersection"]], "normalize_nonpbc_atoms": [[193, "normalize-nonpbc-atoms"]], "filter_uids": [[183, "filter-uids"]], "RowWrapper": [[165, "rowwrapper"]], "browser": [[164, "browser"]], "get_uid_of_atoms": [[188, "get-uid-of-atoms"]], "merge": [[190, "merge"]], "check": [[179, "check"]], "make_folder_dict": [[197, "make-folder-dict"]], "miscellaneous_section": [[176, "miscellaneous-section"]], "defectformation": [[199, "defectformation"]], "get_rmsd": [[192, "get-rmsd"]], "update_rmsd": [[194, "update-rmsd"]], "find_duplicate_group": [[184, "find-duplicate-group"]], "line": [[204, "line"]], "table": [[177, "table"]], "clonetree": [[180, "clonetree"]], "find_file_in_folder": [[202, "find-file-in-folder"]], "extract_recipe_from_filename": [[171, "extract-recipe-from-filename"]], "entry_parameter_description": [[170, "entry-parameter-description"]], "val2str": [[178, "val2str"]], "is_results_file": [[173, "is-results-file"], [109, "is-results-file"]], "parse_filter_string": [[185, "parse-filter-string"]], "dict_to_list": [[169, "dict-to-list"]], "run": [[1313, "run"], [1331, "run"], [1337, "run"], [1318, "run"], [1340, "run"], [1332, "run"], [1325, "run"], [1334, "run"], [1305, "run"], [1310, "run"]], "parser": [[1323, "parser"], [1339, "parser"], [1330, "parser"], [1312, "parser"], [1336, "parser"], [1333, "parser"], [1317, "parser"], [1309, "parser"]], "token": [[1326, "token"]], "shared": [[1341, "shared"]], "show_structure": [[1335, "show-structure"]], "authenticate": [[1320, "authenticate"]], "retrieve_token": [[1324, "retrieve-token"]], "get_token": [[1322, "get-token"]], "description": [[1316, "description"]], "main": [[1342, "main"], [969, "main"], [957, "main"], [966, "main"], [963, "main"], [960, "main"], [972, "main"], [954, "main"], [951, "main"], [923, "main"]], "gather_files": [[1321, "gather-files"]], "default_options": [[1315, "default-options"]], "zipp": [[1328, "zipp"]], "nomad": [[1319, "nomad"], [665, "nomad"], [664, "nomad"]], "upload": [[1327, "upload"]], "info": [[1314, "info"]], "get_l_a": [[327, "get-l-a"]], "calculate_pdos": [[326, "calculate-pdos"]], "get_spin_axis": [[316, "get-spin-axis"]], "evacdiff": [[290, "evacdiff"]], "gw": [[296, "gw"]], "pdos": [[324, "pdos"], [330, "pdos"]], "get_gap_info": [[293, "get-gap-info"]], "bs_gw": [[298, "bs-gw"]], "hse": [[306, "hse"], [301, "hse"]], "infraredpolarizability": [[309, "infraredpolarizability"]], "magnetic_anisotropy": [[314, "magnetic-anisotropy"]], "spin_axis": [[318, "spin-axis"]], "VacuumLevelResults": [[288, "vacuumlevelresults"]], "get_1bz_k": [[292, "get-1bz-k"]], "MP_interpolate": [[302, "mp-interpolate"]], "bs_hse": [[304, "bs-hse"]], "create_plot": [[311, "create-plot"], [645, "create-plot"]], "gaps": [[291, "gaps"]], "magstate": [[320, "magstate"]], "vacuumlevels": [[294, "vacuumlevels"]], "get_phonon_pol": [[312, "get-phonon-pol"]], "bz_with_band_extremums": [[289, "bz-with-band-extremums"]], "hse_spinorbit": [[307, "hse-spinorbit"]], "get_magstate": [[322, "get-magstate"]], "get_spin_index": [[317, "get-spin-index"]], "config": [[1307, "config"], [938, "config"]], "_fast_atoms": [[1294, "fast-atoms"]], "test_sysfile": [[1301, "test-sysfile"]], "test_occupation": [[1295, "test-occupation"]], "default_content": [[1308, "default-content"]], "AtomData": [[1271, "atomdata"]], "commands": [[1306, "commands"]], "tools": [[1303, "tools"], [1378, "tools"], [921, "tools"], [490, "tools"]], "sysfile": [[1275, "sysfile"]], "examples": [[1311, "examples"], [948, "examples"]], "LayerData": [[1272, "layerdata"]], "test_sprkkr_atoms": [[1299, "test-sprkkr-atoms"]], "TestCalculator": [[1289, "testcalculator"], [1293, "testcalculator"]], "TestSites": [[1298, "testsites"]], "floatjm": [[1273, "floatjm"]], "write_sysfile": [[1277, "write-sysfile"]], "TestSPRKKRAtoms": [[1300, "testsprkkratoms"]], "sysfile_content": [[1276, "sysfile-content"]], "Todo": [[1276, "id1"]], "test_arpes": [[1288, "test-arpes"]], "TestSysfile": [[1302, "testsysfile"]], "test_sites": [[1297, "test-sites"]], "test_calculator": [[1292, "test-calculator"]], "structure_file_to_atoms": [[1274, "structure-file-to-atoms"]], "colormesh": [[1361, "colormesh"]], "test_tools": [[1353, "test-tools"]], "ASE2SPRKKR software package": [[1375, "ase2sprkkr-software-package"]], "Contents": [[1375, null]], "Class documentation": [[1375, "class-documentation"]], "Indices and tables": [[1375, "indices-and-tables"]], "set_up_common_plot": [[1368, "set-up-common-plot"]], "normalize_rc_params": [[1366, "normalize-rc-params"]], "combine_colormaps": [[1362, "combine-colormaps"]], "More about installing of the ASE2SPRKKR package": [[1374, "more-about-installing-of-the-ase2sprkkr-package"]], "Changelog": [[1371, "changelog"]], "Version 3.1.0-beta": [[1371, "version-3-1-0-beta"]], "Version 3.0.2-beta": [[1371, "version-3-0-2-beta"]], "Version 3.0.0-beta": [[1371, "version-3-0-0-beta"]], "User interface": [[1371, "user-interface"], [1371, "id2"], [1371, "id4"], [1371, "id6"]], "Tools": [[1371, "tools"]], "Internals": [[1371, "internals"], [1371, "id1"], [1371, "id3"], [1371, "id5"]], "Refactoring": [[1371, "refactoring"]], "Version 2.2.1": [[1371, "version-2-2-1"]], "Version 2.2.0-beta": [[1371, "version-2-2-0-beta"]], "Version 2.1.1": [[1371, "version-2-1-1"]], "Version 2.0.4": [[1371, "version-2-0-4"]], "Version 2.0.1": [[1371, "version-2-0-1"]], "Version 2.0.0-beta2": [[1371, "version-2-0-0-beta2"]], "Version 2.0.0-beta1": [[1371, "version-2-0-0-beta1"]], "Architecture changes": [[1371, "architecture-changes"]], "Version 1.0.7": [[1371, "version-1-0-7"]], "Version 1.0.6": [[1371, "version-1-0-6"]], "Multiplot": [[1358, "multiplot"]], "change_default_kwargs": [[1360, "change-default-kwargs"]], "single_plot": [[1369, "single-plot"]], "plotting_function": [[1367, "plotting-function"]], "Some examples of ase2sprkkr": [[1372, "some-examples-of-ase2sprkkr"]], "A1_Fe_scf_simple": [[1372, "a1-fe-scf-simple"], [1373, "a1-fe-scf-simple"], [949, "a1-fe-scf-simple"]], "A2_Fe_scf_input_modifications": [[1372, "a2-fe-scf-input-modifications"], [1373, "a2-fe-scf-input-modifications"], [952, "a2-fe-scf-input-modifications"]], "A3_Fe_dos": [[1372, "a3-fe-dos"], [1373, "a3-fe-dos"], [955, "a3-fe-dos"]], "A4_CPA_Example": [[1372, "a4-cpa-example"], [1373, "a4-cpa-example"], [958, "a4-cpa-example"]], "A5_Al_EOS": [[1372, "a5-al-eos"], [1373, "a5-al-eos"], [961, "a5-al-eos"]], "A6_Cu_MSSPEC": [[1372, "a6-cu-msspec"], [1373, "a6-cu-msspec"], [964, "a6-cu-msspec"]], "A7_SrTiO3_MSSPEC": [[1372, "a7-srtio3-msspec"], [1373, "a7-srtio3-msspec"], [967, "a7-srtio3-msspec"]], "A8_ARPES_and_plotting": [[1372, "a8-arpes-and-plotting"], [1373, "a8-arpes-and-plotting"], [970, "a8-arpes-and-plotting"]], "How to use ASE2SPRKKR": [[1379, "how-to-use-ase2sprkkr"]], "Installation": [[1379, "installation"]], "Usage": [[1379, "usage"]], "Computing a bulk material": [[1379, "computing-a-bulk-material"]], "Defining the material properties": [[1379, "defining-the-material-properties"]], "Reading the results": [[1379, "reading-the-results"]], "Setting the task type and input parameters": [[1379, "setting-the-task-type-and-input-parameters"]], "Working with InputParameters object": [[1379, "working-with-inputparameters-object"]], "Running more subsequent tasks": [[1379, "running-more-subsequent-tasks"]], "Reading the input file": [[1379, "reading-the-input-file"]], "Working with potential files": [[1379, "working-with-potential-files"]], "Generating the input files": [[1379, "generating-the-input-files"]], "A note about potentials and atoms and input_parameters": [[1379, "a-note-about-potentials-and-atoms-and-input-parameters"]], "MPI calculations": [[1379, "mpi-calculations"]], "Bundled tools": [[1379, "bundled-tools"]], "Contributing and error reporting": [[1379, "contributing-and-error-reporting"]], "finish_plot": [[1365, "finish-plot"]], "ASE2SPR-KKR\u2019s philosophy for the developers": [[1378, "ase2spr-kkr-s-philosophy-for-the-developers"]], "The base philosophy of the package": [[1378, "the-base-philosophy-of-the-package"]], "Structure of the package": [[1378, "structure-of-the-package"]], "common": [[1378, "common"], [707, "common"]], "input_parameters": [[1378, "input-parameters"], [982, "input-parameters"], [976, "input-parameters"], [978, "input-parameters"], [980, "input-parameters"], [973, "input-parameters"], [986, "input-parameters"], [988, "input-parameters"], [984, "input-parameters"], [992, "input-parameters"], [990, "input-parameters"], [1006, "input-parameters"]], "potentials": [[1378, "potentials"], [1121, "potentials"], [1200, "potentials"]], "outputs": [[1378, "outputs"], [1071, "outputs"]], "sprkkr": [[1378, "sprkkr"], [1220, "sprkkr"]], "Reading the configuration files": [[1378, "reading-the-configuration-files"]], "Writing the configuration files": [[1378, "writing-the-configuration-files"]], "Running the program": [[1378, "running-the-program"]], "combined_colormap": [[1363, "combined-colormap"]], "version": [[1355, "version"]], "Module version": [[1355, "module-version"]], "TestCommon": [[1354, "testcommon"], [918, "testcommon"]], "auto_range": [[1359, "auto-range"]], "create_rc_context": [[1364, "create-rc-context"]], "format": [[101, "format"]], "get_webpanels_from_material": [[113, "get-webpanels-from-material"]], "run_command": [[106, "run-command"]], "convex_hull_tables": [[90, "convex-hull-tables"]], "results": [[115, "results"]], "row2ref": [[85, "row2ref"]], "ASRResult": [[116, "asrresult"]], "get_git_rev_list": [[103, "get-git-rev-list"]], "get_reference_energies": [[91, "get-reference-energies"]], "initialize_asr_configuration_dir": [[104, "initialize-asr-configuration-dir"]], "Material": [[111, "material"]], "MetaData": [[121, "metadata"]], "get_material_from_folder": [[112, "get-material-from-folder"]], "check_git": [[99, "check-git"]], "get_config_dir": [[102, "get-config-dir"]], "select_references": [[94, "select-references"]], "extract_hash_from_file": [[100, "extract-hash-from-file"]], "make_panel_figures": [[114, "make-panel-figures"]], "append_job": [[98, "append-job"]], "hof": [[92, "hof"]], "command": [[107, "command"]], "read_structure": [[82, "read-structure"]], "core": [[96, "core"]], "cli": [[97, "cli"]], "ase2sprkkr.asr.core.results.MetaDataNotSetError": [[122, "ase2sprkkr-asr-core-results-metadatanotseterror"]], "tuplespermuted": [[86, "tuplespermuted"]], "JSONEncoder": [[120, "jsonencoder"]], "results2ref": [[84, "results2ref"]], "material": [[110, "material"]], "is_asr_initialized": [[105, "is-asr-initialized"]], "HackedASRResult": [[119, "hackedasrresult"]], "HTMLEncoder": [[118, "htmlencoder"]], "fix_old_files": [[108, "fix-old-files"]], "refs2ims": [[83, "refs2ims"]], "DictEncoder": [[117, "dictencoder"]], "custom_potential_section": [[1122, "custom-potential-section"]], "ChargeMomentsSection": [[1138, "chargemomentssection"]], "HostMadelungPotentialSection": [[1146, "hostmadelungpotentialsection"]], "_sections": [[1131, "sections"]], "test_output": [[1112, "test-output"]], "potential": [[1128, "potential"], [1166, "potential"]], "LatticeData": [[1116, "latticedata"]], "global_system_parameter": [[1141, "global-system-parameter"]], "GlobalSystemParameterDefinition": [[1143, "globalsystemparameterdefinition"]], "ChargeSection": [[1133, "chargesection"]], "Pearson": [[1117, "pearson"]], "HostMadelungPotentialSectionDefinition": [[1147, "hostmadelungpotentialsectiondefinition"]], "GlobalSystemParameter": [[1142, "globalsystemparameter"]], "sections": [[1130, "sections"], [993, "sections"]], "physics": [[1114, "physics"]], "potential_definition": [[1129, "potential-definition"]], "lattice_data": [[1115, "lattice-data"]], "ChargesSection": [[1135, "chargessection"]], "international_numbers_to_AP": [[1118, "international-numbers-to-ap"]], "ChargeSectionDefinition": [[1134, "chargesectiondefinition"]], "definitions": [[1127, "definitions"], [974, "definitions"], [1029, "definitions"]], "winger_seitz_radii": [[1120, "winger-seitz-radii"], [1119, "winger-seitz-radii"]], "ChargeMomentsSectionDefinition": [[1139, "chargemomentssectiondefinition"]], "charge": [[1132, "charge"]], "charge_moments": [[1137, "charge-moments"]], "TestOutput": [[1113, "testoutput"], [1070, "testoutput"]], "CustomSectionToken": [[1125, "customsectiontoken"]], "section": [[1136, "section"], [1140, "section"], [1144, "section"], [1174, "section"], [1165, "section"], [1178, "section"], [1182, "section"], [1152, "section"], [1186, "section"], [1170, "section"], [1156, "section"], [1161, "section"], [1148, "section"]], "host_madelung_potential": [[1145, "host-madelung-potential"]], "CustomPotentialSection": [[1123, "custompotentialsection"]], "SectionString": [[1126, "sectionstring"]], "CustomPotentialSectionDefinition": [[1124, "custompotentialsectiondefinition"]], "MeshInformationSectionDefinition": [[1155, "meshinformationsectiondefinition"]], "MomentsSectionDefinition": [[1160, "momentssectiondefinition"]], "PotentialsSection": [[1169, "potentialssection"]], "ASEArraySectionDefinition": [[1188, "asearraysectiondefinition"]], "ScfInfoSection": [[1176, "scfinfosection"]], "ScfInfoSectionDefinition": [[1177, "scfinfosectiondefinition"]], "potential_definitions": [[1187, "potential-definitions"]], "PotentialSectionDefinition": [[1168, "potentialsectiondefinition"]], "MomentsSection": [[1159, "momentssection"]], "PotentialSection": [[1167, "potentialsection"], [1196, "potentialsection"]], "ReferenceSystemSection": [[1172, "referencesystemsection"]], "SitesSection": [[1180, "sitessection"]], "LatticeSection": [[1150, "latticesection"]], "OccupationSectionDefinition": [[1164, "occupationsectiondefinition"]], "lattice": [[1149, "lattice"]], "scf_info": [[1175, "scf-info"]], "SitesSectionDefinition": [[1181, "sitessectiondefinition"]], "TypesSection": [[1184, "typessection"]], "sites": [[1179, "sites"], [1262, "sites"]], "reference_system": [[1171, "reference-system"]], "MeshInformationSection": [[1154, "meshinformationsection"]], "LatticeSectionDefinition": [[1151, "latticesectiondefinition"]], "ReferenceSystemSectionDefinition": [[1173, "referencesystemsectiondefinition"]], "OccupationSection": [[1163, "occupationsection"]], "moments": [[1157, "moments"], [1248, "moments"]], "occupation": [[1162, "occupation"]], "mesh_information": [[1153, "mesh-information"]], "TypesSectionDefinition": [[1185, "typessectiondefinition"]], "MomentSection": [[1158, "momentsection"]], "ScfResult": [[1095, "scfresult"]], "DefaultProcess": [[1086, "defaultprocess"]], "ArpesResult": [[1080, "arpesresult"]], "bsf": [[1081, "bsf"], [1034, "bsf"]], "OutputSectionDefinition": [[1074, "outputsectiondefinition"]], "ArpesProcess": [[1079, "arpesprocess"]], "BsfProcess": [[1082, "bsfprocess"]], "arpes": [[1078, "arpes"], [971, "arpes"], [975, "arpes"]], "DefaultResult": [[1087, "defaultresult"]], "OutputValueEqualDefinition": [[1076, "outputvalueequaldefinition"]], "SprKkrOutputReader": [[1098, "sprkkroutputreader"]], "ScfProcess": [[1094, "scfprocess"]], "KkrProcess": [[1100, "kkrprocess"]], "ScfOutputReader": [[1093, "scfoutputreader"]], "RealOrStars": [[1092, "realorstars"]], "DosResult": [[1090, "dosresult"]], "readers": [[1077, "readers"]], "test_files": [[1069, "test-files"]], "BsfResult": [[1083, "bsfresult"]], "OutputNonameValueDefinition": [[1073, "outputnonamevaluedefinition"]], "OutputValueDefinition": [[1075, "outputvaluedefinition"]], "output_definitions": [[1072, "output-definitions"]], "TaskResult": [[1101, "taskresult"]], "default": [[1084, "default"]], "scf": [[1091, "scf"], [991, "scf"]], "sprkkr_output_reader": [[1097, "sprkkr-output-reader"]], "task_result": [[1099, "task-result"]], "DosProcess": [[1089, "dosprocess"]], "atomic_types_definition": [[1096, "atomic-types-definition"]], "DefaultOutputReader": [[1085, "defaultoutputreader"]], "bsfek": [[977, "bsfek"]], "Fe": [[953, "fe"], [956, "fe"], [950, "fe"]], "get_default_mpi_runner": [[944, "get-default-mpi-runner"]], "STO": [[968, "sto"]], "Cu": [[965, "cu"]], "find_default_mpi_runner": [[943, "find-default-mpi-runner"]], "mpi_runner": [[946, "mpi-runner"]], "gilbert": [[983, "gilbert"]], "bsfkk": [[979, "bsfkk"]], "Al": [[962, "al"]], "load_user_preferences": [[945, "load-user-preferences"]], "Ni_doped_STO": [[959, "ni-doped-sto"]], "user_preferences_file": [[947, "user-preferences-file"]], "AtomicTypePotentialSection": [[1195, "atomictypepotentialsection"]], "Test2DPotential": [[1213, "test2dpotential"]], "vacuum_like": [[1228, "vacuum-like"]], "PotentialDefinition": [[1191, "potentialdefinition"]], "calculator": [[1229, "calculator"], [449, "calculator"]], "Module calculator": [[1229, "module-calculator"]], "UniqueListSection": [[1199, "uniquelistsection"]], "TestCustomSection": [[1215, "testcustomsection"]], "atomic_types": [[1221, "atomic-types"]], "PotentialSectionTrait": [[1197, "potentialsectiontrait"]], "test_potential": [[1216, "test-potential"]], "TestPotential": [[1217, "testpotential"]], "AtomsRegion": [[1224, "atomsregion"]], "test_2D": [[1212, "test-2d"]], "test_custom_section": [[1214, "test-custom-section"]], "PotSectionDefinition": [[1189, "potsectiondefinition"]], "PotValueDefinition": [[1190, "potvaluedefinition"]], "atoms_region": [[1223, "atoms-region"]], "RepeatedPotentialSection": [[1198, "repeatedpotentialsection"]], "ASEArraySection": [[1194, "asearraysection"]], "TestStructure": [[1219, "teststructure"]], "potential_sections": [[1193, "potential-sections"]], "test_structure": [[1218, "test-structure"]], "semiinfinite_system": [[1226, "semiinfinite-system"]], "AtomicType": [[1222, "atomictype"], [1268, "atomictype"]], "Separator": [[1192, "separator"], [1056, "separator"], [816, "separator"]], "Potential": [[1201, "potential"]], "create_definition": [[1037, "create-definition"], [1046, "create-definition"], [1042, "create-definition"]], "BlankSeparator": [[1053, "blankseparator"], [800, "blankseparator"]], "OutputFile": [[1050, "outputfile"], [1032, "outputfile"]], "OutputFileValueDefinition": [[1055, "outputfilevaluedefinition"]], "output_file_header": [[1058, "output-file-header"]], "test_input_parameters": [[1025, "test-input-parameters"]], "TestInputParameters": [[1026, "testinputparameters"]], "UnknownDataValue": [[1051, "unknowndatavalue"], [1033, "unknowndatavalue"]], "CommonOutputFile": [[1049, "commonoutputfile"], [1031, "commonoutputfile"]], "OutputFileDefinition": [[1054, "outputfiledefinition"]], "DOSDefinition": [[1040, "dosdefinition"]], "Arithmetic": [[1048, "arithmetic"], [1030, "arithmetic"]], "ARPESOutputFile": [[1045, "arpesoutputfile"]], "output_files": [[1047, "output-files"], [1028, "output-files"]], "output_files_definitions": [[1052, "output-files-definitions"]], "ARPESDefinition": [[1044, "arpesdefinition"]], "ar": [[1027, "ar"]], "create_output_file_definition": [[1057, "create-output-file-definition"]], "spc": [[1043, "spc"]], "BSFDefinition": [[1035, "bsfdefinition"]], "DOSOutputFile": [[1041, "dosoutputfile"]], "BSFOutputFile": [[1036, "bsfoutputfile"]], "DOS": [[1039, "dos"]], "SITES": [[999, "sites"]], "_nktab_value": [[1004, "nktab-value"]], "InputSection": [[1008, "inputsection"]], "test_definitions": [[1023, "test-definitions"]], "TAU": [[1002, "tau"]], "InputParameters": [[1007, "inputparameters"]], "TauSection": [[1003, "tausection"]], "CONTROL": [[994, "control"]], "ENERGY": [[996, "energy"]], "STRCONST": [[1000, "strconst"]], "InputSectionDefinition": [[1011, "inputsectiondefinition"]], "phagen": [[989, "phagen"]], "InputParametersDefinition": [[1010, "inputparametersdefinition"]], "TestDefinitions": [[1024, "testdefinitions"]], "jxc": [[985, "jxc"]], "MODE": [[997, "mode"]], "marpes": [[987, "marpes"]], "input_parameters_definitions": [[1009, "input-parameters-definitions"]], "xc": [[1005, "xc"], [488, "xc"]], "TASK": [[1001, "task"]], "InputValueDefinition": [[1012, "inputvaluedefinition"]], "CPA": [[995, "cpa"]], "SCF": [[998, "scf"]], "RadialValue": [[1255, "radialvalue"]], "structure": [[1270, "structure"]], "SPRKKR": [[1231, "sprkkr"]], "ReferenceSystem": [[1261, "referencesystem"]], "ConfigurationFileDefinition": [[1234, "configurationfiledefinition"]], "SiteType": [[1264, "sitetype"]], "ConfigurationSectionDefinition": [[1236, "configurationsectiondefinition"]], "_clearing_property": [[1259, "clearing-property"]], "sprkkr_grammar_types": [[1267, "sprkkr-grammar-types"]], "sprkkr_atoms": [[1265, "sprkkr-atoms"]], "RepeatedConfigurationSection": [[1242, "repeatedconfigurationsection"]], "configuration": [[1232, "configuration"], [715, "configuration"]], "FilenameTemplator": [[1230, "filenametemplator"]], "ConfigurationValueDefinition": [[1239, "configurationvaluedefinition"]], "ConfigurationValue": [[1238, "configurationvalue"]], "RadialPotential": [[1254, "radialpotential"]], "radial_meshes": [[1256, "radial-meshes"]], "BaseIoData": [[1244, "baseiodata"]], "ExponentialMesh": [[1257, "exponentialmesh"]], "ReadIoData": [[1245, "readiodata"]], "Moments": [[1249, "moments"]], "RadialCharge": [[1253, "radialcharge"]], "CustomConfigurationSection": [[1240, "customconfigurationsection"]], "occupations": [[1250, "occupations"], [466, "occupations"]], "unique_mapping": [[1247, "unique-mapping"]], "io_data": [[1243, "io-data"]], "radial": [[1252, "radial"]], "Site": [[1269, "site"], [1263, "site"]], "ConfigurationFile": [[1233, "configurationfile"]], "ConfigurationSection": [[1235, "configurationsection"]], "SPRKKRAtoms": [[1266, "sprkkratoms"]], "Mesh": [[1258, "mesh"]], "CustomConfigurationValue": [[1241, "customconfigurationvalue"]], "WriteIoData": [[1246, "writeiodata"]], "ConfigurationSectionTrait": [[1237, "configurationsectiontrait"]], "reference_systems": [[1260, "reference-systems"]], "Occupation": [[1251, "occupation"]], "warnings": [[933, "warnings"], [849, "warnings"]], "value_definitions": [[929, "value-definitions"]], "parse_tuple_function": [[926, "parse-tuple-function"]], "Configuration": [[940, "configuration"], [716, "configuration"]], "_call_function": [[904, "call-function"]], "append_id_to_filename": [[922, "append-id-to-filename"]], "_get_suffix": [[942, "get-suffix"]], "ase2sprkkr.common.warnings.DataValidityError": [[934, "ase2sprkkr-common-warnings-datavalidityerror"]], "test_grammar_types": [[919, "test-grammar-types"]], "TestGrammar": [[920, "testgrammar"]], "unique_values": [[927, "unique-values"]], "SectionAdaptor": [[902, "sectionadaptor"]], "InheritingValueModifier": [[930, "inheritingvaluemodifier"]], "parse_named_option": [[925, "parse-named-option"]], "Section": [[941, "section"], [724, "section"]], "ase2sprkkr.common.warnings.DataValidityWarning": [[935, "ase2sprkkr-common-warnings-datavaliditywarning"]], "UniqueValuesMapping": [[928, "uniquevaluesmapping"]], "ignore_signal": [[905, "ignore-signal"]], "subprocess": [[903, "subprocess"]], "ValueModifier": [[932, "valuemodifier"]], "test_common": [[917, "test-common"]], "yaml": [[936, "yaml"]], "IndentDumper": [[937, "indentdumper"]], "ValueDefinition": [[931, "valuedefinition"]], "parse_inches": [[924, "parse-inches"]], "ConfigFileDefinition": [[939, "configfiledefinition"]], "in_subprocess": [[906, "in-subprocess"]], "qstring": [[826, "qstring"]], "patch_package": [[859, "patch-package"], [703, "patch-package"]], "type_from_set_map": [[847, "type-from-set-map"]], "compare_numpy_values": [[839, "compare-numpy-values"]], "real": [[827, "real"]], "NumpyArray": [[832, "numpyarray"]], "format_for_type": [[840, "format-for-type"]], "ase2sprkkr.common.grammar_types.warnings.SuspiciousValueWarning": [[850, "ase2sprkkr-common-grammar-types-warnings-suspiciousvaluewarning"]], "recognized_set_types": [[841, "recognized-set-types"], [846, "recognized-set-types"]], "GrammarType": [[837, "grammartype"]], "TypedGrammarType": [[838, "typedgrammartype"]], "type_from_value": [[844, "type-from-value"]], "string": [[829, "string"]], "type_from_type_map": [[848, "type-from-type-map"]], "date": [[820, "date"]], "energy": [[821, "energy"]], "int_bool": [[823, "int-bool"]], "RawData": [[834, "rawdata"]], "separator": [[828, "separator"]], "type_from_type": [[843, "type-from-type"]], "data": [[831, "data"]], "line_string": [[825, "line-string"]], "Prefixed": [[833, "prefixed"]], "mixed": [[845, "mixed"]], "flag": [[822, "flag"]], "type_from_default_value": [[842, "type-from-default-value"]], "grammar_type": [[836, "grammar-type"]], "unsigned": [[830, "unsigned"]], "RestOfTheFile": [[835, "restofthefile"]], "integer": [[824, "integer"]], "refinegs": [[641, "refinegs"], [637, "refinegs"]], "restrict_spin_projection_2d": [[652, "restrict-spin-projection-2d"]], "fermi_level": [[627, "fermi-level"]], "atoms2spgcell": [[649, "atoms2spgcell"]], "calc2eigs": [[630, "calc2eigs"]], "get_eigenvalues": [[628, "get-eigenvalues"]], "calculator_utils": [[626, "calculator-utils"]], "magnetic_atoms": [[636, "magnetic-atoms"]], "workflow": [[655, "workflow"]], "_atoms2symmetry_gpaw": [[648, "atoms2symmetry-gpaw"]], "test_stiffness_gpaw": [[622, "test-stiffness-gpaw"]], "symmetry": [[647, "symmetry"], [479, "symmetry"]], "has_inversion": [[651, "has-inversion"]], "magnetism": [[634, "magnetism"]], "is_magnetic": [[635, "is-magnetic"]], "parse_arg": [[625, "parse-arg"]], "test_setup_strains": [[616, "test-setup-strains"], [615, "test-setup-strains"]], "args": [[624, "args"]], "get_parstr": [[639, "get-parstr"]], "something": [[642, "something"]], "atoms2symmetry": [[650, "atoms2symmetry"]], "test_stiffness": [[620, "test-stiffness"]], "timed_print": [[654, "timed-print"]], "test_setup_symmetrize": [[619, "test-setup-symmetrize"], [618, "test-setup-symmetrize"]], "nonselfc": [[640, "nonselfc"]], "gpw2eigs": [[631, "gpw2eigs"], [629, "gpw2eigs"]], "test_setup_strains_get_relevant_strains": [[617, "test-setup-strains-get-relevant-strains"]], "get_filenames": [[638, "get-filenames"]], "kpts": [[632, "kpts"]], "calculate_something": [[643, "calculate-something"]], "test_stiffness_emt": [[621, "test-stiffness-emt"]], "numpy_index": [[870, "numpy-index"]], "as_integer": [[864, "as-integer"]], "NoOutput": [[872, "nooutput"]], "LazyString": [[862, "lazystring"]], "repeated_configuration_containers": [[897, "repeated-configuration-containers"]], "Option": [[879, "option"]], "DictKey": [[883, "dictkey"]], "RepeatedKey": [[886, "repeatedkey"]], "AsyncioFileReader": [[893, "asynciofilereader"]], "copy_list": [[866, "copy-list"]], "DefDictKey": [[882, "defdictkey"]], "process_output_reader": [[892, "process-output-reader"]], "Key": [[885, "key"]], "lazy_string": [[861, "lazy-string"]], "no_output": [[871, "no-output"]], "MergeSectionDefinitionAdaptor": [[901, "mergesectiondefinitionadaptor"]], "Dummy": [[877, "dummy"]], "first_non_none": [[868, "first-non-none"]], "BaseOption": [[874, "baseoption"]], "misc": [[863, "misc"]], "IgnoredKey": [[884, "ignoredkey"]], "SubKey": [[888, "subkey"]], "ProcessOutputReader": [[894, "processoutputreader"]], "readline": [[895, "readline"]], "ArrayKey": [[881, "arraykey"]], "RepeatedConfigurationContainer": [[898, "repeatedconfigurationcontainer"]], "readline_until": [[896, "readline-until"]], "config_property": [[865, "config-property"]], "MergeSectionAdaptor": [[900, "mergesectionadaptor"]], "options": [[873, "options"]], "njit": [[869, "njit"]], "CustomOption": [[875, "customoption"]], "ValidateKey": [[889, "validatekey"]], "dict_first_item": [[867, "dict-first-item"]], "parsing_results": [[880, "parsing-results"]], "DangerousValue": [[876, "dangerousvalue"]], "Values": [[890, "values"]], "DummyStub": [[878, "dummystub"]], "dict_from_parsed": [[891, "dict-from-parsed"]], "section_adaptors": [[899, "section-adaptors"]], "if_not_defined": [[738, "if-not-defined"]], "fortran_format": [[763, "fortran-format"]], "generated_configuration_definitions": [[765, "generated-configuration-definitions"]], "ConfigurationRootDefinition": [[741, "configurationrootdefinition"]], "decorators": [[747, "decorators"]], "Length": [[768, "length"]], "process_input_parameters_definition": [[759, "process-input-parameters-definition"]], "format_for_string": [[762, "format-for-string"]], "switch": [[739, "switch"]], "add_to_signature": [[749, "add-to-signature"]], "Directory": [[757, "directory"]], "end_of_file": [[776, "end-of-file"]], "SkipToRegex": [[771, "skiptoregex"]], "ContainerDefinition": [[742, "containerdefinition"]], "add_called_class_as_argument": [[748, "add-called-class-as-argument"]], "directory": [[756, "directory"]], "GeneratedValueDefinition": [[767, "generatedvaluedefinition"]], "addParseActionEx": [[774, "addparseactionex"]], "generate_grammar": [[777, "generate-grammar"]], "class_property": [[752, "class-property"]], "grammar": [[770, "grammar"]], "warnings_from_here": [[755, "warnings-from-here"]], "cached_property": [[751, "cached-property"]], "SectionDefinition": [[743, "sectiondefinition"]], "std_cached_property": [[754, "std-cached-property"]], "formats": [[761, "formats"]], "NumpyViewDefinition": [[769, "numpyviewdefinition"]], "verbatim": [[760, "verbatim"]], "maybeclassmethod": [[753, "maybeclassmethod"]], "addConditionEx": [[773, "addconditionex"]], "delimitedList": [[775, "delimitedlist"]], "line_end": [[778, "line-end"]], "container_definitions": [[740, "container-definitions"]], "White": [[772, "white"]], "add_debug_hook": [[745, "add-debug-hook"]], "debug": [[744, "debug"]], "full_format_for_string": [[764, "full-format-for-string"]], "doc": [[758, "doc"]], "cached_class_property": [[750, "cached-class-property"]], "BaseGeneratedValueDefinition": [[766, "basegeneratedvaluedefinition"]], "debug_pyparsing": [[746, "debug-pyparsing"]], "empty_spheres": [[663, "empty-spheres"], [660, "empty-spheres"], [657, "empty-spheres"]], "add_empty_spheres": [[659, "add-empty-spheres"]], "nomad_api": [[670, "nomad-api"]], "tests": [[694, "tests"], [677, "tests"]], "TestSpgilib": [[690, "testspgilib"]], "possibly_equivalent_sites": [[675, "possibly-equivalent-sites"]], "SpacegroupInfo": [[674, "spacegroupinfo"]], "es_finder": [[662, "es-finder"]], "spglib_dataset": [[676, "spglib-dataset"]], "ExternalEntry": [[666, "externalentry"]], "spglib": [[673, "spglib"]], "EmptySpheresResult": [[658, "emptyspheresresult"]], "ase2sprkkr.bindings.xband.spheres module": [[692, "module-ase2sprkkr.bindings.xband.spheres"]], "bindings": [[656, "bindings"]], "ase2sprkkr.bindings.xband.symmetry module": [[693, "module-ase2sprkkr.bindings.xband.symmetry"]], "test_es_finder": [[687, "test-es-finder"]], "NomadEntry": [[668, "nomadentry"]], "NomadArchive": [[667, "nomadarchive"]], "empty_spheres_atoms": [[661, "empty-spheres-atoms"]], "with_token": [[672, "with-token"]], "xband": [[691, "xband"]], "TestEsFinder": [[688, "testesfinder"]], "test_spglib": [[689, "test-spglib"]], "map_io_to_nomad": [[669, "map-io-to-nomad"]], "NomadApi": [[671, "nomadapi"]], "Ignored": [[729, "ignored"]], "gather": [[736, "gather"]], "RootConfigurationContainer": [[723, "rootconfigurationcontainer"]], "alternative_types": [[708, "alternative-types"]], "configuration_definitions": [[725, "configuration-definitions"]], "VirtualDefinition": [[735, "virtualdefinition"]], "ConfigurationContainer": [[720, "configurationcontainer"]], "ase2sprkkr.common.configuration_containers.DisabledAttributeError": [[722, "ase2sprkkr-common-configuration-containers-disabledattributeerror"]], "normalize_type_map": [[711, "normalize-type-map"]], "ControlDefinition": [[727, "controldefinition"]], "Stub": [[733, "stub"]], "Gather": [[728, "gather"]], "NotAllowed": [[730, "notallowed"]], "if_defined": [[737, "if-defined"]], "TestSpheres": [[706, "testspheres"]], "test_spheres": [[705, "test-spheres"]], "BaseSection": [[719, "basesection"]], "BaseDefinition": [[726, "basedefinition"]], "numpy_types": [[712, "numpy-types"]], "backward_compatibility": [[714, "backward-compatibility"]], "RealItemDefinition": [[731, "realitemdefinition"]], "CustomSection": [[721, "customsection"]], "types_alternatives": [[713, "types-alternatives"]], "configuration_containers": [[717, "configuration-containers"]], "SeparatorDefinition": [[732, "separatordefinition"]], "normalize_type": [[710, "normalize-type"]], "Switch": [[734, "switch"]], "allowed_types": [[709, "allowed-types"]], "BaseConfigurationContainer": [[718, "baseconfigurationcontainer"]], "Energy": [[804, "energy"]], "SpecialColumn": [[790, "specialcolumn"]], "Array": [[786, "array"]], "optional_quote": [[780, "optional-quote"]], "Keyword": [[809, "keyword"]], "LineString": [[810, "linestring"]], "set_of_integers": [[793, "set-of-integers"]], "Table": [[791, "table"]], "Sequence": [[788, "sequence"]], "set_of_reals": [[794, "set-of-reals"]], "basic": [[795, "basic"]], "arrays": [[785, "arrays"]], "Number": [[811, "number"]], "ObjectNumber": [[812, "objectnumber"]], "Unsigned": [[818, "unsigned"]], "Date": [[802, "date"]], "optional_line_end": [[779, "optional-line-end"]], "BaseRealWithUnits": [[797, "baserealwithunits"]], "Complex": [[787, "complex"]], "BaseString": [[798, "basestring"]], "Flag": [[806, "flag"]], "Integer": [[808, "integer"]], "boolean": [[819, "boolean"]], "separator_grammar": [[782, "separator-grammar"]], "BasicSeparator": [[799, "basicseparator"]], "BaseBool": [[796, "basebool"]], "QString": [[813, "qstring"]], "String": [[817, "string"]], "FixedPointNumber": [[805, "fixedpointnumber"]], "grammar_types": [[784, "grammar-types"]], "DefKeyword": [[803, "defkeyword"]], "replace_whitechars": [[781, "replace-whitechars"]], "Bool": [[801, "bool"]], "RealWithUnits": [[815, "realwithunits"]], "separator_pattern": [[783, "separator-pattern"]], "Real": [[814, "real"]], "SetOf": [[789, "setof"]], "IntBool": [[807, "intbool"]], "complex_number": [[792, "complex-number"]], "test_phonons": [[574, "test-phonons"], [575, "test-phonons"]], "zero_pad_non_pbc_strain_directions": [[581, "zero-pad-non-pbc-strain-directions"]], "test_polarizability": [[585, "test-polarizability"], [584, "test-polarizability"]], "test_piezoelectrictensor": [[578, "test-piezoelectrictensor"], [580, "test-piezoelectrictensor"], [428, "test-piezoelectrictensor"]], "test_plasmafrequency": [[583, "test-plasmafrequency"], [582, "test-plasmafrequency"]], "test_projected_bandstructure": [[586, "test-projected-bandstructure"]], "test_relax_basic": [[591, "test-relax-basic"]], "test_raman": [[588, "test-raman"], [589, "test-raman"]], "test_relax_emt_fail_broken_symmetry": [[594, "test-relax-emt-fail-broken-symmetry"]], "test_relax": [[590, "test-relax"], [430, "test-relax"]], "test_relax_magmoms": [[596, "test-relax-magmoms"]], "test_relax_bn_gpaw": [[592, "test-relax-bn-gpaw"]], "test_setup_magnetize": [[608, "test-setup-magnetize"], [612, "test-setup-magnetize"], [609, "test-setup-magnetize"]], "test_relax_emt": [[593, "test-relax-emt"]], "test_setup_displacements": [[604, "test-setup-displacements"], [605, "test-setup-displacements"]], "get_strain_from_atoms": [[579, "get-strain-from-atoms"]], "test_setup_decorate": [[602, "test-setup-decorate"]], "test_setup_materials": [[611, "test-setup-materials"]], "test_relax_si_gpaw": [[597, "test-relax-si-gpaw"]], "test_setup_displacements_displace_atom": [[606, "test-setup-displacements-displace-atom"]], "test_setup_magnetize_state_inputs": [[610, "test-setup-magnetize-state-inputs"]], "test_phonopy": [[577, "test-phonopy"], [576, "test-phonopy"]], "test_setup_scanparams": [[613, "test-setup-scanparams"]], "test_setup_displacements_get_all_displacements": [[607, "test-setup-displacements-get-all-displacements"]], "test_setup_params": [[614, "test-setup-params"]], "test_info": [[599, "test-info"]], "test_relax_find_higher_symmetry": [[595, "test-relax-find-higher-symmetry"]], "test_setup_decorate_si": [[603, "test-setup-decorate-si"]], "test_info_raises_with_protected_key": [[601, "test-info-raises-with-protected-key"]], "test_info_call_from_cli": [[600, "test-info-call-from-cli"]], "test_projected_bs_mocked": [[587, "test-projected-bs-mocked"]], "test_setinfo": [[598, "test-setinfo"]], "test_database_totree_files_and_hard_links": [[549, "test-database-totree-files-and-hard-links"]], "test_dimensionality_cli": [[552, "test-dimensionality-cli"]], "test_hse": [[570, "test-hse"], [569, "test-hse"]], "test_database_rmsd": [[537, "test-database-rmsd"]], "_get_all_eigenvalues": [[554, "get-all-eigenvalues"]], "test_database_fromtree_works_without_write_permission": [[536, "test-database-fromtree-works-without-write-permission"]], "test_formalpolarization": [[560, "test-formalpolarization"], [561, "test-formalpolarization"]], "test_database_totree": [[546, "test-database-totree"], [548, "test-database-totree"]], "resultstest": [[555, "resultstest"]], "test_emasses": [[553, "test-emasses"]], "test_gw": [[568, "test-gw"], [567, "test-gw"]], "test_database_rmsd_duplicates": [[539, "test-database-rmsd-duplicates"]], "test_gs": [[563, "test-gs"], [564, "test-gs"]], "test_dimensionality": [[550, "test-dimensionality"], [551, "test-dimensionality"]], "test_emasses_freelectron": [[556, "test-emasses-freelectron"]], "test_pdos": [[572, "test-pdos"], [571, "test-pdos"]], "test_database_rmsd_rotation": [[545, "test-database-rmsd-rotation"]], "test_database_rmsd_duplicates_comparison_keys": [[540, "test-database-rmsd-duplicates-comparison-keys"]], "test_emasses_indirect": [[557, "test-emasses-indirect"]], "test_gs_asr_cli_results_figures": [[565, "test-gs-asr-cli-results-figures"]], "test_database_rmsd_not_equal": [[543, "test-database-rmsd-not-equal"]], "test_database_fromtree_raises_when_missing_uids": [[534, "test-database-fromtree-raises-when-missing-uids"]], "test_database_rmsd_none_handling": [[542, "test-database-rmsd-none-handling"]], "test_env_variables": [[559, "test-env-variables"]], "test_fixtures": [[558, "test-fixtures"]], "test_database_fromtree_totree": [[535, "test-database-fromtree-totree"]], "test_gs_integration_gpaw": [[566, "test-gs-integration-gpaw"]], "test_database_rmsd_rattled": [[544, "test-database-rmsd-rattled"]], "rattle_atoms": [[538, "rattle-atoms"]], "test_formalpolarization_test_atoms_too_close_to_boundary": [[562, "test-formalpolarization-test-atoms-too-close-to-boundary"]], "make_tree": [[533, "make-tree"]], "test_pdos_full": [[573, "test-pdos-full"]], "test_database_rmsd_move_one_atom": [[541, "test-database-rmsd-move-one-atom"]], "make_test_db": [[547, "make-test-db"]], "test_berry": [[494, "test-berry"], [493, "test-berry"]], "test_asr_cli_results_figures_gs": [[518, "test-asr-cli-results-figures-gs"]], "test_asr_results_bandstructure": [[506, "test-asr-results-bandstructure"]], "test_core": [[513, "test-core"], [511, "test-core"]], "test_reading_result": [[525, "test-reading-result"]], "test_asr": [[501, "test-asr"]], "test_database_duplicates": [[528, "test-database-duplicates"], [527, "test-database-duplicates"]], "MyWebPanel": [[522, "mywebpanel"]], "test_borncharges": [[497, "test-borncharges"], [496, "test-borncharges"], [426, "test-borncharges"]], "test_recipe_defaults": [[514, "test-recipe-defaults"]], "test_cli": [[500, "test-cli"]], "test_results_object": [[526, "test-results-object"]], "test_berry_nontrivial": [[495, "test-berry-nontrivial"]], "test_read_old_format": [[523, "test-read-old-format"]], "test_recipe_setting_overriding_defaults": [[516, "test-recipe-setting-overriding-defaults"]], "test_core_material": [[517, "test-core-material"]], "MyResult": [[520, "myresult"]], "test_convex_hull": [[509, "test-convex-hull"], [510, "test-convex-hull"]], "test_asr_results_help": [[507, "test-asr-results-help"]], "test_asr_list": [[505, "test-asr-list"]], "test_recipe_setting_new_defaults": [[515, "test-recipe-setting-new-defaults"]], "test_database_duplicates_filter_magstate": [[529, "test-database-duplicates-filter-magstate"]], "test_bandstructure_main": [[492, "test-bandstructure-main"]], "test_database_fromtree": [[531, "test-database-fromtree"]], "recipe": [[512, "recipe"]], "test_bse": [[498, "test-bse"], [499, "test-bse"]], "test_asr_find": [[502, "test-asr-find"]], "test_core_results": [[519, "test-core-results"]], "test_reading_older_version": [[524, "test-reading-older-version"]], "MyResultVer0": [[521, "myresultver0"]], "test_asr_find_help": [[503, "test-asr-find-help"]], "test_asr_find_no_versions": [[504, "test-asr-find-no-versions"]], "test_database_duplicates_no_duplicates": [[530, "test-database-duplicates-no-duplicates"]], "test_asr_run": [[508, "test-asr-run"]], "folder_tree": [[532, "folder-tree"]], "Occupations": [[452, "occupations"]], "exx": [[489, "exx"]], "test_bandstructure": [[491, "test-bandstructure"]], "mpi": [[461, "mpi"]], "kpts2sizeandoffsets": [[459, "kpts2sizeandoffsets"]], "response": [[469, "response"]], "barrier": [[462, "barrier"]], "world_sum": [[465, "world-sum"]], "Setups": [[454, "setups"]], "hybrids": [[456, "hybrids"]], "Parameters": [[453, "parameters"]], "DielectricFunction": [[473, "dielectricfunction"]], "utilities": [[481, "utilities"]], "eigenvalues": [[457, "eigenvalues"]], "broadcast": [[463, "broadcast"]], "kpt_descriptor": [[458, "kpt-descriptor"]], "spinorbit": [[476, "spinorbit"]], "ProgressBar": [[487, "progressbar"]], "WaveFunctions": [[455, "wavefunctions"]], "ibz2bz": [[485, "ibz2bz"], [484, "ibz2bz"]], "g0w0": [[474, "g0w0"]], "DOSCalculator": [[451, "doscalculator"]], "to1bz": [[460, "to1bz"]], "SOC": [[477, "soc"]], "progressbar": [[486, "progressbar"]], "new_communicator": [[464, "new-communicator"]], "G0W0": [[475, "g0w0"]], "df": [[472, "df"]], "soc_eigenstates": [[478, "soc-eigenstates"]], "create_occ_calc": [[468, "create-occ-calc"]], "raw_orbital_LDOS": [[483, "raw-orbital-ldos"]], "BSE": [[471, "bse"]], "FermiDirac": [[467, "fermidirac"]], "Symmetry": [[480, "symmetry"]], "materials": [[444, "materials"], [408, "materials"]], "conftest": [[432, "conftest"]], "test_gpaw_berry_get_berry_phases_integration": [[427, "test-gpaw-berry-get-berry-phases-integration"]], "get_berry_phases": [[448, "get-berry-phases"]], "pytest_sessionstart": [[434, "pytest-sessionstart"]], "asr_tmpdir": [[437, "asr-tmpdir"]], "_get_webcontent": [[436, "get-webcontent"]], "scanparams": [[410, "scanparams"]], "get_webcontent": [[440, "get-webcontent"]], "mocks": [[445, "mocks"]], "asr_tmpdir_w_params": [[438, "asr-tmpdir-w-params"]], "get_strained_folder_name": [[413, "get-strained-folder-name"]], "test_material": [[443, "test-material"]], "pytest_configure": [[433, "pytest-configure"]], "acceptance": [[425, "acceptance"]], "setup_strains": [[414, "setup-strains"]], "strains": [[411, "strains"]], "fixtures": [[435, "fixtures"]], "duplicates_test_db": [[439, "duplicates-test-db"]], "structureinfo": [[420, "structureinfo"]], "set_asr_test_environ_variable": [[442, "set-asr-test-environ-variable"]], "ASRCalculator": [[450, "asrcalculator"]], "get_relevant_strains": [[412, "get-relevant-strains"]], "test_relax_fe_gpaw": [[431, "test-relax-fe-gpaw"]], "mockgpaw": [[441, "mockgpaw"]], "berryphase": [[447, "berryphase"]], "get_reduced_formula": [[422, "get-reduced-formula"]], "test_piezo_BN": [[429, "test-piezo-bn"]], "gpaw": [[446, "gpaw"]], "stiffness": [[417, "stiffness"]], "symmetrize": [[415, "symmetrize"]], "symmetrize_atoms": [[416, "symmetrize-atoms"]], "get_pie_slice": [[370, "get-pie-slice"]], "raman": [[375, "raman"], [378, "raman"]], "projected_bs_pbe": [[372, "projected-bs-pbe"]], "set_initial_magnetic_moments": [[387, "set-initial-magnetic-moments"]], "setup_supercell": [[401, "setup-supercell"]], "relax": [[386, "relax"], [380, "relax"]], "displace_atom": [[404, "displace-atom"]], "get_p_ab": [[396, "get-p-ab"]], "count_deg": [[377, "count-deg"]], "SpgAtoms": [[383, "spgatoms"]], "check_key_value": [[390, "check-key-value"]], "generate_structures": [[395, "generate-structures"]], "get_pie_markers": [[369, "get-pie-markers"]], "setup": [[391, "setup"]], "myBFGS": [[385, "mybfgs"]], "create_folder_structure": [[399, "create-folder-structure"]], "KeyValuePair": [[389, "keyvaluepair"]], "create_displacements_folder": [[403, "create-displacements-folder"]], "defects": [[397, "defects"]], "params": [[409, "params"]], "setinfo": [[388, "setinfo"]], "displacements": [[402, "displacements"]], "push": [[374, "push"]], "decorate": [[392, "decorate"]], "get_all_displacements": [[405, "get-all-displacements"]], "magnetize": [[407, "magnetize"]], "setup_defects": [[400, "setup-defects"]], "get_displacement_folder": [[406, "get-displacement-folder"]], "apply_substitution": [[393, "apply-substitution"]], "ase2sprkkr.asr.relax.BrokenSymmetryError": [[381, "ase2sprkkr-asr-relax-brokensymmetryerror"]], "is_relax_done": [[384, "is-relax-done"]], "find_substitutions": [[394, "find-substitutions"]], "get_yl_ordering": [[371, "get-yl-ordering"]], "plot_pdos": [[331, "plot-pdos"]], "distance_to_sc": [[347, "distance-to-sc"]], "get_orbital_ldos": [[368, "get-orbital-ldos"]], "plot_pdos_nosoc": [[332, "plot-pdos-nosoc"]], "get_ordered_syl_dict": [[328, "get-ordered-syl-dict"]], "topckl": [[343, "topckl"]], "mingocorrection": [[338, "mingocorrection"]], "projected_bandstructure": [[365, "projected-bandstructure"]], "phonons": [[335, "phonons"]], "plot_phonons": [[340, "plot-phonons"], [350, "plot-phonons"]], "phonopy": [[345, "phonopy"]], "get_yl_colors": [[329, "get-yl-colors"]], "polarizability": [[360, "polarizability"], [363, "polarizability"]], "lattice_vectors": [[348, "lattice-vectors"]], "requires": [[351, "requires"], [341, "requires"]], "plot_bandstructure": [[339, "plot-bandstructure"], [349, "plot-bandstructure"]], "get_bs_sampling": [[367, "get-bs-sampling"]], "plasmafrequency": [[356, "plasmafrequency"]], "creates": [[337, "creates"]], "piezoelectrictensor": [[353, "piezoelectrictensor"]], "plot_pdos_soc": [[333, "plot-pdos-soc"]]}, "indexentries": {"ase2sprkkr": [[1, "module-ase2sprkkr"]], "module": [[1, "module-ase2sprkkr"], [2, "module-ase2sprkkr.ase"], [3, "module-ase2sprkkr.ase.build"], [6, "module-ase2sprkkr.ase.io"], [9, "module-ase2sprkkr.ase.pbc"], [11, "module-ase2sprkkr.ase.register"], [14, "module-ase2sprkkr.ase.symbols"], [17, "module-ase2sprkkr.ase.test"], [18, "module-ase2sprkkr.ase.test.init_tests"], [27, "module-ase2sprkkr.ase.test.test_build"], [29, "module-ase2sprkkr.ase.visualise"], [31, "module-ase2sprkkr.asr"], [32, "module-ase2sprkkr.asr.asr"], [33, "module-ase2sprkkr.asr.bader"], [35, "module-ase2sprkkr.asr.bandstructure"], [42, "module-ase2sprkkr.asr.berry"], [46, "module-ase2sprkkr.asr.borncharges"], [49, "module-ase2sprkkr.asr.bse"], [54, "module-ase2sprkkr.asr.calculators"], [56, "module-ase2sprkkr.asr.chc"], [88, "module-ase2sprkkr.asr.convex_hull"], [96, "module-ase2sprkkr.asr.core"], [97, "module-ase2sprkkr.asr.core.cli"], [107, "module-ase2sprkkr.asr.core.command"], [108, "module-ase2sprkkr.asr.core.fix_old_files"], [110, "module-ase2sprkkr.asr.core.material"], [115, "module-ase2sprkkr.asr.core.results"], [143, "module-ase2sprkkr.asr.core.types"], [147, "module-ase2sprkkr.asr.core.utils"], [163, "module-ase2sprkkr.asr.database"], [164, "module-ase2sprkkr.asr.database.browser"], [179, "module-ase2sprkkr.asr.database.check"], [180, "module-ase2sprkkr.asr.database.clonetree"], [181, "module-ase2sprkkr.asr.database.duplicates"], [186, "module-ase2sprkkr.asr.database.material_fingerprint"], [190, "module-ase2sprkkr.asr.database.merge"], [191, "module-ase2sprkkr.asr.database.rmsd"], [195, "module-ase2sprkkr.asr.database.templates"], [196, "module-ase2sprkkr.asr.database.totree"], [199, "module-ase2sprkkr.asr.defectformation"], [207, "module-ase2sprkkr.asr.deformationpotentials"], [210, "module-ase2sprkkr.asr.dimensionality"], [214, "module-ase2sprkkr.asr.dos"], [218, "module-ase2sprkkr.asr.emasses"], [248, "module-ase2sprkkr.asr.exchange"], [250, "module-ase2sprkkr.asr.fere"], [271, "module-ase2sprkkr.asr.fermisurface"], [278, "module-ase2sprkkr.asr.formalpolarization"], [285, "module-ase2sprkkr.asr.gs"], [296, "module-ase2sprkkr.asr.gw"], [301, "module-ase2sprkkr.asr.hse"], [309, "module-ase2sprkkr.asr.infraredpolarizability"], [314, "module-ase2sprkkr.asr.magnetic_anisotropy"], [320, "module-ase2sprkkr.asr.magstate"], [324, "module-ase2sprkkr.asr.pdos"], [335, "module-ase2sprkkr.asr.phonons"], [345, "module-ase2sprkkr.asr.phonopy"], [353, "module-ase2sprkkr.asr.piezoelectrictensor"], [356, "module-ase2sprkkr.asr.plasmafrequency"], [360, "module-ase2sprkkr.asr.polarizability"], [365, "module-ase2sprkkr.asr.projected_bandstructure"], [374, "module-ase2sprkkr.asr.push"], [375, "module-ase2sprkkr.asr.raman"], [380, "module-ase2sprkkr.asr.relax"], [388, "module-ase2sprkkr.asr.setinfo"], [391, "module-ase2sprkkr.asr.setup"], [392, "module-ase2sprkkr.asr.setup.decorate"], [397, "module-ase2sprkkr.asr.setup.defects"], [402, "module-ase2sprkkr.asr.setup.displacements"], [407, "module-ase2sprkkr.asr.setup.magnetize"], [408, "module-ase2sprkkr.asr.setup.materials"], [409, "module-ase2sprkkr.asr.setup.params"], [410, "module-ase2sprkkr.asr.setup.scanparams"], [411, "module-ase2sprkkr.asr.setup.strains"], [415, "module-ase2sprkkr.asr.setup.symmetrize"], [417, "module-ase2sprkkr.asr.stiffness"], [420, "module-ase2sprkkr.asr.structureinfo"], [424, "module-ase2sprkkr.asr.test"], [425, "module-ase2sprkkr.asr.test.acceptance"], [426, "module-ase2sprkkr.asr.test.acceptance.test_borncharges"], [428, "module-ase2sprkkr.asr.test.acceptance.test_piezoelectrictensor"], [430, "module-ase2sprkkr.asr.test.acceptance.test_relax"], [432, "module-ase2sprkkr.asr.test.conftest"], [435, "module-ase2sprkkr.asr.test.fixtures"], [444, "module-ase2sprkkr.asr.test.materials"], [445, "module-ase2sprkkr.asr.test.mocks"], [446, "module-ase2sprkkr.asr.test.mocks.gpaw"], [447, "module-ase2sprkkr.asr.test.mocks.gpaw.berryphase"], [449, "module-ase2sprkkr.asr.test.mocks.gpaw.calculator"], [456, "module-ase2sprkkr.asr.test.mocks.gpaw.hybrids"], [457, "module-ase2sprkkr.asr.test.mocks.gpaw.hybrids.eigenvalues"], [458, "module-ase2sprkkr.asr.test.mocks.gpaw.kpt_descriptor"], [461, "module-ase2sprkkr.asr.test.mocks.gpaw.mpi"], [466, "module-ase2sprkkr.asr.test.mocks.gpaw.occupations"], [469, "module-ase2sprkkr.asr.test.mocks.gpaw.response"], [470, "module-ase2sprkkr.asr.test.mocks.gpaw.response.bse"], [472, "module-ase2sprkkr.asr.test.mocks.gpaw.response.df"], [474, "module-ase2sprkkr.asr.test.mocks.gpaw.response.g0w0"], [476, "module-ase2sprkkr.asr.test.mocks.gpaw.spinorbit"], [479, "module-ase2sprkkr.asr.test.mocks.gpaw.symmetry"], [481, "module-ase2sprkkr.asr.test.mocks.gpaw.utilities"], [482, "module-ase2sprkkr.asr.test.mocks.gpaw.utilities.dos"], [484, "module-ase2sprkkr.asr.test.mocks.gpaw.utilities.ibz2bz"], [486, "module-ase2sprkkr.asr.test.mocks.gpaw.utilities.progressbar"], [488, "module-ase2sprkkr.asr.test.mocks.gpaw.xc"], [489, "module-ase2sprkkr.asr.test.mocks.gpaw.xc.exx"], [490, "module-ase2sprkkr.asr.test.mocks.gpaw.xc.tools"], [491, "module-ase2sprkkr.asr.test.test_bandstructure"], [493, "module-ase2sprkkr.asr.test.test_berry"], [496, "module-ase2sprkkr.asr.test.test_borncharges"], [498, "module-ase2sprkkr.asr.test.test_bse"], [500, "module-ase2sprkkr.asr.test.test_cli"], [509, "module-ase2sprkkr.asr.test.test_convex_hull"], [511, "module-ase2sprkkr.asr.test.test_core"], [517, "module-ase2sprkkr.asr.test.test_core_material"], [519, "module-ase2sprkkr.asr.test.test_core_results"], [527, "module-ase2sprkkr.asr.test.test_database_duplicates"], [531, "module-ase2sprkkr.asr.test.test_database_fromtree"], [537, "module-ase2sprkkr.asr.test.test_database_rmsd"], [546, "module-ase2sprkkr.asr.test.test_database_totree"], [550, "module-ase2sprkkr.asr.test.test_dimensionality"], [553, "module-ase2sprkkr.asr.test.test_emasses"], [558, "module-ase2sprkkr.asr.test.test_fixtures"], [560, "module-ase2sprkkr.asr.test.test_formalpolarization"], [563, "module-ase2sprkkr.asr.test.test_gs"], [567, "module-ase2sprkkr.asr.test.test_gw"], [569, "module-ase2sprkkr.asr.test.test_hse"], [571, "module-ase2sprkkr.asr.test.test_pdos"], [574, "module-ase2sprkkr.asr.test.test_phonons"], [576, "module-ase2sprkkr.asr.test.test_phonopy"], [578, "module-ase2sprkkr.asr.test.test_piezoelectrictensor"], [582, "module-ase2sprkkr.asr.test.test_plasmafrequency"], [584, "module-ase2sprkkr.asr.test.test_polarizability"], [586, "module-ase2sprkkr.asr.test.test_projected_bandstructure"], [588, "module-ase2sprkkr.asr.test.test_raman"], [590, "module-ase2sprkkr.asr.test.test_relax"], [598, "module-ase2sprkkr.asr.test.test_setinfo"], [602, "module-ase2sprkkr.asr.test.test_setup_decorate"], [604, "module-ase2sprkkr.asr.test.test_setup_displacements"], [608, "module-ase2sprkkr.asr.test.test_setup_magnetize"], [611, "module-ase2sprkkr.asr.test.test_setup_materials"], [613, "module-ase2sprkkr.asr.test.test_setup_scanparams"], [615, "module-ase2sprkkr.asr.test.test_setup_strains"], [618, "module-ase2sprkkr.asr.test.test_setup_symmetrize"], [620, "module-ase2sprkkr.asr.test.test_stiffness"], [623, "module-ase2sprkkr.asr.utils"], [624, "module-ase2sprkkr.asr.utils.args"], [626, "module-ase2sprkkr.asr.utils.calculator_utils"], [629, "module-ase2sprkkr.asr.utils.gpw2eigs"], [632, "module-ase2sprkkr.asr.utils.kpts"], [634, "module-ase2sprkkr.asr.utils.magnetism"], [637, "module-ase2sprkkr.asr.utils.refinegs"], [642, "module-ase2sprkkr.asr.utils.something"], [647, "module-ase2sprkkr.asr.utils.symmetry"], [653, "module-ase2sprkkr.asr.utils.utils"], [655, "module-ase2sprkkr.asr.workflow"], [656, "module-ase2sprkkr.bindings"], [657, "module-ase2sprkkr.bindings.empty_spheres"], [662, "module-ase2sprkkr.bindings.es_finder"], [664, "module-ase2sprkkr.bindings.nomad"], [665, "module-ase2sprkkr.bindings.nomad.nomad"], [670, "module-ase2sprkkr.bindings.nomad.nomad_api"], [673, "module-ase2sprkkr.bindings.spglib"], [677, "module-ase2sprkkr.bindings.tests"], [678, "module-ase2sprkkr.bindings.tests.init_tests"], [687, "module-ase2sprkkr.bindings.tests.test_es_finder"], [689, "module-ase2sprkkr.bindings.tests.test_spglib"], [691, "module-ase2sprkkr.bindings.xband"], [692, "module-ase2sprkkr.bindings.xband.spheres"], [693, "module-ase2sprkkr.bindings.xband.symmetry"], [694, "module-ase2sprkkr.bindings.xband.tests"], [695, "module-ase2sprkkr.bindings.xband.tests.init_tests"], [705, "module-ase2sprkkr.bindings.xband.tests.test_spheres"], [707, "module-ase2sprkkr.common"], [708, "module-ase2sprkkr.common.alternative_types"], [714, "module-ase2sprkkr.common.backward_compatibility"], [715, "module-ase2sprkkr.common.configuration"], [717, "module-ase2sprkkr.common.configuration_containers"], [725, "module-ase2sprkkr.common.configuration_definitions"], [740, "module-ase2sprkkr.common.container_definitions"], [744, "module-ase2sprkkr.common.debug"], [747, "module-ase2sprkkr.common.decorators"], [756, "module-ase2sprkkr.common.directory"], [758, "module-ase2sprkkr.common.doc"], [761, "module-ase2sprkkr.common.formats"], [765, "module-ase2sprkkr.common.generated_configuration_definitions"], [770, "module-ase2sprkkr.common.grammar"], [784, "module-ase2sprkkr.common.grammar_types"], [785, "module-ase2sprkkr.common.grammar_types.arrays"], [795, "module-ase2sprkkr.common.grammar_types.basic"], [831, "module-ase2sprkkr.common.grammar_types.data"], [836, "module-ase2sprkkr.common.grammar_types.grammar_type"], [845, "module-ase2sprkkr.common.grammar_types.mixed"], [849, "module-ase2sprkkr.common.grammar_types.warnings"], [851, "module-ase2sprkkr.common.init_tests"], [861, "module-ase2sprkkr.common.lazy_string"], [863, "module-ase2sprkkr.common.misc"], [871, "module-ase2sprkkr.common.no_output"], [873, "module-ase2sprkkr.common.options"], [880, "module-ase2sprkkr.common.parsing_results"], [892, "module-ase2sprkkr.common.process_output_reader"], [897, "module-ase2sprkkr.common.repeated_configuration_containers"], [899, "module-ase2sprkkr.common.section_adaptors"], [903, "module-ase2sprkkr.common.subprocess"], [907, "module-ase2sprkkr.common.test"], [908, "module-ase2sprkkr.common.test.init_tests"], [917, "module-ase2sprkkr.common.test.test_common"], [919, "module-ase2sprkkr.common.test.test_grammar_types"], [921, "module-ase2sprkkr.common.tools"], [927, "module-ase2sprkkr.common.unique_values"], [929, "module-ase2sprkkr.common.value_definitions"], [933, "module-ase2sprkkr.common.warnings"], [936, "module-ase2sprkkr.common.yaml"], [938, "module-ase2sprkkr.config"], [948, "module-ase2sprkkr.examples"], [949, "module-ase2sprkkr.examples.A1_Fe_scf_simple"], [950, "module-ase2sprkkr.examples.A1_Fe_scf_simple.Fe"], [952, "module-ase2sprkkr.examples.A2_Fe_scf_input_modifications"], [953, "module-ase2sprkkr.examples.A2_Fe_scf_input_modifications.Fe"], [955, "module-ase2sprkkr.examples.A3_Fe_dos"], [956, "module-ase2sprkkr.examples.A3_Fe_dos.Fe"], [958, "module-ase2sprkkr.examples.A4_CPA_Example"], [959, "module-ase2sprkkr.examples.A4_CPA_Example.Ni_doped_STO"], [961, "module-ase2sprkkr.examples.A5_Al_EOS"], [962, "module-ase2sprkkr.examples.A5_Al_EOS.Al"], [964, "module-ase2sprkkr.examples.A6_Cu_MSSPEC"], [965, "module-ase2sprkkr.examples.A6_Cu_MSSPEC.Cu"], [967, "module-ase2sprkkr.examples.A7_SrTiO3_MSSPEC"], [968, "module-ase2sprkkr.examples.A7_SrTiO3_MSSPEC.STO"], [970, "module-ase2sprkkr.examples.A8_ARPES_and_plotting"], [971, "module-ase2sprkkr.examples.A8_ARPES_and_plotting.arpes"], [973, "module-ase2sprkkr.input_parameters"], [974, "module-ase2sprkkr.input_parameters.definitions"], [975, "module-ase2sprkkr.input_parameters.definitions.arpes"], [977, "module-ase2sprkkr.input_parameters.definitions.bsfek"], [979, "module-ase2sprkkr.input_parameters.definitions.bsfkk"], [981, "module-ase2sprkkr.input_parameters.definitions.dos"], [983, "module-ase2sprkkr.input_parameters.definitions.gilbert"], [985, "module-ase2sprkkr.input_parameters.definitions.jxc"], [987, "module-ase2sprkkr.input_parameters.definitions.marpes"], [989, "module-ase2sprkkr.input_parameters.definitions.phagen"], [991, "module-ase2sprkkr.input_parameters.definitions.scf"], [993, "module-ase2sprkkr.input_parameters.definitions.sections"], [1006, "module-ase2sprkkr.input_parameters.input_parameters"], [1009, "module-ase2sprkkr.input_parameters.input_parameters_definitions"], [1013, "module-ase2sprkkr.input_parameters.test"], [1014, "module-ase2sprkkr.input_parameters.test.init_tests"], [1023, "module-ase2sprkkr.input_parameters.test.test_definitions"], [1025, "module-ase2sprkkr.input_parameters.test.test_input_parameters"], [1028, "module-ase2sprkkr.output_files"], [1029, "module-ase2sprkkr.output_files.definitions"], [1034, "module-ase2sprkkr.output_files.definitions.bsf"], [1038, "module-ase2sprkkr.output_files.definitions.dos"], [1043, "module-ase2sprkkr.output_files.definitions.spc"], [1047, "module-ase2sprkkr.output_files.output_files"], [1052, "module-ase2sprkkr.output_files.output_files_definitions"], [1059, "module-ase2sprkkr.output_files.test"], [1060, "module-ase2sprkkr.output_files.test.init_tests"], [1069, "module-ase2sprkkr.output_files.test.test_files"], [1071, "module-ase2sprkkr.outputs"], [1072, "module-ase2sprkkr.outputs.output_definitions"], [1077, "module-ase2sprkkr.outputs.readers"], [1078, "module-ase2sprkkr.outputs.readers.arpes"], [1081, "module-ase2sprkkr.outputs.readers.bsf"], [1084, "module-ase2sprkkr.outputs.readers.default"], [1088, "module-ase2sprkkr.outputs.readers.dos"], [1091, "module-ase2sprkkr.outputs.readers.scf"], [1097, "module-ase2sprkkr.outputs.sprkkr_output_reader"], [1099, "module-ase2sprkkr.outputs.task_result"], [1102, "module-ase2sprkkr.outputs.test"], [1103, "module-ase2sprkkr.outputs.test.init_tests"], [1112, "module-ase2sprkkr.outputs.test.test_output"], [1114, "module-ase2sprkkr.physics"], [1115, "module-ase2sprkkr.physics.lattice_data"], [1119, "module-ase2sprkkr.physics.winger_seitz_radii"], [1121, "module-ase2sprkkr.potentials"], [1122, "module-ase2sprkkr.potentials.custom_potential_section"], [1127, "module-ase2sprkkr.potentials.definitions"], [1128, "module-ase2sprkkr.potentials.definitions.potential"], [1130, "module-ase2sprkkr.potentials.definitions.sections"], [1132, "module-ase2sprkkr.potentials.definitions.sections.charge"], [1137, "module-ase2sprkkr.potentials.definitions.sections.charge_moments"], [1141, "module-ase2sprkkr.potentials.definitions.sections.global_system_parameter"], [1145, "module-ase2sprkkr.potentials.definitions.sections.host_madelung_potential"], [1149, "module-ase2sprkkr.potentials.definitions.sections.lattice"], [1153, "module-ase2sprkkr.potentials.definitions.sections.mesh_information"], [1157, "module-ase2sprkkr.potentials.definitions.sections.moments"], [1162, "module-ase2sprkkr.potentials.definitions.sections.occupation"], [1166, "module-ase2sprkkr.potentials.definitions.sections.potential"], [1171, "module-ase2sprkkr.potentials.definitions.sections.reference_system"], [1175, "module-ase2sprkkr.potentials.definitions.sections.scf_info"], [1179, "module-ase2sprkkr.potentials.definitions.sections.sites"], [1183, "module-ase2sprkkr.potentials.definitions.sections.types"], [1187, "module-ase2sprkkr.potentials.potential_definitions"], [1193, "module-ase2sprkkr.potentials.potential_sections"], [1200, "module-ase2sprkkr.potentials.potentials"], [1202, "module-ase2sprkkr.potentials.test"], [1203, "module-ase2sprkkr.potentials.test.init_tests"], [1212, "module-ase2sprkkr.potentials.test.test_2D"], [1214, "module-ase2sprkkr.potentials.test.test_custom_section"], [1216, "module-ase2sprkkr.potentials.test.test_potential"], [1218, "module-ase2sprkkr.potentials.test.test_structure"], [1220, "module-ase2sprkkr.sprkkr"], [1221, "module-ase2sprkkr.sprkkr.atomic_types"], [1223, "module-ase2sprkkr.sprkkr.atoms_region"], [1225, "module-ase2sprkkr.sprkkr.build"], [1229, "module-ase2sprkkr.sprkkr.calculator"], [1232, "module-ase2sprkkr.sprkkr.configuration"], [1243, "module-ase2sprkkr.sprkkr.io_data"], [1248, "module-ase2sprkkr.sprkkr.moments"], [1250, "module-ase2sprkkr.sprkkr.occupations"], [1252, "module-ase2sprkkr.sprkkr.radial"], [1256, "module-ase2sprkkr.sprkkr.radial_meshes"], [1260, "module-ase2sprkkr.sprkkr.reference_systems"], [1262, "module-ase2sprkkr.sprkkr.sites"], [1265, "module-ase2sprkkr.sprkkr.sprkkr_atoms"], [1267, "module-ase2sprkkr.sprkkr.sprkkr_grammar_types"], [1270, "module-ase2sprkkr.sprkkr.structure"], [1275, "module-ase2sprkkr.sprkkr.sysfile"], [1278, "module-ase2sprkkr.sprkkr.test"], [1279, "module-ase2sprkkr.sprkkr.test.init_tests"], [1288, "module-ase2sprkkr.sprkkr.test.test_arpes"], [1290, "module-ase2sprkkr.sprkkr.test.test_build"], [1292, "module-ase2sprkkr.sprkkr.test.test_calculator"], [1295, "module-ase2sprkkr.sprkkr.test.test_occupation"], [1297, "module-ase2sprkkr.sprkkr.test.test_sites"], [1299, "module-ase2sprkkr.sprkkr.test.test_sprkkr_atoms"], [1301, "module-ase2sprkkr.sprkkr.test.test_sysfile"], [1303, "module-ase2sprkkr.tools"], [1304, "module-ase2sprkkr.tools.ase2sprkkr"], [1306, "module-ase2sprkkr.tools.commands"], [1307, "module-ase2sprkkr.tools.commands.config"], [1311, "module-ase2sprkkr.tools.commands.examples"], [1314, "module-ase2sprkkr.tools.commands.info"], [1319, "module-ase2sprkkr.tools.commands.nomad"], [1329, "module-ase2sprkkr.tools.commands.plot"], [1332, "module-ase2sprkkr.tools.commands.run"], [1335, "module-ase2sprkkr.tools.commands.show_structure"], [1338, "module-ase2sprkkr.tools.commands.test"], [1341, "module-ase2sprkkr.tools.shared"], [1343, "module-ase2sprkkr.tools.test"], [1344, "module-ase2sprkkr.tools.test.init_tests"], [1353, "module-ase2sprkkr.tools.test.test_tools"], [1355, "module-ase2sprkkr.version"], [1356, "module-ase2sprkkr.visualise"], [1357, "module-ase2sprkkr.visualise.plot"]], "ase2sprkkr.ase": [[2, "module-ase2sprkkr.ase"]], "ase2sprkkr.ase.build": [[3, "module-ase2sprkkr.ase.build"]], "aperiodic_times() (in module ase2sprkkr.ase.build)": [[4, "ase2sprkkr.ase.build.aperiodic_times"]], "stack() (in module ase2sprkkr.ase.build)": [[5, "ase2sprkkr.ase.build.stack"]], "ase2sprkkr.ase.io": [[6, "module-ase2sprkkr.ase.io"]], "read_sprkkr() (in module ase2sprkkr.ase.io)": [[7, "ase2sprkkr.ase.io.read_sprkkr"]], "write_sprkkr() (in module ase2sprkkr.ase.io)": [[8, "ase2sprkkr.ase.io.write_sprkkr"]], "ase2sprkkr.ase.pbc": [[9, "module-ase2sprkkr.ase.pbc"]], "check_symmetry() (in module ase2sprkkr.ase.pbc)": [[10, "ase2sprkkr.ase.pbc.check_symmetry"]], "ase2sprkkr.ase.register": [[11, "module-ase2sprkkr.ase.register"]], "ase_register() (in module ase2sprkkr.ase.register)": [[12, "ase2sprkkr.ase.register.ase_register"]], "register() (in module ase2sprkkr.ase.register)": [[13, "ase2sprkkr.ase.register.register"]], "ase2sprkkr.ase.symbols": [[14, "module-ase2sprkkr.ase.symbols"]], "filename_from_symbols() (in module ase2sprkkr.ase.symbols)": [[15, "ase2sprkkr.ase.symbols.filename_from_symbols"]], "pretty_symbols() (in module ase2sprkkr.ase.symbols)": [[16, "ase2sprkkr.ase.symbols.pretty_symbols"]], "ase2sprkkr.ase.test": [[17, "module-ase2sprkkr.ase.test"]], "ase2sprkkr.ase.test.init_tests": [[18, "module-ase2sprkkr.ase.test.init_tests"]], "testcase (class in ase2sprkkr.ase.test.init_tests)": [[19, "ase2sprkkr.ase.test.init_tests.TestCase"]], "__init__() (ase2sprkkr.ase.test.init_tests.testcase method)": [[19, "ase2sprkkr.ase.test.init_tests.TestCase.__init__"]], "_calc_args (ase2sprkkr.ase.test.init_tests.testcase attribute)": [[19, "ase2sprkkr.ase.test.init_tests.TestCase._calc_args"]], "_print_output (ase2sprkkr.ase.test.init_tests.testcase attribute)": [[19, "ase2sprkkr.ase.test.init_tests.TestCase._print_output"]], "almost_equal_precision() (ase2sprkkr.ase.test.init_tests.testcase class method)": [[19, "ase2sprkkr.ase.test.init_tests.TestCase.almost_equal_precision"]], "assertalmostequal() (ase2sprkkr.ase.test.init_tests.testcase method)": [[19, "ase2sprkkr.ase.test.init_tests.TestCase.assertAlmostEqual"]], "assertasyncequal() (ase2sprkkr.ase.test.init_tests.testcase method)": [[19, "ase2sprkkr.ase.test.init_tests.TestCase.assertAsyncEqual"]], "assertasyncraises() (ase2sprkkr.ase.test.init_tests.testcase method)": [[19, "ase2sprkkr.ase.test.init_tests.TestCase.assertAsyncRaises"]], "assertequal() (ase2sprkkr.ase.test.init_tests.testcase method)": [[19, "ase2sprkkr.ase.test.init_tests.TestCase.assertEqual"]], "assertfalse() (ase2sprkkr.ase.test.init_tests.testcase method)": [[19, "ase2sprkkr.ase.test.init_tests.TestCase.assertFalse"]], "assertisnone() (ase2sprkkr.ase.test.init_tests.testcase method)": [[19, "ase2sprkkr.ase.test.init_tests.TestCase.assertIsNone"]], "assertnotequal() (ase2sprkkr.ase.test.init_tests.testcase method)": [[19, "ase2sprkkr.ase.test.init_tests.TestCase.assertNotEqual"]], "assertraises() (ase2sprkkr.ase.test.init_tests.testcase method)": [[19, "ase2sprkkr.ase.test.init_tests.TestCase.assertRaises"]], "asserttrue() (ase2sprkkr.ase.test.init_tests.testcase method)": [[19, "ase2sprkkr.ase.test.init_tests.TestCase.assertTrue"]], "calc_args() (ase2sprkkr.ase.test.init_tests.testcase class method)": [[19, "ase2sprkkr.ase.test.init_tests.TestCase.calc_args"]], "runasync() (ase2sprkkr.ase.test.init_tests.testcase static method)": [[19, "ase2sprkkr.ase.test.init_tests.TestCase.runAsync"]], "run_sprkkr() (ase2sprkkr.ase.test.init_tests.testcase method)": [[19, "ase2sprkkr.ase.test.init_tests.TestCase.run_sprkkr"]], "temporary_dir() (ase2sprkkr.ase.test.init_tests.testcase method)": [[19, "ase2sprkkr.ase.test.init_tests.TestCase.temporary_dir"]], "arr_testfce() (in module ase2sprkkr.ase.test.init_tests)": [[20, "ase2sprkkr.ase.test.init_tests.arr_testfce"]], "assertdictequal() (in module ase2sprkkr.ase.test.init_tests)": [[21, "ase2sprkkr.ase.test.init_tests.assertDictEqual"]], "assertlistequal() (in module ase2sprkkr.ase.test.init_tests)": [[22, "ase2sprkkr.ase.test.init_tests.assertListEqual"]], "assert_almost_equals() (in module ase2sprkkr.ase.test.init_tests)": [[23, "ase2sprkkr.ase.test.init_tests.assert_almost_equals"]], "assert_equals() (in module ase2sprkkr.ase.test.init_tests)": [[24, "ase2sprkkr.ase.test.init_tests.assert_equals"]], "__init__() (ase2sprkkr.ase.test.init_tests.extdict method)": [[25, "ase2sprkkr.ase.test.init_tests.extdict.__init__"]], "extdict (class in ase2sprkkr.ase.test.init_tests)": [[25, "ase2sprkkr.ase.test.init_tests.extdict"]], "testfce() (in module ase2sprkkr.ase.test.init_tests)": [[26, "ase2sprkkr.ase.test.init_tests.testfce"]], "ase2sprkkr.ase.test.test_build": [[27, "module-ase2sprkkr.ase.test.test_build"]], "testbuild (class in ase2sprkkr.ase.test.test_build)": [[28, "ase2sprkkr.ase.test.test_build.TestBuild"]], "__init__() (ase2sprkkr.ase.test.test_build.testbuild method)": [[28, "ase2sprkkr.ase.test.test_build.TestBuild.__init__"]], "test() (ase2sprkkr.ase.test.test_build.testbuild method)": [[28, "ase2sprkkr.ase.test.test_build.TestBuild.test"]], "test_stack() (ase2sprkkr.ase.test.test_build.testbuild method)": [[28, "ase2sprkkr.ase.test.test_build.TestBuild.test_stack"]], "ase2sprkkr.ase.visualise": [[29, "module-ase2sprkkr.ase.visualise"]], "view() (in module ase2sprkkr.ase.visualise)": [[30, "ase2sprkkr.ase.visualise.view"]], "ase2sprkkr.asr": [[31, "module-ase2sprkkr.asr"]], "ase2sprkkr.asr.asr": [[32, "module-ase2sprkkr.asr.asr"]], "ase2sprkkr.asr.bader": [[33, "module-ase2sprkkr.asr.bader"]], "print() (in module ase2sprkkr.asr.bader)": [[34, "ase2sprkkr.asr.bader.print"]], "ase2sprkkr.asr.bandstructure": [[35, "module-ase2sprkkr.asr.bandstructure"]], "result (class in ase2sprkkr.asr.bandstructure)": [[36, "ase2sprkkr.asr.bandstructure.Result"]], "__init__() (ase2sprkkr.asr.bandstructure.result method)": [[36, "ase2sprkkr.asr.bandstructure.Result.__init__"]], "_known_data_keys (ase2sprkkr.asr.bandstructure.result attribute)": [[36, "ase2sprkkr.asr.bandstructure.Result._known_data_keys"]], "bs_nosoc (ase2sprkkr.asr.bandstructure.result property)": [[36, "ase2sprkkr.asr.bandstructure.Result.bs_nosoc"]], "bs_soc (ase2sprkkr.asr.bandstructure.result property)": [[36, "ase2sprkkr.asr.bandstructure.Result.bs_soc"]], "formats (ase2sprkkr.asr.bandstructure.result attribute)": [[36, "ase2sprkkr.asr.bandstructure.Result.formats"]], "key_descriptions (ase2sprkkr.asr.bandstructure.result attribute)": [[36, "ase2sprkkr.asr.bandstructure.Result.key_descriptions"]], "strict (ase2sprkkr.asr.bandstructure.result attribute)": [[36, "ase2sprkkr.asr.bandstructure.Result.strict"]], "version (ase2sprkkr.asr.bandstructure.result attribute)": [[36, "ase2sprkkr.asr.bandstructure.Result.version"]], "add_bs_pbe() (in module ase2sprkkr.asr.bandstructure)": [[37, "ase2sprkkr.asr.bandstructure.add_bs_pbe"]], "bs_pbe() (in module ase2sprkkr.asr.bandstructure)": [[38, "ase2sprkkr.asr.bandstructure.bs_pbe"]], "bs_pbe_html() (in module ase2sprkkr.asr.bandstructure)": [[39, "ase2sprkkr.asr.bandstructure.bs_pbe_html"]], "plot_with_colors() (in module ase2sprkkr.asr.bandstructure)": [[40, "ase2sprkkr.asr.bandstructure.plot_with_colors"]], "webpanel() (in module ase2sprkkr.asr.bandstructure)": [[41, "ase2sprkkr.asr.bandstructure.webpanel"]], "ase2sprkkr.asr.berry": [[42, "module-ase2sprkkr.asr.berry"]], "result (class in ase2sprkkr.asr.berry)": [[43, "ase2sprkkr.asr.berry.Result"]], "topology (ase2sprkkr.asr.berry.result property)": [[43, "ase2sprkkr.asr.berry.Result.Topology"]], "__init__() (ase2sprkkr.asr.berry.result method)": [[43, "ase2sprkkr.asr.berry.Result.__init__"]], "_known_data_keys (ase2sprkkr.asr.berry.result attribute)": [[43, "ase2sprkkr.asr.berry.Result._known_data_keys"]], "formats (ase2sprkkr.asr.berry.result attribute)": [[43, "ase2sprkkr.asr.berry.Result.formats"]], "key_descriptions (ase2sprkkr.asr.berry.result attribute)": [[43, "ase2sprkkr.asr.berry.Result.key_descriptions"]], "strict (ase2sprkkr.asr.berry.result attribute)": [[43, "ase2sprkkr.asr.berry.Result.strict"]], "plot_phases() (in module ase2sprkkr.asr.berry)": [[44, "ase2sprkkr.asr.berry.plot_phases"]], "webpanel() (in module ase2sprkkr.asr.berry)": [[45, "ase2sprkkr.asr.berry.webpanel"]], "ase2sprkkr.asr.borncharges": [[46, "module-ase2sprkkr.asr.borncharges"]], "result (class in ase2sprkkr.asr.borncharges)": [[47, "ase2sprkkr.asr.borncharges.Result"]], "z_avv (ase2sprkkr.asr.borncharges.result property)": [[47, "ase2sprkkr.asr.borncharges.Result.Z_avv"]], "__init__() (ase2sprkkr.asr.borncharges.result method)": [[47, "ase2sprkkr.asr.borncharges.Result.__init__"]], "_known_data_keys (ase2sprkkr.asr.borncharges.result attribute)": [[47, "ase2sprkkr.asr.borncharges.Result._known_data_keys"]], "formats (ase2sprkkr.asr.borncharges.result attribute)": [[47, "ase2sprkkr.asr.borncharges.Result.formats"]], "key_descriptions (ase2sprkkr.asr.borncharges.result attribute)": [[47, "ase2sprkkr.asr.borncharges.Result.key_descriptions"]], "strict (ase2sprkkr.asr.borncharges.result attribute)": [[47, "ase2sprkkr.asr.borncharges.Result.strict"]], "sym_a (ase2sprkkr.asr.borncharges.result property)": [[47, "ase2sprkkr.asr.borncharges.Result.sym_a"]], "webpanel() (in module ase2sprkkr.asr.borncharges)": [[48, "ase2sprkkr.asr.borncharges.webpanel"]], "ase2sprkkr.asr.bse": [[49, "module-ase2sprkkr.asr.bse"]], "e_b (ase2sprkkr.asr.bse.result property)": [[50, "ase2sprkkr.asr.bse.Result.E_B"]], "result (class in ase2sprkkr.asr.bse)": [[50, "ase2sprkkr.asr.bse.Result"]], "__init__() (ase2sprkkr.asr.bse.result method)": [[50, "ase2sprkkr.asr.bse.Result.__init__"]], "_known_data_keys (ase2sprkkr.asr.bse.result attribute)": [[50, "ase2sprkkr.asr.bse.Result._known_data_keys"]], "bse_alphax_w (ase2sprkkr.asr.bse.result property)": [[50, "ase2sprkkr.asr.bse.Result.bse_alphax_w"]], "bse_alphay_w (ase2sprkkr.asr.bse.result property)": [[50, "ase2sprkkr.asr.bse.Result.bse_alphay_w"]], "bse_alphaz_w (ase2sprkkr.asr.bse.result property)": [[50, "ase2sprkkr.asr.bse.Result.bse_alphaz_w"]], "formats (ase2sprkkr.asr.bse.result attribute)": [[50, "ase2sprkkr.asr.bse.Result.formats"]], "key_descriptions (ase2sprkkr.asr.bse.result attribute)": [[50, "ase2sprkkr.asr.bse.Result.key_descriptions"]], "strict (ase2sprkkr.asr.bse.result attribute)": [[50, "ase2sprkkr.asr.bse.Result.strict"]], "absorption() (in module ase2sprkkr.asr.bse)": [[51, "ase2sprkkr.asr.bse.absorption"]], "get_kpts_size() (in module ase2sprkkr.asr.bse)": [[52, "ase2sprkkr.asr.bse.get_kpts_size"]], "webpanel() (in module ase2sprkkr.asr.bse)": [[53, "ase2sprkkr.asr.bse.webpanel"]], "ase2sprkkr.asr.calculators": [[54, "module-ase2sprkkr.asr.calculators"]], "get_calculator() (in module ase2sprkkr.asr.calculators)": [[55, "ase2sprkkr.asr.calculators.get_calculator"]], "ase2sprkkr.asr.chc": [[56, "module-ase2sprkkr.asr.chc"]], "chcerror": [[57, "ase2sprkkr.asr.chc.CHCError"]], "convexhullreference (class in ase2sprkkr.asr.chc)": [[58, "ase2sprkkr.asr.chc.ConvexHullReference"]], "__init__() (ase2sprkkr.asr.chc.convexhullreference method)": [[58, "ase2sprkkr.asr.chc.ConvexHullReference.__init__"]], "_construct_coordinates() (ase2sprkkr.asr.chc.convexhullreference method)": [[58, "ase2sprkkr.asr.chc.ConvexHullReference._construct_coordinates"]], "from_reference() (ase2sprkkr.asr.chc.convexhullreference method)": [[58, "ase2sprkkr.asr.chc.ConvexHullReference.from_reference"]], "is_single() (ase2sprkkr.asr.chc.convexhullreference method)": [[58, "ase2sprkkr.asr.chc.ConvexHullReference.is_single"]], "hyperplane (class in ase2sprkkr.asr.chc)": [[59, "ase2sprkkr.asr.chc.Hyperplane"]], "__init__() (ase2sprkkr.asr.chc.hyperplane method)": [[59, "ase2sprkkr.asr.chc.Hyperplane.__init__"]], "contains() (ase2sprkkr.asr.chc.hyperplane method)": [[59, "ase2sprkkr.asr.chc.Hyperplane.contains"]], "find_ts() (ase2sprkkr.asr.chc.hyperplane method)": [[59, "ase2sprkkr.asr.chc.Hyperplane.find_ts"]], "intermediate (class in ase2sprkkr.asr.chc)": [[60, "ase2sprkkr.asr.chc.Intermediate"]], "__init__() (ase2sprkkr.asr.chc.intermediate method)": [[60, "ase2sprkkr.asr.chc.Intermediate.__init__"]], "_get_hform_data() (ase2sprkkr.asr.chc.intermediate method)": [[60, "ase2sprkkr.asr.chc.Intermediate._get_hform_data"]], "from_dict() (ase2sprkkr.asr.chc.intermediate method)": [[60, "ase2sprkkr.asr.chc.Intermediate.from_dict"]], "label (ase2sprkkr.asr.chc.intermediate property)": [[60, "ase2sprkkr.asr.chc.Intermediate.label"]], "reactant_content (ase2sprkkr.asr.chc.intermediate property)": [[60, "ase2sprkkr.asr.chc.Intermediate.reactant_content"]], "to_dict() (ase2sprkkr.asr.chc.intermediate method)": [[60, "ase2sprkkr.asr.chc.Intermediate.to_dict"]], "to_result() (ase2sprkkr.asr.chc.intermediate method)": [[60, "ase2sprkkr.asr.chc.Intermediate.to_result"]], "leanintermediate (class in ase2sprkkr.asr.chc)": [[61, "ase2sprkkr.asr.chc.LeanIntermediate"]], "__init__() (ase2sprkkr.asr.chc.leanintermediate method)": [[61, "ase2sprkkr.asr.chc.LeanIntermediate.__init__"]], "from_dict() (ase2sprkkr.asr.chc.leanintermediate method)": [[61, "ase2sprkkr.asr.chc.LeanIntermediate.from_dict"]], "to_dict() (ase2sprkkr.asr.chc.leanintermediate method)": [[61, "ase2sprkkr.asr.chc.LeanIntermediate.to_dict"]], "to_result() (ase2sprkkr.asr.chc.leanintermediate method)": [[61, "ase2sprkkr.asr.chc.LeanIntermediate.to_result"]], "line (class in ase2sprkkr.asr.chc)": [[62, "ase2sprkkr.asr.chc.Line"]], "__init__() (ase2sprkkr.asr.chc.line method)": [[62, "ase2sprkkr.asr.chc.Line.__init__"]], "find_s() (ase2sprkkr.asr.chc.line method)": [[62, "ase2sprkkr.asr.chc.Line.find_s"]], "intersects() (ase2sprkkr.asr.chc.line method)": [[62, "ase2sprkkr.asr.chc.Line.intersects"]], "reference (class in ase2sprkkr.asr.chc)": [[63, "ase2sprkkr.asr.chc.Reference"]], "__init__() (ase2sprkkr.asr.chc.reference method)": [[63, "ase2sprkkr.asr.chc.Reference.__init__"]], "from_dict() (ase2sprkkr.asr.chc.reference method)": [[63, "ase2sprkkr.asr.chc.Reference.from_dict"]], "natoms (ase2sprkkr.asr.chc.reference property)": [[63, "ase2sprkkr.asr.chc.Reference.natoms"]], "to_dict() (ase2sprkkr.asr.chc.reference method)": [[63, "ase2sprkkr.asr.chc.Reference.to_dict"]], "to_elements() (ase2sprkkr.asr.chc.reference method)": [[63, "ase2sprkkr.asr.chc.Reference.to_elements"]], "result (class in ase2sprkkr.asr.chc)": [[64, "ase2sprkkr.asr.chc.Result"]], "__init__() (ase2sprkkr.asr.chc.result method)": [[64, "ase2sprkkr.asr.chc.Result.__init__"]], "_known_data_keys (ase2sprkkr.asr.chc.result attribute)": [[64, "ase2sprkkr.asr.chc.Result._known_data_keys"]], "formats (ase2sprkkr.asr.chc.result attribute)": [[64, "ase2sprkkr.asr.chc.Result.formats"]], "strict (ase2sprkkr.asr.chc.result attribute)": [[64, "ase2sprkkr.asr.chc.Result.strict"]], "_permutecontain() (in module ase2sprkkr.asr.chc)": [[65, "ase2sprkkr.asr.chc._permutecontain"]], "append_references() (in module ase2sprkkr.asr.chc)": [[66, "ase2sprkkr.asr.chc.append_references"]], "calculate_intermediates() (in module ase2sprkkr.asr.chc)": [[67, "ase2sprkkr.asr.chc.calculate_intermediates"]], "chcut_plot() (in module ase2sprkkr.asr.chc)": [[68, "ase2sprkkr.asr.chc.chcut_plot"]], "convex_hull() (in module ase2sprkkr.asr.chc)": [[69, "ase2sprkkr.asr.chc.convex_hull"]], "convex_hull_planes() (in module ase2sprkkr.asr.chc)": [[70, "ase2sprkkr.asr.chc.convex_hull_planes"]], "filrefs() (in module ase2sprkkr.asr.chc)": [[71, "ase2sprkkr.asr.chc.filrefs"]], "get_coords() (in module ase2sprkkr.asr.chc)": [[72, "ase2sprkkr.asr.chc.get_coords"]], "get_hof() (in module ase2sprkkr.asr.chc)": [[73, "ase2sprkkr.asr.chc.get_hof"]], "gscheck() (in module ase2sprkkr.asr.chc)": [[74, "ase2sprkkr.asr.chc.gscheck"]], "is_collinear() (in module ase2sprkkr.asr.chc)": [[75, "ase2sprkkr.asr.chc.is_collinear"]], "is_independent() (in module ase2sprkkr.asr.chc)": [[76, "ase2sprkkr.asr.chc.is_independent"]], "mgs() (in module ase2sprkkr.asr.chc)": [[77, "ase2sprkkr.asr.chc.mgs"]], "mgsls() (in module ase2sprkkr.asr.chc)": [[78, "ase2sprkkr.asr.chc.mgsls"]], "mu_adjustment() (in module ase2sprkkr.asr.chc)": [[79, "ase2sprkkr.asr.chc.mu_adjustment"]], "orthogonalize() (in module ase2sprkkr.asr.chc)": [[80, "ase2sprkkr.asr.chc.orthogonalize"]], "projuv() (in module ase2sprkkr.asr.chc)": [[81, "ase2sprkkr.asr.chc.projuv"]], "read_structure() (in module ase2sprkkr.asr.chc)": [[82, "ase2sprkkr.asr.chc.read_structure"]], "refs2ims() (in module ase2sprkkr.asr.chc)": [[83, "ase2sprkkr.asr.chc.refs2ims"]], "results2ref() (in module ase2sprkkr.asr.chc)": [[84, "ase2sprkkr.asr.chc.results2ref"]], "row2ref() (in module ase2sprkkr.asr.chc)": [[85, "ase2sprkkr.asr.chc.row2ref"]], "tuplespermuted() (in module ase2sprkkr.asr.chc)": [[86, "ase2sprkkr.asr.chc.tuplespermuted"]], "webpanel() (in module ase2sprkkr.asr.chc)": [[87, "ase2sprkkr.asr.chc.webpanel"]], "ase2sprkkr.asr.convex_hull": [[88, "module-ase2sprkkr.asr.convex_hull"]], "result (class in ase2sprkkr.asr.convex_hull)": [[89, "ase2sprkkr.asr.convex_hull.Result"]], "__init__() (ase2sprkkr.asr.convex_hull.result method)": [[89, "ase2sprkkr.asr.convex_hull.Result.__init__"]], "_known_data_keys (ase2sprkkr.asr.convex_hull.result attribute)": [[89, "ase2sprkkr.asr.convex_hull.Result._known_data_keys"]], "coefs (ase2sprkkr.asr.convex_hull.result property)": [[89, "ase2sprkkr.asr.convex_hull.Result.coefs"]], "ehull (ase2sprkkr.asr.convex_hull.result property)": [[89, "ase2sprkkr.asr.convex_hull.Result.ehull"]], "formats (ase2sprkkr.asr.convex_hull.result attribute)": [[89, "ase2sprkkr.asr.convex_hull.Result.formats"]], "hform (ase2sprkkr.asr.convex_hull.result property)": [[89, "ase2sprkkr.asr.convex_hull.Result.hform"]], "indices (ase2sprkkr.asr.convex_hull.result property)": [[89, "ase2sprkkr.asr.convex_hull.Result.indices"]], "key_descriptions (ase2sprkkr.asr.convex_hull.result attribute)": [[89, "ase2sprkkr.asr.convex_hull.Result.key_descriptions"]], "references (ase2sprkkr.asr.convex_hull.result property)": [[89, "ase2sprkkr.asr.convex_hull.Result.references"]], "strict (ase2sprkkr.asr.convex_hull.result attribute)": [[89, "ase2sprkkr.asr.convex_hull.Result.strict"]], "thermodynamic_stability_level (ase2sprkkr.asr.convex_hull.result property)": [[89, "ase2sprkkr.asr.convex_hull.Result.thermodynamic_stability_level"]], "convex_hull_tables() (in module ase2sprkkr.asr.convex_hull)": [[90, "ase2sprkkr.asr.convex_hull.convex_hull_tables"]], "get_reference_energies() (in module ase2sprkkr.asr.convex_hull)": [[91, "ase2sprkkr.asr.convex_hull.get_reference_energies"]], "hof() (in module ase2sprkkr.asr.convex_hull)": [[92, "ase2sprkkr.asr.convex_hull.hof"]], "plot() (in module ase2sprkkr.asr.convex_hull)": [[93, "ase2sprkkr.asr.convex_hull.plot"]], "select_references() (in module ase2sprkkr.asr.convex_hull)": [[94, "ase2sprkkr.asr.convex_hull.select_references"]], "webpanel() (in module ase2sprkkr.asr.convex_hull)": [[95, "ase2sprkkr.asr.convex_hull.webpanel"]], "ase2sprkkr.asr.core": [[96, "module-ase2sprkkr.asr.core"]], "ase2sprkkr.asr.core.cli": [[97, "module-ase2sprkkr.asr.core.cli"]], "append_job() (in module ase2sprkkr.asr.core.cli)": [[98, "ase2sprkkr.asr.core.cli.append_job"]], "check_git() (in module ase2sprkkr.asr.core.cli)": [[99, "ase2sprkkr.asr.core.cli.check_git"]], "extract_hash_from_file() (in module ase2sprkkr.asr.core.cli)": [[100, "ase2sprkkr.asr.core.cli.extract_hash_from_file"]], "format() (in module ase2sprkkr.asr.core.cli)": [[101, "ase2sprkkr.asr.core.cli.format"]], "get_config_dir() (in module ase2sprkkr.asr.core.cli)": [[102, "ase2sprkkr.asr.core.cli.get_config_dir"]], "get_git_rev_list() (in module ase2sprkkr.asr.core.cli)": [[103, "ase2sprkkr.asr.core.cli.get_git_rev_list"]], "initialize_asr_configuration_dir() (in module ase2sprkkr.asr.core.cli)": [[104, "ase2sprkkr.asr.core.cli.initialize_asr_configuration_dir"]], "is_asr_initialized() (in module ase2sprkkr.asr.core.cli)": [[105, "ase2sprkkr.asr.core.cli.is_asr_initialized"]], "run_command() (in module ase2sprkkr.asr.core.cli)": [[106, "ase2sprkkr.asr.core.cli.run_command"]], "ase2sprkkr.asr.core.command": [[107, "module-ase2sprkkr.asr.core.command"]], "ase2sprkkr.asr.core.fix_old_files": [[108, "module-ase2sprkkr.asr.core.fix_old_files"]], "is_results_file() (in module ase2sprkkr.asr.core.fix_old_files)": [[109, "ase2sprkkr.asr.core.fix_old_files.is_results_file"]], "ase2sprkkr.asr.core.material": [[110, "module-ase2sprkkr.asr.core.material"]], "material (class in ase2sprkkr.asr.core.material)": [[111, "ase2sprkkr.asr.core.material.Material"]], "__init__() (ase2sprkkr.asr.core.material.material method)": [[111, "ase2sprkkr.asr.core.material.Material.__init__"]], "get() (ase2sprkkr.asr.core.material.material method)": [[111, "ase2sprkkr.asr.core.material.Material.get"]], "toatoms() (ase2sprkkr.asr.core.material.material method)": [[111, "ase2sprkkr.asr.core.material.Material.toatoms"]], "get_material_from_folder() (in module ase2sprkkr.asr.core.material)": [[112, "ase2sprkkr.asr.core.material.get_material_from_folder"]], "get_webpanels_from_material() (in module ase2sprkkr.asr.core.material)": [[113, "ase2sprkkr.asr.core.material.get_webpanels_from_material"]], "make_panel_figures() (in module ase2sprkkr.asr.core.material)": [[114, "ase2sprkkr.asr.core.material.make_panel_figures"]], "ase2sprkkr.asr.core.results": [[115, "module-ase2sprkkr.asr.core.results"]], "asrresult (class in ase2sprkkr.asr.core.results)": [[116, "ase2sprkkr.asr.core.results.ASRResult"]], "__init__() (ase2sprkkr.asr.core.results.asrresult method)": [[116, "ase2sprkkr.asr.core.results.ASRResult.__init__"]], "data (ase2sprkkr.asr.core.results.asrresult property)": [[116, "ase2sprkkr.asr.core.results.ASRResult.data"]], "format_as() (ase2sprkkr.asr.core.results.asrresult method)": [[116, "ase2sprkkr.asr.core.results.ASRResult.format_as"]], "formats (ase2sprkkr.asr.core.results.asrresult attribute)": [[116, "ase2sprkkr.asr.core.results.ASRResult.formats"]], "from_format() (ase2sprkkr.asr.core.results.asrresult class method)": [[116, "ase2sprkkr.asr.core.results.ASRResult.from_format"]], "fromdata() (ase2sprkkr.asr.core.results.asrresult class method)": [[116, "ase2sprkkr.asr.core.results.ASRResult.fromdata"]], "fromdict() (ase2sprkkr.asr.core.results.asrresult class method)": [[116, "ase2sprkkr.asr.core.results.ASRResult.fromdict"]], "get() (ase2sprkkr.asr.core.results.asrresult method)": [[116, "ase2sprkkr.asr.core.results.ASRResult.get"]], "get_formats() (ase2sprkkr.asr.core.results.asrresult class method)": [[116, "ase2sprkkr.asr.core.results.ASRResult.get_formats"]], "get_obj_id() (ase2sprkkr.asr.core.results.asrresult class method)": [[116, "ase2sprkkr.asr.core.results.ASRResult.get_obj_id"]], "get_object_desc() (ase2sprkkr.asr.core.results.asrresult method)": [[116, "ase2sprkkr.asr.core.results.ASRResult.get_object_desc"]], "items() (ase2sprkkr.asr.core.results.asrresult method)": [[116, "ase2sprkkr.asr.core.results.ASRResult.items"]], "key_descriptions (ase2sprkkr.asr.core.results.asrresult attribute)": [[116, "ase2sprkkr.asr.core.results.ASRResult.key_descriptions"]], "keys() (ase2sprkkr.asr.core.results.asrresult method)": [[116, "ase2sprkkr.asr.core.results.ASRResult.keys"]], "metadata (ase2sprkkr.asr.core.results.asrresult property)": [[116, "ase2sprkkr.asr.core.results.ASRResult.metadata"]], "prev_version (ase2sprkkr.asr.core.results.asrresult attribute)": [[116, "ase2sprkkr.asr.core.results.ASRResult.prev_version"]], "strict (ase2sprkkr.asr.core.results.asrresult attribute)": [[116, "ase2sprkkr.asr.core.results.ASRResult.strict"]], "todict() (ase2sprkkr.asr.core.results.asrresult method)": [[116, "ase2sprkkr.asr.core.results.ASRResult.todict"]], "values() (ase2sprkkr.asr.core.results.asrresult method)": [[116, "ase2sprkkr.asr.core.results.ASRResult.values"]], "version (ase2sprkkr.asr.core.results.asrresult attribute)": [[116, "ase2sprkkr.asr.core.results.ASRResult.version"]], "dictencoder (class in ase2sprkkr.asr.core.results)": [[117, "ase2sprkkr.asr.core.results.DictEncoder"]], "__init__() (ase2sprkkr.asr.core.results.dictencoder method)": [[117, "ase2sprkkr.asr.core.results.DictEncoder.__init__"]], "_abc_impl (ase2sprkkr.asr.core.results.dictencoder attribute)": [[117, "ase2sprkkr.asr.core.results.DictEncoder._abc_impl"]], "decode() (ase2sprkkr.asr.core.results.dictencoder method)": [[117, "ase2sprkkr.asr.core.results.DictEncoder.decode"]], "encode() (ase2sprkkr.asr.core.results.dictencoder method)": [[117, "ase2sprkkr.asr.core.results.DictEncoder.encode"]], "htmlencoder (class in ase2sprkkr.asr.core.results)": [[118, "ase2sprkkr.asr.core.results.HTMLEncoder"]], "__init__() (ase2sprkkr.asr.core.results.htmlencoder method)": [[118, "ase2sprkkr.asr.core.results.HTMLEncoder.__init__"]], "_abc_impl (ase2sprkkr.asr.core.results.htmlencoder attribute)": [[118, "ase2sprkkr.asr.core.results.HTMLEncoder._abc_impl"]], "encode() (ase2sprkkr.asr.core.results.htmlencoder method)": [[118, "ase2sprkkr.asr.core.results.HTMLEncoder.encode"]], "hackedasrresult (class in ase2sprkkr.asr.core.results)": [[119, "ase2sprkkr.asr.core.results.HackedASRResult"]], "__init__() (ase2sprkkr.asr.core.results.hackedasrresult method)": [[119, "ase2sprkkr.asr.core.results.HackedASRResult.__init__"]], "jsonencoder (class in ase2sprkkr.asr.core.results)": [[120, "ase2sprkkr.asr.core.results.JSONEncoder"]], "__init__() (ase2sprkkr.asr.core.results.jsonencoder method)": [[120, "ase2sprkkr.asr.core.results.JSONEncoder.__init__"]], "_abc_impl (ase2sprkkr.asr.core.results.jsonencoder attribute)": [[120, "ase2sprkkr.asr.core.results.JSONEncoder._abc_impl"]], "decode() (ase2sprkkr.asr.core.results.jsonencoder method)": [[120, "ase2sprkkr.asr.core.results.JSONEncoder.decode"]], "encode() (ase2sprkkr.asr.core.results.jsonencoder method)": [[120, "ase2sprkkr.asr.core.results.JSONEncoder.encode"]], "metadata (class in ase2sprkkr.asr.core.results)": [[121, "ase2sprkkr.asr.core.results.MetaData"]], "__init__() (ase2sprkkr.asr.core.results.metadata method)": [[121, "ase2sprkkr.asr.core.results.MetaData.__init__"]], "_get() (ase2sprkkr.asr.core.results.metadata method)": [[121, "ase2sprkkr.asr.core.results.MetaData._get"]], "_set() (ase2sprkkr.asr.core.results.metadata method)": [[121, "ase2sprkkr.asr.core.results.MetaData._set"]], "accepted_keys (ase2sprkkr.asr.core.results.metadata attribute)": [[121, "ase2sprkkr.asr.core.results.MetaData.accepted_keys"]], "asr_name (ase2sprkkr.asr.core.results.metadata property)": [[121, "ase2sprkkr.asr.core.results.MetaData.asr_name"]], "code_versions (ase2sprkkr.asr.core.results.metadata property)": [[121, "ase2sprkkr.asr.core.results.MetaData.code_versions"]], "creates (ase2sprkkr.asr.core.results.metadata property)": [[121, "ase2sprkkr.asr.core.results.MetaData.creates"]], "params (ase2sprkkr.asr.core.results.metadata property)": [[121, "ase2sprkkr.asr.core.results.MetaData.params"]], "requires (ase2sprkkr.asr.core.results.metadata property)": [[121, "ase2sprkkr.asr.core.results.MetaData.requires"]], "resources (ase2sprkkr.asr.core.results.metadata property)": [[121, "ase2sprkkr.asr.core.results.MetaData.resources"]], "set() (ase2sprkkr.asr.core.results.metadata method)": [[121, "ase2sprkkr.asr.core.results.MetaData.set"]], "todict() (ase2sprkkr.asr.core.results.metadata method)": [[121, "ase2sprkkr.asr.core.results.MetaData.todict"]], "validate() (ase2sprkkr.asr.core.results.metadata method)": [[121, "ase2sprkkr.asr.core.results.MetaData.validate"]], "metadatanotseterror": [[122, "ase2sprkkr.asr.core.results.MetaDataNotSetError"]], "objectdescription (class in ase2sprkkr.asr.core.results)": [[123, "ase2sprkkr.asr.core.results.ObjectDescription"]], "__init__() (ase2sprkkr.asr.core.results.objectdescription method)": [[123, "ase2sprkkr.asr.core.results.ObjectDescription.__init__"]], "args (ase2sprkkr.asr.core.results.objectdescription property)": [[123, "ase2sprkkr.asr.core.results.ObjectDescription.args"]], "constructor (ase2sprkkr.asr.core.results.objectdescription property)": [[123, "ase2sprkkr.asr.core.results.ObjectDescription.constructor"]], "fromdict() (ase2sprkkr.asr.core.results.objectdescription class method)": [[123, "ase2sprkkr.asr.core.results.ObjectDescription.fromdict"]], "instantiate() (ase2sprkkr.asr.core.results.objectdescription method)": [[123, "ase2sprkkr.asr.core.results.ObjectDescription.instantiate"]], "kwargs (ase2sprkkr.asr.core.results.objectdescription property)": [[123, "ase2sprkkr.asr.core.results.ObjectDescription.kwargs"]], "object_id (ase2sprkkr.asr.core.results.objectdescription property)": [[123, "ase2sprkkr.asr.core.results.ObjectDescription.object_id"]], "todict() (ase2sprkkr.asr.core.results.objectdescription method)": [[123, "ase2sprkkr.asr.core.results.ObjectDescription.todict"]], "resultencoder (class in ase2sprkkr.asr.core.results)": [[124, "ase2sprkkr.asr.core.results.ResultEncoder"]], "__init__() (ase2sprkkr.asr.core.results.resultencoder method)": [[124, "ase2sprkkr.asr.core.results.ResultEncoder.__init__"]], "_abc_impl (ase2sprkkr.asr.core.results.resultencoder attribute)": [[124, "ase2sprkkr.asr.core.results.ResultEncoder._abc_impl"]], "decode() (ase2sprkkr.asr.core.results.resultencoder method)": [[124, "ase2sprkkr.asr.core.results.ResultEncoder.decode"]], "encode() (ase2sprkkr.asr.core.results.resultencoder method)": [[124, "ase2sprkkr.asr.core.results.ResultEncoder.encode"]], "unknownasrresultformat": [[125, "ase2sprkkr.asr.core.results.UnknownASRResultFormat"]], "unknowndataformat": [[126, "ase2sprkkr.asr.core.results.UnknownDataFormat"]], "webpanelencoder (class in ase2sprkkr.asr.core.results)": [[127, "ase2sprkkr.asr.core.results.WebPanelEncoder"]], "__init__() (ase2sprkkr.asr.core.results.webpanelencoder method)": [[127, "ase2sprkkr.asr.core.results.WebPanelEncoder.__init__"]], "_abc_impl (ase2sprkkr.asr.core.results.webpanelencoder attribute)": [[127, "ase2sprkkr.asr.core.results.WebPanelEncoder._abc_impl"]], "encode() (ase2sprkkr.asr.core.results.webpanelencoder method)": [[127, "ase2sprkkr.asr.core.results.WebPanelEncoder.encode"]], "data_to_dict() (in module ase2sprkkr.asr.core.results)": [[128, "ase2sprkkr.asr.core.results.data_to_dict"]], "dct_to_result() (in module ase2sprkkr.asr.core.results)": [[129, "ase2sprkkr.asr.core.results.dct_to_result"]], "find_class_matching_version() (in module ase2sprkkr.asr.core.results)": [[130, "ase2sprkkr.asr.core.results.find_class_matching_version"]], "format_key_description_pair() (in module ase2sprkkr.asr.core.results)": [[131, "ase2sprkkr.asr.core.results.format_key_description_pair"]], "get_key_descriptions() (in module ase2sprkkr.asr.core.results)": [[132, "ase2sprkkr.asr.core.results.get_key_descriptions"]], "get_object_matching_obj_id() (in module ase2sprkkr.asr.core.results)": [[133, "ase2sprkkr.asr.core.results.get_object_matching_obj_id"]], "get_object_types() (in module ase2sprkkr.asr.core.results)": [[134, "ase2sprkkr.asr.core.results.get_object_types"]], "get_reader_function() (in module ase2sprkkr.asr.core.results)": [[135, "ase2sprkkr.asr.core.results.get_reader_function"]], "make_property() (in module ase2sprkkr.asr.core.results)": [[136, "ase2sprkkr.asr.core.results.make_property"]], "obj_to_id() (in module ase2sprkkr.asr.core.results)": [[137, "ase2sprkkr.asr.core.results.obj_to_id"]], "object_description_to_object() (in module ase2sprkkr.asr.core.results)": [[138, "ase2sprkkr.asr.core.results.object_description_to_object"]], "prepare_result() (in module ase2sprkkr.asr.core.results)": [[139, "ase2sprkkr.asr.core.results.prepare_result"]], "read_hacked_data() (in module ase2sprkkr.asr.core.results)": [[140, "ase2sprkkr.asr.core.results.read_hacked_data"]], "read_new_data() (in module ase2sprkkr.asr.core.results)": [[141, "ase2sprkkr.asr.core.results.read_new_data"]], "read_old_data() (in module ase2sprkkr.asr.core.results)": [[142, "ase2sprkkr.asr.core.results.read_old_data"]], "ase2sprkkr.asr.core.types": [[143, "module-ase2sprkkr.asr.core.types"]], "atomsfile (class in ase2sprkkr.asr.core.types)": [[144, "ase2sprkkr.asr.core.types.AtomsFile"]], "__init__() (ase2sprkkr.asr.core.types.atomsfile method)": [[144, "ase2sprkkr.asr.core.types.AtomsFile.__init__"]], "convert() (ase2sprkkr.asr.core.types.atomsfile method)": [[144, "ase2sprkkr.asr.core.types.AtomsFile.convert"]], "name (ase2sprkkr.asr.core.types.atomsfile attribute)": [[144, "ase2sprkkr.asr.core.types.AtomsFile.name"]], "dictstr (class in ase2sprkkr.asr.core.types)": [[145, "ase2sprkkr.asr.core.types.DictStr"]], "__init__() (ase2sprkkr.asr.core.types.dictstr method)": [[145, "ase2sprkkr.asr.core.types.DictStr.__init__"]], "convert() (ase2sprkkr.asr.core.types.dictstr method)": [[145, "ase2sprkkr.asr.core.types.DictStr.convert"]], "name (ase2sprkkr.asr.core.types.dictstr attribute)": [[145, "ase2sprkkr.asr.core.types.DictStr.name"]], "clickify_docstring() (in module ase2sprkkr.asr.core.types)": [[146, "ase2sprkkr.asr.core.types.clickify_docstring"]], "ase2sprkkr.asr.core.utils": [[147, "module-ase2sprkkr.asr.core.utils"]], "chdir() (in module ase2sprkkr.asr.core.utils)": [[148, "ase2sprkkr.asr.core.utils.chdir"]], "dct_to_object() (in module ase2sprkkr.asr.core.utils)": [[149, "ase2sprkkr.asr.core.utils.dct_to_object"]], "encode_json() (in module ase2sprkkr.asr.core.utils)": [[150, "ase2sprkkr.asr.core.utils.encode_json"]], "file_barrier() (in module ase2sprkkr.asr.core.utils)": [[151, "ase2sprkkr.asr.core.utils.file_barrier"]], "get_dep_tree() (in module ase2sprkkr.asr.core.utils)": [[152, "ase2sprkkr.asr.core.utils.get_dep_tree"]], "get_recipe_from_name() (in module ase2sprkkr.asr.core.utils)": [[153, "ase2sprkkr.asr.core.utils.get_recipe_from_name"]], "md5sum() (in module ase2sprkkr.asr.core.utils)": [[154, "ase2sprkkr.asr.core.utils.md5sum"]], "parse_dict_string() (in module ase2sprkkr.asr.core.utils)": [[155, "ase2sprkkr.asr.core.utils.parse_dict_string"]], "parse_mod_func() (in module ase2sprkkr.asr.core.utils)": [[156, "ase2sprkkr.asr.core.utils.parse_mod_func"]], "read_json() (in module ase2sprkkr.asr.core.utils)": [[157, "ase2sprkkr.asr.core.utils.read_json"]], "recursive_update() (in module ase2sprkkr.asr.core.utils)": [[158, "ase2sprkkr.asr.core.utils.recursive_update"]], "singleprec_dict() (in module ase2sprkkr.asr.core.utils)": [[159, "ase2sprkkr.asr.core.utils.singleprec_dict"]], "unlink() (in module ase2sprkkr.asr.core.utils)": [[160, "ase2sprkkr.asr.core.utils.unlink"]], "write_file() (in module ase2sprkkr.asr.core.utils)": [[161, "ase2sprkkr.asr.core.utils.write_file"]], "write_json() (in module ase2sprkkr.asr.core.utils)": [[162, "ase2sprkkr.asr.core.utils.write_json"]], "ase2sprkkr.asr.database": [[163, "module-ase2sprkkr.asr.database"]], "ase2sprkkr.asr.database.browser": [[164, "module-ase2sprkkr.asr.database.browser"]], "rowwrapper (class in ase2sprkkr.asr.database.browser)": [[165, "ase2sprkkr.asr.database.browser.RowWrapper"]], "__init__() (ase2sprkkr.asr.database.browser.rowwrapper method)": [[165, "ase2sprkkr.asr.database.browser.RowWrapper.__init__"]], "create_table() (in module ase2sprkkr.asr.database.browser)": [[166, "ase2sprkkr.asr.database.browser.create_table"]], "describe_entries() (in module ase2sprkkr.asr.database.browser)": [[167, "ase2sprkkr.asr.database.browser.describe_entries"]], "describe_entry() (in module ase2sprkkr.asr.database.browser)": [[168, "ase2sprkkr.asr.database.browser.describe_entry"]], "dict_to_list() (in module ase2sprkkr.asr.database.browser)": [[169, "ase2sprkkr.asr.database.browser.dict_to_list"]], "entry_parameter_description() (in module ase2sprkkr.asr.database.browser)": [[170, "ase2sprkkr.asr.database.browser.entry_parameter_description"]], "extract_recipe_from_filename() (in module ase2sprkkr.asr.database.browser)": [[171, "ase2sprkkr.asr.database.browser.extract_recipe_from_filename"]], "fig() (in module ase2sprkkr.asr.database.browser)": [[172, "ase2sprkkr.asr.database.browser.fig"]], "is_results_file() (in module ase2sprkkr.asr.database.browser)": [[173, "ase2sprkkr.asr.database.browser.is_results_file"]], "layout() (in module ase2sprkkr.asr.database.browser)": [[174, "ase2sprkkr.asr.database.browser.layout"]], "merge_panels() (in module ase2sprkkr.asr.database.browser)": [[175, "ase2sprkkr.asr.database.browser.merge_panels"]], "miscellaneous_section() (in module ase2sprkkr.asr.database.browser)": [[176, "ase2sprkkr.asr.database.browser.miscellaneous_section"]], "table() (in module ase2sprkkr.asr.database.browser)": [[177, "ase2sprkkr.asr.database.browser.table"]], "val2str() (in module ase2sprkkr.asr.database.browser)": [[178, "ase2sprkkr.asr.database.browser.val2str"]], "ase2sprkkr.asr.database.check": [[179, "module-ase2sprkkr.asr.database.check"]], "ase2sprkkr.asr.database.clonetree": [[180, "module-ase2sprkkr.asr.database.clonetree"]], "ase2sprkkr.asr.database.duplicates": [[181, "module-ase2sprkkr.asr.database.duplicates"]], "compare() (in module ase2sprkkr.asr.database.duplicates)": [[182, "ase2sprkkr.asr.database.duplicates.compare"]], "filter_uids() (in module ase2sprkkr.asr.database.duplicates)": [[183, "ase2sprkkr.asr.database.duplicates.filter_uids"]], "find_duplicate_group() (in module ase2sprkkr.asr.database.duplicates)": [[184, "ase2sprkkr.asr.database.duplicates.find_duplicate_group"]], "parse_filter_string() (in module ase2sprkkr.asr.database.duplicates)": [[185, "ase2sprkkr.asr.database.duplicates.parse_filter_string"]], "ase2sprkkr.asr.database.material_fingerprint": [[186, "module-ase2sprkkr.asr.database.material_fingerprint"]], "get_hash_of_atoms() (in module ase2sprkkr.asr.database.material_fingerprint)": [[187, "ase2sprkkr.asr.database.material_fingerprint.get_hash_of_atoms"]], "get_uid_of_atoms() (in module ase2sprkkr.asr.database.material_fingerprint)": [[188, "ase2sprkkr.asr.database.material_fingerprint.get_uid_of_atoms"]], "todict() (in module ase2sprkkr.asr.database.material_fingerprint)": [[189, "ase2sprkkr.asr.database.material_fingerprint.todict"]], "ase2sprkkr.asr.database.merge": [[190, "module-ase2sprkkr.asr.database.merge"]], "ase2sprkkr.asr.database.rmsd": [[191, "module-ase2sprkkr.asr.database.rmsd"]], "get_rmsd() (in module ase2sprkkr.asr.database.rmsd)": [[192, "ase2sprkkr.asr.database.rmsd.get_rmsd"]], "normalize_nonpbc_atoms() (in module ase2sprkkr.asr.database.rmsd)": [[193, "ase2sprkkr.asr.database.rmsd.normalize_nonpbc_atoms"]], "update_rmsd() (in module ase2sprkkr.asr.database.rmsd)": [[194, "ase2sprkkr.asr.database.rmsd.update_rmsd"]], "ase2sprkkr.asr.database.templates": [[195, "module-ase2sprkkr.asr.database.templates"]], "ase2sprkkr.asr.database.totree": [[196, "module-ase2sprkkr.asr.database.totree"]], "make_folder_dict() (in module ase2sprkkr.asr.database.totree)": [[197, "ase2sprkkr.asr.database.totree.make_folder_dict"]], "make_folder_tree() (in module ase2sprkkr.asr.database.totree)": [[198, "ase2sprkkr.asr.database.totree.make_folder_tree"]], "ase2sprkkr.asr.defectformation": [[199, "module-ase2sprkkr.asr.defectformation"]], "check_and_get_general_inputs() (in module ase2sprkkr.asr.defectformation)": [[200, "ase2sprkkr.asr.defectformation.check_and_get_general_inputs"]], "collect_data() (in module ase2sprkkr.asr.defectformation)": [[201, "ase2sprkkr.asr.defectformation.collect_data"]], "find_file_in_folder() (in module ase2sprkkr.asr.defectformation)": [[202, "ase2sprkkr.asr.defectformation.find_file_in_folder"]], "intersection() (in module ase2sprkkr.asr.defectformation)": [[203, "ase2sprkkr.asr.defectformation.intersection"]], "line() (in module ase2sprkkr.asr.defectformation)": [[204, "ase2sprkkr.asr.defectformation.line"]], "line_intersection() (in module ase2sprkkr.asr.defectformation)": [[205, "ase2sprkkr.asr.defectformation.line_intersection"]], "plot_formation_and_transitions() (in module ase2sprkkr.asr.defectformation)": [[206, "ase2sprkkr.asr.defectformation.plot_formation_and_transitions"]], "ase2sprkkr.asr.deformationpotentials": [[207, "module-ase2sprkkr.asr.deformationpotentials"]], "result (class in ase2sprkkr.asr.deformationpotentials)": [[208, "ase2sprkkr.asr.deformationpotentials.Result"]], "__init__() (ase2sprkkr.asr.deformationpotentials.result method)": [[208, "ase2sprkkr.asr.deformationpotentials.Result.__init__"]], "_known_data_keys (ase2sprkkr.asr.deformationpotentials.result attribute)": [[208, "ase2sprkkr.asr.deformationpotentials.Result._known_data_keys"]], "formats (ase2sprkkr.asr.deformationpotentials.result attribute)": [[208, "ase2sprkkr.asr.deformationpotentials.Result.formats"]], "strict (ase2sprkkr.asr.deformationpotentials.result attribute)": [[208, "ase2sprkkr.asr.deformationpotentials.Result.strict"]], "webpanel() (in module ase2sprkkr.asr.deformationpotentials)": [[209, "ase2sprkkr.asr.deformationpotentials.webpanel"]], "ase2sprkkr.asr.dimensionality": [[210, "module-ase2sprkkr.asr.dimensionality"]], "get_dimtypes() (in module ase2sprkkr.asr.dimensionality)": [[211, "ase2sprkkr.asr.dimensionality.get_dimtypes"]], "plot_dimensionality_histogram() (in module ase2sprkkr.asr.dimensionality)": [[212, "ase2sprkkr.asr.dimensionality.plot_dimensionality_histogram"]], "webpanel() (in module ase2sprkkr.asr.dimensionality)": [[213, "ase2sprkkr.asr.dimensionality.webpanel"]], "ase2sprkkr.asr.dos": [[214, "module-ase2sprkkr.asr.dos"]], "collect_data() (in module ase2sprkkr.asr.dos)": [[215, "ase2sprkkr.asr.dos.collect_data"]], "plot() (in module ase2sprkkr.asr.dos)": [[216, "ase2sprkkr.asr.dos.plot"]], "webpanel() (in module ase2sprkkr.asr.dos)": [[217, "ase2sprkkr.asr.dos.webpanel"]], "ase2sprkkr.asr.emasses": [[218, "module-ase2sprkkr.asr.emasses"]], "nogaperror": [[219, "ase2sprkkr.asr.emasses.NoGapError"]], "result (class in ase2sprkkr.asr.emasses)": [[220, "ase2sprkkr.asr.emasses.Result"]], "__init__() (ase2sprkkr.asr.emasses.result method)": [[220, "ase2sprkkr.asr.emasses.Result.__init__"]], "_known_data_keys (ase2sprkkr.asr.emasses.result attribute)": [[220, "ase2sprkkr.asr.emasses.Result._known_data_keys"]], "formats (ase2sprkkr.asr.emasses.result attribute)": [[220, "ase2sprkkr.asr.emasses.Result.formats"]], "strict (ase2sprkkr.asr.emasses.result attribute)": [[220, "ase2sprkkr.asr.emasses.Result.strict"]], "calculate_bs_along_emass_vecs() (in module ase2sprkkr.asr.emasses)": [[221, "ase2sprkkr.asr.emasses.calculate_bs_along_emass_vecs"]], "check_soc() (in module ase2sprkkr.asr.emasses)": [[222, "ase2sprkkr.asr.emasses.check_soc"]], "convert_key_to_tuple() (in module ase2sprkkr.asr.emasses)": [[223, "ase2sprkkr.asr.emasses.convert_key_to_tuple"]], "create_columns_fnames() (in module ase2sprkkr.asr.emasses)": [[224, "ase2sprkkr.asr.emasses.create_columns_fnames"]], "custom_table() (in module ase2sprkkr.asr.emasses)": [[225, "ase2sprkkr.asr.emasses.custom_table"]], "em() (in module ase2sprkkr.asr.emasses)": [[226, "ase2sprkkr.asr.emasses.em"]], "embands() (in module ase2sprkkr.asr.emasses)": [[227, "ase2sprkkr.asr.emasses.embands"]], "evalmodel() (in module ase2sprkkr.asr.emasses)": [[228, "ase2sprkkr.asr.emasses.evalmodel"]], "fit() (in module ase2sprkkr.asr.emasses)": [[229, "ase2sprkkr.asr.emasses.fit"]], "get_2nd_order_extremum() (in module ase2sprkkr.asr.emasses)": [[230, "ase2sprkkr.asr.emasses.get_2nd_order_extremum"]], "get_3rd_order_extremum() (in module ase2sprkkr.asr.emasses)": [[231, "ase2sprkkr.asr.emasses.get_3rd_order_extremum"]], "get_bt_ks() (in module ase2sprkkr.asr.emasses)": [[232, "ase2sprkkr.asr.emasses.get_bt_ks"]], "get_emass_dict_from_row() (in module ase2sprkkr.asr.emasses)": [[233, "ase2sprkkr.asr.emasses.get_emass_dict_from_row"]], "get_extremum_type() (in module ase2sprkkr.asr.emasses)": [[234, "ase2sprkkr.asr.emasses.get_extremum_type"]], "get_gapskn() (in module ase2sprkkr.asr.emasses)": [[235, "ase2sprkkr.asr.emasses.get_gapskn"]], "get_name() (in module ase2sprkkr.asr.emasses)": [[236, "ase2sprkkr.asr.emasses.get_name"]], "get_range() (in module ase2sprkkr.asr.emasses)": [[237, "ase2sprkkr.asr.emasses.get_range"]], "get_vb_cb_indices() (in module ase2sprkkr.asr.emasses)": [[238, "ase2sprkkr.asr.emasses.get_vb_cb_indices"]], "kptsinsphere() (in module ase2sprkkr.asr.emasses)": [[239, "ase2sprkkr.asr.emasses.kptsinsphere"]], "make_the_plots() (in module ase2sprkkr.asr.emasses)": [[240, "ase2sprkkr.asr.emasses.make_the_plots"]], "model() (in module ase2sprkkr.asr.emasses)": [[241, "ase2sprkkr.asr.emasses.model"]], "nonsc_sphere() (in module ase2sprkkr.asr.emasses)": [[242, "ase2sprkkr.asr.emasses.nonsc_sphere"]], "preliminary_refine() (in module ase2sprkkr.asr.emasses)": [[243, "ase2sprkkr.asr.emasses.preliminary_refine"]], "set_default() (in module ase2sprkkr.asr.emasses)": [[244, "ase2sprkkr.asr.emasses.set_default"]], "unpack_masses() (in module ase2sprkkr.asr.emasses)": [[245, "ase2sprkkr.asr.emasses.unpack_masses"]], "webpanel() (in module ase2sprkkr.asr.emasses)": [[246, "ase2sprkkr.asr.emasses.webpanel"]], "widemae() (in module ase2sprkkr.asr.emasses)": [[247, "ase2sprkkr.asr.emasses.wideMAE"]], "ase2sprkkr.asr.exchange": [[248, "module-ase2sprkkr.asr.exchange"]], "get_parameters() (in module ase2sprkkr.asr.exchange)": [[249, "ase2sprkkr.asr.exchange.get_parameters"]], "ase2sprkkr.asr.fere": [[250, "module-ase2sprkkr.asr.fere"]], "dbalreadyexistserror": [[251, "ase2sprkkr.asr.fere.DBAlreadyExistsError"]], "materialnotfounderror": [[252, "ase2sprkkr.asr.fere.MaterialNotFoundError"]], "parseerror": [[253, "ase2sprkkr.asr.fere.ParseError"]], "count() (in module ase2sprkkr.asr.fere)": [[254, "ase2sprkkr.asr.fere.count"]], "create_corrected_db() (in module ase2sprkkr.asr.fere)": [[255, "ase2sprkkr.asr.fere.create_corrected_db"]], "elements_from_refs() (in module ase2sprkkr.asr.fere)": [[256, "ase2sprkkr.asr.fere.elements_from_refs"]], "formulas_eq() (in module ase2sprkkr.asr.fere)": [[257, "ase2sprkkr.asr.fere.formulas_eq"]], "get_de_alpha() (in module ase2sprkkr.asr.fere)": [[258, "ase2sprkkr.asr.fere.get_dE_alpha"]], "get_hof() (in module ase2sprkkr.asr.fere)": [[259, "ase2sprkkr.asr.fere.get_hof"]], "load_data() (in module ase2sprkkr.asr.fere)": [[260, "ase2sprkkr.asr.fere.load_data"]], "minimize_error() (in module ase2sprkkr.asr.fere)": [[261, "ase2sprkkr.asr.fere.minimize_error"]], "multiply_formula() (in module ase2sprkkr.asr.fere)": [[262, "ase2sprkkr.asr.fere.multiply_formula"]], "only() (in module ase2sprkkr.asr.fere)": [[263, "ase2sprkkr.asr.fere.only"]], "parse_reactions() (in module ase2sprkkr.asr.fere)": [[264, "ase2sprkkr.asr.fere.parse_reactions"]], "parse_refs() (in module ase2sprkkr.asr.fere)": [[265, "ase2sprkkr.asr.fere.parse_refs"]], "safe_get() (in module ase2sprkkr.asr.fere)": [[266, "ase2sprkkr.asr.fere.safe_get"]], "select() (in module ase2sprkkr.asr.fere)": [[267, "ase2sprkkr.asr.fere.select"]], "single() (in module ase2sprkkr.asr.fere)": [[268, "ase2sprkkr.asr.fere.single"]], "unique() (in module ase2sprkkr.asr.fere)": [[269, "ase2sprkkr.asr.fere.unique"]], "where() (in module ase2sprkkr.asr.fere)": [[270, "ase2sprkkr.asr.fere.where"]], "ase2sprkkr.asr.fermisurface": [[271, "module-ase2sprkkr.asr.fermisurface"]], "result (class in ase2sprkkr.asr.fermisurface)": [[272, "ase2sprkkr.asr.fermisurface.Result"]], "__init__() (ase2sprkkr.asr.fermisurface.result method)": [[272, "ase2sprkkr.asr.fermisurface.Result.__init__"]], "_known_data_keys (ase2sprkkr.asr.fermisurface.result attribute)": [[272, "ase2sprkkr.asr.fermisurface.Result._known_data_keys"]], "formats (ase2sprkkr.asr.fermisurface.result attribute)": [[272, "ase2sprkkr.asr.fermisurface.Result.formats"]], "strict (ase2sprkkr.asr.fermisurface.result attribute)": [[272, "ase2sprkkr.asr.fermisurface.Result.strict"]], "add_fermi() (in module ase2sprkkr.asr.fermisurface)": [[273, "ase2sprkkr.asr.fermisurface.add_fermi"]], "bz_vertices() (in module ase2sprkkr.asr.fermisurface)": [[274, "ase2sprkkr.asr.fermisurface.bz_vertices"]], "find_contours() (in module ase2sprkkr.asr.fermisurface)": [[275, "ase2sprkkr.asr.fermisurface.find_contours"]], "plot_fermi() (in module ase2sprkkr.asr.fermisurface)": [[276, "ase2sprkkr.asr.fermisurface.plot_fermi"]], "webpanel() (in module ase2sprkkr.asr.fermisurface)": [[277, "ase2sprkkr.asr.fermisurface.webpanel"]], "ase2sprkkr.asr.formalpolarization": [[278, "module-ase2sprkkr.asr.formalpolarization"]], "atomstooclosetoboundary": [[279, "ase2sprkkr.asr.formalpolarization.AtomsTooCloseToBoundary"]], "distance_to_non_pbc_boundary() (in module ase2sprkkr.asr.formalpolarization)": [[280, "ase2sprkkr.asr.formalpolarization.distance_to_non_pbc_boundary"]], "get_atomic_polarization_phase() (in module ase2sprkkr.asr.formalpolarization)": [[281, "ase2sprkkr.asr.formalpolarization.get_atomic_polarization_phase"]], "get_dipole_polarization_phase() (in module ase2sprkkr.asr.formalpolarization)": [[282, "ase2sprkkr.asr.formalpolarization.get_dipole_polarization_phase"]], "get_electronic_polarization_phase() (in module ase2sprkkr.asr.formalpolarization)": [[283, "ase2sprkkr.asr.formalpolarization.get_electronic_polarization_phase"]], "get_wavefunctions() (in module ase2sprkkr.asr.formalpolarization)": [[284, "ase2sprkkr.asr.formalpolarization.get_wavefunctions"]], "ase2sprkkr.asr.gs": [[285, "module-ase2sprkkr.asr.gs"]], "gapsresult (class in ase2sprkkr.asr.gs)": [[286, "ase2sprkkr.asr.gs.GapsResult"]], "__init__() (ase2sprkkr.asr.gs.gapsresult method)": [[286, "ase2sprkkr.asr.gs.GapsResult.__init__"]], "_known_data_keys (ase2sprkkr.asr.gs.gapsresult attribute)": [[286, "ase2sprkkr.asr.gs.GapsResult._known_data_keys"]], "cbm (ase2sprkkr.asr.gs.gapsresult property)": [[286, "ase2sprkkr.asr.gs.GapsResult.cbm"]], "cbm_dir (ase2sprkkr.asr.gs.gapsresult property)": [[286, "ase2sprkkr.asr.gs.GapsResult.cbm_dir"]], "efermi (ase2sprkkr.asr.gs.gapsresult property)": [[286, "ase2sprkkr.asr.gs.GapsResult.efermi"]], "gap (ase2sprkkr.asr.gs.gapsresult property)": [[286, "ase2sprkkr.asr.gs.GapsResult.gap"]], "gap_dir (ase2sprkkr.asr.gs.gapsresult property)": [[286, "ase2sprkkr.asr.gs.GapsResult.gap_dir"]], "k_cbm_c (ase2sprkkr.asr.gs.gapsresult property)": [[286, "ase2sprkkr.asr.gs.GapsResult.k_cbm_c"]], "k_cbm_dir_c (ase2sprkkr.asr.gs.gapsresult property)": [[286, "ase2sprkkr.asr.gs.GapsResult.k_cbm_dir_c"]], "k_vbm_c (ase2sprkkr.asr.gs.gapsresult property)": [[286, "ase2sprkkr.asr.gs.GapsResult.k_vbm_c"]], "k_vbm_dir_c (ase2sprkkr.asr.gs.gapsresult property)": [[286, "ase2sprkkr.asr.gs.GapsResult.k_vbm_dir_c"]], "key_descriptions (ase2sprkkr.asr.gs.gapsresult attribute)": [[286, "ase2sprkkr.asr.gs.GapsResult.key_descriptions"]], "skn1 (ase2sprkkr.asr.gs.gapsresult property)": [[286, "ase2sprkkr.asr.gs.GapsResult.skn1"]], "skn1_dir (ase2sprkkr.asr.gs.gapsresult property)": [[286, "ase2sprkkr.asr.gs.GapsResult.skn1_dir"]], "skn2 (ase2sprkkr.asr.gs.gapsresult property)": [[286, "ase2sprkkr.asr.gs.GapsResult.skn2"]], "skn2_dir (ase2sprkkr.asr.gs.gapsresult property)": [[286, "ase2sprkkr.asr.gs.GapsResult.skn2_dir"]], "strict (ase2sprkkr.asr.gs.gapsresult attribute)": [[286, "ase2sprkkr.asr.gs.GapsResult.strict"]], "vbm (ase2sprkkr.asr.gs.gapsresult property)": [[286, "ase2sprkkr.asr.gs.GapsResult.vbm"]], "vbm_dir (ase2sprkkr.asr.gs.gapsresult property)": [[286, "ase2sprkkr.asr.gs.GapsResult.vbm_dir"]], "result (class in ase2sprkkr.asr.gs)": [[287, "ase2sprkkr.asr.gs.Result"]], "__init__() (ase2sprkkr.asr.gs.result method)": [[287, "ase2sprkkr.asr.gs.Result.__init__"]], "_known_data_keys (ase2sprkkr.asr.gs.result attribute)": [[287, "ase2sprkkr.asr.gs.Result._known_data_keys"]], "cbm (ase2sprkkr.asr.gs.result property)": [[287, "ase2sprkkr.asr.gs.Result.cbm"]], "cbm_dir (ase2sprkkr.asr.gs.result property)": [[287, "ase2sprkkr.asr.gs.Result.cbm_dir"]], "dipz (ase2sprkkr.asr.gs.result property)": [[287, "ase2sprkkr.asr.gs.Result.dipz"]], "efermi (ase2sprkkr.asr.gs.result property)": [[287, "ase2sprkkr.asr.gs.Result.efermi"]], "etot (ase2sprkkr.asr.gs.result property)": [[287, "ase2sprkkr.asr.gs.Result.etot"]], "evac (ase2sprkkr.asr.gs.result property)": [[287, "ase2sprkkr.asr.gs.Result.evac"]], "evacdiff (ase2sprkkr.asr.gs.result property)": [[287, "ase2sprkkr.asr.gs.Result.evacdiff"]], "forces (ase2sprkkr.asr.gs.result property)": [[287, "ase2sprkkr.asr.gs.Result.forces"]], "formats (ase2sprkkr.asr.gs.result attribute)": [[287, "ase2sprkkr.asr.gs.Result.formats"]], "gap (ase2sprkkr.asr.gs.result property)": [[287, "ase2sprkkr.asr.gs.Result.gap"]], "gap_dir (ase2sprkkr.asr.gs.result property)": [[287, "ase2sprkkr.asr.gs.Result.gap_dir"]], "gap_dir_nosoc (ase2sprkkr.asr.gs.result property)": [[287, "ase2sprkkr.asr.gs.Result.gap_dir_nosoc"]], "gap_nosoc (ase2sprkkr.asr.gs.result property)": [[287, "ase2sprkkr.asr.gs.Result.gap_nosoc"]], "gaps_nosoc (ase2sprkkr.asr.gs.result property)": [[287, "ase2sprkkr.asr.gs.Result.gaps_nosoc"]], "k_cbm_c (ase2sprkkr.asr.gs.result property)": [[287, "ase2sprkkr.asr.gs.Result.k_cbm_c"]], "k_cbm_dir_c (ase2sprkkr.asr.gs.result property)": [[287, "ase2sprkkr.asr.gs.Result.k_cbm_dir_c"]], "k_vbm_c (ase2sprkkr.asr.gs.result property)": [[287, "ase2sprkkr.asr.gs.Result.k_vbm_c"]], "k_vbm_dir_c (ase2sprkkr.asr.gs.result property)": [[287, "ase2sprkkr.asr.gs.Result.k_vbm_dir_c"]], "key_descriptions (ase2sprkkr.asr.gs.result attribute)": [[287, "ase2sprkkr.asr.gs.Result.key_descriptions"]], "skn1 (ase2sprkkr.asr.gs.result property)": [[287, "ase2sprkkr.asr.gs.Result.skn1"]], "skn1_dir (ase2sprkkr.asr.gs.result property)": [[287, "ase2sprkkr.asr.gs.Result.skn1_dir"]], "skn2 (ase2sprkkr.asr.gs.result property)": [[287, "ase2sprkkr.asr.gs.Result.skn2"]], "skn2_dir (ase2sprkkr.asr.gs.result property)": [[287, "ase2sprkkr.asr.gs.Result.skn2_dir"]], "stresses (ase2sprkkr.asr.gs.result property)": [[287, "ase2sprkkr.asr.gs.Result.stresses"]], "strict (ase2sprkkr.asr.gs.result attribute)": [[287, "ase2sprkkr.asr.gs.Result.strict"]], "vacuumlevels (ase2sprkkr.asr.gs.result property)": [[287, "ase2sprkkr.asr.gs.Result.vacuumlevels"]], "vbm (ase2sprkkr.asr.gs.result property)": [[287, "ase2sprkkr.asr.gs.Result.vbm"]], "vbm_dir (ase2sprkkr.asr.gs.result property)": [[287, "ase2sprkkr.asr.gs.Result.vbm_dir"]], "workfunction (ase2sprkkr.asr.gs.result property)": [[287, "ase2sprkkr.asr.gs.Result.workfunction"]], "vacuumlevelresults (class in ase2sprkkr.asr.gs)": [[288, "ase2sprkkr.asr.gs.VacuumLevelResults"]], "__init__() (ase2sprkkr.asr.gs.vacuumlevelresults method)": [[288, "ase2sprkkr.asr.gs.VacuumLevelResults.__init__"]], "_known_data_keys (ase2sprkkr.asr.gs.vacuumlevelresults attribute)": [[288, "ase2sprkkr.asr.gs.VacuumLevelResults._known_data_keys"]], "dipz (ase2sprkkr.asr.gs.vacuumlevelresults property)": [[288, "ase2sprkkr.asr.gs.VacuumLevelResults.dipz"]], "efermi_nosoc (ase2sprkkr.asr.gs.vacuumlevelresults property)": [[288, "ase2sprkkr.asr.gs.VacuumLevelResults.efermi_nosoc"]], "evac1 (ase2sprkkr.asr.gs.vacuumlevelresults property)": [[288, "ase2sprkkr.asr.gs.VacuumLevelResults.evac1"]], "evac2 (ase2sprkkr.asr.gs.vacuumlevelresults property)": [[288, "ase2sprkkr.asr.gs.VacuumLevelResults.evac2"]], "evacdiff (ase2sprkkr.asr.gs.vacuumlevelresults property)": [[288, "ase2sprkkr.asr.gs.VacuumLevelResults.evacdiff"]], "evacmean (ase2sprkkr.asr.gs.vacuumlevelresults property)": [[288, "ase2sprkkr.asr.gs.VacuumLevelResults.evacmean"]], "key_descriptions (ase2sprkkr.asr.gs.vacuumlevelresults attribute)": [[288, "ase2sprkkr.asr.gs.VacuumLevelResults.key_descriptions"]], "strict (ase2sprkkr.asr.gs.vacuumlevelresults attribute)": [[288, "ase2sprkkr.asr.gs.VacuumLevelResults.strict"]], "v_z (ase2sprkkr.asr.gs.vacuumlevelresults property)": [[288, "ase2sprkkr.asr.gs.VacuumLevelResults.v_z"]], "z_z (ase2sprkkr.asr.gs.vacuumlevelresults property)": [[288, "ase2sprkkr.asr.gs.VacuumLevelResults.z_z"]], "bz_with_band_extremums() (in module ase2sprkkr.asr.gs)": [[289, "ase2sprkkr.asr.gs.bz_with_band_extremums"]], "evacdiff() (in module ase2sprkkr.asr.gs)": [[290, "ase2sprkkr.asr.gs.evacdiff"]], "gaps() (in module ase2sprkkr.asr.gs)": [[291, "ase2sprkkr.asr.gs.gaps"]], "get_1bz_k() (in module ase2sprkkr.asr.gs)": [[292, "ase2sprkkr.asr.gs.get_1bz_k"]], "get_gap_info() (in module ase2sprkkr.asr.gs)": [[293, "ase2sprkkr.asr.gs.get_gap_info"]], "vacuumlevels() (in module ase2sprkkr.asr.gs)": [[294, "ase2sprkkr.asr.gs.vacuumlevels"]], "webpanel() (in module ase2sprkkr.asr.gs)": [[295, "ase2sprkkr.asr.gs.webpanel"]], "ase2sprkkr.asr.gw": [[296, "module-ase2sprkkr.asr.gw"]], "result (class in ase2sprkkr.asr.gw)": [[297, "ase2sprkkr.asr.gw.Result"]], "__init__() (ase2sprkkr.asr.gw.result method)": [[297, "ase2sprkkr.asr.gw.Result.__init__"]], "_known_data_keys (ase2sprkkr.asr.gw.result attribute)": [[297, "ase2sprkkr.asr.gw.Result._known_data_keys"]], "bandstructure (ase2sprkkr.asr.gw.result property)": [[297, "ase2sprkkr.asr.gw.Result.bandstructure"]], "cbm_gw (ase2sprkkr.asr.gw.result property)": [[297, "ase2sprkkr.asr.gw.Result.cbm_gw"]], "cbm_gw_nosoc (ase2sprkkr.asr.gw.result property)": [[297, "ase2sprkkr.asr.gw.Result.cbm_gw_nosoc"]], "efermi_gw_nosoc (ase2sprkkr.asr.gw.result property)": [[297, "ase2sprkkr.asr.gw.Result.efermi_gw_nosoc"]], "efermi_gw_soc (ase2sprkkr.asr.gw.result property)": [[297, "ase2sprkkr.asr.gw.Result.efermi_gw_soc"]], "formats (ase2sprkkr.asr.gw.result attribute)": [[297, "ase2sprkkr.asr.gw.Result.formats"]], "gap_dir_gw (ase2sprkkr.asr.gw.result property)": [[297, "ase2sprkkr.asr.gw.Result.gap_dir_gw"]], "gap_dir_gw_nosoc (ase2sprkkr.asr.gw.result property)": [[297, "ase2sprkkr.asr.gw.Result.gap_dir_gw_nosoc"]], "gap_gw (ase2sprkkr.asr.gw.result property)": [[297, "ase2sprkkr.asr.gw.Result.gap_gw"]], "gap_gw_nosoc (ase2sprkkr.asr.gw.result property)": [[297, "ase2sprkkr.asr.gw.Result.gap_gw_nosoc"]], "kcbm (ase2sprkkr.asr.gw.result property)": [[297, "ase2sprkkr.asr.gw.Result.kcbm"]], "kcbm_nosoc (ase2sprkkr.asr.gw.result property)": [[297, "ase2sprkkr.asr.gw.Result.kcbm_nosoc"]], "key_descriptions (ase2sprkkr.asr.gw.result attribute)": [[297, "ase2sprkkr.asr.gw.Result.key_descriptions"]], "kvbm (ase2sprkkr.asr.gw.result property)": [[297, "ase2sprkkr.asr.gw.Result.kvbm"]], "kvbm_nosoc (ase2sprkkr.asr.gw.result property)": [[297, "ase2sprkkr.asr.gw.Result.kvbm_nosoc"]], "strict (ase2sprkkr.asr.gw.result attribute)": [[297, "ase2sprkkr.asr.gw.Result.strict"]], "vbm_gw (ase2sprkkr.asr.gw.result property)": [[297, "ase2sprkkr.asr.gw.Result.vbm_gw"]], "vbm_gw_nosoc (ase2sprkkr.asr.gw.result property)": [[297, "ase2sprkkr.asr.gw.Result.vbm_gw_nosoc"]], "bs_gw() (in module ase2sprkkr.asr.gw)": [[298, "ase2sprkkr.asr.gw.bs_gw"]], "get_kpts_size() (in module ase2sprkkr.asr.gw)": [[299, "ase2sprkkr.asr.gw.get_kpts_size"]], "webpanel() (in module ase2sprkkr.asr.gw)": [[300, "ase2sprkkr.asr.gw.webpanel"]], "ase2sprkkr.asr.hse": [[301, "module-ase2sprkkr.asr.hse"]], "mp_interpolate() (in module ase2sprkkr.asr.hse)": [[302, "ase2sprkkr.asr.hse.MP_interpolate"]], "result (class in ase2sprkkr.asr.hse)": [[303, "ase2sprkkr.asr.hse.Result"]], "__init__() (ase2sprkkr.asr.hse.result method)": [[303, "ase2sprkkr.asr.hse.Result.__init__"]], "_known_data_keys (ase2sprkkr.asr.hse.result attribute)": [[303, "ase2sprkkr.asr.hse.Result._known_data_keys"]], "bandstructure (ase2sprkkr.asr.hse.result property)": [[303, "ase2sprkkr.asr.hse.Result.bandstructure"]], "cbm_hse (ase2sprkkr.asr.hse.result property)": [[303, "ase2sprkkr.asr.hse.Result.cbm_hse"]], "cbm_hse_nosoc (ase2sprkkr.asr.hse.result property)": [[303, "ase2sprkkr.asr.hse.Result.cbm_hse_nosoc"]], "efermi_hse_nosoc (ase2sprkkr.asr.hse.result property)": [[303, "ase2sprkkr.asr.hse.Result.efermi_hse_nosoc"]], "efermi_hse_soc (ase2sprkkr.asr.hse.result property)": [[303, "ase2sprkkr.asr.hse.Result.efermi_hse_soc"]], "formats (ase2sprkkr.asr.hse.result attribute)": [[303, "ase2sprkkr.asr.hse.Result.formats"]], "gap_dir_hse (ase2sprkkr.asr.hse.result property)": [[303, "ase2sprkkr.asr.hse.Result.gap_dir_hse"]], "gap_dir_hse_nosoc (ase2sprkkr.asr.hse.result property)": [[303, "ase2sprkkr.asr.hse.Result.gap_dir_hse_nosoc"]], "gap_hse (ase2sprkkr.asr.hse.result property)": [[303, "ase2sprkkr.asr.hse.Result.gap_hse"]], "gap_hse_nosoc (ase2sprkkr.asr.hse.result property)": [[303, "ase2sprkkr.asr.hse.Result.gap_hse_nosoc"]], "kcbm (ase2sprkkr.asr.hse.result property)": [[303, "ase2sprkkr.asr.hse.Result.kcbm"]], "kcbm_nosoc (ase2sprkkr.asr.hse.result property)": [[303, "ase2sprkkr.asr.hse.Result.kcbm_nosoc"]], "key_descriptions (ase2sprkkr.asr.hse.result attribute)": [[303, "ase2sprkkr.asr.hse.Result.key_descriptions"]], "kvbm (ase2sprkkr.asr.hse.result property)": [[303, "ase2sprkkr.asr.hse.Result.kvbm"]], "kvbm_nosoc (ase2sprkkr.asr.hse.result property)": [[303, "ase2sprkkr.asr.hse.Result.kvbm_nosoc"]], "strict (ase2sprkkr.asr.hse.result attribute)": [[303, "ase2sprkkr.asr.hse.Result.strict"]], "vbm_hse (ase2sprkkr.asr.hse.result property)": [[303, "ase2sprkkr.asr.hse.Result.vbm_hse"]], "vbm_hse_nosoc (ase2sprkkr.asr.hse.result property)": [[303, "ase2sprkkr.asr.hse.Result.vbm_hse_nosoc"]], "bs_hse() (in module ase2sprkkr.asr.hse)": [[304, "ase2sprkkr.asr.hse.bs_hse"]], "get_kpts_size() (in module ase2sprkkr.asr.hse)": [[305, "ase2sprkkr.asr.hse.get_kpts_size"]], "hse() (in module ase2sprkkr.asr.hse)": [[306, "ase2sprkkr.asr.hse.hse"]], "hse_spinorbit() (in module ase2sprkkr.asr.hse)": [[307, "ase2sprkkr.asr.hse.hse_spinorbit"]], "webpanel() (in module ase2sprkkr.asr.hse)": [[308, "ase2sprkkr.asr.hse.webpanel"]], "ase2sprkkr.asr.infraredpolarizability": [[309, "module-ase2sprkkr.asr.infraredpolarizability"]], "result (class in ase2sprkkr.asr.infraredpolarizability)": [[310, "ase2sprkkr.asr.infraredpolarizability.Result"]], "__init__() (ase2sprkkr.asr.infraredpolarizability.result method)": [[310, "ase2sprkkr.asr.infraredpolarizability.Result.__init__"]], "_known_data_keys (ase2sprkkr.asr.infraredpolarizability.result attribute)": [[310, "ase2sprkkr.asr.infraredpolarizability.Result._known_data_keys"]], "alpha_wvv (ase2sprkkr.asr.infraredpolarizability.result property)": [[310, "ase2sprkkr.asr.infraredpolarizability.Result.alpha_wvv"]], "alphax (ase2sprkkr.asr.infraredpolarizability.result property)": [[310, "ase2sprkkr.asr.infraredpolarizability.Result.alphax"]], "alphax_lat (ase2sprkkr.asr.infraredpolarizability.result property)": [[310, "ase2sprkkr.asr.infraredpolarizability.Result.alphax_lat"]], "alphay (ase2sprkkr.asr.infraredpolarizability.result property)": [[310, "ase2sprkkr.asr.infraredpolarizability.Result.alphay"]], "alphay_lat (ase2sprkkr.asr.infraredpolarizability.result property)": [[310, "ase2sprkkr.asr.infraredpolarizability.Result.alphay_lat"]], "alphaz (ase2sprkkr.asr.infraredpolarizability.result property)": [[310, "ase2sprkkr.asr.infraredpolarizability.Result.alphaz"]], "alphaz_lat (ase2sprkkr.asr.infraredpolarizability.result property)": [[310, "ase2sprkkr.asr.infraredpolarizability.Result.alphaz_lat"]], "formats (ase2sprkkr.asr.infraredpolarizability.result attribute)": [[310, "ase2sprkkr.asr.infraredpolarizability.Result.formats"]], "key_descriptions (ase2sprkkr.asr.infraredpolarizability.result attribute)": [[310, "ase2sprkkr.asr.infraredpolarizability.Result.key_descriptions"]], "omega_w (ase2sprkkr.asr.infraredpolarizability.result property)": [[310, "ase2sprkkr.asr.infraredpolarizability.Result.omega_w"]], "strict (ase2sprkkr.asr.infraredpolarizability.result attribute)": [[310, "ase2sprkkr.asr.infraredpolarizability.Result.strict"]], "create_plot() (in module ase2sprkkr.asr.infraredpolarizability)": [[311, "ase2sprkkr.asr.infraredpolarizability.create_plot"]], "get_phonon_pol() (in module ase2sprkkr.asr.infraredpolarizability)": [[312, "ase2sprkkr.asr.infraredpolarizability.get_phonon_pol"]], "webpanel() (in module ase2sprkkr.asr.infraredpolarizability)": [[313, "ase2sprkkr.asr.infraredpolarizability.webpanel"]], "ase2sprkkr.asr.magnetic_anisotropy": [[314, "module-ase2sprkkr.asr.magnetic_anisotropy"]], "e_x (ase2sprkkr.asr.magnetic_anisotropy.result property)": [[315, "ase2sprkkr.asr.magnetic_anisotropy.Result.E_x"]], "e_y (ase2sprkkr.asr.magnetic_anisotropy.result property)": [[315, "ase2sprkkr.asr.magnetic_anisotropy.Result.E_y"]], "e_z (ase2sprkkr.asr.magnetic_anisotropy.result property)": [[315, "ase2sprkkr.asr.magnetic_anisotropy.Result.E_z"]], "result (class in ase2sprkkr.asr.magnetic_anisotropy)": [[315, "ase2sprkkr.asr.magnetic_anisotropy.Result"]], "__init__() (ase2sprkkr.asr.magnetic_anisotropy.result method)": [[315, "ase2sprkkr.asr.magnetic_anisotropy.Result.__init__"]], "_known_data_keys (ase2sprkkr.asr.magnetic_anisotropy.result attribute)": [[315, "ase2sprkkr.asr.magnetic_anisotropy.Result._known_data_keys"]], "de_zx (ase2sprkkr.asr.magnetic_anisotropy.result property)": [[315, "ase2sprkkr.asr.magnetic_anisotropy.Result.dE_zx"]], "de_zy (ase2sprkkr.asr.magnetic_anisotropy.result property)": [[315, "ase2sprkkr.asr.magnetic_anisotropy.Result.dE_zy"]], "formats (ase2sprkkr.asr.magnetic_anisotropy.result attribute)": [[315, "ase2sprkkr.asr.magnetic_anisotropy.Result.formats"]], "key_descriptions (ase2sprkkr.asr.magnetic_anisotropy.result attribute)": [[315, "ase2sprkkr.asr.magnetic_anisotropy.Result.key_descriptions"]], "phi (ase2sprkkr.asr.magnetic_anisotropy.result property)": [[315, "ase2sprkkr.asr.magnetic_anisotropy.Result.phi"]], "spin_axis (ase2sprkkr.asr.magnetic_anisotropy.result property)": [[315, "ase2sprkkr.asr.magnetic_anisotropy.Result.spin_axis"]], "strict (ase2sprkkr.asr.magnetic_anisotropy.result attribute)": [[315, "ase2sprkkr.asr.magnetic_anisotropy.Result.strict"]], "theta (ase2sprkkr.asr.magnetic_anisotropy.result property)": [[315, "ase2sprkkr.asr.magnetic_anisotropy.Result.theta"]], "get_spin_axis() (in module ase2sprkkr.asr.magnetic_anisotropy)": [[316, "ase2sprkkr.asr.magnetic_anisotropy.get_spin_axis"]], "get_spin_index() (in module ase2sprkkr.asr.magnetic_anisotropy)": [[317, "ase2sprkkr.asr.magnetic_anisotropy.get_spin_index"]], "spin_axis() (in module ase2sprkkr.asr.magnetic_anisotropy)": [[318, "ase2sprkkr.asr.magnetic_anisotropy.spin_axis"]], "webpanel() (in module ase2sprkkr.asr.magnetic_anisotropy)": [[319, "ase2sprkkr.asr.magnetic_anisotropy.webpanel"]], "ase2sprkkr.asr.magstate": [[320, "module-ase2sprkkr.asr.magstate"]], "result (class in ase2sprkkr.asr.magstate)": [[321, "ase2sprkkr.asr.magstate.Result"]], "__init__() (ase2sprkkr.asr.magstate.result method)": [[321, "ase2sprkkr.asr.magstate.Result.__init__"]], "_known_data_keys (ase2sprkkr.asr.magstate.result attribute)": [[321, "ase2sprkkr.asr.magstate.Result._known_data_keys"]], "formats (ase2sprkkr.asr.magstate.result attribute)": [[321, "ase2sprkkr.asr.magstate.Result.formats"]], "is_magnetic (ase2sprkkr.asr.magstate.result property)": [[321, "ase2sprkkr.asr.magstate.Result.is_magnetic"]], "key_descriptions (ase2sprkkr.asr.magstate.result attribute)": [[321, "ase2sprkkr.asr.magstate.Result.key_descriptions"]], "magmom (ase2sprkkr.asr.magstate.result property)": [[321, "ase2sprkkr.asr.magstate.Result.magmom"]], "magmoms (ase2sprkkr.asr.magstate.result property)": [[321, "ase2sprkkr.asr.magstate.Result.magmoms"]], "magstate (ase2sprkkr.asr.magstate.result property)": [[321, "ase2sprkkr.asr.magstate.Result.magstate"]], "nspins (ase2sprkkr.asr.magstate.result property)": [[321, "ase2sprkkr.asr.magstate.Result.nspins"]], "strict (ase2sprkkr.asr.magstate.result attribute)": [[321, "ase2sprkkr.asr.magstate.Result.strict"]], "get_magstate() (in module ase2sprkkr.asr.magstate)": [[322, "ase2sprkkr.asr.magstate.get_magstate"]], "webpanel() (in module ase2sprkkr.asr.magstate)": [[323, "ase2sprkkr.asr.magstate.webpanel"]], "ase2sprkkr.asr.pdos": [[324, "module-ase2sprkkr.asr.pdos"]], "result (class in ase2sprkkr.asr.pdos)": [[325, "ase2sprkkr.asr.pdos.Result"]], "__init__() (ase2sprkkr.asr.pdos.result method)": [[325, "ase2sprkkr.asr.pdos.Result.__init__"]], "_known_data_keys (ase2sprkkr.asr.pdos.result attribute)": [[325, "ase2sprkkr.asr.pdos.Result._known_data_keys"]], "dos_at_ef_nosoc (ase2sprkkr.asr.pdos.result property)": [[325, "ase2sprkkr.asr.pdos.Result.dos_at_ef_nosoc"]], "dos_at_ef_soc (ase2sprkkr.asr.pdos.result property)": [[325, "ase2sprkkr.asr.pdos.Result.dos_at_ef_soc"]], "formats (ase2sprkkr.asr.pdos.result attribute)": [[325, "ase2sprkkr.asr.pdos.Result.formats"]], "key_descriptions (ase2sprkkr.asr.pdos.result attribute)": [[325, "ase2sprkkr.asr.pdos.Result.key_descriptions"]], "pdos_nosoc (ase2sprkkr.asr.pdos.result property)": [[325, "ase2sprkkr.asr.pdos.Result.pdos_nosoc"]], "pdos_soc (ase2sprkkr.asr.pdos.result property)": [[325, "ase2sprkkr.asr.pdos.Result.pdos_soc"]], "strict (ase2sprkkr.asr.pdos.result attribute)": [[325, "ase2sprkkr.asr.pdos.Result.strict"]], "calculate_pdos() (in module ase2sprkkr.asr.pdos)": [[326, "ase2sprkkr.asr.pdos.calculate_pdos"]], "get_l_a() (in module ase2sprkkr.asr.pdos)": [[327, "ase2sprkkr.asr.pdos.get_l_a"]], "get_ordered_syl_dict() (in module ase2sprkkr.asr.pdos)": [[328, "ase2sprkkr.asr.pdos.get_ordered_syl_dict"]], "get_yl_colors() (in module ase2sprkkr.asr.pdos)": [[329, "ase2sprkkr.asr.pdos.get_yl_colors"]], "pdos() (in module ase2sprkkr.asr.pdos)": [[330, "ase2sprkkr.asr.pdos.pdos"]], "plot_pdos() (in module ase2sprkkr.asr.pdos)": [[331, "ase2sprkkr.asr.pdos.plot_pdos"]], "plot_pdos_nosoc() (in module ase2sprkkr.asr.pdos)": [[332, "ase2sprkkr.asr.pdos.plot_pdos_nosoc"]], "plot_pdos_soc() (in module ase2sprkkr.asr.pdos)": [[333, "ase2sprkkr.asr.pdos.plot_pdos_soc"]], "webpanel() (in module ase2sprkkr.asr.pdos)": [[334, "ase2sprkkr.asr.pdos.webpanel"]], "ase2sprkkr.asr.phonons": [[335, "module-ase2sprkkr.asr.phonons"]], "result (class in ase2sprkkr.asr.phonons)": [[336, "ase2sprkkr.asr.phonons.Result"]], "__init__() (ase2sprkkr.asr.phonons.result method)": [[336, "ase2sprkkr.asr.phonons.Result.__init__"]], "_known_data_keys (ase2sprkkr.asr.phonons.result attribute)": [[336, "ase2sprkkr.asr.phonons.Result._known_data_keys"]], "dynamic_stability_phonons (ase2sprkkr.asr.phonons.result property)": [[336, "ase2sprkkr.asr.phonons.Result.dynamic_stability_phonons"]], "formats (ase2sprkkr.asr.phonons.result attribute)": [[336, "ase2sprkkr.asr.phonons.Result.formats"]], "interp_freqs_kl (ase2sprkkr.asr.phonons.result property)": [[336, "ase2sprkkr.asr.phonons.Result.interp_freqs_kl"]], "key_descriptions (ase2sprkkr.asr.phonons.result attribute)": [[336, "ase2sprkkr.asr.phonons.Result.key_descriptions"]], "minhessianeig (ase2sprkkr.asr.phonons.result property)": [[336, "ase2sprkkr.asr.phonons.Result.minhessianeig"]], "modes_kl (ase2sprkkr.asr.phonons.result property)": [[336, "ase2sprkkr.asr.phonons.Result.modes_kl"]], "omega_kl (ase2sprkkr.asr.phonons.result property)": [[336, "ase2sprkkr.asr.phonons.Result.omega_kl"]], "path (ase2sprkkr.asr.phonons.result property)": [[336, "ase2sprkkr.asr.phonons.Result.path"]], "q_qc (ase2sprkkr.asr.phonons.result property)": [[336, "ase2sprkkr.asr.phonons.Result.q_qc"]], "strict (ase2sprkkr.asr.phonons.result attribute)": [[336, "ase2sprkkr.asr.phonons.Result.strict"]], "creates() (in module ase2sprkkr.asr.phonons)": [[337, "ase2sprkkr.asr.phonons.creates"]], "mingocorrection() (in module ase2sprkkr.asr.phonons)": [[338, "ase2sprkkr.asr.phonons.mingocorrection"]], "plot_bandstructure() (in module ase2sprkkr.asr.phonons)": [[339, "ase2sprkkr.asr.phonons.plot_bandstructure"]], "plot_phonons() (in module ase2sprkkr.asr.phonons)": [[340, "ase2sprkkr.asr.phonons.plot_phonons"]], "requires() (in module ase2sprkkr.asr.phonons)": [[341, "ase2sprkkr.asr.phonons.requires"]], "todict() (in module ase2sprkkr.asr.phonons)": [[342, "ase2sprkkr.asr.phonons.todict"]], "topckl() (in module ase2sprkkr.asr.phonons)": [[343, "ase2sprkkr.asr.phonons.topckl"]], "webpanel() (in module ase2sprkkr.asr.phonons)": [[344, "ase2sprkkr.asr.phonons.webpanel"]], "ase2sprkkr.asr.phonopy": [[345, "module-ase2sprkkr.asr.phonopy"]], "result (class in ase2sprkkr.asr.phonopy)": [[346, "ase2sprkkr.asr.phonopy.Result"]], "__init__() (ase2sprkkr.asr.phonopy.result method)": [[346, "ase2sprkkr.asr.phonopy.Result.__init__"]], "_known_data_keys (ase2sprkkr.asr.phonopy.result attribute)": [[346, "ase2sprkkr.asr.phonopy.Result._known_data_keys"]], "dynamic_stability_level (ase2sprkkr.asr.phonopy.result property)": [[346, "ase2sprkkr.asr.phonopy.Result.dynamic_stability_level"]], "eigs_kl (ase2sprkkr.asr.phonopy.result property)": [[346, "ase2sprkkr.asr.phonopy.Result.eigs_kl"]], "formats (ase2sprkkr.asr.phonopy.result attribute)": [[346, "ase2sprkkr.asr.phonopy.Result.formats"]], "irr_l (ase2sprkkr.asr.phonopy.result property)": [[346, "ase2sprkkr.asr.phonopy.Result.irr_l"]], "key_descriptions (ase2sprkkr.asr.phonopy.result attribute)": [[346, "ase2sprkkr.asr.phonopy.Result.key_descriptions"]], "minhessianeig (ase2sprkkr.asr.phonopy.result property)": [[346, "ase2sprkkr.asr.phonopy.Result.minhessianeig"]], "omega_kl (ase2sprkkr.asr.phonopy.result property)": [[346, "ase2sprkkr.asr.phonopy.Result.omega_kl"]], "path (ase2sprkkr.asr.phonopy.result property)": [[346, "ase2sprkkr.asr.phonopy.Result.path"]], "phi_anv (ase2sprkkr.asr.phonopy.result property)": [[346, "ase2sprkkr.asr.phonopy.Result.phi_anv"]], "q_qc (ase2sprkkr.asr.phonopy.result property)": [[346, "ase2sprkkr.asr.phonopy.Result.q_qc"]], "strict (ase2sprkkr.asr.phonopy.result attribute)": [[346, "ase2sprkkr.asr.phonopy.Result.strict"]], "u_klav (ase2sprkkr.asr.phonopy.result property)": [[346, "ase2sprkkr.asr.phonopy.Result.u_klav"]], "distance_to_sc() (in module ase2sprkkr.asr.phonopy)": [[347, "ase2sprkkr.asr.phonopy.distance_to_sc"]], "lattice_vectors() (in module ase2sprkkr.asr.phonopy)": [[348, "ase2sprkkr.asr.phonopy.lattice_vectors"]], "plot_bandstructure() (in module ase2sprkkr.asr.phonopy)": [[349, "ase2sprkkr.asr.phonopy.plot_bandstructure"]], "plot_phonons() (in module ase2sprkkr.asr.phonopy)": [[350, "ase2sprkkr.asr.phonopy.plot_phonons"]], "requires() (in module ase2sprkkr.asr.phonopy)": [[351, "ase2sprkkr.asr.phonopy.requires"]], "webpanel() (in module ase2sprkkr.asr.phonopy)": [[352, "ase2sprkkr.asr.phonopy.webpanel"]], "ase2sprkkr.asr.piezoelectrictensor": [[353, "module-ase2sprkkr.asr.piezoelectrictensor"]], "result (class in ase2sprkkr.asr.piezoelectrictensor)": [[354, "ase2sprkkr.asr.piezoelectrictensor.Result"]], "__init__() (ase2sprkkr.asr.piezoelectrictensor.result method)": [[354, "ase2sprkkr.asr.piezoelectrictensor.Result.__init__"]], "_known_data_keys (ase2sprkkr.asr.piezoelectrictensor.result attribute)": [[354, "ase2sprkkr.asr.piezoelectrictensor.Result._known_data_keys"]], "eps_clamped_vvv (ase2sprkkr.asr.piezoelectrictensor.result property)": [[354, "ase2sprkkr.asr.piezoelectrictensor.Result.eps_clamped_vvv"]], "eps_vvv (ase2sprkkr.asr.piezoelectrictensor.result property)": [[354, "ase2sprkkr.asr.piezoelectrictensor.Result.eps_vvv"]], "formats (ase2sprkkr.asr.piezoelectrictensor.result attribute)": [[354, "ase2sprkkr.asr.piezoelectrictensor.Result.formats"]], "key_descriptions (ase2sprkkr.asr.piezoelectrictensor.result attribute)": [[354, "ase2sprkkr.asr.piezoelectrictensor.Result.key_descriptions"]], "strict (ase2sprkkr.asr.piezoelectrictensor.result attribute)": [[354, "ase2sprkkr.asr.piezoelectrictensor.Result.strict"]], "webpanel() (in module ase2sprkkr.asr.piezoelectrictensor)": [[355, "ase2sprkkr.asr.piezoelectrictensor.webpanel"]], "ase2sprkkr.asr.plasmafrequency": [[356, "module-ase2sprkkr.asr.plasmafrequency"]], "result (class in ase2sprkkr.asr.plasmafrequency)": [[357, "ase2sprkkr.asr.plasmafrequency.Result"]], "__init__() (ase2sprkkr.asr.plasmafrequency.result method)": [[357, "ase2sprkkr.asr.plasmafrequency.Result.__init__"]], "_known_data_keys (ase2sprkkr.asr.plasmafrequency.result attribute)": [[357, "ase2sprkkr.asr.plasmafrequency.Result._known_data_keys"]], "formats (ase2sprkkr.asr.plasmafrequency.result attribute)": [[357, "ase2sprkkr.asr.plasmafrequency.Result.formats"]], "key_descriptions (ase2sprkkr.asr.plasmafrequency.result attribute)": [[357, "ase2sprkkr.asr.plasmafrequency.Result.key_descriptions"]], "plasmafreq_vv (ase2sprkkr.asr.plasmafrequency.result property)": [[357, "ase2sprkkr.asr.plasmafrequency.Result.plasmafreq_vv"]], "plasmafrequency_x (ase2sprkkr.asr.plasmafrequency.result property)": [[357, "ase2sprkkr.asr.plasmafrequency.Result.plasmafrequency_x"]], "plasmafrequency_y (ase2sprkkr.asr.plasmafrequency.result property)": [[357, "ase2sprkkr.asr.plasmafrequency.Result.plasmafrequency_y"]], "strict (ase2sprkkr.asr.plasmafrequency.result attribute)": [[357, "ase2sprkkr.asr.plasmafrequency.Result.strict"]], "get_kpts_size() (in module ase2sprkkr.asr.plasmafrequency)": [[358, "ase2sprkkr.asr.plasmafrequency.get_kpts_size"]], "webpanel() (in module ase2sprkkr.asr.plasmafrequency)": [[359, "ase2sprkkr.asr.plasmafrequency.webpanel"]], "ase2sprkkr.asr.polarizability": [[360, "module-ase2sprkkr.asr.polarizability"]], "result (class in ase2sprkkr.asr.polarizability)": [[361, "ase2sprkkr.asr.polarizability.Result"]], "__init__() (ase2sprkkr.asr.polarizability.result method)": [[361, "ase2sprkkr.asr.polarizability.Result.__init__"]], "_known_data_keys (ase2sprkkr.asr.polarizability.result attribute)": [[361, "ase2sprkkr.asr.polarizability.Result._known_data_keys"]], "alpha0x_w (ase2sprkkr.asr.polarizability.result property)": [[361, "ase2sprkkr.asr.polarizability.Result.alpha0x_w"]], "alpha0y_w (ase2sprkkr.asr.polarizability.result property)": [[361, "ase2sprkkr.asr.polarizability.Result.alpha0y_w"]], "alpha0z_w (ase2sprkkr.asr.polarizability.result property)": [[361, "ase2sprkkr.asr.polarizability.Result.alpha0z_w"]], "alphax_el (ase2sprkkr.asr.polarizability.result property)": [[361, "ase2sprkkr.asr.polarizability.Result.alphax_el"]], "alphax_w (ase2sprkkr.asr.polarizability.result property)": [[361, "ase2sprkkr.asr.polarizability.Result.alphax_w"]], "alphay_el (ase2sprkkr.asr.polarizability.result property)": [[361, "ase2sprkkr.asr.polarizability.Result.alphay_el"]], "alphay_w (ase2sprkkr.asr.polarizability.result property)": [[361, "ase2sprkkr.asr.polarizability.Result.alphay_w"]], "alphaz_el (ase2sprkkr.asr.polarizability.result property)": [[361, "ase2sprkkr.asr.polarizability.Result.alphaz_el"]], "alphaz_w (ase2sprkkr.asr.polarizability.result property)": [[361, "ase2sprkkr.asr.polarizability.Result.alphaz_w"]], "formats (ase2sprkkr.asr.polarizability.result attribute)": [[361, "ase2sprkkr.asr.polarizability.Result.formats"]], "frequencies (ase2sprkkr.asr.polarizability.result property)": [[361, "ase2sprkkr.asr.polarizability.Result.frequencies"]], "key_descriptions (ase2sprkkr.asr.polarizability.result attribute)": [[361, "ase2sprkkr.asr.polarizability.Result.key_descriptions"]], "plasmafreq_vv (ase2sprkkr.asr.polarizability.result property)": [[361, "ase2sprkkr.asr.polarizability.Result.plasmafreq_vv"]], "strict (ase2sprkkr.asr.polarizability.result attribute)": [[361, "ase2sprkkr.asr.polarizability.Result.strict"]], "get_kpts_size() (in module ase2sprkkr.asr.polarizability)": [[362, "ase2sprkkr.asr.polarizability.get_kpts_size"]], "polarizability() (in module ase2sprkkr.asr.polarizability)": [[363, "ase2sprkkr.asr.polarizability.polarizability"]], "webpanel() (in module ase2sprkkr.asr.polarizability)": [[364, "ase2sprkkr.asr.polarizability.webpanel"]], "ase2sprkkr.asr.projected_bandstructure": [[365, "module-ase2sprkkr.asr.projected_bandstructure"]], "result (class in ase2sprkkr.asr.projected_bandstructure)": [[366, "ase2sprkkr.asr.projected_bandstructure.Result"]], "__init__() (ase2sprkkr.asr.projected_bandstructure.result method)": [[366, "ase2sprkkr.asr.projected_bandstructure.Result.__init__"]], "_known_data_keys (ase2sprkkr.asr.projected_bandstructure.result attribute)": [[366, "ase2sprkkr.asr.projected_bandstructure.Result._known_data_keys"]], "formats (ase2sprkkr.asr.projected_bandstructure.result attribute)": [[366, "ase2sprkkr.asr.projected_bandstructure.Result.formats"]], "key_descriptions (ase2sprkkr.asr.projected_bandstructure.result attribute)": [[366, "ase2sprkkr.asr.projected_bandstructure.Result.key_descriptions"]], "strict (ase2sprkkr.asr.projected_bandstructure.result attribute)": [[366, "ase2sprkkr.asr.projected_bandstructure.Result.strict"]], "symbols (ase2sprkkr.asr.projected_bandstructure.result property)": [[366, "ase2sprkkr.asr.projected_bandstructure.Result.symbols"]], "weight_skni (ase2sprkkr.asr.projected_bandstructure.result property)": [[366, "ase2sprkkr.asr.projected_bandstructure.Result.weight_skni"]], "yl_i (ase2sprkkr.asr.projected_bandstructure.result property)": [[366, "ase2sprkkr.asr.projected_bandstructure.Result.yl_i"]], "get_bs_sampling() (in module ase2sprkkr.asr.projected_bandstructure)": [[367, "ase2sprkkr.asr.projected_bandstructure.get_bs_sampling"]], "get_orbital_ldos() (in module ase2sprkkr.asr.projected_bandstructure)": [[368, "ase2sprkkr.asr.projected_bandstructure.get_orbital_ldos"]], "get_pie_markers() (in module ase2sprkkr.asr.projected_bandstructure)": [[369, "ase2sprkkr.asr.projected_bandstructure.get_pie_markers"]], "get_pie_slice() (in module ase2sprkkr.asr.projected_bandstructure)": [[370, "ase2sprkkr.asr.projected_bandstructure.get_pie_slice"]], "get_yl_ordering() (in module ase2sprkkr.asr.projected_bandstructure)": [[371, "ase2sprkkr.asr.projected_bandstructure.get_yl_ordering"]], "projected_bs_pbe() (in module ase2sprkkr.asr.projected_bandstructure)": [[372, "ase2sprkkr.asr.projected_bandstructure.projected_bs_pbe"]], "webpanel() (in module ase2sprkkr.asr.projected_bandstructure)": [[373, "ase2sprkkr.asr.projected_bandstructure.webpanel"]], "ase2sprkkr.asr.push": [[374, "module-ase2sprkkr.asr.push"]], "ase2sprkkr.asr.raman": [[375, "module-ase2sprkkr.asr.raman"]], "result (class in ase2sprkkr.asr.raman)": [[376, "ase2sprkkr.asr.raman.Result"]], "__init__() (ase2sprkkr.asr.raman.result method)": [[376, "ase2sprkkr.asr.raman.Result.__init__"]], "_known_data_keys (ase2sprkkr.asr.raman.result attribute)": [[376, "ase2sprkkr.asr.raman.Result._known_data_keys"]], "formats (ase2sprkkr.asr.raman.result attribute)": [[376, "ase2sprkkr.asr.raman.Result.formats"]], "strict (ase2sprkkr.asr.raman.result attribute)": [[376, "ase2sprkkr.asr.raman.Result.strict"]], "count_deg() (in module ase2sprkkr.asr.raman)": [[377, "ase2sprkkr.asr.raman.count_deg"]], "raman() (in module ase2sprkkr.asr.raman)": [[378, "ase2sprkkr.asr.raman.raman"]], "webpanel() (in module ase2sprkkr.asr.raman)": [[379, "ase2sprkkr.asr.raman.webpanel"]], "ase2sprkkr.asr.relax": [[380, "module-ase2sprkkr.asr.relax"]], "brokensymmetryerror": [[381, "ase2sprkkr.asr.relax.BrokenSymmetryError"]], "result (class in ase2sprkkr.asr.relax)": [[382, "ase2sprkkr.asr.relax.Result"]], "__init__() (ase2sprkkr.asr.relax.result method)": [[382, "ase2sprkkr.asr.relax.Result.__init__"]], "_known_data_keys (ase2sprkkr.asr.relax.result attribute)": [[382, "ase2sprkkr.asr.relax.Result._known_data_keys"]], "a (ase2sprkkr.asr.relax.result property)": [[382, "ase2sprkkr.asr.relax.Result.a"]], "alpha (ase2sprkkr.asr.relax.result property)": [[382, "ase2sprkkr.asr.relax.Result.alpha"]], "atoms (ase2sprkkr.asr.relax.result property)": [[382, "ase2sprkkr.asr.relax.Result.atoms"]], "b (ase2sprkkr.asr.relax.result property)": [[382, "ase2sprkkr.asr.relax.Result.b"]], "beta (ase2sprkkr.asr.relax.result property)": [[382, "ase2sprkkr.asr.relax.Result.beta"]], "c (ase2sprkkr.asr.relax.result property)": [[382, "ase2sprkkr.asr.relax.Result.c"]], "edft (ase2sprkkr.asr.relax.result property)": [[382, "ase2sprkkr.asr.relax.Result.edft"]], "etot (ase2sprkkr.asr.relax.result property)": [[382, "ase2sprkkr.asr.relax.Result.etot"]], "gamma (ase2sprkkr.asr.relax.result property)": [[382, "ase2sprkkr.asr.relax.Result.gamma"]], "images (ase2sprkkr.asr.relax.result property)": [[382, "ase2sprkkr.asr.relax.Result.images"]], "key_descriptions (ase2sprkkr.asr.relax.result attribute)": [[382, "ase2sprkkr.asr.relax.Result.key_descriptions"]], "spos (ase2sprkkr.asr.relax.result property)": [[382, "ase2sprkkr.asr.relax.Result.spos"]], "strict (ase2sprkkr.asr.relax.result attribute)": [[382, "ase2sprkkr.asr.relax.Result.strict"]], "symbols (ase2sprkkr.asr.relax.result property)": [[382, "ase2sprkkr.asr.relax.Result.symbols"]], "version (ase2sprkkr.asr.relax.result attribute)": [[382, "ase2sprkkr.asr.relax.Result.version"]], "spgatoms (class in ase2sprkkr.asr.relax)": [[383, "ase2sprkkr.asr.relax.SpgAtoms"]], "__init__() (ase2sprkkr.asr.relax.spgatoms method)": [[383, "ase2sprkkr.asr.relax.SpgAtoms.__init__"]], "from_atoms() (ase2sprkkr.asr.relax.spgatoms class method)": [[383, "ase2sprkkr.asr.relax.SpgAtoms.from_atoms"]], "get_forces() (ase2sprkkr.asr.relax.spgatoms method)": [[383, "ase2sprkkr.asr.relax.SpgAtoms.get_forces"]], "get_stress() (ase2sprkkr.asr.relax.spgatoms method)": [[383, "ase2sprkkr.asr.relax.SpgAtoms.get_stress"]], "set_symmetries() (ase2sprkkr.asr.relax.spgatoms method)": [[383, "ase2sprkkr.asr.relax.SpgAtoms.set_symmetries"]], "is_relax_done() (in module ase2sprkkr.asr.relax)": [[384, "ase2sprkkr.asr.relax.is_relax_done"]], "__init__() (ase2sprkkr.asr.relax.mybfgs method)": [[385, "ase2sprkkr.asr.relax.myBFGS.__init__"]], "log() (ase2sprkkr.asr.relax.mybfgs method)": [[385, "ase2sprkkr.asr.relax.myBFGS.log"]], "mybfgs (class in ase2sprkkr.asr.relax)": [[385, "ase2sprkkr.asr.relax.myBFGS"]], "relax() (in module ase2sprkkr.asr.relax)": [[386, "ase2sprkkr.asr.relax.relax"]], "set_initial_magnetic_moments() (in module ase2sprkkr.asr.relax)": [[387, "ase2sprkkr.asr.relax.set_initial_magnetic_moments"]], "ase2sprkkr.asr.setinfo": [[388, "module-ase2sprkkr.asr.setinfo"]], "keyvaluepair (class in ase2sprkkr.asr.setinfo)": [[389, "ase2sprkkr.asr.setinfo.KeyValuePair"]], "__init__() (ase2sprkkr.asr.setinfo.keyvaluepair method)": [[389, "ase2sprkkr.asr.setinfo.KeyValuePair.__init__"]], "convert() (ase2sprkkr.asr.setinfo.keyvaluepair method)": [[389, "ase2sprkkr.asr.setinfo.KeyValuePair.convert"]], "check_key_value() (in module ase2sprkkr.asr.setinfo)": [[390, "ase2sprkkr.asr.setinfo.check_key_value"]], "ase2sprkkr.asr.setup": [[391, "module-ase2sprkkr.asr.setup"]], "ase2sprkkr.asr.setup.decorate": [[392, "module-ase2sprkkr.asr.setup.decorate"]], "apply_substitution() (in module ase2sprkkr.asr.setup.decorate)": [[393, "ase2sprkkr.asr.setup.decorate.apply_substitution"]], "find_substitutions() (in module ase2sprkkr.asr.setup.decorate)": [[394, "ase2sprkkr.asr.setup.decorate.find_substitutions"]], "generate_structures() (in module ase2sprkkr.asr.setup.decorate)": [[395, "ase2sprkkr.asr.setup.decorate.generate_structures"]], "get_p_ab() (in module ase2sprkkr.asr.setup.decorate)": [[396, "ase2sprkkr.asr.setup.decorate.get_p_ab"]], "ase2sprkkr.asr.setup.defects": [[397, "module-ase2sprkkr.asr.setup.defects"]], "collect_data() (in module ase2sprkkr.asr.setup.defects)": [[398, "ase2sprkkr.asr.setup.defects.collect_data"]], "create_folder_structure() (in module ase2sprkkr.asr.setup.defects)": [[399, "ase2sprkkr.asr.setup.defects.create_folder_structure"]], "setup_defects() (in module ase2sprkkr.asr.setup.defects)": [[400, "ase2sprkkr.asr.setup.defects.setup_defects"]], "setup_supercell() (in module ase2sprkkr.asr.setup.defects)": [[401, "ase2sprkkr.asr.setup.defects.setup_supercell"]], "ase2sprkkr.asr.setup.displacements": [[402, "module-ase2sprkkr.asr.setup.displacements"]], "create_displacements_folder() (in module ase2sprkkr.asr.setup.displacements)": [[403, "ase2sprkkr.asr.setup.displacements.create_displacements_folder"]], "displace_atom() (in module ase2sprkkr.asr.setup.displacements)": [[404, "ase2sprkkr.asr.setup.displacements.displace_atom"]], "get_all_displacements() (in module ase2sprkkr.asr.setup.displacements)": [[405, "ase2sprkkr.asr.setup.displacements.get_all_displacements"]], "get_displacement_folder() (in module ase2sprkkr.asr.setup.displacements)": [[406, "ase2sprkkr.asr.setup.displacements.get_displacement_folder"]], "ase2sprkkr.asr.setup.magnetize": [[407, "module-ase2sprkkr.asr.setup.magnetize"]], "ase2sprkkr.asr.setup.materials": [[408, "module-ase2sprkkr.asr.setup.materials"]], "ase2sprkkr.asr.setup.params": [[409, "module-ase2sprkkr.asr.setup.params"]], "ase2sprkkr.asr.setup.scanparams": [[410, "module-ase2sprkkr.asr.setup.scanparams"]], "ase2sprkkr.asr.setup.strains": [[411, "module-ase2sprkkr.asr.setup.strains"]], "get_relevant_strains() (in module ase2sprkkr.asr.setup.strains)": [[412, "ase2sprkkr.asr.setup.strains.get_relevant_strains"]], "get_strained_folder_name() (in module ase2sprkkr.asr.setup.strains)": [[413, "ase2sprkkr.asr.setup.strains.get_strained_folder_name"]], "setup_strains() (in module ase2sprkkr.asr.setup.strains)": [[414, "ase2sprkkr.asr.setup.strains.setup_strains"]], "ase2sprkkr.asr.setup.symmetrize": [[415, "module-ase2sprkkr.asr.setup.symmetrize"]], "symmetrize_atoms() (in module ase2sprkkr.asr.setup.symmetrize)": [[416, "ase2sprkkr.asr.setup.symmetrize.symmetrize_atoms"]], "ase2sprkkr.asr.stiffness": [[417, "module-ase2sprkkr.asr.stiffness"]], "result (class in ase2sprkkr.asr.stiffness)": [[418, "ase2sprkkr.asr.stiffness.Result"]], "__init__() (ase2sprkkr.asr.stiffness.result method)": [[418, "ase2sprkkr.asr.stiffness.Result.__init__"]], "_known_data_keys (ase2sprkkr.asr.stiffness.result attribute)": [[418, "ase2sprkkr.asr.stiffness.Result._known_data_keys"]], "c_11 (ase2sprkkr.asr.stiffness.result property)": [[418, "ase2sprkkr.asr.stiffness.Result.c_11"]], "c_12 (ase2sprkkr.asr.stiffness.result property)": [[418, "ase2sprkkr.asr.stiffness.Result.c_12"]], "c_13 (ase2sprkkr.asr.stiffness.result property)": [[418, "ase2sprkkr.asr.stiffness.Result.c_13"]], "c_14 (ase2sprkkr.asr.stiffness.result property)": [[418, "ase2sprkkr.asr.stiffness.Result.c_14"]], "c_15 (ase2sprkkr.asr.stiffness.result property)": [[418, "ase2sprkkr.asr.stiffness.Result.c_15"]], "c_16 (ase2sprkkr.asr.stiffness.result property)": [[418, "ase2sprkkr.asr.stiffness.Result.c_16"]], "c_21 (ase2sprkkr.asr.stiffness.result property)": [[418, "ase2sprkkr.asr.stiffness.Result.c_21"]], "c_22 (ase2sprkkr.asr.stiffness.result property)": [[418, "ase2sprkkr.asr.stiffness.Result.c_22"]], "c_23 (ase2sprkkr.asr.stiffness.result property)": [[418, "ase2sprkkr.asr.stiffness.Result.c_23"]], "c_24 (ase2sprkkr.asr.stiffness.result property)": [[418, "ase2sprkkr.asr.stiffness.Result.c_24"]], "c_25 (ase2sprkkr.asr.stiffness.result property)": [[418, "ase2sprkkr.asr.stiffness.Result.c_25"]], "c_26 (ase2sprkkr.asr.stiffness.result property)": [[418, "ase2sprkkr.asr.stiffness.Result.c_26"]], "c_31 (ase2sprkkr.asr.stiffness.result property)": [[418, "ase2sprkkr.asr.stiffness.Result.c_31"]], "c_32 (ase2sprkkr.asr.stiffness.result property)": [[418, "ase2sprkkr.asr.stiffness.Result.c_32"]], "c_33 (ase2sprkkr.asr.stiffness.result property)": [[418, "ase2sprkkr.asr.stiffness.Result.c_33"]], "c_34 (ase2sprkkr.asr.stiffness.result property)": [[418, "ase2sprkkr.asr.stiffness.Result.c_34"]], "c_35 (ase2sprkkr.asr.stiffness.result property)": [[418, "ase2sprkkr.asr.stiffness.Result.c_35"]], "c_36 (ase2sprkkr.asr.stiffness.result property)": [[418, "ase2sprkkr.asr.stiffness.Result.c_36"]], "c_41 (ase2sprkkr.asr.stiffness.result property)": [[418, "ase2sprkkr.asr.stiffness.Result.c_41"]], "c_42 (ase2sprkkr.asr.stiffness.result property)": [[418, "ase2sprkkr.asr.stiffness.Result.c_42"]], "c_43 (ase2sprkkr.asr.stiffness.result property)": [[418, "ase2sprkkr.asr.stiffness.Result.c_43"]], "c_44 (ase2sprkkr.asr.stiffness.result property)": [[418, "ase2sprkkr.asr.stiffness.Result.c_44"]], "c_45 (ase2sprkkr.asr.stiffness.result property)": [[418, "ase2sprkkr.asr.stiffness.Result.c_45"]], "c_46 (ase2sprkkr.asr.stiffness.result property)": [[418, "ase2sprkkr.asr.stiffness.Result.c_46"]], "c_51 (ase2sprkkr.asr.stiffness.result property)": [[418, "ase2sprkkr.asr.stiffness.Result.c_51"]], "c_52 (ase2sprkkr.asr.stiffness.result property)": [[418, "ase2sprkkr.asr.stiffness.Result.c_52"]], "c_53 (ase2sprkkr.asr.stiffness.result property)": [[418, "ase2sprkkr.asr.stiffness.Result.c_53"]], "c_54 (ase2sprkkr.asr.stiffness.result property)": [[418, "ase2sprkkr.asr.stiffness.Result.c_54"]], "c_55 (ase2sprkkr.asr.stiffness.result property)": [[418, "ase2sprkkr.asr.stiffness.Result.c_55"]], "c_56 (ase2sprkkr.asr.stiffness.result property)": [[418, "ase2sprkkr.asr.stiffness.Result.c_56"]], "c_61 (ase2sprkkr.asr.stiffness.result property)": [[418, "ase2sprkkr.asr.stiffness.Result.c_61"]], "c_62 (ase2sprkkr.asr.stiffness.result property)": [[418, "ase2sprkkr.asr.stiffness.Result.c_62"]], "c_63 (ase2sprkkr.asr.stiffness.result property)": [[418, "ase2sprkkr.asr.stiffness.Result.c_63"]], "c_64 (ase2sprkkr.asr.stiffness.result property)": [[418, "ase2sprkkr.asr.stiffness.Result.c_64"]], "c_65 (ase2sprkkr.asr.stiffness.result property)": [[418, "ase2sprkkr.asr.stiffness.Result.c_65"]], "c_66 (ase2sprkkr.asr.stiffness.result property)": [[418, "ase2sprkkr.asr.stiffness.Result.c_66"]], "dynamic_stability_stiffness (ase2sprkkr.asr.stiffness.result property)": [[418, "ase2sprkkr.asr.stiffness.Result.dynamic_stability_stiffness"]], "eigenvalues (ase2sprkkr.asr.stiffness.result property)": [[418, "ase2sprkkr.asr.stiffness.Result.eigenvalues"]], "formats (ase2sprkkr.asr.stiffness.result attribute)": [[418, "ase2sprkkr.asr.stiffness.Result.formats"]], "key_descriptions (ase2sprkkr.asr.stiffness.result attribute)": [[418, "ase2sprkkr.asr.stiffness.Result.key_descriptions"]], "speed_of_sound_x (ase2sprkkr.asr.stiffness.result property)": [[418, "ase2sprkkr.asr.stiffness.Result.speed_of_sound_x"]], "speed_of_sound_y (ase2sprkkr.asr.stiffness.result property)": [[418, "ase2sprkkr.asr.stiffness.Result.speed_of_sound_y"]], "stiffness_tensor (ase2sprkkr.asr.stiffness.result property)": [[418, "ase2sprkkr.asr.stiffness.Result.stiffness_tensor"]], "strict (ase2sprkkr.asr.stiffness.result attribute)": [[418, "ase2sprkkr.asr.stiffness.Result.strict"]], "webpanel() (in module ase2sprkkr.asr.stiffness)": [[419, "ase2sprkkr.asr.stiffness.webpanel"]], "ase2sprkkr.asr.structureinfo": [[420, "module-ase2sprkkr.asr.structureinfo"]], "result (class in ase2sprkkr.asr.structureinfo)": [[421, "ase2sprkkr.asr.structureinfo.Result"]], "__init__() (ase2sprkkr.asr.structureinfo.result method)": [[421, "ase2sprkkr.asr.structureinfo.Result.__init__"]], "_known_data_keys (ase2sprkkr.asr.structureinfo.result attribute)": [[421, "ase2sprkkr.asr.structureinfo.Result._known_data_keys"]], "cell_area (ase2sprkkr.asr.structureinfo.result property)": [[421, "ase2sprkkr.asr.structureinfo.Result.cell_area"]], "crystal_prototype (ase2sprkkr.asr.structureinfo.result property)": [[421, "ase2sprkkr.asr.structureinfo.Result.crystal_prototype"]], "formats (ase2sprkkr.asr.structureinfo.result attribute)": [[421, "ase2sprkkr.asr.structureinfo.Result.formats"]], "formula (ase2sprkkr.asr.structureinfo.result property)": [[421, "ase2sprkkr.asr.structureinfo.Result.formula"]], "has_inversion_symmetry (ase2sprkkr.asr.structureinfo.result property)": [[421, "ase2sprkkr.asr.structureinfo.Result.has_inversion_symmetry"]], "key_descriptions (ase2sprkkr.asr.structureinfo.result attribute)": [[421, "ase2sprkkr.asr.structureinfo.Result.key_descriptions"]], "pointgroup (ase2sprkkr.asr.structureinfo.result property)": [[421, "ase2sprkkr.asr.structureinfo.Result.pointgroup"]], "spacegroup (ase2sprkkr.asr.structureinfo.result property)": [[421, "ase2sprkkr.asr.structureinfo.Result.spacegroup"]], "spglib_dataset (ase2sprkkr.asr.structureinfo.result property)": [[421, "ase2sprkkr.asr.structureinfo.Result.spglib_dataset"]], "spgnum (ase2sprkkr.asr.structureinfo.result property)": [[421, "ase2sprkkr.asr.structureinfo.Result.spgnum"]], "stoichiometry (ase2sprkkr.asr.structureinfo.result property)": [[421, "ase2sprkkr.asr.structureinfo.Result.stoichiometry"]], "strict (ase2sprkkr.asr.structureinfo.result attribute)": [[421, "ase2sprkkr.asr.structureinfo.Result.strict"]], "get_reduced_formula() (in module ase2sprkkr.asr.structureinfo)": [[422, "ase2sprkkr.asr.structureinfo.get_reduced_formula"]], "webpanel() (in module ase2sprkkr.asr.structureinfo)": [[423, "ase2sprkkr.asr.structureinfo.webpanel"]], "ase2sprkkr.asr.test": [[424, "module-ase2sprkkr.asr.test"]], "ase2sprkkr.asr.test.acceptance": [[425, "module-ase2sprkkr.asr.test.acceptance"]], "ase2sprkkr.asr.test.acceptance.test_borncharges": [[426, "module-ase2sprkkr.asr.test.acceptance.test_borncharges"]], "test_gpaw_berry_get_berry_phases_integration() (in module ase2sprkkr.asr.test.acceptance.test_borncharges)": [[427, "ase2sprkkr.asr.test.acceptance.test_borncharges.test_gpaw_berry_get_berry_phases_integration"]], "ase2sprkkr.asr.test.acceptance.test_piezoelectrictensor": [[428, "module-ase2sprkkr.asr.test.acceptance.test_piezoelectrictensor"]], "test_piezo_bn() (in module ase2sprkkr.asr.test.acceptance.test_piezoelectrictensor)": [[429, "ase2sprkkr.asr.test.acceptance.test_piezoelectrictensor.test_piezo_BN"]], "ase2sprkkr.asr.test.acceptance.test_relax": [[430, "module-ase2sprkkr.asr.test.acceptance.test_relax"]], "test_relax_fe_gpaw() (in module ase2sprkkr.asr.test.acceptance.test_relax)": [[431, "ase2sprkkr.asr.test.acceptance.test_relax.test_relax_fe_gpaw"]], "ase2sprkkr.asr.test.conftest": [[432, "module-ase2sprkkr.asr.test.conftest"]], "pytest_configure() (in module ase2sprkkr.asr.test.conftest)": [[433, "ase2sprkkr.asr.test.conftest.pytest_configure"]], "pytest_sessionstart() (in module ase2sprkkr.asr.test.conftest)": [[434, "ase2sprkkr.asr.test.conftest.pytest_sessionstart"]], "ase2sprkkr.asr.test.fixtures": [[435, "module-ase2sprkkr.asr.test.fixtures"]], "_get_webcontent() (in module ase2sprkkr.asr.test.fixtures)": [[436, "ase2sprkkr.asr.test.fixtures._get_webcontent"]], "asr_tmpdir() (in module ase2sprkkr.asr.test.fixtures)": [[437, "ase2sprkkr.asr.test.fixtures.asr_tmpdir"]], "asr_tmpdir_w_params() (in module ase2sprkkr.asr.test.fixtures)": [[438, "ase2sprkkr.asr.test.fixtures.asr_tmpdir_w_params"]], "duplicates_test_db() (in module ase2sprkkr.asr.test.fixtures)": [[439, "ase2sprkkr.asr.test.fixtures.duplicates_test_db"]], "get_webcontent() (in module ase2sprkkr.asr.test.fixtures)": [[440, "ase2sprkkr.asr.test.fixtures.get_webcontent"]], "mockgpaw() (in module ase2sprkkr.asr.test.fixtures)": [[441, "ase2sprkkr.asr.test.fixtures.mockgpaw"]], "set_asr_test_environ_variable() (in module ase2sprkkr.asr.test.fixtures)": [[442, "ase2sprkkr.asr.test.fixtures.set_asr_test_environ_variable"]], "test_material() (in module ase2sprkkr.asr.test.fixtures)": [[443, "ase2sprkkr.asr.test.fixtures.test_material"]], "ase2sprkkr.asr.test.materials": [[444, "module-ase2sprkkr.asr.test.materials"]], "ase2sprkkr.asr.test.mocks": [[445, "module-ase2sprkkr.asr.test.mocks"]], "ase2sprkkr.asr.test.mocks.gpaw": [[446, "module-ase2sprkkr.asr.test.mocks.gpaw"]], "ase2sprkkr.asr.test.mocks.gpaw.berryphase": [[447, "module-ase2sprkkr.asr.test.mocks.gpaw.berryphase"]], "get_berry_phases() (in module ase2sprkkr.asr.test.mocks.gpaw.berryphase)": [[448, "ase2sprkkr.asr.test.mocks.gpaw.berryphase.get_berry_phases"]], "ase2sprkkr.asr.test.mocks.gpaw.calculator": [[449, "module-ase2sprkkr.asr.test.mocks.gpaw.calculator"]], "asrcalculator (class in ase2sprkkr.asr.test.mocks.gpaw.calculator)": [[450, "ase2sprkkr.asr.test.mocks.gpaw.calculator.ASRCalculator"]], "__init__() (ase2sprkkr.asr.test.mocks.gpaw.calculator.asrcalculator method)": [[450, "ase2sprkkr.asr.test.mocks.gpaw.calculator.ASRCalculator.__init__"]], "_abc_impl (ase2sprkkr.asr.test.mocks.gpaw.calculator.asrcalculator attribute)": [[450, "ase2sprkkr.asr.test.mocks.gpaw.calculator.ASRCalculator._abc_impl"]], "_get_band_gap() (ase2sprkkr.asr.test.mocks.gpaw.calculator.asrcalculator method)": [[450, "ase2sprkkr.asr.test.mocks.gpaw.calculator.ASRCalculator._get_band_gap"]], "_get_berry_phases() (ase2sprkkr.asr.test.mocks.gpaw.calculator.asrcalculator method)": [[450, "ase2sprkkr.asr.test.mocks.gpaw.calculator.ASRCalculator._get_berry_phases"]], "_get_dipole_moment() (ase2sprkkr.asr.test.mocks.gpaw.calculator.asrcalculator method)": [[450, "ase2sprkkr.asr.test.mocks.gpaw.calculator.ASRCalculator._get_dipole_moment"]], "_get_fermi_level() (ase2sprkkr.asr.test.mocks.gpaw.calculator.asrcalculator method)": [[450, "ase2sprkkr.asr.test.mocks.gpaw.calculator.ASRCalculator._get_fermi_level"]], "_get_forces() (ase2sprkkr.asr.test.mocks.gpaw.calculator.asrcalculator method)": [[450, "ase2sprkkr.asr.test.mocks.gpaw.calculator.ASRCalculator._get_forces"]], "_get_magmom() (ase2sprkkr.asr.test.mocks.gpaw.calculator.asrcalculator method)": [[450, "ase2sprkkr.asr.test.mocks.gpaw.calculator.ASRCalculator._get_magmom"]], "_get_magmoms() (ase2sprkkr.asr.test.mocks.gpaw.calculator.asrcalculator method)": [[450, "ase2sprkkr.asr.test.mocks.gpaw.calculator.ASRCalculator._get_magmoms"]], "_get_potential_energy() (ase2sprkkr.asr.test.mocks.gpaw.calculator.asrcalculator method)": [[450, "ase2sprkkr.asr.test.mocks.gpaw.calculator.ASRCalculator._get_potential_energy"]], "_get_scaled_positions() (ase2sprkkr.asr.test.mocks.gpaw.calculator.asrcalculator method)": [[450, "ase2sprkkr.asr.test.mocks.gpaw.calculator.ASRCalculator._get_scaled_positions"]], "_get_setup() (ase2sprkkr.asr.test.mocks.gpaw.calculator.asrcalculator method)": [[450, "ase2sprkkr.asr.test.mocks.gpaw.calculator.ASRCalculator._get_setup"]], "_get_setup_fingerprint() (ase2sprkkr.asr.test.mocks.gpaw.calculator.asrcalculator method)": [[450, "ase2sprkkr.asr.test.mocks.gpaw.calculator.ASRCalculator._get_setup_fingerprint"]], "_get_setup_nvalence() (ase2sprkkr.asr.test.mocks.gpaw.calculator.asrcalculator method)": [[450, "ase2sprkkr.asr.test.mocks.gpaw.calculator.ASRCalculator._get_setup_nvalence"]], "_get_setup_symbol() (ase2sprkkr.asr.test.mocks.gpaw.calculator.asrcalculator method)": [[450, "ase2sprkkr.asr.test.mocks.gpaw.calculator.ASRCalculator._get_setup_symbol"]], "_get_setups() (ase2sprkkr.asr.test.mocks.gpaw.calculator.asrcalculator method)": [[450, "ase2sprkkr.asr.test.mocks.gpaw.calculator.ASRCalculator._get_setups"]], "_get_stress() (ase2sprkkr.asr.test.mocks.gpaw.calculator.asrcalculator method)": [[450, "ase2sprkkr.asr.test.mocks.gpaw.calculator.ASRCalculator._get_stress"]], "calculate() (ase2sprkkr.asr.test.mocks.gpaw.calculator.asrcalculator method)": [[450, "ase2sprkkr.asr.test.mocks.gpaw.calculator.ASRCalculator.calculate"]], "default_parameters (ase2sprkkr.asr.test.mocks.gpaw.calculator.asrcalculator attribute)": [[450, "ase2sprkkr.asr.test.mocks.gpaw.calculator.ASRCalculator.default_parameters"]], "diagonalize_full_hamiltonian() (ase2sprkkr.asr.test.mocks.gpaw.calculator.asrcalculator method)": [[450, "ase2sprkkr.asr.test.mocks.gpaw.calculator.ASRCalculator.diagonalize_full_hamiltonian"]], "dos() (ase2sprkkr.asr.test.mocks.gpaw.calculator.asrcalculator method)": [[450, "ase2sprkkr.asr.test.mocks.gpaw.calculator.ASRCalculator.dos"]], "fixed_density() (ase2sprkkr.asr.test.mocks.gpaw.calculator.asrcalculator method)": [[450, "ase2sprkkr.asr.test.mocks.gpaw.calculator.ASRCalculator.fixed_density"]], "get_all_eigenvalues() (ase2sprkkr.asr.test.mocks.gpaw.calculator.asrcalculator method)": [[450, "ase2sprkkr.asr.test.mocks.gpaw.calculator.ASRCalculator.get_all_eigenvalues"]], "get_bz_k_points() (ase2sprkkr.asr.test.mocks.gpaw.calculator.asrcalculator method)": [[450, "ase2sprkkr.asr.test.mocks.gpaw.calculator.ASRCalculator.get_bz_k_points"]], "get_bz_to_ibz_map() (ase2sprkkr.asr.test.mocks.gpaw.calculator.asrcalculator method)": [[450, "ase2sprkkr.asr.test.mocks.gpaw.calculator.ASRCalculator.get_bz_to_ibz_map"]], "get_eigenvalues() (ase2sprkkr.asr.test.mocks.gpaw.calculator.asrcalculator method)": [[450, "ase2sprkkr.asr.test.mocks.gpaw.calculator.ASRCalculator.get_eigenvalues"]], "get_electrostatic_potential() (ase2sprkkr.asr.test.mocks.gpaw.calculator.asrcalculator method)": [[450, "ase2sprkkr.asr.test.mocks.gpaw.calculator.ASRCalculator.get_electrostatic_potential"]], "get_fermi_level() (ase2sprkkr.asr.test.mocks.gpaw.calculator.asrcalculator method)": [[450, "ase2sprkkr.asr.test.mocks.gpaw.calculator.ASRCalculator.get_fermi_level"]], "get_ibz_k_points() (ase2sprkkr.asr.test.mocks.gpaw.calculator.asrcalculator method)": [[450, "ase2sprkkr.asr.test.mocks.gpaw.calculator.ASRCalculator.get_ibz_k_points"]], "get_k_point_weights() (ase2sprkkr.asr.test.mocks.gpaw.calculator.asrcalculator method)": [[450, "ase2sprkkr.asr.test.mocks.gpaw.calculator.ASRCalculator.get_k_point_weights"]], "get_number_of_bands() (ase2sprkkr.asr.test.mocks.gpaw.calculator.asrcalculator method)": [[450, "ase2sprkkr.asr.test.mocks.gpaw.calculator.ASRCalculator.get_number_of_bands"]], "get_number_of_conduction_electrons() (ase2sprkkr.asr.test.mocks.gpaw.calculator.asrcalculator method)": [[450, "ase2sprkkr.asr.test.mocks.gpaw.calculator.ASRCalculator.get_number_of_conduction_electrons"]], "get_number_of_electrons() (ase2sprkkr.asr.test.mocks.gpaw.calculator.asrcalculator method)": [[450, "ase2sprkkr.asr.test.mocks.gpaw.calculator.ASRCalculator.get_number_of_electrons"]], "get_number_of_spins() (ase2sprkkr.asr.test.mocks.gpaw.calculator.asrcalculator method)": [[450, "ase2sprkkr.asr.test.mocks.gpaw.calculator.ASRCalculator.get_number_of_spins"]], "get_number_of_valence_electrons() (ase2sprkkr.asr.test.mocks.gpaw.calculator.asrcalculator method)": [[450, "ase2sprkkr.asr.test.mocks.gpaw.calculator.ASRCalculator.get_number_of_valence_electrons"]], "implemented_properties (ase2sprkkr.asr.test.mocks.gpaw.calculator.asrcalculator attribute)": [[450, "ase2sprkkr.asr.test.mocks.gpaw.calculator.ASRCalculator.implemented_properties"]], "occupations (ase2sprkkr.asr.test.mocks.gpaw.calculator.asrcalculator attribute)": [[450, "ase2sprkkr.asr.test.mocks.gpaw.calculator.ASRCalculator.occupations"]], "read() (ase2sprkkr.asr.test.mocks.gpaw.calculator.asrcalculator method)": [[450, "ase2sprkkr.asr.test.mocks.gpaw.calculator.ASRCalculator.read"]], "set() (ase2sprkkr.asr.test.mocks.gpaw.calculator.asrcalculator method)": [[450, "ase2sprkkr.asr.test.mocks.gpaw.calculator.ASRCalculator.set"]], "spos_ac (ase2sprkkr.asr.test.mocks.gpaw.calculator.asrcalculator property)": [[450, "ase2sprkkr.asr.test.mocks.gpaw.calculator.ASRCalculator.spos_ac"]], "wfs (ase2sprkkr.asr.test.mocks.gpaw.calculator.asrcalculator attribute)": [[450, "ase2sprkkr.asr.test.mocks.gpaw.calculator.ASRCalculator.wfs"]], "world (ase2sprkkr.asr.test.mocks.gpaw.calculator.asrcalculator attribute)": [[450, "ase2sprkkr.asr.test.mocks.gpaw.calculator.ASRCalculator.world"]], "write() (ase2sprkkr.asr.test.mocks.gpaw.calculator.asrcalculator method)": [[450, "ase2sprkkr.asr.test.mocks.gpaw.calculator.ASRCalculator.write"]], "doscalculator (class in ase2sprkkr.asr.test.mocks.gpaw.calculator)": [[451, "ase2sprkkr.asr.test.mocks.gpaw.calculator.DOSCalculator"]], "__init__() (ase2sprkkr.asr.test.mocks.gpaw.calculator.doscalculator method)": [[451, "ase2sprkkr.asr.test.mocks.gpaw.calculator.DOSCalculator.__init__"]], "raw_dos() (ase2sprkkr.asr.test.mocks.gpaw.calculator.doscalculator method)": [[451, "ase2sprkkr.asr.test.mocks.gpaw.calculator.DOSCalculator.raw_dos"]], "raw_pdos() (ase2sprkkr.asr.test.mocks.gpaw.calculator.doscalculator method)": [[451, "ase2sprkkr.asr.test.mocks.gpaw.calculator.DOSCalculator.raw_pdos"]], "occupations (class in ase2sprkkr.asr.test.mocks.gpaw.calculator)": [[452, "ase2sprkkr.asr.test.mocks.gpaw.calculator.Occupations"]], "__init__() (ase2sprkkr.asr.test.mocks.gpaw.calculator.occupations method)": [[452, "ase2sprkkr.asr.test.mocks.gpaw.calculator.Occupations.__init__"]], "todict() (ase2sprkkr.asr.test.mocks.gpaw.calculator.occupations method)": [[452, "ase2sprkkr.asr.test.mocks.gpaw.calculator.Occupations.todict"]], "parameters (class in ase2sprkkr.asr.test.mocks.gpaw.calculator)": [[453, "ase2sprkkr.asr.test.mocks.gpaw.calculator.Parameters"]], "__init__() (ase2sprkkr.asr.test.mocks.gpaw.calculator.parameters method)": [[453, "ase2sprkkr.asr.test.mocks.gpaw.calculator.Parameters.__init__"]], "setups (class in ase2sprkkr.asr.test.mocks.gpaw.calculator)": [[454, "ase2sprkkr.asr.test.mocks.gpaw.calculator.Setups"]], "__init__() (ase2sprkkr.asr.test.mocks.gpaw.calculator.setups method)": [[454, "ase2sprkkr.asr.test.mocks.gpaw.calculator.Setups.__init__"]], "id_a (ase2sprkkr.asr.test.mocks.gpaw.calculator.setups property)": [[454, "ase2sprkkr.asr.test.mocks.gpaw.calculator.Setups.id_a"]], "nvalence (ase2sprkkr.asr.test.mocks.gpaw.calculator.setups attribute)": [[454, "ase2sprkkr.asr.test.mocks.gpaw.calculator.Setups.nvalence"]], "wavefunctions (class in ase2sprkkr.asr.test.mocks.gpaw.calculator)": [[455, "ase2sprkkr.asr.test.mocks.gpaw.calculator.WaveFunctions"]], "wavefunctions.banddescriptor (class in ase2sprkkr.asr.test.mocks.gpaw.calculator)": [[455, "ase2sprkkr.asr.test.mocks.gpaw.calculator.WaveFunctions.BandDescriptor"]], "wavefunctions.griddescriptor (class in ase2sprkkr.asr.test.mocks.gpaw.calculator)": [[455, "ase2sprkkr.asr.test.mocks.gpaw.calculator.WaveFunctions.GridDescriptor"]], "wavefunctions.kpointdescriptor (class in ase2sprkkr.asr.test.mocks.gpaw.calculator)": [[455, "ase2sprkkr.asr.test.mocks.gpaw.calculator.WaveFunctions.KPointDescriptor"]], "__init__() (ase2sprkkr.asr.test.mocks.gpaw.calculator.wavefunctions method)": [[455, "ase2sprkkr.asr.test.mocks.gpaw.calculator.WaveFunctions.__init__"]], "bd (ase2sprkkr.asr.test.mocks.gpaw.calculator.wavefunctions attribute)": [[455, "ase2sprkkr.asr.test.mocks.gpaw.calculator.WaveFunctions.bd"]], "gd (ase2sprkkr.asr.test.mocks.gpaw.calculator.wavefunctions attribute)": [[455, "ase2sprkkr.asr.test.mocks.gpaw.calculator.WaveFunctions.gd"]], "kd (ase2sprkkr.asr.test.mocks.gpaw.calculator.wavefunctions attribute)": [[455, "ase2sprkkr.asr.test.mocks.gpaw.calculator.WaveFunctions.kd"]], "nvalence (ase2sprkkr.asr.test.mocks.gpaw.calculator.wavefunctions attribute)": [[455, "ase2sprkkr.asr.test.mocks.gpaw.calculator.WaveFunctions.nvalence"]], "ase2sprkkr.asr.test.mocks.gpaw.hybrids": [[456, "module-ase2sprkkr.asr.test.mocks.gpaw.hybrids"]], "ase2sprkkr.asr.test.mocks.gpaw.hybrids.eigenvalues": [[457, "module-ase2sprkkr.asr.test.mocks.gpaw.hybrids.eigenvalues"]], "ase2sprkkr.asr.test.mocks.gpaw.kpt_descriptor": [[458, "module-ase2sprkkr.asr.test.mocks.gpaw.kpt_descriptor"]], "kpts2sizeandoffsets() (in module ase2sprkkr.asr.test.mocks.gpaw.kpt_descriptor)": [[459, "ase2sprkkr.asr.test.mocks.gpaw.kpt_descriptor.kpts2sizeandoffsets"]], "to1bz() (in module ase2sprkkr.asr.test.mocks.gpaw.kpt_descriptor)": [[460, "ase2sprkkr.asr.test.mocks.gpaw.kpt_descriptor.to1bz"]], "ase2sprkkr.asr.test.mocks.gpaw.mpi": [[461, "module-ase2sprkkr.asr.test.mocks.gpaw.mpi"]], "barrier() (in module ase2sprkkr.asr.test.mocks.gpaw.mpi)": [[462, "ase2sprkkr.asr.test.mocks.gpaw.mpi.barrier"]], "broadcast() (in module ase2sprkkr.asr.test.mocks.gpaw.mpi)": [[463, "ase2sprkkr.asr.test.mocks.gpaw.mpi.broadcast"]], "new_communicator() (in module ase2sprkkr.asr.test.mocks.gpaw.mpi)": [[464, "ase2sprkkr.asr.test.mocks.gpaw.mpi.new_communicator"]], "world_sum() (in module ase2sprkkr.asr.test.mocks.gpaw.mpi)": [[465, "ase2sprkkr.asr.test.mocks.gpaw.mpi.world_sum"]], "ase2sprkkr.asr.test.mocks.gpaw.occupations": [[466, "module-ase2sprkkr.asr.test.mocks.gpaw.occupations"]], "fermidirac (class in ase2sprkkr.asr.test.mocks.gpaw.occupations)": [[467, "ase2sprkkr.asr.test.mocks.gpaw.occupations.FermiDirac"]], "__init__() (ase2sprkkr.asr.test.mocks.gpaw.occupations.fermidirac method)": [[467, "ase2sprkkr.asr.test.mocks.gpaw.occupations.FermiDirac.__init__"]], "create_occ_calc() (in module ase2sprkkr.asr.test.mocks.gpaw.occupations)": [[468, "ase2sprkkr.asr.test.mocks.gpaw.occupations.create_occ_calc"]], "ase2sprkkr.asr.test.mocks.gpaw.response": [[469, "module-ase2sprkkr.asr.test.mocks.gpaw.response"]], "ase2sprkkr.asr.test.mocks.gpaw.response.bse": [[470, "module-ase2sprkkr.asr.test.mocks.gpaw.response.bse"]], "bse (class in ase2sprkkr.asr.test.mocks.gpaw.response.bse)": [[471, "ase2sprkkr.asr.test.mocks.gpaw.response.bse.BSE"]], "__init__() (ase2sprkkr.asr.test.mocks.gpaw.response.bse.bse method)": [[471, "ase2sprkkr.asr.test.mocks.gpaw.response.bse.BSE.__init__"]], "calculate() (ase2sprkkr.asr.test.mocks.gpaw.response.bse.bse method)": [[471, "ase2sprkkr.asr.test.mocks.gpaw.response.bse.BSE.calculate"]], "get_polarizability() (ase2sprkkr.asr.test.mocks.gpaw.response.bse.bse method)": [[471, "ase2sprkkr.asr.test.mocks.gpaw.response.bse.BSE.get_polarizability"]], "ase2sprkkr.asr.test.mocks.gpaw.response.df": [[472, "module-ase2sprkkr.asr.test.mocks.gpaw.response.df"]], "dielectricfunction (class in ase2sprkkr.asr.test.mocks.gpaw.response.df)": [[473, "ase2sprkkr.asr.test.mocks.gpaw.response.df.DielectricFunction"]], "__init__() (ase2sprkkr.asr.test.mocks.gpaw.response.df.dielectricfunction method)": [[473, "ase2sprkkr.asr.test.mocks.gpaw.response.df.DielectricFunction.__init__"]], "chi0 (ase2sprkkr.asr.test.mocks.gpaw.response.df.dielectricfunction attribute)": [[473, "ase2sprkkr.asr.test.mocks.gpaw.response.df.DielectricFunction.chi0"]], "get_frequencies() (ase2sprkkr.asr.test.mocks.gpaw.response.df.dielectricfunction method)": [[473, "ase2sprkkr.asr.test.mocks.gpaw.response.df.DielectricFunction.get_frequencies"]], "get_polarizability() (ase2sprkkr.asr.test.mocks.gpaw.response.df.dielectricfunction method)": [[473, "ase2sprkkr.asr.test.mocks.gpaw.response.df.DielectricFunction.get_polarizability"]], "ase2sprkkr.asr.test.mocks.gpaw.response.g0w0": [[474, "module-ase2sprkkr.asr.test.mocks.gpaw.response.g0w0"]], "g0w0 (class in ase2sprkkr.asr.test.mocks.gpaw.response.g0w0)": [[475, "ase2sprkkr.asr.test.mocks.gpaw.response.g0w0.G0W0"]], "__init__() (ase2sprkkr.asr.test.mocks.gpaw.response.g0w0.g0w0 method)": [[475, "ase2sprkkr.asr.test.mocks.gpaw.response.g0w0.G0W0.__init__"]], "calculate() (ase2sprkkr.asr.test.mocks.gpaw.response.g0w0.g0w0 method)": [[475, "ase2sprkkr.asr.test.mocks.gpaw.response.g0w0.G0W0.calculate"]], "ase2sprkkr.asr.test.mocks.gpaw.spinorbit": [[476, "module-ase2sprkkr.asr.test.mocks.gpaw.spinorbit"]], "soc (class in ase2sprkkr.asr.test.mocks.gpaw.spinorbit)": [[477, "ase2sprkkr.asr.test.mocks.gpaw.spinorbit.SOC"]], "__init__() (ase2sprkkr.asr.test.mocks.gpaw.spinorbit.soc method)": [[477, "ase2sprkkr.asr.test.mocks.gpaw.spinorbit.SOC.__init__"]], "calculate_band_energy() (ase2sprkkr.asr.test.mocks.gpaw.spinorbit.soc method)": [[477, "ase2sprkkr.asr.test.mocks.gpaw.spinorbit.SOC.calculate_band_energy"]], "eigenvalues() (ase2sprkkr.asr.test.mocks.gpaw.spinorbit.soc method)": [[477, "ase2sprkkr.asr.test.mocks.gpaw.spinorbit.SOC.eigenvalues"]], "spin_projections() (ase2sprkkr.asr.test.mocks.gpaw.spinorbit.soc method)": [[477, "ase2sprkkr.asr.test.mocks.gpaw.spinorbit.SOC.spin_projections"]], "soc_eigenstates() (in module ase2sprkkr.asr.test.mocks.gpaw.spinorbit)": [[478, "ase2sprkkr.asr.test.mocks.gpaw.spinorbit.soc_eigenstates"]], "ase2sprkkr.asr.test.mocks.gpaw.symmetry": [[479, "module-ase2sprkkr.asr.test.mocks.gpaw.symmetry"]], "symmetry (class in ase2sprkkr.asr.test.mocks.gpaw.symmetry)": [[480, "ase2sprkkr.asr.test.mocks.gpaw.symmetry.Symmetry"]], "__init__() (ase2sprkkr.asr.test.mocks.gpaw.symmetry.symmetry method)": [[480, "ase2sprkkr.asr.test.mocks.gpaw.symmetry.Symmetry.__init__"]], "analyze() (ase2sprkkr.asr.test.mocks.gpaw.symmetry.symmetry method)": [[480, "ase2sprkkr.asr.test.mocks.gpaw.symmetry.Symmetry.analyze"]], "ase2sprkkr.asr.test.mocks.gpaw.utilities": [[481, "module-ase2sprkkr.asr.test.mocks.gpaw.utilities"]], "ase2sprkkr.asr.test.mocks.gpaw.utilities.dos": [[482, "module-ase2sprkkr.asr.test.mocks.gpaw.utilities.dos"]], "raw_orbital_ldos() (in module ase2sprkkr.asr.test.mocks.gpaw.utilities.dos)": [[483, "ase2sprkkr.asr.test.mocks.gpaw.utilities.dos.raw_orbital_LDOS"]], "ase2sprkkr.asr.test.mocks.gpaw.utilities.ibz2bz": [[484, "module-ase2sprkkr.asr.test.mocks.gpaw.utilities.ibz2bz"]], "ibz2bz() (in module ase2sprkkr.asr.test.mocks.gpaw.utilities.ibz2bz)": [[485, "ase2sprkkr.asr.test.mocks.gpaw.utilities.ibz2bz.ibz2bz"]], "ase2sprkkr.asr.test.mocks.gpaw.utilities.progressbar": [[486, "module-ase2sprkkr.asr.test.mocks.gpaw.utilities.progressbar"]], "progressbar (class in ase2sprkkr.asr.test.mocks.gpaw.utilities.progressbar)": [[487, "ase2sprkkr.asr.test.mocks.gpaw.utilities.progressbar.ProgressBar"]], "__init__() (ase2sprkkr.asr.test.mocks.gpaw.utilities.progressbar.progressbar method)": [[487, "ase2sprkkr.asr.test.mocks.gpaw.utilities.progressbar.ProgressBar.__init__"]], "enumerate() (ase2sprkkr.asr.test.mocks.gpaw.utilities.progressbar.progressbar method)": [[487, "ase2sprkkr.asr.test.mocks.gpaw.utilities.progressbar.ProgressBar.enumerate"]], "ase2sprkkr.asr.test.mocks.gpaw.xc": [[488, "module-ase2sprkkr.asr.test.mocks.gpaw.xc"]], "ase2sprkkr.asr.test.mocks.gpaw.xc.exx": [[489, "module-ase2sprkkr.asr.test.mocks.gpaw.xc.exx"]], "ase2sprkkr.asr.test.mocks.gpaw.xc.tools": [[490, "module-ase2sprkkr.asr.test.mocks.gpaw.xc.tools"]], "ase2sprkkr.asr.test.test_bandstructure": [[491, "module-ase2sprkkr.asr.test.test_bandstructure"]], "test_bandstructure_main() (in module ase2sprkkr.asr.test.test_bandstructure)": [[492, "ase2sprkkr.asr.test.test_bandstructure.test_bandstructure_main"]], "ase2sprkkr.asr.test.test_berry": [[493, "module-ase2sprkkr.asr.test.test_berry"]], "test_berry() (in module ase2sprkkr.asr.test.test_berry)": [[494, "ase2sprkkr.asr.test.test_berry.test_berry"]], "test_berry_nontrivial() (in module ase2sprkkr.asr.test.test_berry)": [[495, "ase2sprkkr.asr.test.test_berry.test_berry_nontrivial"]], "ase2sprkkr.asr.test.test_borncharges": [[496, "module-ase2sprkkr.asr.test.test_borncharges"]], "test_borncharges() (in module ase2sprkkr.asr.test.test_borncharges)": [[497, "ase2sprkkr.asr.test.test_borncharges.test_borncharges"]], "ase2sprkkr.asr.test.test_bse": [[498, "module-ase2sprkkr.asr.test.test_bse"]], "test_bse() (in module ase2sprkkr.asr.test.test_bse)": [[499, "ase2sprkkr.asr.test.test_bse.test_bse"]], "ase2sprkkr.asr.test.test_cli": [[500, "module-ase2sprkkr.asr.test.test_cli"]], "test_asr() (in module ase2sprkkr.asr.test.test_cli)": [[501, "ase2sprkkr.asr.test.test_cli.test_asr"]], "test_asr_find() (in module ase2sprkkr.asr.test.test_cli)": [[502, "ase2sprkkr.asr.test.test_cli.test_asr_find"]], "test_asr_find_help() (in module ase2sprkkr.asr.test.test_cli)": [[503, "ase2sprkkr.asr.test.test_cli.test_asr_find_help"]], "test_asr_find_no_versions() (in module ase2sprkkr.asr.test.test_cli)": [[504, "ase2sprkkr.asr.test.test_cli.test_asr_find_no_versions"]], "test_asr_list() (in module ase2sprkkr.asr.test.test_cli)": [[505, "ase2sprkkr.asr.test.test_cli.test_asr_list"]], "test_asr_results_bandstructure() (in module ase2sprkkr.asr.test.test_cli)": [[506, "ase2sprkkr.asr.test.test_cli.test_asr_results_bandstructure"]], "test_asr_results_help() (in module ase2sprkkr.asr.test.test_cli)": [[507, "ase2sprkkr.asr.test.test_cli.test_asr_results_help"]], "test_asr_run() (in module ase2sprkkr.asr.test.test_cli)": [[508, "ase2sprkkr.asr.test.test_cli.test_asr_run"]], "ase2sprkkr.asr.test.test_convex_hull": [[509, "module-ase2sprkkr.asr.test.test_convex_hull"]], "test_convex_hull() (in module ase2sprkkr.asr.test.test_convex_hull)": [[510, "ase2sprkkr.asr.test.test_convex_hull.test_convex_hull"]], "ase2sprkkr.asr.test.test_core": [[511, "module-ase2sprkkr.asr.test.test_core"]], "recipe() (in module ase2sprkkr.asr.test.test_core)": [[512, "ase2sprkkr.asr.test.test_core.recipe"]], "test_core() (in module ase2sprkkr.asr.test.test_core)": [[513, "ase2sprkkr.asr.test.test_core.test_core"]], "test_recipe_defaults() (in module ase2sprkkr.asr.test.test_core)": [[514, "ase2sprkkr.asr.test.test_core.test_recipe_defaults"]], "test_recipe_setting_new_defaults() (in module ase2sprkkr.asr.test.test_core)": [[515, "ase2sprkkr.asr.test.test_core.test_recipe_setting_new_defaults"]], "test_recipe_setting_overriding_defaults() (in module ase2sprkkr.asr.test.test_core)": [[516, "ase2sprkkr.asr.test.test_core.test_recipe_setting_overriding_defaults"]], "ase2sprkkr.asr.test.test_core_material": [[517, "module-ase2sprkkr.asr.test.test_core_material"]], "test_asr_cli_results_figures_gs() (in module ase2sprkkr.asr.test.test_core_material)": [[518, "ase2sprkkr.asr.test.test_core_material.test_asr_cli_results_figures_gs"]], "ase2sprkkr.asr.test.test_core_results": [[519, "module-ase2sprkkr.asr.test.test_core_results"]], "myresult (class in ase2sprkkr.asr.test.test_core_results)": [[520, "ase2sprkkr.asr.test.test_core_results.MyResult"]], "__init__() (ase2sprkkr.asr.test.test_core_results.myresult method)": [[520, "ase2sprkkr.asr.test.test_core_results.MyResult.__init__"]], "_known_data_keys (ase2sprkkr.asr.test.test_core_results.myresult attribute)": [[520, "ase2sprkkr.asr.test.test_core_results.MyResult._known_data_keys"]], "a (ase2sprkkr.asr.test.test_core_results.myresult property)": [[520, "ase2sprkkr.asr.test.test_core_results.MyResult.a"]], "formats (ase2sprkkr.asr.test.test_core_results.myresult attribute)": [[520, "ase2sprkkr.asr.test.test_core_results.MyResult.formats"]], "key_descriptions (ase2sprkkr.asr.test.test_core_results.myresult attribute)": [[520, "ase2sprkkr.asr.test.test_core_results.MyResult.key_descriptions"]], "prev_version (ase2sprkkr.asr.test.test_core_results.myresult attribute)": [[520, "ase2sprkkr.asr.test.test_core_results.MyResult.prev_version"]], "strict (ase2sprkkr.asr.test.test_core_results.myresult attribute)": [[520, "ase2sprkkr.asr.test.test_core_results.MyResult.strict"]], "version (ase2sprkkr.asr.test.test_core_results.myresult attribute)": [[520, "ase2sprkkr.asr.test.test_core_results.MyResult.version"]], "myresultver0 (class in ase2sprkkr.asr.test.test_core_results)": [[521, "ase2sprkkr.asr.test.test_core_results.MyResultVer0"]], "__init__() (ase2sprkkr.asr.test.test_core_results.myresultver0 method)": [[521, "ase2sprkkr.asr.test.test_core_results.MyResultVer0.__init__"]], "_known_data_keys (ase2sprkkr.asr.test.test_core_results.myresultver0 attribute)": [[521, "ase2sprkkr.asr.test.test_core_results.MyResultVer0._known_data_keys"]], "a (ase2sprkkr.asr.test.test_core_results.myresultver0 property)": [[521, "ase2sprkkr.asr.test.test_core_results.MyResultVer0.a"]], "b (ase2sprkkr.asr.test.test_core_results.myresultver0 property)": [[521, "ase2sprkkr.asr.test.test_core_results.MyResultVer0.b"]], "key_descriptions (ase2sprkkr.asr.test.test_core_results.myresultver0 attribute)": [[521, "ase2sprkkr.asr.test.test_core_results.MyResultVer0.key_descriptions"]], "strict (ase2sprkkr.asr.test.test_core_results.myresultver0 attribute)": [[521, "ase2sprkkr.asr.test.test_core_results.MyResultVer0.strict"]], "version (ase2sprkkr.asr.test.test_core_results.myresultver0 attribute)": [[521, "ase2sprkkr.asr.test.test_core_results.MyResultVer0.version"]], "mywebpanel (class in ase2sprkkr.asr.test.test_core_results)": [[522, "ase2sprkkr.asr.test.test_core_results.MyWebPanel"]], "__init__() (ase2sprkkr.asr.test.test_core_results.mywebpanel method)": [[522, "ase2sprkkr.asr.test.test_core_results.MyWebPanel.__init__"]], "_abc_impl (ase2sprkkr.asr.test.test_core_results.mywebpanel attribute)": [[522, "ase2sprkkr.asr.test.test_core_results.MyWebPanel._abc_impl"]], "test_read_old_format() (in module ase2sprkkr.asr.test.test_core_results)": [[523, "ase2sprkkr.asr.test.test_core_results.test_read_old_format"]], "test_reading_older_version() (in module ase2sprkkr.asr.test.test_core_results)": [[524, "ase2sprkkr.asr.test.test_core_results.test_reading_older_version"]], "test_reading_result() (in module ase2sprkkr.asr.test.test_core_results)": [[525, "ase2sprkkr.asr.test.test_core_results.test_reading_result"]], "test_results_object() (in module ase2sprkkr.asr.test.test_core_results)": [[526, "ase2sprkkr.asr.test.test_core_results.test_results_object"]], "ase2sprkkr.asr.test.test_database_duplicates": [[527, "module-ase2sprkkr.asr.test.test_database_duplicates"]], "test_database_duplicates() (in module ase2sprkkr.asr.test.test_database_duplicates)": [[528, "ase2sprkkr.asr.test.test_database_duplicates.test_database_duplicates"]], "test_database_duplicates_filter_magstate() (in module ase2sprkkr.asr.test.test_database_duplicates)": [[529, "ase2sprkkr.asr.test.test_database_duplicates.test_database_duplicates_filter_magstate"]], "test_database_duplicates_no_duplicates() (in module ase2sprkkr.asr.test.test_database_duplicates)": [[530, "ase2sprkkr.asr.test.test_database_duplicates.test_database_duplicates_no_duplicates"]], "ase2sprkkr.asr.test.test_database_fromtree": [[531, "module-ase2sprkkr.asr.test.test_database_fromtree"]], "folder_tree() (in module ase2sprkkr.asr.test.test_database_fromtree)": [[532, "ase2sprkkr.asr.test.test_database_fromtree.folder_tree"]], "make_tree() (in module ase2sprkkr.asr.test.test_database_fromtree)": [[533, "ase2sprkkr.asr.test.test_database_fromtree.make_tree"]], "test_database_fromtree_raises_when_missing_uids() (in module ase2sprkkr.asr.test.test_database_fromtree)": [[534, "ase2sprkkr.asr.test.test_database_fromtree.test_database_fromtree_raises_when_missing_uids"]], "test_database_fromtree_totree() (in module ase2sprkkr.asr.test.test_database_fromtree)": [[535, "ase2sprkkr.asr.test.test_database_fromtree.test_database_fromtree_totree"]], "test_database_fromtree_works_without_write_permission() (in module ase2sprkkr.asr.test.test_database_fromtree)": [[536, "ase2sprkkr.asr.test.test_database_fromtree.test_database_fromtree_works_without_write_permission"]], "ase2sprkkr.asr.test.test_database_rmsd": [[537, "module-ase2sprkkr.asr.test.test_database_rmsd"]], "rattle_atoms() (in module ase2sprkkr.asr.test.test_database_rmsd)": [[538, "ase2sprkkr.asr.test.test_database_rmsd.rattle_atoms"]], "test_database_rmsd_duplicates() (in module ase2sprkkr.asr.test.test_database_rmsd)": [[539, "ase2sprkkr.asr.test.test_database_rmsd.test_database_rmsd_duplicates"]], "test_database_rmsd_duplicates_comparison_keys() (in module ase2sprkkr.asr.test.test_database_rmsd)": [[540, "ase2sprkkr.asr.test.test_database_rmsd.test_database_rmsd_duplicates_comparison_keys"]], "test_database_rmsd_move_one_atom() (in module ase2sprkkr.asr.test.test_database_rmsd)": [[541, "ase2sprkkr.asr.test.test_database_rmsd.test_database_rmsd_move_one_atom"]], "test_database_rmsd_none_handling() (in module ase2sprkkr.asr.test.test_database_rmsd)": [[542, "ase2sprkkr.asr.test.test_database_rmsd.test_database_rmsd_none_handling"]], "test_database_rmsd_not_equal() (in module ase2sprkkr.asr.test.test_database_rmsd)": [[543, "ase2sprkkr.asr.test.test_database_rmsd.test_database_rmsd_not_equal"]], "test_database_rmsd_rattled() (in module ase2sprkkr.asr.test.test_database_rmsd)": [[544, "ase2sprkkr.asr.test.test_database_rmsd.test_database_rmsd_rattled"]], "test_database_rmsd_rotation() (in module ase2sprkkr.asr.test.test_database_rmsd)": [[545, "ase2sprkkr.asr.test.test_database_rmsd.test_database_rmsd_rotation"]], "ase2sprkkr.asr.test.test_database_totree": [[546, "module-ase2sprkkr.asr.test.test_database_totree"]], "make_test_db() (in module ase2sprkkr.asr.test.test_database_totree)": [[547, "ase2sprkkr.asr.test.test_database_totree.make_test_db"]], "test_database_totree() (in module ase2sprkkr.asr.test.test_database_totree)": [[548, "ase2sprkkr.asr.test.test_database_totree.test_database_totree"]], "test_database_totree_files_and_hard_links() (in module ase2sprkkr.asr.test.test_database_totree)": [[549, "ase2sprkkr.asr.test.test_database_totree.test_database_totree_files_and_hard_links"]], "ase2sprkkr.asr.test.test_dimensionality": [[550, "module-ase2sprkkr.asr.test.test_dimensionality"]], "test_dimensionality() (in module ase2sprkkr.asr.test.test_dimensionality)": [[551, "ase2sprkkr.asr.test.test_dimensionality.test_dimensionality"]], "test_dimensionality_cli() (in module ase2sprkkr.asr.test.test_dimensionality)": [[552, "ase2sprkkr.asr.test.test_dimensionality.test_dimensionality_cli"]], "ase2sprkkr.asr.test.test_emasses": [[553, "module-ase2sprkkr.asr.test.test_emasses"]], "_get_all_eigenvalues() (in module ase2sprkkr.asr.test.test_emasses)": [[554, "ase2sprkkr.asr.test.test_emasses._get_all_eigenvalues"]], "resultstest() (in module ase2sprkkr.asr.test.test_emasses)": [[555, "ase2sprkkr.asr.test.test_emasses.resultstest"]], "test_emasses_freelectron() (in module ase2sprkkr.asr.test.test_emasses)": [[556, "ase2sprkkr.asr.test.test_emasses.test_emasses_freelectron"]], "test_emasses_indirect() (in module ase2sprkkr.asr.test.test_emasses)": [[557, "ase2sprkkr.asr.test.test_emasses.test_emasses_indirect"]], "ase2sprkkr.asr.test.test_fixtures": [[558, "module-ase2sprkkr.asr.test.test_fixtures"]], "test_env_variables() (in module ase2sprkkr.asr.test.test_fixtures)": [[559, "ase2sprkkr.asr.test.test_fixtures.test_env_variables"]], "ase2sprkkr.asr.test.test_formalpolarization": [[560, "module-ase2sprkkr.asr.test.test_formalpolarization"]], "test_formalpolarization() (in module ase2sprkkr.asr.test.test_formalpolarization)": [[561, "ase2sprkkr.asr.test.test_formalpolarization.test_formalpolarization"]], "test_formalpolarization_test_atoms_too_close_to_boundary() (in module ase2sprkkr.asr.test.test_formalpolarization)": [[562, "ase2sprkkr.asr.test.test_formalpolarization.test_formalpolarization_test_atoms_too_close_to_boundary"]], "ase2sprkkr.asr.test.test_gs": [[563, "module-ase2sprkkr.asr.test.test_gs"]], "test_gs() (in module ase2sprkkr.asr.test.test_gs)": [[564, "ase2sprkkr.asr.test.test_gs.test_gs"]], "test_gs_asr_cli_results_figures() (in module ase2sprkkr.asr.test.test_gs)": [[565, "ase2sprkkr.asr.test.test_gs.test_gs_asr_cli_results_figures"]], "test_gs_integration_gpaw() (in module ase2sprkkr.asr.test.test_gs)": [[566, "ase2sprkkr.asr.test.test_gs.test_gs_integration_gpaw"]], "ase2sprkkr.asr.test.test_gw": [[567, "module-ase2sprkkr.asr.test.test_gw"]], "test_gw() (in module ase2sprkkr.asr.test.test_gw)": [[568, "ase2sprkkr.asr.test.test_gw.test_gw"]], "ase2sprkkr.asr.test.test_hse": [[569, "module-ase2sprkkr.asr.test.test_hse"]], "test_hse() (in module ase2sprkkr.asr.test.test_hse)": [[570, "ase2sprkkr.asr.test.test_hse.test_hse"]], "ase2sprkkr.asr.test.test_pdos": [[571, "module-ase2sprkkr.asr.test.test_pdos"]], "test_pdos() (in module ase2sprkkr.asr.test.test_pdos)": [[572, "ase2sprkkr.asr.test.test_pdos.test_pdos"]], "test_pdos_full() (in module ase2sprkkr.asr.test.test_pdos)": [[573, "ase2sprkkr.asr.test.test_pdos.test_pdos_full"]], "ase2sprkkr.asr.test.test_phonons": [[574, "module-ase2sprkkr.asr.test.test_phonons"]], "test_phonons() (in module ase2sprkkr.asr.test.test_phonons)": [[575, "ase2sprkkr.asr.test.test_phonons.test_phonons"]], "ase2sprkkr.asr.test.test_phonopy": [[576, "module-ase2sprkkr.asr.test.test_phonopy"]], "test_phonopy() (in module ase2sprkkr.asr.test.test_phonopy)": [[577, "ase2sprkkr.asr.test.test_phonopy.test_phonopy"]], "ase2sprkkr.asr.test.test_piezoelectrictensor": [[578, "module-ase2sprkkr.asr.test.test_piezoelectrictensor"]], "get_strain_from_atoms() (in module ase2sprkkr.asr.test.test_piezoelectrictensor)": [[579, "ase2sprkkr.asr.test.test_piezoelectrictensor.get_strain_from_atoms"]], "test_piezoelectrictensor() (in module ase2sprkkr.asr.test.test_piezoelectrictensor)": [[580, "ase2sprkkr.asr.test.test_piezoelectrictensor.test_piezoelectrictensor"]], "zero_pad_non_pbc_strain_directions() (in module ase2sprkkr.asr.test.test_piezoelectrictensor)": [[581, "ase2sprkkr.asr.test.test_piezoelectrictensor.zero_pad_non_pbc_strain_directions"]], "ase2sprkkr.asr.test.test_plasmafrequency": [[582, "module-ase2sprkkr.asr.test.test_plasmafrequency"]], "test_plasmafrequency() (in module ase2sprkkr.asr.test.test_plasmafrequency)": [[583, "ase2sprkkr.asr.test.test_plasmafrequency.test_plasmafrequency"]], "ase2sprkkr.asr.test.test_polarizability": [[584, "module-ase2sprkkr.asr.test.test_polarizability"]], "test_polarizability() (in module ase2sprkkr.asr.test.test_polarizability)": [[585, "ase2sprkkr.asr.test.test_polarizability.test_polarizability"]], "ase2sprkkr.asr.test.test_projected_bandstructure": [[586, "module-ase2sprkkr.asr.test.test_projected_bandstructure"]], "test_projected_bs_mocked() (in module ase2sprkkr.asr.test.test_projected_bandstructure)": [[587, "ase2sprkkr.asr.test.test_projected_bandstructure.test_projected_bs_mocked"]], "ase2sprkkr.asr.test.test_raman": [[588, "module-ase2sprkkr.asr.test.test_raman"]], "test_raman() (in module ase2sprkkr.asr.test.test_raman)": [[589, "ase2sprkkr.asr.test.test_raman.test_raman"]], "ase2sprkkr.asr.test.test_relax": [[590, "module-ase2sprkkr.asr.test.test_relax"]], "test_relax_basic() (in module ase2sprkkr.asr.test.test_relax)": [[591, "ase2sprkkr.asr.test.test_relax.test_relax_basic"]], "test_relax_bn_gpaw() (in module ase2sprkkr.asr.test.test_relax)": [[592, "ase2sprkkr.asr.test.test_relax.test_relax_bn_gpaw"]], "test_relax_emt() (in module ase2sprkkr.asr.test.test_relax)": [[593, "ase2sprkkr.asr.test.test_relax.test_relax_emt"]], "test_relax_emt_fail_broken_symmetry() (in module ase2sprkkr.asr.test.test_relax)": [[594, "ase2sprkkr.asr.test.test_relax.test_relax_emt_fail_broken_symmetry"]], "test_relax_find_higher_symmetry() (in module ase2sprkkr.asr.test.test_relax)": [[595, "ase2sprkkr.asr.test.test_relax.test_relax_find_higher_symmetry"]], "test_relax_magmoms() (in module ase2sprkkr.asr.test.test_relax)": [[596, "ase2sprkkr.asr.test.test_relax.test_relax_magmoms"]], "test_relax_si_gpaw() (in module ase2sprkkr.asr.test.test_relax)": [[597, "ase2sprkkr.asr.test.test_relax.test_relax_si_gpaw"]], "ase2sprkkr.asr.test.test_setinfo": [[598, "module-ase2sprkkr.asr.test.test_setinfo"]], "test_info() (in module ase2sprkkr.asr.test.test_setinfo)": [[599, "ase2sprkkr.asr.test.test_setinfo.test_info"]], "test_info_call_from_cli() (in module ase2sprkkr.asr.test.test_setinfo)": [[600, "ase2sprkkr.asr.test.test_setinfo.test_info_call_from_cli"]], "test_info_raises_with_protected_key() (in module ase2sprkkr.asr.test.test_setinfo)": [[601, "ase2sprkkr.asr.test.test_setinfo.test_info_raises_with_protected_key"]], "ase2sprkkr.asr.test.test_setup_decorate": [[602, "module-ase2sprkkr.asr.test.test_setup_decorate"]], "test_setup_decorate_si() (in module ase2sprkkr.asr.test.test_setup_decorate)": [[603, "ase2sprkkr.asr.test.test_setup_decorate.test_setup_decorate_si"]], "ase2sprkkr.asr.test.test_setup_displacements": [[604, "module-ase2sprkkr.asr.test.test_setup_displacements"]], "test_setup_displacements() (in module ase2sprkkr.asr.test.test_setup_displacements)": [[605, "ase2sprkkr.asr.test.test_setup_displacements.test_setup_displacements"]], "test_setup_displacements_displace_atom() (in module ase2sprkkr.asr.test.test_setup_displacements)": [[606, "ase2sprkkr.asr.test.test_setup_displacements.test_setup_displacements_displace_atom"]], "test_setup_displacements_get_all_displacements() (in module ase2sprkkr.asr.test.test_setup_displacements)": [[607, "ase2sprkkr.asr.test.test_setup_displacements.test_setup_displacements_get_all_displacements"]], "ase2sprkkr.asr.test.test_setup_magnetize": [[608, "module-ase2sprkkr.asr.test.test_setup_magnetize"]], "test_setup_magnetize() (in module ase2sprkkr.asr.test.test_setup_magnetize)": [[609, "ase2sprkkr.asr.test.test_setup_magnetize.test_setup_magnetize"]], "test_setup_magnetize_state_inputs() (in module ase2sprkkr.asr.test.test_setup_magnetize)": [[610, "ase2sprkkr.asr.test.test_setup_magnetize.test_setup_magnetize_state_inputs"]], "ase2sprkkr.asr.test.test_setup_materials": [[611, "module-ase2sprkkr.asr.test.test_setup_materials"]], "test_setup_magnetize() (in module ase2sprkkr.asr.test.test_setup_materials)": [[612, "ase2sprkkr.asr.test.test_setup_materials.test_setup_magnetize"]], "ase2sprkkr.asr.test.test_setup_scanparams": [[613, "module-ase2sprkkr.asr.test.test_setup_scanparams"]], "test_setup_params() (in module ase2sprkkr.asr.test.test_setup_scanparams)": [[614, "ase2sprkkr.asr.test.test_setup_scanparams.test_setup_params"]], "ase2sprkkr.asr.test.test_setup_strains": [[615, "module-ase2sprkkr.asr.test.test_setup_strains"]], "test_setup_strains() (in module ase2sprkkr.asr.test.test_setup_strains)": [[616, "ase2sprkkr.asr.test.test_setup_strains.test_setup_strains"]], "test_setup_strains_get_relevant_strains() (in module ase2sprkkr.asr.test.test_setup_strains)": [[617, "ase2sprkkr.asr.test.test_setup_strains.test_setup_strains_get_relevant_strains"]], "ase2sprkkr.asr.test.test_setup_symmetrize": [[618, "module-ase2sprkkr.asr.test.test_setup_symmetrize"]], "test_setup_symmetrize() (in module ase2sprkkr.asr.test.test_setup_symmetrize)": [[619, "ase2sprkkr.asr.test.test_setup_symmetrize.test_setup_symmetrize"]], "ase2sprkkr.asr.test.test_stiffness": [[620, "module-ase2sprkkr.asr.test.test_stiffness"]], "test_stiffness_emt() (in module ase2sprkkr.asr.test.test_stiffness)": [[621, "ase2sprkkr.asr.test.test_stiffness.test_stiffness_emt"]], "test_stiffness_gpaw() (in module ase2sprkkr.asr.test.test_stiffness)": [[622, "ase2sprkkr.asr.test.test_stiffness.test_stiffness_gpaw"]], "ase2sprkkr.asr.utils": [[623, "module-ase2sprkkr.asr.utils"]], "ase2sprkkr.asr.utils.args": [[624, "module-ase2sprkkr.asr.utils.args"]], "parse_arg() (in module ase2sprkkr.asr.utils.args)": [[625, "ase2sprkkr.asr.utils.args.parse_arg"]], "ase2sprkkr.asr.utils.calculator_utils": [[626, "module-ase2sprkkr.asr.utils.calculator_utils"]], "fermi_level() (in module ase2sprkkr.asr.utils.calculator_utils)": [[627, "ase2sprkkr.asr.utils.calculator_utils.fermi_level"]], "get_eigenvalues() (in module ase2sprkkr.asr.utils.calculator_utils)": [[628, "ase2sprkkr.asr.utils.calculator_utils.get_eigenvalues"]], "ase2sprkkr.asr.utils.gpw2eigs": [[629, "module-ase2sprkkr.asr.utils.gpw2eigs"]], "calc2eigs() (in module ase2sprkkr.asr.utils.gpw2eigs)": [[630, "ase2sprkkr.asr.utils.gpw2eigs.calc2eigs"]], "gpw2eigs() (in module ase2sprkkr.asr.utils.gpw2eigs)": [[631, "ase2sprkkr.asr.utils.gpw2eigs.gpw2eigs"]], "ase2sprkkr.asr.utils.kpts": [[632, "module-ase2sprkkr.asr.utils.kpts"]], "get_kpts_size() (in module ase2sprkkr.asr.utils.kpts)": [[633, "ase2sprkkr.asr.utils.kpts.get_kpts_size"]], "ase2sprkkr.asr.utils.magnetism": [[634, "module-ase2sprkkr.asr.utils.magnetism"]], "is_magnetic() (in module ase2sprkkr.asr.utils.magnetism)": [[635, "ase2sprkkr.asr.utils.magnetism.is_magnetic"]], "magnetic_atoms() (in module ase2sprkkr.asr.utils.magnetism)": [[636, "ase2sprkkr.asr.utils.magnetism.magnetic_atoms"]], "ase2sprkkr.asr.utils.refinegs": [[637, "module-ase2sprkkr.asr.utils.refinegs"]], "get_filenames() (in module ase2sprkkr.asr.utils.refinegs)": [[638, "ase2sprkkr.asr.utils.refinegs.get_filenames"]], "get_parstr() (in module ase2sprkkr.asr.utils.refinegs)": [[639, "ase2sprkkr.asr.utils.refinegs.get_parstr"]], "nonselfc() (in module ase2sprkkr.asr.utils.refinegs)": [[640, "ase2sprkkr.asr.utils.refinegs.nonselfc"]], "refinegs() (in module ase2sprkkr.asr.utils.refinegs)": [[641, "ase2sprkkr.asr.utils.refinegs.refinegs"]], "ase2sprkkr.asr.utils.something": [[642, "module-ase2sprkkr.asr.utils.something"]], "calculate_something() (in module ase2sprkkr.asr.utils.something)": [[643, "ase2sprkkr.asr.utils.something.calculate_something"]], "collect_data() (in module ase2sprkkr.asr.utils.something)": [[644, "ase2sprkkr.asr.utils.something.collect_data"]], "create_plot() (in module ase2sprkkr.asr.utils.something)": [[645, "ase2sprkkr.asr.utils.something.create_plot"]], "webpanel() (in module ase2sprkkr.asr.utils.something)": [[646, "ase2sprkkr.asr.utils.something.webpanel"]], "ase2sprkkr.asr.utils.symmetry": [[647, "module-ase2sprkkr.asr.utils.symmetry"]], "_atoms2symmetry_gpaw() (in module ase2sprkkr.asr.utils.symmetry)": [[648, "ase2sprkkr.asr.utils.symmetry._atoms2symmetry_gpaw"]], "atoms2spgcell() (in module ase2sprkkr.asr.utils.symmetry)": [[649, "ase2sprkkr.asr.utils.symmetry.atoms2spgcell"]], "atoms2symmetry() (in module ase2sprkkr.asr.utils.symmetry)": [[650, "ase2sprkkr.asr.utils.symmetry.atoms2symmetry"]], "has_inversion() (in module ase2sprkkr.asr.utils.symmetry)": [[651, "ase2sprkkr.asr.utils.symmetry.has_inversion"]], "restrict_spin_projection_2d() (in module ase2sprkkr.asr.utils.symmetry)": [[652, "ase2sprkkr.asr.utils.symmetry.restrict_spin_projection_2d"]], "ase2sprkkr.asr.utils.utils": [[653, "module-ase2sprkkr.asr.utils.utils"]], "timed_print() (in module ase2sprkkr.asr.utils.utils)": [[654, "ase2sprkkr.asr.utils.utils.timed_print"]], "ase2sprkkr.asr.workflow": [[655, "module-ase2sprkkr.asr.workflow"]], "ase2sprkkr.bindings": [[656, "module-ase2sprkkr.bindings"]], "ase2sprkkr.bindings.empty_spheres": [[657, "module-ase2sprkkr.bindings.empty_spheres"]], "emptyspheresresult (class in ase2sprkkr.bindings.empty_spheres)": [[658, "ase2sprkkr.bindings.empty_spheres.EmptySpheresResult"]], "__init__() (ase2sprkkr.bindings.empty_spheres.emptyspheresresult method)": [[658, "ase2sprkkr.bindings.empty_spheres.EmptySpheresResult.__init__"]], "add_empty_spheres() (in module ase2sprkkr.bindings.empty_spheres)": [[659, "ase2sprkkr.bindings.empty_spheres.add_empty_spheres"]], "empty_spheres() (in module ase2sprkkr.bindings.empty_spheres)": [[660, "ase2sprkkr.bindings.empty_spheres.empty_spheres"]], "empty_spheres_atoms() (in module ase2sprkkr.bindings.empty_spheres)": [[661, "ase2sprkkr.bindings.empty_spheres.empty_spheres_atoms"]], "ase2sprkkr.bindings.es_finder": [[662, "module-ase2sprkkr.bindings.es_finder"]], "empty_spheres() (in module ase2sprkkr.bindings.es_finder)": [[663, "ase2sprkkr.bindings.es_finder.empty_spheres"]], "ase2sprkkr.bindings.nomad": [[664, "module-ase2sprkkr.bindings.nomad"]], "ase2sprkkr.bindings.nomad.nomad": [[665, "module-ase2sprkkr.bindings.nomad.nomad"]], "externalentry (class in ase2sprkkr.bindings.nomad.nomad)": [[666, "ase2sprkkr.bindings.nomad.nomad.ExternalEntry"]], "__init__() (ase2sprkkr.bindings.nomad.nomad.externalentry method)": [[666, "ase2sprkkr.bindings.nomad.nomad.ExternalEntry.__init__"]], "outputs() (ase2sprkkr.bindings.nomad.nomad.externalentry method)": [[666, "ase2sprkkr.bindings.nomad.nomad.ExternalEntry.outputs"]], "nomadarchive (class in ase2sprkkr.bindings.nomad.nomad)": [[667, "ase2sprkkr.bindings.nomad.nomad.NomadArchive"]], "__init__() (ase2sprkkr.bindings.nomad.nomad.nomadarchive method)": [[667, "ase2sprkkr.bindings.nomad.nomad.NomadArchive.__init__"]], "_add_entry() (ase2sprkkr.bindings.nomad.nomad.nomadarchive method)": [[667, "ase2sprkkr.bindings.nomad.nomad.NomadArchive._add_entry"]], "add_entry() (ase2sprkkr.bindings.nomad.nomad.nomadarchive method)": [[667, "ase2sprkkr.bindings.nomad.nomad.NomadArchive.add_entry"]], "add_symlink() (ase2sprkkr.bindings.nomad.nomad.nomadarchive method)": [[667, "ase2sprkkr.bindings.nomad.nomad.NomadArchive.add_symlink"]], "finalize() (ase2sprkkr.bindings.nomad.nomad.nomadarchive method)": [[667, "ase2sprkkr.bindings.nomad.nomad.NomadArchive.finalize"]], "resolve_auto_dependencies() (ase2sprkkr.bindings.nomad.nomad.nomadarchive method)": [[667, "ase2sprkkr.bindings.nomad.nomad.NomadArchive.resolve_auto_dependencies"]], "workflow() (ase2sprkkr.bindings.nomad.nomad.nomadarchive method)": [[667, "ase2sprkkr.bindings.nomad.nomad.NomadArchive.workflow"]], "nomadentry (class in ase2sprkkr.bindings.nomad.nomad)": [[668, "ase2sprkkr.bindings.nomad.nomad.NomadEntry"]], "__init__() (ase2sprkkr.bindings.nomad.nomad.nomadentry method)": [[668, "ase2sprkkr.bindings.nomad.nomad.NomadEntry.__init__"]], "_resource() (ase2sprkkr.bindings.nomad.nomad.nomadentry method)": [[668, "ase2sprkkr.bindings.nomad.nomad.NomadEntry._resource"]], "depends_on (ase2sprkkr.bindings.nomad.nomad.nomadentry property)": [[668, "ase2sprkkr.bindings.nomad.nomad.NomadEntry.depends_on"]], "file() (ase2sprkkr.bindings.nomad.nomad.nomadentry method)": [[668, "ase2sprkkr.bindings.nomad.nomad.NomadEntry.file"]], "inputs() (ase2sprkkr.bindings.nomad.nomad.nomadentry method)": [[668, "ase2sprkkr.bindings.nomad.nomad.NomadEntry.inputs"]], "outputs() (ase2sprkkr.bindings.nomad.nomad.nomadentry method)": [[668, "ase2sprkkr.bindings.nomad.nomad.NomadEntry.outputs"]], "symbols (ase2sprkkr.bindings.nomad.nomad.nomadentry property)": [[668, "ase2sprkkr.bindings.nomad.nomad.NomadEntry.symbols"]], "task() (ase2sprkkr.bindings.nomad.nomad.nomadentry method)": [[668, "ase2sprkkr.bindings.nomad.nomad.NomadEntry.task"]], "task_name (ase2sprkkr.bindings.nomad.nomad.nomadentry property)": [[668, "ase2sprkkr.bindings.nomad.nomad.NomadEntry.task_name"]], "map_io_to_nomad() (in module ase2sprkkr.bindings.nomad.nomad)": [[669, "ase2sprkkr.bindings.nomad.nomad.map_io_to_nomad"]], "ase2sprkkr.bindings.nomad.nomad_api": [[670, "module-ase2sprkkr.bindings.nomad.nomad_api"]], "nomadapi (class in ase2sprkkr.bindings.nomad.nomad_api)": [[671, "ase2sprkkr.bindings.nomad.nomad_api.NomadApi"]], "__init__() (ase2sprkkr.bindings.nomad.nomad_api.nomadapi method)": [[671, "ase2sprkkr.bindings.nomad.nomad_api.NomadApi.__init__"]], "check_upload_status() (ase2sprkkr.bindings.nomad.nomad_api.nomadapi method)": [[671, "ase2sprkkr.bindings.nomad.nomad_api.NomadApi.check_upload_status"]], "create_dataset() (ase2sprkkr.bindings.nomad.nomad_api.nomadapi method)": [[671, "ase2sprkkr.bindings.nomad.nomad_api.NomadApi.create_dataset"]], "default_api_url (ase2sprkkr.bindings.nomad.nomad_api.nomadapi attribute)": [[671, "ase2sprkkr.bindings.nomad.nomad_api.NomadApi.default_api_url"]], "edit_upload_metadata() (ase2sprkkr.bindings.nomad.nomad_api.nomadapi method)": [[671, "ase2sprkkr.bindings.nomad.nomad_api.NomadApi.edit_upload_metadata"]], "get_authentication_token() (ase2sprkkr.bindings.nomad.nomad_api.nomadapi method)": [[671, "ase2sprkkr.bindings.nomad.nomad_api.NomadApi.get_authentication_token"]], "publish_upload() (ase2sprkkr.bindings.nomad.nomad_api.nomadapi method)": [[671, "ase2sprkkr.bindings.nomad.nomad_api.NomadApi.publish_upload"]], "requests (ase2sprkkr.bindings.nomad.nomad_api.nomadapi attribute)": [[671, "ase2sprkkr.bindings.nomad.nomad_api.NomadApi.requests"]], "upload() (ase2sprkkr.bindings.nomad.nomad_api.nomadapi method)": [[671, "ase2sprkkr.bindings.nomad.nomad_api.NomadApi.upload"]], "with_token() (in module ase2sprkkr.bindings.nomad.nomad_api)": [[672, "ase2sprkkr.bindings.nomad.nomad_api.with_token"]], "ase2sprkkr.bindings.spglib": [[673, "module-ase2sprkkr.bindings.spglib"]], "spacegroupinfo (class in ase2sprkkr.bindings.spglib)": [[674, "ase2sprkkr.bindings.spglib.SpacegroupInfo"]], "__init__() (ase2sprkkr.bindings.spglib.spacegroupinfo method)": [[674, "ase2sprkkr.bindings.spglib.SpacegroupInfo.__init__"]], "compute_spacegroup_info() (ase2sprkkr.bindings.spglib.spacegroupinfo static method)": [[674, "ase2sprkkr.bindings.spglib.SpacegroupInfo.compute_spacegroup_info"]], "dataset (ase2sprkkr.bindings.spglib.spacegroupinfo property)": [[674, "ase2sprkkr.bindings.spglib.SpacegroupInfo.dataset"]], "equivalent_sites (ase2sprkkr.bindings.spglib.spacegroupinfo property)": [[674, "ase2sprkkr.bindings.spglib.SpacegroupInfo.equivalent_sites"]], "from_atoms() (ase2sprkkr.bindings.spglib.spacegroupinfo static method)": [[674, "ase2sprkkr.bindings.spglib.SpacegroupInfo.from_atoms"]], "number() (ase2sprkkr.bindings.spglib.spacegroupinfo method)": [[674, "ase2sprkkr.bindings.spglib.SpacegroupInfo.number"]], "recompute() (ase2sprkkr.bindings.spglib.spacegroupinfo method)": [[674, "ase2sprkkr.bindings.spglib.SpacegroupInfo.recompute"]], "possibly_equivalent_sites() (in module ase2sprkkr.bindings.spglib)": [[675, "ase2sprkkr.bindings.spglib.possibly_equivalent_sites"]], "spglib_dataset() (in module ase2sprkkr.bindings.spglib)": [[676, "ase2sprkkr.bindings.spglib.spglib_dataset"]], "ase2sprkkr.bindings.tests": [[677, "module-ase2sprkkr.bindings.tests"]], "ase2sprkkr.bindings.tests.init_tests": [[678, "module-ase2sprkkr.bindings.tests.init_tests"]], "testcase (class in ase2sprkkr.bindings.tests.init_tests)": [[679, "ase2sprkkr.bindings.tests.init_tests.TestCase"]], "__init__() (ase2sprkkr.bindings.tests.init_tests.testcase method)": [[679, "ase2sprkkr.bindings.tests.init_tests.TestCase.__init__"]], "_calc_args (ase2sprkkr.bindings.tests.init_tests.testcase attribute)": [[679, "ase2sprkkr.bindings.tests.init_tests.TestCase._calc_args"]], "_print_output (ase2sprkkr.bindings.tests.init_tests.testcase attribute)": [[679, "ase2sprkkr.bindings.tests.init_tests.TestCase._print_output"]], "almost_equal_precision() (ase2sprkkr.bindings.tests.init_tests.testcase class method)": [[679, "ase2sprkkr.bindings.tests.init_tests.TestCase.almost_equal_precision"]], "assertalmostequal() (ase2sprkkr.bindings.tests.init_tests.testcase method)": [[679, "ase2sprkkr.bindings.tests.init_tests.TestCase.assertAlmostEqual"]], "assertasyncequal() (ase2sprkkr.bindings.tests.init_tests.testcase method)": [[679, "ase2sprkkr.bindings.tests.init_tests.TestCase.assertAsyncEqual"]], "assertasyncraises() (ase2sprkkr.bindings.tests.init_tests.testcase method)": [[679, "ase2sprkkr.bindings.tests.init_tests.TestCase.assertAsyncRaises"]], "assertequal() (ase2sprkkr.bindings.tests.init_tests.testcase method)": [[679, "ase2sprkkr.bindings.tests.init_tests.TestCase.assertEqual"]], "assertfalse() (ase2sprkkr.bindings.tests.init_tests.testcase method)": [[679, "ase2sprkkr.bindings.tests.init_tests.TestCase.assertFalse"]], "assertisnone() (ase2sprkkr.bindings.tests.init_tests.testcase method)": [[679, "ase2sprkkr.bindings.tests.init_tests.TestCase.assertIsNone"]], "assertnotequal() (ase2sprkkr.bindings.tests.init_tests.testcase method)": [[679, "ase2sprkkr.bindings.tests.init_tests.TestCase.assertNotEqual"]], "assertraises() (ase2sprkkr.bindings.tests.init_tests.testcase method)": [[679, "ase2sprkkr.bindings.tests.init_tests.TestCase.assertRaises"]], "asserttrue() (ase2sprkkr.bindings.tests.init_tests.testcase method)": [[679, "ase2sprkkr.bindings.tests.init_tests.TestCase.assertTrue"]], "calc_args() (ase2sprkkr.bindings.tests.init_tests.testcase class method)": [[679, "ase2sprkkr.bindings.tests.init_tests.TestCase.calc_args"]], "runasync() (ase2sprkkr.bindings.tests.init_tests.testcase static method)": [[679, "ase2sprkkr.bindings.tests.init_tests.TestCase.runAsync"]], "run_sprkkr() (ase2sprkkr.bindings.tests.init_tests.testcase method)": [[679, "ase2sprkkr.bindings.tests.init_tests.TestCase.run_sprkkr"]], "temporary_dir() (ase2sprkkr.bindings.tests.init_tests.testcase method)": [[679, "ase2sprkkr.bindings.tests.init_tests.TestCase.temporary_dir"]], "arr_testfce() (in module ase2sprkkr.bindings.tests.init_tests)": [[680, "ase2sprkkr.bindings.tests.init_tests.arr_testfce"]], "assertdictequal() (in module ase2sprkkr.bindings.tests.init_tests)": [[681, "ase2sprkkr.bindings.tests.init_tests.assertDictEqual"]], "assertlistequal() (in module ase2sprkkr.bindings.tests.init_tests)": [[682, "ase2sprkkr.bindings.tests.init_tests.assertListEqual"]], "assert_almost_equals() (in module ase2sprkkr.bindings.tests.init_tests)": [[683, "ase2sprkkr.bindings.tests.init_tests.assert_almost_equals"]], "assert_equals() (in module ase2sprkkr.bindings.tests.init_tests)": [[684, "ase2sprkkr.bindings.tests.init_tests.assert_equals"]], "__init__() (ase2sprkkr.bindings.tests.init_tests.extdict method)": [[685, "ase2sprkkr.bindings.tests.init_tests.extdict.__init__"]], "extdict (class in ase2sprkkr.bindings.tests.init_tests)": [[685, "ase2sprkkr.bindings.tests.init_tests.extdict"]], "testfce() (in module ase2sprkkr.bindings.tests.init_tests)": [[686, "ase2sprkkr.bindings.tests.init_tests.testfce"]], "ase2sprkkr.bindings.tests.test_es_finder": [[687, "module-ase2sprkkr.bindings.tests.test_es_finder"]], "testesfinder (class in ase2sprkkr.bindings.tests.test_es_finder)": [[688, "ase2sprkkr.bindings.tests.test_es_finder.TestEsFinder"]], "__init__() (ase2sprkkr.bindings.tests.test_es_finder.testesfinder method)": [[688, "ase2sprkkr.bindings.tests.test_es_finder.TestEsFinder.__init__"]], "test_es_finder() (ase2sprkkr.bindings.tests.test_es_finder.testesfinder method)": [[688, "ase2sprkkr.bindings.tests.test_es_finder.TestEsFinder.test_es_finder"]], "ase2sprkkr.bindings.tests.test_spglib": [[689, "module-ase2sprkkr.bindings.tests.test_spglib"]], "testspgilib (class in ase2sprkkr.bindings.tests.test_spglib)": [[690, "ase2sprkkr.bindings.tests.test_spglib.TestSpgilib"]], "__init__() (ase2sprkkr.bindings.tests.test_spglib.testspgilib method)": [[690, "ase2sprkkr.bindings.tests.test_spglib.TestSpgilib.__init__"]], "test_possibly_equivalent_sites() (ase2sprkkr.bindings.tests.test_spglib.testspgilib method)": [[690, "ase2sprkkr.bindings.tests.test_spglib.TestSpgilib.test_possibly_equivalent_sites"]], "test_spacegroup_info() (ase2sprkkr.bindings.tests.test_spglib.testspgilib method)": [[690, "ase2sprkkr.bindings.tests.test_spglib.TestSpgilib.test_spacegroup_info"]], "ase2sprkkr.bindings.xband": [[691, "module-ase2sprkkr.bindings.xband"]], "ase2sprkkr.bindings.xband.spheres": [[692, "module-ase2sprkkr.bindings.xband.spheres"]], "ase2sprkkr.bindings.xband.symmetry": [[693, "module-ase2sprkkr.bindings.xband.symmetry"]], "ase2sprkkr.bindings.xband.tests": [[694, "module-ase2sprkkr.bindings.xband.tests"]], "ase2sprkkr.bindings.xband.tests.init_tests": [[695, "module-ase2sprkkr.bindings.xband.tests.init_tests"]], "testcase (class in ase2sprkkr.bindings.xband.tests.init_tests)": [[696, "ase2sprkkr.bindings.xband.tests.init_tests.TestCase"]], "__init__() (ase2sprkkr.bindings.xband.tests.init_tests.testcase method)": [[696, "ase2sprkkr.bindings.xband.tests.init_tests.TestCase.__init__"]], "_calc_args (ase2sprkkr.bindings.xband.tests.init_tests.testcase attribute)": [[696, "ase2sprkkr.bindings.xband.tests.init_tests.TestCase._calc_args"]], "_print_output (ase2sprkkr.bindings.xband.tests.init_tests.testcase attribute)": [[696, "ase2sprkkr.bindings.xband.tests.init_tests.TestCase._print_output"]], "almost_equal_precision() (ase2sprkkr.bindings.xband.tests.init_tests.testcase class method)": [[696, "ase2sprkkr.bindings.xband.tests.init_tests.TestCase.almost_equal_precision"]], "assertalmostequal() (ase2sprkkr.bindings.xband.tests.init_tests.testcase method)": [[696, "ase2sprkkr.bindings.xband.tests.init_tests.TestCase.assertAlmostEqual"]], "assertasyncequal() (ase2sprkkr.bindings.xband.tests.init_tests.testcase method)": [[696, "ase2sprkkr.bindings.xband.tests.init_tests.TestCase.assertAsyncEqual"]], "assertasyncraises() (ase2sprkkr.bindings.xband.tests.init_tests.testcase method)": [[696, "ase2sprkkr.bindings.xband.tests.init_tests.TestCase.assertAsyncRaises"]], "assertequal() (ase2sprkkr.bindings.xband.tests.init_tests.testcase method)": [[696, "ase2sprkkr.bindings.xband.tests.init_tests.TestCase.assertEqual"]], "assertfalse() (ase2sprkkr.bindings.xband.tests.init_tests.testcase method)": [[696, "ase2sprkkr.bindings.xband.tests.init_tests.TestCase.assertFalse"]], "assertisnone() (ase2sprkkr.bindings.xband.tests.init_tests.testcase method)": [[696, "ase2sprkkr.bindings.xband.tests.init_tests.TestCase.assertIsNone"]], "assertnotequal() (ase2sprkkr.bindings.xband.tests.init_tests.testcase method)": [[696, "ase2sprkkr.bindings.xband.tests.init_tests.TestCase.assertNotEqual"]], "assertraises() (ase2sprkkr.bindings.xband.tests.init_tests.testcase method)": [[696, "ase2sprkkr.bindings.xband.tests.init_tests.TestCase.assertRaises"]], "asserttrue() (ase2sprkkr.bindings.xband.tests.init_tests.testcase method)": [[696, "ase2sprkkr.bindings.xband.tests.init_tests.TestCase.assertTrue"]], "calc_args() (ase2sprkkr.bindings.xband.tests.init_tests.testcase class method)": [[696, "ase2sprkkr.bindings.xband.tests.init_tests.TestCase.calc_args"]], "runasync() (ase2sprkkr.bindings.xband.tests.init_tests.testcase static method)": [[696, "ase2sprkkr.bindings.xband.tests.init_tests.TestCase.runAsync"]], "run_sprkkr() (ase2sprkkr.bindings.xband.tests.init_tests.testcase method)": [[696, "ase2sprkkr.bindings.xband.tests.init_tests.TestCase.run_sprkkr"]], "temporary_dir() (ase2sprkkr.bindings.xband.tests.init_tests.testcase method)": [[696, "ase2sprkkr.bindings.xband.tests.init_tests.TestCase.temporary_dir"]], "arr_testfce() (in module ase2sprkkr.bindings.xband.tests.init_tests)": [[697, "ase2sprkkr.bindings.xband.tests.init_tests.arr_testfce"]], "assertdictequal() (in module ase2sprkkr.bindings.xband.tests.init_tests)": [[698, "ase2sprkkr.bindings.xband.tests.init_tests.assertDictEqual"]], "assertlistequal() (in module ase2sprkkr.bindings.xband.tests.init_tests)": [[699, "ase2sprkkr.bindings.xband.tests.init_tests.assertListEqual"]], "assert_almost_equals() (in module ase2sprkkr.bindings.xband.tests.init_tests)": [[700, "ase2sprkkr.bindings.xband.tests.init_tests.assert_almost_equals"]], "assert_equals() (in module ase2sprkkr.bindings.xband.tests.init_tests)": [[701, "ase2sprkkr.bindings.xband.tests.init_tests.assert_equals"]], "__init__() (ase2sprkkr.bindings.xband.tests.init_tests.extdict method)": [[702, "ase2sprkkr.bindings.xband.tests.init_tests.extdict.__init__"]], "extdict (class in ase2sprkkr.bindings.xband.tests.init_tests)": [[702, "ase2sprkkr.bindings.xband.tests.init_tests.extdict"]], "patch_package() (in module ase2sprkkr.bindings.xband.tests.init_tests)": [[703, "ase2sprkkr.bindings.xband.tests.init_tests.patch_package"]], "testfce() (in module ase2sprkkr.bindings.xband.tests.init_tests)": [[704, "ase2sprkkr.bindings.xband.tests.init_tests.testfce"]], "ase2sprkkr.bindings.xband.tests.test_spheres": [[705, "module-ase2sprkkr.bindings.xband.tests.test_spheres"]], "testspheres (class in ase2sprkkr.bindings.xband.tests.test_spheres)": [[706, "ase2sprkkr.bindings.xband.tests.test_spheres.TestSpheres"]], "__init__() (ase2sprkkr.bindings.xband.tests.test_spheres.testspheres method)": [[706, "ase2sprkkr.bindings.xband.tests.test_spheres.TestSpheres.__init__"]], "test() (ase2sprkkr.bindings.xband.tests.test_spheres.testspheres method)": [[706, "ase2sprkkr.bindings.xband.tests.test_spheres.TestSpheres.test"]], "test_xband() (ase2sprkkr.bindings.xband.tests.test_spheres.testspheres method)": [[706, "ase2sprkkr.bindings.xband.tests.test_spheres.TestSpheres.test_xband"]], "ase2sprkkr.common": [[707, "module-ase2sprkkr.common"]], "ase2sprkkr.common.alternative_types": [[708, "module-ase2sprkkr.common.alternative_types"]], "allowed_types (in module ase2sprkkr.common.alternative_types)": [[709, "ase2sprkkr.common.alternative_types.allowed_types"]], "normalize_type() (in module ase2sprkkr.common.alternative_types)": [[710, "ase2sprkkr.common.alternative_types.normalize_type"]], "normalize_type_map (in module ase2sprkkr.common.alternative_types)": [[711, "ase2sprkkr.common.alternative_types.normalize_type_map"]], "numpy_types (in module ase2sprkkr.common.alternative_types)": [[712, "ase2sprkkr.common.alternative_types.numpy_types"]], "types_alternatives (in module ase2sprkkr.common.alternative_types)": [[713, "ase2sprkkr.common.alternative_types.types_alternatives"]], "ase2sprkkr.common.backward_compatibility": [[714, "module-ase2sprkkr.common.backward_compatibility"]], "ase2sprkkr.common.configuration": [[715, "module-ase2sprkkr.common.configuration"]], "configuration (class in ase2sprkkr.common.configuration)": [[716, "ase2sprkkr.common.configuration.Configuration"]], "__init__() (ase2sprkkr.common.configuration.configuration method)": [[716, "ase2sprkkr.common.configuration.Configuration.__init__"]], "_as_dict() (ase2sprkkr.common.configuration.configuration method)": [[716, "ase2sprkkr.common.configuration.Configuration._as_dict"]], "_container (ase2sprkkr.common.configuration.configuration attribute)": [[716, "ase2sprkkr.common.configuration.Configuration._container"]], "_definition (ase2sprkkr.common.configuration.configuration attribute)": [[716, "ase2sprkkr.common.configuration.Configuration._definition"]], "_find_member() (ase2sprkkr.common.configuration.configuration method)": [[716, "ase2sprkkr.common.configuration.Configuration._find_member"]], "_get_path() (ase2sprkkr.common.configuration.configuration method)": [[716, "ase2sprkkr.common.configuration.Configuration._get_path"]], "_get_root_container() (ase2sprkkr.common.configuration.configuration method)": [[716, "ase2sprkkr.common.configuration.Configuration._get_root_container"]], "as_dict() (ase2sprkkr.common.configuration.configuration method)": [[716, "ase2sprkkr.common.configuration.Configuration.as_dict"]], "as_dict_getter() (ase2sprkkr.common.configuration.configuration static method)": [[716, "ase2sprkkr.common.configuration.Configuration.as_dict_getter"]], "check_for_errors() (ase2sprkkr.common.configuration.configuration method)": [[716, "ase2sprkkr.common.configuration.Configuration.check_for_errors"]], "doc (ase2sprkkr.common.configuration.configuration property)": [[716, "ase2sprkkr.common.configuration.Configuration.doc"]], "help() (ase2sprkkr.common.configuration.configuration method)": [[716, "ase2sprkkr.common.configuration.Configuration.help"]], "info (ase2sprkkr.common.configuration.configuration property)": [[716, "ase2sprkkr.common.configuration.Configuration.info"]], "name (ase2sprkkr.common.configuration.configuration property)": [[716, "ase2sprkkr.common.configuration.Configuration.name"]], "save_to_file() (ase2sprkkr.common.configuration.configuration method)": [[716, "ase2sprkkr.common.configuration.Configuration.save_to_file"]], "show() (ase2sprkkr.common.configuration.configuration method)": [[716, "ase2sprkkr.common.configuration.Configuration.show"]], "to_dict() (ase2sprkkr.common.configuration.configuration method)": [[716, "ase2sprkkr.common.configuration.Configuration.to_dict"]], "to_string() (ase2sprkkr.common.configuration.configuration method)": [[716, "ase2sprkkr.common.configuration.Configuration.to_string"]], "validate() (ase2sprkkr.common.configuration.configuration method)": [[716, "ase2sprkkr.common.configuration.Configuration.validate"]], "ase2sprkkr.common.configuration_containers": [[717, "module-ase2sprkkr.common.configuration_containers"]], "baseconfigurationcontainer (class in ase2sprkkr.common.configuration_containers)": [[718, "ase2sprkkr.common.configuration_containers.BaseConfigurationContainer"]], "__init__() (ase2sprkkr.common.configuration_containers.baseconfigurationcontainer method)": [[718, "ase2sprkkr.common.configuration_containers.BaseConfigurationContainer.__init__"]], "copy() (ase2sprkkr.common.configuration_containers.baseconfigurationcontainer method)": [[718, "ase2sprkkr.common.configuration_containers.BaseConfigurationContainer.copy"]], "definition (ase2sprkkr.common.configuration_containers.baseconfigurationcontainer property)": [[718, "ase2sprkkr.common.configuration_containers.BaseConfigurationContainer.definition"]], "has_any_value() (ase2sprkkr.common.configuration_containers.baseconfigurationcontainer method)": [[718, "ase2sprkkr.common.configuration_containers.BaseConfigurationContainer.has_any_value"]], "basesection (class in ase2sprkkr.common.configuration_containers)": [[719, "ase2sprkkr.common.configuration_containers.BaseSection"]], "__init__() (ase2sprkkr.common.configuration_containers.basesection method)": [[719, "ase2sprkkr.common.configuration_containers.BaseSection.__init__"]], "configurationcontainer (class in ase2sprkkr.common.configuration_containers)": [[720, "ase2sprkkr.common.configuration_containers.ConfigurationContainer"]], "__init__() (ase2sprkkr.common.configuration_containers.configurationcontainer method)": [[720, "ase2sprkkr.common.configuration_containers.ConfigurationContainer.__init__"]], "_add() (ase2sprkkr.common.configuration_containers.configurationcontainer method)": [[720, "ase2sprkkr.common.configuration_containers.ConfigurationContainer._add"]], "_as_dict() (ase2sprkkr.common.configuration_containers.configurationcontainer method)": [[720, "ase2sprkkr.common.configuration_containers.ConfigurationContainer._as_dict"]], "_find_members() (ase2sprkkr.common.configuration_containers.configurationcontainer method)": [[720, "ase2sprkkr.common.configuration_containers.ConfigurationContainer._find_members"]], "_get() (ase2sprkkr.common.configuration_containers.configurationcontainer method)": [[720, "ase2sprkkr.common.configuration_containers.ConfigurationContainer._get"]], "_get_member() (ase2sprkkr.common.configuration_containers.configurationcontainer method)": [[720, "ase2sprkkr.common.configuration_containers.ConfigurationContainer._get_member"]], "_init_members_from_the_definition() (ase2sprkkr.common.configuration_containers.configurationcontainer method)": [[720, "ase2sprkkr.common.configuration_containers.ConfigurationContainer._init_members_from_the_definition"]], "_interactive_member_name() (ase2sprkkr.common.configuration_containers.configurationcontainer static method)": [[720, "ase2sprkkr.common.configuration_containers.ConfigurationContainer._interactive_member_name"]], "_save_to_file() (ase2sprkkr.common.configuration_containers.configurationcontainer method)": [[720, "ase2sprkkr.common.configuration_containers.ConfigurationContainer._save_to_file"]], "_validate() (ase2sprkkr.common.configuration_containers.configurationcontainer method)": [[720, "ase2sprkkr.common.configuration_containers.ConfigurationContainer._validate"]], "_validate_section() (ase2sprkkr.common.configuration_containers.configurationcontainer method)": [[720, "ase2sprkkr.common.configuration_containers.ConfigurationContainer._validate_section"]], "add() (ase2sprkkr.common.configuration_containers.configurationcontainer method)": [[720, "ase2sprkkr.common.configuration_containers.ConfigurationContainer.add"]], "clear() (ase2sprkkr.common.configuration_containers.configurationcontainer method)": [[720, "ase2sprkkr.common.configuration_containers.ConfigurationContainer.clear"]], "get() (ase2sprkkr.common.configuration_containers.configurationcontainer method)": [[720, "ase2sprkkr.common.configuration_containers.ConfigurationContainer.get"]], "get_members() (ase2sprkkr.common.configuration_containers.configurationcontainer method)": [[720, "ase2sprkkr.common.configuration_containers.ConfigurationContainer.get_members"]], "has_any_value() (ase2sprkkr.common.configuration_containers.configurationcontainer method)": [[720, "ase2sprkkr.common.configuration_containers.ConfigurationContainer.has_any_value"]], "is_changed() (ase2sprkkr.common.configuration_containers.configurationcontainer method)": [[720, "ase2sprkkr.common.configuration_containers.ConfigurationContainer.is_changed"]], "items() (ase2sprkkr.common.configuration_containers.configurationcontainer method)": [[720, "ase2sprkkr.common.configuration_containers.ConfigurationContainer.items"]], "remove_member() (ase2sprkkr.common.configuration_containers.configurationcontainer method)": [[720, "ase2sprkkr.common.configuration_containers.ConfigurationContainer.remove_member"]], "set() (ase2sprkkr.common.configuration_containers.configurationcontainer method)": [[720, "ase2sprkkr.common.configuration_containers.ConfigurationContainer.set"]], "validate_section() (ase2sprkkr.common.configuration_containers.configurationcontainer method)": [[720, "ase2sprkkr.common.configuration_containers.ConfigurationContainer.validate_section"]], "customsection (class in ase2sprkkr.common.configuration_containers)": [[721, "ase2sprkkr.common.configuration_containers.CustomSection"]], "__init__() (ase2sprkkr.common.configuration_containers.customsection method)": [[721, "ase2sprkkr.common.configuration_containers.CustomSection.__init__"]], "factory() (ase2sprkkr.common.configuration_containers.customsection class method)": [[721, "ase2sprkkr.common.configuration_containers.CustomSection.factory"]], "remove() (ase2sprkkr.common.configuration_containers.customsection method)": [[721, "ase2sprkkr.common.configuration_containers.CustomSection.remove"]], "disabledattributeerror": [[722, "ase2sprkkr.common.configuration_containers.DisabledAttributeError"]], "rootconfigurationcontainer (class in ase2sprkkr.common.configuration_containers)": [[723, "ase2sprkkr.common.configuration_containers.RootConfigurationContainer"]], "__init__() (ase2sprkkr.common.configuration_containers.rootconfigurationcontainer method)": [[723, "ase2sprkkr.common.configuration_containers.RootConfigurationContainer.__init__"]], "find() (ase2sprkkr.common.configuration_containers.rootconfigurationcontainer method)": [[723, "ase2sprkkr.common.configuration_containers.RootConfigurationContainer.find"]], "name_in_grammar (ase2sprkkr.common.configuration_containers.rootconfigurationcontainer attribute)": [[723, "ase2sprkkr.common.configuration_containers.RootConfigurationContainer.name_in_grammar"]], "read_from_file() (ase2sprkkr.common.configuration_containers.rootconfigurationcontainer method)": [[723, "ase2sprkkr.common.configuration_containers.RootConfigurationContainer.read_from_file"]], "section (class in ase2sprkkr.common.configuration_containers)": [[724, "ase2sprkkr.common.configuration_containers.Section"]], "__init__() (ase2sprkkr.common.configuration_containers.section method)": [[724, "ase2sprkkr.common.configuration_containers.Section.__init__"]], "definition (ase2sprkkr.common.configuration_containers.section property)": [[724, "ase2sprkkr.common.configuration_containers.Section.definition"]], "ase2sprkkr.common.configuration_definitions": [[725, "module-ase2sprkkr.common.configuration_definitions"]], "array (ase2sprkkr.common.configuration_definitions.basedefinition.repeated attribute)": [[726, "ase2sprkkr.common.configuration_definitions.BaseDefinition.Repeated.ARRAY"]], "array (ase2sprkkr.common.configuration_definitions.basedefinition.repeated.type attribute)": [[726, "ase2sprkkr.common.configuration_definitions.BaseDefinition.Repeated.Type.ARRAY"]], "basedefinition (class in ase2sprkkr.common.configuration_definitions)": [[726, "ase2sprkkr.common.configuration_definitions.BaseDefinition"]], "basedefinition.repeated (class in ase2sprkkr.common.configuration_definitions)": [[726, "ase2sprkkr.common.configuration_definitions.BaseDefinition.Repeated"]], "basedefinition.repeated.numbering (class in ase2sprkkr.common.configuration_definitions)": [[726, "ase2sprkkr.common.configuration_definitions.BaseDefinition.Repeated.Numbering"]], "basedefinition.repeated.type (class in ase2sprkkr.common.configuration_definitions)": [[726, "ase2sprkkr.common.configuration_definitions.BaseDefinition.Repeated.Type"]], "defaultdict (ase2sprkkr.common.configuration_definitions.basedefinition.repeated attribute)": [[726, "ase2sprkkr.common.configuration_definitions.BaseDefinition.Repeated.DEFAULTDICT"]], "dict (ase2sprkkr.common.configuration_definitions.basedefinition.repeated attribute)": [[726, "ase2sprkkr.common.configuration_definitions.BaseDefinition.Repeated.DICT"]], "dict (ase2sprkkr.common.configuration_definitions.basedefinition.repeated.type attribute)": [[726, "ase2sprkkr.common.configuration_definitions.BaseDefinition.Repeated.Type.DICT"]], "ignored (ase2sprkkr.common.configuration_definitions.basedefinition.repeated attribute)": [[726, "ase2sprkkr.common.configuration_definitions.BaseDefinition.Repeated.IGNORED"]], "list (ase2sprkkr.common.configuration_definitions.basedefinition.repeated.type attribute)": [[726, "ase2sprkkr.common.configuration_definitions.BaseDefinition.Repeated.Type.LIST"]], "no (ase2sprkkr.common.configuration_definitions.basedefinition.repeated attribute)": [[726, "ase2sprkkr.common.configuration_definitions.BaseDefinition.Repeated.NO"]], "no (ase2sprkkr.common.configuration_definitions.basedefinition.repeated.numbering attribute)": [[726, "ase2sprkkr.common.configuration_definitions.BaseDefinition.Repeated.Numbering.NO"]], "no (ase2sprkkr.common.configuration_definitions.basedefinition.repeated.type attribute)": [[726, "ase2sprkkr.common.configuration_definitions.BaseDefinition.Repeated.Type.NO"]], "numbered (ase2sprkkr.common.configuration_definitions.basedefinition.repeated attribute)": [[726, "ase2sprkkr.common.configuration_definitions.BaseDefinition.Repeated.NUMBERED"]], "repeated (ase2sprkkr.common.configuration_definitions.basedefinition.repeated attribute)": [[726, "ase2sprkkr.common.configuration_definitions.BaseDefinition.Repeated.REPEATED"]], "repeated_section (ase2sprkkr.common.configuration_definitions.basedefinition.repeated attribute)": [[726, "ase2sprkkr.common.configuration_definitions.BaseDefinition.Repeated.REPEATED_SECTION"]], "with_default (ase2sprkkr.common.configuration_definitions.basedefinition.repeated.numbering attribute)": [[726, "ase2sprkkr.common.configuration_definitions.BaseDefinition.Repeated.Numbering.WITH_DEFAULT"]], "yes (ase2sprkkr.common.configuration_definitions.basedefinition.repeated.numbering attribute)": [[726, "ase2sprkkr.common.configuration_definitions.BaseDefinition.Repeated.Numbering.YES"]], "__init__() (ase2sprkkr.common.configuration_definitions.basedefinition method)": [[726, "ase2sprkkr.common.configuration_definitions.BaseDefinition.__init__"]], "_add_hooks_to_grammar() (ase2sprkkr.common.configuration_definitions.basedefinition method)": [[726, "ase2sprkkr.common.configuration_definitions.BaseDefinition._add_hooks_to_grammar"]], "_copy_excluded_args (ase2sprkkr.common.configuration_definitions.basedefinition attribute)": [[726, "ase2sprkkr.common.configuration_definitions.BaseDefinition._copy_excluded_args"]], "_get_copy_args() (ase2sprkkr.common.configuration_definitions.basedefinition method)": [[726, "ase2sprkkr.common.configuration_definitions.BaseDefinition._get_copy_args"]], "_grammar (ase2sprkkr.common.configuration_definitions.basedefinition property)": [[726, "ase2sprkkr.common.configuration_definitions.BaseDefinition._grammar"]], "_hooked_grammar() (ase2sprkkr.common.configuration_definitions.basedefinition method)": [[726, "ase2sprkkr.common.configuration_definitions.BaseDefinition._hooked_grammar"]], "accept_value() (ase2sprkkr.common.configuration_definitions.basedefinition method)": [[726, "ase2sprkkr.common.configuration_definitions.BaseDefinition.accept_value"]], "add_grammar_hook() (ase2sprkkr.common.configuration_definitions.basedefinition method)": [[726, "ase2sprkkr.common.configuration_definitions.BaseDefinition.add_grammar_hook"]], "added_to_container() (ase2sprkkr.common.configuration_definitions.basedefinition method)": [[726, "ase2sprkkr.common.configuration_definitions.BaseDefinition.added_to_container"]], "allowed() (ase2sprkkr.common.configuration_definitions.basedefinition method)": [[726, "ase2sprkkr.common.configuration_definitions.BaseDefinition.allowed"]], "can_be_repeated (ase2sprkkr.common.configuration_definitions.basedefinition attribute)": [[726, "ase2sprkkr.common.configuration_definitions.BaseDefinition.can_be_repeated"]], "copy() (ase2sprkkr.common.configuration_definitions.basedefinition method)": [[726, "ase2sprkkr.common.configuration_definitions.BaseDefinition.copy"]], "create() (ase2sprkkr.common.configuration_definitions.basedefinition.repeated class method)": [[726, "ase2sprkkr.common.configuration_definitions.BaseDefinition.Repeated.create"]], "create_object() (ase2sprkkr.common.configuration_definitions.basedefinition method)": [[726, "ase2sprkkr.common.configuration_definitions.BaseDefinition.create_object"]], "description() (ase2sprkkr.common.configuration_definitions.basedefinition method)": [[726, "ase2sprkkr.common.configuration_definitions.BaseDefinition.description"]], "enrich() (ase2sprkkr.common.configuration_definitions.basedefinition method)": [[726, "ase2sprkkr.common.configuration_definitions.BaseDefinition.enrich"]], "get_path() (ase2sprkkr.common.configuration_definitions.basedefinition method)": [[726, "ase2sprkkr.common.configuration_definitions.BaseDefinition.get_path"]], "grammar() (ase2sprkkr.common.configuration_definitions.basedefinition method)": [[726, "ase2sprkkr.common.configuration_definitions.BaseDefinition.grammar"]], "has_default (ase2sprkkr.common.configuration_definitions.basedefinition.repeated.numbering property)": [[726, "ase2sprkkr.common.configuration_definitions.BaseDefinition.Repeated.Numbering.has_default"]], "has_grammar() (ase2sprkkr.common.configuration_definitions.basedefinition method)": [[726, "ase2sprkkr.common.configuration_definitions.BaseDefinition.has_grammar"]], "has_name() (ase2sprkkr.common.configuration_definitions.basedefinition method)": [[726, "ase2sprkkr.common.configuration_definitions.BaseDefinition.has_name"]], "info() (ase2sprkkr.common.configuration_definitions.basedefinition method)": [[726, "ase2sprkkr.common.configuration_definitions.BaseDefinition.info"]], "is_array (ase2sprkkr.common.configuration_definitions.basedefinition.repeated property)": [[726, "ase2sprkkr.common.configuration_definitions.BaseDefinition.Repeated.is_array"]], "is_dict (ase2sprkkr.common.configuration_definitions.basedefinition.repeated property)": [[726, "ase2sprkkr.common.configuration_definitions.BaseDefinition.Repeated.is_dict"]], "is_independent_on_the_predecessor (ase2sprkkr.common.configuration_definitions.basedefinition attribute)": [[726, "ase2sprkkr.common.configuration_definitions.BaseDefinition.is_independent_on_the_predecessor"]], "is_repeated (ase2sprkkr.common.configuration_definitions.basedefinition attribute)": [[726, "ase2sprkkr.common.configuration_definitions.BaseDefinition.is_repeated"]], "output_definition (ase2sprkkr.common.configuration_definitions.basedefinition property)": [[726, "ase2sprkkr.common.configuration_definitions.BaseDefinition.output_definition"]], "real_name (ase2sprkkr.common.configuration_definitions.basedefinition property)": [[726, "ase2sprkkr.common.configuration_definitions.BaseDefinition.real_name"]], "remove_grammar_hook() (ase2sprkkr.common.configuration_definitions.basedefinition method)": [[726, "ase2sprkkr.common.configuration_definitions.BaseDefinition.remove_grammar_hook"]], "validate_section (ase2sprkkr.common.configuration_definitions.basedefinition attribute)": [[726, "ase2sprkkr.common.configuration_definitions.BaseDefinition.validate_section"]], "controldefinition (class in ase2sprkkr.common.configuration_definitions)": [[727, "ase2sprkkr.common.configuration_definitions.ControlDefinition"]], "__init__() (ase2sprkkr.common.configuration_definitions.controldefinition method)": [[727, "ase2sprkkr.common.configuration_definitions.ControlDefinition.__init__"]], "_grammar (ase2sprkkr.common.configuration_definitions.controldefinition attribute)": [[727, "ase2sprkkr.common.configuration_definitions.ControlDefinition._grammar"]], "gather (class in ase2sprkkr.common.configuration_definitions)": [[728, "ase2sprkkr.common.configuration_definitions.Gather"]], "__init__() (ase2sprkkr.common.configuration_definitions.gather method)": [[728, "ase2sprkkr.common.configuration_definitions.Gather.__init__"]], "_grammar() (ase2sprkkr.common.configuration_definitions.gather method)": [[728, "ase2sprkkr.common.configuration_definitions.Gather._grammar"]], "_save_to_file() (ase2sprkkr.common.configuration_definitions.gather method)": [[728, "ase2sprkkr.common.configuration_definitions.Gather._save_to_file"]], "ignored (class in ase2sprkkr.common.configuration_definitions)": [[729, "ase2sprkkr.common.configuration_definitions.Ignored"]], "__init__() (ase2sprkkr.common.configuration_definitions.ignored method)": [[729, "ase2sprkkr.common.configuration_definitions.Ignored.__init__"]], "_grammar (ase2sprkkr.common.configuration_definitions.ignored attribute)": [[729, "ase2sprkkr.common.configuration_definitions.Ignored._grammar"]], "_save_to_file() (ase2sprkkr.common.configuration_definitions.ignored method)": [[729, "ase2sprkkr.common.configuration_definitions.Ignored._save_to_file"]], "has_grammar() (ase2sprkkr.common.configuration_definitions.ignored method)": [[729, "ase2sprkkr.common.configuration_definitions.Ignored.has_grammar"]], "singleton (ase2sprkkr.common.configuration_definitions.ignored attribute)": [[729, "ase2sprkkr.common.configuration_definitions.Ignored.singleton"]], "notallowed (class in ase2sprkkr.common.configuration_definitions)": [[730, "ase2sprkkr.common.configuration_definitions.NotAllowed"]], "__init__() (ase2sprkkr.common.configuration_definitions.notallowed method)": [[730, "ase2sprkkr.common.configuration_definitions.NotAllowed.__init__"]], "realitemdefinition (class in ase2sprkkr.common.configuration_definitions)": [[731, "ase2sprkkr.common.configuration_definitions.RealItemDefinition"]], "__init__() (ase2sprkkr.common.configuration_definitions.realitemdefinition method)": [[731, "ase2sprkkr.common.configuration_definitions.RealItemDefinition.__init__"]], "_copy_excluded_args (ase2sprkkr.common.configuration_definitions.realitemdefinition attribute)": [[731, "ase2sprkkr.common.configuration_definitions.RealItemDefinition._copy_excluded_args"]], "_description (ase2sprkkr.common.configuration_definitions.realitemdefinition attribute)": [[731, "ase2sprkkr.common.configuration_definitions.RealItemDefinition._description"]], "_description_indentation (ase2sprkkr.common.configuration_definitions.realitemdefinition attribute)": [[731, "ase2sprkkr.common.configuration_definitions.RealItemDefinition._description_indentation"]], "_grammar_of_name() (ase2sprkkr.common.configuration_definitions.realitemdefinition method)": [[731, "ase2sprkkr.common.configuration_definitions.RealItemDefinition._grammar_of_name"]], "_info (ase2sprkkr.common.configuration_definitions.realitemdefinition attribute)": [[731, "ase2sprkkr.common.configuration_definitions.RealItemDefinition._info"]], "_tuple_with_my_name() (ase2sprkkr.common.configuration_definitions.realitemdefinition method)": [[731, "ase2sprkkr.common.configuration_definitions.RealItemDefinition._tuple_with_my_name"]], "all_names_in_grammar() (ase2sprkkr.common.configuration_definitions.realitemdefinition method)": [[731, "ase2sprkkr.common.configuration_definitions.RealItemDefinition.all_names_in_grammar"]], "allow_duplication() (ase2sprkkr.common.configuration_definitions.realitemdefinition method)": [[731, "ase2sprkkr.common.configuration_definitions.RealItemDefinition.allow_duplication"]], "description() (ase2sprkkr.common.configuration_definitions.realitemdefinition method)": [[731, "ase2sprkkr.common.configuration_definitions.RealItemDefinition.description"]], "do_not_skip_whitespaces_before_name (ase2sprkkr.common.configuration_definitions.realitemdefinition attribute)": [[731, "ase2sprkkr.common.configuration_definitions.RealItemDefinition.do_not_skip_whitespaces_before_name"]], "formated_name (ase2sprkkr.common.configuration_definitions.realitemdefinition property)": [[731, "ase2sprkkr.common.configuration_definitions.RealItemDefinition.formated_name"]], "has_name() (ase2sprkkr.common.configuration_definitions.realitemdefinition method)": [[731, "ase2sprkkr.common.configuration_definitions.RealItemDefinition.has_name"]], "info() (ase2sprkkr.common.configuration_definitions.realitemdefinition method)": [[731, "ase2sprkkr.common.configuration_definitions.RealItemDefinition.info"]], "info_in_data_description (ase2sprkkr.common.configuration_definitions.realitemdefinition attribute)": [[731, "ase2sprkkr.common.configuration_definitions.RealItemDefinition.info_in_data_description"]], "is_hidden (ase2sprkkr.common.configuration_definitions.realitemdefinition attribute)": [[731, "ase2sprkkr.common.configuration_definitions.RealItemDefinition.is_hidden"]], "is_independent_on_the_predecessor (ase2sprkkr.common.configuration_definitions.realitemdefinition property)": [[731, "ase2sprkkr.common.configuration_definitions.RealItemDefinition.is_independent_on_the_predecessor"]], "name_in_grammar (ase2sprkkr.common.configuration_definitions.realitemdefinition attribute)": [[731, "ase2sprkkr.common.configuration_definitions.RealItemDefinition.name_in_grammar"]], "name_regex (ase2sprkkr.common.configuration_definitions.realitemdefinition attribute)": [[731, "ase2sprkkr.common.configuration_definitions.RealItemDefinition.name_regex"]], "result_class (ase2sprkkr.common.configuration_definitions.realitemdefinition attribute)": [[731, "ase2sprkkr.common.configuration_definitions.RealItemDefinition.result_class"]], "validate_warning() (ase2sprkkr.common.configuration_definitions.realitemdefinition method)": [[731, "ase2sprkkr.common.configuration_definitions.RealItemDefinition.validate_warning"]], "written_name (ase2sprkkr.common.configuration_definitions.realitemdefinition attribute)": [[731, "ase2sprkkr.common.configuration_definitions.RealItemDefinition.written_name"]], "separatordefinition (class in ase2sprkkr.common.configuration_definitions)": [[732, "ase2sprkkr.common.configuration_definitions.SeparatorDefinition"]], "__init__() (ase2sprkkr.common.configuration_definitions.separatordefinition method)": [[732, "ase2sprkkr.common.configuration_definitions.SeparatorDefinition.__init__"]], "_create_grammar() (ase2sprkkr.common.configuration_definitions.separatordefinition method)": [[732, "ase2sprkkr.common.configuration_definitions.SeparatorDefinition._create_grammar"]], "_save_to_file() (ase2sprkkr.common.configuration_definitions.separatordefinition method)": [[732, "ase2sprkkr.common.configuration_definitions.SeparatorDefinition._save_to_file"]], "stub (class in ase2sprkkr.common.configuration_definitions)": [[733, "ase2sprkkr.common.configuration_definitions.Stub"]], "__init__() (ase2sprkkr.common.configuration_definitions.stub method)": [[733, "ase2sprkkr.common.configuration_definitions.Stub.__init__"]], "_create_grammar() (ase2sprkkr.common.configuration_definitions.stub method)": [[733, "ase2sprkkr.common.configuration_definitions.Stub._create_grammar"]], "_save_to_file() (ase2sprkkr.common.configuration_definitions.stub method)": [[733, "ase2sprkkr.common.configuration_definitions.Stub._save_to_file"]], "create_object() (ase2sprkkr.common.configuration_definitions.stub method)": [[733, "ase2sprkkr.common.configuration_definitions.Stub.create_object"]], "real_name (ase2sprkkr.common.configuration_definitions.stub property)": [[733, "ase2sprkkr.common.configuration_definitions.Stub.real_name"]], "switch (class in ase2sprkkr.common.configuration_definitions)": [[734, "ase2sprkkr.common.configuration_definitions.Switch"]], "__init__() (ase2sprkkr.common.configuration_definitions.switch method)": [[734, "ase2sprkkr.common.configuration_definitions.Switch.__init__"]], "added_to_container() (ase2sprkkr.common.configuration_definitions.switch method)": [[734, "ase2sprkkr.common.configuration_definitions.Switch.added_to_container"]], "all_values() (ase2sprkkr.common.configuration_definitions.switch method)": [[734, "ase2sprkkr.common.configuration_definitions.Switch.all_values"]], "condition_name (ase2sprkkr.common.configuration_definitions.switch property)": [[734, "ase2sprkkr.common.configuration_definitions.Switch.condition_name"]], "copy() (ase2sprkkr.common.configuration_definitions.switch method)": [[734, "ase2sprkkr.common.configuration_definitions.Switch.copy"]], "create_object (ase2sprkkr.common.configuration_definitions.switch attribute)": [[734, "ase2sprkkr.common.configuration_definitions.Switch.create_object"]], "empty (ase2sprkkr.common.configuration_definitions.switch attribute)": [[734, "ase2sprkkr.common.configuration_definitions.Switch.empty"]], "item_hook() (ase2sprkkr.common.configuration_definitions.switch method)": [[734, "ase2sprkkr.common.configuration_definitions.Switch.item_hook"]], "items_for() (ase2sprkkr.common.configuration_definitions.switch method)": [[734, "ase2sprkkr.common.configuration_definitions.Switch.items_for"]], "prepare_grammar() (ase2sprkkr.common.configuration_definitions.switch method)": [[734, "ase2sprkkr.common.configuration_definitions.Switch.prepare_grammar"]], "remove_from_container() (ase2sprkkr.common.configuration_definitions.switch method)": [[734, "ase2sprkkr.common.configuration_definitions.Switch.remove_from_container"]], "switch_value() (ase2sprkkr.common.configuration_definitions.switch method)": [[734, "ase2sprkkr.common.configuration_definitions.Switch.switch_value"]], "virtualdefinition (class in ase2sprkkr.common.configuration_definitions)": [[735, "ase2sprkkr.common.configuration_definitions.VirtualDefinition"]], "__init__() (ase2sprkkr.common.configuration_definitions.virtualdefinition method)": [[735, "ase2sprkkr.common.configuration_definitions.VirtualDefinition.__init__"]], "all_names_in_grammar() (ase2sprkkr.common.configuration_definitions.virtualdefinition method)": [[735, "ase2sprkkr.common.configuration_definitions.VirtualDefinition.all_names_in_grammar"]], "counter (ase2sprkkr.common.configuration_definitions.virtualdefinition attribute)": [[735, "ase2sprkkr.common.configuration_definitions.VirtualDefinition.counter"]], "create_object() (ase2sprkkr.common.configuration_definitions.virtualdefinition method)": [[735, "ase2sprkkr.common.configuration_definitions.VirtualDefinition.create_object"]], "is_hidden (ase2sprkkr.common.configuration_definitions.virtualdefinition attribute)": [[735, "ase2sprkkr.common.configuration_definitions.VirtualDefinition.is_hidden"]], "item_type (ase2sprkkr.common.configuration_definitions.virtualdefinition attribute)": [[735, "ase2sprkkr.common.configuration_definitions.VirtualDefinition.item_type"]], "gather() (in module ase2sprkkr.common.configuration_definitions)": [[736, "ase2sprkkr.common.configuration_definitions.gather"]], "if_defined() (in module ase2sprkkr.common.configuration_definitions)": [[737, "ase2sprkkr.common.configuration_definitions.if_defined"]], "if_not_defined() (in module ase2sprkkr.common.configuration_definitions)": [[738, "ase2sprkkr.common.configuration_definitions.if_not_defined"]], "switch() (in module ase2sprkkr.common.configuration_definitions)": [[739, "ase2sprkkr.common.configuration_definitions.switch"]], "ase2sprkkr.common.container_definitions": [[740, "module-ase2sprkkr.common.container_definitions"]], "configurationrootdefinition (class in ase2sprkkr.common.container_definitions)": [[741, "ase2sprkkr.common.container_definitions.ConfigurationRootDefinition"]], "__init__() (ase2sprkkr.common.container_definitions.configurationrootdefinition method)": [[741, "ase2sprkkr.common.container_definitions.ConfigurationRootDefinition.__init__"]], "_create_grammar() (ase2sprkkr.common.container_definitions.configurationrootdefinition method)": [[741, "ase2sprkkr.common.container_definitions.ConfigurationRootDefinition._create_grammar"]], "_tuple_with_my_name() (ase2sprkkr.common.container_definitions.configurationrootdefinition method)": [[741, "ase2sprkkr.common.container_definitions.ConfigurationRootDefinition._tuple_with_my_name"]], "add_ignored() (ase2sprkkr.common.container_definitions.configurationrootdefinition method)": [[741, "ase2sprkkr.common.container_definitions.ConfigurationRootDefinition.add_ignored"]], "custom_value_name (ase2sprkkr.common.container_definitions.configurationrootdefinition attribute)": [[741, "ase2sprkkr.common.container_definitions.ConfigurationRootDefinition.custom_value_name"]], "definition_from_dict() (ase2sprkkr.common.container_definitions.configurationrootdefinition class method)": [[741, "ase2sprkkr.common.container_definitions.ConfigurationRootDefinition.definition_from_dict"]], "item_type (ase2sprkkr.common.container_definitions.configurationrootdefinition attribute)": [[741, "ase2sprkkr.common.container_definitions.ConfigurationRootDefinition.item_type"]], "name_in_grammar (ase2sprkkr.common.container_definitions.configurationrootdefinition attribute)": [[741, "ase2sprkkr.common.container_definitions.ConfigurationRootDefinition.name_in_grammar"]], "parse_return() (ase2sprkkr.common.container_definitions.configurationrootdefinition method)": [[741, "ase2sprkkr.common.container_definitions.ConfigurationRootDefinition.parse_return"]], "sections (ase2sprkkr.common.container_definitions.configurationrootdefinition property)": [[741, "ase2sprkkr.common.container_definitions.ConfigurationRootDefinition.sections"]], "write_last_delimiter (ase2sprkkr.common.container_definitions.configurationrootdefinition attribute)": [[741, "ase2sprkkr.common.container_definitions.ConfigurationRootDefinition.write_last_delimiter"]], "containerdefinition (class in ase2sprkkr.common.container_definitions)": [[742, "ase2sprkkr.common.container_definitions.ContainerDefinition"]], "__init__() (ase2sprkkr.common.container_definitions.containerdefinition method)": [[742, "ase2sprkkr.common.container_definitions.ContainerDefinition.__init__"]], "_allow_duplicates_of() (ase2sprkkr.common.container_definitions.containerdefinition method)": [[742, "ase2sprkkr.common.container_definitions.ContainerDefinition._allow_duplicates_of"]], "_create_grammar() (ase2sprkkr.common.container_definitions.containerdefinition method)": [[742, "ase2sprkkr.common.container_definitions.ContainerDefinition._create_grammar"]], "_dict_from_named_values() (ase2sprkkr.common.container_definitions.containerdefinition static method)": [[742, "ase2sprkkr.common.container_definitions.ContainerDefinition._dict_from_named_values"]], "_first_section_has_to_be_first() (ase2sprkkr.common.container_definitions.containerdefinition method)": [[742, "ase2sprkkr.common.container_definitions.ContainerDefinition._first_section_has_to_be_first"]], "_grammar_of_values() (ase2sprkkr.common.container_definitions.containerdefinition method)": [[742, "ase2sprkkr.common.container_definitions.ContainerDefinition._grammar_of_values"]], "_save_to_file() (ase2sprkkr.common.container_definitions.containerdefinition method)": [[742, "ase2sprkkr.common.container_definitions.ContainerDefinition._save_to_file"]], "additional_data_description() (ase2sprkkr.common.container_definitions.containerdefinition method)": [[742, "ase2sprkkr.common.container_definitions.ContainerDefinition.additional_data_description"]], "all_member_names() (ase2sprkkr.common.container_definitions.containerdefinition method)": [[742, "ase2sprkkr.common.container_definitions.ContainerDefinition.all_member_names"]], "allow_duplication() (ase2sprkkr.common.container_definitions.containerdefinition method)": [[742, "ase2sprkkr.common.container_definitions.ContainerDefinition.allow_duplication"]], "configuration_type_name (ase2sprkkr.common.container_definitions.containerdefinition attribute)": [[742, "ase2sprkkr.common.container_definitions.ContainerDefinition.configuration_type_name"]], "copy() (ase2sprkkr.common.container_definitions.containerdefinition method)": [[742, "ase2sprkkr.common.container_definitions.ContainerDefinition.copy"]], "copy_member() (ase2sprkkr.common.container_definitions.containerdefinition method)": [[742, "ase2sprkkr.common.container_definitions.ContainerDefinition.copy_member"]], "create_object() (ase2sprkkr.common.container_definitions.containerdefinition method)": [[742, "ase2sprkkr.common.container_definitions.ContainerDefinition.create_object"]], "custom_member_grammar() (ase2sprkkr.common.container_definitions.containerdefinition class method)": [[742, "ase2sprkkr.common.container_definitions.ContainerDefinition.custom_member_grammar"]], "custom_name_characters (ase2sprkkr.common.container_definitions.containerdefinition attribute)": [[742, "ase2sprkkr.common.container_definitions.ContainerDefinition.custom_name_characters"]], "data_description() (ase2sprkkr.common.container_definitions.containerdefinition method)": [[742, "ase2sprkkr.common.container_definitions.ContainerDefinition.data_description"]], "delimited_custom_value_grammar() (ase2sprkkr.common.container_definitions.containerdefinition class method)": [[742, "ase2sprkkr.common.container_definitions.ContainerDefinition.delimited_custom_value_grammar"]], "excluded_names_condition() (ase2sprkkr.common.container_definitions.containerdefinition method)": [[742, "ase2sprkkr.common.container_definitions.ContainerDefinition.excluded_names_condition"]], "force_order (ase2sprkkr.common.container_definitions.containerdefinition attribute)": [[742, "ase2sprkkr.common.container_definitions.ContainerDefinition.force_order"]], "item_type (ase2sprkkr.common.container_definitions.containerdefinition attribute)": [[742, "ase2sprkkr.common.container_definitions.ContainerDefinition.item_type"]], "members() (ase2sprkkr.common.container_definitions.containerdefinition method)": [[742, "ase2sprkkr.common.container_definitions.ContainerDefinition.members"]], "names() (ase2sprkkr.common.container_definitions.containerdefinition method)": [[742, "ase2sprkkr.common.container_definitions.ContainerDefinition.names"]], "parse() (ase2sprkkr.common.container_definitions.containerdefinition method)": [[742, "ase2sprkkr.common.container_definitions.ContainerDefinition.parse"]], "parse_file() (ase2sprkkr.common.container_definitions.containerdefinition method)": [[742, "ase2sprkkr.common.container_definitions.ContainerDefinition.parse_file"]], "parse_from_stream() (ase2sprkkr.common.container_definitions.containerdefinition method)": [[742, "ase2sprkkr.common.container_definitions.ContainerDefinition.parse_from_stream"]], "parse_return() (ase2sprkkr.common.container_definitions.containerdefinition method)": [[742, "ase2sprkkr.common.container_definitions.ContainerDefinition.parse_return"]], "read_from_dict() (ase2sprkkr.common.container_definitions.containerdefinition method)": [[742, "ase2sprkkr.common.container_definitions.ContainerDefinition.read_from_dict"]], "read_from_file() (ase2sprkkr.common.container_definitions.containerdefinition method)": [[742, "ase2sprkkr.common.container_definitions.ContainerDefinition.read_from_file"]], "read_from_string() (ase2sprkkr.common.container_definitions.containerdefinition method)": [[742, "ase2sprkkr.common.container_definitions.ContainerDefinition.read_from_string"]], "remove() (ase2sprkkr.common.container_definitions.containerdefinition method)": [[742, "ase2sprkkr.common.container_definitions.ContainerDefinition.remove"]], "repeated_class (ase2sprkkr.common.container_definitions.containerdefinition attribute)": [[742, "ase2sprkkr.common.container_definitions.ContainerDefinition.repeated_class"]], "validate() (ase2sprkkr.common.container_definitions.containerdefinition method)": [[742, "ase2sprkkr.common.container_definitions.ContainerDefinition.validate"]], "value_name_format (ase2sprkkr.common.container_definitions.containerdefinition attribute)": [[742, "ase2sprkkr.common.container_definitions.ContainerDefinition.value_name_format"]], "write_last_delimiter (ase2sprkkr.common.container_definitions.containerdefinition attribute)": [[742, "ase2sprkkr.common.container_definitions.ContainerDefinition.write_last_delimiter"]], "sectiondefinition (class in ase2sprkkr.common.container_definitions)": [[743, "ase2sprkkr.common.container_definitions.SectionDefinition"]], "__init__() (ase2sprkkr.common.container_definitions.sectiondefinition method)": [[743, "ase2sprkkr.common.container_definitions.SectionDefinition.__init__"]], "_generic_info() (ase2sprkkr.common.container_definitions.sectiondefinition method)": [[743, "ase2sprkkr.common.container_definitions.SectionDefinition._generic_info"]], "accept_value() (ase2sprkkr.common.container_definitions.sectiondefinition method)": [[743, "ase2sprkkr.common.container_definitions.SectionDefinition.accept_value"]], "custom_value_name (ase2sprkkr.common.container_definitions.sectiondefinition attribute)": [[743, "ase2sprkkr.common.container_definitions.SectionDefinition.custom_value_name"]], "delimited_custom_value_grammar() (ase2sprkkr.common.container_definitions.sectiondefinition class method)": [[743, "ase2sprkkr.common.container_definitions.SectionDefinition.delimited_custom_value_grammar"]], "result_class (ase2sprkkr.common.container_definitions.sectiondefinition attribute)": [[743, "ase2sprkkr.common.container_definitions.SectionDefinition.result_class"]], "values (ase2sprkkr.common.container_definitions.sectiondefinition property)": [[743, "ase2sprkkr.common.container_definitions.SectionDefinition.values"]], "ase2sprkkr.common.debug": [[744, "module-ase2sprkkr.common.debug"]], "add_debug_hook() (in module ase2sprkkr.common.debug)": [[745, "ase2sprkkr.common.debug.add_debug_hook"]], "debug_pyparsing() (in module ase2sprkkr.common.debug)": [[746, "ase2sprkkr.common.debug.debug_pyparsing"]], "ase2sprkkr.common.decorators": [[747, "module-ase2sprkkr.common.decorators"]], "add_called_class_as_argument() (in module ase2sprkkr.common.decorators)": [[748, "ase2sprkkr.common.decorators.add_called_class_as_argument"]], "add_to_signature() (in module ase2sprkkr.common.decorators)": [[749, "ase2sprkkr.common.decorators.add_to_signature"]], "__init__() (ase2sprkkr.common.decorators.cached_class_property method)": [[750, "ase2sprkkr.common.decorators.cached_class_property.__init__"]], "cached_class_property (class in ase2sprkkr.common.decorators)": [[750, "ase2sprkkr.common.decorators.cached_class_property"]], "__init__() (ase2sprkkr.common.decorators.cached_property method)": [[751, "ase2sprkkr.common.decorators.cached_property.__init__"]], "cached_property (class in ase2sprkkr.common.decorators)": [[751, "ase2sprkkr.common.decorators.cached_property"]], "deleter() (ase2sprkkr.common.decorators.cached_property method)": [[751, "ase2sprkkr.common.decorators.cached_property.deleter"]], "setter() (ase2sprkkr.common.decorators.cached_property method)": [[751, "ase2sprkkr.common.decorators.cached_property.setter"]], "__init__() (ase2sprkkr.common.decorators.class_property method)": [[752, "ase2sprkkr.common.decorators.class_property.__init__"]], "class_property (class in ase2sprkkr.common.decorators)": [[752, "ase2sprkkr.common.decorators.class_property"]], "__init__() (ase2sprkkr.common.decorators.maybeclassmethod method)": [[753, "ase2sprkkr.common.decorators.maybeclassmethod.__init__"]], "maybeclassmethod (class in ase2sprkkr.common.decorators)": [[753, "ase2sprkkr.common.decorators.maybeclassmethod"]], "std_cached_property (in module ase2sprkkr.common.decorators)": [[754, "ase2sprkkr.common.decorators.std_cached_property"]], "warnings_from_here() (in module ase2sprkkr.common.decorators)": [[755, "ase2sprkkr.common.decorators.warnings_from_here"]], "ase2sprkkr.common.directory": [[756, "module-ase2sprkkr.common.directory"]], "directory (class in ase2sprkkr.common.directory)": [[757, "ase2sprkkr.common.directory.Directory"]], "__init__() (ase2sprkkr.common.directory.directory method)": [[757, "ase2sprkkr.common.directory.Directory.__init__"]], "chdir() (ase2sprkkr.common.directory.directory method)": [[757, "ase2sprkkr.common.directory.Directory.chdir"]], "new() (ase2sprkkr.common.directory.directory method)": [[757, "ase2sprkkr.common.directory.Directory.new"]], "ase2sprkkr.common.doc": [[758, "module-ase2sprkkr.common.doc"]], "process_input_parameters_definition() (in module ase2sprkkr.common.doc)": [[759, "ase2sprkkr.common.doc.process_input_parameters_definition"]], "verbatim() (in module ase2sprkkr.common.doc)": [[760, "ase2sprkkr.common.doc.verbatim"]], "ase2sprkkr.common.formats": [[761, "module-ase2sprkkr.common.formats"]], "format_for_string() (in module ase2sprkkr.common.formats)": [[762, "ase2sprkkr.common.formats.format_for_string"]], "fortran_format() (in module ase2sprkkr.common.formats)": [[763, "ase2sprkkr.common.formats.fortran_format"]], "full_format_for_string() (in module ase2sprkkr.common.formats)": [[764, "ase2sprkkr.common.formats.full_format_for_string"]], "ase2sprkkr.common.generated_configuration_definitions": [[765, "module-ase2sprkkr.common.generated_configuration_definitions"]], "basegeneratedvaluedefinition (class in ase2sprkkr.common.generated_configuration_definitions)": [[766, "ase2sprkkr.common.generated_configuration_definitions.BaseGeneratedValueDefinition"]], "__init__() (ase2sprkkr.common.generated_configuration_definitions.basegeneratedvaluedefinition method)": [[766, "ase2sprkkr.common.generated_configuration_definitions.BaseGeneratedValueDefinition.__init__"]], "_grammar (ase2sprkkr.common.generated_configuration_definitions.basegeneratedvaluedefinition attribute)": [[766, "ase2sprkkr.common.generated_configuration_definitions.BaseGeneratedValueDefinition._grammar"]], "enrich() (ase2sprkkr.common.generated_configuration_definitions.basegeneratedvaluedefinition method)": [[766, "ase2sprkkr.common.generated_configuration_definitions.BaseGeneratedValueDefinition.enrich"]], "is_generated (ase2sprkkr.common.generated_configuration_definitions.basegeneratedvaluedefinition attribute)": [[766, "ase2sprkkr.common.generated_configuration_definitions.BaseGeneratedValueDefinition.is_generated"]], "is_stored (ase2sprkkr.common.generated_configuration_definitions.basegeneratedvaluedefinition attribute)": [[766, "ase2sprkkr.common.generated_configuration_definitions.BaseGeneratedValueDefinition.is_stored"]], "item_type (ase2sprkkr.common.generated_configuration_definitions.basegeneratedvaluedefinition attribute)": [[766, "ase2sprkkr.common.generated_configuration_definitions.BaseGeneratedValueDefinition.item_type"]], "result_class (ase2sprkkr.common.generated_configuration_definitions.basegeneratedvaluedefinition attribute)": [[766, "ase2sprkkr.common.generated_configuration_definitions.BaseGeneratedValueDefinition.result_class"]], "generatedvaluedefinition (class in ase2sprkkr.common.generated_configuration_definitions)": [[767, "ase2sprkkr.common.generated_configuration_definitions.GeneratedValueDefinition"]], "__init__() (ase2sprkkr.common.generated_configuration_definitions.generatedvaluedefinition method)": [[767, "ase2sprkkr.common.generated_configuration_definitions.GeneratedValueDefinition.__init__"]], "setter (ase2sprkkr.common.generated_configuration_definitions.generatedvaluedefinition property)": [[767, "ase2sprkkr.common.generated_configuration_definitions.GeneratedValueDefinition.setter"]], "length (class in ase2sprkkr.common.generated_configuration_definitions)": [[768, "ase2sprkkr.common.generated_configuration_definitions.Length"]], "_no_default (ase2sprkkr.common.generated_configuration_definitions.length attribute)": [[768, "ase2sprkkr.common.generated_configuration_definitions.Length._NO_DEFAULT"]], "__init__() (ase2sprkkr.common.generated_configuration_definitions.length method)": [[768, "ase2sprkkr.common.generated_configuration_definitions.Length.__init__"]], "_create_grammar() (ase2sprkkr.common.generated_configuration_definitions.length method)": [[768, "ase2sprkkr.common.generated_configuration_definitions.Length._create_grammar"]], "getter() (ase2sprkkr.common.generated_configuration_definitions.length method)": [[768, "ase2sprkkr.common.generated_configuration_definitions.Length.getter"]], "is_generated (ase2sprkkr.common.generated_configuration_definitions.length attribute)": [[768, "ase2sprkkr.common.generated_configuration_definitions.Length.is_generated"]], "is_stored (ase2sprkkr.common.generated_configuration_definitions.length attribute)": [[768, "ase2sprkkr.common.generated_configuration_definitions.Length.is_stored"]], "is_validated (ase2sprkkr.common.generated_configuration_definitions.length attribute)": [[768, "ase2sprkkr.common.generated_configuration_definitions.Length.is_validated"]], "modify_definition() (ase2sprkkr.common.generated_configuration_definitions.length method)": [[768, "ase2sprkkr.common.generated_configuration_definitions.Length.modify_definition"]], "setter() (ase2sprkkr.common.generated_configuration_definitions.length method)": [[768, "ase2sprkkr.common.generated_configuration_definitions.Length.setter"]], "type (ase2sprkkr.common.generated_configuration_definitions.length attribute)": [[768, "ase2sprkkr.common.generated_configuration_definitions.Length.type"]], "validate_parse() (ase2sprkkr.common.generated_configuration_definitions.length method)": [[768, "ase2sprkkr.common.generated_configuration_definitions.Length.validate_parse"]], "validate_section() (ase2sprkkr.common.generated_configuration_definitions.length method)": [[768, "ase2sprkkr.common.generated_configuration_definitions.Length.validate_section"]], "numpyviewdefinition (class in ase2sprkkr.common.generated_configuration_definitions)": [[769, "ase2sprkkr.common.generated_configuration_definitions.NumpyViewDefinition"]], "__init__() (ase2sprkkr.common.generated_configuration_definitions.numpyviewdefinition method)": [[769, "ase2sprkkr.common.generated_configuration_definitions.NumpyViewDefinition.__init__"]], "copy_value() (ase2sprkkr.common.generated_configuration_definitions.numpyviewdefinition method)": [[769, "ase2sprkkr.common.generated_configuration_definitions.NumpyViewDefinition.copy_value"]], "data_description() (ase2sprkkr.common.generated_configuration_definitions.numpyviewdefinition method)": [[769, "ase2sprkkr.common.generated_configuration_definitions.NumpyViewDefinition.data_description"]], "determine_shape() (ase2sprkkr.common.generated_configuration_definitions.numpyviewdefinition method)": [[769, "ase2sprkkr.common.generated_configuration_definitions.NumpyViewDefinition.determine_shape"]], "enrich() (ase2sprkkr.common.generated_configuration_definitions.numpyviewdefinition method)": [[769, "ase2sprkkr.common.generated_configuration_definitions.NumpyViewDefinition.enrich"]], "getter() (ase2sprkkr.common.generated_configuration_definitions.numpyviewdefinition method)": [[769, "ase2sprkkr.common.generated_configuration_definitions.NumpyViewDefinition.getter"]], "setter() (ase2sprkkr.common.generated_configuration_definitions.numpyviewdefinition method)": [[769, "ase2sprkkr.common.generated_configuration_definitions.NumpyViewDefinition.setter"]], "source() (ase2sprkkr.common.generated_configuration_definitions.numpyviewdefinition method)": [[769, "ase2sprkkr.common.generated_configuration_definitions.NumpyViewDefinition.source"]], "ase2sprkkr.common.grammar": [[770, "module-ase2sprkkr.common.grammar"]], "skiptoregex (class in ase2sprkkr.common.grammar)": [[771, "ase2sprkkr.common.grammar.SkipToRegex"]], "__init__() (ase2sprkkr.common.grammar.skiptoregex method)": [[771, "ase2sprkkr.common.grammar.SkipToRegex.__init__"]], "_abc_impl (ase2sprkkr.common.grammar.skiptoregex attribute)": [[771, "ase2sprkkr.common.grammar.SkipToRegex._abc_impl"]], "custom_name (ase2sprkkr.common.grammar.skiptoregex property)": [[771, "ase2sprkkr.common.grammar.SkipToRegex.custom_name"]], "parseimpl() (ase2sprkkr.common.grammar.skiptoregex method)": [[771, "ase2sprkkr.common.grammar.SkipToRegex.parseImpl"]], "white (class in ase2sprkkr.common.grammar)": [[772, "ase2sprkkr.common.grammar.White"]], "__init__() (ase2sprkkr.common.grammar.white method)": [[772, "ase2sprkkr.common.grammar.White.__init__"]], "_abc_impl (ase2sprkkr.common.grammar.white attribute)": [[772, "ase2sprkkr.common.grammar.White._abc_impl"]], "addconditionex() (in module ase2sprkkr.common.grammar)": [[773, "ase2sprkkr.common.grammar.addConditionEx"]], "addparseactionex() (in module ase2sprkkr.common.grammar)": [[774, "ase2sprkkr.common.grammar.addParseActionEx"]], "delimitedlist() (in module ase2sprkkr.common.grammar)": [[775, "ase2sprkkr.common.grammar.delimitedList"]], "end_of_file (in module ase2sprkkr.common.grammar)": [[776, "ase2sprkkr.common.grammar.end_of_file"]], "generate_grammar() (in module ase2sprkkr.common.grammar)": [[777, "ase2sprkkr.common.grammar.generate_grammar"]], "line_end (in module ase2sprkkr.common.grammar)": [[778, "ase2sprkkr.common.grammar.line_end"]], "optional_line_end (in module ase2sprkkr.common.grammar)": [[779, "ase2sprkkr.common.grammar.optional_line_end"]], "optional_quote (in module ase2sprkkr.common.grammar)": [[780, "ase2sprkkr.common.grammar.optional_quote"]], "replace_whitechars() (in module ase2sprkkr.common.grammar)": [[781, "ase2sprkkr.common.grammar.replace_whitechars"]], "separator_grammar() (in module ase2sprkkr.common.grammar)": [[782, "ase2sprkkr.common.grammar.separator_grammar"]], "separator_pattern() (in module ase2sprkkr.common.grammar)": [[783, "ase2sprkkr.common.grammar.separator_pattern"]], "ase2sprkkr.common.grammar_types": [[784, "module-ase2sprkkr.common.grammar_types"]], "ase2sprkkr.common.grammar_types.arrays": [[785, "module-ase2sprkkr.common.grammar_types.arrays"]], "array (class in ase2sprkkr.common.grammar_types.arrays)": [[786, "ase2sprkkr.common.grammar_types.arrays.Array"]], "__init__() (ase2sprkkr.common.grammar_types.arrays.array method)": [[786, "ase2sprkkr.common.grammar_types.arrays.Array.__init__"]], "_dtype_condition (ase2sprkkr.common.grammar_types.arrays.array property)": [[786, "ase2sprkkr.common.grammar_types.arrays.Array._dtype_condition"]], "_set_convert_action() (ase2sprkkr.common.grammar_types.arrays.array method)": [[786, "ase2sprkkr.common.grammar_types.arrays.Array._set_convert_action"]], "_string() (ase2sprkkr.common.grammar_types.arrays.array method)": [[786, "ase2sprkkr.common.grammar_types.arrays.Array._string"]], "_validate() (ase2sprkkr.common.grammar_types.arrays.array method)": [[786, "ase2sprkkr.common.grammar_types.arrays.Array._validate"]], "array_access (ase2sprkkr.common.grammar_types.arrays.array attribute)": [[786, "ase2sprkkr.common.grammar_types.arrays.Array.array_access"]], "convert() (ase2sprkkr.common.grammar_types.arrays.array method)": [[786, "ase2sprkkr.common.grammar_types.arrays.Array.convert"]], "delimiter (ase2sprkkr.common.grammar_types.arrays.array attribute)": [[786, "ase2sprkkr.common.grammar_types.arrays.Array.delimiter"]], "delimiter_str (ase2sprkkr.common.grammar_types.arrays.array attribute)": [[786, "ase2sprkkr.common.grammar_types.arrays.Array.delimiter_str"]], "grammar_name() (ase2sprkkr.common.grammar_types.arrays.array method)": [[786, "ase2sprkkr.common.grammar_types.arrays.Array.grammar_name"]], "is_numpy_array (ase2sprkkr.common.grammar_types.arrays.array property)": [[786, "ase2sprkkr.common.grammar_types.arrays.Array.is_numpy_array"]], "is_the_same_value() (ase2sprkkr.common.grammar_types.arrays.array static method)": [[786, "ase2sprkkr.common.grammar_types.arrays.Array.is_the_same_value"]], "numpy_dtype() (ase2sprkkr.common.grammar_types.arrays.array method)": [[786, "ase2sprkkr.common.grammar_types.arrays.Array.numpy_dtype"]], "complex (class in ase2sprkkr.common.grammar_types.arrays)": [[787, "ase2sprkkr.common.grammar_types.arrays.Complex"]], "i (ase2sprkkr.common.grammar_types.arrays.complex attribute)": [[787, "ase2sprkkr.common.grammar_types.arrays.Complex.I"]], "__init__() (ase2sprkkr.common.grammar_types.arrays.complex method)": [[787, "ase2sprkkr.common.grammar_types.arrays.Complex.__init__"]], "_grammar_name() (ase2sprkkr.common.grammar_types.arrays.complex method)": [[787, "ase2sprkkr.common.grammar_types.arrays.Complex._grammar_name"]], "_string() (ase2sprkkr.common.grammar_types.arrays.complex method)": [[787, "ase2sprkkr.common.grammar_types.arrays.Complex._string"]], "_validate() (ase2sprkkr.common.grammar_types.arrays.complex method)": [[787, "ase2sprkkr.common.grammar_types.arrays.Complex._validate"]], "allowed_types (ase2sprkkr.common.grammar_types.arrays.complex attribute)": [[787, "ase2sprkkr.common.grammar_types.arrays.Complex.allowed_types"]], "array_access (ase2sprkkr.common.grammar_types.arrays.complex attribute)": [[787, "ase2sprkkr.common.grammar_types.arrays.Complex.array_access"]], "convert() (ase2sprkkr.common.grammar_types.arrays.complex method)": [[787, "ase2sprkkr.common.grammar_types.arrays.Complex.convert"]], "datatype (ase2sprkkr.common.grammar_types.arrays.complex attribute)": [[787, "ase2sprkkr.common.grammar_types.arrays.Complex.datatype"]], "datatype_name (ase2sprkkr.common.grammar_types.arrays.complex attribute)": [[787, "ase2sprkkr.common.grammar_types.arrays.Complex.datatype_name"]], "numpy_type (ase2sprkkr.common.grammar_types.arrays.complex attribute)": [[787, "ase2sprkkr.common.grammar_types.arrays.Complex.numpy_type"]], "sequence (class in ase2sprkkr.common.grammar_types.arrays)": [[788, "ase2sprkkr.common.grammar_types.arrays.Sequence"]], "__init__() (ase2sprkkr.common.grammar_types.arrays.sequence method)": [[788, "ase2sprkkr.common.grammar_types.arrays.Sequence.__init__"]], "_grammar() (ase2sprkkr.common.grammar_types.arrays.sequence method)": [[788, "ase2sprkkr.common.grammar_types.arrays.Sequence._grammar"]], "_string() (ase2sprkkr.common.grammar_types.arrays.sequence method)": [[788, "ase2sprkkr.common.grammar_types.arrays.Sequence._string"]], "_validate() (ase2sprkkr.common.grammar_types.arrays.sequence method)": [[788, "ase2sprkkr.common.grammar_types.arrays.Sequence._validate"]], "convert() (ase2sprkkr.common.grammar_types.arrays.sequence method)": [[788, "ase2sprkkr.common.grammar_types.arrays.Sequence.convert"]], "enrich() (ase2sprkkr.common.grammar_types.arrays.sequence method)": [[788, "ase2sprkkr.common.grammar_types.arrays.Sequence.enrich"]], "grammar_name() (ase2sprkkr.common.grammar_types.arrays.sequence method)": [[788, "ase2sprkkr.common.grammar_types.arrays.Sequence.grammar_name"]], "is_the_same_value() (ase2sprkkr.common.grammar_types.arrays.sequence static method)": [[788, "ase2sprkkr.common.grammar_types.arrays.Sequence.is_the_same_value"]], "setof (class in ase2sprkkr.common.grammar_types.arrays)": [[789, "ase2sprkkr.common.grammar_types.arrays.SetOf"]], "__init__() (ase2sprkkr.common.grammar_types.arrays.setof method)": [[789, "ase2sprkkr.common.grammar_types.arrays.SetOf.__init__"]], "copy_value() (ase2sprkkr.common.grammar_types.arrays.setof method)": [[789, "ase2sprkkr.common.grammar_types.arrays.SetOf.copy_value"]], "delimiter (ase2sprkkr.common.grammar_types.arrays.setof attribute)": [[789, "ase2sprkkr.common.grammar_types.arrays.SetOf.delimiter"]], "delimiter_str (ase2sprkkr.common.grammar_types.arrays.setof attribute)": [[789, "ase2sprkkr.common.grammar_types.arrays.SetOf.delimiter_str"]], "transform_grammar() (ase2sprkkr.common.grammar_types.arrays.setof method)": [[789, "ase2sprkkr.common.grammar_types.arrays.SetOf.transform_grammar"]], "specialcolumn (class in ase2sprkkr.common.grammar_types.arrays)": [[790, "ase2sprkkr.common.grammar_types.arrays.SpecialColumn"]], "__init__() (ase2sprkkr.common.grammar_types.arrays.specialcolumn method)": [[790, "ase2sprkkr.common.grammar_types.arrays.SpecialColumn.__init__"]], "add_grammar() (ase2sprkkr.common.grammar_types.arrays.specialcolumn method)": [[790, "ase2sprkkr.common.grammar_types.arrays.SpecialColumn.add_grammar"]], "add_header_grammar() (ase2sprkkr.common.grammar_types.arrays.specialcolumn method)": [[790, "ase2sprkkr.common.grammar_types.arrays.SpecialColumn.add_header_grammar"]], "format_string() (ase2sprkkr.common.grammar_types.arrays.specialcolumn method)": [[790, "ase2sprkkr.common.grammar_types.arrays.SpecialColumn.format_string"]], "header() (ase2sprkkr.common.grammar_types.arrays.specialcolumn method)": [[790, "ase2sprkkr.common.grammar_types.arrays.SpecialColumn.header"]], "table (class in ase2sprkkr.common.grammar_types.arrays)": [[791, "ase2sprkkr.common.grammar_types.arrays.Table"]], "__init__() (ase2sprkkr.common.grammar_types.arrays.table method)": [[791, "ase2sprkkr.common.grammar_types.arrays.Table.__init__"]], "_grammar() (ase2sprkkr.common.grammar_types.arrays.table method)": [[791, "ase2sprkkr.common.grammar_types.arrays.Table._grammar"]], "_numpy_type (ase2sprkkr.common.grammar_types.arrays.table property)": [[791, "ase2sprkkr.common.grammar_types.arrays.Table._numpy_type"]], "_string() (ase2sprkkr.common.grammar_types.arrays.table method)": [[791, "ase2sprkkr.common.grammar_types.arrays.Table._string"]], "_validate() (ase2sprkkr.common.grammar_types.arrays.table method)": [[791, "ase2sprkkr.common.grammar_types.arrays.Table._validate"]], "array_access (ase2sprkkr.common.grammar_types.arrays.table attribute)": [[791, "ase2sprkkr.common.grammar_types.arrays.Table.array_access"]], "convert() (ase2sprkkr.common.grammar_types.arrays.table method)": [[791, "ase2sprkkr.common.grammar_types.arrays.Table.convert"]], "grammar_name() (ase2sprkkr.common.grammar_types.arrays.table method)": [[791, "ase2sprkkr.common.grammar_types.arrays.Table.grammar_name"]], "is_the_same_value() (ase2sprkkr.common.grammar_types.arrays.table static method)": [[791, "ase2sprkkr.common.grammar_types.arrays.Table.is_the_same_value"]], "name_in_grammar (ase2sprkkr.common.grammar_types.arrays.table attribute)": [[791, "ase2sprkkr.common.grammar_types.arrays.Table.name_in_grammar"]], "number_of_columns() (ase2sprkkr.common.grammar_types.arrays.table method)": [[791, "ase2sprkkr.common.grammar_types.arrays.Table.number_of_columns"]], "numpy_type (ase2sprkkr.common.grammar_types.arrays.table property)": [[791, "ase2sprkkr.common.grammar_types.arrays.Table.numpy_type"]], "special_columns() (ase2sprkkr.common.grammar_types.arrays.table method)": [[791, "ase2sprkkr.common.grammar_types.arrays.Table.special_columns"]], "zero_data() (ase2sprkkr.common.grammar_types.arrays.table method)": [[791, "ase2sprkkr.common.grammar_types.arrays.Table.zero_data"]], "complex_number (in module ase2sprkkr.common.grammar_types.arrays)": [[792, "ase2sprkkr.common.grammar_types.arrays.complex_number"]], "set_of_integers (in module ase2sprkkr.common.grammar_types.arrays)": [[793, "ase2sprkkr.common.grammar_types.arrays.set_of_integers"]], "set_of_reals (in module ase2sprkkr.common.grammar_types.arrays)": [[794, "ase2sprkkr.common.grammar_types.arrays.set_of_reals"]], "ase2sprkkr.common.grammar_types.basic": [[795, "module-ase2sprkkr.common.grammar_types.basic"]], "basebool (class in ase2sprkkr.common.grammar_types.basic)": [[796, "ase2sprkkr.common.grammar_types.basic.BaseBool"]], "__init__() (ase2sprkkr.common.grammar_types.basic.basebool method)": [[796, "ase2sprkkr.common.grammar_types.basic.BaseBool.__init__"]], "allowed_types (ase2sprkkr.common.grammar_types.basic.basebool attribute)": [[796, "ase2sprkkr.common.grammar_types.basic.BaseBool.allowed_types"]], "datatype (ase2sprkkr.common.grammar_types.basic.basebool attribute)": [[796, "ase2sprkkr.common.grammar_types.basic.BaseBool.datatype"]], "datatype_name (ase2sprkkr.common.grammar_types.basic.basebool attribute)": [[796, "ase2sprkkr.common.grammar_types.basic.BaseBool.datatype_name"]], "numpy_type (ase2sprkkr.common.grammar_types.basic.basebool attribute)": [[796, "ase2sprkkr.common.grammar_types.basic.BaseBool.numpy_type"]], "type_name (ase2sprkkr.common.grammar_types.basic.basebool attribute)": [[796, "ase2sprkkr.common.grammar_types.basic.BaseBool.type_name"]], "baserealwithunits (class in ase2sprkkr.common.grammar_types.basic)": [[797, "ase2sprkkr.common.grammar_types.basic.BaseRealWithUnits"]], "__init__() (ase2sprkkr.common.grammar_types.basic.baserealwithunits method)": [[797, "ase2sprkkr.common.grammar_types.basic.BaseRealWithUnits.__init__"]], "_grammar() (ase2sprkkr.common.grammar_types.basic.baserealwithunits method)": [[797, "ase2sprkkr.common.grammar_types.basic.BaseRealWithUnits._grammar"]], "_grammar_units() (ase2sprkkr.common.grammar_types.basic.baserealwithunits method)": [[797, "ase2sprkkr.common.grammar_types.basic.BaseRealWithUnits._grammar_units"]], "_validate() (ase2sprkkr.common.grammar_types.basic.baserealwithunits method)": [[797, "ase2sprkkr.common.grammar_types.basic.BaseRealWithUnits._validate"]], "grammar_cache (ase2sprkkr.common.grammar_types.basic.baserealwithunits attribute)": [[797, "ase2sprkkr.common.grammar_types.basic.BaseRealWithUnits.grammar_cache"]], "grammar_name() (ase2sprkkr.common.grammar_types.basic.baserealwithunits method)": [[797, "ase2sprkkr.common.grammar_types.basic.BaseRealWithUnits.grammar_name"]], "numpy_type (ase2sprkkr.common.grammar_types.basic.baserealwithunits attribute)": [[797, "ase2sprkkr.common.grammar_types.basic.BaseRealWithUnits.numpy_type"]], "basestring (class in ase2sprkkr.common.grammar_types.basic)": [[798, "ase2sprkkr.common.grammar_types.basic.BaseString"]], "__init__() (ase2sprkkr.common.grammar_types.basic.basestring method)": [[798, "ase2sprkkr.common.grammar_types.basic.BaseString.__init__"]], "_validate() (ase2sprkkr.common.grammar_types.basic.basestring method)": [[798, "ase2sprkkr.common.grammar_types.basic.BaseString._validate"]], "allowed_types (ase2sprkkr.common.grammar_types.basic.basestring attribute)": [[798, "ase2sprkkr.common.grammar_types.basic.BaseString.allowed_types"]], "datatype (ase2sprkkr.common.grammar_types.basic.basestring attribute)": [[798, "ase2sprkkr.common.grammar_types.basic.BaseString.datatype"]], "datatype_name (ase2sprkkr.common.grammar_types.basic.basestring attribute)": [[798, "ase2sprkkr.common.grammar_types.basic.BaseString.datatype_name"]], "basicseparator (class in ase2sprkkr.common.grammar_types.basic)": [[799, "ase2sprkkr.common.grammar_types.basic.BasicSeparator"]], "__init__() (ase2sprkkr.common.grammar_types.basic.basicseparator method)": [[799, "ase2sprkkr.common.grammar_types.basic.BasicSeparator.__init__"]], "_validate() (ase2sprkkr.common.grammar_types.basic.basicseparator method)": [[799, "ase2sprkkr.common.grammar_types.basic.BasicSeparator._validate"]], "has_value (ase2sprkkr.common.grammar_types.basic.basicseparator attribute)": [[799, "ase2sprkkr.common.grammar_types.basic.BasicSeparator.has_value"]], "blankseparator (class in ase2sprkkr.common.grammar_types.basic)": [[800, "ase2sprkkr.common.grammar_types.basic.BlankSeparator"]], "__init__() (ase2sprkkr.common.grammar_types.basic.blankseparator method)": [[800, "ase2sprkkr.common.grammar_types.basic.BlankSeparator.__init__"]], "_grammar (ase2sprkkr.common.grammar_types.basic.blankseparator attribute)": [[800, "ase2sprkkr.common.grammar_types.basic.BlankSeparator._grammar"]], "_grammar_name() (ase2sprkkr.common.grammar_types.basic.blankseparator method)": [[800, "ase2sprkkr.common.grammar_types.basic.BlankSeparator._grammar_name"]], "_string() (ase2sprkkr.common.grammar_types.basic.blankseparator method)": [[800, "ase2sprkkr.common.grammar_types.basic.BlankSeparator._string"]], "bool (class in ase2sprkkr.common.grammar_types.basic)": [[801, "ase2sprkkr.common.grammar_types.basic.Bool"]], "i (ase2sprkkr.common.grammar_types.basic.bool attribute)": [[801, "ase2sprkkr.common.grammar_types.basic.Bool.I"]], "__init__() (ase2sprkkr.common.grammar_types.basic.bool method)": [[801, "ase2sprkkr.common.grammar_types.basic.Bool.__init__"]], "_grammar (ase2sprkkr.common.grammar_types.basic.bool attribute)": [[801, "ase2sprkkr.common.grammar_types.basic.Bool._grammar"]], "_string() (ase2sprkkr.common.grammar_types.basic.bool method)": [[801, "ase2sprkkr.common.grammar_types.basic.Bool._string"]], "datatype (ase2sprkkr.common.grammar_types.basic.bool attribute)": [[801, "ase2sprkkr.common.grammar_types.basic.Bool.datatype"]], "grammar_name() (ase2sprkkr.common.grammar_types.basic.bool method)": [[801, "ase2sprkkr.common.grammar_types.basic.Bool.grammar_name"]], "date (class in ase2sprkkr.common.grammar_types.basic)": [[802, "ase2sprkkr.common.grammar_types.basic.Date"]], "i (ase2sprkkr.common.grammar_types.basic.date attribute)": [[802, "ase2sprkkr.common.grammar_types.basic.Date.I"]], "__init__() (ase2sprkkr.common.grammar_types.basic.date method)": [[802, "ase2sprkkr.common.grammar_types.basic.Date.__init__"]], "_grammar (ase2sprkkr.common.grammar_types.basic.date attribute)": [[802, "ase2sprkkr.common.grammar_types.basic.Date._grammar"]], "_string() (ase2sprkkr.common.grammar_types.basic.date method)": [[802, "ase2sprkkr.common.grammar_types.basic.Date._string"]], "allowed_types (ase2sprkkr.common.grammar_types.basic.date attribute)": [[802, "ase2sprkkr.common.grammar_types.basic.Date.allowed_types"]], "datatype (ase2sprkkr.common.grammar_types.basic.date attribute)": [[802, "ase2sprkkr.common.grammar_types.basic.Date.datatype"]], "datatype_name (ase2sprkkr.common.grammar_types.basic.date attribute)": [[802, "ase2sprkkr.common.grammar_types.basic.Date.datatype_name"]], "grammar_name() (ase2sprkkr.common.grammar_types.basic.date method)": [[802, "ase2sprkkr.common.grammar_types.basic.Date.grammar_name"]], "numpy_type (ase2sprkkr.common.grammar_types.basic.date attribute)": [[802, "ase2sprkkr.common.grammar_types.basic.Date.numpy_type"]], "type_name (ase2sprkkr.common.grammar_types.basic.date attribute)": [[802, "ase2sprkkr.common.grammar_types.basic.Date.type_name"]], "defkeyword() (in module ase2sprkkr.common.grammar_types.basic)": [[803, "ase2sprkkr.common.grammar_types.basic.DefKeyword"]], "energy (class in ase2sprkkr.common.grammar_types.basic)": [[804, "ase2sprkkr.common.grammar_types.basic.Energy"]], "i (ase2sprkkr.common.grammar_types.basic.energy attribute)": [[804, "ase2sprkkr.common.grammar_types.basic.Energy.I"]], "__init__() (ase2sprkkr.common.grammar_types.basic.energy method)": [[804, "ase2sprkkr.common.grammar_types.basic.Energy.__init__"]], "datatype (ase2sprkkr.common.grammar_types.basic.energy attribute)": [[804, "ase2sprkkr.common.grammar_types.basic.Energy.datatype"]], "units (ase2sprkkr.common.grammar_types.basic.energy attribute)": [[804, "ase2sprkkr.common.grammar_types.basic.Energy.units"]], "fixedpointnumber (class in ase2sprkkr.common.grammar_types.basic)": [[805, "ase2sprkkr.common.grammar_types.basic.FixedPointNumber"]], "__init__() (ase2sprkkr.common.grammar_types.basic.fixedpointnumber method)": [[805, "ase2sprkkr.common.grammar_types.basic.FixedPointNumber.__init__"]], "_validate() (ase2sprkkr.common.grammar_types.basic.fixedpointnumber method)": [[805, "ase2sprkkr.common.grammar_types.basic.FixedPointNumber._validate"]], "allowed_types (ase2sprkkr.common.grammar_types.basic.fixedpointnumber attribute)": [[805, "ase2sprkkr.common.grammar_types.basic.FixedPointNumber.allowed_types"]], "convert() (ase2sprkkr.common.grammar_types.basic.fixedpointnumber method)": [[805, "ase2sprkkr.common.grammar_types.basic.FixedPointNumber.convert"]], "datatype (ase2sprkkr.common.grammar_types.basic.fixedpointnumber attribute)": [[805, "ase2sprkkr.common.grammar_types.basic.FixedPointNumber.datatype"]], "datatype_name (ase2sprkkr.common.grammar_types.basic.fixedpointnumber attribute)": [[805, "ase2sprkkr.common.grammar_types.basic.FixedPointNumber.datatype_name"]], "numpy_type (ase2sprkkr.common.grammar_types.basic.fixedpointnumber attribute)": [[805, "ase2sprkkr.common.grammar_types.basic.FixedPointNumber.numpy_type"]], "flag (class in ase2sprkkr.common.grammar_types.basic)": [[806, "ase2sprkkr.common.grammar_types.basic.Flag"]], "i (ase2sprkkr.common.grammar_types.basic.flag attribute)": [[806, "ase2sprkkr.common.grammar_types.basic.Flag.I"]], "__init__() (ase2sprkkr.common.grammar_types.basic.flag method)": [[806, "ase2sprkkr.common.grammar_types.basic.Flag.__init__"]], "_grammar (ase2sprkkr.common.grammar_types.basic.flag attribute)": [[806, "ase2sprkkr.common.grammar_types.basic.Flag._grammar"]], "_validate() (ase2sprkkr.common.grammar_types.basic.flag method)": [[806, "ase2sprkkr.common.grammar_types.basic.Flag._validate"]], "datatype (ase2sprkkr.common.grammar_types.basic.flag attribute)": [[806, "ase2sprkkr.common.grammar_types.basic.Flag.datatype"]], "grammar_name() (ase2sprkkr.common.grammar_types.basic.flag method)": [[806, "ase2sprkkr.common.grammar_types.basic.Flag.grammar_name"]], "missing_value() (ase2sprkkr.common.grammar_types.basic.flag method)": [[806, "ase2sprkkr.common.grammar_types.basic.Flag.missing_value"]], "str() (ase2sprkkr.common.grammar_types.basic.flag method)": [[806, "ase2sprkkr.common.grammar_types.basic.Flag.str"]], "i (ase2sprkkr.common.grammar_types.basic.intbool attribute)": [[807, "ase2sprkkr.common.grammar_types.basic.IntBool.I"]], "intbool (class in ase2sprkkr.common.grammar_types.basic)": [[807, "ase2sprkkr.common.grammar_types.basic.IntBool"]], "__init__() (ase2sprkkr.common.grammar_types.basic.intbool method)": [[807, "ase2sprkkr.common.grammar_types.basic.IntBool.__init__"]], "_grammar (ase2sprkkr.common.grammar_types.basic.intbool attribute)": [[807, "ase2sprkkr.common.grammar_types.basic.IntBool._grammar"]], "_rev_grammar (ase2sprkkr.common.grammar_types.basic.intbool attribute)": [[807, "ase2sprkkr.common.grammar_types.basic.IntBool._rev_grammar"]], "_string() (ase2sprkkr.common.grammar_types.basic.intbool method)": [[807, "ase2sprkkr.common.grammar_types.basic.IntBool._string"]], "grammar_name() (ase2sprkkr.common.grammar_types.basic.intbool method)": [[807, "ase2sprkkr.common.grammar_types.basic.IntBool.grammar_name"]], "i (ase2sprkkr.common.grammar_types.basic.integer attribute)": [[808, "ase2sprkkr.common.grammar_types.basic.Integer.I"]], "integer (class in ase2sprkkr.common.grammar_types.basic)": [[808, "ase2sprkkr.common.grammar_types.basic.Integer"]], "__init__() (ase2sprkkr.common.grammar_types.basic.integer method)": [[808, "ase2sprkkr.common.grammar_types.basic.Integer.__init__"]], "_grammar (ase2sprkkr.common.grammar_types.basic.integer attribute)": [[808, "ase2sprkkr.common.grammar_types.basic.Integer._grammar"]], "allowed_types (ase2sprkkr.common.grammar_types.basic.integer attribute)": [[808, "ase2sprkkr.common.grammar_types.basic.Integer.allowed_types"]], "datatype (ase2sprkkr.common.grammar_types.basic.integer attribute)": [[808, "ase2sprkkr.common.grammar_types.basic.Integer.datatype"]], "datatype_name (ase2sprkkr.common.grammar_types.basic.integer attribute)": [[808, "ase2sprkkr.common.grammar_types.basic.Integer.datatype_name"]], "grammar_name() (ase2sprkkr.common.grammar_types.basic.integer method)": [[808, "ase2sprkkr.common.grammar_types.basic.Integer.grammar_name"]], "keyword (class in ase2sprkkr.common.grammar_types.basic)": [[809, "ase2sprkkr.common.grammar_types.basic.Keyword"]], "__init__() (ase2sprkkr.common.grammar_types.basic.keyword method)": [[809, "ase2sprkkr.common.grammar_types.basic.Keyword.__init__"]], "_validate() (ase2sprkkr.common.grammar_types.basic.keyword method)": [[809, "ase2sprkkr.common.grammar_types.basic.Keyword._validate"]], "additional_description() (ase2sprkkr.common.grammar_types.basic.keyword method)": [[809, "ase2sprkkr.common.grammar_types.basic.Keyword.additional_description"]], "convert() (ase2sprkkr.common.grammar_types.basic.keyword method)": [[809, "ase2sprkkr.common.grammar_types.basic.Keyword.convert"]], "grammar_name() (ase2sprkkr.common.grammar_types.basic.keyword method)": [[809, "ase2sprkkr.common.grammar_types.basic.Keyword.grammar_name"]], "is_independent_on_the_predecessor (ase2sprkkr.common.grammar_types.basic.keyword attribute)": [[809, "ase2sprkkr.common.grammar_types.basic.Keyword.is_independent_on_the_predecessor"]], "i (ase2sprkkr.common.grammar_types.basic.linestring attribute)": [[810, "ase2sprkkr.common.grammar_types.basic.LineString.I"]], "linestring (class in ase2sprkkr.common.grammar_types.basic)": [[810, "ase2sprkkr.common.grammar_types.basic.LineString"]], "__init__() (ase2sprkkr.common.grammar_types.basic.linestring method)": [[810, "ase2sprkkr.common.grammar_types.basic.LineString.__init__"]], "_grammar (ase2sprkkr.common.grammar_types.basic.linestring attribute)": [[810, "ase2sprkkr.common.grammar_types.basic.LineString._grammar"]], "grammar_name() (ase2sprkkr.common.grammar_types.basic.linestring method)": [[810, "ase2sprkkr.common.grammar_types.basic.LineString.grammar_name"]], "number (class in ase2sprkkr.common.grammar_types.basic)": [[811, "ase2sprkkr.common.grammar_types.basic.Number"]], "__init__() (ase2sprkkr.common.grammar_types.basic.number method)": [[811, "ase2sprkkr.common.grammar_types.basic.Number.__init__"]], "_validate() (ase2sprkkr.common.grammar_types.basic.number method)": [[811, "ase2sprkkr.common.grammar_types.basic.Number._validate"]], "allowed_types (ase2sprkkr.common.grammar_types.basic.number attribute)": [[811, "ase2sprkkr.common.grammar_types.basic.Number.allowed_types"]], "datatype (ase2sprkkr.common.grammar_types.basic.number attribute)": [[811, "ase2sprkkr.common.grammar_types.basic.Number.datatype"]], "datatype_name (ase2sprkkr.common.grammar_types.basic.number attribute)": [[811, "ase2sprkkr.common.grammar_types.basic.Number.datatype_name"]], "objectnumber (class in ase2sprkkr.common.grammar_types.basic)": [[812, "ase2sprkkr.common.grammar_types.basic.ObjectNumber"]], "__init__() (ase2sprkkr.common.grammar_types.basic.objectnumber method)": [[812, "ase2sprkkr.common.grammar_types.basic.ObjectNumber.__init__"]], "_validate() (ase2sprkkr.common.grammar_types.basic.objectnumber method)": [[812, "ase2sprkkr.common.grammar_types.basic.ObjectNumber._validate"]], "convert() (ase2sprkkr.common.grammar_types.basic.objectnumber method)": [[812, "ase2sprkkr.common.grammar_types.basic.ObjectNumber.convert"]], "i (ase2sprkkr.common.grammar_types.basic.qstring attribute)": [[813, "ase2sprkkr.common.grammar_types.basic.QString.I"]], "qstring (class in ase2sprkkr.common.grammar_types.basic)": [[813, "ase2sprkkr.common.grammar_types.basic.QString"]], "__init__() (ase2sprkkr.common.grammar_types.basic.qstring method)": [[813, "ase2sprkkr.common.grammar_types.basic.QString.__init__"]], "_grammar (ase2sprkkr.common.grammar_types.basic.qstring attribute)": [[813, "ase2sprkkr.common.grammar_types.basic.QString._grammar"]], "allowed_types (ase2sprkkr.common.grammar_types.basic.qstring attribute)": [[813, "ase2sprkkr.common.grammar_types.basic.QString.allowed_types"]], "grammar_name() (ase2sprkkr.common.grammar_types.basic.qstring method)": [[813, "ase2sprkkr.common.grammar_types.basic.QString.grammar_name"]], "i (ase2sprkkr.common.grammar_types.basic.real attribute)": [[814, "ase2sprkkr.common.grammar_types.basic.Real.I"]], "real (class in ase2sprkkr.common.grammar_types.basic)": [[814, "ase2sprkkr.common.grammar_types.basic.Real"]], "__init__() (ase2sprkkr.common.grammar_types.basic.real method)": [[814, "ase2sprkkr.common.grammar_types.basic.Real.__init__"]], "_grammar (ase2sprkkr.common.grammar_types.basic.real attribute)": [[814, "ase2sprkkr.common.grammar_types.basic.Real._grammar"]], "allowed_types (ase2sprkkr.common.grammar_types.basic.real attribute)": [[814, "ase2sprkkr.common.grammar_types.basic.Real.allowed_types"]], "convert() (ase2sprkkr.common.grammar_types.basic.real method)": [[814, "ase2sprkkr.common.grammar_types.basic.Real.convert"]], "datatype (ase2sprkkr.common.grammar_types.basic.real attribute)": [[814, "ase2sprkkr.common.grammar_types.basic.Real.datatype"]], "datatype_name (ase2sprkkr.common.grammar_types.basic.real attribute)": [[814, "ase2sprkkr.common.grammar_types.basic.Real.datatype_name"]], "grammar_name() (ase2sprkkr.common.grammar_types.basic.real method)": [[814, "ase2sprkkr.common.grammar_types.basic.Real.grammar_name"]], "numpy_type (ase2sprkkr.common.grammar_types.basic.real attribute)": [[814, "ase2sprkkr.common.grammar_types.basic.Real.numpy_type"]], "realwithunits (class in ase2sprkkr.common.grammar_types.basic)": [[815, "ase2sprkkr.common.grammar_types.basic.RealWithUnits"]], "__init__() (ase2sprkkr.common.grammar_types.basic.realwithunits method)": [[815, "ase2sprkkr.common.grammar_types.basic.RealWithUnits.__init__"]], "i (ase2sprkkr.common.grammar_types.basic.separator attribute)": [[816, "ase2sprkkr.common.grammar_types.basic.Separator.I"]], "separator (class in ase2sprkkr.common.grammar_types.basic)": [[816, "ase2sprkkr.common.grammar_types.basic.Separator"]], "__init__() (ase2sprkkr.common.grammar_types.basic.separator method)": [[816, "ase2sprkkr.common.grammar_types.basic.Separator.__init__"]], "_grammar (ase2sprkkr.common.grammar_types.basic.separator property)": [[816, "ase2sprkkr.common.grammar_types.basic.Separator._grammar"]], "_grammar_name() (ase2sprkkr.common.grammar_types.basic.separator method)": [[816, "ase2sprkkr.common.grammar_types.basic.Separator._grammar_name"]], "_string() (ase2sprkkr.common.grammar_types.basic.separator method)": [[816, "ase2sprkkr.common.grammar_types.basic.Separator._string"]], "i (ase2sprkkr.common.grammar_types.basic.string attribute)": [[817, "ase2sprkkr.common.grammar_types.basic.String.I"]], "string (class in ase2sprkkr.common.grammar_types.basic)": [[817, "ase2sprkkr.common.grammar_types.basic.String"]], "__init__() (ase2sprkkr.common.grammar_types.basic.string method)": [[817, "ase2sprkkr.common.grammar_types.basic.String.__init__"]], "_grammar (ase2sprkkr.common.grammar_types.basic.string attribute)": [[817, "ase2sprkkr.common.grammar_types.basic.String._grammar"]], "grammar_name() (ase2sprkkr.common.grammar_types.basic.string method)": [[817, "ase2sprkkr.common.grammar_types.basic.String.grammar_name"]], "i (ase2sprkkr.common.grammar_types.basic.unsigned attribute)": [[818, "ase2sprkkr.common.grammar_types.basic.Unsigned.I"]], "unsigned (class in ase2sprkkr.common.grammar_types.basic)": [[818, "ase2sprkkr.common.grammar_types.basic.Unsigned"]], "__init__() (ase2sprkkr.common.grammar_types.basic.unsigned method)": [[818, "ase2sprkkr.common.grammar_types.basic.Unsigned.__init__"]], "_grammar (ase2sprkkr.common.grammar_types.basic.unsigned attribute)": [[818, "ase2sprkkr.common.grammar_types.basic.Unsigned._grammar"]], "_validate() (ase2sprkkr.common.grammar_types.basic.unsigned method)": [[818, "ase2sprkkr.common.grammar_types.basic.Unsigned._validate"]], "datatype_name (ase2sprkkr.common.grammar_types.basic.unsigned attribute)": [[818, "ase2sprkkr.common.grammar_types.basic.Unsigned.datatype_name"]], "grammar_name() (ase2sprkkr.common.grammar_types.basic.unsigned method)": [[818, "ase2sprkkr.common.grammar_types.basic.Unsigned.grammar_name"]], "boolean (in module ase2sprkkr.common.grammar_types.basic)": [[819, "ase2sprkkr.common.grammar_types.basic.boolean"]], "date (in module ase2sprkkr.common.grammar_types.basic)": [[820, "ase2sprkkr.common.grammar_types.basic.date"]], "energy (in module ase2sprkkr.common.grammar_types.basic)": [[821, "ase2sprkkr.common.grammar_types.basic.energy"]], "flag (in module ase2sprkkr.common.grammar_types.basic)": [[822, "ase2sprkkr.common.grammar_types.basic.flag"]], "int_bool (in module ase2sprkkr.common.grammar_types.basic)": [[823, "ase2sprkkr.common.grammar_types.basic.int_bool"]], "integer (in module ase2sprkkr.common.grammar_types.basic)": [[824, "ase2sprkkr.common.grammar_types.basic.integer"]], "line_string (in module ase2sprkkr.common.grammar_types.basic)": [[825, "ase2sprkkr.common.grammar_types.basic.line_string"]], "qstring (in module ase2sprkkr.common.grammar_types.basic)": [[826, "ase2sprkkr.common.grammar_types.basic.qstring"]], "real (in module ase2sprkkr.common.grammar_types.basic)": [[827, "ase2sprkkr.common.grammar_types.basic.real"]], "separator (in module ase2sprkkr.common.grammar_types.basic)": [[828, "ase2sprkkr.common.grammar_types.basic.separator"]], "string (in module ase2sprkkr.common.grammar_types.basic)": [[829, "ase2sprkkr.common.grammar_types.basic.string"]], "unsigned (in module ase2sprkkr.common.grammar_types.basic)": [[830, "ase2sprkkr.common.grammar_types.basic.unsigned"]], "ase2sprkkr.common.grammar_types.data": [[831, "module-ase2sprkkr.common.grammar_types.data"]], "numpyarray (class in ase2sprkkr.common.grammar_types.data)": [[832, "ase2sprkkr.common.grammar_types.data.NumpyArray"]], "__init__() (ase2sprkkr.common.grammar_types.data.numpyarray method)": [[832, "ase2sprkkr.common.grammar_types.data.NumpyArray.__init__"]], "_grammar() (ase2sprkkr.common.grammar_types.data.numpyarray method)": [[832, "ase2sprkkr.common.grammar_types.data.NumpyArray._grammar"]], "_string() (ase2sprkkr.common.grammar_types.data.numpyarray method)": [[832, "ase2sprkkr.common.grammar_types.data.NumpyArray._string"]], "_validate() (ase2sprkkr.common.grammar_types.data.numpyarray method)": [[832, "ase2sprkkr.common.grammar_types.data.NumpyArray._validate"]], "array_access (ase2sprkkr.common.grammar_types.data.numpyarray attribute)": [[832, "ase2sprkkr.common.grammar_types.data.NumpyArray.array_access"]], "convert() (ase2sprkkr.common.grammar_types.data.numpyarray method)": [[832, "ase2sprkkr.common.grammar_types.data.NumpyArray.convert"]], "copy_value() (ase2sprkkr.common.grammar_types.data.numpyarray method)": [[832, "ase2sprkkr.common.grammar_types.data.NumpyArray.copy_value"]], "is_the_same_value() (ase2sprkkr.common.grammar_types.data.numpyarray static method)": [[832, "ase2sprkkr.common.grammar_types.data.NumpyArray.is_the_same_value"]], "prefixed (class in ase2sprkkr.common.grammar_types.data)": [[833, "ase2sprkkr.common.grammar_types.data.Prefixed"]], "__init__() (ase2sprkkr.common.grammar_types.data.prefixed method)": [[833, "ase2sprkkr.common.grammar_types.data.Prefixed.__init__"]], "_grammar (ase2sprkkr.common.grammar_types.data.prefixed property)": [[833, "ase2sprkkr.common.grammar_types.data.Prefixed._grammar"]], "_string() (ase2sprkkr.common.grammar_types.data.prefixed method)": [[833, "ase2sprkkr.common.grammar_types.data.Prefixed._string"]], "rawdata (class in ase2sprkkr.common.grammar_types.data)": [[834, "ase2sprkkr.common.grammar_types.data.RawData"]], "__init__() (ase2sprkkr.common.grammar_types.data.rawdata method)": [[834, "ase2sprkkr.common.grammar_types.data.RawData.__init__"]], "_grammar() (ase2sprkkr.common.grammar_types.data.rawdata method)": [[834, "ase2sprkkr.common.grammar_types.data.RawData._grammar"]], "_n_lines_grammar() (ase2sprkkr.common.grammar_types.data.rawdata method)": [[834, "ase2sprkkr.common.grammar_types.data.RawData._n_lines_grammar"]], "_string() (ase2sprkkr.common.grammar_types.data.rawdata method)": [[834, "ase2sprkkr.common.grammar_types.data.RawData._string"]], "added_to_container() (ase2sprkkr.common.grammar_types.data.rawdata method)": [[834, "ase2sprkkr.common.grammar_types.data.RawData.added_to_container"]], "convert() (ase2sprkkr.common.grammar_types.data.rawdata method)": [[834, "ase2sprkkr.common.grammar_types.data.RawData.convert"]], "restofthefile (class in ase2sprkkr.common.grammar_types.data)": [[835, "ase2sprkkr.common.grammar_types.data.RestOfTheFile"]], "__init__() (ase2sprkkr.common.grammar_types.data.restofthefile method)": [[835, "ase2sprkkr.common.grammar_types.data.RestOfTheFile.__init__"]], "_grammar (ase2sprkkr.common.grammar_types.data.restofthefile attribute)": [[835, "ase2sprkkr.common.grammar_types.data.RestOfTheFile._grammar"]], "datatype (ase2sprkkr.common.grammar_types.data.restofthefile attribute)": [[835, "ase2sprkkr.common.grammar_types.data.RestOfTheFile.datatype"]], "datatype_name (ase2sprkkr.common.grammar_types.data.restofthefile attribute)": [[835, "ase2sprkkr.common.grammar_types.data.RestOfTheFile.datatype_name"]], "grammar_name() (ase2sprkkr.common.grammar_types.data.restofthefile method)": [[835, "ase2sprkkr.common.grammar_types.data.RestOfTheFile.grammar_name"]], "ase2sprkkr.common.grammar_types.grammar_type": [[836, "module-ase2sprkkr.common.grammar_types.grammar_type"]], "grammartype (class in ase2sprkkr.common.grammar_types.grammar_type)": [[837, "ase2sprkkr.common.grammar_types.grammar_type.GrammarType"]], "__init__() (ase2sprkkr.common.grammar_types.grammar_type.grammartype method)": [[837, "ase2sprkkr.common.grammar_types.grammar_type.GrammarType.__init__"]], "_string() (ase2sprkkr.common.grammar_types.grammar_type.grammartype method)": [[837, "ase2sprkkr.common.grammar_types.grammar_type.GrammarType._string"]], "_validate() (ase2sprkkr.common.grammar_types.grammar_type.grammartype method)": [[837, "ase2sprkkr.common.grammar_types.grammar_type.GrammarType._validate"]], "_valueerror() (ase2sprkkr.common.grammar_types.grammar_type.grammartype method)": [[837, "ase2sprkkr.common.grammar_types.grammar_type.GrammarType._valueError"]], "added_to_container() (ase2sprkkr.common.grammar_types.grammar_type.grammartype method)": [[837, "ase2sprkkr.common.grammar_types.grammar_type.GrammarType.added_to_container"]], "additional_description() (ase2sprkkr.common.grammar_types.grammar_type.grammartype method)": [[837, "ase2sprkkr.common.grammar_types.grammar_type.GrammarType.additional_description"]], "after_format (ase2sprkkr.common.grammar_types.grammar_type.grammartype attribute)": [[837, "ase2sprkkr.common.grammar_types.grammar_type.GrammarType.after_format"]], "apply_format() (ase2sprkkr.common.grammar_types.grammar_type.grammartype method)": [[837, "ase2sprkkr.common.grammar_types.grammar_type.GrammarType.apply_format"]], "array_access (ase2sprkkr.common.grammar_types.grammar_type.grammartype attribute)": [[837, "ase2sprkkr.common.grammar_types.grammar_type.GrammarType.array_access"]], "convert() (ase2sprkkr.common.grammar_types.grammar_type.grammartype method)": [[837, "ase2sprkkr.common.grammar_types.grammar_type.GrammarType.convert"]], "copy() (ase2sprkkr.common.grammar_types.grammar_type.grammartype method)": [[837, "ase2sprkkr.common.grammar_types.grammar_type.GrammarType.copy"]], "copy_value() (ase2sprkkr.common.grammar_types.grammar_type.grammartype method)": [[837, "ase2sprkkr.common.grammar_types.grammar_type.GrammarType.copy_value"]], "default_value (ase2sprkkr.common.grammar_types.grammar_type.grammartype attribute)": [[837, "ase2sprkkr.common.grammar_types.grammar_type.GrammarType.default_value"]], "enrich() (ase2sprkkr.common.grammar_types.grammar_type.grammartype method)": [[837, "ase2sprkkr.common.grammar_types.grammar_type.GrammarType.enrich"]], "format (ase2sprkkr.common.grammar_types.grammar_type.grammartype property)": [[837, "ase2sprkkr.common.grammar_types.grammar_type.GrammarType.format"]], "format_string() (ase2sprkkr.common.grammar_types.grammar_type.grammartype method)": [[837, "ase2sprkkr.common.grammar_types.grammar_type.GrammarType.format_string"]], "grammar() (ase2sprkkr.common.grammar_types.grammar_type.grammartype method)": [[837, "ase2sprkkr.common.grammar_types.grammar_type.GrammarType.grammar"]], "grammar_name() (ase2sprkkr.common.grammar_types.grammar_type.grammartype method)": [[837, "ase2sprkkr.common.grammar_types.grammar_type.GrammarType.grammar_name"]], "has_value (ase2sprkkr.common.grammar_types.grammar_type.grammartype attribute)": [[837, "ase2sprkkr.common.grammar_types.grammar_type.GrammarType.has_value"]], "is_independent_on_the_predecessor (ase2sprkkr.common.grammar_types.grammar_type.grammartype attribute)": [[837, "ase2sprkkr.common.grammar_types.grammar_type.GrammarType.is_independent_on_the_predecessor"]], "is_the_same_value() (ase2sprkkr.common.grammar_types.grammar_type.grammartype static method)": [[837, "ase2sprkkr.common.grammar_types.grammar_type.GrammarType.is_the_same_value"]], "missing_value() (ase2sprkkr.common.grammar_types.grammar_type.grammartype method)": [[837, "ase2sprkkr.common.grammar_types.grammar_type.GrammarType.missing_value"]], "name_in_grammar (ase2sprkkr.common.grammar_types.grammar_type.grammartype attribute)": [[837, "ase2sprkkr.common.grammar_types.grammar_type.GrammarType.name_in_grammar"]], "numpy_dtype() (ase2sprkkr.common.grammar_types.grammar_type.grammartype method)": [[837, "ase2sprkkr.common.grammar_types.grammar_type.GrammarType.numpy_dtype"]], "numpy_type (ase2sprkkr.common.grammar_types.grammar_type.grammartype attribute)": [[837, "ase2sprkkr.common.grammar_types.grammar_type.GrammarType.numpy_type"]], "parse() (ase2sprkkr.common.grammar_types.grammar_type.grammartype method)": [[837, "ase2sprkkr.common.grammar_types.grammar_type.GrammarType.parse"]], "parse_from_stream() (ase2sprkkr.common.grammar_types.grammar_type.grammartype method)": [[837, "ase2sprkkr.common.grammar_types.grammar_type.GrammarType.parse_from_stream"]], "postfix (ase2sprkkr.common.grammar_types.grammar_type.grammartype attribute)": [[837, "ase2sprkkr.common.grammar_types.grammar_type.GrammarType.postfix"]], "prefix (ase2sprkkr.common.grammar_types.grammar_type.grammartype attribute)": [[837, "ase2sprkkr.common.grammar_types.grammar_type.GrammarType.prefix"]], "print() (ase2sprkkr.common.grammar_types.grammar_type.grammartype method)": [[837, "ase2sprkkr.common.grammar_types.grammar_type.GrammarType.print"]], "string() (ase2sprkkr.common.grammar_types.grammar_type.grammartype method)": [[837, "ase2sprkkr.common.grammar_types.grammar_type.GrammarType.string"]], "transform_grammar() (ase2sprkkr.common.grammar_types.grammar_type.grammartype method)": [[837, "ase2sprkkr.common.grammar_types.grammar_type.GrammarType.transform_grammar"]], "type_validation() (ase2sprkkr.common.grammar_types.grammar_type.grammartype method)": [[837, "ase2sprkkr.common.grammar_types.grammar_type.GrammarType.type_validation"]], "used_in_definition() (ase2sprkkr.common.grammar_types.grammar_type.grammartype method)": [[837, "ase2sprkkr.common.grammar_types.grammar_type.GrammarType.used_in_definition"]], "validate() (ase2sprkkr.common.grammar_types.grammar_type.grammartype method)": [[837, "ase2sprkkr.common.grammar_types.grammar_type.GrammarType.validate"]], "write() (ase2sprkkr.common.grammar_types.grammar_type.grammartype method)": [[837, "ase2sprkkr.common.grammar_types.grammar_type.GrammarType.write"]], "typedgrammartype (class in ase2sprkkr.common.grammar_types.grammar_type)": [[838, "ase2sprkkr.common.grammar_types.grammar_type.TypedGrammarType"]], "__init__() (ase2sprkkr.common.grammar_types.grammar_type.typedgrammartype method)": [[838, "ase2sprkkr.common.grammar_types.grammar_type.TypedGrammarType.__init__"]], "_validate() (ase2sprkkr.common.grammar_types.grammar_type.typedgrammartype method)": [[838, "ase2sprkkr.common.grammar_types.grammar_type.TypedGrammarType._validate"]], "allowed_types (ase2sprkkr.common.grammar_types.grammar_type.typedgrammartype attribute)": [[838, "ase2sprkkr.common.grammar_types.grammar_type.TypedGrammarType.allowed_types"]], "convert() (ase2sprkkr.common.grammar_types.grammar_type.typedgrammartype method)": [[838, "ase2sprkkr.common.grammar_types.grammar_type.TypedGrammarType.convert"]], "datatype (ase2sprkkr.common.grammar_types.grammar_type.typedgrammartype attribute)": [[838, "ase2sprkkr.common.grammar_types.grammar_type.TypedGrammarType.datatype"]], "datatype_name (ase2sprkkr.common.grammar_types.grammar_type.typedgrammartype attribute)": [[838, "ase2sprkkr.common.grammar_types.grammar_type.TypedGrammarType.datatype_name"]], "compare_numpy_values() (in module ase2sprkkr.common.grammar_types.grammar_type)": [[839, "ase2sprkkr.common.grammar_types.grammar_type.compare_numpy_values"]], "format_for_type() (in module ase2sprkkr.common.grammar_types.grammar_type)": [[840, "ase2sprkkr.common.grammar_types.grammar_type.format_for_type"]], "recognized_set_types (in module ase2sprkkr.common.grammar_types.grammar_type)": [[841, "ase2sprkkr.common.grammar_types.grammar_type.recognized_set_types"]], "type_from_default_value() (in module ase2sprkkr.common.grammar_types.grammar_type)": [[842, "ase2sprkkr.common.grammar_types.grammar_type.type_from_default_value"]], "type_from_type() (in module ase2sprkkr.common.grammar_types.grammar_type)": [[843, "ase2sprkkr.common.grammar_types.grammar_type.type_from_type"]], "type_from_value() (in module ase2sprkkr.common.grammar_types.grammar_type)": [[844, "ase2sprkkr.common.grammar_types.grammar_type.type_from_value"]], "ase2sprkkr.common.grammar_types.mixed": [[845, "module-ase2sprkkr.common.grammar_types.mixed"]], "recognized_set_types (in module ase2sprkkr.common.grammar_types)": [[846, "ase2sprkkr.common.grammar_types.recognized_set_types"]], "type_from_set_map (in module ase2sprkkr.common.grammar_types)": [[847, "ase2sprkkr.common.grammar_types.type_from_set_map"]], "type_from_type_map (in module ase2sprkkr.common.grammar_types)": [[848, "ase2sprkkr.common.grammar_types.type_from_type_map"]], "ase2sprkkr.common.grammar_types.warnings": [[849, "module-ase2sprkkr.common.grammar_types.warnings"]], "suspiciousvaluewarning": [[850, "ase2sprkkr.common.grammar_types.warnings.SuspiciousValueWarning"]], "ase2sprkkr.common.init_tests": [[851, "module-ase2sprkkr.common.init_tests"]], "testcase (class in ase2sprkkr.common.init_tests)": [[852, "ase2sprkkr.common.init_tests.TestCase"]], "__init__() (ase2sprkkr.common.init_tests.testcase method)": [[852, "ase2sprkkr.common.init_tests.TestCase.__init__"]], "_calc_args (ase2sprkkr.common.init_tests.testcase attribute)": [[852, "ase2sprkkr.common.init_tests.TestCase._calc_args"]], "_print_output (ase2sprkkr.common.init_tests.testcase attribute)": [[852, "ase2sprkkr.common.init_tests.TestCase._print_output"]], "almost_equal_precision() (ase2sprkkr.common.init_tests.testcase class method)": [[852, "ase2sprkkr.common.init_tests.TestCase.almost_equal_precision"]], "assertalmostequal() (ase2sprkkr.common.init_tests.testcase method)": [[852, "ase2sprkkr.common.init_tests.TestCase.assertAlmostEqual"]], "assertasyncequal() (ase2sprkkr.common.init_tests.testcase method)": [[852, "ase2sprkkr.common.init_tests.TestCase.assertAsyncEqual"]], "assertasyncraises() (ase2sprkkr.common.init_tests.testcase method)": [[852, "ase2sprkkr.common.init_tests.TestCase.assertAsyncRaises"]], "assertequal() (ase2sprkkr.common.init_tests.testcase method)": [[852, "ase2sprkkr.common.init_tests.TestCase.assertEqual"]], "assertfalse() (ase2sprkkr.common.init_tests.testcase method)": [[852, "ase2sprkkr.common.init_tests.TestCase.assertFalse"]], "assertisnone() (ase2sprkkr.common.init_tests.testcase method)": [[852, "ase2sprkkr.common.init_tests.TestCase.assertIsNone"]], "assertnotequal() (ase2sprkkr.common.init_tests.testcase method)": [[852, "ase2sprkkr.common.init_tests.TestCase.assertNotEqual"]], "assertraises() (ase2sprkkr.common.init_tests.testcase method)": [[852, "ase2sprkkr.common.init_tests.TestCase.assertRaises"]], "asserttrue() (ase2sprkkr.common.init_tests.testcase method)": [[852, "ase2sprkkr.common.init_tests.TestCase.assertTrue"]], "calc_args() (ase2sprkkr.common.init_tests.testcase class method)": [[852, "ase2sprkkr.common.init_tests.TestCase.calc_args"]], "runasync() (ase2sprkkr.common.init_tests.testcase static method)": [[852, "ase2sprkkr.common.init_tests.TestCase.runAsync"]], "run_sprkkr() (ase2sprkkr.common.init_tests.testcase method)": [[852, "ase2sprkkr.common.init_tests.TestCase.run_sprkkr"]], "temporary_dir() (ase2sprkkr.common.init_tests.testcase method)": [[852, "ase2sprkkr.common.init_tests.TestCase.temporary_dir"]], "arr_testfce() (in module ase2sprkkr.common.init_tests)": [[853, "ase2sprkkr.common.init_tests.arr_testfce"]], "assertdictequal() (in module ase2sprkkr.common.init_tests)": [[854, "ase2sprkkr.common.init_tests.assertDictEqual"]], "assertlistequal() (in module ase2sprkkr.common.init_tests)": [[855, "ase2sprkkr.common.init_tests.assertListEqual"]], "assert_almost_equals() (in module ase2sprkkr.common.init_tests)": [[856, "ase2sprkkr.common.init_tests.assert_almost_equals"]], "assert_equals() (in module ase2sprkkr.common.init_tests)": [[857, "ase2sprkkr.common.init_tests.assert_equals"]], "__init__() (ase2sprkkr.common.init_tests.extdict method)": [[858, "ase2sprkkr.common.init_tests.extdict.__init__"]], "extdict (class in ase2sprkkr.common.init_tests)": [[858, "ase2sprkkr.common.init_tests.extdict"]], "patch_package() (in module ase2sprkkr.common.init_tests)": [[859, "ase2sprkkr.common.init_tests.patch_package"]], "testfce() (in module ase2sprkkr.common.init_tests)": [[860, "ase2sprkkr.common.init_tests.testfce"]], "ase2sprkkr.common.lazy_string": [[861, "module-ase2sprkkr.common.lazy_string"]], "lazystring (class in ase2sprkkr.common.lazy_string)": [[862, "ase2sprkkr.common.lazy_string.LazyString"]], "__init__() (ase2sprkkr.common.lazy_string.lazystring method)": [[862, "ase2sprkkr.common.lazy_string.LazyString.__init__"]], "value (ase2sprkkr.common.lazy_string.lazystring property)": [[862, "ase2sprkkr.common.lazy_string.LazyString.value"]], "ase2sprkkr.common.misc": [[863, "module-ase2sprkkr.common.misc"]], "as_integer() (in module ase2sprkkr.common.misc)": [[864, "ase2sprkkr.common.misc.as_integer"]], "config_property() (in module ase2sprkkr.common.misc)": [[865, "ase2sprkkr.common.misc.config_property"]], "copy_list() (in module ase2sprkkr.common.misc)": [[866, "ase2sprkkr.common.misc.copy_list"]], "dict_first_item() (in module ase2sprkkr.common.misc)": [[867, "ase2sprkkr.common.misc.dict_first_item"]], "first_non_none() (in module ase2sprkkr.common.misc)": [[868, "ase2sprkkr.common.misc.first_non_none"]], "njit() (in module ase2sprkkr.common.misc)": [[869, "ase2sprkkr.common.misc.njit"]], "numpy_index() (in module ase2sprkkr.common.misc)": [[870, "ase2sprkkr.common.misc.numpy_index"]], "ase2sprkkr.common.no_output": [[871, "module-ase2sprkkr.common.no_output"]], "nooutput (class in ase2sprkkr.common.no_output)": [[872, "ase2sprkkr.common.no_output.NoOutput"]], "__init__() (ase2sprkkr.common.no_output.nooutput method)": [[872, "ase2sprkkr.common.no_output.NoOutput.__init__"]], "ase2sprkkr.common.options": [[873, "module-ase2sprkkr.common.options"]], "baseoption (class in ase2sprkkr.common.options)": [[874, "ase2sprkkr.common.options.BaseOption"]], "__init__() (ase2sprkkr.common.options.baseoption method)": [[874, "ase2sprkkr.common.options.BaseOption.__init__"]], "_as_dict() (ase2sprkkr.common.options.baseoption method)": [[874, "ase2sprkkr.common.options.BaseOption._as_dict"]], "_find_members() (ase2sprkkr.common.options.baseoption method)": [[874, "ase2sprkkr.common.options.BaseOption._find_members"]], "_save_to_file() (ase2sprkkr.common.options.baseoption method)": [[874, "ase2sprkkr.common.options.BaseOption._save_to_file"]], "clear() (ase2sprkkr.common.options.baseoption method)": [[874, "ase2sprkkr.common.options.BaseOption.clear"]], "get_path() (ase2sprkkr.common.options.baseoption method)": [[874, "ase2sprkkr.common.options.BaseOption.get_path"]], "customoption (class in ase2sprkkr.common.options)": [[875, "ase2sprkkr.common.options.CustomOption"]], "__init__() (ase2sprkkr.common.options.customoption method)": [[875, "ase2sprkkr.common.options.CustomOption.__init__"]], "factory() (ase2sprkkr.common.options.customoption class method)": [[875, "ase2sprkkr.common.options.CustomOption.factory"]], "remove() (ase2sprkkr.common.options.customoption method)": [[875, "ase2sprkkr.common.options.CustomOption.remove"]], "dangerousvalue (class in ase2sprkkr.common.options)": [[876, "ase2sprkkr.common.options.DangerousValue"]], "__init__() (ase2sprkkr.common.options.dangerousvalue method)": [[876, "ase2sprkkr.common.options.DangerousValue.__init__"]], "write_value() (ase2sprkkr.common.options.dangerousvalue method)": [[876, "ase2sprkkr.common.options.DangerousValue.write_value"]], "dummy (class in ase2sprkkr.common.options)": [[877, "ase2sprkkr.common.options.Dummy"]], "__init__() (ase2sprkkr.common.options.dummy method)": [[877, "ase2sprkkr.common.options.Dummy.__init__"]], "_validate() (ase2sprkkr.common.options.dummy method)": [[877, "ase2sprkkr.common.options.Dummy._validate"]], "has_any_value() (ase2sprkkr.common.options.dummy method)": [[877, "ase2sprkkr.common.options.Dummy.has_any_value"]], "dummystub (class in ase2sprkkr.common.options)": [[878, "ase2sprkkr.common.options.DummyStub"]], "__init__() (ase2sprkkr.common.options.dummystub method)": [[878, "ase2sprkkr.common.options.DummyStub.__init__"]], "_as_dict() (ase2sprkkr.common.options.dummystub method)": [[878, "ase2sprkkr.common.options.DummyStub._as_dict"]], "option (class in ase2sprkkr.common.options)": [[879, "ase2sprkkr.common.options.Option"]], "__init__() (ase2sprkkr.common.options.option method)": [[879, "ase2sprkkr.common.options.Option.__init__"]], "_as_dict() (ase2sprkkr.common.options.option method)": [[879, "ase2sprkkr.common.options.Option._as_dict"]], "_check_array_access() (ase2sprkkr.common.options.option method)": [[879, "ase2sprkkr.common.options.Option._check_array_access"]], "_create_dangerous_value() (ase2sprkkr.common.options.option method)": [[879, "ase2sprkkr.common.options.Option._create_dangerous_value"]], "_getitem() (ase2sprkkr.common.options.option method)": [[879, "ase2sprkkr.common.options.Option._getitem"]], "_pack_value() (ase2sprkkr.common.options.option method)": [[879, "ase2sprkkr.common.options.Option._pack_value"]], "_post_set() (ase2sprkkr.common.options.option method)": [[879, "ase2sprkkr.common.options.Option._post_set"]], "_set_item() (ase2sprkkr.common.options.option method)": [[879, "ase2sprkkr.common.options.Option._set_item"]], "_unpack_value() (ase2sprkkr.common.options.option method)": [[879, "ase2sprkkr.common.options.Option._unpack_value"]], "_validate() (ase2sprkkr.common.options.option method)": [[879, "ase2sprkkr.common.options.Option._validate"]], "_value_or_default() (ase2sprkkr.common.options.option method)": [[879, "ase2sprkkr.common.options.Option._value_or_default"]], "_written_value() (ase2sprkkr.common.options.option method)": [[879, "ase2sprkkr.common.options.Option._written_value"]], "add_hook() (ase2sprkkr.common.options.option method)": [[879, "ase2sprkkr.common.options.Option.add_hook"]], "clear() (ase2sprkkr.common.options.option method)": [[879, "ase2sprkkr.common.options.Option.clear"]], "clear_result() (ase2sprkkr.common.options.option method)": [[879, "ase2sprkkr.common.options.Option.clear_result"]], "default_value (ase2sprkkr.common.options.option property)": [[879, "ase2sprkkr.common.options.Option.default_value"]], "get() (ase2sprkkr.common.options.option method)": [[879, "ase2sprkkr.common.options.Option.get"]], "has_any_value() (ase2sprkkr.common.options.option method)": [[879, "ase2sprkkr.common.options.Option.has_any_value"]], "is_changed() (ase2sprkkr.common.options.option method)": [[879, "ase2sprkkr.common.options.Option.is_changed"]], "is_dangerous() (ase2sprkkr.common.options.option method)": [[879, "ase2sprkkr.common.options.Option.is_dangerous"]], "is_it_the_default_value() (ase2sprkkr.common.options.option method)": [[879, "ase2sprkkr.common.options.Option.is_it_the_default_value"]], "is_set() (ase2sprkkr.common.options.option method)": [[879, "ase2sprkkr.common.options.Option.is_set"]], "name (ase2sprkkr.common.options.option property)": [[879, "ase2sprkkr.common.options.Option.name"]], "result (ase2sprkkr.common.options.option property)": [[879, "ase2sprkkr.common.options.Option.result"]], "set() (ase2sprkkr.common.options.option method)": [[879, "ase2sprkkr.common.options.Option.set"]], "set_dangerous() (ase2sprkkr.common.options.option method)": [[879, "ase2sprkkr.common.options.Option.set_dangerous"]], "value_and_changed() (ase2sprkkr.common.options.option method)": [[879, "ase2sprkkr.common.options.Option.value_and_changed"]], "ase2sprkkr.common.parsing_results": [[880, "module-ase2sprkkr.common.parsing_results"]], "arraykey (class in ase2sprkkr.common.parsing_results)": [[881, "ase2sprkkr.common.parsing_results.ArrayKey"]], "arraykey.resultclass (class in ase2sprkkr.common.parsing_results)": [[881, "ase2sprkkr.common.parsing_results.ArrayKey.ResultClass"]], "not_set (ase2sprkkr.common.parsing_results.arraykey.resultclass attribute)": [[881, "ase2sprkkr.common.parsing_results.ArrayKey.ResultClass.NOT_SET"]], "__init__() (ase2sprkkr.common.parsing_results.arraykey method)": [[881, "ase2sprkkr.common.parsing_results.ArrayKey.__init__"]], "add() (ase2sprkkr.common.parsing_results.arraykey method)": [[881, "ase2sprkkr.common.parsing_results.ArrayKey.add"]], "result() (ase2sprkkr.common.parsing_results.arraykey.resultclass method)": [[881, "ase2sprkkr.common.parsing_results.ArrayKey.ResultClass.result"]], "defdictkey (class in ase2sprkkr.common.parsing_results)": [[882, "ase2sprkkr.common.parsing_results.DefDictKey"]], "__init__() (ase2sprkkr.common.parsing_results.defdictkey method)": [[882, "ase2sprkkr.common.parsing_results.DefDictKey.__init__"]], "convert() (ase2sprkkr.common.parsing_results.defdictkey method)": [[882, "ase2sprkkr.common.parsing_results.DefDictKey.convert"]], "dictkey (class in ase2sprkkr.common.parsing_results)": [[883, "ase2sprkkr.common.parsing_results.DictKey"]], "dictkey.resultclass (class in ase2sprkkr.common.parsing_results)": [[883, "ase2sprkkr.common.parsing_results.DictKey.ResultClass"]], "__init__() (ase2sprkkr.common.parsing_results.dictkey method)": [[883, "ase2sprkkr.common.parsing_results.DictKey.__init__"]], "add() (ase2sprkkr.common.parsing_results.dictkey method)": [[883, "ase2sprkkr.common.parsing_results.DictKey.add"]], "ignoredkey (class in ase2sprkkr.common.parsing_results)": [[884, "ase2sprkkr.common.parsing_results.IgnoredKey"]], "__init__() (ase2sprkkr.common.parsing_results.ignoredkey method)": [[884, "ase2sprkkr.common.parsing_results.IgnoredKey.__init__"]], "add() (ase2sprkkr.common.parsing_results.ignoredkey method)": [[884, "ase2sprkkr.common.parsing_results.IgnoredKey.add"]], "key (class in ase2sprkkr.common.parsing_results)": [[885, "ase2sprkkr.common.parsing_results.Key"]], "none() (ase2sprkkr.common.parsing_results.key method)": [[885, "ase2sprkkr.common.parsing_results.Key.NONE"]], "__init__() (ase2sprkkr.common.parsing_results.key method)": [[885, "ase2sprkkr.common.parsing_results.Key.__init__"]], "get() (ase2sprkkr.common.parsing_results.key method)": [[885, "ase2sprkkr.common.parsing_results.Key.get"]], "repeatedkey (class in ase2sprkkr.common.parsing_results)": [[886, "ase2sprkkr.common.parsing_results.RepeatedKey"]], "repeatedkey.resultclass (class in ase2sprkkr.common.parsing_results)": [[886, "ase2sprkkr.common.parsing_results.RepeatedKey.ResultClass"]], "__init__() (ase2sprkkr.common.parsing_results.repeatedkey method)": [[886, "ase2sprkkr.common.parsing_results.RepeatedKey.__init__"]], "add() (ase2sprkkr.common.parsing_results.repeatedkey method)": [[886, "ase2sprkkr.common.parsing_results.RepeatedKey.add"]], "result (class in ase2sprkkr.common.parsing_results)": [[887, "ase2sprkkr.common.parsing_results.Result"]], "__init__() (ase2sprkkr.common.parsing_results.result method)": [[887, "ase2sprkkr.common.parsing_results.Result.__init__"]], "result() (ase2sprkkr.common.parsing_results.result method)": [[887, "ase2sprkkr.common.parsing_results.Result.result"]], "subkey (class in ase2sprkkr.common.parsing_results)": [[888, "ase2sprkkr.common.parsing_results.SubKey"]], "__init__() (ase2sprkkr.common.parsing_results.subkey method)": [[888, "ase2sprkkr.common.parsing_results.SubKey.__init__"]], "convert() (ase2sprkkr.common.parsing_results.subkey method)": [[888, "ase2sprkkr.common.parsing_results.SubKey.convert"]], "validatekey (class in ase2sprkkr.common.parsing_results)": [[889, "ase2sprkkr.common.parsing_results.ValidateKey"]], "__init__() (ase2sprkkr.common.parsing_results.validatekey method)": [[889, "ase2sprkkr.common.parsing_results.ValidateKey.__init__"]], "add() (ase2sprkkr.common.parsing_results.validatekey method)": [[889, "ase2sprkkr.common.parsing_results.ValidateKey.add"]], "values (class in ase2sprkkr.common.parsing_results)": [[890, "ase2sprkkr.common.parsing_results.Values"]], "__init__() (ase2sprkkr.common.parsing_results.values method)": [[890, "ase2sprkkr.common.parsing_results.Values.__init__"]], "to_dict() (ase2sprkkr.common.parsing_results.values method)": [[890, "ase2sprkkr.common.parsing_results.Values.to_dict"]], "dict_from_parsed() (in module ase2sprkkr.common.parsing_results)": [[891, "ase2sprkkr.common.parsing_results.dict_from_parsed"]], "ase2sprkkr.common.process_output_reader": [[892, "module-ase2sprkkr.common.process_output_reader"]], "asynciofilereader (class in ase2sprkkr.common.process_output_reader)": [[893, "ase2sprkkr.common.process_output_reader.AsyncioFileReader"]], "__init__() (ase2sprkkr.common.process_output_reader.asynciofilereader method)": [[893, "ase2sprkkr.common.process_output_reader.AsyncioFileReader.__init__"]], "close() (ase2sprkkr.common.process_output_reader.asynciofilereader method)": [[893, "ase2sprkkr.common.process_output_reader.AsyncioFileReader.close"]], "readline() (ase2sprkkr.common.process_output_reader.asynciofilereader method)": [[893, "ase2sprkkr.common.process_output_reader.AsyncioFileReader.readline"]], "readuntil() (ase2sprkkr.common.process_output_reader.asynciofilereader method)": [[893, "ase2sprkkr.common.process_output_reader.AsyncioFileReader.readuntil"]], "separator_shifts() (ase2sprkkr.common.process_output_reader.asynciofilereader static method)": [[893, "ase2sprkkr.common.process_output_reader.AsyncioFileReader.separator_shifts"]], "processoutputreader (class in ase2sprkkr.common.process_output_reader)": [[894, "ase2sprkkr.common.process_output_reader.ProcessOutputReader"]], "__init__() (ase2sprkkr.common.process_output_reader.processoutputreader method)": [[894, "ase2sprkkr.common.process_output_reader.ProcessOutputReader.__init__"]], "read_error() (ase2sprkkr.common.process_output_reader.processoutputreader method)": [[894, "ase2sprkkr.common.process_output_reader.ProcessOutputReader.read_error"]], "read_from_file() (ase2sprkkr.common.process_output_reader.processoutputreader method)": [[894, "ase2sprkkr.common.process_output_reader.ProcessOutputReader.read_from_file"]], "read_output() (ase2sprkkr.common.process_output_reader.processoutputreader method)": [[894, "ase2sprkkr.common.process_output_reader.ProcessOutputReader.read_output"]], "result() (ase2sprkkr.common.process_output_reader.processoutputreader method)": [[894, "ase2sprkkr.common.process_output_reader.ProcessOutputReader.result"]], "result_from_file() (ase2sprkkr.common.process_output_reader.processoutputreader method)": [[894, "ase2sprkkr.common.process_output_reader.ProcessOutputReader.result_from_file"]], "run() (ase2sprkkr.common.process_output_reader.processoutputreader method)": [[894, "ase2sprkkr.common.process_output_reader.ProcessOutputReader.run"]], "run_subprocess() (ase2sprkkr.common.process_output_reader.processoutputreader method)": [[894, "ase2sprkkr.common.process_output_reader.ProcessOutputReader.run_subprocess"]], "readline() (in module ase2sprkkr.common.process_output_reader)": [[895, "ase2sprkkr.common.process_output_reader.readline"]], "readline_until() (in module ase2sprkkr.common.process_output_reader)": [[896, "ase2sprkkr.common.process_output_reader.readline_until"]], "ase2sprkkr.common.repeated_configuration_containers": [[897, "module-ase2sprkkr.common.repeated_configuration_containers"]], "repeatedconfigurationcontainer (class in ase2sprkkr.common.repeated_configuration_containers)": [[898, "ase2sprkkr.common.repeated_configuration_containers.RepeatedConfigurationContainer"]], "__init__() (ase2sprkkr.common.repeated_configuration_containers.repeatedconfigurationcontainer method)": [[898, "ase2sprkkr.common.repeated_configuration_containers.RepeatedConfigurationContainer.__init__"]], "_save_to_file() (ase2sprkkr.common.repeated_configuration_containers.repeatedconfigurationcontainer method)": [[898, "ase2sprkkr.common.repeated_configuration_containers.RepeatedConfigurationContainer._save_to_file"]], "_validate() (ase2sprkkr.common.repeated_configuration_containers.repeatedconfigurationcontainer method)": [[898, "ase2sprkkr.common.repeated_configuration_containers.RepeatedConfigurationContainer._validate"]], "add() (ase2sprkkr.common.repeated_configuration_containers.repeatedconfigurationcontainer method)": [[898, "ase2sprkkr.common.repeated_configuration_containers.RepeatedConfigurationContainer.add"]], "as_dict() (ase2sprkkr.common.repeated_configuration_containers.repeatedconfigurationcontainer method)": [[898, "ase2sprkkr.common.repeated_configuration_containers.RepeatedConfigurationContainer.as_dict"]], "clear() (ase2sprkkr.common.repeated_configuration_containers.repeatedconfigurationcontainer method)": [[898, "ase2sprkkr.common.repeated_configuration_containers.RepeatedConfigurationContainer.clear"]], "get() (ase2sprkkr.common.repeated_configuration_containers.repeatedconfigurationcontainer method)": [[898, "ase2sprkkr.common.repeated_configuration_containers.RepeatedConfigurationContainer.get"]], "is_changed() (ase2sprkkr.common.repeated_configuration_containers.repeatedconfigurationcontainer method)": [[898, "ase2sprkkr.common.repeated_configuration_containers.RepeatedConfigurationContainer.is_changed"]], "items() (ase2sprkkr.common.repeated_configuration_containers.repeatedconfigurationcontainer method)": [[898, "ase2sprkkr.common.repeated_configuration_containers.RepeatedConfigurationContainer.items"]], "set() (ase2sprkkr.common.repeated_configuration_containers.repeatedconfigurationcontainer method)": [[898, "ase2sprkkr.common.repeated_configuration_containers.RepeatedConfigurationContainer.set"]], "values() (ase2sprkkr.common.repeated_configuration_containers.repeatedconfigurationcontainer method)": [[898, "ase2sprkkr.common.repeated_configuration_containers.RepeatedConfigurationContainer.values"]], "ase2sprkkr.common.section_adaptors": [[899, "module-ase2sprkkr.common.section_adaptors"]], "mergesectionadaptor (class in ase2sprkkr.common.section_adaptors)": [[900, "ase2sprkkr.common.section_adaptors.MergeSectionAdaptor"]], "__init__() (ase2sprkkr.common.section_adaptors.mergesectionadaptor method)": [[900, "ase2sprkkr.common.section_adaptors.MergeSectionAdaptor.__init__"]], "get() (ase2sprkkr.common.section_adaptors.mergesectionadaptor method)": [[900, "ase2sprkkr.common.section_adaptors.MergeSectionAdaptor.get"]], "is_dangerous() (ase2sprkkr.common.section_adaptors.mergesectionadaptor method)": [[900, "ase2sprkkr.common.section_adaptors.MergeSectionAdaptor.is_dangerous"]], "mergesectiondefinitionadaptor (class in ase2sprkkr.common.section_adaptors)": [[901, "ase2sprkkr.common.section_adaptors.MergeSectionDefinitionAdaptor"]], "__init__() (ase2sprkkr.common.section_adaptors.mergesectiondefinitionadaptor method)": [[901, "ase2sprkkr.common.section_adaptors.MergeSectionDefinitionAdaptor.__init__"]], "get() (ase2sprkkr.common.section_adaptors.mergesectiondefinitionadaptor method)": [[901, "ase2sprkkr.common.section_adaptors.MergeSectionDefinitionAdaptor.get"]], "is_dangerous() (ase2sprkkr.common.section_adaptors.mergesectiondefinitionadaptor method)": [[901, "ase2sprkkr.common.section_adaptors.MergeSectionDefinitionAdaptor.is_dangerous"]], "sectionadaptor (class in ase2sprkkr.common.section_adaptors)": [[902, "ase2sprkkr.common.section_adaptors.SectionAdaptor"]], "__init__() (ase2sprkkr.common.section_adaptors.sectionadaptor method)": [[902, "ase2sprkkr.common.section_adaptors.SectionAdaptor.__init__"]], "get() (ase2sprkkr.common.section_adaptors.sectionadaptor method)": [[902, "ase2sprkkr.common.section_adaptors.SectionAdaptor.get"]], "is_dangerous() (ase2sprkkr.common.section_adaptors.sectionadaptor method)": [[902, "ase2sprkkr.common.section_adaptors.SectionAdaptor.is_dangerous"]], "ase2sprkkr.common.subprocess": [[903, "module-ase2sprkkr.common.subprocess"]], "_call_function() (in module ase2sprkkr.common.subprocess)": [[904, "ase2sprkkr.common.subprocess._call_function"]], "ignore_signal() (in module ase2sprkkr.common.subprocess)": [[905, "ase2sprkkr.common.subprocess.ignore_signal"]], "in_subprocess() (in module ase2sprkkr.common.subprocess)": [[906, "ase2sprkkr.common.subprocess.in_subprocess"]], "ase2sprkkr.common.test": [[907, "module-ase2sprkkr.common.test"]], "ase2sprkkr.common.test.init_tests": [[908, "module-ase2sprkkr.common.test.init_tests"]], "testcase (class in ase2sprkkr.common.test.init_tests)": [[909, "ase2sprkkr.common.test.init_tests.TestCase"]], "__init__() (ase2sprkkr.common.test.init_tests.testcase method)": [[909, "ase2sprkkr.common.test.init_tests.TestCase.__init__"]], "_calc_args (ase2sprkkr.common.test.init_tests.testcase attribute)": [[909, "ase2sprkkr.common.test.init_tests.TestCase._calc_args"]], "_print_output (ase2sprkkr.common.test.init_tests.testcase attribute)": [[909, "ase2sprkkr.common.test.init_tests.TestCase._print_output"]], "almost_equal_precision() (ase2sprkkr.common.test.init_tests.testcase class method)": [[909, "ase2sprkkr.common.test.init_tests.TestCase.almost_equal_precision"]], "assertalmostequal() (ase2sprkkr.common.test.init_tests.testcase method)": [[909, "ase2sprkkr.common.test.init_tests.TestCase.assertAlmostEqual"]], "assertasyncequal() (ase2sprkkr.common.test.init_tests.testcase method)": [[909, "ase2sprkkr.common.test.init_tests.TestCase.assertAsyncEqual"]], "assertasyncraises() (ase2sprkkr.common.test.init_tests.testcase method)": [[909, "ase2sprkkr.common.test.init_tests.TestCase.assertAsyncRaises"]], "assertequal() (ase2sprkkr.common.test.init_tests.testcase method)": [[909, "ase2sprkkr.common.test.init_tests.TestCase.assertEqual"]], "assertfalse() (ase2sprkkr.common.test.init_tests.testcase method)": [[909, "ase2sprkkr.common.test.init_tests.TestCase.assertFalse"]], "assertisnone() (ase2sprkkr.common.test.init_tests.testcase method)": [[909, "ase2sprkkr.common.test.init_tests.TestCase.assertIsNone"]], "assertnotequal() (ase2sprkkr.common.test.init_tests.testcase method)": [[909, "ase2sprkkr.common.test.init_tests.TestCase.assertNotEqual"]], "assertraises() (ase2sprkkr.common.test.init_tests.testcase method)": [[909, "ase2sprkkr.common.test.init_tests.TestCase.assertRaises"]], "asserttrue() (ase2sprkkr.common.test.init_tests.testcase method)": [[909, "ase2sprkkr.common.test.init_tests.TestCase.assertTrue"]], "calc_args() (ase2sprkkr.common.test.init_tests.testcase class method)": [[909, "ase2sprkkr.common.test.init_tests.TestCase.calc_args"]], "runasync() (ase2sprkkr.common.test.init_tests.testcase static method)": [[909, "ase2sprkkr.common.test.init_tests.TestCase.runAsync"]], "run_sprkkr() (ase2sprkkr.common.test.init_tests.testcase method)": [[909, "ase2sprkkr.common.test.init_tests.TestCase.run_sprkkr"]], "temporary_dir() (ase2sprkkr.common.test.init_tests.testcase method)": [[909, "ase2sprkkr.common.test.init_tests.TestCase.temporary_dir"]], "arr_testfce() (in module ase2sprkkr.common.test.init_tests)": [[910, "ase2sprkkr.common.test.init_tests.arr_testfce"]], "assertdictequal() (in module ase2sprkkr.common.test.init_tests)": [[911, "ase2sprkkr.common.test.init_tests.assertDictEqual"]], "assertlistequal() (in module ase2sprkkr.common.test.init_tests)": [[912, "ase2sprkkr.common.test.init_tests.assertListEqual"]], "assert_almost_equals() (in module ase2sprkkr.common.test.init_tests)": [[913, "ase2sprkkr.common.test.init_tests.assert_almost_equals"]], "assert_equals() (in module ase2sprkkr.common.test.init_tests)": [[914, "ase2sprkkr.common.test.init_tests.assert_equals"]], "__init__() (ase2sprkkr.common.test.init_tests.extdict method)": [[915, "ase2sprkkr.common.test.init_tests.extdict.__init__"]], "extdict (class in ase2sprkkr.common.test.init_tests)": [[915, "ase2sprkkr.common.test.init_tests.extdict"]], "testfce() (in module ase2sprkkr.common.test.init_tests)": [[916, "ase2sprkkr.common.test.init_tests.testfce"]], "ase2sprkkr.common.test.test_common": [[917, "module-ase2sprkkr.common.test.test_common"]], "testcommon (class in ase2sprkkr.common.test.test_common)": [[918, "ase2sprkkr.common.test.test_common.TestCommon"]], "__init__() (ase2sprkkr.common.test.test_common.testcommon method)": [[918, "ase2sprkkr.common.test.test_common.TestCommon.__init__"]], "test_asyncio_file_reader() (ase2sprkkr.common.test.test_common.testcommon method)": [[918, "ase2sprkkr.common.test.test_common.TestCommon.test_asyncio_file_reader"]], "test_cached_property() (ase2sprkkr.common.test.test_common.testcommon method)": [[918, "ase2sprkkr.common.test.test_common.TestCommon.test_cached_property"]], "test_common() (ase2sprkkr.common.test.test_common.testcommon method)": [[918, "ase2sprkkr.common.test.test_common.TestCommon.test_common"]], "ase2sprkkr.common.test.test_grammar_types": [[919, "module-ase2sprkkr.common.test.test_grammar_types"]], "testgrammar (class in ase2sprkkr.common.test.test_grammar_types)": [[920, "ase2sprkkr.common.test.test_grammar_types.TestGrammar"]], "__init__() (ase2sprkkr.common.test.test_grammar_types.testgrammar method)": [[920, "ase2sprkkr.common.test.test_grammar_types.TestGrammar.__init__"]], "_test_types() (ase2sprkkr.common.test.test_grammar_types.testgrammar method)": [[920, "ase2sprkkr.common.test.test_grammar_types.TestGrammar._test_types"]], "test_is_the_same_value() (ase2sprkkr.common.test.test_grammar_types.testgrammar method)": [[920, "ase2sprkkr.common.test.test_grammar_types.TestGrammar.test_is_the_same_value"]], "test_types() (ase2sprkkr.common.test.test_grammar_types.testgrammar method)": [[920, "ase2sprkkr.common.test.test_grammar_types.TestGrammar.test_types"]], "ase2sprkkr.common.tools": [[921, "module-ase2sprkkr.common.tools"]], "append_id_to_filename() (in module ase2sprkkr.common.tools)": [[922, "ase2sprkkr.common.tools.append_id_to_filename"]], "main() (in module ase2sprkkr.common.tools)": [[923, "ase2sprkkr.common.tools.main"]], "parse_inches() (in module ase2sprkkr.common.tools)": [[924, "ase2sprkkr.common.tools.parse_inches"]], "parse_named_option() (in module ase2sprkkr.common.tools)": [[925, "ase2sprkkr.common.tools.parse_named_option"]], "parse_tuple_function() (in module ase2sprkkr.common.tools)": [[926, "ase2sprkkr.common.tools.parse_tuple_function"]], "ase2sprkkr.common.unique_values": [[927, "module-ase2sprkkr.common.unique_values"]], "uniquevaluesmapping (class in ase2sprkkr.common.unique_values)": [[928, "ase2sprkkr.common.unique_values.UniqueValuesMapping"]], "__init__() (ase2sprkkr.common.unique_values.uniquevaluesmapping method)": [[928, "ase2sprkkr.common.unique_values.UniqueValuesMapping.__init__"]], "_create_mapping() (ase2sprkkr.common.unique_values.uniquevaluesmapping static method)": [[928, "ase2sprkkr.common.unique_values.UniqueValuesMapping._create_mapping"]], "are_equivalent() (ase2sprkkr.common.unique_values.uniquevaluesmapping static method)": [[928, "ase2sprkkr.common.unique_values.UniqueValuesMapping.are_equivalent"]], "from_values() (ase2sprkkr.common.unique_values.uniquevaluesmapping static method)": [[928, "ase2sprkkr.common.unique_values.UniqueValuesMapping.from_values"]], "indexes() (ase2sprkkr.common.unique_values.uniquevaluesmapping method)": [[928, "ase2sprkkr.common.unique_values.UniqueValuesMapping.indexes"]], "is_equivalent_to() (ase2sprkkr.common.unique_values.uniquevaluesmapping method)": [[928, "ase2sprkkr.common.unique_values.UniqueValuesMapping.is_equivalent_to"]], "iter_unique() (ase2sprkkr.common.unique_values.uniquevaluesmapping method)": [[928, "ase2sprkkr.common.unique_values.UniqueValuesMapping.iter_unique"]], "len_of_unique() (ase2sprkkr.common.unique_values.uniquevaluesmapping method)": [[928, "ase2sprkkr.common.unique_values.UniqueValuesMapping.len_of_unique"]], "mapping (ase2sprkkr.common.unique_values.uniquevaluesmapping attribute)": [[928, "ase2sprkkr.common.unique_values.UniqueValuesMapping.mapping"]], "merge() (ase2sprkkr.common.unique_values.uniquevaluesmapping method)": [[928, "ase2sprkkr.common.unique_values.UniqueValuesMapping.merge"]], "normalize() (ase2sprkkr.common.unique_values.uniquevaluesmapping method)": [[928, "ase2sprkkr.common.unique_values.UniqueValuesMapping.normalize"]], "normalized() (ase2sprkkr.common.unique_values.uniquevaluesmapping method)": [[928, "ase2sprkkr.common.unique_values.UniqueValuesMapping.normalized"]], "unique_indexes() (ase2sprkkr.common.unique_values.uniquevaluesmapping method)": [[928, "ase2sprkkr.common.unique_values.UniqueValuesMapping.unique_indexes"]], "unique_items() (ase2sprkkr.common.unique_values.uniquevaluesmapping method)": [[928, "ase2sprkkr.common.unique_values.UniqueValuesMapping.unique_items"]], "value_to_class_id (ase2sprkkr.common.unique_values.uniquevaluesmapping attribute)": [[928, "ase2sprkkr.common.unique_values.UniqueValuesMapping.value_to_class_id"]], "ase2sprkkr.common.value_definitions": [[929, "module-ase2sprkkr.common.value_definitions"]], "inheritingvaluemodifier (class in ase2sprkkr.common.value_definitions)": [[930, "ase2sprkkr.common.value_definitions.InheritingValueModifier"]], "__init__() (ase2sprkkr.common.value_definitions.inheritingvaluemodifier method)": [[930, "ase2sprkkr.common.value_definitions.InheritingValueModifier.__init__"]], "_enriching_classes (ase2sprkkr.common.value_definitions.inheritingvaluemodifier attribute)": [[930, "ase2sprkkr.common.value_definitions.InheritingValueModifier._enriching_classes"]], "modify_definition() (ase2sprkkr.common.value_definitions.inheritingvaluemodifier method)": [[930, "ase2sprkkr.common.value_definitions.InheritingValueModifier.modify_definition"]], "valuedefinition (class in ase2sprkkr.common.value_definitions)": [[931, "ase2sprkkr.common.value_definitions.ValueDefinition"]], "__init__() (ase2sprkkr.common.value_definitions.valuedefinition method)": [[931, "ase2sprkkr.common.value_definitions.ValueDefinition.__init__"]], "_copy_excluded_args (ase2sprkkr.common.value_definitions.valuedefinition attribute)": [[931, "ase2sprkkr.common.value_definitions.ValueDefinition._copy_excluded_args"]], "_create_grammar() (ase2sprkkr.common.value_definitions.valuedefinition method)": [[931, "ase2sprkkr.common.value_definitions.ValueDefinition._create_grammar"]], "_generic_info() (ase2sprkkr.common.value_definitions.valuedefinition method)": [[931, "ase2sprkkr.common.value_definitions.ValueDefinition._generic_info"]], "_get_copy_args() (ase2sprkkr.common.value_definitions.valuedefinition method)": [[931, "ase2sprkkr.common.value_definitions.ValueDefinition._get_copy_args"]], "_grammar (ase2sprkkr.common.value_definitions.valuedefinition property)": [[931, "ase2sprkkr.common.value_definitions.ValueDefinition._grammar"]], "_grammar_of_value() (ase2sprkkr.common.value_definitions.valuedefinition method)": [[931, "ase2sprkkr.common.value_definitions.ValueDefinition._grammar_of_value"]], "_save_to_file() (ase2sprkkr.common.value_definitions.valuedefinition method)": [[931, "ase2sprkkr.common.value_definitions.ValueDefinition._save_to_file"]], "added_to_container() (ase2sprkkr.common.value_definitions.valuedefinition method)": [[931, "ase2sprkkr.common.value_definitions.ValueDefinition.added_to_container"]], "additional_data_description() (ase2sprkkr.common.value_definitions.valuedefinition method)": [[931, "ase2sprkkr.common.value_definitions.ValueDefinition.additional_data_description"]], "allow_duplication() (ase2sprkkr.common.value_definitions.valuedefinition method)": [[931, "ase2sprkkr.common.value_definitions.ValueDefinition.allow_duplication"]], "can_be_repeated (ase2sprkkr.common.value_definitions.valuedefinition property)": [[931, "ase2sprkkr.common.value_definitions.ValueDefinition.can_be_repeated"]], "check_array_access() (ase2sprkkr.common.value_definitions.valuedefinition method)": [[931, "ase2sprkkr.common.value_definitions.ValueDefinition.check_array_access"]], "configuration_type_name (ase2sprkkr.common.value_definitions.valuedefinition attribute)": [[931, "ase2sprkkr.common.value_definitions.ValueDefinition.configuration_type_name"]], "convert_and_validate() (ase2sprkkr.common.value_definitions.valuedefinition method)": [[931, "ase2sprkkr.common.value_definitions.ValueDefinition.convert_and_validate"]], "copy_value() (ase2sprkkr.common.value_definitions.valuedefinition method)": [[931, "ase2sprkkr.common.value_definitions.ValueDefinition.copy_value"]], "data_description() (ase2sprkkr.common.value_definitions.valuedefinition method)": [[931, "ase2sprkkr.common.value_definitions.ValueDefinition.data_description"]], "enrich() (ase2sprkkr.common.value_definitions.valuedefinition method)": [[931, "ase2sprkkr.common.value_definitions.ValueDefinition.enrich"]], "get_value() (ase2sprkkr.common.value_definitions.valuedefinition method)": [[931, "ase2sprkkr.common.value_definitions.ValueDefinition.get_value"]], "is_generated (ase2sprkkr.common.value_definitions.valuedefinition attribute)": [[931, "ase2sprkkr.common.value_definitions.ValueDefinition.is_generated"]], "is_independent_on_the_predecessor (ase2sprkkr.common.value_definitions.valuedefinition property)": [[931, "ase2sprkkr.common.value_definitions.ValueDefinition.is_independent_on_the_predecessor"]], "is_validated (ase2sprkkr.common.value_definitions.valuedefinition attribute)": [[931, "ase2sprkkr.common.value_definitions.ValueDefinition.is_validated"]], "item_type (ase2sprkkr.common.value_definitions.valuedefinition attribute)": [[931, "ase2sprkkr.common.value_definitions.ValueDefinition.item_type"]], "name_in_grammar (ase2sprkkr.common.value_definitions.valuedefinition attribute)": [[931, "ase2sprkkr.common.value_definitions.ValueDefinition.name_in_grammar"]], "remove() (ase2sprkkr.common.value_definitions.valuedefinition method)": [[931, "ase2sprkkr.common.value_definitions.ValueDefinition.remove"]], "result_class (ase2sprkkr.common.value_definitions.valuedefinition attribute)": [[931, "ase2sprkkr.common.value_definitions.ValueDefinition.result_class"]], "type_from_type_map (ase2sprkkr.common.value_definitions.valuedefinition attribute)": [[931, "ase2sprkkr.common.value_definitions.ValueDefinition.type_from_type_map"]], "validate() (ase2sprkkr.common.value_definitions.valuedefinition method)": [[931, "ase2sprkkr.common.value_definitions.ValueDefinition.validate"]], "validate_type() (ase2sprkkr.common.value_definitions.valuedefinition method)": [[931, "ase2sprkkr.common.value_definitions.ValueDefinition.validate_type"]], "value_name_format (ase2sprkkr.common.value_definitions.valuedefinition property)": [[931, "ase2sprkkr.common.value_definitions.ValueDefinition.value_name_format"]], "write() (ase2sprkkr.common.value_definitions.valuedefinition method)": [[931, "ase2sprkkr.common.value_definitions.ValueDefinition.write"]], "write_name() (ase2sprkkr.common.value_definitions.valuedefinition method)": [[931, "ase2sprkkr.common.value_definitions.ValueDefinition.write_name"]], "write_value() (ase2sprkkr.common.value_definitions.valuedefinition method)": [[931, "ase2sprkkr.common.value_definitions.ValueDefinition.write_value"]], "valuemodifier (class in ase2sprkkr.common.value_definitions)": [[932, "ase2sprkkr.common.value_definitions.ValueModifier"]], "__init__() (ase2sprkkr.common.value_definitions.valuemodifier method)": [[932, "ase2sprkkr.common.value_definitions.ValueModifier.__init__"]], "ase2sprkkr.common.warnings": [[933, "module-ase2sprkkr.common.warnings"]], "datavalidityerror": [[934, "ase2sprkkr.common.warnings.DataValidityError"]], "datavaliditywarning": [[935, "ase2sprkkr.common.warnings.DataValidityWarning"]], "ase2sprkkr.common.yaml": [[936, "module-ase2sprkkr.common.yaml"]], "indentdumper (class in ase2sprkkr.common.yaml)": [[937, "ase2sprkkr.common.yaml.IndentDumper"]], "__init__() (ase2sprkkr.common.yaml.indentdumper method)": [[937, "ase2sprkkr.common.yaml.IndentDumper.__init__"]], "increase_indent() (ase2sprkkr.common.yaml.indentdumper method)": [[937, "ase2sprkkr.common.yaml.IndentDumper.increase_indent"]], "ase2sprkkr.config": [[938, "module-ase2sprkkr.config"]], "configfiledefinition (class in ase2sprkkr.config)": [[939, "ase2sprkkr.config.ConfigFileDefinition"]], "__init__() (ase2sprkkr.config.configfiledefinition method)": [[939, "ase2sprkkr.config.ConfigFileDefinition.__init__"]], "result_class (ase2sprkkr.config.configfiledefinition attribute)": [[939, "ase2sprkkr.config.ConfigFileDefinition.result_class"]], "configuration (class in ase2sprkkr.config)": [[940, "ase2sprkkr.config.Configuration"]], "__init__() (ase2sprkkr.config.configuration method)": [[940, "ase2sprkkr.config.Configuration.__init__"]], "set_permanent() (ase2sprkkr.config.configuration method)": [[940, "ase2sprkkr.config.Configuration.set_permanent"]], "section (class in ase2sprkkr.config)": [[941, "ase2sprkkr.config.Section"]], "__init__() (ase2sprkkr.config.section method)": [[941, "ase2sprkkr.config.Section.__init__"]], "info_in_data_description (ase2sprkkr.config.section attribute)": [[941, "ase2sprkkr.config.Section.info_in_data_description"]], "_get_suffix() (in module ase2sprkkr.config)": [[942, "ase2sprkkr.config._get_suffix"]], "find_default_mpi_runner() (in module ase2sprkkr.config)": [[943, "ase2sprkkr.config.find_default_mpi_runner"]], "get_default_mpi_runner() (in module ase2sprkkr.config)": [[944, "ase2sprkkr.config.get_default_mpi_runner"]], "load_user_preferences() (in module ase2sprkkr.config)": [[945, "ase2sprkkr.config.load_user_preferences"]], "mpi_runner() (in module ase2sprkkr.config)": [[946, "ase2sprkkr.config.mpi_runner"]], "user_preferences_file() (in module ase2sprkkr.config)": [[947, "ase2sprkkr.config.user_preferences_file"]], "ase2sprkkr.examples": [[948, "module-ase2sprkkr.examples"]], "ase2sprkkr.examples.a1_fe_scf_simple": [[949, "module-ase2sprkkr.examples.A1_Fe_scf_simple"]], "ase2sprkkr.examples.a1_fe_scf_simple.fe": [[950, "module-ase2sprkkr.examples.A1_Fe_scf_simple.Fe"]], "main() (in module ase2sprkkr.examples.a1_fe_scf_simple.fe)": [[951, "ase2sprkkr.examples.A1_Fe_scf_simple.Fe.main"]], "ase2sprkkr.examples.a2_fe_scf_input_modifications": [[952, "module-ase2sprkkr.examples.A2_Fe_scf_input_modifications"]], "ase2sprkkr.examples.a2_fe_scf_input_modifications.fe": [[953, "module-ase2sprkkr.examples.A2_Fe_scf_input_modifications.Fe"]], "main() (in module ase2sprkkr.examples.a2_fe_scf_input_modifications.fe)": [[954, "ase2sprkkr.examples.A2_Fe_scf_input_modifications.Fe.main"]], "ase2sprkkr.examples.a3_fe_dos": [[955, "module-ase2sprkkr.examples.A3_Fe_dos"]], "ase2sprkkr.examples.a3_fe_dos.fe": [[956, "module-ase2sprkkr.examples.A3_Fe_dos.Fe"]], "main() (in module ase2sprkkr.examples.a3_fe_dos.fe)": [[957, "ase2sprkkr.examples.A3_Fe_dos.Fe.main"]], "ase2sprkkr.examples.a4_cpa_example": [[958, "module-ase2sprkkr.examples.A4_CPA_Example"]], "ase2sprkkr.examples.a4_cpa_example.ni_doped_sto": [[959, "module-ase2sprkkr.examples.A4_CPA_Example.Ni_doped_STO"]], "main() (in module ase2sprkkr.examples.a4_cpa_example.ni_doped_sto)": [[960, "ase2sprkkr.examples.A4_CPA_Example.Ni_doped_STO.main"]], "ase2sprkkr.examples.a5_al_eos": [[961, "module-ase2sprkkr.examples.A5_Al_EOS"]], "ase2sprkkr.examples.a5_al_eos.al": [[962, "module-ase2sprkkr.examples.A5_Al_EOS.Al"]], "main() (in module ase2sprkkr.examples.a5_al_eos.al)": [[963, "ase2sprkkr.examples.A5_Al_EOS.Al.main"]], "ase2sprkkr.examples.a6_cu_msspec": [[964, "module-ase2sprkkr.examples.A6_Cu_MSSPEC"]], "ase2sprkkr.examples.a6_cu_msspec.cu": [[965, "module-ase2sprkkr.examples.A6_Cu_MSSPEC.Cu"]], "main() (in module ase2sprkkr.examples.a6_cu_msspec.cu)": [[966, "ase2sprkkr.examples.A6_Cu_MSSPEC.Cu.main"]], "ase2sprkkr.examples.a7_srtio3_msspec": [[967, "module-ase2sprkkr.examples.A7_SrTiO3_MSSPEC"]], "ase2sprkkr.examples.a7_srtio3_msspec.sto": [[968, "module-ase2sprkkr.examples.A7_SrTiO3_MSSPEC.STO"]], "main() (in module ase2sprkkr.examples.a7_srtio3_msspec.sto)": [[969, "ase2sprkkr.examples.A7_SrTiO3_MSSPEC.STO.main"]], "ase2sprkkr.examples.a8_arpes_and_plotting": [[970, "module-ase2sprkkr.examples.A8_ARPES_and_plotting"]], "ase2sprkkr.examples.a8_arpes_and_plotting.arpes": [[971, "module-ase2sprkkr.examples.A8_ARPES_and_plotting.arpes"]], "main() (in module ase2sprkkr.examples.a8_arpes_and_plotting.arpes)": [[972, "ase2sprkkr.examples.A8_ARPES_and_plotting.arpes.main"]], "ase2sprkkr.input_parameters": [[973, "module-ase2sprkkr.input_parameters"]], "ase2sprkkr.input_parameters.definitions": [[974, "module-ase2sprkkr.input_parameters.definitions"]], "ase2sprkkr.input_parameters.definitions.arpes": [[975, "module-ase2sprkkr.input_parameters.definitions.arpes"]], "input_parameters() (in module ase2sprkkr.input_parameters.definitions.arpes)": [[976, "ase2sprkkr.input_parameters.definitions.arpes.input_parameters"]], "ase2sprkkr.input_parameters.definitions.bsfek": [[977, "module-ase2sprkkr.input_parameters.definitions.bsfek"]], "input_parameters() (in module ase2sprkkr.input_parameters.definitions.bsfek)": [[978, "ase2sprkkr.input_parameters.definitions.bsfek.input_parameters"]], "ase2sprkkr.input_parameters.definitions.bsfkk": [[979, "module-ase2sprkkr.input_parameters.definitions.bsfkk"]], "input_parameters() (in module ase2sprkkr.input_parameters.definitions.bsfkk)": [[980, "ase2sprkkr.input_parameters.definitions.bsfkk.input_parameters"]], "ase2sprkkr.input_parameters.definitions.dos": [[981, "module-ase2sprkkr.input_parameters.definitions.dos"]], "input_parameters() (in module ase2sprkkr.input_parameters.definitions.dos)": [[982, "ase2sprkkr.input_parameters.definitions.dos.input_parameters"]], "ase2sprkkr.input_parameters.definitions.gilbert": [[983, "module-ase2sprkkr.input_parameters.definitions.gilbert"]], "input_parameters() (in module ase2sprkkr.input_parameters.definitions.gilbert)": [[984, "ase2sprkkr.input_parameters.definitions.gilbert.input_parameters"]], "ase2sprkkr.input_parameters.definitions.jxc": [[985, "module-ase2sprkkr.input_parameters.definitions.jxc"]], "input_parameters() (in module ase2sprkkr.input_parameters.definitions.jxc)": [[986, "ase2sprkkr.input_parameters.definitions.jxc.input_parameters"]], "ase2sprkkr.input_parameters.definitions.marpes": [[987, "module-ase2sprkkr.input_parameters.definitions.marpes"]], "input_parameters() (in module ase2sprkkr.input_parameters.definitions.marpes)": [[988, "ase2sprkkr.input_parameters.definitions.marpes.input_parameters"]], "ase2sprkkr.input_parameters.definitions.phagen": [[989, "module-ase2sprkkr.input_parameters.definitions.phagen"]], "input_parameters() (in module ase2sprkkr.input_parameters.definitions.phagen)": [[990, "ase2sprkkr.input_parameters.definitions.phagen.input_parameters"]], "ase2sprkkr.input_parameters.definitions.scf": [[991, "module-ase2sprkkr.input_parameters.definitions.scf"]], "input_parameters() (in module ase2sprkkr.input_parameters.definitions.scf)": [[992, "ase2sprkkr.input_parameters.definitions.scf.input_parameters"]], "ase2sprkkr.input_parameters.definitions.sections": [[993, "module-ase2sprkkr.input_parameters.definitions.sections"]], "control() (in module ase2sprkkr.input_parameters.definitions.sections)": [[994, "ase2sprkkr.input_parameters.definitions.sections.CONTROL"]], "cpa (in module ase2sprkkr.input_parameters.definitions.sections)": [[995, "ase2sprkkr.input_parameters.definitions.sections.CPA"]], "energy (in module ase2sprkkr.input_parameters.definitions.sections)": [[996, "ase2sprkkr.input_parameters.definitions.sections.ENERGY"]], "mode (in module ase2sprkkr.input_parameters.definitions.sections)": [[997, "ase2sprkkr.input_parameters.definitions.sections.MODE"]], "scf (in module ase2sprkkr.input_parameters.definitions.sections)": [[998, "ase2sprkkr.input_parameters.definitions.sections.SCF"]], "sites (in module ase2sprkkr.input_parameters.definitions.sections)": [[999, "ase2sprkkr.input_parameters.definitions.sections.SITES"]], "strconst (in module ase2sprkkr.input_parameters.definitions.sections)": [[1000, "ase2sprkkr.input_parameters.definitions.sections.STRCONST"]], "task() (in module ase2sprkkr.input_parameters.definitions.sections)": [[1001, "ase2sprkkr.input_parameters.definitions.sections.TASK"]], "tau (in module ase2sprkkr.input_parameters.definitions.sections)": [[1002, "ase2sprkkr.input_parameters.definitions.sections.TAU"]], "tausection (class in ase2sprkkr.input_parameters.definitions.sections)": [[1003, "ase2sprkkr.input_parameters.definitions.sections.TauSection"]], "__init__() (ase2sprkkr.input_parameters.definitions.sections.tausection method)": [[1003, "ase2sprkkr.input_parameters.definitions.sections.TauSection.__init__"]], "_copy_args (ase2sprkkr.input_parameters.definitions.sections.tausection attribute)": [[1003, "ase2sprkkr.input_parameters.definitions.sections.TauSection._copy_args"]], "set_from_atoms() (ase2sprkkr.input_parameters.definitions.sections.tausection method)": [[1003, "ase2sprkkr.input_parameters.definitions.sections.TauSection.set_from_atoms"]], "_nktab_value() (in module ase2sprkkr.input_parameters.definitions.sections)": [[1004, "ase2sprkkr.input_parameters.definitions.sections._nktab_value"]], "xc() (in module ase2sprkkr.input_parameters.definitions.sections)": [[1005, "ase2sprkkr.input_parameters.definitions.sections.xc"]], "ase2sprkkr.input_parameters.input_parameters": [[1006, "module-ase2sprkkr.input_parameters.input_parameters"]], "inputparameters (class in ase2sprkkr.input_parameters.input_parameters)": [[1007, "ase2sprkkr.input_parameters.input_parameters.InputParameters"]], "__init__() (ase2sprkkr.input_parameters.input_parameters.inputparameters method)": [[1007, "ase2sprkkr.input_parameters.input_parameters.InputParameters.__init__"]], "_definitions (ase2sprkkr.input_parameters.input_parameters.inputparameters attribute)": [[1007, "ase2sprkkr.input_parameters.input_parameters.InputParameters._definitions"]], "calculate() (ase2sprkkr.input_parameters.input_parameters.inputparameters method)": [[1007, "ase2sprkkr.input_parameters.input_parameters.InputParameters.calculate"]], "change_task() (ase2sprkkr.input_parameters.input_parameters.inputparameters method)": [[1007, "ase2sprkkr.input_parameters.input_parameters.InputParameters.change_task"]], "create() (ase2sprkkr.input_parameters.input_parameters.inputparameters class method)": [[1007, "ase2sprkkr.input_parameters.input_parameters.InputParameters.create"]], "create_input_parameters() (ase2sprkkr.input_parameters.input_parameters.inputparameters class method)": [[1007, "ase2sprkkr.input_parameters.input_parameters.InputParameters.create_input_parameters"]], "default_parameters() (ase2sprkkr.input_parameters.input_parameters.inputparameters class method)": [[1007, "ase2sprkkr.input_parameters.input_parameters.InputParameters.default_parameters"]], "definition() (ase2sprkkr.input_parameters.input_parameters.inputparameters class method)": [[1007, "ase2sprkkr.input_parameters.input_parameters.InputParameters.definition"]], "definition_modules (ase2sprkkr.input_parameters.input_parameters.inputparameters attribute)": [[1007, "ase2sprkkr.input_parameters.input_parameters.InputParameters.definition_modules"]], "definitions (ase2sprkkr.input_parameters.input_parameters.inputparameters attribute)": [[1007, "ase2sprkkr.input_parameters.input_parameters.InputParameters.definitions"]], "executable_params() (ase2sprkkr.input_parameters.input_parameters.inputparameters method)": [[1007, "ase2sprkkr.input_parameters.input_parameters.InputParameters.executable_params"]], "from_file() (ase2sprkkr.input_parameters.input_parameters.inputparameters class method)": [[1007, "ase2sprkkr.input_parameters.input_parameters.InputParameters.from_file"]], "is_it_an_input_parameters_name() (ase2sprkkr.input_parameters.input_parameters.inputparameters class method)": [[1007, "ase2sprkkr.input_parameters.input_parameters.InputParameters.is_it_an_input_parameters_name"]], "is_mpi() (ase2sprkkr.input_parameters.input_parameters.inputparameters method)": [[1007, "ase2sprkkr.input_parameters.input_parameters.InputParameters.is_mpi"]], "potential (ase2sprkkr.input_parameters.input_parameters.inputparameters property)": [[1007, "ase2sprkkr.input_parameters.input_parameters.InputParameters.potential"]], "read_output_from_file() (ase2sprkkr.input_parameters.input_parameters.inputparameters method)": [[1007, "ase2sprkkr.input_parameters.input_parameters.InputParameters.read_output_from_file"]], "resolve_executable_suffix() (ase2sprkkr.input_parameters.input_parameters.inputparameters method)": [[1007, "ase2sprkkr.input_parameters.input_parameters.InputParameters.resolve_executable_suffix"]], "result_reader() (ase2sprkkr.input_parameters.input_parameters.inputparameters method)": [[1007, "ase2sprkkr.input_parameters.input_parameters.InputParameters.result_reader"]], "run_process() (ase2sprkkr.input_parameters.input_parameters.inputparameters method)": [[1007, "ase2sprkkr.input_parameters.input_parameters.InputParameters.run_process"]], "save_to_file() (ase2sprkkr.input_parameters.input_parameters.inputparameters method)": [[1007, "ase2sprkkr.input_parameters.input_parameters.InputParameters.save_to_file"]], "set_option() (ase2sprkkr.input_parameters.input_parameters.inputparameters method)": [[1007, "ase2sprkkr.input_parameters.input_parameters.InputParameters.set_option"]], "task_name (ase2sprkkr.input_parameters.input_parameters.inputparameters property)": [[1007, "ase2sprkkr.input_parameters.input_parameters.InputParameters.task_name"]], "inputsection (class in ase2sprkkr.input_parameters.input_parameters)": [[1008, "ase2sprkkr.input_parameters.input_parameters.InputSection"]], "__init__() (ase2sprkkr.input_parameters.input_parameters.inputsection method)": [[1008, "ase2sprkkr.input_parameters.input_parameters.InputSection.__init__"]], "ase2sprkkr.input_parameters.input_parameters_definitions": [[1009, "module-ase2sprkkr.input_parameters.input_parameters_definitions"]], "inputparametersdefinition (class in ase2sprkkr.input_parameters.input_parameters_definitions)": [[1010, "ase2sprkkr.input_parameters.input_parameters_definitions.InputParametersDefinition"]], "__init__() (ase2sprkkr.input_parameters.input_parameters_definitions.inputparametersdefinition method)": [[1010, "ase2sprkkr.input_parameters.input_parameters_definitions.InputParametersDefinition.__init__"]], "_copy_args (ase2sprkkr.input_parameters.input_parameters_definitions.inputparametersdefinition attribute)": [[1010, "ase2sprkkr.input_parameters.input_parameters_definitions.InputParametersDefinition._copy_args"]], "_generic_info() (ase2sprkkr.input_parameters.input_parameters_definitions.inputparametersdefinition method)": [[1010, "ase2sprkkr.input_parameters.input_parameters_definitions.InputParametersDefinition._generic_info"]], "child_class (ase2sprkkr.input_parameters.input_parameters_definitions.inputparametersdefinition attribute)": [[1010, "ase2sprkkr.input_parameters.input_parameters_definitions.InputParametersDefinition.child_class"]], "configuration_type_name (ase2sprkkr.input_parameters.input_parameters_definitions.inputparametersdefinition attribute)": [[1010, "ase2sprkkr.input_parameters.input_parameters_definitions.InputParametersDefinition.configuration_type_name"]], "custom_class() (ase2sprkkr.input_parameters.input_parameters_definitions.inputparametersdefinition static method)": [[1010, "ase2sprkkr.input_parameters.input_parameters_definitions.InputParametersDefinition.custom_class"]], "custom_value_grammar() (ase2sprkkr.input_parameters.input_parameters_definitions.inputparametersdefinition class method)": [[1010, "ase2sprkkr.input_parameters.input_parameters_definitions.InputParametersDefinition.custom_value_grammar"]], "delimiter (ase2sprkkr.input_parameters.input_parameters_definitions.inputparametersdefinition attribute)": [[1010, "ase2sprkkr.input_parameters.input_parameters_definitions.InputParametersDefinition.delimiter"]], "grammar_of_delimiter (ase2sprkkr.input_parameters.input_parameters_definitions.inputparametersdefinition attribute)": [[1010, "ase2sprkkr.input_parameters.input_parameters_definitions.InputParametersDefinition.grammar_of_delimiter"]], "result_class (ase2sprkkr.input_parameters.input_parameters_definitions.inputparametersdefinition attribute)": [[1010, "ase2sprkkr.input_parameters.input_parameters_definitions.InputParametersDefinition.result_class"]], "save_hook (ase2sprkkr.input_parameters.input_parameters_definitions.inputparametersdefinition attribute)": [[1010, "ase2sprkkr.input_parameters.input_parameters_definitions.InputParametersDefinition.save_hook"]], "inputsectiondefinition (class in ase2sprkkr.input_parameters.input_parameters_definitions)": [[1011, "ase2sprkkr.input_parameters.input_parameters_definitions.InputSectionDefinition"]], "__init__() (ase2sprkkr.input_parameters.input_parameters_definitions.inputsectiondefinition method)": [[1011, "ase2sprkkr.input_parameters.input_parameters_definitions.InputSectionDefinition.__init__"]], "_copy_args (ase2sprkkr.input_parameters.input_parameters_definitions.inputsectiondefinition attribute)": [[1011, "ase2sprkkr.input_parameters.input_parameters_definitions.InputSectionDefinition._copy_args"]], "child_class (ase2sprkkr.input_parameters.input_parameters_definitions.inputsectiondefinition attribute)": [[1011, "ase2sprkkr.input_parameters.input_parameters_definitions.InputSectionDefinition.child_class"]], "custom_class() (ase2sprkkr.input_parameters.input_parameters_definitions.inputsectiondefinition static method)": [[1011, "ase2sprkkr.input_parameters.input_parameters_definitions.InputSectionDefinition.custom_class"]], "delimiter (ase2sprkkr.input_parameters.input_parameters_definitions.inputsectiondefinition attribute)": [[1011, "ase2sprkkr.input_parameters.input_parameters_definitions.InputSectionDefinition.delimiter"]], "do_not_skip_whitespaces_before_name (ase2sprkkr.input_parameters.input_parameters_definitions.inputsectiondefinition attribute)": [[1011, "ase2sprkkr.input_parameters.input_parameters_definitions.InputSectionDefinition.do_not_skip_whitespaces_before_name"]], "grammar_of_delimiter (ase2sprkkr.input_parameters.input_parameters_definitions.inputsectiondefinition attribute)": [[1011, "ase2sprkkr.input_parameters.input_parameters_definitions.InputSectionDefinition.grammar_of_delimiter"]], "result_class (ase2sprkkr.input_parameters.input_parameters_definitions.inputsectiondefinition attribute)": [[1011, "ase2sprkkr.input_parameters.input_parameters_definitions.InputSectionDefinition.result_class"]], "inputvaluedefinition (class in ase2sprkkr.input_parameters.input_parameters_definitions)": [[1012, "ase2sprkkr.input_parameters.input_parameters_definitions.InputValueDefinition"]], "__init__() (ase2sprkkr.input_parameters.input_parameters_definitions.inputvaluedefinition method)": [[1012, "ase2sprkkr.input_parameters.input_parameters_definitions.InputValueDefinition.__init__"]], "_copy_args (ase2sprkkr.input_parameters.input_parameters_definitions.inputvaluedefinition attribute)": [[1012, "ase2sprkkr.input_parameters.input_parameters_definitions.InputValueDefinition._copy_args"]], "grammar_of_delimiter (ase2sprkkr.input_parameters.input_parameters_definitions.inputvaluedefinition attribute)": [[1012, "ase2sprkkr.input_parameters.input_parameters_definitions.InputValueDefinition.grammar_of_delimiter"]], "name_value_delimiter (ase2sprkkr.input_parameters.input_parameters_definitions.inputvaluedefinition attribute)": [[1012, "ase2sprkkr.input_parameters.input_parameters_definitions.InputValueDefinition.name_value_delimiter"]], "prefix (ase2sprkkr.input_parameters.input_parameters_definitions.inputvaluedefinition attribute)": [[1012, "ase2sprkkr.input_parameters.input_parameters_definitions.InputValueDefinition.prefix"]], "type_from_type_map (ase2sprkkr.input_parameters.input_parameters_definitions.inputvaluedefinition attribute)": [[1012, "ase2sprkkr.input_parameters.input_parameters_definitions.InputValueDefinition.type_from_type_map"]], "type_of_dangerous (ase2sprkkr.input_parameters.input_parameters_definitions.inputvaluedefinition attribute)": [[1012, "ase2sprkkr.input_parameters.input_parameters_definitions.InputValueDefinition.type_of_dangerous"]], "ase2sprkkr.input_parameters.test": [[1013, "module-ase2sprkkr.input_parameters.test"]], "ase2sprkkr.input_parameters.test.init_tests": [[1014, "module-ase2sprkkr.input_parameters.test.init_tests"]], "testcase (class in ase2sprkkr.input_parameters.test.init_tests)": [[1015, "ase2sprkkr.input_parameters.test.init_tests.TestCase"]], "__init__() (ase2sprkkr.input_parameters.test.init_tests.testcase method)": [[1015, "ase2sprkkr.input_parameters.test.init_tests.TestCase.__init__"]], "_calc_args (ase2sprkkr.input_parameters.test.init_tests.testcase attribute)": [[1015, "ase2sprkkr.input_parameters.test.init_tests.TestCase._calc_args"]], "_print_output (ase2sprkkr.input_parameters.test.init_tests.testcase attribute)": [[1015, "ase2sprkkr.input_parameters.test.init_tests.TestCase._print_output"]], "almost_equal_precision() (ase2sprkkr.input_parameters.test.init_tests.testcase class method)": [[1015, "ase2sprkkr.input_parameters.test.init_tests.TestCase.almost_equal_precision"]], "assertalmostequal() (ase2sprkkr.input_parameters.test.init_tests.testcase method)": [[1015, "ase2sprkkr.input_parameters.test.init_tests.TestCase.assertAlmostEqual"]], "assertasyncequal() (ase2sprkkr.input_parameters.test.init_tests.testcase method)": [[1015, "ase2sprkkr.input_parameters.test.init_tests.TestCase.assertAsyncEqual"]], "assertasyncraises() (ase2sprkkr.input_parameters.test.init_tests.testcase method)": [[1015, "ase2sprkkr.input_parameters.test.init_tests.TestCase.assertAsyncRaises"]], "assertequal() (ase2sprkkr.input_parameters.test.init_tests.testcase method)": [[1015, "ase2sprkkr.input_parameters.test.init_tests.TestCase.assertEqual"]], "assertfalse() (ase2sprkkr.input_parameters.test.init_tests.testcase method)": [[1015, "ase2sprkkr.input_parameters.test.init_tests.TestCase.assertFalse"]], "assertisnone() (ase2sprkkr.input_parameters.test.init_tests.testcase method)": [[1015, "ase2sprkkr.input_parameters.test.init_tests.TestCase.assertIsNone"]], "assertnotequal() (ase2sprkkr.input_parameters.test.init_tests.testcase method)": [[1015, "ase2sprkkr.input_parameters.test.init_tests.TestCase.assertNotEqual"]], "assertraises() (ase2sprkkr.input_parameters.test.init_tests.testcase method)": [[1015, "ase2sprkkr.input_parameters.test.init_tests.TestCase.assertRaises"]], "asserttrue() (ase2sprkkr.input_parameters.test.init_tests.testcase method)": [[1015, "ase2sprkkr.input_parameters.test.init_tests.TestCase.assertTrue"]], "calc_args() (ase2sprkkr.input_parameters.test.init_tests.testcase class method)": [[1015, "ase2sprkkr.input_parameters.test.init_tests.TestCase.calc_args"]], "runasync() (ase2sprkkr.input_parameters.test.init_tests.testcase static method)": [[1015, "ase2sprkkr.input_parameters.test.init_tests.TestCase.runAsync"]], "run_sprkkr() (ase2sprkkr.input_parameters.test.init_tests.testcase method)": [[1015, "ase2sprkkr.input_parameters.test.init_tests.TestCase.run_sprkkr"]], "temporary_dir() (ase2sprkkr.input_parameters.test.init_tests.testcase method)": [[1015, "ase2sprkkr.input_parameters.test.init_tests.TestCase.temporary_dir"]], "arr_testfce() (in module ase2sprkkr.input_parameters.test.init_tests)": [[1016, "ase2sprkkr.input_parameters.test.init_tests.arr_testfce"]], "assertdictequal() (in module ase2sprkkr.input_parameters.test.init_tests)": [[1017, "ase2sprkkr.input_parameters.test.init_tests.assertDictEqual"]], "assertlistequal() (in module ase2sprkkr.input_parameters.test.init_tests)": [[1018, "ase2sprkkr.input_parameters.test.init_tests.assertListEqual"]], "assert_almost_equals() (in module ase2sprkkr.input_parameters.test.init_tests)": [[1019, "ase2sprkkr.input_parameters.test.init_tests.assert_almost_equals"]], "assert_equals() (in module ase2sprkkr.input_parameters.test.init_tests)": [[1020, "ase2sprkkr.input_parameters.test.init_tests.assert_equals"]], "__init__() (ase2sprkkr.input_parameters.test.init_tests.extdict method)": [[1021, "ase2sprkkr.input_parameters.test.init_tests.extdict.__init__"]], "extdict (class in ase2sprkkr.input_parameters.test.init_tests)": [[1021, "ase2sprkkr.input_parameters.test.init_tests.extdict"]], "testfce() (in module ase2sprkkr.input_parameters.test.init_tests)": [[1022, "ase2sprkkr.input_parameters.test.init_tests.testfce"]], "ase2sprkkr.input_parameters.test.test_definitions": [[1023, "module-ase2sprkkr.input_parameters.test.test_definitions"]], "testdefinitions (class in ase2sprkkr.input_parameters.test.test_definitions)": [[1024, "ase2sprkkr.input_parameters.test.test_definitions.TestDefinitions"]], "__init__() (ase2sprkkr.input_parameters.test.test_definitions.testdefinitions method)": [[1024, "ase2sprkkr.input_parameters.test.test_definitions.TestDefinitions.__init__"]], "change_task() (ase2sprkkr.input_parameters.test.test_definitions.testdefinitions method)": [[1024, "ase2sprkkr.input_parameters.test.test_definitions.TestDefinitions.change_task"]], "jxc() (ase2sprkkr.input_parameters.test.test_definitions.testdefinitions method)": [[1024, "ase2sprkkr.input_parameters.test.test_definitions.TestDefinitions.jxc"]], "test_defaults() (ase2sprkkr.input_parameters.test.test_definitions.testdefinitions method)": [[1024, "ase2sprkkr.input_parameters.test.test_definitions.TestDefinitions.test_defaults"]], "test_definitions() (ase2sprkkr.input_parameters.test.test_definitions.testdefinitions method)": [[1024, "ase2sprkkr.input_parameters.test.test_definitions.TestDefinitions.test_definitions"]], "ase2sprkkr.input_parameters.test.test_input_parameters": [[1025, "module-ase2sprkkr.input_parameters.test.test_input_parameters"]], "testinputparameters (class in ase2sprkkr.input_parameters.test.test_input_parameters)": [[1026, "ase2sprkkr.input_parameters.test.test_input_parameters.TestInputParameters"]], "__init__() (ase2sprkkr.input_parameters.test.test_input_parameters.testinputparameters method)": [[1026, "ase2sprkkr.input_parameters.test.test_input_parameters.TestInputParameters.__init__"]], "assertnotvalid() (ase2sprkkr.input_parameters.test.test_input_parameters.testinputparameters method)": [[1026, "ase2sprkkr.input_parameters.test.test_input_parameters.TestInputParameters.assertNotValid"]], "assertparse() (ase2sprkkr.input_parameters.test.test_input_parameters.testinputparameters method)": [[1026, "ase2sprkkr.input_parameters.test.test_input_parameters.TestInputParameters.assertParse"]], "parse() (ase2sprkkr.input_parameters.test.test_input_parameters.testinputparameters method)": [[1026, "ase2sprkkr.input_parameters.test.test_input_parameters.TestInputParameters.parse"]], "test_copy() (ase2sprkkr.input_parameters.test.test_input_parameters.testinputparameters method)": [[1026, "ase2sprkkr.input_parameters.test.test_input_parameters.TestInputParameters.test_copy"]], "test_custom_value() (ase2sprkkr.input_parameters.test.test_input_parameters.testinputparameters method)": [[1026, "ase2sprkkr.input_parameters.test.test_input_parameters.TestInputParameters.test_custom_value"]], "test_dangerous_value() (ase2sprkkr.input_parameters.test.test_input_parameters.testinputparameters method)": [[1026, "ase2sprkkr.input_parameters.test.test_input_parameters.TestInputParameters.test_dangerous_value"]], "test_gather() (ase2sprkkr.input_parameters.test.test_input_parameters.testinputparameters method)": [[1026, "ase2sprkkr.input_parameters.test.test_input_parameters.TestInputParameters.test_gather"]], "test_input_parameters_definition() (ase2sprkkr.input_parameters.test.test_input_parameters.testinputparameters method)": [[1026, "ase2sprkkr.input_parameters.test.test_input_parameters.TestInputParameters.test_input_parameters_definition"]], "test_length() (ase2sprkkr.input_parameters.test.test_input_parameters.testinputparameters method)": [[1026, "ase2sprkkr.input_parameters.test.test_input_parameters.TestInputParameters.test_length"]], "test_numpy_array() (ase2sprkkr.input_parameters.test.test_input_parameters.testinputparameters method)": [[1026, "ase2sprkkr.input_parameters.test.test_input_parameters.TestInputParameters.test_numpy_array"]], "test_repeated_value() (ase2sprkkr.input_parameters.test.test_input_parameters.testinputparameters method)": [[1026, "ase2sprkkr.input_parameters.test.test_input_parameters.TestInputParameters.test_repeated_value"]], "test_section_delimiter_value() (ase2sprkkr.input_parameters.test.test_input_parameters.testinputparameters method)": [[1026, "ase2sprkkr.input_parameters.test.test_input_parameters.TestInputParameters.test_section_delimiter_value"]], "test_set_values() (ase2sprkkr.input_parameters.test.test_input_parameters.testinputparameters method)": [[1026, "ase2sprkkr.input_parameters.test.test_input_parameters.TestInputParameters.test_set_values"]], "test_sparse_numbered() (ase2sprkkr.input_parameters.test.test_input_parameters.testinputparameters method)": [[1026, "ase2sprkkr.input_parameters.test.test_input_parameters.TestInputParameters.test_sparse_numbered"]], "test_switch() (ase2sprkkr.input_parameters.test.test_input_parameters.testinputparameters method)": [[1026, "ase2sprkkr.input_parameters.test.test_input_parameters.TestInputParameters.test_switch"]], "test_write_condition() (ase2sprkkr.input_parameters.test.test_input_parameters.testinputparameters method)": [[1026, "ase2sprkkr.input_parameters.test.test_input_parameters.TestInputParameters.test_write_condition"]], "ar() (in module ase2sprkkr.input_parameters.test.test_input_parameters)": [[1027, "ase2sprkkr.input_parameters.test.test_input_parameters.ar"]], "ase2sprkkr.output_files": [[1028, "module-ase2sprkkr.output_files"]], "ase2sprkkr.output_files.definitions": [[1029, "module-ase2sprkkr.output_files.definitions"]], "arithmetic (class in ase2sprkkr.output_files.definitions)": [[1030, "ase2sprkkr.output_files.definitions.Arithmetic"]], "__init__() (ase2sprkkr.output_files.definitions.arithmetic method)": [[1030, "ase2sprkkr.output_files.definitions.Arithmetic.__init__"]], "_check_arithmetic() (ase2sprkkr.output_files.definitions.arithmetic method)": [[1030, "ase2sprkkr.output_files.definitions.Arithmetic._check_arithmetic"]], "_do_arithmetic() (ase2sprkkr.output_files.definitions.arithmetic method)": [[1030, "ase2sprkkr.output_files.definitions.Arithmetic._do_arithmetic"]], "commonoutputfile (class in ase2sprkkr.output_files.definitions)": [[1031, "ase2sprkkr.output_files.definitions.CommonOutputFile"]], "__init__() (ase2sprkkr.output_files.definitions.commonoutputfile method)": [[1031, "ase2sprkkr.output_files.definitions.CommonOutputFile.__init__"]], "n_atoms() (ase2sprkkr.output_files.definitions.commonoutputfile method)": [[1031, "ase2sprkkr.output_files.definitions.CommonOutputFile.n_atoms"]], "n_orbitals() (ase2sprkkr.output_files.definitions.commonoutputfile method)": [[1031, "ase2sprkkr.output_files.definitions.CommonOutputFile.n_orbitals"]], "n_types() (ase2sprkkr.output_files.definitions.commonoutputfile method)": [[1031, "ase2sprkkr.output_files.definitions.CommonOutputFile.n_types"]], "site_type_index() (ase2sprkkr.output_files.definitions.commonoutputfile method)": [[1031, "ase2sprkkr.output_files.definitions.CommonOutputFile.site_type_index"]], "outputfile (class in ase2sprkkr.output_files.definitions)": [[1032, "ase2sprkkr.output_files.definitions.OutputFile"]], "__init__() (ase2sprkkr.output_files.definitions.outputfile method)": [[1032, "ase2sprkkr.output_files.definitions.OutputFile.__init__"]], "definitions (ase2sprkkr.output_files.definitions.outputfile attribute)": [[1032, "ase2sprkkr.output_files.definitions.OutputFile.definitions"]], "from_file() (ase2sprkkr.output_files.definitions.outputfile class method)": [[1032, "ase2sprkkr.output_files.definitions.OutputFile.from_file"]], "unknown_output_file_definition (ase2sprkkr.output_files.definitions.outputfile attribute)": [[1032, "ase2sprkkr.output_files.definitions.OutputFile.unknown_output_file_definition"]], "unknowndatavalue (class in ase2sprkkr.output_files.definitions)": [[1033, "ase2sprkkr.output_files.definitions.UnknownDataValue"]], "__init__() (ase2sprkkr.output_files.definitions.unknowndatavalue method)": [[1033, "ase2sprkkr.output_files.definitions.UnknownDataValue.__init__"]], "as_array() (ase2sprkkr.output_files.definitions.unknowndatavalue method)": [[1033, "ase2sprkkr.output_files.definitions.UnknownDataValue.as_array"]], "ase2sprkkr.output_files.definitions.bsf": [[1034, "module-ase2sprkkr.output_files.definitions.bsf"]], "bsfdefinition (class in ase2sprkkr.output_files.definitions.bsf)": [[1035, "ase2sprkkr.output_files.definitions.bsf.BSFDefinition"]], "__init__() (ase2sprkkr.output_files.definitions.bsf.bsfdefinition method)": [[1035, "ase2sprkkr.output_files.definitions.bsf.BSFDefinition.__init__"]], "result_class (ase2sprkkr.output_files.definitions.bsf.bsfdefinition attribute)": [[1035, "ase2sprkkr.output_files.definitions.bsf.BSFDefinition.result_class"]], "bsfoutputfile (class in ase2sprkkr.output_files.definitions.bsf)": [[1036, "ase2sprkkr.output_files.definitions.bsf.BSFOutputFile"]], "__init__() (ase2sprkkr.output_files.definitions.bsf.bsfoutputfile method)": [[1036, "ase2sprkkr.output_files.definitions.bsf.BSFOutputFile.__init__"]], "_arithmetic_values (ase2sprkkr.output_files.definitions.bsf.bsfoutputfile attribute)": [[1036, "ase2sprkkr.output_files.definitions.bsf.BSFOutputFile._arithmetic_values"]], "_assert_arithmetic() (ase2sprkkr.output_files.definitions.bsf.bsfoutputfile method)": [[1036, "ase2sprkkr.output_files.definitions.bsf.BSFOutputFile._assert_arithmetic"]], "plot() (ase2sprkkr.output_files.definitions.bsf.bsfoutputfile method)": [[1036, "ase2sprkkr.output_files.definitions.bsf.BSFOutputFile.plot"]], "create_definition() (in module ase2sprkkr.output_files.definitions.bsf)": [[1037, "ase2sprkkr.output_files.definitions.bsf.create_definition"]], "ase2sprkkr.output_files.definitions.dos": [[1038, "module-ase2sprkkr.output_files.definitions.dos"]], "dos (class in ase2sprkkr.output_files.definitions.dos)": [[1039, "ase2sprkkr.output_files.definitions.dos.DOS"]], "__init__() (ase2sprkkr.output_files.definitions.dos.dos method)": [[1039, "ase2sprkkr.output_files.definitions.dos.DOS.__init__"]], "_check_arithmetic() (ase2sprkkr.output_files.definitions.dos.dos method)": [[1039, "ase2sprkkr.output_files.definitions.dos.DOS._check_arithmetic"]], "_do_arithmetic() (ase2sprkkr.output_files.definitions.dos.dos method)": [[1039, "ase2sprkkr.output_files.definitions.dos.DOS._do_arithmetic"]], "copy() (ase2sprkkr.output_files.definitions.dos.dos method)": [[1039, "ase2sprkkr.output_files.definitions.dos.DOS.copy"]], "plot() (ase2sprkkr.output_files.definitions.dos.dos method)": [[1039, "ase2sprkkr.output_files.definitions.dos.DOS.plot"]], "shape (ase2sprkkr.output_files.definitions.dos.dos property)": [[1039, "ase2sprkkr.output_files.definitions.dos.DOS.shape"]], "dosdefinition (class in ase2sprkkr.output_files.definitions.dos)": [[1040, "ase2sprkkr.output_files.definitions.dos.DOSDefinition"]], "__init__() (ase2sprkkr.output_files.definitions.dos.dosdefinition method)": [[1040, "ase2sprkkr.output_files.definitions.dos.DOSDefinition.__init__"]], "result_class (ase2sprkkr.output_files.definitions.dos.dosdefinition attribute)": [[1040, "ase2sprkkr.output_files.definitions.dos.DOSDefinition.result_class"]], "dosoutputfile (class in ase2sprkkr.output_files.definitions.dos)": [[1041, "ase2sprkkr.output_files.definitions.dos.DOSOutputFile"]], "__init__() (ase2sprkkr.output_files.definitions.dos.dosoutputfile method)": [[1041, "ase2sprkkr.output_files.definitions.dos.DOSOutputFile.__init__"]], "_clear_computed() (ase2sprkkr.output_files.definitions.dos.dosoutputfile method)": [[1041, "ase2sprkkr.output_files.definitions.dos.DOSOutputFile._clear_computed"]], "_create_dos() (ase2sprkkr.output_files.definitions.dos.dosoutputfile method)": [[1041, "ase2sprkkr.output_files.definitions.dos.DOSOutputFile._create_dos"]], "_resolve_spin() (ase2sprkkr.output_files.definitions.dos.dosoutputfile static method)": [[1041, "ase2sprkkr.output_files.definitions.dos.DOSOutputFile._resolve_spin"]], "dos_for_site_type() (ase2sprkkr.output_files.definitions.dos.dosoutputfile method)": [[1041, "ase2sprkkr.output_files.definitions.dos.DOSOutputFile.dos_for_site_type"]], "energy (ase2sprkkr.output_files.definitions.dos.dosoutputfile property)": [[1041, "ase2sprkkr.output_files.definitions.dos.DOSOutputFile.energy"]], "index_of_dos_for_site_type() (ase2sprkkr.output_files.definitions.dos.dosoutputfile method)": [[1041, "ase2sprkkr.output_files.definitions.dos.DOSOutputFile.index_of_dos_for_site_type"]], "iterate_data_slices() (ase2sprkkr.output_files.definitions.dos.dosoutputfile method)": [[1041, "ase2sprkkr.output_files.definitions.dos.DOSOutputFile.iterate_data_slices"]], "iterate_dos() (ase2sprkkr.output_files.definitions.dos.dosoutputfile method)": [[1041, "ase2sprkkr.output_files.definitions.dos.DOSOutputFile.iterate_dos"]], "n_orbitals_for() (ase2sprkkr.output_files.definitions.dos.dosoutputfile method)": [[1041, "ase2sprkkr.output_files.definitions.dos.DOSOutputFile.n_orbitals_for"]], "n_spins() (ase2sprkkr.output_files.definitions.dos.dosoutputfile method)": [[1041, "ase2sprkkr.output_files.definitions.dos.DOSOutputFile.n_spins"]], "plot() (ase2sprkkr.output_files.definitions.dos.dosoutputfile method)": [[1041, "ase2sprkkr.output_files.definitions.dos.DOSOutputFile.plot"]], "total_dos() (ase2sprkkr.output_files.definitions.dos.dosoutputfile method)": [[1041, "ase2sprkkr.output_files.definitions.dos.DOSOutputFile.total_dos"]], "create_definition() (in module ase2sprkkr.output_files.definitions.dos)": [[1042, "ase2sprkkr.output_files.definitions.dos.create_definition"]], "ase2sprkkr.output_files.definitions.spc": [[1043, "module-ase2sprkkr.output_files.definitions.spc"]], "arpesdefinition (class in ase2sprkkr.output_files.definitions.spc)": [[1044, "ase2sprkkr.output_files.definitions.spc.ARPESDefinition"]], "__init__() (ase2sprkkr.output_files.definitions.spc.arpesdefinition method)": [[1044, "ase2sprkkr.output_files.definitions.spc.ARPESDefinition.__init__"]], "result_class (ase2sprkkr.output_files.definitions.spc.arpesdefinition attribute)": [[1044, "ase2sprkkr.output_files.definitions.spc.ARPESDefinition.result_class"]], "arpesoutputfile (class in ase2sprkkr.output_files.definitions.spc)": [[1045, "ase2sprkkr.output_files.definitions.spc.ARPESOutputFile"]], "__init__() (ase2sprkkr.output_files.definitions.spc.arpesoutputfile method)": [[1045, "ase2sprkkr.output_files.definitions.spc.ARPESOutputFile.__init__"]], "_arithmetic_values (ase2sprkkr.output_files.definitions.spc.arpesoutputfile attribute)": [[1045, "ase2sprkkr.output_files.definitions.spc.ARPESOutputFile._arithmetic_values"]], "_assert_arithmetic() (ase2sprkkr.output_files.definitions.spc.arpesoutputfile method)": [[1045, "ase2sprkkr.output_files.definitions.spc.ARPESOutputFile._assert_arithmetic"]], "plot() (ase2sprkkr.output_files.definitions.spc.arpesoutputfile method)": [[1045, "ase2sprkkr.output_files.definitions.spc.ARPESOutputFile.plot"]], "create_definition() (in module ase2sprkkr.output_files.definitions.spc)": [[1046, "ase2sprkkr.output_files.definitions.spc.create_definition"]], "ase2sprkkr.output_files.output_files": [[1047, "module-ase2sprkkr.output_files.output_files"]], "arithmetic (class in ase2sprkkr.output_files.output_files)": [[1048, "ase2sprkkr.output_files.output_files.Arithmetic"]], "__init__() (ase2sprkkr.output_files.output_files.arithmetic method)": [[1048, "ase2sprkkr.output_files.output_files.Arithmetic.__init__"]], "_check_arithmetic() (ase2sprkkr.output_files.output_files.arithmetic method)": [[1048, "ase2sprkkr.output_files.output_files.Arithmetic._check_arithmetic"]], "_do_arithmetic() (ase2sprkkr.output_files.output_files.arithmetic method)": [[1048, "ase2sprkkr.output_files.output_files.Arithmetic._do_arithmetic"]], "commonoutputfile (class in ase2sprkkr.output_files.output_files)": [[1049, "ase2sprkkr.output_files.output_files.CommonOutputFile"]], "__init__() (ase2sprkkr.output_files.output_files.commonoutputfile method)": [[1049, "ase2sprkkr.output_files.output_files.CommonOutputFile.__init__"]], "n_atoms() (ase2sprkkr.output_files.output_files.commonoutputfile method)": [[1049, "ase2sprkkr.output_files.output_files.CommonOutputFile.n_atoms"]], "n_orbitals() (ase2sprkkr.output_files.output_files.commonoutputfile method)": [[1049, "ase2sprkkr.output_files.output_files.CommonOutputFile.n_orbitals"]], "n_types() (ase2sprkkr.output_files.output_files.commonoutputfile method)": [[1049, "ase2sprkkr.output_files.output_files.CommonOutputFile.n_types"]], "site_type_index() (ase2sprkkr.output_files.output_files.commonoutputfile method)": [[1049, "ase2sprkkr.output_files.output_files.CommonOutputFile.site_type_index"]], "outputfile (class in ase2sprkkr.output_files.output_files)": [[1050, "ase2sprkkr.output_files.output_files.OutputFile"]], "__init__() (ase2sprkkr.output_files.output_files.outputfile method)": [[1050, "ase2sprkkr.output_files.output_files.OutputFile.__init__"]], "definitions (ase2sprkkr.output_files.output_files.outputfile attribute)": [[1050, "ase2sprkkr.output_files.output_files.OutputFile.definitions"]], "from_file() (ase2sprkkr.output_files.output_files.outputfile class method)": [[1050, "ase2sprkkr.output_files.output_files.OutputFile.from_file"]], "unknown_output_file_definition (ase2sprkkr.output_files.output_files.outputfile attribute)": [[1050, "ase2sprkkr.output_files.output_files.OutputFile.unknown_output_file_definition"]], "unknowndatavalue (class in ase2sprkkr.output_files.output_files)": [[1051, "ase2sprkkr.output_files.output_files.UnknownDataValue"]], "__init__() (ase2sprkkr.output_files.output_files.unknowndatavalue method)": [[1051, "ase2sprkkr.output_files.output_files.UnknownDataValue.__init__"]], "as_array() (ase2sprkkr.output_files.output_files.unknowndatavalue method)": [[1051, "ase2sprkkr.output_files.output_files.UnknownDataValue.as_array"]], "ase2sprkkr.output_files.output_files_definitions": [[1052, "module-ase2sprkkr.output_files.output_files_definitions"]], "blankseparator (class in ase2sprkkr.output_files.output_files_definitions)": [[1053, "ase2sprkkr.output_files.output_files_definitions.BlankSeparator"]], "__init__() (ase2sprkkr.output_files.output_files_definitions.blankseparator method)": [[1053, "ase2sprkkr.output_files.output_files_definitions.BlankSeparator.__init__"]], "separator_type (ase2sprkkr.output_files.output_files_definitions.blankseparator attribute)": [[1053, "ase2sprkkr.output_files.output_files_definitions.BlankSeparator.separator_type"]], "outputfiledefinition (class in ase2sprkkr.output_files.output_files_definitions)": [[1054, "ase2sprkkr.output_files.output_files_definitions.OutputFileDefinition"]], "__init__() (ase2sprkkr.output_files.output_files_definitions.outputfiledefinition method)": [[1054, "ase2sprkkr.output_files.output_files_definitions.OutputFileDefinition.__init__"]], "add_ignored() (ase2sprkkr.output_files.output_files_definitions.outputfiledefinition method)": [[1054, "ase2sprkkr.output_files.output_files_definitions.OutputFileDefinition.add_ignored"]], "child_class (ase2sprkkr.output_files.output_files_definitions.outputfiledefinition attribute)": [[1054, "ase2sprkkr.output_files.output_files_definitions.OutputFileDefinition.child_class"]], "configuration_type_name (ase2sprkkr.output_files.output_files_definitions.outputfiledefinition attribute)": [[1054, "ase2sprkkr.output_files.output_files_definitions.OutputFileDefinition.configuration_type_name"]], "custom_class (ase2sprkkr.output_files.output_files_definitions.outputfiledefinition attribute)": [[1054, "ase2sprkkr.output_files.output_files_definitions.OutputFileDefinition.custom_class"]], "delimiter (ase2sprkkr.output_files.output_files_definitions.outputfiledefinition attribute)": [[1054, "ase2sprkkr.output_files.output_files_definitions.OutputFileDefinition.delimiter"]], "force_order (ase2sprkkr.output_files.output_files_definitions.outputfiledefinition attribute)": [[1054, "ase2sprkkr.output_files.output_files_definitions.OutputFileDefinition.force_order"]], "grammar_of_delimiter (ase2sprkkr.output_files.output_files_definitions.outputfiledefinition attribute)": [[1054, "ase2sprkkr.output_files.output_files_definitions.OutputFileDefinition.grammar_of_delimiter"]], "result_class (ase2sprkkr.output_files.output_files_definitions.outputfiledefinition attribute)": [[1054, "ase2sprkkr.output_files.output_files_definitions.OutputFileDefinition.result_class"]], "value_name_format (ase2sprkkr.output_files.output_files_definitions.outputfiledefinition attribute)": [[1054, "ase2sprkkr.output_files.output_files_definitions.OutputFileDefinition.value_name_format"]], "outputfilevaluedefinition (class in ase2sprkkr.output_files.output_files_definitions)": [[1055, "ase2sprkkr.output_files.output_files_definitions.OutputFileValueDefinition"]], "__init__() (ase2sprkkr.output_files.output_files_definitions.outputfilevaluedefinition method)": [[1055, "ase2sprkkr.output_files.output_files_definitions.OutputFileValueDefinition.__init__"]], "grammar_of_delimiter (ase2sprkkr.output_files.output_files_definitions.outputfilevaluedefinition attribute)": [[1055, "ase2sprkkr.output_files.output_files_definitions.OutputFileValueDefinition.grammar_of_delimiter"]], "name_value_delimiter (ase2sprkkr.output_files.output_files_definitions.outputfilevaluedefinition attribute)": [[1055, "ase2sprkkr.output_files.output_files_definitions.OutputFileValueDefinition.name_value_delimiter"]], "prefix (ase2sprkkr.output_files.output_files_definitions.outputfilevaluedefinition attribute)": [[1055, "ase2sprkkr.output_files.output_files_definitions.OutputFileValueDefinition.prefix"]], "type_from_type_map (ase2sprkkr.output_files.output_files_definitions.outputfilevaluedefinition attribute)": [[1055, "ase2sprkkr.output_files.output_files_definitions.OutputFileValueDefinition.type_from_type_map"]], "type_of_dangerous (ase2sprkkr.output_files.output_files_definitions.outputfilevaluedefinition attribute)": [[1055, "ase2sprkkr.output_files.output_files_definitions.OutputFileValueDefinition.type_of_dangerous"]], "separator (class in ase2sprkkr.output_files.output_files_definitions)": [[1056, "ase2sprkkr.output_files.output_files_definitions.Separator"]], "__init__() (ase2sprkkr.output_files.output_files_definitions.separator method)": [[1056, "ase2sprkkr.output_files.output_files_definitions.Separator.__init__"]], "separator_type (ase2sprkkr.output_files.output_files_definitions.separator attribute)": [[1056, "ase2sprkkr.output_files.output_files_definitions.Separator.separator_type"]], "create_output_file_definition() (in module ase2sprkkr.output_files.output_files_definitions)": [[1057, "ase2sprkkr.output_files.output_files_definitions.create_output_file_definition"]], "output_file_header() (in module ase2sprkkr.output_files.output_files_definitions)": [[1058, "ase2sprkkr.output_files.output_files_definitions.output_file_header"]], "ase2sprkkr.output_files.test": [[1059, "module-ase2sprkkr.output_files.test"]], "ase2sprkkr.output_files.test.init_tests": [[1060, "module-ase2sprkkr.output_files.test.init_tests"]], "testcase (class in ase2sprkkr.output_files.test.init_tests)": [[1061, "ase2sprkkr.output_files.test.init_tests.TestCase"]], "__init__() (ase2sprkkr.output_files.test.init_tests.testcase method)": [[1061, "ase2sprkkr.output_files.test.init_tests.TestCase.__init__"]], "_calc_args (ase2sprkkr.output_files.test.init_tests.testcase attribute)": [[1061, "ase2sprkkr.output_files.test.init_tests.TestCase._calc_args"]], "_print_output (ase2sprkkr.output_files.test.init_tests.testcase attribute)": [[1061, "ase2sprkkr.output_files.test.init_tests.TestCase._print_output"]], "almost_equal_precision() (ase2sprkkr.output_files.test.init_tests.testcase class method)": [[1061, "ase2sprkkr.output_files.test.init_tests.TestCase.almost_equal_precision"]], "assertalmostequal() (ase2sprkkr.output_files.test.init_tests.testcase method)": [[1061, "ase2sprkkr.output_files.test.init_tests.TestCase.assertAlmostEqual"]], "assertasyncequal() (ase2sprkkr.output_files.test.init_tests.testcase method)": [[1061, "ase2sprkkr.output_files.test.init_tests.TestCase.assertAsyncEqual"]], "assertasyncraises() (ase2sprkkr.output_files.test.init_tests.testcase method)": [[1061, "ase2sprkkr.output_files.test.init_tests.TestCase.assertAsyncRaises"]], "assertequal() (ase2sprkkr.output_files.test.init_tests.testcase method)": [[1061, "ase2sprkkr.output_files.test.init_tests.TestCase.assertEqual"]], "assertfalse() (ase2sprkkr.output_files.test.init_tests.testcase method)": [[1061, "ase2sprkkr.output_files.test.init_tests.TestCase.assertFalse"]], "assertisnone() (ase2sprkkr.output_files.test.init_tests.testcase method)": [[1061, "ase2sprkkr.output_files.test.init_tests.TestCase.assertIsNone"]], "assertnotequal() (ase2sprkkr.output_files.test.init_tests.testcase method)": [[1061, "ase2sprkkr.output_files.test.init_tests.TestCase.assertNotEqual"]], "assertraises() (ase2sprkkr.output_files.test.init_tests.testcase method)": [[1061, "ase2sprkkr.output_files.test.init_tests.TestCase.assertRaises"]], "asserttrue() (ase2sprkkr.output_files.test.init_tests.testcase method)": [[1061, "ase2sprkkr.output_files.test.init_tests.TestCase.assertTrue"]], "calc_args() (ase2sprkkr.output_files.test.init_tests.testcase class method)": [[1061, "ase2sprkkr.output_files.test.init_tests.TestCase.calc_args"]], "runasync() (ase2sprkkr.output_files.test.init_tests.testcase static method)": [[1061, "ase2sprkkr.output_files.test.init_tests.TestCase.runAsync"]], "run_sprkkr() (ase2sprkkr.output_files.test.init_tests.testcase method)": [[1061, "ase2sprkkr.output_files.test.init_tests.TestCase.run_sprkkr"]], "temporary_dir() (ase2sprkkr.output_files.test.init_tests.testcase method)": [[1061, "ase2sprkkr.output_files.test.init_tests.TestCase.temporary_dir"]], "arr_testfce() (in module ase2sprkkr.output_files.test.init_tests)": [[1062, "ase2sprkkr.output_files.test.init_tests.arr_testfce"]], "assertdictequal() (in module ase2sprkkr.output_files.test.init_tests)": [[1063, "ase2sprkkr.output_files.test.init_tests.assertDictEqual"]], "assertlistequal() (in module ase2sprkkr.output_files.test.init_tests)": [[1064, "ase2sprkkr.output_files.test.init_tests.assertListEqual"]], "assert_almost_equals() (in module ase2sprkkr.output_files.test.init_tests)": [[1065, "ase2sprkkr.output_files.test.init_tests.assert_almost_equals"]], "assert_equals() (in module ase2sprkkr.output_files.test.init_tests)": [[1066, "ase2sprkkr.output_files.test.init_tests.assert_equals"]], "__init__() (ase2sprkkr.output_files.test.init_tests.extdict method)": [[1067, "ase2sprkkr.output_files.test.init_tests.extdict.__init__"]], "extdict (class in ase2sprkkr.output_files.test.init_tests)": [[1067, "ase2sprkkr.output_files.test.init_tests.extdict"]], "testfce() (in module ase2sprkkr.output_files.test.init_tests)": [[1068, "ase2sprkkr.output_files.test.init_tests.testfce"]], "ase2sprkkr.output_files.test.test_files": [[1069, "module-ase2sprkkr.output_files.test.test_files"]], "testoutput (class in ase2sprkkr.output_files.test.test_files)": [[1070, "ase2sprkkr.output_files.test.test_files.TestOutput"]], "__init__() (ase2sprkkr.output_files.test.test_files.testoutput method)": [[1070, "ase2sprkkr.output_files.test.test_files.TestOutput.__init__"]], "test_output() (ase2sprkkr.output_files.test.test_files.testoutput method)": [[1070, "ase2sprkkr.output_files.test.test_files.TestOutput.test_output"]], "ase2sprkkr.outputs": [[1071, "module-ase2sprkkr.outputs"]], "ase2sprkkr.outputs.output_definitions": [[1072, "module-ase2sprkkr.outputs.output_definitions"]], "outputnonamevaluedefinition (class in ase2sprkkr.outputs.output_definitions)": [[1073, "ase2sprkkr.outputs.output_definitions.OutputNonameValueDefinition"]], "__init__() (ase2sprkkr.outputs.output_definitions.outputnonamevaluedefinition method)": [[1073, "ase2sprkkr.outputs.output_definitions.OutputNonameValueDefinition.__init__"]], "name_in_grammar (ase2sprkkr.outputs.output_definitions.outputnonamevaluedefinition attribute)": [[1073, "ase2sprkkr.outputs.output_definitions.OutputNonameValueDefinition.name_in_grammar"]], "outputsectiondefinition (class in ase2sprkkr.outputs.output_definitions)": [[1074, "ase2sprkkr.outputs.output_definitions.OutputSectionDefinition"]], "__init__() (ase2sprkkr.outputs.output_definitions.outputsectiondefinition method)": [[1074, "ase2sprkkr.outputs.output_definitions.OutputSectionDefinition.__init__"]], "child_class (ase2sprkkr.outputs.output_definitions.outputsectiondefinition attribute)": [[1074, "ase2sprkkr.outputs.output_definitions.OutputSectionDefinition.child_class"]], "custom_class (ase2sprkkr.outputs.output_definitions.outputsectiondefinition attribute)": [[1074, "ase2sprkkr.outputs.output_definitions.OutputSectionDefinition.custom_class"]], "delimiter (ase2sprkkr.outputs.output_definitions.outputsectiondefinition attribute)": [[1074, "ase2sprkkr.outputs.output_definitions.OutputSectionDefinition.delimiter"]], "force_order (ase2sprkkr.outputs.output_definitions.outputsectiondefinition attribute)": [[1074, "ase2sprkkr.outputs.output_definitions.OutputSectionDefinition.force_order"]], "grammar_of_delimiter (ase2sprkkr.outputs.output_definitions.outputsectiondefinition attribute)": [[1074, "ase2sprkkr.outputs.output_definitions.OutputSectionDefinition.grammar_of_delimiter"]], "name_in_grammar (ase2sprkkr.outputs.output_definitions.outputsectiondefinition attribute)": [[1074, "ase2sprkkr.outputs.output_definitions.OutputSectionDefinition.name_in_grammar"]], "outputvaluedefinition (class in ase2sprkkr.outputs.output_definitions)": [[1075, "ase2sprkkr.outputs.output_definitions.OutputValueDefinition"]], "__init__() (ase2sprkkr.outputs.output_definitions.outputvaluedefinition method)": [[1075, "ase2sprkkr.outputs.output_definitions.OutputValueDefinition.__init__"]], "grammar_of_delimiter (ase2sprkkr.outputs.output_definitions.outputvaluedefinition attribute)": [[1075, "ase2sprkkr.outputs.output_definitions.OutputValueDefinition.grammar_of_delimiter"]], "prefix (ase2sprkkr.outputs.output_definitions.outputvaluedefinition attribute)": [[1075, "ase2sprkkr.outputs.output_definitions.OutputValueDefinition.prefix"]], "outputvalueequaldefinition (class in ase2sprkkr.outputs.output_definitions)": [[1076, "ase2sprkkr.outputs.output_definitions.OutputValueEqualDefinition"]], "__init__() (ase2sprkkr.outputs.output_definitions.outputvalueequaldefinition method)": [[1076, "ase2sprkkr.outputs.output_definitions.OutputValueEqualDefinition.__init__"]], "grammar_of_delimiter (ase2sprkkr.outputs.output_definitions.outputvalueequaldefinition attribute)": [[1076, "ase2sprkkr.outputs.output_definitions.OutputValueEqualDefinition.grammar_of_delimiter"]], "name_value_delimiter (ase2sprkkr.outputs.output_definitions.outputvalueequaldefinition attribute)": [[1076, "ase2sprkkr.outputs.output_definitions.OutputValueEqualDefinition.name_value_delimiter"]], "ase2sprkkr.outputs.readers": [[1077, "module-ase2sprkkr.outputs.readers"]], "ase2sprkkr.outputs.readers.arpes": [[1078, "module-ase2sprkkr.outputs.readers.arpes"]], "arpesprocess (class in ase2sprkkr.outputs.readers.arpes)": [[1079, "ase2sprkkr.outputs.readers.arpes.ArpesProcess"]], "__init__() (ase2sprkkr.outputs.readers.arpes.arpesprocess method)": [[1079, "ase2sprkkr.outputs.readers.arpes.ArpesProcess.__init__"]], "reader_class (ase2sprkkr.outputs.readers.arpes.arpesprocess attribute)": [[1079, "ase2sprkkr.outputs.readers.arpes.ArpesProcess.reader_class"]], "result_class (ase2sprkkr.outputs.readers.arpes.arpesprocess attribute)": [[1079, "ase2sprkkr.outputs.readers.arpes.ArpesProcess.result_class"]], "arpesresult (class in ase2sprkkr.outputs.readers.arpes)": [[1080, "ase2sprkkr.outputs.readers.arpes.ArpesResult"]], "__init__() (ase2sprkkr.outputs.readers.arpes.arpesresult method)": [[1080, "ase2sprkkr.outputs.readers.arpes.ArpesResult.__init__"]], "spc (ase2sprkkr.outputs.readers.arpes.arpesresult property)": [[1080, "ase2sprkkr.outputs.readers.arpes.ArpesResult.spc"]], "spc_filename (ase2sprkkr.outputs.readers.arpes.arpesresult property)": [[1080, "ase2sprkkr.outputs.readers.arpes.ArpesResult.spc_filename"]], "ase2sprkkr.outputs.readers.bsf": [[1081, "module-ase2sprkkr.outputs.readers.bsf"]], "bsfprocess (class in ase2sprkkr.outputs.readers.bsf)": [[1082, "ase2sprkkr.outputs.readers.bsf.BsfProcess"]], "__init__() (ase2sprkkr.outputs.readers.bsf.bsfprocess method)": [[1082, "ase2sprkkr.outputs.readers.bsf.BsfProcess.__init__"]], "reader_class (ase2sprkkr.outputs.readers.bsf.bsfprocess attribute)": [[1082, "ase2sprkkr.outputs.readers.bsf.BsfProcess.reader_class"]], "result_class (ase2sprkkr.outputs.readers.bsf.bsfprocess attribute)": [[1082, "ase2sprkkr.outputs.readers.bsf.BsfProcess.result_class"]], "bsfresult (class in ase2sprkkr.outputs.readers.bsf)": [[1083, "ase2sprkkr.outputs.readers.bsf.BsfResult"]], "__init__() (ase2sprkkr.outputs.readers.bsf.bsfresult method)": [[1083, "ase2sprkkr.outputs.readers.bsf.BsfResult.__init__"]], "bsf (ase2sprkkr.outputs.readers.bsf.bsfresult property)": [[1083, "ase2sprkkr.outputs.readers.bsf.BsfResult.bsf"]], "bsf_filename (ase2sprkkr.outputs.readers.bsf.bsfresult property)": [[1083, "ase2sprkkr.outputs.readers.bsf.BsfResult.bsf_filename"]], "ase2sprkkr.outputs.readers.default": [[1084, "module-ase2sprkkr.outputs.readers.default"]], "defaultoutputreader (class in ase2sprkkr.outputs.readers.default)": [[1085, "ase2sprkkr.outputs.readers.default.DefaultOutputReader"]], "__init__() (ase2sprkkr.outputs.readers.default.defaultoutputreader method)": [[1085, "ase2sprkkr.outputs.readers.default.DefaultOutputReader.__init__"]], "read_output() (ase2sprkkr.outputs.readers.default.defaultoutputreader method)": [[1085, "ase2sprkkr.outputs.readers.default.DefaultOutputReader.read_output"]], "defaultprocess (class in ase2sprkkr.outputs.readers.default)": [[1086, "ase2sprkkr.outputs.readers.default.DefaultProcess"]], "__init__() (ase2sprkkr.outputs.readers.default.defaultprocess method)": [[1086, "ase2sprkkr.outputs.readers.default.DefaultProcess.__init__"]], "reader_class (ase2sprkkr.outputs.readers.default.defaultprocess attribute)": [[1086, "ase2sprkkr.outputs.readers.default.DefaultProcess.reader_class"]], "result_class (ase2sprkkr.outputs.readers.default.defaultprocess attribute)": [[1086, "ase2sprkkr.outputs.readers.default.DefaultProcess.result_class"]], "defaultresult (class in ase2sprkkr.outputs.readers.default)": [[1087, "ase2sprkkr.outputs.readers.default.DefaultResult"]], "__init__() (ase2sprkkr.outputs.readers.default.defaultresult method)": [[1087, "ase2sprkkr.outputs.readers.default.DefaultResult.__init__"]], "ase2sprkkr.outputs.readers.dos": [[1088, "module-ase2sprkkr.outputs.readers.dos"]], "dosprocess (class in ase2sprkkr.outputs.readers.dos)": [[1089, "ase2sprkkr.outputs.readers.dos.DosProcess"]], "__init__() (ase2sprkkr.outputs.readers.dos.dosprocess method)": [[1089, "ase2sprkkr.outputs.readers.dos.DosProcess.__init__"]], "reader_class (ase2sprkkr.outputs.readers.dos.dosprocess attribute)": [[1089, "ase2sprkkr.outputs.readers.dos.DosProcess.reader_class"]], "result_class (ase2sprkkr.outputs.readers.dos.dosprocess attribute)": [[1089, "ase2sprkkr.outputs.readers.dos.DosProcess.result_class"]], "dosresult (class in ase2sprkkr.outputs.readers.dos)": [[1090, "ase2sprkkr.outputs.readers.dos.DosResult"]], "__init__() (ase2sprkkr.outputs.readers.dos.dosresult method)": [[1090, "ase2sprkkr.outputs.readers.dos.DosResult.__init__"]], "dos (ase2sprkkr.outputs.readers.dos.dosresult property)": [[1090, "ase2sprkkr.outputs.readers.dos.DosResult.dos"]], "dos_filename (ase2sprkkr.outputs.readers.dos.dosresult property)": [[1090, "ase2sprkkr.outputs.readers.dos.DosResult.dos_filename"]], "ase2sprkkr.outputs.readers.scf": [[1091, "module-ase2sprkkr.outputs.readers.scf"]], "realorstars (class in ase2sprkkr.outputs.readers.scf)": [[1092, "ase2sprkkr.outputs.readers.scf.RealOrStars"]], "__init__() (ase2sprkkr.outputs.readers.scf.realorstars method)": [[1092, "ase2sprkkr.outputs.readers.scf.RealOrStars.__init__"]], "_grammar (ase2sprkkr.outputs.readers.scf.realorstars attribute)": [[1092, "ase2sprkkr.outputs.readers.scf.RealOrStars._grammar"]], "scfoutputreader (class in ase2sprkkr.outputs.readers.scf)": [[1093, "ase2sprkkr.outputs.readers.scf.ScfOutputReader"]], "__init__() (ase2sprkkr.outputs.readers.scf.scfoutputreader method)": [[1093, "ase2sprkkr.outputs.readers.scf.ScfOutputReader.__init__"]], "read_output() (ase2sprkkr.outputs.readers.scf.scfoutputreader method)": [[1093, "ase2sprkkr.outputs.readers.scf.ScfOutputReader.read_output"]], "scfprocess (class in ase2sprkkr.outputs.readers.scf)": [[1094, "ase2sprkkr.outputs.readers.scf.ScfProcess"]], "__init__() (ase2sprkkr.outputs.readers.scf.scfprocess method)": [[1094, "ase2sprkkr.outputs.readers.scf.ScfProcess.__init__"]], "reader_class (ase2sprkkr.outputs.readers.scf.scfprocess attribute)": [[1094, "ase2sprkkr.outputs.readers.scf.ScfProcess.reader_class"]], "result_class (ase2sprkkr.outputs.readers.scf.scfprocess attribute)": [[1094, "ase2sprkkr.outputs.readers.scf.ScfProcess.result_class"]], "scfresult (class in ase2sprkkr.outputs.readers.scf)": [[1095, "ase2sprkkr.outputs.readers.scf.ScfResult"]], "__init__() (ase2sprkkr.outputs.readers.scf.scfresult method)": [[1095, "ase2sprkkr.outputs.readers.scf.ScfResult.__init__"]], "calculator (ase2sprkkr.outputs.readers.scf.scfresult property)": [[1095, "ase2sprkkr.outputs.readers.scf.ScfResult.calculator"]], "converged (ase2sprkkr.outputs.readers.scf.scfresult property)": [[1095, "ase2sprkkr.outputs.readers.scf.ScfResult.converged"]], "energies (ase2sprkkr.outputs.readers.scf.scfresult property)": [[1095, "ase2sprkkr.outputs.readers.scf.ScfResult.energies"]], "energy (ase2sprkkr.outputs.readers.scf.scfresult property)": [[1095, "ase2sprkkr.outputs.readers.scf.ScfResult.energy"]], "iteration_values() (ase2sprkkr.outputs.readers.scf.scfresult method)": [[1095, "ase2sprkkr.outputs.readers.scf.ScfResult.iteration_values"]], "last_iteration (ase2sprkkr.outputs.readers.scf.scfresult property)": [[1095, "ase2sprkkr.outputs.readers.scf.ScfResult.last_iteration"]], "plot() (ase2sprkkr.outputs.readers.scf.scfresult method)": [[1095, "ase2sprkkr.outputs.readers.scf.ScfResult.plot"]], "potential_filename (ase2sprkkr.outputs.readers.scf.scfresult property)": [[1095, "ase2sprkkr.outputs.readers.scf.ScfResult.potential_filename"]], "start_potential (ase2sprkkr.outputs.readers.scf.scfresult property)": [[1095, "ase2sprkkr.outputs.readers.scf.ScfResult.start_potential"]], "start_potential_filename (ase2sprkkr.outputs.readers.scf.scfresult property)": [[1095, "ase2sprkkr.outputs.readers.scf.ScfResult.start_potential_filename"]], "atomic_types_definition (in module ase2sprkkr.outputs.readers.scf)": [[1096, "ase2sprkkr.outputs.readers.scf.atomic_types_definition"]], "ase2sprkkr.outputs.sprkkr_output_reader": [[1097, "module-ase2sprkkr.outputs.sprkkr_output_reader"]], "sprkkroutputreader (class in ase2sprkkr.outputs.sprkkr_output_reader)": [[1098, "ase2sprkkr.outputs.sprkkr_output_reader.SprKkrOutputReader"]], "__init__() (ase2sprkkr.outputs.sprkkr_output_reader.sprkkroutputreader method)": [[1098, "ase2sprkkr.outputs.sprkkr_output_reader.SprKkrOutputReader.__init__"]], "parse_files() (ase2sprkkr.outputs.sprkkr_output_reader.sprkkroutputreader method)": [[1098, "ase2sprkkr.outputs.sprkkr_output_reader.SprKkrOutputReader.parse_files"]], "read_commons() (ase2sprkkr.outputs.sprkkr_output_reader.sprkkroutputreader method)": [[1098, "ase2sprkkr.outputs.sprkkr_output_reader.SprKkrOutputReader.read_commons"]], "ase2sprkkr.outputs.task_result": [[1099, "module-ase2sprkkr.outputs.task_result"]], "kkrprocess (class in ase2sprkkr.outputs.task_result)": [[1100, "ase2sprkkr.outputs.task_result.KkrProcess"]], "__init__() (ase2sprkkr.outputs.task_result.kkrprocess method)": [[1100, "ase2sprkkr.outputs.task_result.KkrProcess.__init__"]], "_wraps() (ase2sprkkr.outputs.task_result.kkrprocess method)": [[1100, "ase2sprkkr.outputs.task_result.KkrProcess._wraps"]], "calculator (ase2sprkkr.outputs.task_result.kkrprocess attribute)": [[1100, "ase2sprkkr.outputs.task_result.KkrProcess.calculator"]], "class_for_task() (ase2sprkkr.outputs.task_result.kkrprocess static method)": [[1100, "ase2sprkkr.outputs.task_result.KkrProcess.class_for_task"]], "directory (ase2sprkkr.outputs.task_result.kkrprocess attribute)": [[1100, "ase2sprkkr.outputs.task_result.KkrProcess.directory"]], "input_parameters (ase2sprkkr.outputs.task_result.kkrprocess attribute)": [[1100, "ase2sprkkr.outputs.task_result.KkrProcess.input_parameters"]], "read_from_file() (ase2sprkkr.outputs.task_result.kkrprocess method)": [[1100, "ase2sprkkr.outputs.task_result.KkrProcess.read_from_file"]], "run() (ase2sprkkr.outputs.task_result.kkrprocess method)": [[1100, "ase2sprkkr.outputs.task_result.KkrProcess.run"]], "taskresult (class in ase2sprkkr.outputs.task_result)": [[1101, "ase2sprkkr.outputs.task_result.TaskResult"]], "__init__() (ase2sprkkr.outputs.task_result.taskresult method)": [[1101, "ase2sprkkr.outputs.task_result.TaskResult.__init__"]], "_match_task_regex (ase2sprkkr.outputs.task_result.taskresult attribute)": [[1101, "ase2sprkkr.outputs.task_result.TaskResult._match_task_regex"]], "atoms (ase2sprkkr.outputs.task_result.taskresult property)": [[1101, "ase2sprkkr.outputs.task_result.TaskResult.atoms"]], "complete() (ase2sprkkr.outputs.task_result.taskresult method)": [[1101, "ase2sprkkr.outputs.task_result.TaskResult.complete"]], "from_file() (ase2sprkkr.outputs.task_result.taskresult class method)": [[1101, "ase2sprkkr.outputs.task_result.TaskResult.from_file"]], "input_parameters (ase2sprkkr.outputs.task_result.taskresult property)": [[1101, "ase2sprkkr.outputs.task_result.TaskResult.input_parameters"]], "input_parameters_file (ase2sprkkr.outputs.task_result.taskresult property)": [[1101, "ase2sprkkr.outputs.task_result.TaskResult.input_parameters_file"]], "new_task() (ase2sprkkr.outputs.task_result.taskresult method)": [[1101, "ase2sprkkr.outputs.task_result.TaskResult.new_task"]], "path_to() (ase2sprkkr.outputs.task_result.taskresult method)": [[1101, "ase2sprkkr.outputs.task_result.TaskResult.path_to"]], "potential (ase2sprkkr.outputs.task_result.taskresult property)": [[1101, "ase2sprkkr.outputs.task_result.TaskResult.potential"]], "potential_filename (ase2sprkkr.outputs.task_result.taskresult property)": [[1101, "ase2sprkkr.outputs.task_result.TaskResult.potential_filename"]], "task_name (ase2sprkkr.outputs.task_result.taskresult property)": [[1101, "ase2sprkkr.outputs.task_result.TaskResult.task_name"]], "ase2sprkkr.outputs.test": [[1102, "module-ase2sprkkr.outputs.test"]], "ase2sprkkr.outputs.test.init_tests": [[1103, "module-ase2sprkkr.outputs.test.init_tests"]], "testcase (class in ase2sprkkr.outputs.test.init_tests)": [[1104, "ase2sprkkr.outputs.test.init_tests.TestCase"]], "__init__() (ase2sprkkr.outputs.test.init_tests.testcase method)": [[1104, "ase2sprkkr.outputs.test.init_tests.TestCase.__init__"]], "_calc_args (ase2sprkkr.outputs.test.init_tests.testcase attribute)": [[1104, "ase2sprkkr.outputs.test.init_tests.TestCase._calc_args"]], "_print_output (ase2sprkkr.outputs.test.init_tests.testcase attribute)": [[1104, "ase2sprkkr.outputs.test.init_tests.TestCase._print_output"]], "almost_equal_precision() (ase2sprkkr.outputs.test.init_tests.testcase class method)": [[1104, "ase2sprkkr.outputs.test.init_tests.TestCase.almost_equal_precision"]], "assertalmostequal() (ase2sprkkr.outputs.test.init_tests.testcase method)": [[1104, "ase2sprkkr.outputs.test.init_tests.TestCase.assertAlmostEqual"]], "assertasyncequal() (ase2sprkkr.outputs.test.init_tests.testcase method)": [[1104, "ase2sprkkr.outputs.test.init_tests.TestCase.assertAsyncEqual"]], "assertasyncraises() (ase2sprkkr.outputs.test.init_tests.testcase method)": [[1104, "ase2sprkkr.outputs.test.init_tests.TestCase.assertAsyncRaises"]], "assertequal() (ase2sprkkr.outputs.test.init_tests.testcase method)": [[1104, "ase2sprkkr.outputs.test.init_tests.TestCase.assertEqual"]], "assertfalse() (ase2sprkkr.outputs.test.init_tests.testcase method)": [[1104, "ase2sprkkr.outputs.test.init_tests.TestCase.assertFalse"]], "assertisnone() (ase2sprkkr.outputs.test.init_tests.testcase method)": [[1104, "ase2sprkkr.outputs.test.init_tests.TestCase.assertIsNone"]], "assertnotequal() (ase2sprkkr.outputs.test.init_tests.testcase method)": [[1104, "ase2sprkkr.outputs.test.init_tests.TestCase.assertNotEqual"]], "assertraises() (ase2sprkkr.outputs.test.init_tests.testcase method)": [[1104, "ase2sprkkr.outputs.test.init_tests.TestCase.assertRaises"]], "asserttrue() (ase2sprkkr.outputs.test.init_tests.testcase method)": [[1104, "ase2sprkkr.outputs.test.init_tests.TestCase.assertTrue"]], "calc_args() (ase2sprkkr.outputs.test.init_tests.testcase class method)": [[1104, "ase2sprkkr.outputs.test.init_tests.TestCase.calc_args"]], "runasync() (ase2sprkkr.outputs.test.init_tests.testcase static method)": [[1104, "ase2sprkkr.outputs.test.init_tests.TestCase.runAsync"]], "run_sprkkr() (ase2sprkkr.outputs.test.init_tests.testcase method)": [[1104, "ase2sprkkr.outputs.test.init_tests.TestCase.run_sprkkr"]], "temporary_dir() (ase2sprkkr.outputs.test.init_tests.testcase method)": [[1104, "ase2sprkkr.outputs.test.init_tests.TestCase.temporary_dir"]], "arr_testfce() (in module ase2sprkkr.outputs.test.init_tests)": [[1105, "ase2sprkkr.outputs.test.init_tests.arr_testfce"]], "assertdictequal() (in module ase2sprkkr.outputs.test.init_tests)": [[1106, "ase2sprkkr.outputs.test.init_tests.assertDictEqual"]], "assertlistequal() (in module ase2sprkkr.outputs.test.init_tests)": [[1107, "ase2sprkkr.outputs.test.init_tests.assertListEqual"]], "assert_almost_equals() (in module ase2sprkkr.outputs.test.init_tests)": [[1108, "ase2sprkkr.outputs.test.init_tests.assert_almost_equals"]], "assert_equals() (in module ase2sprkkr.outputs.test.init_tests)": [[1109, "ase2sprkkr.outputs.test.init_tests.assert_equals"]], "__init__() (ase2sprkkr.outputs.test.init_tests.extdict method)": [[1110, "ase2sprkkr.outputs.test.init_tests.extdict.__init__"]], "extdict (class in ase2sprkkr.outputs.test.init_tests)": [[1110, "ase2sprkkr.outputs.test.init_tests.extdict"]], "testfce() (in module ase2sprkkr.outputs.test.init_tests)": [[1111, "ase2sprkkr.outputs.test.init_tests.testfce"]], "ase2sprkkr.outputs.test.test_output": [[1112, "module-ase2sprkkr.outputs.test.test_output"]], "testoutput (class in ase2sprkkr.outputs.test.test_output)": [[1113, "ase2sprkkr.outputs.test.test_output.TestOutput"]], "__init__() (ase2sprkkr.outputs.test.test_output.testoutput method)": [[1113, "ase2sprkkr.outputs.test.test_output.TestOutput.__init__"]], "test_output() (ase2sprkkr.outputs.test.test_output.testoutput method)": [[1113, "ase2sprkkr.outputs.test.test_output.TestOutput.test_output"]], "test_scf() (ase2sprkkr.outputs.test.test_output.testoutput method)": [[1113, "ase2sprkkr.outputs.test.test_output.TestOutput.test_scf"]], "ase2sprkkr.physics": [[1114, "module-ase2sprkkr.physics"]], "ase2sprkkr.physics.lattice_data": [[1115, "module-ase2sprkkr.physics.lattice_data"]], "latticedata (class in ase2sprkkr.physics.lattice_data)": [[1116, "ase2sprkkr.physics.lattice_data.LatticeData"]], "__init__() (ase2sprkkr.physics.lattice_data.latticedata method)": [[1116, "ase2sprkkr.physics.lattice_data.LatticeData.__init__"]], "bravais_number (ase2sprkkr.physics.lattice_data.latticedata property)": [[1116, "ase2sprkkr.physics.lattice_data.LatticeData.bravais_number"]], "shoenflies_symbol (ase2sprkkr.physics.lattice_data.latticedata property)": [[1116, "ase2sprkkr.physics.lattice_data.LatticeData.shoenflies_symbol"]], "pearson (class in ase2sprkkr.physics.lattice_data)": [[1117, "ase2sprkkr.physics.lattice_data.Pearson"]], "__init__() (ase2sprkkr.physics.lattice_data.pearson method)": [[1117, "ase2sprkkr.physics.lattice_data.Pearson.__init__"]], "from_symbol() (ase2sprkkr.physics.lattice_data.pearson static method)": [[1117, "ase2sprkkr.physics.lattice_data.Pearson.from_symbol"]], "normalize_symbol() (ase2sprkkr.physics.lattice_data.pearson static method)": [[1117, "ase2sprkkr.physics.lattice_data.Pearson.normalize_symbol"]], "pearson (ase2sprkkr.physics.lattice_data.pearson attribute)": [[1117, "ase2sprkkr.physics.lattice_data.Pearson.pearson"]], "pearsons (ase2sprkkr.physics.lattice_data.pearson attribute)": [[1117, "ase2sprkkr.physics.lattice_data.Pearson.pearsons"]], "xband_data() (ase2sprkkr.physics.lattice_data.pearson method)": [[1117, "ase2sprkkr.physics.lattice_data.Pearson.xband_data"]], "international_numbers_to_ap (in module ase2sprkkr.physics.lattice_data)": [[1118, "ase2sprkkr.physics.lattice_data.international_numbers_to_AP"]], "ase2sprkkr.physics.winger_seitz_radii": [[1119, "module-ase2sprkkr.physics.winger_seitz_radii"]], "winger_seitz_radii (in module ase2sprkkr.physics.winger_seitz_radii)": [[1120, "ase2sprkkr.physics.winger_seitz_radii.winger_seitz_radii"]], "ase2sprkkr.potentials": [[1121, "module-ase2sprkkr.potentials"]], "ase2sprkkr.potentials.custom_potential_section": [[1122, "module-ase2sprkkr.potentials.custom_potential_section"]], "custompotentialsection (class in ase2sprkkr.potentials.custom_potential_section)": [[1123, "ase2sprkkr.potentials.custom_potential_section.CustomPotentialSection"]], "__init__() (ase2sprkkr.potentials.custom_potential_section.custompotentialsection method)": [[1123, "ase2sprkkr.potentials.custom_potential_section.CustomPotentialSection.__init__"]], "_depends_on() (ase2sprkkr.potentials.custom_potential_section.custompotentialsection method)": [[1123, "ase2sprkkr.potentials.custom_potential_section.CustomPotentialSection._depends_on"]], "_set_from_atoms() (ase2sprkkr.potentials.custom_potential_section.custompotentialsection method)": [[1123, "ase2sprkkr.potentials.custom_potential_section.CustomPotentialSection._set_from_atoms"]], "_update_atoms() (ase2sprkkr.potentials.custom_potential_section.custompotentialsection method)": [[1123, "ase2sprkkr.potentials.custom_potential_section.CustomPotentialSection._update_atoms"]], "reset() (ase2sprkkr.potentials.custom_potential_section.custompotentialsection method)": [[1123, "ase2sprkkr.potentials.custom_potential_section.CustomPotentialSection.reset"]], "custompotentialsectiondefinition (class in ase2sprkkr.potentials.custom_potential_section)": [[1124, "ase2sprkkr.potentials.custom_potential_section.CustomPotentialSectionDefinition"]], "__init__() (ase2sprkkr.potentials.custom_potential_section.custompotentialsectiondefinition method)": [[1124, "ase2sprkkr.potentials.custom_potential_section.CustomPotentialSectionDefinition.__init__"]], "mandatory (ase2sprkkr.potentials.custom_potential_section.custompotentialsectiondefinition attribute)": [[1124, "ase2sprkkr.potentials.custom_potential_section.CustomPotentialSectionDefinition.mandatory"]], "name_value_delimiter (ase2sprkkr.potentials.custom_potential_section.custompotentialsectiondefinition attribute)": [[1124, "ase2sprkkr.potentials.custom_potential_section.CustomPotentialSectionDefinition.name_value_delimiter"]], "prefix (ase2sprkkr.potentials.custom_potential_section.custompotentialsectiondefinition attribute)": [[1124, "ase2sprkkr.potentials.custom_potential_section.CustomPotentialSectionDefinition.prefix"]], "customsectiontoken (class in ase2sprkkr.potentials.custom_potential_section)": [[1125, "ase2sprkkr.potentials.custom_potential_section.CustomSectionToken"]], "__init__() (ase2sprkkr.potentials.custom_potential_section.customsectiontoken method)": [[1125, "ase2sprkkr.potentials.custom_potential_section.CustomSectionToken.__init__"]], "_abc_impl (ase2sprkkr.potentials.custom_potential_section.customsectiontoken attribute)": [[1125, "ase2sprkkr.potentials.custom_potential_section.CustomSectionToken._abc_impl"]], "name (ase2sprkkr.potentials.custom_potential_section.customsectiontoken attribute)": [[1125, "ase2sprkkr.potentials.custom_potential_section.CustomSectionToken.name"]], "parseimpl() (ase2sprkkr.potentials.custom_potential_section.customsectiontoken method)": [[1125, "ase2sprkkr.potentials.custom_potential_section.CustomSectionToken.parseImpl"]], "pattern (ase2sprkkr.potentials.custom_potential_section.customsectiontoken attribute)": [[1125, "ase2sprkkr.potentials.custom_potential_section.CustomSectionToken.pattern"]], "i (ase2sprkkr.potentials.custom_potential_section.sectionstring attribute)": [[1126, "ase2sprkkr.potentials.custom_potential_section.SectionString.I"]], "sectionstring (class in ase2sprkkr.potentials.custom_potential_section)": [[1126, "ase2sprkkr.potentials.custom_potential_section.SectionString"]], "__init__() (ase2sprkkr.potentials.custom_potential_section.sectionstring method)": [[1126, "ase2sprkkr.potentials.custom_potential_section.SectionString.__init__"]], "_grammar (ase2sprkkr.potentials.custom_potential_section.sectionstring attribute)": [[1126, "ase2sprkkr.potentials.custom_potential_section.SectionString._grammar"]], "delimiter_pattern (ase2sprkkr.potentials.custom_potential_section.sectionstring attribute)": [[1126, "ase2sprkkr.potentials.custom_potential_section.SectionString.delimiter_pattern"]], "grammar_name() (ase2sprkkr.potentials.custom_potential_section.sectionstring method)": [[1126, "ase2sprkkr.potentials.custom_potential_section.SectionString.grammar_name"]], "grammar_of_delimiter (ase2sprkkr.potentials.custom_potential_section.sectionstring attribute)": [[1126, "ase2sprkkr.potentials.custom_potential_section.SectionString.grammar_of_delimiter"]], "write() (ase2sprkkr.potentials.custom_potential_section.sectionstring method)": [[1126, "ase2sprkkr.potentials.custom_potential_section.SectionString.write"]], "ase2sprkkr.potentials.definitions": [[1127, "module-ase2sprkkr.potentials.definitions"]], "ase2sprkkr.potentials.definitions.potential": [[1128, "module-ase2sprkkr.potentials.definitions.potential"]], "potential_definition (in module ase2sprkkr.potentials.definitions.potential)": [[1129, "ase2sprkkr.potentials.definitions.potential.potential_definition"]], "ase2sprkkr.potentials.definitions.sections": [[1130, "module-ase2sprkkr.potentials.definitions.sections"]], "_sections() (in module ase2sprkkr.potentials.definitions.sections)": [[1131, "ase2sprkkr.potentials.definitions.sections._sections"]], "ase2sprkkr.potentials.definitions.sections.charge": [[1132, "module-ase2sprkkr.potentials.definitions.sections.charge"]], "chargesection (class in ase2sprkkr.potentials.definitions.sections.charge)": [[1133, "ase2sprkkr.potentials.definitions.sections.charge.ChargeSection"]], "__init__() (ase2sprkkr.potentials.definitions.sections.charge.chargesection method)": [[1133, "ase2sprkkr.potentials.definitions.sections.charge.ChargeSection.__init__"]], "chargesectiondefinition (class in ase2sprkkr.potentials.definitions.sections.charge)": [[1134, "ase2sprkkr.potentials.definitions.sections.charge.ChargeSectionDefinition"]], "__init__() (ase2sprkkr.potentials.definitions.sections.charge.chargesectiondefinition method)": [[1134, "ase2sprkkr.potentials.definitions.sections.charge.ChargeSectionDefinition.__init__"]], "repeated_class (ase2sprkkr.potentials.definitions.sections.charge.chargesectiondefinition attribute)": [[1134, "ase2sprkkr.potentials.definitions.sections.charge.ChargeSectionDefinition.repeated_class"]], "result_class (ase2sprkkr.potentials.definitions.sections.charge.chargesectiondefinition attribute)": [[1134, "ase2sprkkr.potentials.definitions.sections.charge.ChargeSectionDefinition.result_class"]], "chargessection (class in ase2sprkkr.potentials.definitions.sections.charge)": [[1135, "ase2sprkkr.potentials.definitions.sections.charge.ChargesSection"]], "__init__() (ase2sprkkr.potentials.definitions.sections.charge.chargessection method)": [[1135, "ase2sprkkr.potentials.definitions.sections.charge.ChargesSection.__init__"]], "property_label (ase2sprkkr.potentials.definitions.sections.charge.chargessection attribute)": [[1135, "ase2sprkkr.potentials.definitions.sections.charge.ChargesSection.property_label"]], "property_name (ase2sprkkr.potentials.definitions.sections.charge.chargessection attribute)": [[1135, "ase2sprkkr.potentials.definitions.sections.charge.ChargesSection.property_name"]], "section (in module ase2sprkkr.potentials.definitions.sections.charge)": [[1136, "ase2sprkkr.potentials.definitions.sections.charge.section"]], "ase2sprkkr.potentials.definitions.sections.charge_moments": [[1137, "module-ase2sprkkr.potentials.definitions.sections.charge_moments"]], "chargemomentssection (class in ase2sprkkr.potentials.definitions.sections.charge_moments)": [[1138, "ase2sprkkr.potentials.definitions.sections.charge_moments.ChargeMomentsSection"]], "__init__() (ase2sprkkr.potentials.definitions.sections.charge_moments.chargemomentssection method)": [[1138, "ase2sprkkr.potentials.definitions.sections.charge_moments.ChargeMomentsSection.__init__"]], "chargemomentssectiondefinition (class in ase2sprkkr.potentials.definitions.sections.charge_moments)": [[1139, "ase2sprkkr.potentials.definitions.sections.charge_moments.ChargeMomentsSectionDefinition"]], "__init__() (ase2sprkkr.potentials.definitions.sections.charge_moments.chargemomentssectiondefinition method)": [[1139, "ase2sprkkr.potentials.definitions.sections.charge_moments.ChargeMomentsSectionDefinition.__init__"]], "array_name (ase2sprkkr.potentials.definitions.sections.charge_moments.chargemomentssectiondefinition attribute)": [[1139, "ase2sprkkr.potentials.definitions.sections.charge_moments.ChargeMomentsSectionDefinition.array_name"]], "result_class (ase2sprkkr.potentials.definitions.sections.charge_moments.chargemomentssectiondefinition attribute)": [[1139, "ase2sprkkr.potentials.definitions.sections.charge_moments.ChargeMomentsSectionDefinition.result_class"]], "section (in module ase2sprkkr.potentials.definitions.sections.charge_moments)": [[1140, "ase2sprkkr.potentials.definitions.sections.charge_moments.section"]], "ase2sprkkr.potentials.definitions.sections.global_system_parameter": [[1141, "module-ase2sprkkr.potentials.definitions.sections.global_system_parameter"]], "globalsystemparameter (class in ase2sprkkr.potentials.definitions.sections.global_system_parameter)": [[1142, "ase2sprkkr.potentials.definitions.sections.global_system_parameter.GlobalSystemParameter"]], "__init__() (ase2sprkkr.potentials.definitions.sections.global_system_parameter.globalsystemparameter method)": [[1142, "ase2sprkkr.potentials.definitions.sections.global_system_parameter.GlobalSystemParameter.__init__"]], "_set_from_atoms() (ase2sprkkr.potentials.definitions.sections.global_system_parameter.globalsystemparameter method)": [[1142, "ase2sprkkr.potentials.definitions.sections.global_system_parameter.GlobalSystemParameter._set_from_atoms"]], "globalsystemparameterdefinition (class in ase2sprkkr.potentials.definitions.sections.global_system_parameter)": [[1143, "ase2sprkkr.potentials.definitions.sections.global_system_parameter.GlobalSystemParameterDefinition"]], "__init__() (ase2sprkkr.potentials.definitions.sections.global_system_parameter.globalsystemparameterdefinition method)": [[1143, "ase2sprkkr.potentials.definitions.sections.global_system_parameter.GlobalSystemParameterDefinition.__init__"]], "result_class (ase2sprkkr.potentials.definitions.sections.global_system_parameter.globalsystemparameterdefinition attribute)": [[1143, "ase2sprkkr.potentials.definitions.sections.global_system_parameter.GlobalSystemParameterDefinition.result_class"]], "section (in module ase2sprkkr.potentials.definitions.sections.global_system_parameter)": [[1144, "ase2sprkkr.potentials.definitions.sections.global_system_parameter.section"]], "ase2sprkkr.potentials.definitions.sections.host_madelung_potential": [[1145, "module-ase2sprkkr.potentials.definitions.sections.host_madelung_potential"]], "hostmadelungpotentialsection (class in ase2sprkkr.potentials.definitions.sections.host_madelung_potential)": [[1146, "ase2sprkkr.potentials.definitions.sections.host_madelung_potential.HostMadelungPotentialSection"]], "__init__() (ase2sprkkr.potentials.definitions.sections.host_madelung_potential.hostmadelungpotentialsection method)": [[1146, "ase2sprkkr.potentials.definitions.sections.host_madelung_potential.HostMadelungPotentialSection.__init__"]], "hostmadelungpotentialsectiondefinition (class in ase2sprkkr.potentials.definitions.sections.host_madelung_potential)": [[1147, "ase2sprkkr.potentials.definitions.sections.host_madelung_potential.HostMadelungPotentialSectionDefinition"]], "__init__() (ase2sprkkr.potentials.definitions.sections.host_madelung_potential.hostmadelungpotentialsectiondefinition method)": [[1147, "ase2sprkkr.potentials.definitions.sections.host_madelung_potential.HostMadelungPotentialSectionDefinition.__init__"]], "array_name (ase2sprkkr.potentials.definitions.sections.host_madelung_potential.hostmadelungpotentialsectiondefinition attribute)": [[1147, "ase2sprkkr.potentials.definitions.sections.host_madelung_potential.HostMadelungPotentialSectionDefinition.array_name"]], "result_class (ase2sprkkr.potentials.definitions.sections.host_madelung_potential.hostmadelungpotentialsectiondefinition attribute)": [[1147, "ase2sprkkr.potentials.definitions.sections.host_madelung_potential.HostMadelungPotentialSectionDefinition.result_class"]], "section (in module ase2sprkkr.potentials.definitions.sections.host_madelung_potential)": [[1148, "ase2sprkkr.potentials.definitions.sections.host_madelung_potential.section"]], "ase2sprkkr.potentials.definitions.sections.lattice": [[1149, "module-ase2sprkkr.potentials.definitions.sections.lattice"]], "latticesection (class in ase2sprkkr.potentials.definitions.sections.lattice)": [[1150, "ase2sprkkr.potentials.definitions.sections.lattice.LatticeSection"]], "__init__() (ase2sprkkr.potentials.definitions.sections.lattice.latticesection method)": [[1150, "ase2sprkkr.potentials.definitions.sections.lattice.LatticeSection.__init__"]], "_set_from_atoms() (ase2sprkkr.potentials.definitions.sections.lattice.latticesection method)": [[1150, "ase2sprkkr.potentials.definitions.sections.lattice.LatticeSection._set_from_atoms"]], "_update_atoms() (ase2sprkkr.potentials.definitions.sections.lattice.latticesection method)": [[1150, "ase2sprkkr.potentials.definitions.sections.lattice.LatticeSection._update_atoms"]], "latticesectiondefinition (class in ase2sprkkr.potentials.definitions.sections.lattice)": [[1151, "ase2sprkkr.potentials.definitions.sections.lattice.LatticeSectionDefinition"]], "__init__() (ase2sprkkr.potentials.definitions.sections.lattice.latticesectiondefinition method)": [[1151, "ase2sprkkr.potentials.definitions.sections.lattice.LatticeSectionDefinition.__init__"]], "result_class (ase2sprkkr.potentials.definitions.sections.lattice.latticesectiondefinition attribute)": [[1151, "ase2sprkkr.potentials.definitions.sections.lattice.LatticeSectionDefinition.result_class"]], "validate() (ase2sprkkr.potentials.definitions.sections.lattice.latticesectiondefinition method)": [[1151, "ase2sprkkr.potentials.definitions.sections.lattice.LatticeSectionDefinition.validate"]], "section (in module ase2sprkkr.potentials.definitions.sections.lattice)": [[1152, "ase2sprkkr.potentials.definitions.sections.lattice.section"]], "ase2sprkkr.potentials.definitions.sections.mesh_information": [[1153, "module-ase2sprkkr.potentials.definitions.sections.mesh_information"]], "meshinformationsection (class in ase2sprkkr.potentials.definitions.sections.mesh_information)": [[1154, "ase2sprkkr.potentials.definitions.sections.mesh_information.MeshInformationSection"]], "__init__() (ase2sprkkr.potentials.definitions.sections.mesh_information.meshinformationsection method)": [[1154, "ase2sprkkr.potentials.definitions.sections.mesh_information.MeshInformationSection.__init__"]], "_value_class (ase2sprkkr.potentials.definitions.sections.mesh_information.meshinformationsection attribute)": [[1154, "ase2sprkkr.potentials.definitions.sections.mesh_information.MeshInformationSection._value_class"]], "_value_name (ase2sprkkr.potentials.definitions.sections.mesh_information.meshinformationsection attribute)": [[1154, "ase2sprkkr.potentials.definitions.sections.mesh_information.MeshInformationSection._value_name"]], "meshinformationsectiondefinition (class in ase2sprkkr.potentials.definitions.sections.mesh_information)": [[1155, "ase2sprkkr.potentials.definitions.sections.mesh_information.MeshInformationSectionDefinition"]], "__init__() (ase2sprkkr.potentials.definitions.sections.mesh_information.meshinformationsectiondefinition method)": [[1155, "ase2sprkkr.potentials.definitions.sections.mesh_information.MeshInformationSectionDefinition.__init__"]], "result_class (ase2sprkkr.potentials.definitions.sections.mesh_information.meshinformationsectiondefinition attribute)": [[1155, "ase2sprkkr.potentials.definitions.sections.mesh_information.MeshInformationSectionDefinition.result_class"]], "section (in module ase2sprkkr.potentials.definitions.sections.mesh_information)": [[1156, "ase2sprkkr.potentials.definitions.sections.mesh_information.section"]], "ase2sprkkr.potentials.definitions.sections.moments": [[1157, "module-ase2sprkkr.potentials.definitions.sections.moments"]], "momentsection (class in ase2sprkkr.potentials.definitions.sections.moments)": [[1158, "ase2sprkkr.potentials.definitions.sections.moments.MomentSection"]], "__init__() (ase2sprkkr.potentials.definitions.sections.moments.momentsection method)": [[1158, "ase2sprkkr.potentials.definitions.sections.moments.MomentSection.__init__"]], "momentssection (class in ase2sprkkr.potentials.definitions.sections.moments)": [[1159, "ase2sprkkr.potentials.definitions.sections.moments.MomentsSection"]], "__init__() (ase2sprkkr.potentials.definitions.sections.moments.momentssection method)": [[1159, "ase2sprkkr.potentials.definitions.sections.moments.MomentsSection.__init__"]], "property_name (ase2sprkkr.potentials.definitions.sections.moments.momentssection attribute)": [[1159, "ase2sprkkr.potentials.definitions.sections.moments.MomentsSection.property_name"]], "write_data() (ase2sprkkr.potentials.definitions.sections.moments.momentssection method)": [[1159, "ase2sprkkr.potentials.definitions.sections.moments.MomentsSection.write_data"]], "momentssectiondefinition (class in ase2sprkkr.potentials.definitions.sections.moments)": [[1160, "ase2sprkkr.potentials.definitions.sections.moments.MomentsSectionDefinition"]], "__init__() (ase2sprkkr.potentials.definitions.sections.moments.momentssectiondefinition method)": [[1160, "ase2sprkkr.potentials.definitions.sections.moments.MomentsSectionDefinition.__init__"]], "repeated_class (ase2sprkkr.potentials.definitions.sections.moments.momentssectiondefinition attribute)": [[1160, "ase2sprkkr.potentials.definitions.sections.moments.MomentsSectionDefinition.repeated_class"]], "result_class (ase2sprkkr.potentials.definitions.sections.moments.momentssectiondefinition attribute)": [[1160, "ase2sprkkr.potentials.definitions.sections.moments.MomentsSectionDefinition.result_class"]], "section (in module ase2sprkkr.potentials.definitions.sections.moments)": [[1161, "ase2sprkkr.potentials.definitions.sections.moments.section"]], "ase2sprkkr.potentials.definitions.sections.occupation": [[1162, "module-ase2sprkkr.potentials.definitions.sections.occupation"]], "occupationsection (class in ase2sprkkr.potentials.definitions.sections.occupation)": [[1163, "ase2sprkkr.potentials.definitions.sections.occupation.OccupationSection"]], "__init__() (ase2sprkkr.potentials.definitions.sections.occupation.occupationsection method)": [[1163, "ase2sprkkr.potentials.definitions.sections.occupation.OccupationSection.__init__"]], "_set_from_atoms() (ase2sprkkr.potentials.definitions.sections.occupation.occupationsection method)": [[1163, "ase2sprkkr.potentials.definitions.sections.occupation.OccupationSection._set_from_atoms"]], "_update_atoms() (ase2sprkkr.potentials.definitions.sections.occupation.occupationsection method)": [[1163, "ase2sprkkr.potentials.definitions.sections.occupation.OccupationSection._update_atoms"]], "occupationsectiondefinition (class in ase2sprkkr.potentials.definitions.sections.occupation)": [[1164, "ase2sprkkr.potentials.definitions.sections.occupation.OccupationSectionDefinition"]], "__init__() (ase2sprkkr.potentials.definitions.sections.occupation.occupationsectiondefinition method)": [[1164, "ase2sprkkr.potentials.definitions.sections.occupation.OccupationSectionDefinition.__init__"]], "depends_on() (ase2sprkkr.potentials.definitions.sections.occupation.occupationsectiondefinition method)": [[1164, "ase2sprkkr.potentials.definitions.sections.occupation.OccupationSectionDefinition.depends_on"]], "result_class (ase2sprkkr.potentials.definitions.sections.occupation.occupationsectiondefinition attribute)": [[1164, "ase2sprkkr.potentials.definitions.sections.occupation.OccupationSectionDefinition.result_class"]], "section (in module ase2sprkkr.potentials.definitions.sections.occupation)": [[1165, "ase2sprkkr.potentials.definitions.sections.occupation.section"]], "ase2sprkkr.potentials.definitions.sections.potential": [[1166, "module-ase2sprkkr.potentials.definitions.sections.potential"]], "potentialsection (class in ase2sprkkr.potentials.definitions.sections.potential)": [[1167, "ase2sprkkr.potentials.definitions.sections.potential.PotentialSection"]], "__init__() (ase2sprkkr.potentials.definitions.sections.potential.potentialsection method)": [[1167, "ase2sprkkr.potentials.definitions.sections.potential.PotentialSection.__init__"]], "potentialsectiondefinition (class in ase2sprkkr.potentials.definitions.sections.potential)": [[1168, "ase2sprkkr.potentials.definitions.sections.potential.PotentialSectionDefinition"]], "__init__() (ase2sprkkr.potentials.definitions.sections.potential.potentialsectiondefinition method)": [[1168, "ase2sprkkr.potentials.definitions.sections.potential.PotentialSectionDefinition.__init__"]], "repeated_class (ase2sprkkr.potentials.definitions.sections.potential.potentialsectiondefinition attribute)": [[1168, "ase2sprkkr.potentials.definitions.sections.potential.PotentialSectionDefinition.repeated_class"]], "result_class (ase2sprkkr.potentials.definitions.sections.potential.potentialsectiondefinition attribute)": [[1168, "ase2sprkkr.potentials.definitions.sections.potential.PotentialSectionDefinition.result_class"]], "potentialssection (class in ase2sprkkr.potentials.definitions.sections.potential)": [[1169, "ase2sprkkr.potentials.definitions.sections.potential.PotentialsSection"]], "__init__() (ase2sprkkr.potentials.definitions.sections.potential.potentialssection method)": [[1169, "ase2sprkkr.potentials.definitions.sections.potential.PotentialsSection.__init__"]], "property_label (ase2sprkkr.potentials.definitions.sections.potential.potentialssection attribute)": [[1169, "ase2sprkkr.potentials.definitions.sections.potential.PotentialsSection.property_label"]], "property_name (ase2sprkkr.potentials.definitions.sections.potential.potentialssection attribute)": [[1169, "ase2sprkkr.potentials.definitions.sections.potential.PotentialsSection.property_name"]], "section (in module ase2sprkkr.potentials.definitions.sections.potential)": [[1170, "ase2sprkkr.potentials.definitions.sections.potential.section"]], "ase2sprkkr.potentials.definitions.sections.reference_system": [[1171, "module-ase2sprkkr.potentials.definitions.sections.reference_system"]], "referencesystemsection (class in ase2sprkkr.potentials.definitions.sections.reference_system)": [[1172, "ase2sprkkr.potentials.definitions.sections.reference_system.ReferenceSystemSection"]], "__init__() (ase2sprkkr.potentials.definitions.sections.reference_system.referencesystemsection method)": [[1172, "ase2sprkkr.potentials.definitions.sections.reference_system.ReferenceSystemSection.__init__"]], "_set_from_atoms() (ase2sprkkr.potentials.definitions.sections.reference_system.referencesystemsection method)": [[1172, "ase2sprkkr.potentials.definitions.sections.reference_system.ReferenceSystemSection._set_from_atoms"]], "_value_class (ase2sprkkr.potentials.definitions.sections.reference_system.referencesystemsection attribute)": [[1172, "ase2sprkkr.potentials.definitions.sections.reference_system.ReferenceSystemSection._value_class"]], "_value_name (ase2sprkkr.potentials.definitions.sections.reference_system.referencesystemsection attribute)": [[1172, "ase2sprkkr.potentials.definitions.sections.reference_system.ReferenceSystemSection._value_name"]], "referencesystemsectiondefinition (class in ase2sprkkr.potentials.definitions.sections.reference_system)": [[1173, "ase2sprkkr.potentials.definitions.sections.reference_system.ReferenceSystemSectionDefinition"]], "__init__() (ase2sprkkr.potentials.definitions.sections.reference_system.referencesystemsectiondefinition method)": [[1173, "ase2sprkkr.potentials.definitions.sections.reference_system.ReferenceSystemSectionDefinition.__init__"]], "result_class (ase2sprkkr.potentials.definitions.sections.reference_system.referencesystemsectiondefinition attribute)": [[1173, "ase2sprkkr.potentials.definitions.sections.reference_system.ReferenceSystemSectionDefinition.result_class"]], "validate() (ase2sprkkr.potentials.definitions.sections.reference_system.referencesystemsectiondefinition method)": [[1173, "ase2sprkkr.potentials.definitions.sections.reference_system.ReferenceSystemSectionDefinition.validate"]], "section (in module ase2sprkkr.potentials.definitions.sections.reference_system)": [[1174, "ase2sprkkr.potentials.definitions.sections.reference_system.section"]], "ase2sprkkr.potentials.definitions.sections.scf_info": [[1175, "module-ase2sprkkr.potentials.definitions.sections.scf_info"]], "scfinfosection (class in ase2sprkkr.potentials.definitions.sections.scf_info)": [[1176, "ase2sprkkr.potentials.definitions.sections.scf_info.ScfInfoSection"]], "__init__() (ase2sprkkr.potentials.definitions.sections.scf_info.scfinfosection method)": [[1176, "ase2sprkkr.potentials.definitions.sections.scf_info.ScfInfoSection.__init__"]], "_depends_on() (ase2sprkkr.potentials.definitions.sections.scf_info.scfinfosection method)": [[1176, "ase2sprkkr.potentials.definitions.sections.scf_info.ScfInfoSection._depends_on"]], "_set_from_atoms() (ase2sprkkr.potentials.definitions.sections.scf_info.scfinfosection method)": [[1176, "ase2sprkkr.potentials.definitions.sections.scf_info.ScfInfoSection._set_from_atoms"]], "_update_atoms() (ase2sprkkr.potentials.definitions.sections.scf_info.scfinfosection method)": [[1176, "ase2sprkkr.potentials.definitions.sections.scf_info.ScfInfoSection._update_atoms"]], "scfinfosectiondefinition (class in ase2sprkkr.potentials.definitions.sections.scf_info)": [[1177, "ase2sprkkr.potentials.definitions.sections.scf_info.ScfInfoSectionDefinition"]], "__init__() (ase2sprkkr.potentials.definitions.sections.scf_info.scfinfosectiondefinition method)": [[1177, "ase2sprkkr.potentials.definitions.sections.scf_info.ScfInfoSectionDefinition.__init__"]], "result_class (ase2sprkkr.potentials.definitions.sections.scf_info.scfinfosectiondefinition attribute)": [[1177, "ase2sprkkr.potentials.definitions.sections.scf_info.ScfInfoSectionDefinition.result_class"]], "section (in module ase2sprkkr.potentials.definitions.sections.scf_info)": [[1178, "ase2sprkkr.potentials.definitions.sections.scf_info.section"]], "ase2sprkkr.potentials.definitions.sections.sites": [[1179, "module-ase2sprkkr.potentials.definitions.sections.sites"]], "sitessection (class in ase2sprkkr.potentials.definitions.sections.sites)": [[1180, "ase2sprkkr.potentials.definitions.sections.sites.SitesSection"]], "__init__() (ase2sprkkr.potentials.definitions.sections.sites.sitessection method)": [[1180, "ase2sprkkr.potentials.definitions.sections.sites.SitesSection.__init__"]], "_depends_on() (ase2sprkkr.potentials.definitions.sections.sites.sitessection method)": [[1180, "ase2sprkkr.potentials.definitions.sections.sites.SitesSection._depends_on"]], "_set_from_atoms() (ase2sprkkr.potentials.definitions.sections.sites.sitessection method)": [[1180, "ase2sprkkr.potentials.definitions.sections.sites.SitesSection._set_from_atoms"]], "_update_atoms() (ase2sprkkr.potentials.definitions.sections.sites.sitessection method)": [[1180, "ase2sprkkr.potentials.definitions.sections.sites.SitesSection._update_atoms"]], "sitessectiondefinition (class in ase2sprkkr.potentials.definitions.sections.sites)": [[1181, "ase2sprkkr.potentials.definitions.sections.sites.SitesSectionDefinition"]], "__init__() (ase2sprkkr.potentials.definitions.sections.sites.sitessectiondefinition method)": [[1181, "ase2sprkkr.potentials.definitions.sections.sites.SitesSectionDefinition.__init__"]], "result_class (ase2sprkkr.potentials.definitions.sections.sites.sitessectiondefinition attribute)": [[1181, "ase2sprkkr.potentials.definitions.sections.sites.SitesSectionDefinition.result_class"]], "section (in module ase2sprkkr.potentials.definitions.sections.sites)": [[1182, "ase2sprkkr.potentials.definitions.sections.sites.section"]], "ase2sprkkr.potentials.definitions.sections.types": [[1183, "module-ase2sprkkr.potentials.definitions.sections.types"]], "typessection (class in ase2sprkkr.potentials.definitions.sections.types)": [[1184, "ase2sprkkr.potentials.definitions.sections.types.TypesSection"]], "__init__() (ase2sprkkr.potentials.definitions.sections.types.typessection method)": [[1184, "ase2sprkkr.potentials.definitions.sections.types.TypesSection.__init__"]], "_value_class (ase2sprkkr.potentials.definitions.sections.types.typessection attribute)": [[1184, "ase2sprkkr.potentials.definitions.sections.types.TypesSection._value_class"]], "_value_name (ase2sprkkr.potentials.definitions.sections.types.typessection attribute)": [[1184, "ase2sprkkr.potentials.definitions.sections.types.TypesSection._value_name"]], "typessectiondefinition (class in ase2sprkkr.potentials.definitions.sections.types)": [[1185, "ase2sprkkr.potentials.definitions.sections.types.TypesSectionDefinition"]], "__init__() (ase2sprkkr.potentials.definitions.sections.types.typessectiondefinition method)": [[1185, "ase2sprkkr.potentials.definitions.sections.types.TypesSectionDefinition.__init__"]], "result_class (ase2sprkkr.potentials.definitions.sections.types.typessectiondefinition attribute)": [[1185, "ase2sprkkr.potentials.definitions.sections.types.TypesSectionDefinition.result_class"]], "section (in module ase2sprkkr.potentials.definitions.sections.types)": [[1186, "ase2sprkkr.potentials.definitions.sections.types.section"]], "ase2sprkkr.potentials.potential_definitions": [[1187, "module-ase2sprkkr.potentials.potential_definitions"]], "asearraysectiondefinition (class in ase2sprkkr.potentials.potential_definitions)": [[1188, "ase2sprkkr.potentials.potential_definitions.ASEArraySectionDefinition"]], "__init__() (ase2sprkkr.potentials.potential_definitions.asearraysectiondefinition method)": [[1188, "ase2sprkkr.potentials.potential_definitions.ASEArraySectionDefinition.__init__"]], "depends_on() (ase2sprkkr.potentials.potential_definitions.asearraysectiondefinition method)": [[1188, "ase2sprkkr.potentials.potential_definitions.ASEArraySectionDefinition.depends_on"]], "result_class (ase2sprkkr.potentials.potential_definitions.asearraysectiondefinition attribute)": [[1188, "ase2sprkkr.potentials.potential_definitions.ASEArraySectionDefinition.result_class"]], "potsectiondefinition (class in ase2sprkkr.potentials.potential_definitions)": [[1189, "ase2sprkkr.potentials.potential_definitions.PotSectionDefinition"]], "__init__() (ase2sprkkr.potentials.potential_definitions.potsectiondefinition method)": [[1189, "ase2sprkkr.potentials.potential_definitions.PotSectionDefinition.__init__"]], "child_class (ase2sprkkr.potentials.potential_definitions.potsectiondefinition attribute)": [[1189, "ase2sprkkr.potentials.potential_definitions.PotSectionDefinition.child_class"]], "custom_class() (ase2sprkkr.potentials.potential_definitions.potsectiondefinition static method)": [[1189, "ase2sprkkr.potentials.potential_definitions.PotSectionDefinition.custom_class"]], "delimiter (ase2sprkkr.potentials.potential_definitions.potsectiondefinition attribute)": [[1189, "ase2sprkkr.potentials.potential_definitions.PotSectionDefinition.delimiter"]], "depends_on() (ase2sprkkr.potentials.potential_definitions.potsectiondefinition method)": [[1189, "ase2sprkkr.potentials.potential_definitions.PotSectionDefinition.depends_on"]], "force_order (ase2sprkkr.potentials.potential_definitions.potsectiondefinition attribute)": [[1189, "ase2sprkkr.potentials.potential_definitions.PotSectionDefinition.force_order"]], "grammar_of_delimiter (ase2sprkkr.potentials.potential_definitions.potsectiondefinition attribute)": [[1189, "ase2sprkkr.potentials.potential_definitions.PotSectionDefinition.grammar_of_delimiter"]], "result_class (ase2sprkkr.potentials.potential_definitions.potsectiondefinition attribute)": [[1189, "ase2sprkkr.potentials.potential_definitions.PotSectionDefinition.result_class"]], "value_name_format (ase2sprkkr.potentials.potential_definitions.potsectiondefinition attribute)": [[1189, "ase2sprkkr.potentials.potential_definitions.PotSectionDefinition.value_name_format"]], "potvaluedefinition (class in ase2sprkkr.potentials.potential_definitions)": [[1190, "ase2sprkkr.potentials.potential_definitions.PotValueDefinition"]], "__init__() (ase2sprkkr.potentials.potential_definitions.potvaluedefinition method)": [[1190, "ase2sprkkr.potentials.potential_definitions.PotValueDefinition.__init__"]], "grammar_of_delimiter (ase2sprkkr.potentials.potential_definitions.potvaluedefinition attribute)": [[1190, "ase2sprkkr.potentials.potential_definitions.PotValueDefinition.grammar_of_delimiter"]], "name_value_delimiter (ase2sprkkr.potentials.potential_definitions.potvaluedefinition attribute)": [[1190, "ase2sprkkr.potentials.potential_definitions.PotValueDefinition.name_value_delimiter"]], "prefix (ase2sprkkr.potentials.potential_definitions.potvaluedefinition attribute)": [[1190, "ase2sprkkr.potentials.potential_definitions.PotValueDefinition.prefix"]], "type_of_dangerous (ase2sprkkr.potentials.potential_definitions.potvaluedefinition attribute)": [[1190, "ase2sprkkr.potentials.potential_definitions.PotValueDefinition.type_of_dangerous"]], "potentialdefinition (class in ase2sprkkr.potentials.potential_definitions)": [[1191, "ase2sprkkr.potentials.potential_definitions.PotentialDefinition"]], "__init__() (ase2sprkkr.potentials.potential_definitions.potentialdefinition method)": [[1191, "ase2sprkkr.potentials.potential_definitions.PotentialDefinition.__init__"]], "_generic_info() (ase2sprkkr.potentials.potential_definitions.potentialdefinition method)": [[1191, "ase2sprkkr.potentials.potential_definitions.PotentialDefinition._generic_info"]], "child_class (ase2sprkkr.potentials.potential_definitions.potentialdefinition attribute)": [[1191, "ase2sprkkr.potentials.potential_definitions.PotentialDefinition.child_class"]], "configuration_type_name (ase2sprkkr.potentials.potential_definitions.potentialdefinition attribute)": [[1191, "ase2sprkkr.potentials.potential_definitions.PotentialDefinition.configuration_type_name"]], "custom_class (ase2sprkkr.potentials.potential_definitions.potentialdefinition attribute)": [[1191, "ase2sprkkr.potentials.potential_definitions.PotentialDefinition.custom_class"]], "custom_name_characters (ase2sprkkr.potentials.potential_definitions.potentialdefinition attribute)": [[1191, "ase2sprkkr.potentials.potential_definitions.PotentialDefinition.custom_name_characters"]], "custom_value_grammar() (ase2sprkkr.potentials.potential_definitions.potentialdefinition class method)": [[1191, "ase2sprkkr.potentials.potential_definitions.PotentialDefinition.custom_value_grammar"]], "delimiter (ase2sprkkr.potentials.potential_definitions.potentialdefinition attribute)": [[1191, "ase2sprkkr.potentials.potential_definitions.PotentialDefinition.delimiter"]], "force_order (ase2sprkkr.potentials.potential_definitions.potentialdefinition attribute)": [[1191, "ase2sprkkr.potentials.potential_definitions.PotentialDefinition.force_order"]], "grammar_of_delimiter (ase2sprkkr.potentials.potential_definitions.potentialdefinition attribute)": [[1191, "ase2sprkkr.potentials.potential_definitions.PotentialDefinition.grammar_of_delimiter"]], "result_class (ase2sprkkr.potentials.potential_definitions.potentialdefinition attribute)": [[1191, "ase2sprkkr.potentials.potential_definitions.PotentialDefinition.result_class"]], "separator (class in ase2sprkkr.potentials.potential_definitions)": [[1192, "ase2sprkkr.potentials.potential_definitions.Separator"]], "__init__() (ase2sprkkr.potentials.potential_definitions.separator method)": [[1192, "ase2sprkkr.potentials.potential_definitions.Separator.__init__"]], "separator_type (ase2sprkkr.potentials.potential_definitions.separator attribute)": [[1192, "ase2sprkkr.potentials.potential_definitions.Separator.separator_type"]], "ase2sprkkr.potentials.potential_sections": [[1193, "module-ase2sprkkr.potentials.potential_sections"]], "asearraysection (class in ase2sprkkr.potentials.potential_sections)": [[1194, "ase2sprkkr.potentials.potential_sections.ASEArraySection"]], "__init__() (ase2sprkkr.potentials.potential_sections.asearraysection method)": [[1194, "ase2sprkkr.potentials.potential_sections.ASEArraySection.__init__"]], "_depends_on() (ase2sprkkr.potentials.potential_sections.asearraysection method)": [[1194, "ase2sprkkr.potentials.potential_sections.ASEArraySection._depends_on"]], "_set_from_atoms() (ase2sprkkr.potentials.potential_sections.asearraysection method)": [[1194, "ase2sprkkr.potentials.potential_sections.ASEArraySection._set_from_atoms"]], "_update_atoms() (ase2sprkkr.potentials.potential_sections.asearraysection method)": [[1194, "ase2sprkkr.potentials.potential_sections.ASEArraySection._update_atoms"]], "has_any_value() (ase2sprkkr.potentials.potential_sections.asearraysection method)": [[1194, "ase2sprkkr.potentials.potential_sections.ASEArraySection.has_any_value"]], "atomictypepotentialsection (class in ase2sprkkr.potentials.potential_sections)": [[1195, "ase2sprkkr.potentials.potential_sections.AtomicTypePotentialSection"]], "__init__() (ase2sprkkr.potentials.potential_sections.atomictypepotentialsection method)": [[1195, "ase2sprkkr.potentials.potential_sections.AtomicTypePotentialSection.__init__"]], "_depends_on() (ase2sprkkr.potentials.potential_sections.atomictypepotentialsection method)": [[1195, "ase2sprkkr.potentials.potential_sections.AtomicTypePotentialSection._depends_on"]], "_has_data() (ase2sprkkr.potentials.potential_sections.atomictypepotentialsection method)": [[1195, "ase2sprkkr.potentials.potential_sections.AtomicTypePotentialSection._has_data"]], "_set_from_atoms() (ase2sprkkr.potentials.potential_sections.atomictypepotentialsection method)": [[1195, "ase2sprkkr.potentials.potential_sections.AtomicTypePotentialSection._set_from_atoms"]], "_update_atoms() (ase2sprkkr.potentials.potential_sections.atomictypepotentialsection method)": [[1195, "ase2sprkkr.potentials.potential_sections.AtomicTypePotentialSection._update_atoms"]], "property_label (ase2sprkkr.potentials.potential_sections.atomictypepotentialsection property)": [[1195, "ase2sprkkr.potentials.potential_sections.AtomicTypePotentialSection.property_label"]], "read_data() (ase2sprkkr.potentials.potential_sections.atomictypepotentialsection method)": [[1195, "ase2sprkkr.potentials.potential_sections.AtomicTypePotentialSection.read_data"]], "write_data() (ase2sprkkr.potentials.potential_sections.atomictypepotentialsection method)": [[1195, "ase2sprkkr.potentials.potential_sections.AtomicTypePotentialSection.write_data"]], "potentialsection (class in ase2sprkkr.potentials.potential_sections)": [[1196, "ase2sprkkr.potentials.potential_sections.PotentialSection"]], "__init__() (ase2sprkkr.potentials.potential_sections.potentialsection method)": [[1196, "ase2sprkkr.potentials.potential_sections.PotentialSection.__init__"]], "potentialsectiontrait (class in ase2sprkkr.potentials.potential_sections)": [[1197, "ase2sprkkr.potentials.potential_sections.PotentialSectionTrait"]], "__init__() (ase2sprkkr.potentials.potential_sections.potentialsectiontrait method)": [[1197, "ase2sprkkr.potentials.potential_sections.PotentialSectionTrait.__init__"]], "_depends_on() (ase2sprkkr.potentials.potential_sections.potentialsectiontrait method)": [[1197, "ase2sprkkr.potentials.potential_sections.PotentialSectionTrait._depends_on"]], "_set_from_atoms() (ase2sprkkr.potentials.potential_sections.potentialsectiontrait method)": [[1197, "ase2sprkkr.potentials.potential_sections.PotentialSectionTrait._set_from_atoms"]], "_update_atoms() (ase2sprkkr.potentials.potential_sections.potentialsectiontrait method)": [[1197, "ase2sprkkr.potentials.potential_sections.PotentialSectionTrait._update_atoms"]], "reset() (ase2sprkkr.potentials.potential_sections.potentialsectiontrait method)": [[1197, "ase2sprkkr.potentials.potential_sections.PotentialSectionTrait.reset"]], "repeatedpotentialsection (class in ase2sprkkr.potentials.potential_sections)": [[1198, "ase2sprkkr.potentials.potential_sections.RepeatedPotentialSection"]], "__init__() (ase2sprkkr.potentials.potential_sections.repeatedpotentialsection method)": [[1198, "ase2sprkkr.potentials.potential_sections.RepeatedPotentialSection.__init__"]], "uniquelistsection (class in ase2sprkkr.potentials.potential_sections)": [[1199, "ase2sprkkr.potentials.potential_sections.UniqueListSection"]], "__init__() (ase2sprkkr.potentials.potential_sections.uniquelistsection method)": [[1199, "ase2sprkkr.potentials.potential_sections.UniqueListSection.__init__"]], "_set_from_atoms() (ase2sprkkr.potentials.potential_sections.uniquelistsection method)": [[1199, "ase2sprkkr.potentials.potential_sections.UniqueListSection._set_from_atoms"]], "_update_atoms() (ase2sprkkr.potentials.potential_sections.uniquelistsection method)": [[1199, "ase2sprkkr.potentials.potential_sections.UniqueListSection._update_atoms"]], "_value_class (ase2sprkkr.potentials.potential_sections.uniquelistsection attribute)": [[1199, "ase2sprkkr.potentials.potential_sections.UniqueListSection._value_class"]], "_value_name (ase2sprkkr.potentials.potential_sections.uniquelistsection attribute)": [[1199, "ase2sprkkr.potentials.potential_sections.UniqueListSection._value_name"]], "ase2sprkkr.potentials.potentials": [[1200, "module-ase2sprkkr.potentials.potentials"]], "potential (class in ase2sprkkr.potentials.potentials)": [[1201, "ase2sprkkr.potentials.potentials.Potential"]], "__init__() (ase2sprkkr.potentials.potentials.potential method)": [[1201, "ase2sprkkr.potentials.potentials.Potential.__init__"]], "atoms (ase2sprkkr.potentials.potentials.potential property)": [[1201, "ase2sprkkr.potentials.potentials.Potential.atoms"]], "from_atoms() (ase2sprkkr.potentials.potentials.potential class method)": [[1201, "ase2sprkkr.potentials.potentials.Potential.from_atoms"]], "from_file() (ase2sprkkr.potentials.potentials.potential static method)": [[1201, "ase2sprkkr.potentials.potentials.Potential.from_file"]], "from_string() (ase2sprkkr.potentials.potentials.potential class method)": [[1201, "ase2sprkkr.potentials.potentials.Potential.from_string"]], "make_complete() (ase2sprkkr.potentials.potentials.potential method)": [[1201, "ase2sprkkr.potentials.potentials.Potential.make_complete"]], "potential_definition (ase2sprkkr.potentials.potentials.potential attribute)": [[1201, "ase2sprkkr.potentials.potentials.Potential.potential_definition"]], "read_from_file() (ase2sprkkr.potentials.potentials.potential method)": [[1201, "ase2sprkkr.potentials.potentials.Potential.read_from_file"]], "reset() (ase2sprkkr.potentials.potentials.potential method)": [[1201, "ase2sprkkr.potentials.potentials.Potential.reset"]], "set_from_atoms() (ase2sprkkr.potentials.potentials.potential method)": [[1201, "ase2sprkkr.potentials.potentials.Potential.set_from_atoms"]], "update_atoms() (ase2sprkkr.potentials.potentials.potential method)": [[1201, "ase2sprkkr.potentials.potentials.Potential.update_atoms"]], "ase2sprkkr.potentials.test": [[1202, "module-ase2sprkkr.potentials.test"]], "ase2sprkkr.potentials.test.init_tests": [[1203, "module-ase2sprkkr.potentials.test.init_tests"]], "testcase (class in ase2sprkkr.potentials.test.init_tests)": [[1204, "ase2sprkkr.potentials.test.init_tests.TestCase"]], "__init__() (ase2sprkkr.potentials.test.init_tests.testcase method)": [[1204, "ase2sprkkr.potentials.test.init_tests.TestCase.__init__"]], "_calc_args (ase2sprkkr.potentials.test.init_tests.testcase attribute)": [[1204, "ase2sprkkr.potentials.test.init_tests.TestCase._calc_args"]], "_print_output (ase2sprkkr.potentials.test.init_tests.testcase attribute)": [[1204, "ase2sprkkr.potentials.test.init_tests.TestCase._print_output"]], "almost_equal_precision() (ase2sprkkr.potentials.test.init_tests.testcase class method)": [[1204, "ase2sprkkr.potentials.test.init_tests.TestCase.almost_equal_precision"]], "assertalmostequal() (ase2sprkkr.potentials.test.init_tests.testcase method)": [[1204, "ase2sprkkr.potentials.test.init_tests.TestCase.assertAlmostEqual"]], "assertasyncequal() (ase2sprkkr.potentials.test.init_tests.testcase method)": [[1204, "ase2sprkkr.potentials.test.init_tests.TestCase.assertAsyncEqual"]], "assertasyncraises() (ase2sprkkr.potentials.test.init_tests.testcase method)": [[1204, "ase2sprkkr.potentials.test.init_tests.TestCase.assertAsyncRaises"]], "assertequal() (ase2sprkkr.potentials.test.init_tests.testcase method)": [[1204, "ase2sprkkr.potentials.test.init_tests.TestCase.assertEqual"]], "assertfalse() (ase2sprkkr.potentials.test.init_tests.testcase method)": [[1204, "ase2sprkkr.potentials.test.init_tests.TestCase.assertFalse"]], "assertisnone() (ase2sprkkr.potentials.test.init_tests.testcase method)": [[1204, "ase2sprkkr.potentials.test.init_tests.TestCase.assertIsNone"]], "assertnotequal() (ase2sprkkr.potentials.test.init_tests.testcase method)": [[1204, "ase2sprkkr.potentials.test.init_tests.TestCase.assertNotEqual"]], "assertraises() (ase2sprkkr.potentials.test.init_tests.testcase method)": [[1204, "ase2sprkkr.potentials.test.init_tests.TestCase.assertRaises"]], "asserttrue() (ase2sprkkr.potentials.test.init_tests.testcase method)": [[1204, "ase2sprkkr.potentials.test.init_tests.TestCase.assertTrue"]], "calc_args() (ase2sprkkr.potentials.test.init_tests.testcase class method)": [[1204, "ase2sprkkr.potentials.test.init_tests.TestCase.calc_args"]], "runasync() (ase2sprkkr.potentials.test.init_tests.testcase static method)": [[1204, "ase2sprkkr.potentials.test.init_tests.TestCase.runAsync"]], "run_sprkkr() (ase2sprkkr.potentials.test.init_tests.testcase method)": [[1204, "ase2sprkkr.potentials.test.init_tests.TestCase.run_sprkkr"]], "temporary_dir() (ase2sprkkr.potentials.test.init_tests.testcase method)": [[1204, "ase2sprkkr.potentials.test.init_tests.TestCase.temporary_dir"]], "arr_testfce() (in module ase2sprkkr.potentials.test.init_tests)": [[1205, "ase2sprkkr.potentials.test.init_tests.arr_testfce"]], "assertdictequal() (in module ase2sprkkr.potentials.test.init_tests)": [[1206, "ase2sprkkr.potentials.test.init_tests.assertDictEqual"]], "assertlistequal() (in module ase2sprkkr.potentials.test.init_tests)": [[1207, "ase2sprkkr.potentials.test.init_tests.assertListEqual"]], "assert_almost_equals() (in module ase2sprkkr.potentials.test.init_tests)": [[1208, "ase2sprkkr.potentials.test.init_tests.assert_almost_equals"]], "assert_equals() (in module ase2sprkkr.potentials.test.init_tests)": [[1209, "ase2sprkkr.potentials.test.init_tests.assert_equals"]], "__init__() (ase2sprkkr.potentials.test.init_tests.extdict method)": [[1210, "ase2sprkkr.potentials.test.init_tests.extdict.__init__"]], "extdict (class in ase2sprkkr.potentials.test.init_tests)": [[1210, "ase2sprkkr.potentials.test.init_tests.extdict"]], "testfce() (in module ase2sprkkr.potentials.test.init_tests)": [[1211, "ase2sprkkr.potentials.test.init_tests.testfce"]], "ase2sprkkr.potentials.test.test_2d": [[1212, "module-ase2sprkkr.potentials.test.test_2D"]], "test2dpotential (class in ase2sprkkr.potentials.test.test_2d)": [[1213, "ase2sprkkr.potentials.test.test_2D.Test2DPotential"]], "__init__() (ase2sprkkr.potentials.test.test_2d.test2dpotential method)": [[1213, "ase2sprkkr.potentials.test.test_2D.Test2DPotential.__init__"]], "test() (ase2sprkkr.potentials.test.test_2d.test2dpotential method)": [[1213, "ase2sprkkr.potentials.test.test_2D.Test2DPotential.test"]], "ase2sprkkr.potentials.test.test_custom_section": [[1214, "module-ase2sprkkr.potentials.test.test_custom_section"]], "testcustomsection (class in ase2sprkkr.potentials.test.test_custom_section)": [[1215, "ase2sprkkr.potentials.test.test_custom_section.TestCustomSection"]], "__init__() (ase2sprkkr.potentials.test.test_custom_section.testcustomsection method)": [[1215, "ase2sprkkr.potentials.test.test_custom_section.TestCustomSection.__init__"]], "assertnone() (ase2sprkkr.potentials.test.test_custom_section.testcustomsection method)": [[1215, "ase2sprkkr.potentials.test.test_custom_section.TestCustomSection.assertNone"]], "test_custom_section() (ase2sprkkr.potentials.test.test_custom_section.testcustomsection method)": [[1215, "ase2sprkkr.potentials.test.test_custom_section.TestCustomSection.test_custom_section"]], "ase2sprkkr.potentials.test.test_potential": [[1216, "module-ase2sprkkr.potentials.test.test_potential"]], "testpotential (class in ase2sprkkr.potentials.test.test_potential)": [[1217, "ase2sprkkr.potentials.test.test_potential.TestPotential"]], "__init__() (ase2sprkkr.potentials.test.test_potential.testpotential method)": [[1217, "ase2sprkkr.potentials.test.test_potential.TestPotential.__init__"]], "test_2d() (ase2sprkkr.potentials.test.test_potential.testpotential method)": [[1217, "ase2sprkkr.potentials.test.test_potential.TestPotential.test_2D"]], "test_examples() (ase2sprkkr.potentials.test.test_potential.testpotential method)": [[1217, "ase2sprkkr.potentials.test.test_potential.TestPotential.test_examples"]], "test_grammar() (ase2sprkkr.potentials.test.test_potential.testpotential method)": [[1217, "ase2sprkkr.potentials.test.test_potential.TestPotential.test_grammar"]], "test_potential() (ase2sprkkr.potentials.test.test_potential.testpotential method)": [[1217, "ase2sprkkr.potentials.test.test_potential.TestPotential.test_potential"]], "test_potential_data() (ase2sprkkr.potentials.test.test_potential.testpotential method)": [[1217, "ase2sprkkr.potentials.test.test_potential.TestPotential.test_potential_data"]], "test_reset() (ase2sprkkr.potentials.test.test_potential.testpotential method)": [[1217, "ase2sprkkr.potentials.test.test_potential.TestPotential.test_reset"]], "test_sequence() (ase2sprkkr.potentials.test.test_potential.testpotential method)": [[1217, "ase2sprkkr.potentials.test.test_potential.TestPotential.test_sequence"]], "ase2sprkkr.potentials.test.test_structure": [[1218, "module-ase2sprkkr.potentials.test.test_structure"]], "teststructure (class in ase2sprkkr.potentials.test.test_structure)": [[1219, "ase2sprkkr.potentials.test.test_structure.TestStructure"]], "__init__() (ase2sprkkr.potentials.test.test_structure.teststructure method)": [[1219, "ase2sprkkr.potentials.test.test_structure.TestStructure.__init__"]], "test_lattice() (ase2sprkkr.potentials.test.test_structure.teststructure method)": [[1219, "ase2sprkkr.potentials.test.test_structure.TestStructure.test_lattice"]], "ase2sprkkr.sprkkr": [[1220, "module-ase2sprkkr.sprkkr"]], "ase2sprkkr.sprkkr.atomic_types": [[1221, "module-ase2sprkkr.sprkkr.atomic_types"]], "atomictype (class in ase2sprkkr.sprkkr.atomic_types)": [[1222, "ase2sprkkr.sprkkr.atomic_types.AtomicType"]], "__init__() (ase2sprkkr.sprkkr.atomic_types.atomictype method)": [[1222, "ase2sprkkr.sprkkr.atomic_types.AtomicType.__init__"]], "_check_n_electrons() (ase2sprkkr.sprkkr.atomic_types.atomictype method)": [[1222, "ase2sprkkr.sprkkr.atomic_types.AtomicType._check_n_electrons"]], "_clear_symbol_cache() (ase2sprkkr.sprkkr.atomic_types.atomictype method)": [[1222, "ase2sprkkr.sprkkr.atomic_types.AtomicType._clear_symbol_cache"]], "_mendeleev_module (ase2sprkkr.sprkkr.atomic_types.atomictype attribute)": [[1222, "ase2sprkkr.sprkkr.atomic_types.AtomicType._mendeleev_module"]], "atomic_number (ase2sprkkr.sprkkr.atomic_types.atomictype property)": [[1222, "ase2sprkkr.sprkkr.atomic_types.AtomicType.atomic_number"]], "charge (ase2sprkkr.sprkkr.atomic_types.atomictype property)": [[1222, "ase2sprkkr.sprkkr.atomic_types.AtomicType.charge"]], "copy() (ase2sprkkr.sprkkr.atomic_types.atomictype method)": [[1222, "ase2sprkkr.sprkkr.atomic_types.AtomicType.copy"]], "for_mesh() (ase2sprkkr.sprkkr.atomic_types.atomictype method)": [[1222, "ase2sprkkr.sprkkr.atomic_types.AtomicType.for_mesh"]], "has_converged_data() (ase2sprkkr.sprkkr.atomic_types.atomictype method)": [[1222, "ase2sprkkr.sprkkr.atomic_types.AtomicType.has_converged_data"]], "is_vacuum() (ase2sprkkr.sprkkr.atomic_types.atomictype method)": [[1222, "ase2sprkkr.sprkkr.atomic_types.AtomicType.is_vacuum"]], "mendeleev (ase2sprkkr.sprkkr.atomic_types.atomictype property)": [[1222, "ase2sprkkr.sprkkr.atomic_types.AtomicType.mendeleev"]], "mesh (ase2sprkkr.sprkkr.atomic_types.atomictype property)": [[1222, "ase2sprkkr.sprkkr.atomic_types.AtomicType.mesh"]], "moments (ase2sprkkr.sprkkr.atomic_types.atomictype property)": [[1222, "ase2sprkkr.sprkkr.atomic_types.AtomicType.moments"]], "n_core (ase2sprkkr.sprkkr.atomic_types.atomictype property)": [[1222, "ase2sprkkr.sprkkr.atomic_types.AtomicType.n_core"]], "n_electrons (ase2sprkkr.sprkkr.atomic_types.atomictype property)": [[1222, "ase2sprkkr.sprkkr.atomic_types.AtomicType.n_electrons"]], "n_semicore (ase2sprkkr.sprkkr.atomic_types.atomictype property)": [[1222, "ase2sprkkr.sprkkr.atomic_types.AtomicType.n_semicore"]], "n_valence (ase2sprkkr.sprkkr.atomic_types.atomictype property)": [[1222, "ase2sprkkr.sprkkr.atomic_types.AtomicType.n_valence"]], "potential (ase2sprkkr.sprkkr.atomic_types.atomictype property)": [[1222, "ase2sprkkr.sprkkr.atomic_types.AtomicType.potential"]], "remesh() (ase2sprkkr.sprkkr.atomic_types.atomictype method)": [[1222, "ase2sprkkr.sprkkr.atomic_types.AtomicType.remesh"]], "symbol (ase2sprkkr.sprkkr.atomic_types.atomictype property)": [[1222, "ase2sprkkr.sprkkr.atomic_types.AtomicType.symbol"]], "to_atomic_type() (ase2sprkkr.sprkkr.atomic_types.atomictype class method)": [[1222, "ase2sprkkr.sprkkr.atomic_types.AtomicType.to_atomic_type"]], "to_tuple() (ase2sprkkr.sprkkr.atomic_types.atomictype method)": [[1222, "ase2sprkkr.sprkkr.atomic_types.AtomicType.to_tuple"]], "ase2sprkkr.sprkkr.atoms_region": [[1223, "module-ase2sprkkr.sprkkr.atoms_region"]], "atomsregion (class in ase2sprkkr.sprkkr.atoms_region)": [[1224, "ase2sprkkr.sprkkr.atoms_region.AtomsRegion"]], "__init__() (ase2sprkkr.sprkkr.atoms_region.atomsregion method)": [[1224, "ase2sprkkr.sprkkr.atoms_region.AtomsRegion.__init__"]], "_clear_cache() (ase2sprkkr.sprkkr.atoms_region.atomsregion method)": [[1224, "ase2sprkkr.sprkkr.atoms_region.AtomsRegion._clear_cache"]], "cell (ase2sprkkr.sprkkr.atoms_region.atomsregion property)": [[1224, "ase2sprkkr.sprkkr.atoms_region.AtomsRegion.cell"]], "create_atoms() (ase2sprkkr.sprkkr.atoms_region.atomsregion method)": [[1224, "ase2sprkkr.sprkkr.atoms_region.AtomsRegion.create_atoms"]], "from_atoms() (ase2sprkkr.sprkkr.atoms_region.atomsregion static method)": [[1224, "ase2sprkkr.sprkkr.atoms_region.AtomsRegion.from_atoms"]], "ids (ase2sprkkr.sprkkr.atoms_region.atomsregion property)": [[1224, "ase2sprkkr.sprkkr.atoms_region.AtomsRegion.ids"]], "only_vacuum_atoms() (ase2sprkkr.sprkkr.atoms_region.atomsregion method)": [[1224, "ase2sprkkr.sprkkr.atoms_region.AtomsRegion.only_vacuum_atoms"]], "pbc (ase2sprkkr.sprkkr.atoms_region.atomsregion property)": [[1224, "ase2sprkkr.sprkkr.atoms_region.AtomsRegion.pbc"]], "positions (ase2sprkkr.sprkkr.atoms_region.atomsregion property)": [[1224, "ase2sprkkr.sprkkr.atoms_region.AtomsRegion.positions"]], "set_atoms() (ase2sprkkr.sprkkr.atoms_region.atomsregion method)": [[1224, "ase2sprkkr.sprkkr.atoms_region.AtomsRegion.set_atoms"]], "set_of_ids (ase2sprkkr.sprkkr.atoms_region.atomsregion property)": [[1224, "ase2sprkkr.sprkkr.atoms_region.AtomsRegion.set_of_ids"]], "shared_ids_with() (ase2sprkkr.sprkkr.atoms_region.atomsregion method)": [[1224, "ase2sprkkr.sprkkr.atoms_region.AtomsRegion.shared_ids_with"]], "slice (ase2sprkkr.sprkkr.atoms_region.atomsregion property)": [[1224, "ase2sprkkr.sprkkr.atoms_region.AtomsRegion.slice"]], "symbols (ase2sprkkr.sprkkr.atoms_region.atomsregion property)": [[1224, "ase2sprkkr.sprkkr.atoms_region.AtomsRegion.symbols"]], "ase2sprkkr.sprkkr.build": [[1225, "module-ase2sprkkr.sprkkr.build"]], "semiinfinite_system() (in module ase2sprkkr.sprkkr.build)": [[1226, "ase2sprkkr.sprkkr.build.semiinfinite_system"]], "stack() (in module ase2sprkkr.sprkkr.build)": [[1227, "ase2sprkkr.sprkkr.build.stack"]], "vacuum_like() (in module ase2sprkkr.sprkkr.build)": [[1228, "ase2sprkkr.sprkkr.build.vacuum_like"]], "ase2sprkkr.sprkkr.calculator": [[1229, "module-ase2sprkkr.sprkkr.calculator"]], "filenametemplator (class in ase2sprkkr.sprkkr.calculator)": [[1230, "ase2sprkkr.sprkkr.calculator.FilenameTemplator"]], "__init__() (ase2sprkkr.sprkkr.calculator.filenametemplator method)": [[1230, "ase2sprkkr.sprkkr.calculator.FilenameTemplator.__init__"]], "_get() (ase2sprkkr.sprkkr.calculator.filenametemplator method)": [[1230, "ase2sprkkr.sprkkr.calculator.FilenameTemplator._get"]], "replacements (ase2sprkkr.sprkkr.calculator.filenametemplator attribute)": [[1230, "ase2sprkkr.sprkkr.calculator.FilenameTemplator.replacements"]], "sprkkr (class in ase2sprkkr.sprkkr.calculator)": [[1231, "ase2sprkkr.sprkkr.calculator.SPRKKR"]], "__init__() (ase2sprkkr.sprkkr.calculator.sprkkr method)": [[1231, "ase2sprkkr.sprkkr.calculator.SPRKKR.__init__"]], "_abc_impl (ase2sprkkr.sprkkr.calculator.sprkkr attribute)": [[1231, "ase2sprkkr.sprkkr.calculator.SPRKKR._abc_impl"]], "_advance_counter() (ase2sprkkr.sprkkr.calculator.sprkkr method)": [[1231, "ase2sprkkr.sprkkr.calculator.SPRKKR._advance_counter"]], "_open_file() (ase2sprkkr.sprkkr.calculator.sprkkr method)": [[1231, "ase2sprkkr.sprkkr.calculator.SPRKKR._open_file"]], "atoms (ase2sprkkr.sprkkr.calculator.sprkkr property)": [[1231, "ase2sprkkr.sprkkr.calculator.SPRKKR.atoms"]], "calculate() (ase2sprkkr.sprkkr.calculator.sprkkr method)": [[1231, "ase2sprkkr.sprkkr.calculator.SPRKKR.calculate"]], "change_task() (ase2sprkkr.sprkkr.calculator.sprkkr method)": [[1231, "ase2sprkkr.sprkkr.calculator.SPRKKR.change_task"]], "copy_with_potential() (ase2sprkkr.sprkkr.calculator.sprkkr method)": [[1231, "ase2sprkkr.sprkkr.calculator.SPRKKR.copy_with_potential"]], "empty_spheres (ase2sprkkr.sprkkr.calculator.sprkkr property)": [[1231, "ase2sprkkr.sprkkr.calculator.SPRKKR.empty_spheres"]], "executable_dir (ase2sprkkr.sprkkr.calculator.sprkkr property)": [[1231, "ase2sprkkr.sprkkr.calculator.SPRKKR.executable_dir"]], "executable_suffix (ase2sprkkr.sprkkr.calculator.sprkkr property)": [[1231, "ase2sprkkr.sprkkr.calculator.SPRKKR.executable_suffix"]], "get() (ase2sprkkr.sprkkr.calculator.sprkkr method)": [[1231, "ase2sprkkr.sprkkr.calculator.SPRKKR.get"]], "implemented_properties (ase2sprkkr.sprkkr.calculator.sprkkr attribute)": [[1231, "ase2sprkkr.sprkkr.calculator.SPRKKR.implemented_properties"]], "input_file (ase2sprkkr.sprkkr.calculator.sprkkr attribute)": [[1231, "ase2sprkkr.sprkkr.calculator.SPRKKR.input_file"]], "input_parameters (ase2sprkkr.sprkkr.calculator.sprkkr property)": [[1231, "ase2sprkkr.sprkkr.calculator.SPRKKR.input_parameters"]], "kkrch() (ase2sprkkr.sprkkr.calculator.sprkkr method)": [[1231, "ase2sprkkr.sprkkr.calculator.SPRKKR.kkrch"]], "kkrgen() (ase2sprkkr.sprkkr.calculator.sprkkr method)": [[1231, "ase2sprkkr.sprkkr.calculator.SPRKKR.kkrgen"]], "kkrspec() (ase2sprkkr.sprkkr.calculator.sprkkr method)": [[1231, "ase2sprkkr.sprkkr.calculator.SPRKKR.kkrspec"]], "mpi (ase2sprkkr.sprkkr.calculator.sprkkr property)": [[1231, "ase2sprkkr.sprkkr.calculator.SPRKKR.mpi"]], "output_file (ase2sprkkr.sprkkr.calculator.sprkkr attribute)": [[1231, "ase2sprkkr.sprkkr.calculator.SPRKKR.output_file"]], "phagen() (ase2sprkkr.sprkkr.calculator.sprkkr method)": [[1231, "ase2sprkkr.sprkkr.calculator.SPRKKR.phagen"]], "potential (ase2sprkkr.sprkkr.calculator.sprkkr property)": [[1231, "ase2sprkkr.sprkkr.calculator.SPRKKR.potential"]], "potential_file (ase2sprkkr.sprkkr.calculator.sprkkr attribute)": [[1231, "ase2sprkkr.sprkkr.calculator.SPRKKR.potential_file"]], "potential_object (ase2sprkkr.sprkkr.calculator.sprkkr property)": [[1231, "ase2sprkkr.sprkkr.calculator.SPRKKR.potential_object"]], "print_output (ase2sprkkr.sprkkr.calculator.sprkkr property)": [[1231, "ase2sprkkr.sprkkr.calculator.SPRKKR.print_output"]], "run() (ase2sprkkr.sprkkr.calculator.sprkkr method)": [[1231, "ase2sprkkr.sprkkr.calculator.SPRKKR.run"]], "run_xband() (ase2sprkkr.sprkkr.calculator.sprkkr method)": [[1231, "ase2sprkkr.sprkkr.calculator.SPRKKR.run_xband"]], "save_input() (ase2sprkkr.sprkkr.calculator.sprkkr method)": [[1231, "ase2sprkkr.sprkkr.calculator.SPRKKR.save_input"]], "scf() (ase2sprkkr.sprkkr.calculator.sprkkr method)": [[1231, "ase2sprkkr.sprkkr.calculator.SPRKKR.scf"]], "set() (ase2sprkkr.sprkkr.calculator.sprkkr method)": [[1231, "ase2sprkkr.sprkkr.calculator.SPRKKR.set"]], "value_or_default() (ase2sprkkr.sprkkr.calculator.sprkkr method)": [[1231, "ase2sprkkr.sprkkr.calculator.SPRKKR.value_or_default"]], "ase2sprkkr.sprkkr.configuration": [[1232, "module-ase2sprkkr.sprkkr.configuration"]], "configurationfile (class in ase2sprkkr.sprkkr.configuration)": [[1233, "ase2sprkkr.sprkkr.configuration.ConfigurationFile"]], "__init__() (ase2sprkkr.sprkkr.configuration.configurationfile method)": [[1233, "ase2sprkkr.sprkkr.configuration.ConfigurationFile.__init__"]], "save_to_file() (ase2sprkkr.sprkkr.configuration.configurationfile method)": [[1233, "ase2sprkkr.sprkkr.configuration.ConfigurationFile.save_to_file"]], "configurationfiledefinition (class in ase2sprkkr.sprkkr.configuration)": [[1234, "ase2sprkkr.sprkkr.configuration.ConfigurationFileDefinition"]], "__init__() (ase2sprkkr.sprkkr.configuration.configurationfiledefinition method)": [[1234, "ase2sprkkr.sprkkr.configuration.ConfigurationFileDefinition.__init__"]], "configurationsection (class in ase2sprkkr.sprkkr.configuration)": [[1235, "ase2sprkkr.sprkkr.configuration.ConfigurationSection"]], "__init__() (ase2sprkkr.sprkkr.configuration.configurationsection method)": [[1235, "ase2sprkkr.sprkkr.configuration.ConfigurationSection.__init__"]], "configurationsectiondefinition (class in ase2sprkkr.sprkkr.configuration)": [[1236, "ase2sprkkr.sprkkr.configuration.ConfigurationSectionDefinition"]], "__init__() (ase2sprkkr.sprkkr.configuration.configurationsectiondefinition method)": [[1236, "ase2sprkkr.sprkkr.configuration.ConfigurationSectionDefinition.__init__"]], "result_class (ase2sprkkr.sprkkr.configuration.configurationsectiondefinition attribute)": [[1236, "ase2sprkkr.sprkkr.configuration.ConfigurationSectionDefinition.result_class"]], "configurationsectiontrait (class in ase2sprkkr.sprkkr.configuration)": [[1237, "ase2sprkkr.sprkkr.configuration.ConfigurationSectionTrait"]], "__init__() (ase2sprkkr.sprkkr.configuration.configurationsectiontrait method)": [[1237, "ase2sprkkr.sprkkr.configuration.ConfigurationSectionTrait.__init__"]], "_set_from_atoms() (ase2sprkkr.sprkkr.configuration.configurationsectiontrait method)": [[1237, "ase2sprkkr.sprkkr.configuration.ConfigurationSectionTrait._set_from_atoms"]], "set_from_atoms() (ase2sprkkr.sprkkr.configuration.configurationsectiontrait method)": [[1237, "ase2sprkkr.sprkkr.configuration.ConfigurationSectionTrait.set_from_atoms"]], "configurationvalue (class in ase2sprkkr.sprkkr.configuration)": [[1238, "ase2sprkkr.sprkkr.configuration.ConfigurationValue"]], "__init__() (ase2sprkkr.sprkkr.configuration.configurationvalue method)": [[1238, "ase2sprkkr.sprkkr.configuration.ConfigurationValue.__init__"]], "_set_from_atoms() (ase2sprkkr.sprkkr.configuration.configurationvalue method)": [[1238, "ase2sprkkr.sprkkr.configuration.ConfigurationValue._set_from_atoms"]], "configurationvaluedefinition (class in ase2sprkkr.sprkkr.configuration)": [[1239, "ase2sprkkr.sprkkr.configuration.ConfigurationValueDefinition"]], "__init__() (ase2sprkkr.sprkkr.configuration.configurationvaluedefinition method)": [[1239, "ase2sprkkr.sprkkr.configuration.ConfigurationValueDefinition.__init__"]], "_set_from_atoms (ase2sprkkr.sprkkr.configuration.configurationvaluedefinition property)": [[1239, "ase2sprkkr.sprkkr.configuration.ConfigurationValueDefinition._set_from_atoms"]], "result_class (ase2sprkkr.sprkkr.configuration.configurationvaluedefinition attribute)": [[1239, "ase2sprkkr.sprkkr.configuration.ConfigurationValueDefinition.result_class"]], "customconfigurationsection (class in ase2sprkkr.sprkkr.configuration)": [[1240, "ase2sprkkr.sprkkr.configuration.CustomConfigurationSection"]], "__init__() (ase2sprkkr.sprkkr.configuration.customconfigurationsection method)": [[1240, "ase2sprkkr.sprkkr.configuration.CustomConfigurationSection.__init__"]], "customconfigurationvalue (class in ase2sprkkr.sprkkr.configuration)": [[1241, "ase2sprkkr.sprkkr.configuration.CustomConfigurationValue"]], "__init__() (ase2sprkkr.sprkkr.configuration.customconfigurationvalue method)": [[1241, "ase2sprkkr.sprkkr.configuration.CustomConfigurationValue.__init__"]], "_set_from_atoms() (ase2sprkkr.sprkkr.configuration.customconfigurationvalue method)": [[1241, "ase2sprkkr.sprkkr.configuration.CustomConfigurationValue._set_from_atoms"]], "repeatedconfigurationsection (class in ase2sprkkr.sprkkr.configuration)": [[1242, "ase2sprkkr.sprkkr.configuration.RepeatedConfigurationSection"]], "__init__() (ase2sprkkr.sprkkr.configuration.repeatedconfigurationsection method)": [[1242, "ase2sprkkr.sprkkr.configuration.RepeatedConfigurationSection.__init__"]], "ase2sprkkr.sprkkr.io_data": [[1243, "module-ase2sprkkr.sprkkr.io_data"]], "baseiodata (class in ase2sprkkr.sprkkr.io_data)": [[1244, "ase2sprkkr.sprkkr.io_data.BaseIoData"]], "__init__() (ase2sprkkr.sprkkr.io_data.baseiodata method)": [[1244, "ase2sprkkr.sprkkr.io_data.BaseIoData.__init__"]], "readiodata (class in ase2sprkkr.sprkkr.io_data)": [[1245, "ase2sprkkr.sprkkr.io_data.ReadIoData"]], "__init__() (ase2sprkkr.sprkkr.io_data.readiodata method)": [[1245, "ase2sprkkr.sprkkr.io_data.ReadIoData.__init__"]], "apply_on_atoms() (ase2sprkkr.sprkkr.io_data.readiodata method)": [[1245, "ase2sprkkr.sprkkr.io_data.ReadIoData.apply_on_atoms"]], "update_atoms() (ase2sprkkr.sprkkr.io_data.readiodata method)": [[1245, "ase2sprkkr.sprkkr.io_data.ReadIoData.update_atoms"]], "writeiodata (class in ase2sprkkr.sprkkr.io_data)": [[1246, "ase2sprkkr.sprkkr.io_data.WriteIoData"]], "__init__() (ase2sprkkr.sprkkr.io_data.writeiodata method)": [[1246, "ase2sprkkr.sprkkr.io_data.WriteIoData.__init__"]], "has_converged_data() (ase2sprkkr.sprkkr.io_data.writeiodata method)": [[1246, "ase2sprkkr.sprkkr.io_data.WriteIoData.has_converged_data"]], "meshes (ase2sprkkr.sprkkr.io_data.writeiodata property)": [[1246, "ase2sprkkr.sprkkr.io_data.WriteIoData.meshes"]], "reference_systems (ase2sprkkr.sprkkr.io_data.writeiodata property)": [[1246, "ase2sprkkr.sprkkr.io_data.WriteIoData.reference_systems"]], "sites (ase2sprkkr.sprkkr.io_data.writeiodata property)": [[1246, "ase2sprkkr.sprkkr.io_data.WriteIoData.sites"]], "types (ase2sprkkr.sprkkr.io_data.writeiodata property)": [[1246, "ase2sprkkr.sprkkr.io_data.WriteIoData.types"]], "unique_mapping() (in module ase2sprkkr.sprkkr.io_data)": [[1247, "ase2sprkkr.sprkkr.io_data.unique_mapping"]], "ase2sprkkr.sprkkr.moments": [[1248, "module-ase2sprkkr.sprkkr.moments"]], "moments (class in ase2sprkkr.sprkkr.moments)": [[1249, "ase2sprkkr.sprkkr.moments.Moments"]], "__init__() (ase2sprkkr.sprkkr.moments.moments method)": [[1249, "ase2sprkkr.sprkkr.moments.Moments.__init__"]], "as_tuple() (ase2sprkkr.sprkkr.moments.moments method)": [[1249, "ase2sprkkr.sprkkr.moments.Moments.as_tuple"]], "copy() (ase2sprkkr.sprkkr.moments.moments method)": [[1249, "ase2sprkkr.sprkkr.moments.Moments.copy"]], "ase2sprkkr.sprkkr.occupations": [[1250, "module-ase2sprkkr.sprkkr.occupations"]], "occupation (class in ase2sprkkr.sprkkr.occupations)": [[1251, "ase2sprkkr.sprkkr.occupations.Occupation"]], "__init__() (ase2sprkkr.sprkkr.occupations.occupation method)": [[1251, "ase2sprkkr.sprkkr.occupations.Occupation.__init__"]], "_clear_data() (ase2sprkkr.sprkkr.occupations.occupation method)": [[1251, "ase2sprkkr.sprkkr.occupations.Occupation._clear_data"]], "_find_key() (ase2sprkkr.sprkkr.occupations.occupation method)": [[1251, "ase2sprkkr.sprkkr.occupations.Occupation._find_key"]], "_normalize() (ase2sprkkr.sprkkr.occupations.occupation method)": [[1251, "ase2sprkkr.sprkkr.occupations.Occupation._normalize"]], "_occupation (ase2sprkkr.sprkkr.occupations.occupation attribute)": [[1251, "ase2sprkkr.sprkkr.occupations.Occupation._occupation"]], "_update_atoms() (ase2sprkkr.sprkkr.occupations.occupation method)": [[1251, "ase2sprkkr.sprkkr.occupations.Occupation._update_atoms"]], "add() (ase2sprkkr.sprkkr.occupations.occupation method)": [[1251, "ase2sprkkr.sprkkr.occupations.Occupation.add"]], "as_dict (ase2sprkkr.sprkkr.occupations.occupation property)": [[1251, "ase2sprkkr.sprkkr.occupations.Occupation.as_dict"]], "atomic_type() (ase2sprkkr.sprkkr.occupations.occupation method)": [[1251, "ase2sprkkr.sprkkr.occupations.Occupation.atomic_type"]], "atomic_types() (ase2sprkkr.sprkkr.occupations.occupation method)": [[1251, "ase2sprkkr.sprkkr.occupations.Occupation.atomic_types"]], "check() (ase2sprkkr.sprkkr.occupations.occupation method)": [[1251, "ase2sprkkr.sprkkr.occupations.Occupation.check"]], "clean() (ase2sprkkr.sprkkr.occupations.occupation method)": [[1251, "ase2sprkkr.sprkkr.occupations.Occupation.clean"]], "copy() (ase2sprkkr.sprkkr.occupations.occupation method)": [[1251, "ase2sprkkr.sprkkr.occupations.Occupation.copy"]], "items() (ase2sprkkr.sprkkr.occupations.occupation method)": [[1251, "ase2sprkkr.sprkkr.occupations.Occupation.items"]], "mesh (ase2sprkkr.sprkkr.occupations.occupation property)": [[1251, "ase2sprkkr.sprkkr.occupations.Occupation.mesh"]], "primary_atomic_number (ase2sprkkr.sprkkr.occupations.occupation property)": [[1251, "ase2sprkkr.sprkkr.occupations.Occupation.primary_atomic_number"]], "primary_atomic_type (ase2sprkkr.sprkkr.occupations.occupation property)": [[1251, "ase2sprkkr.sprkkr.occupations.Occupation.primary_atomic_type"]], "primary_symbol (ase2sprkkr.sprkkr.occupations.occupation property)": [[1251, "ase2sprkkr.sprkkr.occupations.Occupation.primary_symbol"]], "remesh() (ase2sprkkr.sprkkr.occupations.occupation method)": [[1251, "ase2sprkkr.sprkkr.occupations.Occupation.remesh"]], "replace_type() (ase2sprkkr.sprkkr.occupations.occupation method)": [[1251, "ase2sprkkr.sprkkr.occupations.Occupation.replace_type"]], "set() (ase2sprkkr.sprkkr.occupations.occupation method)": [[1251, "ase2sprkkr.sprkkr.occupations.Occupation.set"]], "site (ase2sprkkr.sprkkr.occupations.occupation property)": [[1251, "ase2sprkkr.sprkkr.occupations.Occupation.site"]], "to_occupation() (ase2sprkkr.sprkkr.occupations.occupation static method)": [[1251, "ase2sprkkr.sprkkr.occupations.Occupation.to_occupation"]], "to_tuple() (ase2sprkkr.sprkkr.occupations.occupation method)": [[1251, "ase2sprkkr.sprkkr.occupations.Occupation.to_tuple"]], "total_occupation (ase2sprkkr.sprkkr.occupations.occupation property)": [[1251, "ase2sprkkr.sprkkr.occupations.Occupation.total_occupation"]], "ase2sprkkr.sprkkr.radial": [[1252, "module-ase2sprkkr.sprkkr.radial"]], "radialcharge (class in ase2sprkkr.sprkkr.radial)": [[1253, "ase2sprkkr.sprkkr.radial.RadialCharge"]], "__init__() (ase2sprkkr.sprkkr.radial.radialcharge method)": [[1253, "ase2sprkkr.sprkkr.radial.RadialCharge.__init__"]], "radialpotential (class in ase2sprkkr.sprkkr.radial)": [[1254, "ase2sprkkr.sprkkr.radial.RadialPotential"]], "__init__() (ase2sprkkr.sprkkr.radial.radialpotential method)": [[1254, "ase2sprkkr.sprkkr.radial.RadialPotential.__init__"]], "_clear() (ase2sprkkr.sprkkr.radial.radialpotential method)": [[1254, "ase2sprkkr.sprkkr.radial.RadialPotential._clear"]], "bt (ase2sprkkr.sprkkr.radial.radialpotential property)": [[1254, "ase2sprkkr.sprkkr.radial.RadialPotential.bt"]], "down (ase2sprkkr.sprkkr.radial.radialpotential property)": [[1254, "ase2sprkkr.sprkkr.radial.RadialPotential.down"]], "from_julich() (ase2sprkkr.sprkkr.radial.radialpotential static method)": [[1254, "ase2sprkkr.sprkkr.radial.RadialPotential.from_julich"]], "from_munchen() (ase2sprkkr.sprkkr.radial.radialpotential static method)": [[1254, "ase2sprkkr.sprkkr.radial.RadialPotential.from_munchen"]], "julich (ase2sprkkr.sprkkr.radial.radialpotential property)": [[1254, "ase2sprkkr.sprkkr.radial.RadialPotential.julich"]], "munchen (ase2sprkkr.sprkkr.radial.radialpotential property)": [[1254, "ase2sprkkr.sprkkr.radial.RadialPotential.munchen"]], "up (ase2sprkkr.sprkkr.radial.radialpotential property)": [[1254, "ase2sprkkr.sprkkr.radial.RadialPotential.up"]], "vt (ase2sprkkr.sprkkr.radial.radialpotential property)": [[1254, "ase2sprkkr.sprkkr.radial.RadialPotential.vt"]], "zr (ase2sprkkr.sprkkr.radial.radialpotential property)": [[1254, "ase2sprkkr.sprkkr.radial.RadialPotential.zr"]], "radialvalue (class in ase2sprkkr.sprkkr.radial)": [[1255, "ase2sprkkr.sprkkr.radial.RadialValue"]], "__init__() (ase2sprkkr.sprkkr.radial.radialvalue method)": [[1255, "ase2sprkkr.sprkkr.radial.RadialValue.__init__"]], "copy() (ase2sprkkr.sprkkr.radial.radialvalue method)": [[1255, "ase2sprkkr.sprkkr.radial.RadialValue.copy"]], "for_mesh() (ase2sprkkr.sprkkr.radial.radialvalue method)": [[1255, "ase2sprkkr.sprkkr.radial.RadialValue.for_mesh"]], "interpolate() (ase2sprkkr.sprkkr.radial.radialvalue method)": [[1255, "ase2sprkkr.sprkkr.radial.RadialValue.interpolate"]], "interpolator (ase2sprkkr.sprkkr.radial.radialvalue property)": [[1255, "ase2sprkkr.sprkkr.radial.RadialValue.interpolator"]], "mesh (ase2sprkkr.sprkkr.radial.radialvalue property)": [[1255, "ase2sprkkr.sprkkr.radial.RadialValue.mesh"]], "raw_value (ase2sprkkr.sprkkr.radial.radialvalue property)": [[1255, "ase2sprkkr.sprkkr.radial.RadialValue.raw_value"]], "ase2sprkkr.sprkkr.radial_meshes": [[1256, "module-ase2sprkkr.sprkkr.radial_meshes"]], "exponentialmesh (class in ase2sprkkr.sprkkr.radial_meshes)": [[1257, "ase2sprkkr.sprkkr.radial_meshes.ExponentialMesh"]], "__init__() (ase2sprkkr.sprkkr.radial_meshes.exponentialmesh method)": [[1257, "ase2sprkkr.sprkkr.radial_meshes.ExponentialMesh.__init__"]], "_clear() (ase2sprkkr.sprkkr.radial_meshes.exponentialmesh method)": [[1257, "ase2sprkkr.sprkkr.radial_meshes.ExponentialMesh._clear"]], "coors (ase2sprkkr.sprkkr.radial_meshes.exponentialmesh property)": [[1257, "ase2sprkkr.sprkkr.radial_meshes.ExponentialMesh.coors"]], "copy() (ase2sprkkr.sprkkr.radial_meshes.exponentialmesh method)": [[1257, "ase2sprkkr.sprkkr.radial_meshes.ExponentialMesh.copy"]], "dx (ase2sprkkr.sprkkr.radial_meshes.exponentialmesh property)": [[1257, "ase2sprkkr.sprkkr.radial_meshes.ExponentialMesh.dx"]], "jrmt (ase2sprkkr.sprkkr.radial_meshes.exponentialmesh property)": [[1257, "ase2sprkkr.sprkkr.radial_meshes.ExponentialMesh.jrmt"]], "jrws (ase2sprkkr.sprkkr.radial_meshes.exponentialmesh property)": [[1257, "ase2sprkkr.sprkkr.radial_meshes.ExponentialMesh.jrws"]], "r1 (ase2sprkkr.sprkkr.radial_meshes.exponentialmesh property)": [[1257, "ase2sprkkr.sprkkr.radial_meshes.ExponentialMesh.r1"]], "rmt (ase2sprkkr.sprkkr.radial_meshes.exponentialmesh property)": [[1257, "ase2sprkkr.sprkkr.radial_meshes.ExponentialMesh.rmt"]], "rws (ase2sprkkr.sprkkr.radial_meshes.exponentialmesh property)": [[1257, "ase2sprkkr.sprkkr.radial_meshes.ExponentialMesh.rws"]], "to_tuple() (ase2sprkkr.sprkkr.radial_meshes.exponentialmesh method)": [[1257, "ase2sprkkr.sprkkr.radial_meshes.ExponentialMesh.to_tuple"]], "mesh (class in ase2sprkkr.sprkkr.radial_meshes)": [[1258, "ase2sprkkr.sprkkr.radial_meshes.Mesh"]], "mesh.cubicspline (class in ase2sprkkr.sprkkr.radial_meshes)": [[1258, "ase2sprkkr.sprkkr.radial_meshes.Mesh.CubicSpline"]], "__call__() (ase2sprkkr.sprkkr.radial_meshes.mesh.cubicspline method)": [[1258, "ase2sprkkr.sprkkr.radial_meshes.Mesh.CubicSpline.__call__"]], "__init__() (ase2sprkkr.sprkkr.radial_meshes.mesh method)": [[1258, "ase2sprkkr.sprkkr.radial_meshes.Mesh.__init__"]], "_validate_bc() (ase2sprkkr.sprkkr.radial_meshes.mesh.cubicspline static method)": [[1258, "ase2sprkkr.sprkkr.radial_meshes.Mesh.CubicSpline._validate_bc"]], "antiderivative() (ase2sprkkr.sprkkr.radial_meshes.mesh.cubicspline method)": [[1258, "ase2sprkkr.sprkkr.radial_meshes.Mesh.CubicSpline.antiderivative"]], "axis (ase2sprkkr.sprkkr.radial_meshes.mesh.cubicspline attribute)": [[1258, "ase2sprkkr.sprkkr.radial_meshes.Mesh.CubicSpline.axis"], [1258, "id6"]], "c (ase2sprkkr.sprkkr.radial_meshes.mesh.cubicspline attribute)": [[1258, "ase2sprkkr.sprkkr.radial_meshes.Mesh.CubicSpline.c"], [1258, "id0"]], "default() (ase2sprkkr.sprkkr.radial_meshes.mesh static method)": [[1258, "ase2sprkkr.sprkkr.radial_meshes.Mesh.default"]], "derivative() (ase2sprkkr.sprkkr.radial_meshes.mesh.cubicspline method)": [[1258, "ase2sprkkr.sprkkr.radial_meshes.Mesh.CubicSpline.derivative"]], "extrapolate (ase2sprkkr.sprkkr.radial_meshes.mesh.cubicspline attribute)": [[1258, "ase2sprkkr.sprkkr.radial_meshes.Mesh.CubicSpline.extrapolate"]], "integrate() (ase2sprkkr.sprkkr.radial_meshes.mesh.cubicspline method)": [[1258, "ase2sprkkr.sprkkr.radial_meshes.Mesh.CubicSpline.integrate"]], "interpolate() (ase2sprkkr.sprkkr.radial_meshes.mesh method)": [[1258, "ase2sprkkr.sprkkr.radial_meshes.Mesh.interpolate"]], "interpolator() (ase2sprkkr.sprkkr.radial_meshes.mesh method)": [[1258, "ase2sprkkr.sprkkr.radial_meshes.Mesh.interpolator"]], "interpolator_for_coors() (ase2sprkkr.sprkkr.radial_meshes.mesh class method)": [[1258, "ase2sprkkr.sprkkr.radial_meshes.Mesh.interpolator_for_coors"]], "roots() (ase2sprkkr.sprkkr.radial_meshes.mesh.cubicspline method)": [[1258, "ase2sprkkr.sprkkr.radial_meshes.Mesh.CubicSpline.roots"]], "x (ase2sprkkr.sprkkr.radial_meshes.mesh.cubicspline attribute)": [[1258, "ase2sprkkr.sprkkr.radial_meshes.Mesh.CubicSpline.x"], [1258, "id5"]], "_clearing_property() (in module ase2sprkkr.sprkkr.radial_meshes)": [[1259, "ase2sprkkr.sprkkr.radial_meshes._clearing_property"]], "ase2sprkkr.sprkkr.reference_systems": [[1260, "module-ase2sprkkr.sprkkr.reference_systems"]], "referencesystem (class in ase2sprkkr.sprkkr.reference_systems)": [[1261, "ase2sprkkr.sprkkr.reference_systems.ReferenceSystem"]], "__init__() (ase2sprkkr.sprkkr.reference_systems.referencesystem method)": [[1261, "ase2sprkkr.sprkkr.reference_systems.ReferenceSystem.__init__"]], "copy() (ase2sprkkr.sprkkr.reference_systems.referencesystem method)": [[1261, "ase2sprkkr.sprkkr.reference_systems.ReferenceSystem.copy"]], "default() (ase2sprkkr.sprkkr.reference_systems.referencesystem static method)": [[1261, "ase2sprkkr.sprkkr.reference_systems.ReferenceSystem.default"]], "to_tuple() (ase2sprkkr.sprkkr.reference_systems.referencesystem method)": [[1261, "ase2sprkkr.sprkkr.reference_systems.ReferenceSystem.to_tuple"]], "ase2sprkkr.sprkkr.sites": [[1262, "module-ase2sprkkr.sprkkr.sites"]], "site (class in ase2sprkkr.sprkkr.sites)": [[1263, "ase2sprkkr.sprkkr.sites.Site"]], "__init__() (ase2sprkkr.sprkkr.sites.site method)": [[1263, "ase2sprkkr.sprkkr.sites.Site.__init__"]], "_clear_data() (ase2sprkkr.sprkkr.sites.site method)": [[1263, "ase2sprkkr.sprkkr.sites.Site._clear_data"]], "atomic_type (ase2sprkkr.sprkkr.sites.site property)": [[1263, "ase2sprkkr.sprkkr.sites.Site.atomic_type"]], "atomic_types (ase2sprkkr.sprkkr.sites.site property)": [[1263, "ase2sprkkr.sprkkr.sites.Site.atomic_types"]], "atoms (ase2sprkkr.sprkkr.sites.site property)": [[1263, "ase2sprkkr.sprkkr.sites.Site.atoms"]], "break_symmetry() (ase2sprkkr.sprkkr.sites.site method)": [[1263, "ase2sprkkr.sprkkr.sites.Site.break_symmetry"]], "charge (ase2sprkkr.sprkkr.sites.site property)": [[1263, "ase2sprkkr.sprkkr.sites.Site.charge"]], "copy() (ase2sprkkr.sprkkr.sites.site method)": [[1263, "ase2sprkkr.sprkkr.sites.Site.copy"]], "copy_sites() (ase2sprkkr.sprkkr.sites.site static method)": [[1263, "ase2sprkkr.sprkkr.sites.Site.copy_sites"]], "create() (ase2sprkkr.sprkkr.sites.site static method)": [[1263, "ase2sprkkr.sprkkr.sites.Site.create"]], "has_symmetry (ase2sprkkr.sprkkr.sites.site property)": [[1263, "ase2sprkkr.sprkkr.sites.Site.has_symmetry"]], "is_vacuum (ase2sprkkr.sprkkr.sites.site property)": [[1263, "ase2sprkkr.sprkkr.sites.Site.is_vacuum"]], "mesh (ase2sprkkr.sprkkr.sites.site property)": [[1263, "ase2sprkkr.sprkkr.sites.Site.mesh"]], "moments (ase2sprkkr.sprkkr.sites.site property)": [[1263, "ase2sprkkr.sprkkr.sites.Site.moments"]], "occupation (ase2sprkkr.sprkkr.sites.site property)": [[1263, "ase2sprkkr.sprkkr.sites.Site.occupation"]], "potential (ase2sprkkr.sprkkr.sites.site property)": [[1263, "ase2sprkkr.sprkkr.sites.Site.potential"]], "primary_atomic_number (ase2sprkkr.sprkkr.sites.site property)": [[1263, "ase2sprkkr.sprkkr.sites.Site.primary_atomic_number"]], "primary_symbol (ase2sprkkr.sprkkr.sites.site property)": [[1263, "ase2sprkkr.sprkkr.sites.Site.primary_symbol"]], "reference_system (ase2sprkkr.sprkkr.sites.site property)": [[1263, "ase2sprkkr.sprkkr.sites.Site.reference_system"]], "remesh() (ase2sprkkr.sprkkr.sites.site method)": [[1263, "ase2sprkkr.sprkkr.sites.Site.remesh"]], "reset() (ase2sprkkr.sprkkr.sites.site method)": [[1263, "ase2sprkkr.sprkkr.sites.Site.reset"]], "site_type (ase2sprkkr.sprkkr.sites.site property)": [[1263, "ase2sprkkr.sprkkr.sites.Site.site_type"]], "sitetype (class in ase2sprkkr.sprkkr.sites)": [[1264, "ase2sprkkr.sprkkr.sites.SiteType"]], "__init__() (ase2sprkkr.sprkkr.sites.sitetype method)": [[1264, "ase2sprkkr.sprkkr.sites.SiteType.__init__"]], "_clear_data() (ase2sprkkr.sprkkr.sites.sitetype method)": [[1264, "ase2sprkkr.sprkkr.sites.SiteType._clear_data"]], "_just_one_type() (ase2sprkkr.sprkkr.sites.sitetype method)": [[1264, "ase2sprkkr.sprkkr.sites.SiteType._just_one_type"]], "atomic_type (ase2sprkkr.sprkkr.sites.sitetype property)": [[1264, "ase2sprkkr.sprkkr.sites.SiteType.atomic_type"]], "atomic_types (ase2sprkkr.sprkkr.sites.sitetype property)": [[1264, "ase2sprkkr.sprkkr.sites.SiteType.atomic_types"]], "break_symmetry() (ase2sprkkr.sprkkr.sites.sitetype method)": [[1264, "ase2sprkkr.sprkkr.sites.SiteType.break_symmetry"]], "charge (ase2sprkkr.sprkkr.sites.sitetype property)": [[1264, "ase2sprkkr.sprkkr.sites.SiteType.charge"]], "copy() (ase2sprkkr.sprkkr.sites.sitetype method)": [[1264, "ase2sprkkr.sprkkr.sites.SiteType.copy"]], "has_symmetry (ase2sprkkr.sprkkr.sites.sitetype property)": [[1264, "ase2sprkkr.sprkkr.sites.SiteType.has_symmetry"]], "index() (ase2sprkkr.sprkkr.sites.sitetype method)": [[1264, "ase2sprkkr.sprkkr.sites.SiteType.index"]], "is_vacuum() (ase2sprkkr.sprkkr.sites.sitetype method)": [[1264, "ase2sprkkr.sprkkr.sites.SiteType.is_vacuum"]], "mesh (ase2sprkkr.sprkkr.sites.sitetype property)": [[1264, "ase2sprkkr.sprkkr.sites.SiteType.mesh"]], "moments (ase2sprkkr.sprkkr.sites.sitetype property)": [[1264, "ase2sprkkr.sprkkr.sites.SiteType.moments"]], "occupation (ase2sprkkr.sprkkr.sites.sitetype property)": [[1264, "ase2sprkkr.sprkkr.sites.SiteType.occupation"]], "potential (ase2sprkkr.sprkkr.sites.sitetype property)": [[1264, "ase2sprkkr.sprkkr.sites.SiteType.potential"]], "primary_atomic_number (ase2sprkkr.sprkkr.sites.sitetype property)": [[1264, "ase2sprkkr.sprkkr.sites.SiteType.primary_atomic_number"]], "primary_symbol (ase2sprkkr.sprkkr.sites.sitetype property)": [[1264, "ase2sprkkr.sprkkr.sites.SiteType.primary_symbol"]], "register() (ase2sprkkr.sprkkr.sites.sitetype method)": [[1264, "ase2sprkkr.sprkkr.sites.SiteType.register"]], "remesh() (ase2sprkkr.sprkkr.sites.sitetype method)": [[1264, "ase2sprkkr.sprkkr.sites.SiteType.remesh"]], "reset() (ase2sprkkr.sprkkr.sites.sitetype method)": [[1264, "ase2sprkkr.sprkkr.sites.SiteType.reset"]], "unregister() (ase2sprkkr.sprkkr.sites.sitetype method)": [[1264, "ase2sprkkr.sprkkr.sites.SiteType.unregister"]], "update_atoms() (ase2sprkkr.sprkkr.sites.sitetype method)": [[1264, "ase2sprkkr.sprkkr.sites.SiteType.update_atoms"]], "ase2sprkkr.sprkkr.sprkkr_atoms": [[1265, "module-ase2sprkkr.sprkkr.sprkkr_atoms"]], "sprkkratoms (class in ase2sprkkr.sprkkr.sprkkr_atoms)": [[1266, "ase2sprkkr.sprkkr.sprkkr_atoms.SPRKKRAtoms"]], "__init__() (ase2sprkkr.sprkkr.sprkkr_atoms.sprkkratoms method)": [[1266, "ase2sprkkr.sprkkr.sprkkr_atoms.SPRKKRAtoms.__init__"]], "_init() (ase2sprkkr.sprkkr.sprkkr_atoms.sprkkratoms method)": [[1266, "ase2sprkkr.sprkkr.sprkkr_atoms.SPRKKRAtoms._init"]], "_init_sites() (ase2sprkkr.sprkkr.sprkkr_atoms.sprkkratoms method)": [[1266, "ase2sprkkr.sprkkr.sprkkr_atoms.SPRKKRAtoms._init_sites"]], "add_region() (ase2sprkkr.sprkkr.sprkkr_atoms.sprkkratoms method)": [[1266, "ase2sprkkr.sprkkr.sprkkr_atoms.SPRKKRAtoms.add_region"]], "are_sites_inited() (ase2sprkkr.sprkkr.sprkkr_atoms.sprkkratoms method)": [[1266, "ase2sprkkr.sprkkr.sprkkr_atoms.SPRKKRAtoms.are_sites_inited"]], "cancel_sites_symmetry() (ase2sprkkr.sprkkr.sprkkr_atoms.sprkkratoms method)": [[1266, "ase2sprkkr.sprkkr.sprkkr_atoms.SPRKKRAtoms.cancel_sites_symmetry"]], "compute_sites_symmetry() (ase2sprkkr.sprkkr.sprkkr_atoms.sprkkratoms method)": [[1266, "ase2sprkkr.sprkkr.sprkkr_atoms.SPRKKRAtoms.compute_sites_symmetry"]], "copy() (ase2sprkkr.sprkkr.sprkkr_atoms.sprkkratoms method)": [[1266, "ase2sprkkr.sprkkr.sprkkr_atoms.SPRKKRAtoms.copy"]], "extend() (ase2sprkkr.sprkkr.sprkkr_atoms.sprkkratoms method)": [[1266, "ase2sprkkr.sprkkr.sprkkr_atoms.SPRKKRAtoms.extend"]], "has_potential() (ase2sprkkr.sprkkr.sprkkr_atoms.sprkkratoms method)": [[1266, "ase2sprkkr.sprkkr.sprkkr_atoms.SPRKKRAtoms.has_potential"]], "potential (ase2sprkkr.sprkkr.sprkkr_atoms.sprkkratoms property)": [[1266, "ase2sprkkr.sprkkr.sprkkr_atoms.SPRKKRAtoms.potential"]], "promote_ase_atoms() (ase2sprkkr.sprkkr.sprkkr_atoms.sprkkratoms static method)": [[1266, "ase2sprkkr.sprkkr.sprkkr_atoms.SPRKKRAtoms.promote_ase_atoms"]], "regions (ase2sprkkr.sprkkr.sprkkr_atoms.sprkkratoms property)": [[1266, "ase2sprkkr.sprkkr.sprkkr_atoms.SPRKKRAtoms.regions"]], "remove_region() (ase2sprkkr.sprkkr.sprkkr_atoms.sprkkratoms method)": [[1266, "ase2sprkkr.sprkkr.sprkkr_atoms.SPRKKRAtoms.remove_region"]], "reset_sprkkr_potential() (ase2sprkkr.sprkkr.sprkkr_atoms.sprkkratoms method)": [[1266, "ase2sprkkr.sprkkr.sprkkr_atoms.SPRKKRAtoms.reset_sprkkr_potential"]], "set_regions() (ase2sprkkr.sprkkr.sprkkr_atoms.sprkkratoms method)": [[1266, "ase2sprkkr.sprkkr.sprkkr_atoms.SPRKKRAtoms.set_regions"]], "set_sites() (ase2sprkkr.sprkkr.sprkkr_atoms.sprkkratoms method)": [[1266, "ase2sprkkr.sprkkr.sprkkr_atoms.SPRKKRAtoms.set_sites"]], "sites (ase2sprkkr.sprkkr.sprkkr_atoms.sprkkratoms property)": [[1266, "ase2sprkkr.sprkkr.sprkkr_atoms.SPRKKRAtoms.sites"]], "sites_array_name (ase2sprkkr.sprkkr.sprkkr_atoms.sprkkratoms attribute)": [[1266, "ase2sprkkr.sprkkr.sprkkr_atoms.SPRKKRAtoms.sites_array_name"]], "spacegroup_info (ase2sprkkr.sprkkr.sprkkr_atoms.sprkkratoms property)": [[1266, "ase2sprkkr.sprkkr.sprkkr_atoms.SPRKKRAtoms.spacegroup_info"]], "symmetry (ase2sprkkr.sprkkr.sprkkr_atoms.sprkkratoms property)": [[1266, "ase2sprkkr.sprkkr.sprkkr_atoms.SPRKKRAtoms.symmetry"]], "ase2sprkkr.sprkkr.sprkkr_grammar_types": [[1267, "module-ase2sprkkr.sprkkr.sprkkr_grammar_types"]], "atomictype (class in ase2sprkkr.sprkkr.sprkkr_grammar_types)": [[1268, "ase2sprkkr.sprkkr.sprkkr_grammar_types.AtomicType"]], "i (ase2sprkkr.sprkkr.sprkkr_grammar_types.atomictype attribute)": [[1268, "ase2sprkkr.sprkkr.sprkkr_grammar_types.AtomicType.I"]], "__init__() (ase2sprkkr.sprkkr.sprkkr_grammar_types.atomictype method)": [[1268, "ase2sprkkr.sprkkr.sprkkr_grammar_types.AtomicType.__init__"]], "allowed_types (ase2sprkkr.sprkkr.sprkkr_grammar_types.atomictype attribute)": [[1268, "ase2sprkkr.sprkkr.sprkkr_grammar_types.AtomicType.allowed_types"]], "datatype (ase2sprkkr.sprkkr.sprkkr_grammar_types.atomictype attribute)": [[1268, "ase2sprkkr.sprkkr.sprkkr_grammar_types.AtomicType.datatype"]], "set_from_atoms() (ase2sprkkr.sprkkr.sprkkr_grammar_types.atomictype method)": [[1268, "ase2sprkkr.sprkkr.sprkkr_grammar_types.AtomicType.set_from_atoms"]], "type (ase2sprkkr.sprkkr.sprkkr_grammar_types.atomictype attribute)": [[1268, "ase2sprkkr.sprkkr.sprkkr_grammar_types.AtomicType.type"]], "i (ase2sprkkr.sprkkr.sprkkr_grammar_types.site attribute)": [[1269, "ase2sprkkr.sprkkr.sprkkr_grammar_types.Site.I"]], "site (class in ase2sprkkr.sprkkr.sprkkr_grammar_types)": [[1269, "ase2sprkkr.sprkkr.sprkkr_grammar_types.Site"]], "__init__() (ase2sprkkr.sprkkr.sprkkr_grammar_types.site method)": [[1269, "ase2sprkkr.sprkkr.sprkkr_grammar_types.Site.__init__"]], "allowed_types (ase2sprkkr.sprkkr.sprkkr_grammar_types.site attribute)": [[1269, "ase2sprkkr.sprkkr.sprkkr_grammar_types.Site.allowed_types"]], "datatype (ase2sprkkr.sprkkr.sprkkr_grammar_types.site attribute)": [[1269, "ase2sprkkr.sprkkr.sprkkr_grammar_types.Site.datatype"]], "set_from_atoms() (ase2sprkkr.sprkkr.sprkkr_grammar_types.site method)": [[1269, "ase2sprkkr.sprkkr.sprkkr_grammar_types.Site.set_from_atoms"]], "type (ase2sprkkr.sprkkr.sprkkr_grammar_types.site attribute)": [[1269, "ase2sprkkr.sprkkr.sprkkr_grammar_types.Site.type"]], "ase2sprkkr.sprkkr.structure": [[1270, "module-ase2sprkkr.sprkkr.structure"]], "atomdata (class in ase2sprkkr.sprkkr.structure)": [[1271, "ase2sprkkr.sprkkr.structure.AtomData"]], "__init__() (ase2sprkkr.sprkkr.structure.atomdata method)": [[1271, "ase2sprkkr.sprkkr.structure.AtomData.__init__"]], "from_text() (ase2sprkkr.sprkkr.structure.atomdata static method)": [[1271, "ase2sprkkr.sprkkr.structure.AtomData.from_text"]], "get_symbol() (ase2sprkkr.sprkkr.structure.atomdata method)": [[1271, "ase2sprkkr.sprkkr.structure.AtomData.get_symbol"]], "layerdata (class in ase2sprkkr.sprkkr.structure)": [[1272, "ase2sprkkr.sprkkr.structure.LayerData"]], "__init__() (ase2sprkkr.sprkkr.structure.layerdata method)": [[1272, "ase2sprkkr.sprkkr.structure.LayerData.__init__"]], "floatjm() (in module ase2sprkkr.sprkkr.structure)": [[1273, "ase2sprkkr.sprkkr.structure.floatjm"]], "structure_file_to_atoms() (in module ase2sprkkr.sprkkr.structure)": [[1274, "ase2sprkkr.sprkkr.structure.structure_file_to_atoms"]], "ase2sprkkr.sprkkr.sysfile": [[1275, "module-ase2sprkkr.sprkkr.sysfile"]], "sysfile_content() (in module ase2sprkkr.sprkkr.sysfile)": [[1276, "ase2sprkkr.sprkkr.sysfile.sysfile_content"]], "write_sysfile() (in module ase2sprkkr.sprkkr.sysfile)": [[1277, "ase2sprkkr.sprkkr.sysfile.write_sysfile"]], "ase2sprkkr.sprkkr.test": [[1278, "module-ase2sprkkr.sprkkr.test"]], "ase2sprkkr.sprkkr.test.init_tests": [[1279, "module-ase2sprkkr.sprkkr.test.init_tests"]], "testcase (class in ase2sprkkr.sprkkr.test.init_tests)": [[1280, "ase2sprkkr.sprkkr.test.init_tests.TestCase"]], "__init__() (ase2sprkkr.sprkkr.test.init_tests.testcase method)": [[1280, "ase2sprkkr.sprkkr.test.init_tests.TestCase.__init__"]], "_calc_args (ase2sprkkr.sprkkr.test.init_tests.testcase attribute)": [[1280, "ase2sprkkr.sprkkr.test.init_tests.TestCase._calc_args"]], "_print_output (ase2sprkkr.sprkkr.test.init_tests.testcase attribute)": [[1280, "ase2sprkkr.sprkkr.test.init_tests.TestCase._print_output"]], "almost_equal_precision() (ase2sprkkr.sprkkr.test.init_tests.testcase class method)": [[1280, "ase2sprkkr.sprkkr.test.init_tests.TestCase.almost_equal_precision"]], "assertalmostequal() (ase2sprkkr.sprkkr.test.init_tests.testcase method)": [[1280, "ase2sprkkr.sprkkr.test.init_tests.TestCase.assertAlmostEqual"]], "assertasyncequal() (ase2sprkkr.sprkkr.test.init_tests.testcase method)": [[1280, "ase2sprkkr.sprkkr.test.init_tests.TestCase.assertAsyncEqual"]], "assertasyncraises() (ase2sprkkr.sprkkr.test.init_tests.testcase method)": [[1280, "ase2sprkkr.sprkkr.test.init_tests.TestCase.assertAsyncRaises"]], "assertequal() (ase2sprkkr.sprkkr.test.init_tests.testcase method)": [[1280, "ase2sprkkr.sprkkr.test.init_tests.TestCase.assertEqual"]], "assertfalse() (ase2sprkkr.sprkkr.test.init_tests.testcase method)": [[1280, "ase2sprkkr.sprkkr.test.init_tests.TestCase.assertFalse"]], "assertisnone() (ase2sprkkr.sprkkr.test.init_tests.testcase method)": [[1280, "ase2sprkkr.sprkkr.test.init_tests.TestCase.assertIsNone"]], "assertnotequal() (ase2sprkkr.sprkkr.test.init_tests.testcase method)": [[1280, "ase2sprkkr.sprkkr.test.init_tests.TestCase.assertNotEqual"]], "assertraises() (ase2sprkkr.sprkkr.test.init_tests.testcase method)": [[1280, "ase2sprkkr.sprkkr.test.init_tests.TestCase.assertRaises"]], "asserttrue() (ase2sprkkr.sprkkr.test.init_tests.testcase method)": [[1280, "ase2sprkkr.sprkkr.test.init_tests.TestCase.assertTrue"]], "calc_args() (ase2sprkkr.sprkkr.test.init_tests.testcase class method)": [[1280, "ase2sprkkr.sprkkr.test.init_tests.TestCase.calc_args"]], "runasync() (ase2sprkkr.sprkkr.test.init_tests.testcase static method)": [[1280, "ase2sprkkr.sprkkr.test.init_tests.TestCase.runAsync"]], "run_sprkkr() (ase2sprkkr.sprkkr.test.init_tests.testcase method)": [[1280, "ase2sprkkr.sprkkr.test.init_tests.TestCase.run_sprkkr"]], "temporary_dir() (ase2sprkkr.sprkkr.test.init_tests.testcase method)": [[1280, "ase2sprkkr.sprkkr.test.init_tests.TestCase.temporary_dir"]], "arr_testfce() (in module ase2sprkkr.sprkkr.test.init_tests)": [[1281, "ase2sprkkr.sprkkr.test.init_tests.arr_testfce"]], "assertdictequal() (in module ase2sprkkr.sprkkr.test.init_tests)": [[1282, "ase2sprkkr.sprkkr.test.init_tests.assertDictEqual"]], "assertlistequal() (in module ase2sprkkr.sprkkr.test.init_tests)": [[1283, "ase2sprkkr.sprkkr.test.init_tests.assertListEqual"]], "assert_almost_equals() (in module ase2sprkkr.sprkkr.test.init_tests)": [[1284, "ase2sprkkr.sprkkr.test.init_tests.assert_almost_equals"]], "assert_equals() (in module ase2sprkkr.sprkkr.test.init_tests)": [[1285, "ase2sprkkr.sprkkr.test.init_tests.assert_equals"]], "__init__() (ase2sprkkr.sprkkr.test.init_tests.extdict method)": [[1286, "ase2sprkkr.sprkkr.test.init_tests.extdict.__init__"]], "extdict (class in ase2sprkkr.sprkkr.test.init_tests)": [[1286, "ase2sprkkr.sprkkr.test.init_tests.extdict"]], "testfce() (in module ase2sprkkr.sprkkr.test.init_tests)": [[1287, "ase2sprkkr.sprkkr.test.init_tests.testfce"]], "ase2sprkkr.sprkkr.test.test_arpes": [[1288, "module-ase2sprkkr.sprkkr.test.test_arpes"]], "testcalculator (class in ase2sprkkr.sprkkr.test.test_arpes)": [[1289, "ase2sprkkr.sprkkr.test.test_arpes.TestCalculator"]], "__init__() (ase2sprkkr.sprkkr.test.test_arpes.testcalculator method)": [[1289, "ase2sprkkr.sprkkr.test.test_arpes.TestCalculator.__init__"]], "test_run() (ase2sprkkr.sprkkr.test.test_arpes.testcalculator method)": [[1289, "ase2sprkkr.sprkkr.test.test_arpes.TestCalculator.test_run"]], "ase2sprkkr.sprkkr.test.test_build": [[1290, "module-ase2sprkkr.sprkkr.test.test_build"]], "testbuild (class in ase2sprkkr.sprkkr.test.test_build)": [[1291, "ase2sprkkr.sprkkr.test.test_build.TestBuild"]], "__init__() (ase2sprkkr.sprkkr.test.test_build.testbuild method)": [[1291, "ase2sprkkr.sprkkr.test.test_build.TestBuild.__init__"]], "test() (ase2sprkkr.sprkkr.test.test_build.testbuild method)": [[1291, "ase2sprkkr.sprkkr.test.test_build.TestBuild.test"]], "ase2sprkkr.sprkkr.test.test_calculator": [[1292, "module-ase2sprkkr.sprkkr.test.test_calculator"]], "testcalculator (class in ase2sprkkr.sprkkr.test.test_calculator)": [[1293, "ase2sprkkr.sprkkr.test.test_calculator.TestCalculator"]], "__init__() (ase2sprkkr.sprkkr.test.test_calculator.testcalculator method)": [[1293, "ase2sprkkr.sprkkr.test.test_calculator.TestCalculator.__init__"]], "test_2d() (ase2sprkkr.sprkkr.test.test_calculator.testcalculator method)": [[1293, "ase2sprkkr.sprkkr.test.test_calculator.TestCalculator.test_2D"]], "test_calculator() (ase2sprkkr.sprkkr.test.test_calculator.testcalculator method)": [[1293, "ase2sprkkr.sprkkr.test.test_calculator.TestCalculator.test_calculator"]], "test_phagen() (ase2sprkkr.sprkkr.test.test_calculator.testcalculator method)": [[1293, "ase2sprkkr.sprkkr.test.test_calculator.TestCalculator.test_phagen"]], "test_run() (ase2sprkkr.sprkkr.test.test_calculator.testcalculator method)": [[1293, "ase2sprkkr.sprkkr.test.test_calculator.TestCalculator.test_run"]], "_fast_atoms() (in module ase2sprkkr.sprkkr.test.test_calculator)": [[1294, "ase2sprkkr.sprkkr.test.test_calculator._fast_atoms"]], "ase2sprkkr.sprkkr.test.test_occupation": [[1295, "module-ase2sprkkr.sprkkr.test.test_occupation"]], "__init__() (ase2sprkkr.sprkkr.test.test_occupation.test method)": [[1296, "ase2sprkkr.sprkkr.test.test_occupation.test.__init__"]], "test (class in ase2sprkkr.sprkkr.test.test_occupation)": [[1296, "ase2sprkkr.sprkkr.test.test_occupation.test"]], "test() (ase2sprkkr.sprkkr.test.test_occupation.test method)": [[1296, "ase2sprkkr.sprkkr.test.test_occupation.test.test"]], "ase2sprkkr.sprkkr.test.test_sites": [[1297, "module-ase2sprkkr.sprkkr.test.test_sites"]], "testsites (class in ase2sprkkr.sprkkr.test.test_sites)": [[1298, "ase2sprkkr.sprkkr.test.test_sites.TestSites"]], "__init__() (ase2sprkkr.sprkkr.test.test_sites.testsites method)": [[1298, "ase2sprkkr.sprkkr.test.test_sites.TestSites.__init__"]], "test_adding() (ase2sprkkr.sprkkr.test.test_sites.testsites method)": [[1298, "ase2sprkkr.sprkkr.test.test_sites.TestSites.test_adding"]], "test_charge() (ase2sprkkr.sprkkr.test.test_sites.testsites method)": [[1298, "ase2sprkkr.sprkkr.test.test_sites.TestSites.test_charge"]], "test_occupancy() (ase2sprkkr.sprkkr.test.test_sites.testsites method)": [[1298, "ase2sprkkr.sprkkr.test.test_sites.TestSites.test_occupancy"]], "test_potential() (ase2sprkkr.sprkkr.test.test_sites.testsites method)": [[1298, "ase2sprkkr.sprkkr.test.test_sites.TestSites.test_potential"]], "test_vacuum() (ase2sprkkr.sprkkr.test.test_sites.testsites method)": [[1298, "ase2sprkkr.sprkkr.test.test_sites.TestSites.test_vacuum"]], "ase2sprkkr.sprkkr.test.test_sprkkr_atoms": [[1299, "module-ase2sprkkr.sprkkr.test.test_sprkkr_atoms"]], "testsprkkratoms (class in ase2sprkkr.sprkkr.test.test_sprkkr_atoms)": [[1300, "ase2sprkkr.sprkkr.test.test_sprkkr_atoms.TestSPRKKRAtoms"]], "__init__() (ase2sprkkr.sprkkr.test.test_sprkkr_atoms.testsprkkratoms method)": [[1300, "ase2sprkkr.sprkkr.test.test_sprkkr_atoms.TestSPRKKRAtoms.__init__"]], "test_atoms() (ase2sprkkr.sprkkr.test.test_sprkkr_atoms.testsprkkratoms method)": [[1300, "ase2sprkkr.sprkkr.test.test_sprkkr_atoms.TestSPRKKRAtoms.test_atoms"]], "test_extend() (ase2sprkkr.sprkkr.test.test_sprkkr_atoms.testsprkkratoms method)": [[1300, "ase2sprkkr.sprkkr.test.test_sprkkr_atoms.TestSPRKKRAtoms.test_extend"]], "test_occupancy() (ase2sprkkr.sprkkr.test.test_sprkkr_atoms.testsprkkratoms method)": [[1300, "ase2sprkkr.sprkkr.test.test_sprkkr_atoms.TestSPRKKRAtoms.test_occupancy"]], "test_symmetry() (ase2sprkkr.sprkkr.test.test_sprkkr_atoms.testsprkkratoms method)": [[1300, "ase2sprkkr.sprkkr.test.test_sprkkr_atoms.TestSPRKKRAtoms.test_symmetry"]], "ase2sprkkr.sprkkr.test.test_sysfile": [[1301, "module-ase2sprkkr.sprkkr.test.test_sysfile"]], "testsysfile (class in ase2sprkkr.sprkkr.test.test_sysfile)": [[1302, "ase2sprkkr.sprkkr.test.test_sysfile.TestSysfile"]], "__init__() (ase2sprkkr.sprkkr.test.test_sysfile.testsysfile method)": [[1302, "ase2sprkkr.sprkkr.test.test_sysfile.TestSysfile.__init__"]], "test() (ase2sprkkr.sprkkr.test.test_sysfile.testsysfile method)": [[1302, "ase2sprkkr.sprkkr.test.test_sysfile.TestSysfile.test"]], "ase2sprkkr.tools": [[1303, "module-ase2sprkkr.tools"]], "ase2sprkkr.tools.ase2sprkkr": [[1304, "module-ase2sprkkr.tools.ase2sprkkr"]], "run() (in module ase2sprkkr.tools.ase2sprkkr)": [[1305, "ase2sprkkr.tools.ase2sprkkr.run"]], "ase2sprkkr.tools.commands": [[1306, "module-ase2sprkkr.tools.commands"]], "ase2sprkkr.tools.commands.config": [[1307, "module-ase2sprkkr.tools.commands.config"]], "default_content() (in module ase2sprkkr.tools.commands.config)": [[1308, "ase2sprkkr.tools.commands.config.default_content"]], "parser() (in module ase2sprkkr.tools.commands.config)": [[1309, "ase2sprkkr.tools.commands.config.parser"]], "run() (in module ase2sprkkr.tools.commands.config)": [[1310, "ase2sprkkr.tools.commands.config.run"]], "ase2sprkkr.tools.commands.examples": [[1311, "module-ase2sprkkr.tools.commands.examples"]], "parser() (in module ase2sprkkr.tools.commands.examples)": [[1312, "ase2sprkkr.tools.commands.examples.parser"]], "run() (in module ase2sprkkr.tools.commands.examples)": [[1313, "ase2sprkkr.tools.commands.examples.run"]], "ase2sprkkr.tools.commands.info": [[1314, "module-ase2sprkkr.tools.commands.info"]], "default_options (in module ase2sprkkr.tools.commands.info)": [[1315, "ase2sprkkr.tools.commands.info.default_options"]], "description (in module ase2sprkkr.tools.commands.info)": [[1316, "ase2sprkkr.tools.commands.info.description"]], "parser() (in module ase2sprkkr.tools.commands.info)": [[1317, "ase2sprkkr.tools.commands.info.parser"]], "run() (in module ase2sprkkr.tools.commands.info)": [[1318, "ase2sprkkr.tools.commands.info.run"]], "ase2sprkkr.tools.commands.nomad": [[1319, "module-ase2sprkkr.tools.commands.nomad"]], "authenticate() (in module ase2sprkkr.tools.commands.nomad)": [[1320, "ase2sprkkr.tools.commands.nomad.authenticate"]], "gather_files() (in module ase2sprkkr.tools.commands.nomad)": [[1321, "ase2sprkkr.tools.commands.nomad.gather_files"]], "get_token() (in module ase2sprkkr.tools.commands.nomad)": [[1322, "ase2sprkkr.tools.commands.nomad.get_token"]], "parser() (in module ase2sprkkr.tools.commands.nomad)": [[1323, "ase2sprkkr.tools.commands.nomad.parser"]], "retrieve_token() (in module ase2sprkkr.tools.commands.nomad)": [[1324, "ase2sprkkr.tools.commands.nomad.retrieve_token"]], "run() (in module ase2sprkkr.tools.commands.nomad)": [[1325, "ase2sprkkr.tools.commands.nomad.run"]], "token() (in module ase2sprkkr.tools.commands.nomad)": [[1326, "ase2sprkkr.tools.commands.nomad.token"]], "upload() (in module ase2sprkkr.tools.commands.nomad)": [[1327, "ase2sprkkr.tools.commands.nomad.upload"]], "zipp() (in module ase2sprkkr.tools.commands.nomad)": [[1328, "ase2sprkkr.tools.commands.nomad.zipp"]], "ase2sprkkr.tools.commands.plot": [[1329, "module-ase2sprkkr.tools.commands.plot"]], "parser() (in module ase2sprkkr.tools.commands.plot)": [[1330, "ase2sprkkr.tools.commands.plot.parser"]], "run() (in module ase2sprkkr.tools.commands.plot)": [[1331, "ase2sprkkr.tools.commands.plot.run"]], "ase2sprkkr.tools.commands.run": [[1332, "module-ase2sprkkr.tools.commands.run"]], "parser() (in module ase2sprkkr.tools.commands.run)": [[1333, "ase2sprkkr.tools.commands.run.parser"]], "run() (in module ase2sprkkr.tools.commands.run)": [[1334, "ase2sprkkr.tools.commands.run.run"]], "ase2sprkkr.tools.commands.show_structure": [[1335, "module-ase2sprkkr.tools.commands.show_structure"]], "parser() (in module ase2sprkkr.tools.commands.show_structure)": [[1336, "ase2sprkkr.tools.commands.show_structure.parser"]], "run() (in module ase2sprkkr.tools.commands.show_structure)": [[1337, "ase2sprkkr.tools.commands.show_structure.run"]], "ase2sprkkr.tools.commands.test": [[1338, "module-ase2sprkkr.tools.commands.test"]], "parser() (in module ase2sprkkr.tools.commands.test)": [[1339, "ase2sprkkr.tools.commands.test.parser"]], "run() (in module ase2sprkkr.tools.commands.test)": [[1340, "ase2sprkkr.tools.commands.test.run"]], "ase2sprkkr.tools.shared": [[1341, "module-ase2sprkkr.tools.shared"]], "main() (in module ase2sprkkr.tools.shared)": [[1342, "ase2sprkkr.tools.shared.main"]], "ase2sprkkr.tools.test": [[1343, "module-ase2sprkkr.tools.test"]], "ase2sprkkr.tools.test.init_tests": [[1344, "module-ase2sprkkr.tools.test.init_tests"]], "testcase (class in ase2sprkkr.tools.test.init_tests)": [[1345, "ase2sprkkr.tools.test.init_tests.TestCase"]], "__init__() (ase2sprkkr.tools.test.init_tests.testcase method)": [[1345, "ase2sprkkr.tools.test.init_tests.TestCase.__init__"]], "_calc_args (ase2sprkkr.tools.test.init_tests.testcase attribute)": [[1345, "ase2sprkkr.tools.test.init_tests.TestCase._calc_args"]], "_print_output (ase2sprkkr.tools.test.init_tests.testcase attribute)": [[1345, "ase2sprkkr.tools.test.init_tests.TestCase._print_output"]], "almost_equal_precision() (ase2sprkkr.tools.test.init_tests.testcase class method)": [[1345, "ase2sprkkr.tools.test.init_tests.TestCase.almost_equal_precision"]], "assertalmostequal() (ase2sprkkr.tools.test.init_tests.testcase method)": [[1345, "ase2sprkkr.tools.test.init_tests.TestCase.assertAlmostEqual"]], "assertasyncequal() (ase2sprkkr.tools.test.init_tests.testcase method)": [[1345, "ase2sprkkr.tools.test.init_tests.TestCase.assertAsyncEqual"]], "assertasyncraises() (ase2sprkkr.tools.test.init_tests.testcase method)": [[1345, "ase2sprkkr.tools.test.init_tests.TestCase.assertAsyncRaises"]], "assertequal() (ase2sprkkr.tools.test.init_tests.testcase method)": [[1345, "ase2sprkkr.tools.test.init_tests.TestCase.assertEqual"]], "assertfalse() (ase2sprkkr.tools.test.init_tests.testcase method)": [[1345, "ase2sprkkr.tools.test.init_tests.TestCase.assertFalse"]], "assertisnone() (ase2sprkkr.tools.test.init_tests.testcase method)": [[1345, "ase2sprkkr.tools.test.init_tests.TestCase.assertIsNone"]], "assertnotequal() (ase2sprkkr.tools.test.init_tests.testcase method)": [[1345, "ase2sprkkr.tools.test.init_tests.TestCase.assertNotEqual"]], "assertraises() (ase2sprkkr.tools.test.init_tests.testcase method)": [[1345, "ase2sprkkr.tools.test.init_tests.TestCase.assertRaises"]], "asserttrue() (ase2sprkkr.tools.test.init_tests.testcase method)": [[1345, "ase2sprkkr.tools.test.init_tests.TestCase.assertTrue"]], "calc_args() (ase2sprkkr.tools.test.init_tests.testcase class method)": [[1345, "ase2sprkkr.tools.test.init_tests.TestCase.calc_args"]], "runasync() (ase2sprkkr.tools.test.init_tests.testcase static method)": [[1345, "ase2sprkkr.tools.test.init_tests.TestCase.runAsync"]], "run_sprkkr() (ase2sprkkr.tools.test.init_tests.testcase method)": [[1345, "ase2sprkkr.tools.test.init_tests.TestCase.run_sprkkr"]], "temporary_dir() (ase2sprkkr.tools.test.init_tests.testcase method)": [[1345, "ase2sprkkr.tools.test.init_tests.TestCase.temporary_dir"]], "arr_testfce() (in module ase2sprkkr.tools.test.init_tests)": [[1346, "ase2sprkkr.tools.test.init_tests.arr_testfce"]], "assertdictequal() (in module ase2sprkkr.tools.test.init_tests)": [[1347, "ase2sprkkr.tools.test.init_tests.assertDictEqual"]], "assertlistequal() (in module ase2sprkkr.tools.test.init_tests)": [[1348, "ase2sprkkr.tools.test.init_tests.assertListEqual"]], "assert_almost_equals() (in module ase2sprkkr.tools.test.init_tests)": [[1349, "ase2sprkkr.tools.test.init_tests.assert_almost_equals"]], "assert_equals() (in module ase2sprkkr.tools.test.init_tests)": [[1350, "ase2sprkkr.tools.test.init_tests.assert_equals"]], "__init__() (ase2sprkkr.tools.test.init_tests.extdict method)": [[1351, "ase2sprkkr.tools.test.init_tests.extdict.__init__"]], "extdict (class in ase2sprkkr.tools.test.init_tests)": [[1351, "ase2sprkkr.tools.test.init_tests.extdict"]], "testfce() (in module ase2sprkkr.tools.test.init_tests)": [[1352, "ase2sprkkr.tools.test.init_tests.testfce"]], "ase2sprkkr.tools.test.test_tools": [[1353, "module-ase2sprkkr.tools.test.test_tools"]], "testcommon (class in ase2sprkkr.tools.test.test_tools)": [[1354, "ase2sprkkr.tools.test.test_tools.TestCommon"]], "__init__() (ase2sprkkr.tools.test.test_tools.testcommon method)": [[1354, "ase2sprkkr.tools.test.test_tools.TestCommon.__init__"]], "test() (ase2sprkkr.tools.test.test_tools.testcommon method)": [[1354, "ase2sprkkr.tools.test.test_tools.TestCommon.test"]], "ase2sprkkr.version": [[1355, "module-ase2sprkkr.version"]], "ase2sprkkr.visualise": [[1356, "module-ase2sprkkr.visualise"]], "ase2sprkkr.visualise.plot": [[1357, "module-ase2sprkkr.visualise.plot"]], "multiplot (class in ase2sprkkr.visualise.plot)": [[1358, "ase2sprkkr.visualise.plot.Multiplot"]], "__init__() (ase2sprkkr.visualise.plot.multiplot method)": [[1358, "ase2sprkkr.visualise.plot.Multiplot.__init__"]], "finish() (ase2sprkkr.visualise.plot.multiplot method)": [[1358, "ase2sprkkr.visualise.plot.Multiplot.finish"]], "get_new_axis() (ase2sprkkr.visualise.plot.multiplot method)": [[1358, "ase2sprkkr.visualise.plot.Multiplot.get_new_axis"]], "plot() (ase2sprkkr.visualise.plot.multiplot method)": [[1358, "ase2sprkkr.visualise.plot.Multiplot.plot"]], "auto_range() (in module ase2sprkkr.visualise.plot)": [[1359, "ase2sprkkr.visualise.plot.auto_range"]], "change_default_kwargs() (in module ase2sprkkr.visualise.plot)": [[1360, "ase2sprkkr.visualise.plot.change_default_kwargs"]], "colormesh() (in module ase2sprkkr.visualise.plot)": [[1361, "ase2sprkkr.visualise.plot.colormesh"]], "combine_colormaps() (in module ase2sprkkr.visualise.plot)": [[1362, "ase2sprkkr.visualise.plot.combine_colormaps"]], "combined_colormap() (in module ase2sprkkr.visualise.plot)": [[1363, "ase2sprkkr.visualise.plot.combined_colormap"]], "create_rc_context() (in module ase2sprkkr.visualise.plot)": [[1364, "ase2sprkkr.visualise.plot.create_rc_context"]], "finish_plot() (in module ase2sprkkr.visualise.plot)": [[1365, "ase2sprkkr.visualise.plot.finish_plot"]], "normalize_rc_params() (in module ase2sprkkr.visualise.plot)": [[1366, "ase2sprkkr.visualise.plot.normalize_rc_params"]], "plotting_function() (in module ase2sprkkr.visualise.plot)": [[1367, "ase2sprkkr.visualise.plot.plotting_function"]], "set_up_common_plot() (in module ase2sprkkr.visualise.plot)": [[1368, "ase2sprkkr.visualise.plot.set_up_common_plot"]], "single_plot() (in module ase2sprkkr.visualise.plot)": [[1369, "ase2sprkkr.visualise.plot.single_plot"]]}})